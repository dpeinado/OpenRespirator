

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 09 09:43:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,inline
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,inline
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1,inline
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1,inline
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1,inline
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,inline
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,inline
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1,inline
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1,inline
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1,inline
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1,inline
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1,inline
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1,inline
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1,inline
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1,inline
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1,inline
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1,inline
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1,inline
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1,inline
   239                           	psect	text217,global,reloc=2,class=CODE,delta=1,inline
   240                           	psect	text218,global,reloc=2,class=CODE,delta=1,inline
   241                           	psect	text219,global,reloc=2,class=CODE,delta=1
   242                           	psect	text220,global,reloc=2,class=CODE,delta=1
   243                           	psect	text221,global,reloc=2,class=CODE,delta=1
   244                           	psect	text222,global,reloc=2,class=CODE,delta=1
   245                           	psect	text223,global,reloc=2,class=CODE,delta=1
   246                           	psect	text224,global,reloc=2,class=CODE,delta=1
   247                           	psect	text225,global,reloc=2,class=CODE,delta=1
   248                           	psect	text226,global,reloc=2,class=CODE,delta=1
   249                           	psect	text227,global,reloc=2,class=CODE,delta=1
   250                           	psect	text228,global,reloc=2,class=CODE,delta=1
   251                           	psect	text229,global,reloc=2,class=CODE,delta=1
   252                           	psect	text230,global,reloc=2,class=CODE,delta=1
   253                           	psect	text231,global,reloc=2,class=CODE,delta=1
   254                           	psect	text232,global,reloc=2,class=CODE,delta=1
   255                           	psect	text233,global,reloc=2,class=CODE,delta=1
   256                           	psect	text234,global,reloc=2,class=CODE,delta=1
   257                           	psect	text235,global,reloc=2,class=CODE,delta=1
   258                           	psect	text236,global,reloc=2,class=CODE,delta=1
   259                           	psect	text237,global,reloc=2,class=CODE,delta=1
   260                           	psect	text238,global,reloc=2,class=CODE,delta=1
   261                           	psect	text239,global,reloc=2,class=CODE,delta=1
   262                           	psect	text240,global,reloc=2,class=CODE,delta=1
   263                           	psect	text241,global,reloc=2,class=CODE,delta=1
   264                           	psect	text242,global,reloc=2,class=CODE,delta=1
   265                           	psect	text243,global,reloc=2,class=CODE,delta=1
   266                           	psect	text244,global,reloc=2,class=CODE,delta=1
   267                           	psect	text245,global,reloc=2,class=CODE,delta=1
   268                           	psect	text246,global,reloc=2,class=CODE,delta=1
   269                           	psect	text247,global,reloc=2,class=CODE,delta=1
   270                           	psect	text248,global,reloc=2,class=CODE,delta=1
   271                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   272                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   273                           	psect	text249,global,reloc=2,class=CODE,delta=1
   274                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   275  0000                     
   276                           ; Version 2.10
   277                           ; Generated 31/07/2019 GMT
   278                           ; 
   279                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   280                           ; All rights reserved.
   281                           ; 
   282                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   283                           ; 
   284                           ; Redistribution and use in source and binary forms, with or without modification, are
   285                           ; permitted provided that the following conditions are met:
   286                           ; 
   287                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   288                           ;        conditions and the following disclaimer.
   289                           ; 
   290                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   291                           ;        of conditions and the following disclaimer in the documentation and/or other
   292                           ;        materials provided with the distribution.
   293                           ; 
   294                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   295                           ;        software without specific prior written permission.
   296                           ; 
   297                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   298                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   299                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   300                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   301                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   302                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   303                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   304                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   305                           ; 
   306                           ; 
   307                           ; Code-generator required, PIC18F46K42 Definitions
   308                           ; 
   309                           ; SFR Addresses
   310  0000                     
   311 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   312  0000                     
   313 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   314  0000                     
   315 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   316  0000                     
   317                           	psect	idataBANK1
   318  00A7AE                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for _mainPSensCal
   322  00A7AE  00A4               	dw	164
   323                           
   324                           ;initializer for _LowVAlarm
   325  00A7B0  22                 	db	34
   326                           
   327                           ;initializer for _VentMode
   328  00A7B1  01                 	db	1
   329                           
   330                           ;initializer for _BdTrig
   331  00A7B2  02                 	db	2
   332                           
   333                           ;initializer for _PEEP
   334  00A7B3  0F                 	db	15
   335                           
   336                           ;initializer for _IP
   337  00A7B4  1E                 	db	30
   338                           
   339                           ;initializer for _BPM
   340  00A7B5  14                 	db	20
   341                           
   342                           ;initializer for _HighVAlarm
   343  00A7B6  2E                 	db	46
   344                           
   345                           ;initializer for _MaxV
   346  00A7B7  28                 	db	40
   347                           
   348                           ;initializer for _MaxP
   349  00A7B8  28                 	db	40
   350                           
   351                           	psect	idataBANK2
   352  00A532                     __pidataBANK2:
   353                           	opt callstack 0
   354                           
   355                           ;initializer for setCursor@F16920
   356  00A532  0000               	dw	0
   357  00A534  0040               	dw	64
   358  00A536  0014               	dw	20
   359  00A538  0054               	dw	84
   360                           
   361                           ;initializer for _keysD
   362  00A53A  01                 	db	1
   363  00A53B  02                 	db	2
   364  00A53C  03                 	db	3
   365  00A53D  04                 	db	4
   366  00A53E  05                 	db	5
   367  00A53F  07                 	db	7
   368                           
   369                           ;initializer for _keysC
   370  00A540  04                 	db	4
   371  00A541  05                 	db	5
   372  00A542  06                 	db	6
   373  00A543  07                 	db	7
   374  00A544  02                 	db	2
   375                           
   376                           ;initializer for _auxPSensCal
   377  00A545  03C2               	dw	962
   378                           
   379                           	psect	mediumconst
   380  00FA50                     __pmediumconst:
   381                           	opt callstack 0
   382  00FA50  00                 	db	0
   383  00FA51                     _fsmStateTable:
   384                           	opt callstack 0
   385  00FA51  7E                 	db	low _I2C2_DO_IDLE
   386  00FA52  A7                 	db	high _I2C2_DO_IDLE
   387  00FA53  9C                 	db	low _I2C2_DO_SEND_ADR_READ
   388  00FA54  A1                 	db	high _I2C2_DO_SEND_ADR_READ
   389  00FA55  7A                 	db	low _I2C2_DO_SEND_ADR_WRITE
   390  00FA56  A4                 	db	high _I2C2_DO_SEND_ADR_WRITE
   391  00FA57  8E                 	db	low _I2C2_DO_TX
   392  00FA58  7D                 	db	high _I2C2_DO_TX
   393  00FA59  B8                 	db	low _I2C2_DO_RX
   394  00FA5A  8A                 	db	high _I2C2_DO_RX
   395  00FA5B  18                 	db	low _I2C2_DO_TX_EMPTY
   396  00FA5C  8F                 	db	high _I2C2_DO_TX_EMPTY
   397  00FA5D  36                 	db	low _I2C2_DO_RX_EMPTY
   398  00FA5E  8A                 	db	high _I2C2_DO_RX_EMPTY
   399  00FA5F  0A                 	db	low _I2C2_DO_SEND_RESTART_READ
   400  00FA60  A7                 	db	high _I2C2_DO_SEND_RESTART_READ
   401  00FA61  92                 	db	low _I2C2_DO_SEND_RESTART_WRITE
   402  00FA62  A8                 	db	high _I2C2_DO_SEND_RESTART_WRITE
   403  00FA63  8E                 	db	low _I2C2_DO_SEND_RESTART
   404  00FA64  A8                 	db	high _I2C2_DO_SEND_RESTART
   405  00FA65  40                 	db	low _I2C2_DO_SEND_STOP
   406  00FA66  A4                 	db	high _I2C2_DO_SEND_STOP
   407  00FA67  20                 	db	low _I2C2_DO_RX_ACK
   408  00FA68  A8                 	db	high _I2C2_DO_RX_ACK
   409  00FA69  18                 	db	low _I2C2_DO_TX_ACK
   410  00FA6A  A8                 	db	high _I2C2_DO_TX_ACK
   411  00FA6B  FC                 	db	low _I2C2_DO_RX_NACK_STOP
   412  00FA6C  A6                 	db	high _I2C2_DO_RX_NACK_STOP
   413  00FA6D  10                 	db	low _I2C2_DO_RX_NACK_RESTART
   414  00FA6E  A8                 	db	high _I2C2_DO_RX_NACK_RESTART
   415  00FA6F  32                 	db	low _I2C2_DO_RESET
   416  00FA70  A6                 	db	high _I2C2_DO_RESET
   417  00FA71  14                 	db	low _I2C2_DO_ADDRESS_NACK
   418  00FA72  94                 	db	high _I2C2_DO_ADDRESS_NACK
   419  00FA73  F8                 	db	low _I2C2_DO_BUS_COLLISION
   420  00FA74  90                 	db	high _I2C2_DO_BUS_COLLISION
   421  00FA75  22                 	db	low _I2C2_DO_BUS_ERROR
   422  00FA76  A6                 	db	high _I2C2_DO_BUS_ERROR
   423  00FA77                     __end_of_fsmStateTable:
   424                           	opt callstack 0
   425  00FA77                     STR_15:
   426                           
   427                           ; BSR set to: 2
   428  00FA77  50                 	db	80	;'P'
   429  00FA78  49                 	db	73	;'I'
   430  00FA79  2D                 	db	45
   431  00FA7A  45                 	db	69	;'E'
   432  00FA7B  4E                 	db	78	;'N'
   433  00FA7C  44                 	db	68	;'D'
   434  00FA7D  20                 	db	32
   435  00FA7E  54                 	db	84	;'T'
   436  00FA7F  20                 	db	32
   437  00FA80  25                 	db	37
   438  00FA81  64                 	db	100	;'d'
   439  00FA82  20                 	db	32
   440  00FA83  2D                 	db	45
   441  00FA84  20                 	db	32
   442  00FA85  50                 	db	80	;'P'
   443  00FA86  69                 	db	105	;'i'
   444  00FA87  20                 	db	32
   445  00FA88  25                 	db	37
   446  00FA89  64                 	db	100	;'d'
   447  00FA8A  20                 	db	32
   448  00FA8B  50                 	db	80	;'P'
   449  00FA8C  63                 	db	99	;'c'
   450  00FA8D  20                 	db	32
   451  00FA8E  25                 	db	37
   452  00FA8F  64                 	db	100	;'d'
   453  00FA90  20                 	db	32
   454  00FA91  56                 	db	86	;'V'
   455  00FA92  6F                 	db	111	;'o'
   456  00FA93  6C                 	db	108	;'l'
   457  00FA94  20                 	db	32
   458  00FA95  25                 	db	37
   459  00FA96  64                 	db	100	;'d'
   460  00FA97  20                 	db	32
   461  00FA98  50                 	db	80	;'P'
   462  00FA99  4D                 	db	77	;'M'
   463  00FA9A  61                 	db	97	;'a'
   464  00FA9B  78                 	db	120	;'x'
   465  00FA9C  20                 	db	32
   466  00FA9D  25                 	db	37
   467  00FA9E  64                 	db	100	;'d'
   468  00FA9F  20                 	db	32
   469  00FAA0  56                 	db	86	;'V'
   470  00FAA1  4C                 	db	76	;'L'
   471  00FAA2  20                 	db	32
   472  00FAA3  25                 	db	37
   473  00FAA4  64                 	db	100	;'d'
   474  00FAA5  20                 	db	32
   475  00FAA6  56                 	db	86	;'V'
   476  00FAA7  4F                 	db	79	;'O'
   477  00FAA8  53                 	db	83	;'S'
   478  00FAA9  20                 	db	32
   479  00FAAA  25                 	db	37
   480  00FAAB  64                 	db	100	;'d'
   481  00FAAC  20                 	db	32
   482  00FAAD  50                 	db	80	;'P'
   483  00FAAE  4F                 	db	79	;'O'
   484  00FAAF  53                 	db	83	;'S'
   485  00FAB0  20                 	db	32
   486  00FAB1  25                 	db	37
   487  00FAB2  64                 	db	100	;'d'
   488  00FAB3  20                 	db	32
   489  00FAB4  46                 	db	70	;'F'
   490  00FAB5  52                 	db	82	;'R'
   491  00FAB6  20                 	db	32
   492  00FAB7  25                 	db	37
   493  00FAB8  64                 	db	100	;'d'
   494  00FAB9  20                 	db	32
   495  00FABA  55                 	db	85	;'U'
   496  00FABB  56                 	db	86	;'V'
   497  00FABC  20                 	db	32
   498  00FABD  25                 	db	37
   499  00FABE  64                 	db	100	;'d'
   500  00FABF  0A                 	db	10
   501  00FAC0  00                 	db	0
   502  00FAC1                     STR_10:
   503                           
   504                           ; BSR set to: 2
   505  00FAC1  0A                 	db	10
   506  00FAC2  49                 	db	73	;'I'
   507  00FAC3  50                 	db	80	;'P'
   508  00FAC4  2E                 	db	46
   509  00FAC5  20                 	db	32
   510  00FAC6  4D                 	db	77	;'M'
   511  00FAC7  61                 	db	97	;'a'
   512  00FAC8  78                 	db	120	;'x'
   513  00FAC9  56                 	db	86	;'V'
   514  00FACA  20                 	db	32
   515  00FACB  25                 	db	37
   516  00FACC  64                 	db	100	;'d'
   517  00FACD  20                 	db	32
   518  00FACE  45                 	db	69	;'E'
   519  00FACF  42                 	db	66	;'B'
   520  00FAD0  52                 	db	82	;'R'
   521  00FAD1  61                 	db	97	;'a'
   522  00FAD2  74                 	db	116	;'t'
   523  00FAD3  65                 	db	101	;'e'
   524  00FAD4  20                 	db	32
   525  00FAD5  25                 	db	37
   526  00FAD6  64                 	db	100	;'d'
   527  00FAD7  20                 	db	32
   528  00FAD8  53                 	db	83	;'S'
   529  00FAD9  56                 	db	86	;'V'
   530  00FADA  32                 	db	50	;'2'
   531  00FADB  52                 	db	82	;'R'
   532  00FADC  4F                 	db	79	;'O'
   533  00FADD  20                 	db	32
   534  00FADE  25                 	db	37
   535  00FADF  64                 	db	100	;'d'
   536  00FAE0  20                 	db	32
   537  00FAE1  53                 	db	83	;'S'
   538  00FAE2  56                 	db	86	;'V'
   539  00FAE3  32                 	db	50	;'2'
   540  00FAE4  52                 	db	82	;'R'
   541  00FAE5  43                 	db	67	;'C'
   542  00FAE6  20                 	db	32
   543  00FAE7  25                 	db	37
   544  00FAE8  64                 	db	100	;'d'
   545  00FAE9  20                 	db	32
   546  00FAEA  50                 	db	80	;'P'
   547  00FAEB  51                 	db	81	;'Q'
   548  00FAEC  20                 	db	32
   549  00FAED  25                 	db	37
   550  00FAEE  64                 	db	100	;'d'
   551  00FAEF  20                 	db	32
   552  00FAF0  56                 	db	86	;'V'
   553  00FAF1  51                 	db	81	;'Q'
   554  00FAF2  20                 	db	32
   555  00FAF3  25                 	db	37
   556  00FAF4  64                 	db	100	;'d'
   557  00FAF5  2E                 	db	46
   558  00FAF6  0A                 	db	10
   559  00FAF7  00                 	db	0
   560  00FAF8                     STR_13:
   561                           
   562                           ; BSR set to: 2
   563  00FAF8  50                 	db	80	;'P'
   564  00FAF9  49                 	db	73	;'I'
   565  00FAFA  2D                 	db	45
   566  00FAFB  4D                 	db	77	;'M'
   567  00FAFC  45                 	db	69	;'E'
   568  00FAFD  44                 	db	68	;'D'
   569  00FAFE  20                 	db	32
   570  00FAFF  54                 	db	84	;'T'
   571  00FB00  20                 	db	32
   572  00FB01  25                 	db	37
   573  00FB02  64                 	db	100	;'d'
   574  00FB03  20                 	db	32
   575  00FB04  2D                 	db	45
   576  00FB05  20                 	db	32
   577  00FB06  50                 	db	80	;'P'
   578  00FB07  69                 	db	105	;'i'
   579  00FB08  20                 	db	32
   580  00FB09  25                 	db	37
   581  00FB0A  64                 	db	100	;'d'
   582  00FB0B  20                 	db	32
   583  00FB0C  50                 	db	80	;'P'
   584  00FB0D  63                 	db	99	;'c'
   585  00FB0E  20                 	db	32
   586  00FB0F  25                 	db	37
   587  00FB10  64                 	db	100	;'d'
   588  00FB11  20                 	db	32
   589  00FB12  56                 	db	86	;'V'
   590  00FB13  6F                 	db	111	;'o'
   591  00FB14  6C                 	db	108	;'l'
   592  00FB15  20                 	db	32
   593  00FB16  25                 	db	37
   594  00FB17  33                 	db	51	;'3'
   595  00FB18  78                 	db	120	;'x'
   596  00FB19  20                 	db	32
   597  00FB1A  4F                 	db	79	;'O'
   598  00FB1B  53                 	db	83	;'S'
   599  00FB1C  20                 	db	32
   600  00FB1D  25                 	db	37
   601  00FB1E  64                 	db	100	;'d'
   602  00FB1F  20                 	db	32
   603  00FB20  52                 	db	82	;'R'
   604  00FB21  46                 	db	70	;'F'
   605  00FB22  20                 	db	32
   606  00FB23  25                 	db	37
   607  00FB24  64                 	db	100	;'d'
   608  00FB25  0A                 	db	10
   609  00FB26  00                 	db	0
   610  00FB27                     STR_24:
   611                           
   612                           ; BSR set to: 2
   613  00FB27  50                 	db	80	;'P'
   614  00FB28  45                 	db	69	;'E'
   615  00FB29  20                 	db	32
   616  00FB2A  4F                 	db	79	;'O'
   617  00FB2B  53                 	db	83	;'S'
   618  00FB2C  43                 	db	67	;'C'
   619  00FB2D  20                 	db	32
   620  00FB2E  54                 	db	84	;'T'
   621  00FB2F  20                 	db	32
   622  00FB30  25                 	db	37
   623  00FB31  64                 	db	100	;'d'
   624  00FB32  20                 	db	32
   625  00FB33  2D                 	db	45
   626  00FB34  20                 	db	32
   627  00FB35  50                 	db	80	;'P'
   628  00FB36  69                 	db	105	;'i'
   629  00FB37  20                 	db	32
   630  00FB38  25                 	db	37
   631  00FB39  64                 	db	100	;'d'
   632  00FB3A  20                 	db	32
   633  00FB3B  50                 	db	80	;'P'
   634  00FB3C  30                 	db	48	;'0'
   635  00FB3D  20                 	db	32
   636  00FB3E  25                 	db	37
   637  00FB3F  64                 	db	100	;'d'
   638  00FB40  20                 	db	32
   639  00FB41  50                 	db	80	;'P'
   640  00FB42  65                 	db	101	;'e'
   641  00FB43  65                 	db	101	;'e'
   642  00FB44  70                 	db	112	;'p'
   643  00FB45  45                 	db	69	;'E'
   644  00FB46  20                 	db	32
   645  00FB47  25                 	db	37
   646  00FB48  64                 	db	100	;'d'
   647  00FB49  20                 	db	32
   648  00FB4A  50                 	db	80	;'P'
   649  00FB4B  65                 	db	101	;'e'
   650  00FB4C  65                 	db	101	;'e'
   651  00FB4D  70                 	db	112	;'p'
   652  00FB4E  4F                 	db	79	;'O'
   653  00FB4F  73                 	db	115	;'s'
   654  00FB50  63                 	db	99	;'c'
   655  00FB51  20                 	db	32
   656  00FB52  25                 	db	37
   657  00FB53  64                 	db	100	;'d'
   658  00FB54  0A                 	db	10
   659  00FB55  00                 	db	0
   660  00FB56                     STR_27:
   661                           
   662                           ; BSR set to: 2
   663  00FB56  50                 	db	80	;'P'
   664  00FB57  45                 	db	69	;'E'
   665  00FB58  20                 	db	32
   666  00FB59  54                 	db	84	;'T'
   667  00FB5A  20                 	db	32
   668  00FB5B  25                 	db	37
   669  00FB5C  64                 	db	100	;'d'
   670  00FB5D  20                 	db	32
   671  00FB5E  2D                 	db	45
   672  00FB5F  20                 	db	32
   673  00FB60  50                 	db	80	;'P'
   674  00FB61  69                 	db	105	;'i'
   675  00FB62  20                 	db	32
   676  00FB63  25                 	db	37
   677  00FB64  64                 	db	100	;'d'
   678  00FB65  20                 	db	32
   679  00FB66  52                 	db	82	;'R'
   680  00FB67  20                 	db	32
   681  00FB68  25                 	db	37
   682  00FB69  64                 	db	100	;'d'
   683  00FB6A  20                 	db	32
   684  00FB6B  50                 	db	80	;'P'
   685  00FB6C  65                 	db	101	;'e'
   686  00FB6D  70                 	db	112	;'p'
   687  00FB6E  20                 	db	32
   688  00FB6F  25                 	db	37
   689  00FB70  64                 	db	100	;'d'
   690  00FB71  20                 	db	32
   691  00FB72  50                 	db	80	;'P'
   692  00FB73  4F                 	db	79	;'O'
   693  00FB74  53                 	db	83	;'S'
   694  00FB75  20                 	db	32
   695  00FB76  25                 	db	37
   696  00FB77  64                 	db	100	;'d'
   697  00FB78  20                 	db	32
   698  00FB79  50                 	db	80	;'P'
   699  00FB7A  51                 	db	81	;'Q'
   700  00FB7B  20                 	db	32
   701  00FB7C  25                 	db	37
   702  00FB7D  64                 	db	100	;'d'
   703  00FB7E  0A                 	db	10
   704  00FB7F  00                 	db	0
   705  00FB80                     STR_14:
   706                           
   707                           ; BSR set to: 2
   708  00FB80  50                 	db	80	;'P'
   709  00FB81  49                 	db	73	;'I'
   710  00FB82  2D                 	db	45
   711  00FB83  4C                 	db	76	;'L'
   712  00FB84  4F                 	db	79	;'O'
   713  00FB85  57                 	db	87	;'W'
   714  00FB86  20                 	db	32
   715  00FB87  54                 	db	84	;'T'
   716  00FB88  20                 	db	32
   717  00FB89  25                 	db	37
   718  00FB8A  64                 	db	100	;'d'
   719  00FB8B  20                 	db	32
   720  00FB8C  2D                 	db	45
   721  00FB8D  20                 	db	32
   722  00FB8E  50                 	db	80	;'P'
   723  00FB8F  69                 	db	105	;'i'
   724  00FB90  20                 	db	32
   725  00FB91  25                 	db	37
   726  00FB92  64                 	db	100	;'d'
   727  00FB93  20                 	db	32
   728  00FB94  50                 	db	80	;'P'
   729  00FB95  63                 	db	99	;'c'
   730  00FB96  20                 	db	32
   731  00FB97  25                 	db	37
   732  00FB98  64                 	db	100	;'d'
   733  00FB99  20                 	db	32
   734  00FB9A  56                 	db	86	;'V'
   735  00FB9B  6F                 	db	111	;'o'
   736  00FB9C  6C                 	db	108	;'l'
   737  00FB9D  20                 	db	32
   738  00FB9E  25                 	db	37
   739  00FB9F  64                 	db	100	;'d'
   740  00FBA0  20                 	db	32
   741  00FBA1  4F                 	db	79	;'O'
   742  00FBA2  53                 	db	83	;'S'
   743  00FBA3  20                 	db	32
   744  00FBA4  25                 	db	37
   745  00FBA5  64                 	db	100	;'d'
   746  00FBA6  0A                 	db	10
   747  00FBA7  00                 	db	0
   748  00FBA8                     STR_65:
   749                           
   750                           ; BSR set to: 2
   751  00FBA8  4D                 	db	77	;'M'
   752  00FBA9  41                 	db	65	;'A'
   753  00FBAA  49                 	db	73	;'I'
   754  00FBAB  4E                 	db	78	;'N'
   755  00FBAC  20                 	db	32
   756  00FBAD  50                 	db	80	;'P'
   757  00FBAE  52                 	db	82	;'R'
   758  00FBAF  45                 	db	69	;'E'
   759  00FBB0  53                 	db	83	;'S'
   760  00FBB1  53                 	db	83	;'S'
   761  00FBB2  55                 	db	85	;'U'
   762  00FBB3  52                 	db	82	;'R'
   763  00FBB4  45                 	db	69	;'E'
   764  00FBB5  2E                 	db	46
   765  00FBB6  20                 	db	32
   766  00FBB7  4D                 	db	77	;'M'
   767  00FBB8  69                 	db	105	;'i'
   768  00FBB9  6E                 	db	110	;'n'
   769  00FBBA  20                 	db	32
   770  00FBBB  25                 	db	37
   771  00FBBC  64                 	db	100	;'d'
   772  00FBBD  20                 	db	32
   773  00FBBE  4D                 	db	77	;'M'
   774  00FBBF  61                 	db	97	;'a'
   775  00FBC0  78                 	db	120	;'x'
   776  00FBC1  20                 	db	32
   777  00FBC2  25                 	db	37
   778  00FBC3  64                 	db	100	;'d'
   779  00FBC4  20                 	db	32
   780  00FBC5  4D                 	db	77	;'M'
   781  00FBC6  45                 	db	69	;'E'
   782  00FBC7  41                 	db	65	;'A'
   783  00FBC8  4E                 	db	78	;'N'
   784  00FBC9  20                 	db	32
   785  00FBCA  25                 	db	37
   786  00FBCB  64                 	db	100	;'d'
   787  00FBCC  0A                 	db	10
   788  00FBCD  00                 	db	0
   789  00FBCE                     STR_66:
   790                           
   791                           ; BSR set to: 2
   792  00FBCE  41                 	db	65	;'A'
   793  00FBCF  55                 	db	85	;'U'
   794  00FBD0  58                 	db	88	;'X'
   795  00FBD1  20                 	db	32
   796  00FBD2  50                 	db	80	;'P'
   797  00FBD3  52                 	db	82	;'R'
   798  00FBD4  45                 	db	69	;'E'
   799  00FBD5  53                 	db	83	;'S'
   800  00FBD6  53                 	db	83	;'S'
   801  00FBD7  55                 	db	85	;'U'
   802  00FBD8  52                 	db	82	;'R'
   803  00FBD9  45                 	db	69	;'E'
   804  00FBDA  2E                 	db	46
   805  00FBDB  20                 	db	32
   806  00FBDC  4D                 	db	77	;'M'
   807  00FBDD  69                 	db	105	;'i'
   808  00FBDE  6E                 	db	110	;'n'
   809  00FBDF  20                 	db	32
   810  00FBE0  25                 	db	37
   811  00FBE1  64                 	db	100	;'d'
   812  00FBE2  20                 	db	32
   813  00FBE3  4D                 	db	77	;'M'
   814  00FBE4  61                 	db	97	;'a'
   815  00FBE5  78                 	db	120	;'x'
   816  00FBE6  20                 	db	32
   817  00FBE7  25                 	db	37
   818  00FBE8  64                 	db	100	;'d'
   819  00FBE9  20                 	db	32
   820  00FBEA  4D                 	db	77	;'M'
   821  00FBEB  45                 	db	69	;'E'
   822  00FBEC  41                 	db	65	;'A'
   823  00FBED  4E                 	db	78	;'N'
   824  00FBEE  20                 	db	32
   825  00FBEF  25                 	db	37
   826  00FBF0  64                 	db	100	;'d'
   827  00FBF1  0A                 	db	10
   828  00FBF2  00                 	db	0
   829  00FBF3                     STR_25:
   830                           
   831                           ; BSR set to: 2
   832  00FBF3  42                 	db	66	;'B'
   833  00FBF4  44                 	db	68	;'D'
   834  00FBF5  20                 	db	32
   835  00FBF6  56                 	db	86	;'V'
   836  00FBF7  4F                 	db	79	;'O'
   837  00FBF8  20                 	db	32
   838  00FBF9  54                 	db	84	;'T'
   839  00FBFA  20                 	db	32
   840  00FBFB  25                 	db	37
   841  00FBFC  64                 	db	100	;'d'
   842  00FBFD  20                 	db	32
   843  00FBFE  2D                 	db	45
   844  00FBFF  20                 	db	32
   845  00FC00  50                 	db	80	;'P'
   846  00FC01  69                 	db	105	;'i'
   847  00FC02  20                 	db	32
   848  00FC03  25                 	db	37
   849  00FC04  64                 	db	100	;'d'
   850  00FC05  20                 	db	32
   851  00FC06  50                 	db	80	;'P'
   852  00FC07  35                 	db	53	;'5'
   853  00FC08  30                 	db	48	;'0'
   854  00FC09  20                 	db	32
   855  00FC0A  25                 	db	37
   856  00FC0B  64                 	db	100	;'d'
   857  00FC0C  20                 	db	32
   858  00FC0D  50                 	db	80	;'P'
   859  00FC0E  32                 	db	50	;'2'
   860  00FC0F  30                 	db	48	;'0'
   861  00FC10  30                 	db	48	;'0'
   862  00FC11  30                 	db	48	;'0'
   863  00FC12  20                 	db	32
   864  00FC13  25                 	db	37
   865  00FC14  64                 	db	100	;'d'
   866  00FC15  0A                 	db	10
   867  00FC16  00                 	db	0
   868  00FC17                     STR_22:
   869                           
   870                           ; BSR set to: 2
   871  00FC17  50                 	db	80	;'P'
   872  00FC18  45                 	db	69	;'E'
   873  00FC19  49                 	db	73	;'I'
   874  00FC1A  20                 	db	32
   875  00FC1B  65                 	db	101	;'e'
   876  00FC1C  6E                 	db	110	;'n'
   877  00FC1D  64                 	db	100	;'d'
   878  00FC1E  20                 	db	32
   879  00FC1F  54                 	db	84	;'T'
   880  00FC20  20                 	db	32
   881  00FC21  25                 	db	37
   882  00FC22  64                 	db	100	;'d'
   883  00FC23  20                 	db	32
   884  00FC24  2D                 	db	45
   885  00FC25  20                 	db	32
   886  00FC26  50                 	db	80	;'P'
   887  00FC27  69                 	db	105	;'i'
   888  00FC28  20                 	db	32
   889  00FC29  25                 	db	37
   890  00FC2A  64                 	db	100	;'d'
   891  00FC2B  20                 	db	32
   892  00FC2C  50                 	db	80	;'P'
   893  00FC2D  73                 	db	115	;'s'
   894  00FC2E  20                 	db	32
   895  00FC2F  25                 	db	37
   896  00FC30  64                 	db	100	;'d'
   897  00FC31  20                 	db	32
   898  00FC32  4F                 	db	79	;'O'
   899  00FC33  53                 	db	83	;'S'
   900  00FC34  20                 	db	32
   901  00FC35  25                 	db	37
   902  00FC36  64                 	db	100	;'d'
   903  00FC37  0A                 	db	10
   904  00FC38  00                 	db	0
   905  00FC39                     STR_17:
   906                           
   907                           ; BSR set to: 2
   908  00FC39  50                 	db	80	;'P'
   909  00FC3A  49                 	db	73	;'I'
   910  00FC3B  2D                 	db	45
   911  00FC3C  56                 	db	86	;'V'
   912  00FC3D  4F                 	db	79	;'O'
   913  00FC3E  20                 	db	32
   914  00FC3F  54                 	db	84	;'T'
   915  00FC40  20                 	db	32
   916  00FC41  25                 	db	37
   917  00FC42  64                 	db	100	;'d'
   918  00FC43  20                 	db	32
   919  00FC44  2D                 	db	45
   920  00FC45  20                 	db	32
   921  00FC46  50                 	db	80	;'P'
   922  00FC47  69                 	db	105	;'i'
   923  00FC48  20                 	db	32
   924  00FC49  25                 	db	37
   925  00FC4A  64                 	db	100	;'d'
   926  00FC4B  20                 	db	32
   927  00FC4C  50                 	db	80	;'P'
   928  00FC4D  71                 	db	113	;'q'
   929  00FC4E  20                 	db	32
   930  00FC4F  25                 	db	37
   931  00FC50  64                 	db	100	;'d'
   932  00FC51  20                 	db	32
   933  00FC52  56                 	db	86	;'V'
   934  00FC53  4F                 	db	79	;'O'
   935  00FC54  4C                 	db	76	;'L'
   936  00FC55  20                 	db	32
   937  00FC56  25                 	db	37
   938  00FC57  64                 	db	100	;'d'
   939  00FC58  0A                 	db	10
   940  00FC59  00                 	db	0
   941  00FC5A                     STR_67:
   942                           
   943                           ; BSR set to: 2
   944  00FC5A  50                 	db	80	;'P'
   945  00FC5B  52                 	db	82	;'R'
   946  00FC5C  45                 	db	69	;'E'
   947  00FC5D  53                 	db	83	;'S'
   948  00FC5E  53                 	db	83	;'S'
   949  00FC5F  55                 	db	85	;'U'
   950  00FC60  52                 	db	82	;'R'
   951  00FC61  45                 	db	69	;'E'
   952  00FC62  20                 	db	32
   953  00FC63  43                 	db	67	;'C'
   954  00FC64  41                 	db	65	;'A'
   955  00FC65  4C                 	db	76	;'L'
   956  00FC66  49                 	db	73	;'I'
   957  00FC67  42                 	db	66	;'B'
   958  00FC68  52                 	db	82	;'R'
   959  00FC69  41                 	db	65	;'A'
   960  00FC6A  54                 	db	84	;'T'
   961  00FC6B  49                 	db	73	;'I'
   962  00FC6C  4F                 	db	79	;'O'
   963  00FC6D  4E                 	db	78	;'N'
   964  00FC6E  20                 	db	32
   965  00FC6F  45                 	db	69	;'E'
   966  00FC70  52                 	db	82	;'R'
   967  00FC71  52                 	db	82	;'R'
   968  00FC72  4F                 	db	79	;'O'
   969  00FC73  52                 	db	82	;'R'
   970  00FC74  0A                 	db	10
   971  00FC75  00                 	db	0
   972  00FC76                     STR_85:
   973                           
   974                           ; BSR set to: 2
   975  00FC76  56                 	db	86	;'V'
   976  00FC77  44                 	db	68	;'D'
   977  00FC78  44                 	db	68	;'D'
   978  00FC79  20                 	db	32
   979  00FC7A  4D                 	db	77	;'M'
   980  00FC7B  69                 	db	105	;'i'
   981  00FC7C  6E                 	db	110	;'n'
   982  00FC7D  20                 	db	32
   983  00FC7E  25                 	db	37
   984  00FC7F  64                 	db	100	;'d'
   985  00FC80  20                 	db	32
   986  00FC81  4D                 	db	77	;'M'
   987  00FC82  61                 	db	97	;'a'
   988  00FC83  78                 	db	120	;'x'
   989  00FC84  20                 	db	32
   990  00FC85  25                 	db	37
   991  00FC86  64                 	db	100	;'d'
   992  00FC87  20                 	db	32
   993  00FC88  4D                 	db	77	;'M'
   994  00FC89  45                 	db	69	;'E'
   995  00FC8A  41                 	db	65	;'A'
   996  00FC8B  4E                 	db	78	;'N'
   997  00FC8C  20                 	db	32
   998  00FC8D  25                 	db	37
   999  00FC8E  64                 	db	100	;'d'
  1000  00FC8F  0A                 	db	10
  1001  00FC90  00                 	db	0
  1002  00FC91                     STR_1:
  1003                           
  1004                           ; BSR set to: 2
  1005  00FC91  0A                 	db	10
  1006  00FC92  49                 	db	73	;'I'
  1007  00FC93  50                 	db	80	;'P'
  1008  00FC94  4F                 	db	79	;'O'
  1009  00FC95  53                 	db	83	;'S'
  1010  00FC96  20                 	db	32
  1011  00FC97  4C                 	db	76	;'L'
  1012  00FC98  43                 	db	67	;'C'
  1013  00FC99  20                 	db	32
  1014  00FC9A  25                 	db	37
  1015  00FC9B  64                 	db	100	;'d'
  1016  00FC9C  20                 	db	32
  1017  00FC9D  50                 	db	80	;'P'
  1018  00FC9E  6C                 	db	108	;'l'
  1019  00FC9F  61                 	db	97	;'a'
  1020  00FCA0  74                 	db	116	;'t'
  1021  00FCA1  20                 	db	32
  1022  00FCA2  25                 	db	37
  1023  00FCA3  64                 	db	100	;'d'
  1024  00FCA4  20                 	db	32
  1025  00FCA5  46                 	db	70	;'F'
  1026  00FCA6  49                 	db	73	;'I'
  1027  00FCA7  20                 	db	32
  1028  00FCA8  25                 	db	37
  1029  00FCA9  64                 	db	100	;'d'
  1030  00FCAA  0A                 	db	10
  1031  00FCAB  00                 	db	0
  1032  00FCAC                     STR_37:
  1033                           
  1034                           ; BSR set to: 2
  1035  00FCAC  25                 	db	37
  1036  00FCAD  32                 	db	50	;'2'
  1037  00FCAE  64                 	db	100	;'d'
  1038  00FCAF  20                 	db	32
  1039  00FCB0  25                 	db	37
  1040  00FCB1  32                 	db	50	;'2'
  1041  00FCB2  64                 	db	100	;'d'
  1042  00FCB3  20                 	db	32
  1043  00FCB4  25                 	db	37
  1044  00FCB5  32                 	db	50	;'2'
  1045  00FCB6  64                 	db	100	;'d'
  1046  00FCB7  20                 	db	32
  1047  00FCB8  25                 	db	37
  1048  00FCB9  32                 	db	50	;'2'
  1049  00FCBA  64                 	db	100	;'d'
  1050  00FCBB  20                 	db	32
  1051  00FCBC  2D                 	db	45
  1052  00FCBD  2D                 	db	45
  1053  00FCBE  2D                 	db	45
  1054  00FCBF  2D                 	db	45
  1055  00FCC0  00                 	db	0
  1056  00FCC1                     STR_23:
  1057                           
  1058                           ; BSR set to: 2
  1059  00FCC1  50                 	db	80	;'P'
  1060  00FCC2  45                 	db	69	;'E'
  1061  00FCC3  20                 	db	32
  1062  00FCC4  56                 	db	86	;'V'
  1063  00FCC5  43                 	db	67	;'C'
  1064  00FCC6  20                 	db	32
  1065  00FCC7  54                 	db	84	;'T'
  1066  00FCC8  20                 	db	32
  1067  00FCC9  25                 	db	37
  1068  00FCCA  64                 	db	100	;'d'
  1069  00FCCB  20                 	db	32
  1070  00FCCC  2D                 	db	45
  1071  00FCCD  20                 	db	32
  1072  00FCCE  50                 	db	80	;'P'
  1073  00FCCF  69                 	db	105	;'i'
  1074  00FCD0  20                 	db	32
  1075  00FCD1  25                 	db	37
  1076  00FCD2  64                 	db	100	;'d'
  1077  00FCD3  0A                 	db	10
  1078  00FCD4  00                 	db	0
  1079  00FCD5                     STR_16:
  1080                           
  1081                           ; BSR set to: 2
  1082  00FCD5  50                 	db	80	;'P'
  1083  00FCD6  49                 	db	73	;'I'
  1084  00FCD7  2D                 	db	45
  1085  00FCD8  56                 	db	86	;'V'
  1086  00FCD9  43                 	db	67	;'C'
  1087  00FCDA  20                 	db	32
  1088  00FCDB  54                 	db	84	;'T'
  1089  00FCDC  20                 	db	32
  1090  00FCDD  25                 	db	37
  1091  00FCDE  64                 	db	100	;'d'
  1092  00FCDF  20                 	db	32
  1093  00FCE0  2D                 	db	45
  1094  00FCE1  20                 	db	32
  1095  00FCE2  50                 	db	80	;'P'
  1096  00FCE3  69                 	db	105	;'i'
  1097  00FCE4  20                 	db	32
  1098  00FCE5  25                 	db	37
  1099  00FCE6  64                 	db	100	;'d'
  1100  00FCE7  0A                 	db	10
  1101  00FCE8  00                 	db	0
  1102  00FCE9                     STR_26:
  1103                           
  1104                           ; BSR set to: 2
  1105  00FCE9  50                 	db	80	;'P'
  1106  00FCEA  45                 	db	69	;'E'
  1107  00FCEB  20                 	db	32
  1108  00FCEC  56                 	db	86	;'V'
  1109  00FCED  4F                 	db	79	;'O'
  1110  00FCEE  20                 	db	32
  1111  00FCEF  54                 	db	84	;'T'
  1112  00FCF0  20                 	db	32
  1113  00FCF1  25                 	db	37
  1114  00FCF2  64                 	db	100	;'d'
  1115  00FCF3  20                 	db	32
  1116  00FCF4  2D                 	db	45
  1117  00FCF5  20                 	db	32
  1118  00FCF6  50                 	db	80	;'P'
  1119  00FCF7  69                 	db	105	;'i'
  1120  00FCF8  20                 	db	32
  1121  00FCF9  25                 	db	37
  1122  00FCFA  64                 	db	100	;'d'
  1123  00FCFB  0A                 	db	10
  1124  00FCFC  00                 	db	0
  1125  00FCFD                     STR_4:
  1126                           
  1127                           ; BSR set to: 2
  1128  00FCFD  57                 	db	87	;'W'
  1129  00FCFE  61                 	db	97	;'a'
  1130  00FCFF  69                 	db	105	;'i'
  1131  00FD00  74                 	db	116	;'t'
  1132  00FD01  20                 	db	32
  1133  00FD02  66                 	db	102	;'f'
  1134  00FD03  6F                 	db	111	;'o'
  1135  00FD04  72                 	db	114	;'r'
  1136  00FD05  20                 	db	32
  1137  00FD06  6B                 	db	107	;'k'
  1138  00FD07  65                 	db	101	;'e'
  1139  00FD08  79                 	db	121	;'y'
  1140  00FD09  20                 	db	32
  1141  00FD0A  70                 	db	112	;'p'
  1142  00FD0B  72                 	db	114	;'r'
  1143  00FD0C  65                 	db	101	;'e'
  1144  00FD0D  73                 	db	115	;'s'
  1145  00FD0E  73                 	db	115	;'s'
  1146  00FD0F  0A                 	db	10
  1147  00FD10  00                 	db	0
  1148  00FD11                     STR_68:
  1149                           
  1150                           ; BSR set to: 2
  1151  00FD11  56                 	db	86	;'V'
  1152  00FD12  41                 	db	65	;'A'
  1153  00FD13  4C                 	db	76	;'L'
  1154  00FD14  56                 	db	86	;'V'
  1155  00FD15  45                 	db	69	;'E'
  1156  00FD16  20                 	db	32
  1157  00FD17  43                 	db	67	;'C'
  1158  00FD18  48                 	db	72	;'H'
  1159  00FD19  45                 	db	69	;'E'
  1160  00FD1A  43                 	db	67	;'C'
  1161  00FD1B  4B                 	db	75	;'K'
  1162  00FD1C  20                 	db	32
  1163  00FD1D  45                 	db	69	;'E'
  1164  00FD1E  52                 	db	82	;'R'
  1165  00FD1F  52                 	db	82	;'R'
  1166  00FD20  4F                 	db	79	;'O'
  1167  00FD21  52                 	db	82	;'R'
  1168  00FD22  0A                 	db	10
  1169  00FD23  00                 	db	0
  1170  00FD24                     STR_64:
  1171                           
  1172                           ; BSR set to: 2
  1173  00FD24  4D                 	db	77	;'M'
  1174  00FD25  53                 	db	83	;'S'
  1175  00FD26  3A                 	db	58	;':'
  1176  00FD27  20                 	db	32
  1177  00FD28  25                 	db	37
  1178  00FD29  20                 	db	32
  1179  00FD2A  33                 	db	51	;'3'
  1180  00FD2B  64                 	db	100	;'d'
  1181  00FD2C  20                 	db	32
  1182  00FD2D  41                 	db	65	;'A'
  1183  00FD2E  53                 	db	83	;'S'
  1184  00FD2F  3A                 	db	58	;':'
  1185  00FD30  20                 	db	32
  1186  00FD31  25                 	db	37
  1187  00FD32  20                 	db	32
  1188  00FD33  33                 	db	51	;'3'
  1189  00FD34  64                 	db	100	;'d'
  1190  00FD35  20                 	db	32
  1191  00FD36  00                 	db	0
  1192  00FD37                     STR_51:
  1193                           
  1194                           ; BSR set to: 2
  1195  00FD37  25                 	db	37
  1196  00FD38  31                 	db	49	;'1'
  1197  00FD39  64                 	db	100	;'d'
  1198  00FD3A  20                 	db	32
  1199  00FD3B  20                 	db	32
  1200  00FD3C  20                 	db	32
  1201  00FD3D  20                 	db	32
  1202  00FD3E  20                 	db	32
  1203  00FD3F  20                 	db	32
  1204  00FD40  20                 	db	32
  1205  00FD41  20                 	db	32
  1206  00FD42  20                 	db	32
  1207  00FD43  20                 	db	32
  1208  00FD44  20                 	db	32
  1209  00FD45  20                 	db	32
  1210  00FD46  20                 	db	32
  1211  00FD47  20                 	db	32
  1212  00FD48  20                 	db	32
  1213  00FD49  00                 	db	0
  1214  00FD4A                     STR_38:
  1215                           
  1216                           ; BSR set to: 2
  1217  00FD4A  25                 	db	37
  1218  00FD4B  32                 	db	50	;'2'
  1219  00FD4C  64                 	db	100	;'d'
  1220  00FD4D  20                 	db	32
  1221  00FD4E  25                 	db	37
  1222  00FD4F  32                 	db	50	;'2'
  1223  00FD50  64                 	db	100	;'d'
  1224  00FD51  20                 	db	32
  1225  00FD52  2D                 	db	45
  1226  00FD53  2D                 	db	45
  1227  00FD54  20                 	db	32
  1228  00FD55  25                 	db	37
  1229  00FD56  32                 	db	50	;'2'
  1230  00FD57  64                 	db	100	;'d'
  1231  00FD58  20                 	db	32
  1232  00FD59  25                 	db	37
  1233  00FD5A  34                 	db	52	;'4'
  1234  00FD5B  64                 	db	100	;'d'
  1235  00FD5C  00                 	db	0
  1236  00FD5D                     STR_5:
  1237                           
  1238                           ; BSR set to: 2
  1239  00FD5D  50                 	db	80	;'P'
  1240  00FD5E  52                 	db	82	;'R'
  1241  00FD5F  45                 	db	69	;'E'
  1242  00FD60  53                 	db	83	;'S'
  1243  00FD61  53                 	db	83	;'S'
  1244  00FD62  20                 	db	32
  1245  00FD63  2B                 	db	43
  1246  00FD64  20                 	db	32
  1247  00FD65  54                 	db	84	;'T'
  1248  00FD66  4F                 	db	79	;'O'
  1249  00FD67  20                 	db	32
  1250  00FD68  52                 	db	82	;'R'
  1251  00FD69  45                 	db	69	;'E'
  1252  00FD6A  50                 	db	80	;'P'
  1253  00FD6B  45                 	db	69	;'E'
  1254  00FD6C  41                 	db	65	;'A'
  1255  00FD6D  54                 	db	84	;'T'
  1256  00FD6E  20                 	db	32
  1257  00FD6F  00                 	db	0
  1258  00FD70                     STR_69:
  1259                           
  1260                           ; BSR set to: 2
  1261  00FD70  46                 	db	70	;'F'
  1262  00FD71  4C                 	db	76	;'L'
  1263  00FD72  4F                 	db	79	;'O'
  1264  00FD73  57                 	db	87	;'W'
  1265  00FD74  20                 	db	32
  1266  00FD75  52                 	db	82	;'R'
  1267  00FD76  41                 	db	65	;'A'
  1268  00FD77  54                 	db	84	;'T'
  1269  00FD78  45                 	db	69	;'E'
  1270  00FD79  20                 	db	32
  1271  00FD7A  20                 	db	32
  1272  00FD7B  20                 	db	32
  1273  00FD7C  20                 	db	32
  1274  00FD7D  20                 	db	32
  1275  00FD7E  20                 	db	32
  1276  00FD7F  20                 	db	32
  1277  00FD80  20                 	db	32
  1278  00FD81  00                 	db	0
  1279  00FD82                     STR_95:
  1280                           
  1281                           ; BSR set to: 2
  1282  00FD82  43                 	db	67	;'C'
  1283  00FD83  41                 	db	65	;'A'
  1284  00FD84  4C                 	db	76	;'L'
  1285  00FD85  20                 	db	32
  1286  00FD86  45                 	db	69	;'E'
  1287  00FD87  52                 	db	82	;'R'
  1288  00FD88  52                 	db	82	;'R'
  1289  00FD89  4F                 	db	79	;'O'
  1290  00FD8A  52                 	db	82	;'R'
  1291  00FD8B  2E                 	db	46
  1292  00FD8C  20                 	db	32
  1293  00FD8D  52                 	db	82	;'R'
  1294  00FD8E  45                 	db	69	;'E'
  1295  00FD8F  54                 	db	84	;'T'
  1296  00FD90  52                 	db	82	;'R'
  1297  00FD91  59                 	db	89	;'Y'
  1298  00FD92  20                 	db	32
  1299  00FD93  00                 	db	0
  1300  00FD94                     STR_75:
  1301                           
  1302                           ; BSR set to: 2
  1303  00FD94  46                 	db	70	;'F'
  1304  00FD95  4C                 	db	76	;'L'
  1305  00FD96  4F                 	db	79	;'O'
  1306  00FD97  57                 	db	87	;'W'
  1307  00FD98  3A                 	db	58	;':'
  1308  00FD99  20                 	db	32
  1309  00FD9A  25                 	db	37
  1310  00FD9B  20                 	db	32
  1311  00FD9C  33                 	db	51	;'3'
  1312  00FD9D  64                 	db	100	;'d'
  1313  00FD9E  20                 	db	32
  1314  00FD9F  4C                 	db	76	;'L'
  1315  00FDA0  2F                 	db	47
  1316  00FDA1  6D                 	db	109	;'m'
  1317  00FDA2  69                 	db	105	;'i'
  1318  00FDA3  6E                 	db	110	;'n'
  1319  00FDA4  20                 	db	32
  1320  00FDA5  00                 	db	0
  1321  00FDA6                     STR_78:
  1322                           
  1323                           ; BSR set to: 2
  1324  00FDA6  53                 	db	83	;'S'
  1325  00FDA7  45                 	db	69	;'E'
  1326  00FDA8  4C                 	db	76	;'L'
  1327  00FDA9  46                 	db	70	;'F'
  1328  00FDAA  2D                 	db	45
  1329  00FDAB  54                 	db	84	;'T'
  1330  00FDAC  45                 	db	69	;'E'
  1331  00FDAD  53                 	db	83	;'S'
  1332  00FDAE  54                 	db	84	;'T'
  1333  00FDAF  20                 	db	32
  1334  00FDB0  20                 	db	32
  1335  00FDB1  20                 	db	32
  1336  00FDB2  20                 	db	32
  1337  00FDB3  20                 	db	32
  1338  00FDB4  20                 	db	32
  1339  00FDB5  20                 	db	32
  1340  00FDB6  00                 	db	0
  1341  00FDB7                     STR_89:
  1342                           
  1343                           ; BSR set to: 2
  1344  00FDB7  56                 	db	86	;'V'
  1345  00FDB8  44                 	db	68	;'D'
  1346  00FDB9  44                 	db	68	;'D'
  1347  00FDBA  20                 	db	32
  1348  00FDBB  4E                 	db	78	;'N'
  1349  00FDBC  4F                 	db	79	;'O'
  1350  00FDBD  49                 	db	73	;'I'
  1351  00FDBE  53                 	db	83	;'S'
  1352  00FDBF  59                 	db	89	;'Y'
  1353  00FDC0  20                 	db	32
  1354  00FDC1  20                 	db	32
  1355  00FDC2  20                 	db	32
  1356  00FDC3  20                 	db	32
  1357  00FDC4  20                 	db	32
  1358  00FDC5  20                 	db	32
  1359  00FDC6  20                 	db	32
  1360  00FDC7  00                 	db	0
  1361  00FDC8                     STR_81:
  1362                           
  1363                           ; BSR set to: 2
  1364  00FDC8  41                 	db	65	;'A'
  1365  00FDC9  49                 	db	73	;'I'
  1366  00FDCA  52                 	db	82	;'R'
  1367  00FDCB  57                 	db	87	;'W'
  1368  00FDCC  41                 	db	65	;'A'
  1369  00FDCD  59                 	db	89	;'Y'
  1370  00FDCE  20                 	db	32
  1371  00FDCF  4F                 	db	79	;'O'
  1372  00FDD0  50                 	db	80	;'P'
  1373  00FDD1  45                 	db	69	;'E'
  1374  00FDD2  4E                 	db	78	;'N'
  1375  00FDD3  20                 	db	32
  1376  00FDD4  20                 	db	32
  1377  00FDD5  20                 	db	32
  1378  00FDD6  20                 	db	32
  1379  00FDD7  20                 	db	32
  1380  00FDD8  00                 	db	0
  1381  00FDD9                     STR_79:
  1382                           
  1383                           ; BSR set to: 2
  1384  00FDD9  44                 	db	68	;'D'
  1385  00FDDA  49                 	db	73	;'I'
  1386  00FDDB  53                 	db	83	;'S'
  1387  00FDDC  50                 	db	80	;'P'
  1388  00FDDD  4C                 	db	76	;'L'
  1389  00FDDE  41                 	db	65	;'A'
  1390  00FDDF  59                 	db	89	;'Y'
  1391  00FDE0  20                 	db	32
  1392  00FDE1  54                 	db	84	;'T'
  1393  00FDE2  45                 	db	69	;'E'
  1394  00FDE3  53                 	db	83	;'S'
  1395  00FDE4  54                 	db	84	;'T'
  1396  00FDE5  20                 	db	32
  1397  00FDE6  20                 	db	32
  1398  00FDE7  20                 	db	32
  1399  00FDE8  20                 	db	32
  1400  00FDE9  00                 	db	0
  1401  00FDEA                     STR_76:
  1402                           
  1403                           ; BSR set to: 2
  1404  00FDEA  46                 	db	70	;'F'
  1405  00FDEB  4C                 	db	76	;'L'
  1406  00FDEC  4F                 	db	79	;'O'
  1407  00FDED  57                 	db	87	;'W'
  1408  00FDEE  20                 	db	32
  1409  00FDEF  54                 	db	84	;'T'
  1410  00FDF0  4F                 	db	79	;'O'
  1411  00FDF1  4F                 	db	79	;'O'
  1412  00FDF2  20                 	db	32
  1413  00FDF3  4C                 	db	76	;'L'
  1414  00FDF4  4F                 	db	79	;'O'
  1415  00FDF5  57                 	db	87	;'W'
  1416  00FDF6  20                 	db	32
  1417  00FDF7  20                 	db	32
  1418  00FDF8  20                 	db	32
  1419  00FDF9  20                 	db	32
  1420  00FDFA  00                 	db	0
  1421  00FDFB                     STR_74:
  1422                           
  1423                           ; BSR set to: 2
  1424  00FDFB  46                 	db	70	;'F'
  1425  00FDFC  4C                 	db	76	;'L'
  1426  00FDFD  4F                 	db	79	;'O'
  1427  00FDFE  57                 	db	87	;'W'
  1428  00FDFF  20                 	db	32
  1429  00FE00  54                 	db	84	;'T'
  1430  00FE01  4F                 	db	79	;'O'
  1431  00FE02  4F                 	db	79	;'O'
  1432  00FE03  20                 	db	32
  1433  00FE04  48                 	db	72	;'H'
  1434  00FE05  49                 	db	73	;'I'
  1435  00FE06  47                 	db	71	;'G'
  1436  00FE07  48                 	db	72	;'H'
  1437  00FE08  20                 	db	32
  1438  00FE09  20                 	db	32
  1439  00FE0A  20                 	db	32
  1440  00FE0B  00                 	db	0
  1441  00FE0C                     STR_94:
  1442                           
  1443                           ; BSR set to: 2
  1444  00FE0C  4D                 	db	77	;'M'
  1445  00FE0D  4F                 	db	79	;'O'
  1446  00FE0E  4E                 	db	78	;'N'
  1447  00FE0F  49                 	db	73	;'I'
  1448  00FE10  54                 	db	84	;'T'
  1449  00FE11  4F                 	db	79	;'O'
  1450  00FE12  52                 	db	82	;'R'
  1451  00FE13  20                 	db	32
  1452  00FE14  45                 	db	69	;'E'
  1453  00FE15  52                 	db	82	;'R'
  1454  00FE16  52                 	db	82	;'R'
  1455  00FE17  4F                 	db	79	;'O'
  1456  00FE18  52                 	db	82	;'R'
  1457  00FE19  20                 	db	32
  1458  00FE1A  20                 	db	32
  1459  00FE1B  20                 	db	32
  1460  00FE1C  00                 	db	0
  1461  00FE1D                     STR_86:
  1462                           
  1463                           ; BSR set to: 2
  1464  00FE1D  49                 	db	73	;'I'
  1465  00FE1E  4E                 	db	78	;'N'
  1466  00FE1F  54                 	db	84	;'T'
  1467  00FE20  45                 	db	69	;'E'
  1468  00FE21  52                 	db	82	;'R'
  1469  00FE22  4E                 	db	78	;'N'
  1470  00FE23  41                 	db	65	;'A'
  1471  00FE24  4C                 	db	76	;'L'
  1472  00FE25  20                 	db	32
  1473  00FE26  45                 	db	69	;'E'
  1474  00FE27  52                 	db	82	;'R'
  1475  00FE28  52                 	db	82	;'R'
  1476  00FE29  4F                 	db	79	;'O'
  1477  00FE2A  52                 	db	82	;'R'
  1478  00FE2B  20                 	db	32
  1479  00FE2C  20                 	db	32
  1480  00FE2D  00                 	db	0
  1481  00FE2E                     STR_103:
  1482                           
  1483                           ; BSR set to: 2
  1484  00FE2E  53                 	db	83	;'S'
  1485  00FE2F  56                 	db	86	;'V'
  1486  00FE30  31                 	db	49	;'1'
  1487  00FE31  20                 	db	32
  1488  00FE32  56                 	db	86	;'V'
  1489  00FE33  61                 	db	97	;'a'
  1490  00FE34  6C                 	db	108	;'l'
  1491  00FE35  76                 	db	118	;'v'
  1492  00FE36  65                 	db	101	;'e'
  1493  00FE37  20                 	db	32
  1494  00FE38  65                 	db	101	;'e'
  1495  00FE39  72                 	db	114	;'r'
  1496  00FE3A  72                 	db	114	;'r'
  1497  00FE3B  6F                 	db	111	;'o'
  1498  00FE3C  72                 	db	114	;'r'
  1499  00FE3D  20                 	db	32
  1500  00FE3E  00                 	db	0
  1501  00FE3F                     STR_99:
  1502                           
  1503                           ; BSR set to: 2
  1504  00FE3F  53                 	db	83	;'S'
  1505  00FE40  56                 	db	86	;'V'
  1506  00FE41  32                 	db	50	;'2'
  1507  00FE42  20                 	db	32
  1508  00FE43  56                 	db	86	;'V'
  1509  00FE44  61                 	db	97	;'a'
  1510  00FE45  6C                 	db	108	;'l'
  1511  00FE46  76                 	db	118	;'v'
  1512  00FE47  65                 	db	101	;'e'
  1513  00FE48  20                 	db	32
  1514  00FE49  65                 	db	101	;'e'
  1515  00FE4A  72                 	db	114	;'r'
  1516  00FE4B  72                 	db	114	;'r'
  1517  00FE4C  6F                 	db	111	;'o'
  1518  00FE4D  72                 	db	114	;'r'
  1519  00FE4E  20                 	db	32
  1520  00FE4F  00                 	db	0
  1521  00FE50                     STR_80:
  1522                           
  1523                           ; BSR set to: 2
  1524  00FE50  53                 	db	83	;'S'
  1525  00FE51  45                 	db	69	;'E'
  1526  00FE52  4C                 	db	76	;'L'
  1527  00FE53  46                 	db	70	;'F'
  1528  00FE54  2D                 	db	45
  1529  00FE55  54                 	db	84	;'T'
  1530  00FE56  45                 	db	69	;'E'
  1531  00FE57  53                 	db	83	;'S'
  1532  00FE58  54                 	db	84	;'T'
  1533  00FE59  2E                 	db	46
  1534  00FE5A  20                 	db	32
  1535  00FE5B  4C                 	db	76	;'L'
  1536  00FE5C  45                 	db	69	;'E'
  1537  00FE5D  41                 	db	65	;'A'
  1538  00FE5E  56                 	db	86	;'V'
  1539  00FE5F  45                 	db	69	;'E'
  1540  00FE60  00                 	db	0
  1541  00FE61                     STR_91:
  1542                           
  1543                           ; BSR set to: 2
  1544  00FE61  43                 	db	67	;'C'
  1545  00FE62  41                 	db	65	;'A'
  1546  00FE63  4C                 	db	76	;'L'
  1547  00FE64  20                 	db	32
  1548  00FE65  50                 	db	80	;'P'
  1549  00FE66  52                 	db	82	;'R'
  1550  00FE67  45                 	db	69	;'E'
  1551  00FE68  53                 	db	83	;'S'
  1552  00FE69  53                 	db	83	;'S'
  1553  00FE6A  20                 	db	32
  1554  00FE6B  42                 	db	66	;'B'
  1555  00FE6C  52                 	db	82	;'R'
  1556  00FE6D  45                 	db	69	;'E'
  1557  00FE6E  41                 	db	65	;'A'
  1558  00FE6F  54                 	db	84	;'T'
  1559  00FE70  48                 	db	72	;'H'
  1560  00FE71  00                 	db	0
  1561  00FE72                     STR_87:
  1562                           
  1563                           ; BSR set to: 2
  1564  00FE72  56                 	db	86	;'V'
  1565  00FE73  44                 	db	68	;'D'
  1566  00FE74  44                 	db	68	;'D'
  1567  00FE75  20                 	db	32
  1568  00FE76  4F                 	db	79	;'O'
  1569  00FE77  4F                 	db	79	;'O'
  1570  00FE78  4C                 	db	76	;'L'
  1571  00FE79  3A                 	db	58	;':'
  1572  00FE7A  20                 	db	32
  1573  00FE7B  25                 	db	37
  1574  00FE7C  20                 	db	32
  1575  00FE7D  33                 	db	51	;'3'
  1576  00FE7E  64                 	db	100	;'d'
  1577  00FE7F  20                 	db	32
  1578  00FE80  6D                 	db	109	;'m'
  1579  00FE81  56                 	db	86	;'V'
  1580  00FE82  00                 	db	0
  1581  00FE83                     STR_49:
  1582                           
  1583                           ; BSR set to: 2
  1584  00FE83  25                 	db	37
  1585  00FE84  33                 	db	51	;'3'
  1586  00FE85  64                 	db	100	;'d'
  1587  00FE86  20                 	db	32
  1588  00FE87  25                 	db	37
  1589  00FE88  33                 	db	51	;'3'
  1590  00FE89  64                 	db	100	;'d'
  1591  00FE8A  20                 	db	32
  1592  00FE8B  25                 	db	37
  1593  00FE8C  33                 	db	51	;'3'
  1594  00FE8D  64                 	db	100	;'d'
  1595  00FE8E  20                 	db	32
  1596  00FE8F  20                 	db	32
  1597  00FE90  20                 	db	32
  1598  00FE91  20                 	db	32
  1599  00FE92  20                 	db	32
  1600  00FE93  00                 	db	0
  1601  00FE94                     STR_48:
  1602                           
  1603                           ; BSR set to: 2
  1604  00FE94  50                 	db	80	;'P'
  1605  00FE95  52                 	db	82	;'R'
  1606  00FE96  45                 	db	69	;'E'
  1607  00FE97  53                 	db	83	;'S'
  1608  00FE98  53                 	db	83	;'S'
  1609  00FE99  20                 	db	32
  1610  00FE9A  42                 	db	66	;'B'
  1611  00FE9B  50                 	db	80	;'P'
  1612  00FE9C  4D                 	db	77	;'M'
  1613  00FE9D  20                 	db	32
  1614  00FE9E  54                 	db	84	;'T'
  1615  00FE9F  4F                 	db	79	;'O'
  1616  00FEA0  20                 	db	32
  1617  00FEA1  20                 	db	32
  1618  00FEA2  20                 	db	32
  1619  00FEA3  20                 	db	32
  1620  00FEA4  00                 	db	0
  1621  00FEA5                     STR_36:
  1622                           
  1623                           ; BSR set to: 2
  1624  00FEA5  56                 	db	86	;'V'
  1625  00FEA6  65                 	db	101	;'e'
  1626  00FEA7  6E                 	db	110	;'n'
  1627  00FEA8  74                 	db	116	;'t'
  1628  00FEA9  69                 	db	105	;'i'
  1629  00FEAA  6C                 	db	108	;'l'
  1630  00FEAB  61                 	db	97	;'a'
  1631  00FEAC  74                 	db	116	;'t'
  1632  00FEAD  6F                 	db	111	;'o'
  1633  00FEAE  72                 	db	114	;'r'
  1634  00FEAF  20                 	db	32
  1635  00FEB0  56                 	db	86	;'V'
  1636  00FEB1  31                 	db	49	;'1'
  1637  00FEB2  2E                 	db	46
  1638  00FEB3  30                 	db	48	;'0'
  1639  00FEB4  20                 	db	32
  1640  00FEB5  00                 	db	0
  1641  00FEB6                     STR_39:
  1642                           
  1643                           ; BSR set to: 2
  1644  00FEB6  2D                 	db	45
  1645  00FEB7  2D                 	db	45
  1646  00FEB8  2D                 	db	45
  1647  00FEB9  2D                 	db	45
  1648  00FEBA  4F                 	db	79	;'O'
  1649  00FEBB  46                 	db	70	;'F'
  1650  00FEBC  46                 	db	70	;'F'
  1651  00FEBD  2D                 	db	45
  1652  00FEBE  53                 	db	83	;'S'
  1653  00FEBF  54                 	db	84	;'T'
  1654  00FEC0  41                 	db	65	;'A'
  1655  00FEC1  54                 	db	84	;'T'
  1656  00FEC2  45                 	db	69	;'E'
  1657  00FEC3  2D                 	db	45
  1658  00FEC4  2D                 	db	45
  1659  00FEC5  2D                 	db	45
  1660  00FEC6  00                 	db	0
  1661  00FEC7                     STR_35:
  1662                           
  1663                           ; BSR set to: 2
  1664  00FEC7  4F                 	db	79	;'O'
  1665  00FEC8  78                 	db	120	;'x'
  1666  00FEC9  79                 	db	121	;'y'
  1667  00FECA  56                 	db	86	;'V'
  1668  00FECB  69                 	db	105	;'i'
  1669  00FECC  74                 	db	116	;'t'
  1670  00FECD  61                 	db	97	;'a'
  1671  00FECE  45                 	db	69	;'E'
  1672  00FECF  6D                 	db	109	;'m'
  1673  00FED0  65                 	db	101	;'e'
  1674  00FED1  72                 	db	114	;'r'
  1675  00FED2  67                 	db	103	;'g'
  1676  00FED3  65                 	db	101	;'e'
  1677  00FED4  6E                 	db	110	;'n'
  1678  00FED5  63                 	db	99	;'c'
  1679  00FED6  79                 	db	121	;'y'
  1680  00FED7  00                 	db	0
  1681  00FED8                     STR_2:
  1682                           
  1683                           ; BSR set to: 2
  1684  00FED8  20                 	db	32
  1685  00FED9  20                 	db	32
  1686  00FEDA  20                 	db	32
  1687  00FEDB  20                 	db	32
  1688  00FEDC  20                 	db	32
  1689  00FEDD  20                 	db	32
  1690  00FEDE  20                 	db	32
  1691  00FEDF  20                 	db	32
  1692  00FEE0  20                 	db	32
  1693  00FEE1  20                 	db	32
  1694  00FEE2  20                 	db	32
  1695  00FEE3  20                 	db	32
  1696  00FEE4  20                 	db	32
  1697  00FEE5  20                 	db	32
  1698  00FEE6  20                 	db	32
  1699  00FEE7  20                 	db	32
  1700  00FEE8  00                 	db	0
  1701  00FEE9                     STR_6:
  1702                           
  1703                           ; BSR set to: 2
  1704  00FEE9  50                 	db	80	;'P'
  1705  00FEEA  52                 	db	82	;'R'
  1706  00FEEB  45                 	db	69	;'E'
  1707  00FEEC  53                 	db	83	;'S'
  1708  00FEED  53                 	db	83	;'S'
  1709  00FEEE  20                 	db	32
  1710  00FEEF  2D                 	db	45
  1711  00FEF0  20                 	db	32
  1712  00FEF1  54                 	db	84	;'T'
  1713  00FEF2  4F                 	db	79	;'O'
  1714  00FEF3  20                 	db	32
  1715  00FEF4  45                 	db	69	;'E'
  1716  00FEF5  58                 	db	88	;'X'
  1717  00FEF6  49                 	db	73	;'I'
  1718  00FEF7  54                 	db	84	;'T'
  1719  00FEF8  20                 	db	32
  1720  00FEF9  00                 	db	0
  1721  00FEFA                     STR_19:
  1722                           
  1723                           ; BSR set to: 2
  1724  00FEFA  2D                 	db	45
  1725  00FEFB  3A                 	db	58	;':'
  1726  00FEFC  20                 	db	32
  1727  00FEFD  25                 	db	37
  1728  00FEFE  64                 	db	100	;'d'
  1729  00FEFF  20                 	db	32
  1730  00FF00  25                 	db	37
  1731  00FF01  64                 	db	100	;'d'
  1732  00FF02  20                 	db	32
  1733  00FF03  25                 	db	37
  1734  00FF04  64                 	db	100	;'d'
  1735  00FF05  20                 	db	32
  1736  00FF06  25                 	db	37
  1737  00FF07  64                 	db	100	;'d'
  1738  00FF08  0A                 	db	10
  1739  00FF09  00                 	db	0
  1740  00FF0A                     STR_71:
  1741                           
  1742                           ; BSR set to: 2
  1743  00FF0A  4D                 	db	77	;'M'
  1744  00FF0B  4F                 	db	79	;'O'
  1745  00FF0C  4E                 	db	78	;'N'
  1746  00FF0D  49                 	db	73	;'I'
  1747  00FF0E  54                 	db	84	;'T'
  1748  00FF0F  4F                 	db	79	;'O'
  1749  00FF10  52                 	db	82	;'R'
  1750  00FF11  20                 	db	32
  1751  00FF12  45                 	db	69	;'E'
  1752  00FF13  52                 	db	82	;'R'
  1753  00FF14  52                 	db	82	;'R'
  1754  00FF15  4F                 	db	79	;'O'
  1755  00FF16  52                 	db	82	;'R'
  1756  00FF17  00                 	db	0
  1757  00FF18                     STR_18:
  1758                           
  1759                           ; BSR set to: 2
  1760  00FF18  50                 	db	80	;'P'
  1761  00FF19  49                 	db	73	;'I'
  1762  00FF1A  2D                 	db	45
  1763  00FF1B  4F                 	db	79	;'O'
  1764  00FF1C  53                 	db	83	;'S'
  1765  00FF1D  56                 	db	86	;'V'
  1766  00FF1E  33                 	db	51	;'3'
  1767  00FF1F  20                 	db	32
  1768  00FF20  54                 	db	84	;'T'
  1769  00FF21  20                 	db	32
  1770  00FF22  25                 	db	37
  1771  00FF23  64                 	db	100	;'d'
  1772  00FF24  0A                 	db	10
  1773  00FF25  00                 	db	0
  1774  00FF26                     STR_58:
  1775                           
  1776                           ; BSR set to: 2
  1777  00FF26  4C                 	db	76	;'L'
  1778  00FF27  43                 	db	67	;'C'
  1779  00FF28  20                 	db	32
  1780  00FF29  20                 	db	32
  1781  00FF2A  20                 	db	32
  1782  00FF2B  20                 	db	32
  1783  00FF2C  4C                 	db	76	;'L'
  1784  00FF2D  52                 	db	82	;'R'
  1785  00FF2E  20                 	db	32
  1786  00FF2F  20                 	db	32
  1787  00FF30  20                 	db	32
  1788  00FF31  00                 	db	0
  1789  00FF32                     STR_50:
  1790                           
  1791                           ; BSR set to: 2
  1792  00FF32  25                 	db	37
  1793  00FF33  33                 	db	51	;'3'
  1794  00FF34  64                 	db	100	;'d'
  1795  00FF35  20                 	db	32
  1796  00FF36  20                 	db	32
  1797  00FF37  20                 	db	32
  1798  00FF38  25                 	db	37
  1799  00FF39  33                 	db	51	;'3'
  1800  00FF3A  64                 	db	100	;'d'
  1801  00FF3B  20                 	db	32
  1802  00FF3C  20                 	db	32
  1803  00FF3D  00                 	db	0
  1804  00FF3E                     STR_57:
  1805                           
  1806                           ; BSR set to: 2
  1807  00FF3E  53                 	db	83	;'S'
  1808  00FF3F  32                 	db	50	;'2'
  1809  00FF40  4F                 	db	79	;'O'
  1810  00FF41  20                 	db	32
  1811  00FF42  53                 	db	83	;'S'
  1812  00FF43  32                 	db	50	;'2'
  1813  00FF44  43                 	db	67	;'C'
  1814  00FF45  20                 	db	32
  1815  00FF46  53                 	db	83	;'S'
  1816  00FF47  33                 	db	51	;'3'
  1817  00FF48  43                 	db	67	;'C'
  1818  00FF49  00                 	db	0
  1819  00FF4A                     STR_12:
  1820                           
  1821                           ; BSR set to: 2
  1822  00FF4A  0A                 	db	10
  1823  00FF4B  56                 	db	86	;'V'
  1824  00FF4C  4D                 	db	77	;'M'
  1825  00FF4D  65                 	db	101	;'e'
  1826  00FF4E  64                 	db	100	;'d'
  1827  00FF4F  20                 	db	32
  1828  00FF50  54                 	db	84	;'T'
  1829  00FF51  20                 	db	32
  1830  00FF52  25                 	db	37
  1831  00FF53  64                 	db	100	;'d'
  1832  00FF54  0A                 	db	10
  1833  00FF55  00                 	db	0
  1834  00FF56                     STR_11:
  1835                           
  1836                           ; BSR set to: 2
  1837  00FF56  0A                 	db	10
  1838  00FF57  56                 	db	86	;'V'
  1839  00FF58  4C                 	db	76	;'L'
  1840  00FF59  6F                 	db	111	;'o'
  1841  00FF5A  77                 	db	119	;'w'
  1842  00FF5B  20                 	db	32
  1843  00FF5C  54                 	db	84	;'T'
  1844  00FF5D  20                 	db	32
  1845  00FF5E  25                 	db	37
  1846  00FF5F  64                 	db	100	;'d'
  1847  00FF60  0A                 	db	10
  1848  00FF61  00                 	db	0
  1849  00FF62                     STR_54:
  1850                           
  1851                           ; BSR set to: 2
  1852  00FF62  50                 	db	80	;'P'
  1853  00FF63  4F                 	db	79	;'O'
  1854  00FF64  57                 	db	87	;'W'
  1855  00FF65  45                 	db	69	;'E'
  1856  00FF66  52                 	db	82	;'R'
  1857  00FF67  20                 	db	32
  1858  00FF68  4F                 	db	79	;'O'
  1859  00FF69  46                 	db	70	;'F'
  1860  00FF6A  46                 	db	70	;'F'
  1861  00FF6B  20                 	db	32
  1862  00FF6C  00                 	db	0
  1863  00FF6D                     STR_60:
  1864                           
  1865                           ; BSR set to: 2
  1866  00FF6D  50                 	db	80	;'P'
  1867  00FF6E  57                 	db	87	;'W'
  1868  00FF6F  52                 	db	82	;'R'
  1869  00FF70  20                 	db	32
  1870  00FF71  54                 	db	84	;'T'
  1871  00FF72  4F                 	db	79	;'O'
  1872  00FF73  20                 	db	32
  1873  00FF74  4F                 	db	79	;'O'
  1874  00FF75  4E                 	db	78	;'N'
  1875  00FF76  20                 	db	32
  1876  00FF77  00                 	db	0
  1877  00FF78                     STR_3:
  1878                           
  1879                           ; BSR set to: 2
  1880  00FF78  50                 	db	80	;'P'
  1881  00FF79  4F                 	db	79	;'O'
  1882  00FF7A  57                 	db	87	;'W'
  1883  00FF7B  45                 	db	69	;'E'
  1884  00FF7C  52                 	db	82	;'R'
  1885  00FF7D  2D                 	db	45
  1886  00FF7E  4F                 	db	79	;'O'
  1887  00FF7F  46                 	db	70	;'F'
  1888  00FF80  46                 	db	70	;'F'
  1889  00FF81  0A                 	db	10
  1890  00FF82  00                 	db	0
  1891  00FF83                     STR_104:
  1892                           
  1893                           ; BSR set to: 2
  1894  00FF83  43                 	db	67	;'C'
  1895  00FF84  48                 	db	72	;'H'
  1896  00FF85  4B                 	db	75	;'K'
  1897  00FF86  20                 	db	32
  1898  00FF87  46                 	db	70	;'F'
  1899  00FF88  4C                 	db	76	;'L'
  1900  00FF89  4F                 	db	79	;'O'
  1901  00FF8A  57                 	db	87	;'W'
  1902  00FF8B  0A                 	db	10
  1903  00FF8C  00                 	db	0
  1904  00FF8D                     STR_70:
  1905                           
  1906                           ; BSR set to: 2
  1907  00FF8D  4D                 	db	77	;'M'
  1908  00FF8E  6F                 	db	111	;'o'
  1909  00FF8F  6E                 	db	110	;'n'
  1910  00FF90  20                 	db	32
  1911  00FF91  65                 	db	101	;'e'
  1912  00FF92  72                 	db	114	;'r'
  1913  00FF93  72                 	db	114	;'r'
  1914  00FF94  6F                 	db	111	;'o'
  1915  00FF95  72                 	db	114	;'r'
  1916  00FF96  00                 	db	0
  1917  00FF97                     STR_52:
  1918                           
  1919                           ; BSR set to: 2
  1920  00FF97  25                 	db	37
  1921  00FF98  34                 	db	52	;'4'
  1922  00FF99  64                 	db	100	;'d'
  1923  00FF9A  20                 	db	32
  1924  00FF9B  25                 	db	37
  1925  00FF9C  34                 	db	52	;'4'
  1926  00FF9D  64                 	db	100	;'d'
  1927  00FF9E  20                 	db	32
  1928  00FF9F  20                 	db	32
  1929  00FFA0  00                 	db	0
  1930  00FFA1                     STR_56:
  1931                           
  1932                           ; BSR set to: 2
  1933  00FFA1  20                 	db	32
  1934  00FFA2  20                 	db	32
  1935  00FFA3  20                 	db	32
  1936  00FFA4  20                 	db	32
  1937  00FFA5  20                 	db	32
  1938  00FFA6  20                 	db	32
  1939  00FFA7  42                 	db	66	;'B'
  1940  00FFA8  44                 	db	68	;'D'
  1941  00FFA9  54                 	db	84	;'T'
  1942  00FFAA  00                 	db	0
  1943  00FFAB                     STR_55:
  1944                           
  1945                           ; BSR set to: 2
  1946  00FFAB  56                 	db	86	;'V'
  1947  00FFAC  53                 	db	83	;'S'
  1948  00FFAD  20                 	db	32
  1949  00FFAE  4C                 	db	76	;'L'
  1950  00FFAF  53                 	db	83	;'S'
  1951  00FFB0  20                 	db	32
  1952  00FFB1  42                 	db	66	;'B'
  1953  00FFB2  44                 	db	68	;'D'
  1954  00FFB3  54                 	db	84	;'T'
  1955  00FFB4  00                 	db	0
  1956  00FFB5                     STR_34:
  1957                           
  1958                           ; BSR set to: 2
  1959  00FFB5  4B                 	db	75	;'K'
  1960  00FFB6  45                 	db	69	;'E'
  1961  00FFB7  59                 	db	89	;'Y'
  1962  00FFB8  21                 	db	33
  1963  00FFB9  20                 	db	32
  1964  00FFBA  25                 	db	37
  1965  00FFBB  64                 	db	100	;'d'
  1966  00FFBC  0A                 	db	10
  1967  00FFBD  00                 	db	0
  1968  00FFBE                     STR_28:
  1969                           
  1970                           ; BSR set to: 2
  1971  00FFBE  46                 	db	70	;'F'
  1972  00FFBF  61                 	db	97	;'a'
  1973  00FFC0  74                 	db	116	;'t'
  1974  00FFC1  61                 	db	97	;'a'
  1975  00FFC2  6C                 	db	108	;'l'
  1976  00FFC3  20                 	db	32
  1977  00FFC4  25                 	db	37
  1978  00FFC5  64                 	db	100	;'d'
  1979  00FFC6  00                 	db	0
  1980  00FFC7                     STR_100:
  1981                           
  1982                           ; BSR set to: 2
  1983  00FFC7  43                 	db	67	;'C'
  1984  00FFC8  48                 	db	72	;'H'
  1985  00FFC9  4B                 	db	75	;'K'
  1986  00FFCA  53                 	db	83	;'S'
  1987  00FFCB  56                 	db	86	;'V'
  1988  00FFCC  31                 	db	49	;'1'
  1989  00FFCD  0A                 	db	10
  1990  00FFCE  00                 	db	0
  1991  00FFCF                     STR_96:
  1992                           
  1993                           ; BSR set to: 2
  1994  00FFCF  43                 	db	67	;'C'
  1995  00FFD0  48                 	db	72	;'H'
  1996  00FFD1  4B                 	db	75	;'K'
  1997  00FFD2  53                 	db	83	;'S'
  1998  00FFD3  56                 	db	86	;'V'
  1999  00FFD4  32                 	db	50	;'2'
  2000  00FFD5  0A                 	db	10
  2001  00FFD6  00                 	db	0
  2002  00FFD7                     STR_61:
  2003                           
  2004                           ; BSR set to: 2
  2005  00FFD7  49                 	db	73	;'I'
  2006  00FFD8  32                 	db	50	;'2'
  2007  00FFD9  43                 	db	67	;'C'
  2008  00FFDA  32                 	db	50	;'2'
  2009  00FFDB  20                 	db	32
  2010  00FFDC  45                 	db	69	;'E'
  2011  00FFDD  0A                 	db	10
  2012  00FFDE  00                 	db	0
  2013  00FFDF                     STR_105:
  2014                           
  2015                           ; BSR set to: 2
  2016  00FFDF  20                 	db	32
  2017  00FFE0  4D                 	db	77	;'M'
  2018  00FFE1  2E                 	db	46
  2019  00FFE2  45                 	db	69	;'E'
  2020  00FFE3  52                 	db	82	;'R'
  2021  00FFE4  52                 	db	82	;'R'
  2022  00FFE5  00                 	db	0
  2023  00FFE6                     STR_90:
  2024                           
  2025                           ; BSR set to: 2
  2026  00FFE6  4B                 	db	75	;'K'
  2027  00FFE7  50                 	db	80	;'P'
  2028  00FFE8  20                 	db	32
  2029  00FFE9  25                 	db	37
  2030  00FFEA  64                 	db	100	;'d'
  2031  00FFEB  0A                 	db	10
  2032  00FFEC  00                 	db	0
  2033  00FFED                     STR_92:
  2034                           
  2035                           ; BSR set to: 2
  2036  00FFED  43                 	db	67	;'C'
  2037  00FFEE  41                 	db	65	;'A'
  2038  00FFEF  4C                 	db	76	;'L'
  2039  00FFF0  50                 	db	80	;'P'
  2040  00FFF1  0A                 	db	10
  2041  00FFF2  00                 	db	0
  2042  00FFF3                     STR_20:
  2043                           
  2044                           ; BSR set to: 2
  2045  00FFF3  56                 	db	86	;'V'
  2046  00FFF4  25                 	db	37
  2047  00FFF5  20                 	db	32
  2048  00FFF6  34                 	db	52	;'4'
  2049  00FFF7  64                 	db	100	;'d'
  2050  00FFF8  00                 	db	0
  2051  00FFF9                     STR_21:
  2052                           
  2053                           ; BSR set to: 2
  2054  00FFF9  0A                 	db	10
  2055  00FFFA  45                 	db	69	;'E'
  2056  00FFFB  50                 	db	80	;'P'
  2057  00FFFC  0A                 	db	10
  2058  00FFFD  00                 	db	0
  2059  0000                     
  2060                           ; #config settings
  2061  00FFFE  00                 	db	0	; dummy byte at the end
  2062  0000                     
  2063                           	psect	nvBANK0
  2064  0000D4                     __pnvBANK0:
  2065                           	opt callstack 0
  2066  0000D4                     _uart1TxBufferRemaining:
  2067                           	opt callstack 0
  2068  0000D4                     	ds	1
  2069                           
  2070                           	psect	nvBANK2
  2071  0002F4                     __pnvBANK2:
  2072                           	opt callstack 0
  2073  0002F4                     _TMR6_InterruptHandler:
  2074                           	opt callstack 0
  2075  0002F4                     	ds	2
  2076  0002F6                     _TMR4_InterruptHandler:
  2077                           	opt callstack 0
  2078  0002F6                     	ds	2
  2079  0002F8                     _TMR2_InterruptHandler:
  2080                           	opt callstack 0
  2081  0002F8                     	ds	2
  2082  0002FA                     _UART1_FramingErrorHandler:
  2083                           	opt callstack 0
  2084  0002FA                     	ds	2
  2085  0002FC                     _UART1_TxInterruptHandler:
  2086                           	opt callstack 0
  2087  0002FC                     	ds	2
  2088  0002FE                     _ADCC_ADTI_InterruptHandler:
  2089                           	opt callstack 0
  2090  0002FE                     	ds	2
  2091                           
  2092                           	psect	nvBANK3
  2093  0003C9                     __pnvBANK3:
  2094                           	opt callstack 0
  2095  0003C9                     _timer1ReloadVal:
  2096                           	opt callstack 0
  2097  0003C9                     	ds	2
  2098  0003CB                     _UART1_ErrorHandler:
  2099                           	opt callstack 0
  2100  0003CB                     	ds	2
  2101  0003CD                     _UART1_OverrunErrorHandler:
  2102                           	opt callstack 0
  2103  0003CD                     	ds	2
  2104  0000                     _PMD7	set	14791
  2105  0000                     _PMD6	set	14790
  2106  0000                     _PMD5	set	14789
  2107  0000                     _PMD4	set	14788
  2108  0000                     _PMD3	set	14787
  2109  0000                     _PMD2	set	14786
  2110  0000                     _PMD1	set	14785
  2111  0000                     _PMD0	set	14784
  2112  0000                     _OSCTUNE	set	14814
  2113  0000                     _OSCFRQ	set	14815
  2114  0000                     _OSCEN	set	14813
  2115  0000                     _OSCCON3	set	14811
  2116  0000                     _OSCCON1	set	14809
  2117  0000                     _PIR4bits	set	14756
  2118  0000                     _PIE4bits	set	14740
  2119  0000                     _PIR7bits	set	14759
  2120  0000                     _PIE7bits	set	14743
  2121  0000                     _PIR9bits	set	14761
  2122  0000                     _PIE9bits	set	14745
  2123  0000                     _PIR5bits	set	14757
  2124  0000                     _PIE5bits	set	14741
  2125  0000                     _PIR6bits	set	14758
  2126  0000                     _PIE6bits	set	14742
  2127  0000                     _PIR3bits	set	14755
  2128  0000                     _PIE3bits	set	14739
  2129  0000                     _PIE1bits	set	14737
  2130  0000                     _PIR1bits	set	14753
  2131  0000                     _I2C2SDAPPS	set	15076
  2132  0000                     _T4INPPS	set	15051
  2133  0000                     _U1RXPPS	set	15077
  2134  0000                     _RC1PPS	set	14865
  2135  0000                     _RB2PPS	set	14858
  2136  0000                     _T6INPPS	set	15052
  2137  0000                     _RB1PPS	set	14857
  2138  0000                     _I2C2SCLPPS	set	15075
  2139  0000                     _INLVLE	set	14980
  2140  0000                     _INLVLD	set	14964
  2141  0000                     _INLVLC	set	14948
  2142  0000                     _INLVLB	set	14932
  2143  0000                     _INLVLA	set	14916
  2144  0000                     _SLRCONE	set	14979
  2145  0000                     _SLRCOND	set	14963
  2146  0000                     _SLRCONC	set	14947
  2147  0000                     _SLRCONB	set	14931
  2148  0000                     _SLRCONA	set	14915
  2149  0000                     _ODCOND	set	14962
  2150  0000                     _ODCONC	set	14946
  2151  0000                     _ODCONB	set	14930
  2152  0000                     _ODCONA	set	14914
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _RD1I2C	set	14971
  2155  0000                     _RD0I2C	set	14970
  2156  0000                     _RC4I2C	set	14955
  2157  0000                     _RC3I2C	set	14954
  2158  0000                     _RB2I2C	set	14939
  2159  0000                     _RB1I2C	set	14938
  2160  0000                     _WPUC	set	14945
  2161  0000                     _WPUA	set	14913
  2162  0000                     _WPUB	set	14929
  2163  0000                     _WPUE	set	14977
  2164  0000                     _WPUD	set	14961
  2165  0000                     _ANSELA	set	14912
  2166  0000                     _ANSELE	set	14976
  2167  0000                     _ANSELB	set	14928
  2168  0000                     _ANSELC	set	14944
  2169  0000                     _ANSELD	set	14960
  2170  0000                     _I2C2PIEbits	set	15716
  2171  0000                     _I2C2PIRbits	set	15715
  2172  0000                     _I2C2ERRbits	set	15712
  2173  0000                     _I2C2CON1bits	set	15710
  2174  0000                     _I2C2TXB	set	15701
  2175  0000                     _I2C2RXB	set	15700
  2176  0000                     _I2C2STAT1bits	set	15714
  2177  0000                     _I2C2CON0bits	set	15709
  2178  0000                     _I2C2CNT	set	15702
  2179  0000                     _I2C2ERR	set	15712
  2180  0000                     _I2C2PIE	set	15716
  2181  0000                     _I2C2PIR	set	15715
  2182  0000                     _I2C2CLK	set	15717
  2183  0000                     _I2C2CON2	set	15711
  2184  0000                     _I2C2CON1	set	15710
  2185  0000                     _I2C2CON0	set	15709
  2186  0000                     _U1TXB	set	15850
  2187  0000                     _U1ERRIE	set	15866
  2188  0000                     _U1ERRIR	set	15865
  2189  0000                     _U1UIR	set	15864
  2190  0000                     _U1FIFO	set	15863
  2191  0000                     _U1BRGH	set	15862
  2192  0000                     _U1BRGL	set	15861
  2193  0000                     _U1CON2	set	15860
  2194  0000                     _U1CON1	set	15859
  2195  0000                     _U1CON0	set	15858
  2196  0000                     _U1P3H	set	15857
  2197  0000                     _U1P3L	set	15856
  2198  0000                     _U1P2H	set	15855
  2199  0000                     _U1P2L	set	15854
  2200  0000                     _U1P1H	set	15853
  2201  0000                     _U1P1L	set	15852
  2202  0000                     _FVRCON	set	16065
  2203  0000                     _ADFLTRL	set	16102
  2204  0000                     _ADFLTRH	set	16103
  2205  0000                     _ADCON0bits	set	16120
  2206  0000                     _ADCON0	set	16120
  2207  0000                     _ADCLK	set	16127
  2208  0000                     _ADACT	set	16126
  2209  0000                     _ADREF	set	16125
  2210  0000                     _ADSTAT	set	16124
  2211  0000                     _ADCON3	set	16123
  2212  0000                     _ADCON2	set	16122
  2213  0000                     _ADCON1	set	16121
  2214  0000                     _ADPREH	set	16119
  2215  0000                     _ADPREL	set	16118
  2216  0000                     _ADCAP	set	16117
  2217  0000                     _ADACQH	set	16116
  2218  0000                     _ADACQL	set	16115
  2219  0000                     _ADPCH	set	16113
  2220  0000                     _ADRPT	set	16108
  2221  0000                     _ADACCU	set	16106
  2222  0000                     _ADSTPTH	set	16101
  2223  0000                     _ADSTPTL	set	16100
  2224  0000                     _ADUTHH	set	16097
  2225  0000                     _ADUTHL	set	16096
  2226  0000                     _ADLTHH	set	16095
  2227  0000                     _ADLTHL	set	16094
  2228  0000                     _LATBbits	set	16315
  2229  0000                     _PORTC	set	16332
  2230  0000                     _PORTD	set	16333
  2231  0000                     _LATDbits	set	16317
  2232  0000                     _LATCbits	set	16316
  2233  0000                     _LATAbits	set	16314
  2234  0000                     _T6CONbits	set	16276
  2235  0000                     _T6CON	set	16276
  2236  0000                     _T6TMR	set	16274
  2237  0000                     _T6PR	set	16275
  2238  0000                     _T6RST	set	16279
  2239  0000                     _T6HLT	set	16277
  2240  0000                     _T6CLKCON	set	16278
  2241  0000                     _T4CONbits	set	16288
  2242  0000                     _T4CON	set	16288
  2243  0000                     _T4TMR	set	16286
  2244  0000                     _T4PR	set	16287
  2245  0000                     _T4RST	set	16291
  2246  0000                     _T4HLT	set	16289
  2247  0000                     _T4CLKCON	set	16290
  2248  0000                     _T2CONbits	set	16300
  2249  0000                     _T2CON	set	16300
  2250  0000                     _T2TMR	set	16298
  2251  0000                     _T2PR	set	16299
  2252  0000                     _T2RST	set	16303
  2253  0000                     _T2HLT	set	16301
  2254  0000                     _T2CLKCON	set	16302
  2255  0000                     _T0CON0bits	set	16312
  2256  0000                     _T0CON0	set	16312
  2257  0000                     _TMR0L	set	16310
  2258  0000                     _TMR0H	set	16311
  2259  0000                     _T0CON1	set	16313
  2260  0000                     _T1CONbits	set	16306
  2261  0000                     _T1CON	set	16306
  2262  0000                     _TMR1L	set	16304
  2263  0000                     _TMR1H	set	16305
  2264  0000                     _T1CLK	set	16309
  2265  0000                     _T1GATE	set	16308
  2266  0000                     _T1GCON	set	16307
  2267  0000                     _TRISD	set	16325
  2268  0000                     _TRISC	set	16324
  2269  0000                     _TRISB	set	16323
  2270  0000                     _TRISA	set	16322
  2271  0000                     _TRISE	set	16326
  2272  0000                     _LATC	set	16316
  2273  0000                     _LATB	set	16315
  2274  0000                     _LATA	set	16314
  2275  0000                     _LATD	set	16317
  2276  0000                     _LATE	set	16318
  2277  0000                     _INTCON0bits	set	16338
  2278                           
  2279                           	psect	cinit
  2280  0089B0                     __pcinit:
  2281                           	opt callstack 0
  2282  0089B0                     start_initialization:
  2283                           	opt callstack 0
  2284  0089B0                     __initialization:
  2285                           	opt callstack 0
  2286                           
  2287                           ; Initialize objects allocated to BANK2 (21 bytes)
  2288                           ; load TBLPTR registers with __pidataBANK2
  2289  0089B0  0E32               	movlw	low __pidataBANK2
  2290  0089B2  6EF6               	movwf	tblptrl,c
  2291  0089B4  0EA5               	movlw	high __pidataBANK2
  2292  0089B6  6EF7               	movwf	tblptrh,c
  2293  0089B8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2294  0089BA  6EF8               	movwf	tblptru,c
  2295  0089BC  EE00  F2DF         	lfsr	0,__pdataBANK2
  2296  0089C0  EE10 F015          	lfsr	1,21
  2297  0089C4                     copy_data0:
  2298  0089C4  0009               	tblrd		*+
  2299  0089C6  006F FFD7 FFEE     	movff	tablat,postinc0
  2300  0089CC  50E5               	movf	postdec1,w,c
  2301  0089CE  50E1               	movf	fsr1l,w,c
  2302  0089D0  E1F9               	bnz	copy_data0
  2303                           
  2304                           ; Initialize objects allocated to BANK1 (11 bytes)
  2305                           ; load TBLPTR registers with __pidataBANK1
  2306  0089D2  0EAE               	movlw	low __pidataBANK1
  2307  0089D4  6EF6               	movwf	tblptrl,c
  2308  0089D6  0EA7               	movlw	high __pidataBANK1
  2309  0089D8  6EF7               	movwf	tblptrh,c
  2310  0089DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2311  0089DC  6EF8               	movwf	tblptru,c
  2312  0089DE  EE00  F1F1         	lfsr	0,__pdataBANK1
  2313  0089E2  EE10 F00B          	lfsr	1,11
  2314  0089E6                     copy_data1:
  2315  0089E6  0009               	tblrd		*+
  2316  0089E8  006F FFD7 FFEE     	movff	tablat,postinc0
  2317  0089EE  50E5               	movf	postdec1,w,c
  2318  0089F0  50E1               	movf	fsr1l,w,c
  2319  0089F2  E1F9               	bnz	copy_data1
  2320                           
  2321                           ; Clear objects allocated to BANK3 (144 bytes)
  2322  0089F4  EE00  F300         	lfsr	0,__pbssBANK3
  2323  0089F8  0E90               	movlw	144
  2324  0089FA                     clear_0:
  2325  0089FA  6AEE               	clrf	postinc0,c
  2326  0089FC  06E8               	decf	wreg,f,c
  2327  0089FE  E1FD               	bnz	clear_0
  2328                           
  2329                           ; Clear objects allocated to BANK2 (223 bytes)
  2330  008A00  EE00  F200         	lfsr	0,__pbssBANK2
  2331  008A04  0EDF               	movlw	223
  2332  008A06                     clear_1:
  2333  008A06  6AEE               	clrf	postinc0,c
  2334  008A08  06E8               	decf	wreg,f,c
  2335  008A0A  E1FD               	bnz	clear_1
  2336                           
  2337                           ; Clear objects allocated to BANK1 (92 bytes)
  2338  008A0C  EE00  F195         	lfsr	0,__pbssBANK1
  2339  008A10  0E5C               	movlw	92
  2340  008A12                     clear_2:
  2341  008A12  6AEE               	clrf	postinc0,c
  2342  008A14  06E8               	decf	wreg,f,c
  2343  008A16  E1FD               	bnz	clear_2
  2344                           
  2345                           ; Clear objects allocated to BANK0 (37 bytes)
  2346  008A18  EE00  F0AF         	lfsr	0,__pbssBANK0
  2347  008A1C  0E25               	movlw	37
  2348  008A1E                     clear_3:
  2349  008A1E  6AEE               	clrf	postinc0,c
  2350  008A20  06E8               	decf	wreg,f,c
  2351  008A22  E1FD               	bnz	clear_3
  2352                           
  2353                           ;
  2354                           ; Setup IVTBASE
  2355                           ;
  2356  008A24  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2357  008A26  6ED5               	movwf	213,c
  2358  008A28  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2359  008A2A  6ED6               	movwf	214,c
  2360  008A2C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2361  008A2E  6ED7               	movwf	215,c
  2362  008A30                     end_of_initialization:
  2363                           	opt callstack 0
  2364  008A30                     __end_of__initialization:
  2365                           	opt callstack 0
  2366  008A30  0100               	movlb	0
  2367  008A32  EF0F  F000         	goto	_main	;jump to C main() function
  2368                           
  2369                           	psect	bssBANK0
  2370  0000AF                     __pbssBANK0:
  2371                           	opt callstack 0
  2372  0000AF                     _bRatePtr:
  2373                           	opt callstack 0
  2374  0000AF                     	ds	3
  2375  0000B2                     _width:
  2376                           	opt callstack 0
  2377  0000B2                     	ds	2
  2378  0000B4                     _prec:
  2379                           	opt callstack 0
  2380  0000B4                     	ds	2
  2381  0000B6                     _flags:
  2382                           	opt callstack 0
  2383  0000B6                     	ds	2
  2384  0000B8                     _I2C2_InterruptHandler:
  2385                           	opt callstack 0
  2386  0000B8                     	ds	2
  2387  0000BA                     _bRateCnt:
  2388                           	opt callstack 0
  2389  0000BA                     	ds	1
  2390  0000BB                     _eBRate:
  2391                           	opt callstack 0
  2392  0000BB                     	ds	1
  2393  0000BC                     _lastI2C2MAckResponse:
  2394                           	opt callstack 0
  2395  0000BC                     	ds	1
  2396  0000BD                     _lastI2C2MTrfResponse:
  2397                           	opt callstack 0
  2398  0000BD                     	ds	1
  2399  0000BE                     _lcdBlink:
  2400                           	opt callstack 0
  2401  0000BE                     	ds	1
  2402  0000BF                     _chMaxV:
  2403                           	opt callstack 0
  2404  0000BF                     	ds	1
  2405  0000C0                     _chHighVAlarm:
  2406                           	opt callstack 0
  2407  0000C0                     	ds	1
  2408  0000C1                     _chLowVAlarm:
  2409                           	opt callstack 0
  2410  0000C1                     	ds	1
  2411  0000C2                     _chPEEP:
  2412                           	opt callstack 0
  2413  0000C2                     	ds	1
  2414  0000C3                     _chMaxP:
  2415                           	opt callstack 0
  2416  0000C3                     	ds	1
  2417  0000C4                     _chIP:
  2418                           	opt callstack 0
  2419  0000C4                     	ds	1
  2420  0000C5                     _chBPM:
  2421                           	opt callstack 0
  2422  0000C5                     	ds	1
  2423  0000C6                     _lcdBusy:
  2424                           	opt callstack 0
  2425  0000C6                     	ds	1
  2426  0000C7                     _parBuffLen:
  2427                           	opt callstack 0
  2428  0000C7                     	ds	1
  2429  0000C8                     _parBuffPtr:
  2430                           	opt callstack 0
  2431  0000C8                     	ds	1
  2432  0000C9                     __backlightval:
  2433                           	opt callstack 0
  2434  0000C9                     	ds	1
  2435  0000CA                     __numlines:
  2436                           	opt callstack 0
  2437  0000CA                     	ds	1
  2438  0000CB                     __displaymode:
  2439                           	opt callstack 0
  2440  0000CB                     	ds	1
  2441  0000CC                     __displaycontrol:
  2442                           	opt callstack 0
  2443  0000CC                     	ds	1
  2444  0000CD                     __displayfunction:
  2445                           	opt callstack 0
  2446  0000CD                     	ds	1
  2447  0000CE                     _keyFilter:
  2448                           	opt callstack 0
  2449  0000CE                     	ds	1
  2450  0000CF                     _lastkeyEC:
  2451                           	opt callstack 0
  2452  0000CF                     	ds	1
  2453  0000D0                     _lastkey:
  2454                           	opt callstack 0
  2455  0000D0                     	ds	1
  2456  0000D1                     _curASrc:
  2457                           	opt callstack 0
  2458  0000D1                     	ds	1
  2459  0000D2                     _uart1TxTail:
  2460                           	opt callstack 0
  2461  0000D2                     	ds	1
  2462  0000D3                     _uart1TxHead:
  2463                           	opt callstack 0
  2464  0000D3                     	ds	1
  2465                           
  2466                           	psect	bssBANK1
  2467  000195                     __pbssBANK1:
  2468                           	opt callstack 0
  2469  000195                     _vddValMean:
  2470                           	opt callstack 0
  2471  000195                     	ds	2
  2472  000197                     _menuVal:
  2473                           	opt callstack 0
  2474  000197                     	ds	2
  2475  000199                     _rTimeTmp:
  2476                           	opt callstack 0
  2477  000199                     	ds	2
  2478  00019B                     _rValveDelayStart:
  2479                           	opt callstack 0
  2480  00019B                     	ds	2
  2481  00019D                     _rSV3ValveORT:
  2482                           	opt callstack 0
  2483  00019D                     	ds	2
  2484  00019F                     _rSV2ValveCRT:
  2485                           	opt callstack 0
  2486  00019F                     	ds	2
  2487  0001A1                     _rSV2ValveORT:
  2488                           	opt callstack 0
  2489  0001A1                     	ds	2
  2490  0001A3                     _rVMedActuationTstamp:
  2491                           	opt callstack 0
  2492  0001A3                     	ds	2
  2493  0001A5                     _rValveActuationTstamp:
  2494                           	opt callstack 0
  2495  0001A5                     	ds	2
  2496  0001A7                     _pAdj:
  2497                           	opt callstack 0
  2498  0001A7                     	ds	2
  2499  0001A9                     _vQuanta:
  2500                           	opt callstack 0
  2501  0001A9                     	ds	2
  2502  0001AB                     _vValveActuation:
  2503                           	opt callstack 0
  2504  0001AB                     	ds	2
  2505  0001AD                     _pPeepActual:
  2506                           	opt callstack 0
  2507  0001AD                     	ds	2
  2508  0001AF                     _pPlatMax:
  2509                           	opt callstack 0
  2510  0001AF                     	ds	2
  2511  0001B1                     _intIDuration:
  2512                           	opt callstack 0
  2513  0001B1                     	ds	2
  2514  0001B3                     _intPEEP:
  2515                           	opt callstack 0
  2516  0001B3                     	ds	2
  2517  0001B5                     _intIP:
  2518                           	opt callstack 0
  2519  0001B5                     	ds	2
  2520  0001B7                     _currentTrfAddr:
  2521                           	opt callstack 0
  2522  0001B7                     	ds	1
  2523  0001B8                     _menuStatus:
  2524                           	opt callstack 0
  2525  0001B8                     	ds	1
  2526  0001B9                     _OSCheckInt:
  2527                           	opt callstack 0
  2528  0001B9                     	ds	1
  2529  0001BA                     _QuantaCheck:
  2530                           	opt callstack 0
  2531  0001BA                     	ds	1
  2532  0001BB                     _OSCheck:
  2533                           	opt callstack 0
  2534  0001BB                     	ds	1
  2535  0001BC                     _sv3DelayCheck:
  2536                           	opt callstack 0
  2537  0001BC                     	ds	1
  2538  0001BD                     _sv2DelayCheck:
  2539                           	opt callstack 0
  2540  0001BD                     	ds	1
  2541  0001BE                     _initInspSubState:
  2542                           	opt callstack 0
  2543  0001BE                     	ds	1
  2544  0001BF                     _initExpSubState:
  2545                           	opt callstack 0
  2546  0001BF                     	ds	1
  2547  0001C0                     _ctrlStatus:
  2548                           	opt callstack 0
  2549  0001C0                     	ds	1
  2550  0001C1                     _sBreath:
  2551                           	opt callstack 0
  2552  0001C1                     	ds	1
  2553  0001C2                     _intVentMode:
  2554                           	opt callstack 0
  2555  0001C2                     	ds	1
  2556  0001C3                     _ctrlErrorStatus:
  2557                           	opt callstack 0
  2558  0001C3                     	ds	1
  2559  0001C4                     _lcdPrintBRR:
  2560                           	opt callstack 0
  2561  0001C4                     	ds	1
  2562  0001C5                     _lcdPrintBR:
  2563                           	opt callstack 0
  2564  0001C5                     	ds	1
  2565  0001C6                     _lcdPrintTR:
  2566                           	opt callstack 0
  2567  0001C6                     	ds	1
  2568  0001C7                     _pPeepOsc:
  2569                           	opt callstack 0
  2570  0001C7                     	ds	2
  2571  0001C9                     _pPeepErr:
  2572                           	opt callstack 0
  2573  0001C9                     	ds	2
  2574  0001CB                     _rCycleTime:
  2575                           	opt callstack 0
  2576  0001CB                     	ds	2
  2577  0001CD                     _effectiveFlowRateInv:
  2578                           	opt callstack 0
  2579  0001CD                     	ds	2
  2580  0001CF                     _pQuantaExp:
  2581                           	opt callstack 0
  2582  0001CF                     	ds	2
  2583  0001D1                     _pQuantaInsp:
  2584                           	opt callstack 0
  2585  0001D1                     	ds	2
  2586  0001D3                     _pInspVSet:
  2587                           	opt callstack 0
  2588  0001D3                     	ds	2
  2589  0001D5                     _vInspOS:
  2590                           	opt callstack 0
  2591  0001D5                     	ds	2
  2592  0001D7                     _pInspOS2:
  2593                           	opt callstack 0
  2594  0001D7                     	ds	2
  2595  0001D9                     _pInspOS3:
  2596                           	opt callstack 0
  2597  0001D9                     	ds	2
  2598  0001DB                     _lungC:
  2599                           	opt callstack 0
  2600  0001DB                     	ds	2
  2601  0001DD                     _pExpOS:
  2602                           	opt callstack 0
  2603  0001DD                     	ds	2
  2604  0001DF                     _pPlatInsp:
  2605                           	opt callstack 0
  2606  0001DF                     	ds	2
  2607  0001E1                     _pValveActuation:
  2608                           	opt callstack 0
  2609  0001E1                     	ds	2
  2610  0001E3                     _pCtrl:
  2611                           	opt callstack 0
  2612  0001E3                     	ds	2
  2613  0001E5                     _bdP1:
  2614                           	opt callstack 0
  2615  0001E5                     	ds	2
  2616  0001E7                     _pAvgUShort:
  2617                           	opt callstack 0
  2618  0001E7                     	ds	2
  2619  0001E9                     _pAvgShort:
  2620                           	opt callstack 0
  2621  0001E9                     	ds	2
  2622  0001EB                     _pInst:
  2623                           	opt callstack 0
  2624  0001EB                     	ds	2
  2625  0001ED                     _intMaxV:
  2626                           	opt callstack 0
  2627  0001ED                     	ds	2
  2628  0001EF                     _intMaxP:
  2629                           	opt callstack 0
  2630  0001EF                     	ds	2
  2631                           
  2632                           	psect	dataBANK1
  2633  0001F1                     __pdataBANK1:
  2634                           	opt callstack 0
  2635  0001F1                     _mainPSensCal:
  2636                           	opt callstack 0
  2637  0001F1                     	ds	2
  2638  0001F3                     _LowVAlarm:
  2639                           	opt callstack 0
  2640  0001F3                     	ds	1
  2641  0001F4                     _VentMode:
  2642                           	opt callstack 0
  2643  0001F4                     	ds	1
  2644  0001F5                     _BdTrig:
  2645                           	opt callstack 0
  2646  0001F5                     	ds	1
  2647  0001F6                     _PEEP:
  2648                           	opt callstack 0
  2649  0001F6                     	ds	1
  2650  0001F7                     _IP:
  2651                           	opt callstack 0
  2652  0001F7                     	ds	1
  2653  0001F8                     _BPM:
  2654                           	opt callstack 0
  2655  0001F8                     	ds	1
  2656  0001F9                     _HighVAlarm:
  2657                           	opt callstack 0
  2658  0001F9                     	ds	1
  2659  0001FA                     _MaxV:
  2660                           	opt callstack 0
  2661  0001FA                     	ds	1
  2662  0001FB                     _MaxP:
  2663                           	opt callstack 0
  2664  0001FB                     	ds	1
  2665                           
  2666                           	psect	bssBANK2
  2667  000200                     __pbssBANK2:
  2668                           	opt callstack 0
  2669  000200                     _I2C2_Status:
  2670                           	opt callstack 0
  2671  000200                     	ds	36
  2672  000224                     _resultTblVal:
  2673                           	opt callstack 0
  2674  000224                     	ds	7
  2675  00022B                     _volume:
  2676                           	opt callstack 0
  2677  00022B                     	ds	4
  2678  00022F                     _bRateHist:
  2679                           	opt callstack 0
  2680  00022F                     	ds	3
  2681  000232                     _nout:
  2682                           	opt callstack 0
  2683  000232                     	ds	2
  2684  000234                     _freeFlowRateL:
  2685                           	opt callstack 0
  2686  000234                     	ds	2
  2687  000236                     _freeFlowRateM:
  2688                           	opt callstack 0
  2689  000236                     	ds	2
  2690  000238                     _menuTstamp:
  2691                           	opt callstack 0
  2692  000238                     	ds	2
  2693  00023A                     _pressMills:
  2694                           	opt callstack 0
  2695  00023A                     	ds	2
  2696  00023C                     _rVLowActuationTstamp:
  2697                           	opt callstack 0
  2698  00023C                     	ds	2
  2699  00023E                     _rVHighActuationTstamp:
  2700                           	opt callstack 0
  2701  00023E                     	ds	2
  2702  000240                     _tInsp:
  2703                           	opt callstack 0
  2704  000240                     	ds	2
  2705  000242                     _vAdj:
  2706                           	opt callstack 0
  2707  000242                     	ds	2
  2708  000244                     _pInspOSVSet:
  2709                           	opt callstack 0
  2710  000244                     	ds	2
  2711  000246                     _vPlateau:
  2712                           	opt callstack 0
  2713  000246                     	ds	2
  2714  000248                     _lastCycleVol:
  2715                           	opt callstack 0
  2716  000248                     	ds	2
  2717  00024A                     _EDuration:
  2718                           	opt callstack 0
  2719  00024A                     	ds	2
  2720  00024C                     _IDuration:
  2721                           	opt callstack 0
  2722  00024C                     	ds	2
  2723  00024E                     _intEDuration:
  2724                           	opt callstack 0
  2725  00024E                     	ds	2
  2726  000250                     _intBdTrig:
  2727                           	opt callstack 0
  2728  000250                     	ds	2
  2729  000252                     _lastI2CMonTrfResponse:
  2730                           	opt callstack 0
  2731  000252                     	ds	1
  2732  000253                     _lastI2C2LAckResponse:
  2733                           	opt callstack 0
  2734  000253                     	ds	1
  2735  000254                     _lastI2C2LTrfResponse:
  2736                           	opt callstack 0
  2737  000254                     	ds	1
  2738  000255                     _chVentMode:
  2739                           	opt callstack 0
  2740  000255                     	ds	1
  2741  000256                     _chBdTrig:
  2742                           	opt callstack 0
  2743  000256                     	ds	1
  2744  000257                     __rows:
  2745                           	opt callstack 0
  2746  000257                     	ds	1
  2747  000258                     __cols:
  2748                           	opt callstack 0
  2749  000258                     	ds	1
  2750  000259                     __Addr:
  2751                           	opt callstack 0
  2752  000259                     	ds	1
  2753  00025A                     _uart1RxLastError:
  2754                           	opt callstack 0
  2755  00025A                     	ds	1
  2756  00025B                     _dbuf:
  2757                           	opt callstack 0
  2758  00025B                     	ds	32
  2759  00027B                     _resultTbl:
  2760                           	opt callstack 0
  2761  00027B                     	ds	28
  2762  000297                     _lcdBtnRow:
  2763                           	opt callstack 0
  2764  000297                     	ds	20
  2765  0002AB                     _lcdTopRow:
  2766                           	opt callstack 0
  2767  0002AB                     	ds	20
  2768  0002BF                     _monitorMsg:
  2769                           	opt callstack 0
  2770  0002BF                     	ds	10
  2771  0002C9                     _lcdBtnRRow:
  2772                           	opt callstack 0
  2773  0002C9                     	ds	10
  2774  0002D3                     _monTstamp:
  2775                           	opt callstack 0
  2776  0002D3                     	ds	2
  2777  0002D5                     _lungR:
  2778                           	opt callstack 0
  2779  0002D5                     	ds	2
  2780  0002D7                     _pInspOS:
  2781                           	opt callstack 0
  2782  0002D7                     	ds	2
  2783  0002D9                     _pPlatExp:
  2784                           	opt callstack 0
  2785  0002D9                     	ds	2
  2786  0002DB                     _bdP2:
  2787                           	opt callstack 0
  2788  0002DB                     	ds	2
  2789  0002DD                     _freeFlowRateF:
  2790                           	opt callstack 0
  2791  0002DD                     	ds	2
  2792                           
  2793                           	psect	dataBANK2
  2794  0002DF                     __pdataBANK2:
  2795                           	opt callstack 0
  2796  0002DF                     setCursor@F16920:
  2797                           	opt callstack 0
  2798  0002DF                     	ds	8
  2799  0002E7                     _keysD:
  2800                           	opt callstack 0
  2801  0002E7                     	ds	6
  2802  0002ED                     _keysC:
  2803                           	opt callstack 0
  2804  0002ED                     	ds	5
  2805  0002F2                     _auxPSensCal:
  2806                           	opt callstack 0
  2807  0002F2                     	ds	2
  2808                           
  2809                           	psect	bssBANK3
  2810  000300                     __pbssBANK3:
  2811                           	opt callstack 0
  2812  000300                     _i2cBuff:
  2813                           	opt callstack 0
  2814  000300                     	ds	80
  2815  000350                     _uart1TxBuffer:
  2816                           	opt callstack 0
  2817  000350                     	ds	64
  2818                           
  2819                           	psect	cstackBANK3
  2820  000390                     __pcstackBANK3:
  2821                           	opt callstack 0
  2822  000390                     SelfTest@tstScreen:
  2823                           	opt callstack 0
  2824                           
  2825                           ; 1 bytes @ 0x0
  2826  000390                     	ds	1
  2827  000391                     SelfTest@lcdBLight:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 1 bytes @ 0x1
  2831  000391                     	ds	1
  2832  000392                     SelfTest@idx:
  2833                           	opt callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x2
  2836  000392                     	ds	2
  2837  000394                     SelfTest@cIdx:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x4
  2841  000394                     	ds	2
  2842  000396                     SelfTest@tstamp:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 2 bytes @ 0x6
  2846  000396                     	ds	2
  2847  000398                     SelfTest@vddValMax:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 2 bytes @ 0x8
  2851  000398                     	ds	2
  2852  00039A                     SelfTest@vddValMin:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 2 bytes @ 0xA
  2856  00039A                     	ds	2
  2857  00039C                     SelfTest@vddVal:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0xC
  2861  00039C                     	ds	2
  2862  00039E                     SelfTest@initOk:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 1 bytes @ 0xE
  2866  00039E                     	ds	1
  2867  00039F                     ??_main:
  2868                           
  2869                           ; 1 bytes @ 0xF
  2870  00039F                     	ds	11
  2871  0003AA                     _main$6109:
  2872                           	opt callstack 0
  2873                           
  2874                           ; 4 bytes @ 0x1A
  2875  0003AA                     	ds	4
  2876  0003AE                     _main$3850:
  2877                           	opt callstack 0
  2878                           
  2879                           ; 2 bytes @ 0x1E
  2880  0003AE                     	ds	2
  2881  0003B0                     _main$3851:
  2882                           	opt callstack 0
  2883                           
  2884                           ; 2 bytes @ 0x20
  2885  0003B0                     	ds	2
  2886  0003B2                     main@tstScreen:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 1 bytes @ 0x22
  2890  0003B2                     	ds	1
  2891  0003B3                     _main$6110:
  2892                           	opt callstack 0
  2893                           
  2894                           ; 3 bytes @ 0x23
  2895  0003B3                     	ds	3
  2896  0003B6                     main@vInspOSScale:
  2897                           	opt callstack 0
  2898                           
  2899                           ; 2 bytes @ 0x26
  2900  0003B6                     	ds	2
  2901  0003B8                     main@printTime:
  2902                           	opt callstack 0
  2903                           
  2904                           ; 2 bytes @ 0x28
  2905  0003B8                     	ds	2
  2906  0003BA                     main@keyTmp:
  2907                           	opt callstack 0
  2908                           
  2909                           ; 1 bytes @ 0x2A
  2910  0003BA                     	ds	1
  2911  0003BB                     main@tmpUVal:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 2 bytes @ 0x2B
  2915  0003BB                     	ds	2
  2916  0003BD                     _main$6111:
  2917                           	opt callstack 0
  2918                           
  2919                           ; 2 bytes @ 0x2D
  2920  0003BD                     	ds	2
  2921  0003BF                     main@tmpVal2:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x2F
  2925  0003BF                     	ds	2
  2926  0003C1                     main@pInspOSScale:
  2927                           	opt callstack 0
  2928                           
  2929                           ; 2 bytes @ 0x31
  2930  0003C1                     	ds	2
  2931  0003C3                     main@pAux:
  2932                           	opt callstack 0
  2933                           
  2934                           ; 2 bytes @ 0x33
  2935  0003C3                     	ds	2
  2936  0003C5                     main@pAux_3859:
  2937                           	opt callstack 0
  2938                           
  2939                           ; 2 bytes @ 0x35
  2940  0003C5                     	ds	2
  2941  0003C7                     main@tmpVal:
  2942                           	opt callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x37
  2945  0003C7                     	ds	2
  2946                           
  2947                           	psect	cstackBANK1
  2948  000100                     __pcstackBANK1:
  2949                           	opt callstack 0
  2950  000100                     ??___fltol:
  2951  000100                     ?_dtoa:
  2952                           	opt callstack 0
  2953  000100                     ?_xtoa:
  2954                           	opt callstack 0
  2955  000100                     dtoa@fp:
  2956                           	opt callstack 0
  2957  000100                     xtoa@fp:
  2958                           	opt callstack 0
  2959  000100                     atoi@neg:
  2960                           	opt callstack 0
  2961                           
  2962                           ; 2 bytes @ 0x0
  2963  000100                     	ds	2
  2964  000102                     _atoi$5383:
  2965                           	opt callstack 0
  2966  000102                     dtoa@d:
  2967                           	opt callstack 0
  2968  000102                     xtoa@d:
  2969                           	opt callstack 0
  2970                           
  2971                           ; 8 bytes @ 0x2
  2972  000102                     	ds	2
  2973  000104                     _atoi$5385:
  2974                           	opt callstack 0
  2975                           
  2976                           ; 2 bytes @ 0x4
  2977  000104                     	ds	2
  2978  000106                     _atoi$5384:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 1 bytes @ 0x6
  2982  000106                     	ds	1
  2983  000107                     atoi@n:
  2984                           	opt callstack 0
  2985                           
  2986                           ; 2 bytes @ 0x7
  2987  000107                     	ds	3
  2988  00010A                     ??_dtoa:
  2989  00010A                     xtoa@x:
  2990                           	opt callstack 0
  2991                           
  2992                           ; 1 bytes @ 0xA
  2993  00010A                     	ds	1
  2994  00010B                     ??_xtoa:
  2995                           
  2996                           ; 1 bytes @ 0xB
  2997  00010B                     	ds	7
  2998  000112                     _dtoa$4899:
  2999                           	opt callstack 0
  3000                           
  3001                           ; 2 bytes @ 0x12
  3002  000112                     	ds	1
  3003  000113                     _xtoa$4910:
  3004                           	opt callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x13
  3007  000113                     	ds	1
  3008  000114                     dtoa@p:
  3009                           	opt callstack 0
  3010                           
  3011                           ; 2 bytes @ 0x14
  3012  000114                     	ds	1
  3013  000115                     _xtoa$4911:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x15
  3017  000115                     	ds	1
  3018  000116                     dtoa@w:
  3019                           	opt callstack 0
  3020                           
  3021                           ; 2 bytes @ 0x16
  3022  000116                     	ds	1
  3023  000117                     xtoa@p:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x17
  3027  000117                     	ds	1
  3028  000118                     dtoa@s:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 2 bytes @ 0x18
  3032  000118                     	ds	1
  3033  000119                     xtoa@w:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x19
  3037  000119                     	ds	1
  3038  00011A                     dtoa@n:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 8 bytes @ 0x1A
  3042  00011A                     	ds	1
  3043  00011B                     xtoa@n:
  3044                           	opt callstack 0
  3045                           
  3046                           ; 8 bytes @ 0x1B
  3047  00011B                     	ds	7
  3048  000122                     dtoa@i:
  3049                           	opt callstack 0
  3050                           
  3051                           ; 2 bytes @ 0x22
  3052  000122                     	ds	1
  3053  000123                     xtoa@i:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x23
  3057  000123                     	ds	2
  3058  000125                     xtoa@c:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x25
  3062  000125                     	ds	2
  3063  000127                     ??_vfpfcnvrt:
  3064                           
  3065                           ; 1 bytes @ 0x27
  3066  000127                     	ds	4
  3067  00012B                     vfpfcnvrt@ll:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 8 bytes @ 0x2B
  3071  00012B                     	ds	8
  3072  000133                     vfpfcnvrt@llu:
  3073                           	opt callstack 0
  3074                           
  3075                           ; 8 bytes @ 0x33
  3076  000133                     	ds	8
  3077  00013B                     vfpfcnvrt@c:
  3078                           	opt callstack 0
  3079                           
  3080                           ; 1 bytes @ 0x3B
  3081  00013B                     	ds	1
  3082  00013C                     vfpfcnvrt@done:
  3083                           	opt callstack 0
  3084                           
  3085                           ; 2 bytes @ 0x3C
  3086  00013C                     	ds	2
  3087  00013E                     _vfpfcnvrt$4925:
  3088                           	opt callstack 0
  3089                           
  3090                           ; 2 bytes @ 0x3E
  3091  00013E                     	ds	2
  3092  000140                     ?_vfprintf:
  3093                           	opt callstack 0
  3094  000140                     vfprintf@fp:
  3095                           	opt callstack 0
  3096                           
  3097                           ; 2 bytes @ 0x40
  3098  000140                     	ds	2
  3099  000142                     vfprintf@fmt:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 2 bytes @ 0x42
  3103  000142                     	ds	2
  3104  000144                     vfprintf@ap:
  3105                           	opt callstack 0
  3106                           
  3107                           ; 2 bytes @ 0x44
  3108  000144                     	ds	2
  3109  000146                     ?_printf:
  3110                           	opt callstack 0
  3111  000146                     ?_sprintf:
  3112                           	opt callstack 0
  3113  000146                     sprintf@s:
  3114                           	opt callstack 0
  3115  000146                     printf@fmt:
  3116                           	opt callstack 0
  3117                           
  3118                           ; 2 bytes @ 0x46
  3119  000146                     	ds	2
  3120  000148                     sprintf@fmt:
  3121                           	opt callstack 0
  3122                           
  3123                           ; 2 bytes @ 0x48
  3124  000148                     	ds	12
  3125  000154                     sprintf@ap:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 2 bytes @ 0x54
  3129  000154                     	ds	2
  3130  000156                     sprintf@f:
  3131                           	opt callstack 0
  3132                           
  3133                           ; 6 bytes @ 0x56
  3134  000156                     	ds	6
  3135  00015C                     ??_screenMng:
  3136                           
  3137                           ; 1 bytes @ 0x5C
  3138  00015C                     	ds	2
  3139  00015E                     printf@ap:
  3140                           	opt callstack 0
  3141  00015E                     _screenMng$6112:
  3142                           	opt callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x5E
  3145  00015E                     	ds	2
  3146  000160                     ??_MenuMng:
  3147  000160                     ??_aCaptRstFlt:
  3148  000160                     ??_inspOSMeasure:
  3149  000160                     ??_adcGetCh:
  3150  000160                     ?_aCaptureOffGet:
  3151                           	opt callstack 0
  3152  000160                     rd1RegCompleteHandler@ptr:
  3153                           	opt callstack 0
  3154  000160                     rd2RegCompleteHandler@ptr:
  3155                           	opt callstack 0
  3156  000160                     wr1RegCompleteHandler@ptr:
  3157                           	opt callstack 0
  3158  000160                     wr2RegCompleteHandler@ptr:
  3159                           	opt callstack 0
  3160  000160                     rdBlkRegCompleteHandler@ptr:
  3161                           	opt callstack 0
  3162  000160                     I2C2_CallbackReturnStop@funPtr:
  3163                           	opt callstack 0
  3164  000160                     aCaptureOffSet@offVal:
  3165                           	opt callstack 0
  3166  000160                     aCaptGetResult@outVal:
  3167                           	opt callstack 0
  3168  000160                     I2C2_NackCb@ptr:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 2 bytes @ 0x60
  3172  000160                     	ds	2
  3173  000162                     ??_I2C2_DO_RX_EMPTY:
  3174  000162                     ??_aCaptGetResult:
  3175  000162                     adcGetCh@sel:
  3176                           	opt callstack 0
  3177  000162                     aCaptureOffSet@sel:
  3178                           	opt callstack 0
  3179  000162                     aCaptureOffGet@sel:
  3180                           	opt callstack 0
  3181                           
  3182                           ; 1 bytes @ 0x62
  3183  000162                     	ds	1
  3184  000163                     aCaptureInit@idx:
  3185                           	opt callstack 0
  3186                           
  3187                           ; 2 bytes @ 0x63
  3188  000163                     	ds	1
  3189  000164                     I2C2_MasterOperation@read:
  3190                           	opt callstack 0
  3191  000164                     aCaptRstFlt@sel:
  3192                           	opt callstack 0
  3193  000164                     _MenuMng$4367:
  3194                           	opt callstack 0
  3195  000164                     _inspOSMeasure$6108:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 4 bytes @ 0x64
  3199  000164                     	ds	1
  3200  000165                     I2C2_MasterOperation@returnValue:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 1 bytes @ 0x65
  3204  000165                     	ds	1
  3205  000166                     aCaptGetResult@lclValid:
  3206                           	opt callstack 0
  3207  000166                     _MenuMng$4368:
  3208                           	opt callstack 0
  3209                           
  3210                           ; 2 bytes @ 0x66
  3211  000166                     	ds	1
  3212  000167                     aCaptGetResult@sel:
  3213                           	opt callstack 0
  3214                           
  3215                           ; 1 bytes @ 0x67
  3216  000167                     	ds	1
  3217  000168                     inspOSMeasure@tmpUVal:
  3218                           	opt callstack 0
  3219  000168                     _MenuMng$4369:
  3220                           	opt callstack 0
  3221  000168                     aCaptGetResult@lclRaw:
  3222                           	opt callstack 0
  3223                           
  3224                           ; 4 bytes @ 0x68
  3225  000168                     	ds	2
  3226  00016A                     inspOSMeasure@setScale:
  3227                           	opt callstack 0
  3228  00016A                     _MenuMng$4370:
  3229                           	opt callstack 0
  3230                           
  3231                           ; 2 bytes @ 0x6A
  3232  00016A                     	ds	1
  3233  00016B                     inspOSMeasure@tmpVal:
  3234                           	opt callstack 0
  3235                           
  3236                           ; 2 bytes @ 0x6B
  3237  00016B                     	ds	1
  3238  00016C                     ??_MonitorMsgForcedSend:
  3239  00016C                     _MenuMng$4371:
  3240                           	opt callstack 0
  3241  00016C                     pressureSensorChk@time:
  3242                           	opt callstack 0
  3243                           
  3244                           ; 2 bytes @ 0x6C
  3245  00016C                     	ds	1
  3246  00016D                     MonitorMsgForcedSend@trfError:
  3247                           	opt callstack 0
  3248                           
  3249                           ; 1 bytes @ 0x6D
  3250  00016D                     	ds	1
  3251  00016E                     ??_pressureSensorChk:
  3252  00016E                     MonitorMsgForcedSend@state:
  3253                           	opt callstack 0
  3254  00016E                     _MenuMng$4372:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 2 bytes @ 0x6E
  3258  00016E                     	ds	1
  3259  00016F                     MonitorMsgForcedSend@trfAck:
  3260                           	opt callstack 0
  3261                           
  3262                           ; 1 bytes @ 0x6F
  3263  00016F                     	ds	1
  3264  000170                     _MenuMng$4373:
  3265                           	opt callstack 0
  3266  000170                     MonitorMsgForcedSend@vddVal:
  3267                           	opt callstack 0
  3268                           
  3269                           ; 2 bytes @ 0x70
  3270  000170                     	ds	2
  3271  000172                     MonitorMsgSend@state:
  3272                           	opt callstack 0
  3273  000172                     MonitorMsgSendBlock@state:
  3274                           	opt callstack 0
  3275  000172                     _MenuMng$4374:
  3276                           	opt callstack 0
  3277                           
  3278                           ; 2 bytes @ 0x72
  3279  000172                     	ds	1
  3280  000173                     ??_flowChk:
  3281                           
  3282                           ; 1 bytes @ 0x73
  3283  000173                     	ds	1
  3284  000174                     _MenuMng$4375:
  3285                           	opt callstack 0
  3286                           
  3287                           ; 2 bytes @ 0x74
  3288  000174                     	ds	1
  3289  000175                     flowChk@flowVal:
  3290                           	opt callstack 0
  3291                           
  3292                           ; 1 bytes @ 0x75
  3293  000175                     	ds	1
  3294  000176                     MenuMng@keyPress:
  3295                           	opt callstack 0
  3296  000176                     flowChk@aPValMean:
  3297                           	opt callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x76
  3300  000176                     	ds	2
  3301  000178                     flowChk@maxFlowL:
  3302                           	opt callstack 0
  3303                           
  3304                           ; 2 bytes @ 0x78
  3305  000178                     	ds	1
  3306  000179                     pressureSensorChk@offsetCal:
  3307                           	opt callstack 0
  3308                           
  3309                           ; 1 bytes @ 0x79
  3310  000179                     	ds	1
  3311  00017A                     pressureSensorChk@tstamp:
  3312                           	opt callstack 0
  3313  00017A                     flowChk@aPValMin:
  3314                           	opt callstack 0
  3315                           
  3316                           ; 2 bytes @ 0x7A
  3317  00017A                     	ds	2
  3318  00017C                     pressureSensorChk@chkResult:
  3319                           	opt callstack 0
  3320  00017C                     flowChk@tstamp:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 2 bytes @ 0x7C
  3324  00017C                     	ds	1
  3325  00017D                     pressureSensorChk@mPValMax:
  3326                           	opt callstack 0
  3327                           
  3328                           ; 2 bytes @ 0x7D
  3329  00017D                     	ds	1
  3330  00017E                     flowChk@aPValMax:
  3331                           	opt callstack 0
  3332                           
  3333                           ; 2 bytes @ 0x7E
  3334  00017E                     	ds	1
  3335  00017F                     pressureSensorChk@mPValMin:
  3336                           	opt callstack 0
  3337                           
  3338                           ; 2 bytes @ 0x7F
  3339  00017F                     	ds	1
  3340  000180                     flowChk@minFlowL:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 2 bytes @ 0x80
  3344  000180                     	ds	1
  3345  000181                     pressureSensorChk@aPValMax:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 2 bytes @ 0x81
  3349  000181                     	ds	1
  3350  000182                     flowChk@initOk:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 1 bytes @ 0x82
  3354  000182                     	ds	1
  3355  000183                     pressureSensorChk@aPValMin:
  3356                           	opt callstack 0
  3357  000183                     flowChk@aPVal:
  3358                           	opt callstack 0
  3359                           
  3360                           ; 2 bytes @ 0x83
  3361  000183                     	ds	2
  3362  000185                     pressureSensorChk@mPValMean:
  3363                           	opt callstack 0
  3364                           
  3365                           ; 4 bytes @ 0x85
  3366  000185                     	ds	4
  3367  000189                     pressureSensorChk@aPValMean:
  3368                           	opt callstack 0
  3369                           
  3370                           ; 4 bytes @ 0x89
  3371  000189                     	ds	4
  3372  00018D                     pressureSensorChk@mPVal:
  3373                           	opt callstack 0
  3374                           
  3375                           ; 2 bytes @ 0x8D
  3376  00018D                     	ds	2
  3377  00018F                     pressureSensorChk@aPVal:
  3378                           	opt callstack 0
  3379                           
  3380                           ; 2 bytes @ 0x8F
  3381  00018F                     	ds	2
  3382  000191                     ??_SelfTest:
  3383                           
  3384                           ; 1 bytes @ 0x91
  3385  000191                     	ds	4
  3386                           
  3387                           	psect	cstackBANK0
  3388  000060                     __pcstackBANK0:
  3389                           	opt callstack 0
  3390  000060                     i2vfpfcnvrt@ll:
  3391                           	opt callstack 0
  3392                           
  3393                           ; 8 bytes @ 0x0
  3394  000060                     	ds	8
  3395  000068                     i2vfpfcnvrt@llu:
  3396                           	opt callstack 0
  3397                           
  3398                           ; 8 bytes @ 0x8
  3399  000068                     	ds	8
  3400  000070                     i2vfpfcnvrt@c:
  3401                           	opt callstack 0
  3402                           
  3403                           ; 1 bytes @ 0x10
  3404  000070                     	ds	1
  3405  000071                     i2vfpfcnvrt@done:
  3406                           	opt callstack 0
  3407                           
  3408                           ; 2 bytes @ 0x11
  3409  000071                     	ds	2
  3410  000073                     i2_vfpfcnvrt$4925:
  3411                           	opt callstack 0
  3412                           
  3413                           ; 2 bytes @ 0x13
  3414  000073                     	ds	2
  3415  000075                     ?i2_vfprintf:
  3416                           	opt callstack 0
  3417  000075                     i2vfprintf@fp:
  3418                           	opt callstack 0
  3419                           
  3420                           ; 2 bytes @ 0x15
  3421  000075                     	ds	2
  3422  000077                     i2vfprintf@fmt:
  3423                           	opt callstack 0
  3424                           
  3425                           ; 2 bytes @ 0x17
  3426  000077                     	ds	2
  3427  000079                     i2vfprintf@ap:
  3428                           	opt callstack 0
  3429                           
  3430                           ; 2 bytes @ 0x19
  3431  000079                     	ds	2
  3432  00007B                     ?i2_printf:
  3433                           	opt callstack 0
  3434  00007B                     i2printf@fmt:
  3435                           	opt callstack 0
  3436                           
  3437                           ; 2 bytes @ 0x1B
  3438  00007B                     	ds	4
  3439  00007F                     i2aCaptGetResult@outVal:
  3440                           	opt callstack 0
  3441  00007F                     adcCaptureIsr@adcData:
  3442                           	opt callstack 0
  3443                           
  3444                           ; 4 bytes @ 0x1F
  3445  00007F                     	ds	2
  3446  000081                     vMeasureIsr@v1:
  3447                           	opt callstack 0
  3448                           
  3449                           ; 2 bytes @ 0x21
  3450  000081                     	ds	2
  3451  000083                     adcCaptureIsr@adcSel:
  3452                           	opt callstack 0
  3453  000083                     vMeasureIsr@v2:
  3454                           	opt callstack 0
  3455                           
  3456                           ; 2 bytes @ 0x23
  3457  000083                     	ds	2
  3458  000085                     vMeasureIsr@instP:
  3459                           	opt callstack 0
  3460                           
  3461                           ; 2 bytes @ 0x25
  3462  000085                     	ds	2
  3463  000087                     ??_INTERRUPT_InterruptManager:
  3464                           
  3465                           ; 1 bytes @ 0x27
  3466  000087                     	ds	4
  3467  00008B                     ??_TMR1_Initialize:
  3468  00008B                     ??_bRateUpdt:
  3469  00008B                     ??_digitalReadD:
  3470  00008B                     ??_digitalReadC:
  3471  00008B                     ?_strlen:
  3472                           	opt callstack 0
  3473  00008B                     ?_isupper:
  3474                           	opt callstack 0
  3475  00008B                     ?_isalpha:
  3476                           	opt callstack 0
  3477  00008B                     ?_isdigit:
  3478                           	opt callstack 0
  3479  00008B                     ?_isspace:
  3480                           	opt callstack 0
  3481  00008B                     ?_islower:
  3482                           	opt callstack 0
  3483  00008B                     ?_TMR1_ReadTimer:
  3484                           	opt callstack 0
  3485  00008B                     ?___awdiv:
  3486                           	opt callstack 0
  3487  00008B                     ?___lwdiv:
  3488                           	opt callstack 0
  3489  00008B                     ?___tmul:
  3490                           	opt callstack 0
  3491  00008B                     ?___ltdiv:
  3492                           	opt callstack 0
  3493  00008B                     ?___lmul:
  3494                           	opt callstack 0
  3495  00008B                     ?___xxtofl:
  3496                           	opt callstack 0
  3497  00008B                     ?___aodiv:
  3498                           	opt callstack 0
  3499  00008B                     ?___aomod:
  3500                           	opt callstack 0
  3501  00008B                     ADCC_StartConversion@channel:
  3502                           	opt callstack 0
  3503  00008B                     UART1_Write@txData:
  3504                           	opt callstack 0
  3505  00008B                     I2C2_Close@returnValue:
  3506                           	opt callstack 0
  3507  00008B                     I2C2_MasterSendTxData@data:
  3508                           	opt callstack 0
  3509  00008B                     I2C2_MasterSetCounter@counter:
  3510                           	opt callstack 0
  3511  00008B                     send4bits@mode:
  3512                           	opt callstack 0
  3513  00008B                     MonitorErrorSet@flag:
  3514                           	opt callstack 0
  3515  00008B                     MonitorErrorClr@flag:
  3516                           	opt callstack 0
  3517  00008B                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  3518                           	opt callstack 0
  3519  00008B                     UART1_SetFramingErrorHandler@interruptHandler:
  3520                           	opt callstack 0
  3521  00008B                     UART1_SetOverrunErrorHandler@interruptHandler:
  3522                           	opt callstack 0
  3523  00008B                     UART1_SetErrorHandler@interruptHandler:
  3524                           	opt callstack 0
  3525  00008B                     UART1_SetTxInterruptHandler@InterruptHandler:
  3526                           	opt callstack 0
  3527  00008B                     TMR2_SetInterruptHandler@InterruptHandler:
  3528                           	opt callstack 0
  3529  00008B                     I2C2_SetBuffer@buffer:
  3530                           	opt callstack 0
  3531  00008B                     I2C2_SetInterruptHandler@InterruptHandler:
  3532                           	opt callstack 0
  3533  00008B                     I2C2_SetCallback@cb:
  3534                           	opt callstack 0
  3535  00008B                     TMR4_SetInterruptHandler@InterruptHandler:
  3536                           	opt callstack 0
  3537  00008B                     TMR6_SetInterruptHandler@InterruptHandler:
  3538                           	opt callstack 0
  3539  00008B                     printstr@c:
  3540                           	opt callstack 0
  3541  00008B                     ___awdiv@dividend:
  3542                           	opt callstack 0
  3543  00008B                     ___lwdiv@dividend:
  3544                           	opt callstack 0
  3545  00008B                     isalpha@c:
  3546                           	opt callstack 0
  3547  00008B                     isdigit@c:
  3548                           	opt callstack 0
  3549  00008B                     isspace@c:
  3550                           	opt callstack 0
  3551  00008B                     isupper@c:
  3552                           	opt callstack 0
  3553  00008B                     strlen@s:
  3554                           	opt callstack 0
  3555  00008B                     islower@c:
  3556                           	opt callstack 0
  3557  00008B                     ___tmul@multiplier:
  3558                           	opt callstack 0
  3559  00008B                     ___ltdiv@dividend:
  3560                           	opt callstack 0
  3561  00008B                     ___lmul@multiplier:
  3562                           	opt callstack 0
  3563  00008B                     ___xxtofl@val:
  3564                           	opt callstack 0
  3565  00008B                     ___aodiv@dividend:
  3566                           	opt callstack 0
  3567  00008B                     ___aomod@dividend:
  3568                           	opt callstack 0
  3569                           
  3570                           ; 8 bytes @ 0x2B
  3571  00008B                     	ds	1
  3572  00008C                     putch@byte:
  3573                           	opt callstack 0
  3574  00008C                     send4bits@value:
  3575                           	opt callstack 0
  3576  00008C                     I2C2_MClose@trfRsp:
  3577                           	opt callstack 0
  3578                           
  3579                           ; 1 bytes @ 0x2C
  3580  00008C                     	ds	1
  3581  00008D                     ??_isupper:
  3582  00008D                     ??_isalpha:
  3583  00008D                     ??_isdigit:
  3584  00008D                     ??_isspace:
  3585  00008D                     ??_islower:
  3586  00008D                     ??_TMR1_ReadTimer:
  3587  00008D                     ??_printstr:
  3588  00008D                     I2C2_Open@address:
  3589                           	opt callstack 0
  3590  00008D                     digitalReadD@pin:
  3591                           	opt callstack 0
  3592  00008D                     digitalReadC@pin:
  3593                           	opt callstack 0
  3594  00008D                     I2C2_SetBuffer@bufferSize:
  3595                           	opt callstack 0
  3596  00008D                     I2C2_SetCallback@ptr:
  3597                           	opt callstack 0
  3598  00008D                     send4bits@idx:
  3599                           	opt callstack 0
  3600  00008D                     ___awdiv@divisor:
  3601                           	opt callstack 0
  3602  00008D                     ___lwdiv@divisor:
  3603                           	opt callstack 0
  3604  00008D                     fputc@c:
  3605                           	opt callstack 0
  3606  00008D                     strlen@a:
  3607                           	opt callstack 0
  3608                           
  3609                           ; 2 bytes @ 0x2D
  3610  00008D                     	ds	1
  3611  00008E                     I2C2_Open@returnValue:
  3612                           	opt callstack 0
  3613  00008E                     keyPeek@n:
  3614                           	opt callstack 0
  3615  00008E                     printstr@idx:
  3616                           	opt callstack 0
  3617  00008E                     bRateUpdt@triggered:
  3618                           	opt callstack 0
  3619  00008E                     ___tmul@multiplicand:
  3620                           	opt callstack 0
  3621  00008E                     ___ltdiv@divisor:
  3622                           	opt callstack 0
  3623                           
  3624                           ; 3 bytes @ 0x2E
  3625  00008E                     	ds	1
  3626  00008F                     ??___xxtofl:
  3627  00008F                     I2C2_SetCallback@idx:
  3628                           	opt callstack 0
  3629  00008F                     keyPeek@n_4076:
  3630                           	opt callstack 0
  3631  00008F                     send@mode:
  3632                           	opt callstack 0
  3633  00008F                     expanderWriteBlock@data:
  3634                           	opt callstack 0
  3635  00008F                     ___awdiv@counter:
  3636                           	opt callstack 0
  3637  00008F                     ___lwdiv@counter:
  3638                           	opt callstack 0
  3639  00008F                     TMR1_ReadTimer@readVal:
  3640                           	opt callstack 0
  3641  00008F                     printstrblock@c:
  3642                           	opt callstack 0
  3643  00008F                     fputc@fp:
  3644                           	opt callstack 0
  3645  00008F                     ___lmul@multiplicand:
  3646                           	opt callstack 0
  3647                           
  3648                           ; 4 bytes @ 0x2F
  3649  00008F                     	ds	1
  3650  000090                     ??_keyRead:
  3651  000090                     send@value:
  3652                           	opt callstack 0
  3653  000090                     setBacklight@new_val:
  3654                           	opt callstack 0
  3655  000090                     ___awdiv@sign:
  3656                           	opt callstack 0
  3657  000090                     I2C2_SetDataCompleteCallback@cb:
  3658                           	opt callstack 0
  3659  000090                     I2C2_SetAddressNackCallback@cb:
  3660                           	opt callstack 0
  3661  000090                     I2C2_SetDataNackCallback@cb:
  3662                           	opt callstack 0
  3663  000090                     ___lwdiv@quotient:
  3664                           	opt callstack 0
  3665                           
  3666                           ; 2 bytes @ 0x30
  3667  000090                     	ds	1
  3668  000091                     ??_fputc:
  3669  000091                     ?_toupper:
  3670                           	opt callstack 0
  3671  000091                     TMR1_ReadTimer@readValHigh:
  3672                           	opt callstack 0
  3673  000091                     command@value:
  3674                           	opt callstack 0
  3675  000091                     _isspace$5410:
  3676                           	opt callstack 0
  3677  000091                     ___awdiv@quotient:
  3678                           	opt callstack 0
  3679  000091                     toupper@c:
  3680                           	opt callstack 0
  3681  000091                     ___tmul@product:
  3682                           	opt callstack 0
  3683  000091                     ___ltdiv@quotient:
  3684                           	opt callstack 0
  3685                           
  3686                           ; 3 bytes @ 0x31
  3687  000091                     	ds	1
  3688  000092                     TMR1_ReadTimer@readValLow:
  3689                           	opt callstack 0
  3690  000092                     setCursor@row:
  3691                           	opt callstack 0
  3692  000092                     I2C2_SetDataCompleteCallback@ptr:
  3693                           	opt callstack 0
  3694  000092                     I2C2_SetAddressNackCallback@ptr:
  3695                           	opt callstack 0
  3696  000092                     I2C2_SetDataNackCallback@ptr:
  3697                           	opt callstack 0
  3698  000092                     keyRead@tmp:
  3699                           	opt callstack 0
  3700                           
  3701                           ; 2 bytes @ 0x32
  3702  000092                     	ds	1
  3703  000093                     ??_toupper:
  3704  000093                     ?_timeGet:
  3705                           	opt callstack 0
  3706  000093                     ___xxtofl@sign:
  3707                           	opt callstack 0
  3708  000093                     timeElapsedR@prevTime:
  3709                           	opt callstack 0
  3710  000093                     timeElapsed@prevTime:
  3711                           	opt callstack 0
  3712  000093                     ___lmul@product:
  3713                           	opt callstack 0
  3714  000093                     setCursor@row_offsets:
  3715                           	opt callstack 0
  3716  000093                     ___aodiv@divisor:
  3717                           	opt callstack 0
  3718  000093                     ___aomod@divisor:
  3719                           	opt callstack 0
  3720                           
  3721                           ; 8 bytes @ 0x33
  3722  000093                     	ds	1
  3723  000094                     keyRead@ch:
  3724                           	opt callstack 0
  3725  000094                     I2C2_MOpen@trfRsp:
  3726                           	opt callstack 0
  3727  000094                     ___ltdiv@counter:
  3728                           	opt callstack 0
  3729  000094                     ___xxtofl@exp:
  3730                           	opt callstack 0
  3731                           
  3732                           ; 1 bytes @ 0x34
  3733  000094                     	ds	1
  3734  000095                     ?_timeDiff:
  3735                           	opt callstack 0
  3736  000095                     timeDiff@startT:
  3737                           	opt callstack 0
  3738  000095                     timeElapsedR@duration:
  3739                           	opt callstack 0
  3740  000095                     timeElapsed@duration:
  3741                           	opt callstack 0
  3742  000095                     ___xxtofl@arg:
  3743                           	opt callstack 0
  3744                           
  3745                           ; 4 bytes @ 0x35
  3746  000095                     	ds	1
  3747  000096                     fputs@s:
  3748                           	opt callstack 0
  3749                           
  3750                           ; 2 bytes @ 0x36
  3751  000096                     	ds	1
  3752  000097                     ??_timeElapsedR:
  3753  000097                     ?___lldiv:
  3754                           	opt callstack 0
  3755  000097                     timeDiff@endT:
  3756                           	opt callstack 0
  3757  000097                     timeElapsed@intTime:
  3758                           	opt callstack 0
  3759  000097                     _toupper$5491:
  3760                           	opt callstack 0
  3761  000097                     ___lldiv@dividend:
  3762                           	opt callstack 0
  3763                           
  3764                           ; 4 bytes @ 0x37
  3765  000097                     	ds	1
  3766  000098                     fputs@fp:
  3767                           	opt callstack 0
  3768                           
  3769                           ; 2 bytes @ 0x38
  3770  000098                     	ds	1
  3771  000099                     ?___fladd:
  3772                           	opt callstack 0
  3773  000099                     timeDiff@intDur:
  3774                           	opt callstack 0
  3775  000099                     timeElapsedR@intDur:
  3776                           	opt callstack 0
  3777  000099                     timeElapsed@intDur:
  3778                           	opt callstack 0
  3779  000099                     ___flge@ff1:
  3780                           	opt callstack 0
  3781  000099                     ___fladd@b:
  3782                           	opt callstack 0
  3783                           
  3784                           ; 4 bytes @ 0x39
  3785  000099                     	ds	1
  3786  00009A                     fputs@c:
  3787                           	opt callstack 0
  3788                           
  3789                           ; 1 bytes @ 0x3A
  3790  00009A                     	ds	1
  3791  00009B                     ?___wmul:
  3792                           	opt callstack 0
  3793  00009B                     keyReadEC@longPress:
  3794                           	opt callstack 0
  3795  00009B                     setCursor@col:
  3796                           	opt callstack 0
  3797  00009B                     ___aodiv@counter:
  3798                           	opt callstack 0
  3799  00009B                     ___aomod@counter:
  3800                           	opt callstack 0
  3801  00009B                     timeElapsedR@intTime:
  3802                           	opt callstack 0
  3803  00009B                     timeDelayMs@delms:
  3804                           	opt callstack 0
  3805  00009B                     ___wmul@multiplier:
  3806                           	opt callstack 0
  3807  00009B                     fputs@i:
  3808                           	opt callstack 0
  3809  00009B                     ___lldiv@divisor:
  3810                           	opt callstack 0
  3811                           
  3812                           ; 4 bytes @ 0x3B
  3813  00009B                     	ds	1
  3814  00009C                     _keyReadEC$4081:
  3815                           	opt callstack 0
  3816  00009C                     ___aodiv@sign:
  3817                           	opt callstack 0
  3818  00009C                     ___aomod@sign:
  3819                           	opt callstack 0
  3820                           
  3821                           ; 1 bytes @ 0x3C
  3822  00009C                     	ds	1
  3823  00009D                     ?_abs:
  3824                           	opt callstack 0
  3825  00009D                     ?_pad:
  3826                           	opt callstack 0
  3827  00009D                     keyReadEC@ch:
  3828                           	opt callstack 0
  3829  00009D                     timeDelayMs@tstamp:
  3830                           	opt callstack 0
  3831  00009D                     pad@fp:
  3832                           	opt callstack 0
  3833  00009D                     ___wmul@multiplicand:
  3834                           	opt callstack 0
  3835  00009D                     abs@a:
  3836                           	opt callstack 0
  3837  00009D                     ___flge@ff2:
  3838                           	opt callstack 0
  3839  00009D                     ___fladd@a:
  3840                           	opt callstack 0
  3841  00009D                     ___aodiv@quotient:
  3842                           	opt callstack 0
  3843                           
  3844                           ; 8 bytes @ 0x3D
  3845  00009D                     	ds	2
  3846  00009F                     ??_abs:
  3847  00009F                     LcdI2CInit@lcd_cols:
  3848                           	opt callstack 0
  3849  00009F                     pad@buf:
  3850                           	opt callstack 0
  3851  00009F                     ___wmul@product:
  3852                           	opt callstack 0
  3853  00009F                     ___lldiv@quotient:
  3854                           	opt callstack 0
  3855                           
  3856                           ; 4 bytes @ 0x3F
  3857  00009F                     	ds	1
  3858  0000A0                     LcdI2CInit@lcd_rows:
  3859                           	opt callstack 0
  3860                           
  3861                           ; 1 bytes @ 0x40
  3862  0000A0                     	ds	1
  3863  0000A1                     ??___fladd:
  3864  0000A1                     ??___flge:
  3865  0000A1                     ?_atoi:
  3866                           	opt callstack 0
  3867  0000A1                     LcdI2CInit@lcd_Addr:
  3868                           	opt callstack 0
  3869  0000A1                     pad@p:
  3870                           	opt callstack 0
  3871  0000A1                     atoi@s:
  3872                           	opt callstack 0
  3873                           
  3874                           ; 2 bytes @ 0x41
  3875  0000A1                     	ds	1
  3876  0000A2                     
  3877                           ; 1 bytes @ 0x42
  3878  0000A2                     	ds	1
  3879  0000A3                     ??_atoi:
  3880  0000A3                     ??_pad:
  3881  0000A3                     ___lldiv@counter:
  3882                           	opt callstack 0
  3883                           
  3884                           ; 1 bytes @ 0x43
  3885  0000A3                     	ds	1
  3886  0000A4                     ?_vMeasureGet:
  3887                           	opt callstack 0
  3888  0000A4                     pad@i:
  3889                           	opt callstack 0
  3890                           
  3891                           ; 2 bytes @ 0x44
  3892  0000A4                     	ds	1
  3893  0000A5                     ___fladd@signs:
  3894                           	opt callstack 0
  3895                           
  3896                           ; 1 bytes @ 0x45
  3897  0000A5                     	ds	1
  3898  0000A6                     ___fladd@aexp:
  3899                           	opt callstack 0
  3900  0000A6                     pad@w:
  3901                           	opt callstack 0
  3902  0000A6                     vMeasureGet@rawV:
  3903                           	opt callstack 0
  3904                           
  3905                           ; 4 bytes @ 0x46
  3906  0000A6                     	ds	1
  3907  0000A7                     ___fladd@bexp:
  3908                           	opt callstack 0
  3909                           
  3910                           ; 1 bytes @ 0x47
  3911  0000A7                     	ds	1
  3912  0000A8                     ?_vfpfcnvrt:
  3913                           	opt callstack 0
  3914  0000A8                     ___fladd@grs:
  3915                           	opt callstack 0
  3916  0000A8                     vfpfcnvrt@fp:
  3917                           	opt callstack 0
  3918                           
  3919                           ; 2 bytes @ 0x48
  3920  0000A8                     	ds	1
  3921  0000A9                     ?___fltol:
  3922                           	opt callstack 0
  3923  0000A9                     ___fltol@f1:
  3924                           	opt callstack 0
  3925                           
  3926                           ; 4 bytes @ 0x49
  3927  0000A9                     	ds	1
  3928  0000AA                     vfpfcnvrt@fmt:
  3929                           	opt callstack 0
  3930                           
  3931                           ; 1 bytes @ 0x4A
  3932  0000AA                     	ds	1
  3933  0000AB                     vfpfcnvrt@ap:
  3934                           	opt callstack 0
  3935                           
  3936                           ; 2 bytes @ 0x4B
  3937  0000AB                     	ds	2
  3938  0000AD                     ___fltol@sign1:
  3939                           	opt callstack 0
  3940  0000AD                     vfprintf@cfmt:
  3941                           	opt callstack 0
  3942                           
  3943                           ; 2 bytes @ 0x4D
  3944  0000AD                     	ds	1
  3945  0000AE                     ___fltol@exp1:
  3946                           	opt callstack 0
  3947                           
  3948                           ; 1 bytes @ 0x4E
  3949  0000AE                     	ds	1
  3950  0000AF                     
  3951                           ; 1 bytes @ 0x4F
  3952                           
  3953                           	psect	cstackCOMRAM
  3954  000001                     __pcstackCOMRAM:
  3955                           	opt callstack 0
  3956  000001                     ??_I2C2_DO_RX:
  3957  000001                     ??_lcdIrqHandler:
  3958  000001                     ?_isqrt:
  3959                           	opt callstack 0
  3960  000001                     ?_ADCC_GetFilterValue:
  3961                           	opt callstack 0
  3962  000001                     ?i2___wmul:
  3963                           	opt callstack 0
  3964  000001                     ?i2_isalpha:
  3965                           	opt callstack 0
  3966  000001                     ?i2_isdigit:
  3967                           	opt callstack 0
  3968  000001                     ?i2_isspace:
  3969                           	opt callstack 0
  3970  000001                     ?i2_isupper:
  3971                           	opt callstack 0
  3972  000001                     ?i2_strlen:
  3973                           	opt callstack 0
  3974  000001                     ?i2_islower:
  3975                           	opt callstack 0
  3976  000001                     ?i2___lmul:
  3977                           	opt callstack 0
  3978  000001                     ?i2___aodiv:
  3979                           	opt callstack 0
  3980  000001                     ?i2___aomod:
  3981                           	opt callstack 0
  3982  000001                     i2ADCC_StartConversion@channel:
  3983                           	opt callstack 0
  3984  000001                     i2UART1_Write@txData:
  3985                           	opt callstack 0
  3986  000001                     i2I2C2_MasterSendTxData@data:
  3987                           	opt callstack 0
  3988  000001                     i2I2C2_MasterSetCounter@counter:
  3989                           	opt callstack 0
  3990  000001                     isqrt@x:
  3991                           	opt callstack 0
  3992  000001                     i2I2C2_SetBuffer@buffer:
  3993                           	opt callstack 0
  3994  000001                     i2I2C2_SetCallback@cb:
  3995                           	opt callstack 0
  3996  000001                     i2___wmul@multiplier:
  3997                           	opt callstack 0
  3998  000001                     i2isalpha@c:
  3999                           	opt callstack 0
  4000  000001                     i2isdigit@c:
  4001                           	opt callstack 0
  4002  000001                     i2isspace@c:
  4003                           	opt callstack 0
  4004  000001                     i2isupper@c:
  4005                           	opt callstack 0
  4006  000001                     i2strlen@s:
  4007                           	opt callstack 0
  4008  000001                     i2islower@c:
  4009                           	opt callstack 0
  4010  000001                     i2___lmul@multiplier:
  4011                           	opt callstack 0
  4012  000001                     i2___aodiv@dividend:
  4013                           	opt callstack 0
  4014  000001                     i2___aomod@dividend:
  4015                           	opt callstack 0
  4016                           
  4017                           ; 8 bytes @ 0x0
  4018  000001                     	ds	1
  4019  000002                     lcdIrqHandler@byte:
  4020                           	opt callstack 0
  4021  000002                     i2putch@byte:
  4022                           	opt callstack 0
  4023                           
  4024                           ; 1 bytes @ 0x1
  4025  000002                     	ds	1
  4026  000003                     ??_isqrt:
  4027  000003                     ??_ADCC_GetFilterValue:
  4028  000003                     ??i2_isalpha:
  4029  000003                     ??i2_isdigit:
  4030  000003                     ??i2_isspace:
  4031  000003                     ??i2_isupper:
  4032  000003                     ??i2_islower:
  4033  000003                     I2C2_DO_RX@retFsmState:
  4034                           	opt callstack 0
  4035  000003                     i2I2C2_SetBuffer@bufferSize:
  4036                           	opt callstack 0
  4037  000003                     i2I2C2_SetCallback@ptr:
  4038                           	opt callstack 0
  4039  000003                     i2___wmul@multiplicand:
  4040                           	opt callstack 0
  4041  000003                     i2fputc@c:
  4042                           	opt callstack 0
  4043  000003                     i2strlen@a:
  4044                           	opt callstack 0
  4045                           
  4046                           ; 2 bytes @ 0x2
  4047  000003                     	ds	2
  4048  000005                     i2I2C2_SetCallback@idx:
  4049                           	opt callstack 0
  4050  000005                     isqrt@op:
  4051                           	opt callstack 0
  4052  000005                     i2rd1RegCompleteHandler@ptr:
  4053                           	opt callstack 0
  4054  000005                     i2rd2RegCompleteHandler@ptr:
  4055                           	opt callstack 0
  4056  000005                     i2wr1RegCompleteHandler@ptr:
  4057                           	opt callstack 0
  4058  000005                     i2wr2RegCompleteHandler@ptr:
  4059                           	opt callstack 0
  4060  000005                     i2rdBlkRegCompleteHandler@ptr:
  4061                           	opt callstack 0
  4062  000005                     i2I2C2_CallbackReturnStop@funPtr:
  4063                           	opt callstack 0
  4064  000005                     i2___wmul@product:
  4065                           	opt callstack 0
  4066  000005                     i2fputc@fp:
  4067                           	opt callstack 0
  4068  000005                     i2___lmul@multiplicand:
  4069                           	opt callstack 0
  4070                           
  4071                           ; 4 bytes @ 0x4
  4072  000005                     	ds	1
  4073  000006                     i2I2C2_SetDataCompleteCallback@cb:
  4074                           	opt callstack 0
  4075                           
  4076                           ; 2 bytes @ 0x5
  4077  000006                     	ds	1
  4078  000007                     ??_I2C2_DO_TX:
  4079  000007                     ??_I2C2_DO_TX_EMPTY:
  4080  000007                     ??_I2C2_DO_ADDRESS_NACK:
  4081  000007                     ??_I2C2_DO_BUS_COLLISION:
  4082  000007                     ??i2_I2C2_DO_RX_EMPTY:
  4083  000007                     ??i2_fputc:
  4084  000007                     ?i2_toupper:
  4085                           	opt callstack 0
  4086  000007                     i2_isspace$5410:
  4087                           	opt callstack 0
  4088  000007                     isqrt@res:
  4089                           	opt callstack 0
  4090  000007                     i2toupper@c:
  4091                           	opt callstack 0
  4092                           
  4093                           ; 2 bytes @ 0x6
  4094  000007                     	ds	1
  4095  000008                     ?i2_atoi:
  4096                           	opt callstack 0
  4097  000008                     i2I2C2_SetDataCompleteCallback@ptr:
  4098                           	opt callstack 0
  4099  000008                     i2atoi@s:
  4100                           	opt callstack 0
  4101                           
  4102                           ; 2 bytes @ 0x7
  4103  000008                     	ds	1
  4104  000009                     ??i2_toupper:
  4105  000009                     I2C2_DO_TX@dataTx:
  4106                           	opt callstack 0
  4107  000009                     isqrt@one:
  4108                           	opt callstack 0
  4109  000009                     i2___lmul@product:
  4110                           	opt callstack 0
  4111  000009                     i2___aodiv@divisor:
  4112                           	opt callstack 0
  4113  000009                     i2___aomod@divisor:
  4114                           	opt callstack 0
  4115                           
  4116                           ; 8 bytes @ 0x8
  4117  000009                     	ds	1
  4118  00000A                     ??i2_atoi:
  4119  00000A                     I2C2_DO_TX@retFsmState:
  4120                           	opt callstack 0
  4121                           
  4122                           ; 1 bytes @ 0x9
  4123  00000A                     	ds	1
  4124  00000B                     _I2C2_DO_TX$2655:
  4125                           	opt callstack 0
  4126                           
  4127                           ; 2 bytes @ 0xA
  4128  00000B                     	ds	1
  4129  00000C                     i2fputs@s:
  4130                           	opt callstack 0
  4131                           
  4132                           ; 2 bytes @ 0xB
  4133  00000C                     	ds	1
  4134  00000D                     ??_I2C2_MasterFsm:
  4135  00000D                     i2_toupper$5491:
  4136                           	opt callstack 0
  4137                           
  4138                           ; 2 bytes @ 0xC
  4139  00000D                     	ds	1
  4140  00000E                     i2atoi@neg:
  4141                           	opt callstack 0
  4142  00000E                     i2fputs@fp:
  4143                           	opt callstack 0
  4144                           
  4145                           ; 2 bytes @ 0xD
  4146  00000E                     	ds	1
  4147  00000F                     
  4148                           ; 1 bytes @ 0xE
  4149  00000F                     	ds	1
  4150  000010                     i2fputs@c:
  4151                           	opt callstack 0
  4152  000010                     i2_atoi$5383:
  4153                           	opt callstack 0
  4154                           
  4155                           ; 2 bytes @ 0xF
  4156  000010                     	ds	1
  4157  000011                     i2___aodiv@counter:
  4158                           	opt callstack 0
  4159  000011                     i2___aomod@counter:
  4160                           	opt callstack 0
  4161  000011                     i2fputs@i:
  4162                           	opt callstack 0
  4163                           
  4164                           ; 2 bytes @ 0x10
  4165  000011                     	ds	1
  4166  000012                     i2___aodiv@sign:
  4167                           	opt callstack 0
  4168  000012                     i2___aomod@sign:
  4169                           	opt callstack 0
  4170  000012                     i2_atoi$5385:
  4171                           	opt callstack 0
  4172                           
  4173                           ; 2 bytes @ 0x11
  4174  000012                     	ds	1
  4175  000013                     ?i2_pad:
  4176                           	opt callstack 0
  4177  000013                     ?i2_abs:
  4178                           	opt callstack 0
  4179  000013                     i2pad@fp:
  4180                           	opt callstack 0
  4181  000013                     i2abs@a:
  4182                           	opt callstack 0
  4183  000013                     i2___aodiv@quotient:
  4184                           	opt callstack 0
  4185                           
  4186                           ; 8 bytes @ 0x12
  4187  000013                     	ds	1
  4188  000014                     i2_atoi$5384:
  4189                           	opt callstack 0
  4190                           
  4191                           ; 1 bytes @ 0x13
  4192  000014                     	ds	1
  4193  000015                     ??i2_abs:
  4194  000015                     i2pad@buf:
  4195                           	opt callstack 0
  4196  000015                     i2atoi@n:
  4197                           	opt callstack 0
  4198                           
  4199                           ; 2 bytes @ 0x14
  4200  000015                     	ds	2
  4201  000017                     i2pad@p:
  4202                           	opt callstack 0
  4203                           
  4204                           ; 2 bytes @ 0x16
  4205  000017                     	ds	2
  4206  000019                     ??i2_pad:
  4207                           
  4208                           ; 1 bytes @ 0x18
  4209  000019                     	ds	1
  4210  00001A                     i2pad@i:
  4211                           	opt callstack 0
  4212                           
  4213                           ; 2 bytes @ 0x19
  4214  00001A                     	ds	2
  4215  00001C                     i2pad@w:
  4216                           	opt callstack 0
  4217                           
  4218                           ; 2 bytes @ 0x1B
  4219  00001C                     	ds	2
  4220  00001E                     ?i2_dtoa:
  4221                           	opt callstack 0
  4222  00001E                     ?i2_xtoa:
  4223                           	opt callstack 0
  4224  00001E                     i2dtoa@fp:
  4225                           	opt callstack 0
  4226  00001E                     i2xtoa@fp:
  4227                           	opt callstack 0
  4228                           
  4229                           ; 2 bytes @ 0x1D
  4230  00001E                     	ds	2
  4231  000020                     i2dtoa@d:
  4232                           	opt callstack 0
  4233  000020                     i2xtoa@d:
  4234                           	opt callstack 0
  4235                           
  4236                           ; 8 bytes @ 0x1F
  4237  000020                     	ds	8
  4238  000028                     ??i2_dtoa:
  4239  000028                     i2xtoa@x:
  4240                           	opt callstack 0
  4241                           
  4242                           ; 1 bytes @ 0x27
  4243  000028                     	ds	1
  4244  000029                     ??i2_xtoa:
  4245                           
  4246                           ; 1 bytes @ 0x28
  4247  000029                     	ds	7
  4248  000030                     i2_dtoa$4899:
  4249                           	opt callstack 0
  4250                           
  4251                           ; 2 bytes @ 0x2F
  4252  000030                     	ds	1
  4253  000031                     i2_xtoa$4910:
  4254                           	opt callstack 0
  4255                           
  4256                           ; 2 bytes @ 0x30
  4257  000031                     	ds	1
  4258  000032                     i2dtoa@p:
  4259                           	opt callstack 0
  4260                           
  4261                           ; 2 bytes @ 0x31
  4262  000032                     	ds	1
  4263  000033                     i2_xtoa$4911:
  4264                           	opt callstack 0
  4265                           
  4266                           ; 2 bytes @ 0x32
  4267  000033                     	ds	1
  4268  000034                     i2dtoa@w:
  4269                           	opt callstack 0
  4270                           
  4271                           ; 2 bytes @ 0x33
  4272  000034                     	ds	1
  4273  000035                     i2xtoa@p:
  4274                           	opt callstack 0
  4275                           
  4276                           ; 2 bytes @ 0x34
  4277  000035                     	ds	1
  4278  000036                     i2dtoa@s:
  4279                           	opt callstack 0
  4280                           
  4281                           ; 2 bytes @ 0x35
  4282  000036                     	ds	1
  4283  000037                     i2xtoa@w:
  4284                           	opt callstack 0
  4285                           
  4286                           ; 2 bytes @ 0x36
  4287  000037                     	ds	1
  4288  000038                     i2dtoa@n:
  4289                           	opt callstack 0
  4290                           
  4291                           ; 8 bytes @ 0x37
  4292  000038                     	ds	1
  4293  000039                     i2xtoa@n:
  4294                           	opt callstack 0
  4295                           
  4296                           ; 8 bytes @ 0x38
  4297  000039                     	ds	7
  4298  000040                     i2dtoa@i:
  4299                           	opt callstack 0
  4300                           
  4301                           ; 2 bytes @ 0x3F
  4302  000040                     	ds	1
  4303  000041                     i2xtoa@i:
  4304                           	opt callstack 0
  4305                           
  4306                           ; 2 bytes @ 0x40
  4307  000041                     	ds	2
  4308  000043                     i2xtoa@c:
  4309                           	opt callstack 0
  4310                           
  4311                           ; 2 bytes @ 0x42
  4312  000043                     	ds	2
  4313  000045                     ?i2_vfpfcnvrt:
  4314                           	opt callstack 0
  4315  000045                     i2vfpfcnvrt@fp:
  4316                           	opt callstack 0
  4317                           
  4318                           ; 2 bytes @ 0x44
  4319  000045                     	ds	2
  4320  000047                     i2vfpfcnvrt@fmt:
  4321                           	opt callstack 0
  4322                           
  4323                           ; 1 bytes @ 0x46
  4324  000047                     	ds	1
  4325  000048                     i2vfpfcnvrt@ap:
  4326                           	opt callstack 0
  4327                           
  4328                           ; 2 bytes @ 0x47
  4329  000048                     	ds	2
  4330  00004A                     ??i2_vfpfcnvrt:
  4331                           
  4332                           ; 1 bytes @ 0x49
  4333  00004A                     	ds	4
  4334  00004E                     i2vfprintf@cfmt:
  4335                           	opt callstack 0
  4336                           
  4337                           ; 2 bytes @ 0x4D
  4338  00004E                     	ds	2
  4339  000050                     
  4340                           ; 1 bytes @ 0x4F
  4341  000050                     	ds	2
  4342  000052                     i2printf@ap:
  4343                           	opt callstack 0
  4344                           
  4345                           ; 2 bytes @ 0x51
  4346  000052                     	ds	2
  4347  000054                     ??i2_adcGetCh:
  4348  000054                     ??i2_aCaptGetResult:
  4349                           
  4350                           ; 1 bytes @ 0x53
  4351  000054                     	ds	2
  4352  000056                     i2adcGetCh@sel:
  4353                           	opt callstack 0
  4354                           
  4355                           ; 1 bytes @ 0x55
  4356  000056                     	ds	1
  4357  000057                     ??_adcCaptureIsr:
  4358                           
  4359                           ; 1 bytes @ 0x56
  4360  000057                     	ds	1
  4361  000058                     i2aCaptGetResult@lclValid:
  4362                           	opt callstack 0
  4363                           
  4364                           ; 1 bytes @ 0x57
  4365  000058                     	ds	1
  4366  000059                     i2aCaptGetResult@sel:
  4367                           	opt callstack 0
  4368                           
  4369                           ; 1 bytes @ 0x58
  4370  000059                     	ds	1
  4371  00005A                     i2aCaptGetResult@lclRaw:
  4372                           	opt callstack 0
  4373                           
  4374                           ; 4 bytes @ 0x59
  4375  00005A                     	ds	4
  4376  00005E                     ??_vMeasureIsr:
  4377                           
  4378                           ; 1 bytes @ 0x5D
  4379  00005E                     	ds	1
  4380  00005F                     
  4381                           ; 1 bytes @ 0x5E
  4382  00005F                     	ds	1
  4383  000060                     
  4384                           ; 1 bytes @ 0x5F
  4385 ;;
  4386 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  4387 ;;
  4388 ;; *************** function _main *****************
  4389 ;; Defined at:
  4390 ;;		line 218 in file "main.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  pAux            2   53[BANK3 ] short 
  4395 ;;  pAux            2   51[BANK3 ] short 
  4396 ;;  keyTmp          1   42[BANK3 ] unsigned char 
  4397 ;;  tmpVal          2   55[BANK3 ] short 
  4398 ;;  pInspOSScale    2   49[BANK3 ] short 
  4399 ;;  tmpVal2         2   47[BANK3 ] short 
  4400 ;;  tmpUVal         2   43[BANK3 ] unsigned short 
  4401 ;;  printTime       2   40[BANK3 ] unsigned short 
  4402 ;;  vInspOSScale    2   38[BANK3 ] short 
  4403 ;;  tstScreen       1   34[BANK3 ] _Bool 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 3F/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0      31       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0      42       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:       42 bytes
  4418 ;; Hardware stack levels required when called:   34
  4419 ;; This function calls:
  4420 ;;		_CtrlPowerOff
  4421 ;;		_I2C2_MuxInit
  4422 ;;		_MenuMng
  4423 ;;		_MonitorErrorClr
  4424 ;;		_MonitorErrorSet
  4425 ;;		_MonitorInit
  4426 ;;		_MonitorMsgBusy
  4427 ;;		_MonitorMsgSend
  4428 ;;		_MonitorMsgSendBlock
  4429 ;;		_SYSTEM_Initialize
  4430 ;;		_SelfTest
  4431 ;;		_TMR4_SetInterruptHandler
  4432 ;;		_TMR4_Start
  4433 ;;		___fladd
  4434 ;;		___fltol
  4435 ;;		___ltdiv
  4436 ;;		___lwdiv
  4437 ;;		___tmul
  4438 ;;		___wmul
  4439 ;;		___xxtofl
  4440 ;;		_aCaptGetResult
  4441 ;;		_aCaptRstFlt
  4442 ;;		_aCaptureInit
  4443 ;;		_bRateGet
  4444 ;;		_bRateInit
  4445 ;;		_bRateUpdt
  4446 ;;		_inspOSMeasure
  4447 ;;		_keyPeek
  4448 ;;		_keyRead
  4449 ;;		_keyReadEC
  4450 ;;		_keyReadInit
  4451 ;;		_printf
  4452 ;;		_printstrblock
  4453 ;;		_screenInit
  4454 ;;		_screenMng
  4455 ;;		_setBacklight
  4456 ;;		_setCursor
  4457 ;;		_sprintf
  4458 ;;		_timeDelayMs
  4459 ;;		_timeDiff
  4460 ;;		_timeElapsed
  4461 ;;		_timeElapsedR
  4462 ;;		_timeGet
  4463 ;;		_timeInit
  4464 ;;		_vMeasureGet
  4465 ;;		_vMeasureInit
  4466 ;;		_vMeasureRst
  4467 ;; This function is called by:
  4468 ;;		Startup code after reset
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text0
  4473  00001E                     __ptext0:
  4474                           	opt callstack 0
  4475  00001E                     _main:
  4476                           	opt callstack 0
  4477                           
  4478                           ;main.c: 219:     uint16_t tmpUVal;;main.c: 220:     int16_t tmpVal, tmpVal2;;main.c: 22
      +                          1:     int16_t pInspOSScale, vInspOSScale;;main.c: 223:     time_t printTime;;main.c: 22
      +                          5:     _Bool tstScreen = 1;
  4479                           
  4480                           ;incstack = 0
  4481 ;; hardware stack exceeded
  4482  00001E  0E01               	movlw	1
  4483  000020  0103               	movlb	3	; () banked
  4484  000022  6FB2               	movwf	main@tstScreen& (0+255),b
  4485                           
  4486                           ; BSR set to: 3
  4487                           ;main.c: 229:     SYSTEM_Initialize();
  4488  000024  EC5D  F04D         	call	_SYSTEM_Initialize	;wreg free
  4489                           
  4490                           ; BSR set to: 61
  4491                           ;main.c: 231:     PIE1bits.ADIE = 0;
  4492  000028  0139               	movlb	57	; () banked
  4493  00002A  9591               	bcf	145,2,b	;volatile
  4494                           
  4495                           ; BSR set to: 57
  4496                           ;main.c: 232:     PIE1bits.ADTIE = 0;
  4497  00002C  9791               	bcf	145,3,b	;volatile
  4498                           
  4499                           ; BSR set to: 57
  4500                           ;main.c: 234:     TMR4_SetInterruptHandler(SV2DelayOpen);
  4501  00002E  0EEE               	movlw	low _SV2DelayOpen
  4502  000030  0100               	movlb	0	; () banked
  4503  000032  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  4504  000034  0EA6               	movlw	high _SV2DelayOpen
  4505  000036  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4506  000038  EC5B  F053         	call	_TMR4_SetInterruptHandler	;wreg free
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;main.c: 239:     (INTCON0bits.GIE = 1);
  4510  00003C  8ED2               	bsf	210,7,c	;volatile
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;main.c: 244:     aCaptureInit();
  4514  00003E  EC87  F04A         	call	_aCaptureInit	;wreg free
  4515                           
  4516                           ; BSR set to: 57
  4517                           ;main.c: 245:     timeInit();
  4518  000042  ECDD  F053         	call	_timeInit	;wreg free
  4519                           
  4520                           ; BSR set to: 57
  4521                           ;main.c: 248:     timeDelayMs(50);
  4522  000046  0E00               	movlw	0
  4523  000048  0100               	movlb	0	; () banked
  4524  00004A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4525  00004C  0E32               	movlw	50
  4526  00004E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4527  000050  ECE4  F04D         	call	_timeDelayMs	;wreg free
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 250:     keyReadInit();
  4531  000054  ECA4  F052         	call	_keyReadInit	;wreg free
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;main.c: 251:     screenInit();
  4535  000058  ECAA  F048         	call	_screenInit	;wreg free
  4536                           
  4537                           ;main.c: 252:     I2C2_MuxInit();
  4538  00005C  ECB1  F051         	call	_I2C2_MuxInit	;wreg free
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;main.c: 253:     MonitorInit();
  4542  000060  EC57  F054         	call	_MonitorInit	;wreg free
  4543                           
  4544                           ; BSR set to: 1
  4545                           ;main.c: 254:     vMeasureInit();
  4546  000064  EC82  F050         	call	_vMeasureInit	;wreg free
  4547  000068  D002               	goto	l20491
  4548  00006A                     l20489:
  4549                           
  4550                           ; BSR set to: 3
  4551                           ;main.c: 259:             tstScreen = 0;
  4552  00006A  0E00               	movlw	0
  4553  00006C  6FB2               	movwf	main@tstScreen& (0+255),b
  4554  00006E                     l20491:
  4555                           
  4556                           ;main.c: 258:         while (!SelfTest(tstScreen))
  4557  00006E  0103               	movlb	3	; () banked
  4558  000070  51B2               	movf	main@tstScreen& (0+255),w,b
  4559  000072  ECC2  F01D         	call	_SelfTest
  4560  000076  0900               	iorlw	0
  4561  000078  B4D8               	btfsc	status,2,c
  4562  00007A  D7F7               	goto	l20489
  4563                           
  4564                           ; BSR set to: 3
  4565                           ;main.c: 261:         tstScreen = 0;
  4566  00007C  0E00               	movlw	0
  4567  00007E  6FB2               	movwf	main@tstScreen& (0+255),b
  4568                           
  4569                           ; BSR set to: 3
  4570                           ;main.c: 262:         setCursor(0, 0);
  4571  000080  0E00               	movlw	0
  4572  000082  0100               	movlb	0	; () banked
  4573  000084  6F92               	movwf	setCursor@row& (0+255),b
  4574  000086  0E00               	movlw	0
  4575  000088  ECAD  F04C         	call	_setCursor
  4576                           
  4577                           ;main.c: 263:         printstrblock("PRESS + TO REPEAT ");
  4578  00008C  0E5D               	movlw	low STR_5
  4579  00008E  0100               	movlb	0	; () banked
  4580  000090  6F8F               	movwf	printstrblock@c& (0+255),b
  4581  000092  0EFD               	movlw	high STR_5
  4582  000094  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4583  000096  ECA8  F050         	call	_printstrblock	;wreg free
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;main.c: 264:         setCursor(0, 1);
  4587  00009A  0E01               	movlw	1
  4588  00009C  6F92               	movwf	setCursor@row& (0+255),b
  4589  00009E  0E00               	movlw	0
  4590  0000A0  ECAD  F04C         	call	_setCursor
  4591                           
  4592                           ;main.c: 265:         printstrblock("PRESS - TO EXIT ");
  4593  0000A4  0EE9               	movlw	low STR_6
  4594  0000A6  0100               	movlb	0	; () banked
  4595  0000A8  6F8F               	movwf	printstrblock@c& (0+255),b
  4596  0000AA  0EFE               	movlw	high STR_6
  4597  0000AC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4598  0000AE  ECA8  F050         	call	_printstrblock	;wreg free
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;main.c: 267:         keyTmp = keyRead();
  4602  0000B2  EC44  F04B         	call	_keyRead	;wreg free
  4603  0000B6  0103               	movlb	3	; () banked
  4604  0000B8  6FBA               	movwf	main@keyTmp& (0+255),b
  4605                           
  4606                           ;main.c: 268:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4607  0000BA  D007               	goto	l20509
  4608  0000BC                     l20505:
  4609                           
  4610                           ; BSR set to: 3
  4611                           ;main.c: 269:             keyTmp = keyRead();
  4612  0000BC  EC44  F04B         	call	_keyRead	;wreg free
  4613  0000C0  0103               	movlb	3	; () banked
  4614  0000C2  6FBA               	movwf	main@keyTmp& (0+255),b
  4615                           
  4616                           ; BSR set to: 3
  4617                           ;main.c: 270:             MonitorMsgSend(MONSTATE_STOP);
  4618  0000C4  0E00               	movlw	0
  4619  0000C6  EC59  F050         	call	_MonitorMsgSend
  4620  0000CA                     l20509:
  4621                           
  4622                           ;main.c: 268:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4623  0000CA  0E05               	movlw	5
  4624  0000CC  0103               	movlb	3	; () banked
  4625  0000CE  19BA               	xorwf	main@keyTmp& (0+255),w,b
  4626  0000D0  B4D8               	btfsc	status,2,c
  4627  0000D2  D004               	goto	u22090
  4628                           
  4629                           ; BSR set to: 3
  4630  0000D4  0E03               	movlw	3
  4631  0000D6  19BA               	xorwf	main@keyTmp& (0+255),w,b
  4632  0000D8  A4D8               	btfss	status,2,c
  4633  0000DA  D7F0               	goto	l20505
  4634  0000DC                     u22090:
  4635                           
  4636                           ; BSR set to: 3
  4637                           ;main.c: 272:         if (keyTmp == 5) {
  4638  0000DC  0E05               	movlw	5
  4639  0000DE  19BA               	xorwf	main@keyTmp& (0+255),w,b
  4640  0000E0  A4D8               	btfss	status,2,c
  4641  0000E2  D7C5               	goto	l20491
  4642                           
  4643                           ; BSR set to: 3
  4644                           ;main.c: 278:     setCursor(0, 1);
  4645  0000E4  0E01               	movlw	1
  4646  0000E6  0100               	movlb	0	; () banked
  4647  0000E8  6F92               	movwf	setCursor@row& (0+255),b
  4648  0000EA  0E00               	movlw	0
  4649  0000EC  ECAD  F04C         	call	_setCursor
  4650                           
  4651                           ;main.c: 279:     printstrblock("                ");
  4652  0000F0  0ED8               	movlw	low STR_2
  4653  0000F2  0100               	movlb	0	; () banked
  4654  0000F4  6F8F               	movwf	printstrblock@c& (0+255),b
  4655  0000F6  0EFE               	movlw	high STR_2
  4656  0000F8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4657  0000FA  ECA8  F050         	call	_printstrblock	;wreg free
  4658  0000FE                     l20521:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 282:         setCursor(0, 1);
  4662  0000FE  0E01               	movlw	1
  4663  000100  6F92               	movwf	setCursor@row& (0+255),b
  4664  000102  0E00               	movlw	0
  4665  000104  ECAD  F04C         	call	_setCursor
  4666                           
  4667                           ;main.c: 283:         printstrblock("                ");
  4668  000108  0ED8               	movlw	low STR_2
  4669  00010A  0100               	movlb	0	; () banked
  4670  00010C  6F8F               	movwf	printstrblock@c& (0+255),b
  4671  00010E  0EFE               	movlw	high STR_2
  4672  000110  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4673  000112  ECA8  F050         	call	_printstrblock	;wreg free
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;main.c: 284:         timeDelayMs(10);
  4677  000116  0E00               	movlw	0
  4678  000118  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4679  00011A  0E0A               	movlw	10
  4680  00011C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4681  00011E  ECE4  F04D         	call	_timeDelayMs	;wreg free
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;main.c: 285:         setBacklight(1);
  4685  000122  0E01               	movlw	1
  4686  000124  EC56  F052         	call	_setBacklight
  4687                           
  4688                           ;main.c: 286:         timeDelayMs(10);
  4689  000128  0E00               	movlw	0
  4690  00012A  0100               	movlb	0	; () banked
  4691  00012C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4692  00012E  0E0A               	movlw	10
  4693  000130  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4694  000132  ECE4  F04D         	call	_timeDelayMs	;wreg free
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;main.c: 289:         lcdPrintTR = 1;
  4698  000136  0E01               	movlw	1
  4699  000138  0101               	movlb	1	; () banked
  4700  00013A  6FC6               	movwf	_lcdPrintTR& (0+255),b
  4701                           
  4702                           ; BSR set to: 1
  4703                           ;main.c: 290:         lcdPrintBR = 1;
  4704  00013C  0E01               	movlw	1
  4705  00013E  6FC5               	movwf	_lcdPrintBR& (0+255),b
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;main.c: 291:         LATDbits.LATD6 = 1;
  4709  000140  8CBD               	bsf	189,6,c	;volatile
  4710                           
  4711                           ;main.c: 292:         while (ctrlStatus != CTRL_RUN) {
  4712  000142  D046               	goto	l20571
  4713  000144                     l20535:
  4714                           
  4715                           ; BSR set to: 1
  4716                           ;main.c: 294:             MenuMng();
  4717  000144  ECA2  F015         	call	_MenuMng	;wreg free
  4718                           
  4719                           ;main.c: 295:             screenMng();
  4720  000148  EC2F  F01A         	call	_screenMng	;wreg free
  4721                           
  4722                           ;main.c: 297:             if (ctrlStatus == CTRL_SLEEP) {
  4723  00014C  0E03               	movlw	3
  4724  00014E  0101               	movlb	1	; () banked
  4725  000150  19C0               	xorwf	_ctrlStatus& (0+255),w,b
  4726  000152  A4D8               	btfss	status,2,c
  4727  000154  D024               	goto	l20557
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;main.c: 298:                 CtrlPowerOff();
  4731  000156  ECD3  F042         	call	_CtrlPowerOff	;wreg free
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;main.c: 299:                 setCursor(0, 1);
  4735  00015A  0E01               	movlw	1
  4736  00015C  6F92               	movwf	setCursor@row& (0+255),b
  4737  00015E  0E00               	movlw	0
  4738  000160  ECAD  F04C         	call	_setCursor
  4739                           
  4740                           ;main.c: 300:                 printstrblock("                ");
  4741  000164  0ED8               	movlw	low STR_2
  4742  000166  0100               	movlb	0	; () banked
  4743  000168  6F8F               	movwf	printstrblock@c& (0+255),b
  4744  00016A  0EFE               	movlw	high STR_2
  4745  00016C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4746  00016E  ECA8  F050         	call	_printstrblock	;wreg free
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;main.c: 301:                 timeDelayMs(10);
  4750  000172  0E00               	movlw	0
  4751  000174  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4752  000176  0E0A               	movlw	10
  4753  000178  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4754  00017A  ECE4  F04D         	call	_timeDelayMs	;wreg free
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;main.c: 302:                 setBacklight(1);
  4758  00017E  0E01               	movlw	1
  4759  000180  EC56  F052         	call	_setBacklight
  4760                           
  4761                           ;main.c: 303:                 timeDelayMs(10);
  4762  000184  0E00               	movlw	0
  4763  000186  0100               	movlb	0	; () banked
  4764  000188  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4765  00018A  0E0A               	movlw	10
  4766  00018C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4767  00018E  ECE4  F04D         	call	_timeDelayMs	;wreg free
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;main.c: 305:                 lcdPrintTR = 1;
  4771  000192  0E01               	movlw	1
  4772  000194  0101               	movlb	1	; () banked
  4773  000196  6FC6               	movwf	_lcdPrintTR& (0+255),b
  4774                           
  4775                           ; BSR set to: 1
  4776                           ;main.c: 306:                 lcdPrintBR = 1;
  4777  000198  0E01               	movlw	1
  4778  00019A  6FC5               	movwf	_lcdPrintBR& (0+255),b
  4779                           
  4780                           ; BSR set to: 1
  4781                           ;main.c: 307:                 LATDbits.LATD6 = 1;
  4782  00019C  8CBD               	bsf	189,6,c	;volatile
  4783  00019E                     l20557:
  4784                           
  4785                           ; BSR set to: 1
  4786                           ;main.c: 310:             MonitorMsgSend(MONSTATE_STOP);
  4787  00019E  0E00               	movlw	0
  4788  0001A0  EC59  F050         	call	_MonitorMsgSend
  4789                           
  4790                           ;main.c: 312:             if (keyReadEC() == -100) {
  4791  0001A4  EC50  F044         	call	_keyReadEC	;wreg free
  4792  0001A8  0A9C               	xorlw	156
  4793  0001AA  A4D8               	btfss	status,2,c
  4794  0001AC  D011               	goto	l20571
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;main.c: 313:                 if (keyPeek() == 4) {
  4798  0001AE  ECEE  F047         	call	_keyPeek	;wreg free
  4799  0001B2  0A04               	xorlw	4
  4800  0001B4  A4D8               	btfss	status,2,c
  4801  0001B6  D00C               	goto	l20571
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;main.c: 315:                     LATDbits.LATD6 = 0;
  4805  0001B8  9CBD               	bcf	189,6,c	;volatile
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;main.c: 316:                     ctrlStatus = CTRL_RUN;
  4809  0001BA  0E02               	movlw	2
  4810  0001BC  0101               	movlb	1	; () banked
  4811  0001BE  6FC0               	movwf	_ctrlStatus& (0+255),b
  4812  0001C0                     l20567:
  4813                           
  4814                           ;main.c: 319:                     while (keyPeek() != -1)
  4815  0001C0  ECEE  F047         	call	_keyPeek	;wreg free
  4816  0001C4  0AFF               	xorlw	255
  4817  0001C6  A4D8               	btfss	status,2,c
  4818  0001C8  D7FB               	goto	l20567
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;main.c: 321:                     keyReadInit();
  4822  0001CA  ECA4  F052         	call	_keyReadInit	;wreg free
  4823                           
  4824                           ;main.c: 322:                     break;
  4825  0001CE  D005               	goto	u22150
  4826  0001D0                     l20571:
  4827                           
  4828                           ;main.c: 292:         while (ctrlStatus != CTRL_RUN) {
  4829  0001D0  0E02               	movlw	2
  4830  0001D2  0101               	movlb	1	; () banked
  4831  0001D4  19C0               	xorwf	_ctrlStatus& (0+255),w,b
  4832  0001D6  A4D8               	btfss	status,2,c
  4833  0001D8  D7B5               	goto	l20535
  4834  0001DA                     u22150:
  4835  0001DA  ECF0  F052         	call	_MonitorMsgBusy	;wreg free
  4836  0001DE  0900               	iorlw	0
  4837  0001E0  A4D8               	btfss	status,2,c
  4838  0001E2  D7FB               	goto	u22150
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;main.c: 331:         rSV2ValveORT = 20;
  4842  0001E4  0E00               	movlw	0
  4843  0001E6  0101               	movlb	1	; () banked
  4844  0001E8  6FA2               	movwf	(_rSV2ValveORT+1)& (0+255),b
  4845  0001EA  0E14               	movlw	20
  4846  0001EC  6FA1               	movwf	_rSV2ValveORT& (0+255),b
  4847                           
  4848                           ;main.c: 332:         rSV2ValveCRT = 50;
  4849  0001EE  0E00               	movlw	0
  4850  0001F0  6FA0               	movwf	(_rSV2ValveCRT+1)& (0+255),b
  4851  0001F2  0E32               	movlw	50
  4852  0001F4  6F9F               	movwf	_rSV2ValveCRT& (0+255),b
  4853                           
  4854                           ;main.c: 333:         rSV3ValveORT = 40;
  4855  0001F6  0E00               	movlw	0
  4856  0001F8  6F9E               	movwf	(_rSV3ValveORT+1)& (0+255),b
  4857  0001FA  0E28               	movlw	40
  4858  0001FC  6F9D               	movwf	_rSV3ValveORT& (0+255),b
  4859                           
  4860                           ;main.c: 334:         sv2DelayCheck = 0;
  4861  0001FE  0E00               	movlw	0
  4862  000200  6FBD               	movwf	_sv2DelayCheck& (0+255),b
  4863                           
  4864                           ;main.c: 335:         OSCheck = 0;
  4865  000202  0E00               	movlw	0
  4866  000204  6FBB               	movwf	_OSCheck& (0+255),b
  4867                           
  4868                           ;main.c: 336:         QuantaCheck = 0;
  4869  000206  0E00               	movlw	0
  4870  000208  6FBA               	movwf	_QuantaCheck& (0+255),b
  4871                           
  4872                           ;main.c: 337:         pExpOS = 10;
  4873  00020A  0E00               	movlw	0
  4874  00020C  6FDE               	movwf	(_pExpOS+1)& (0+255),b
  4875  00020E  0E0A               	movlw	10
  4876  000210  6FDD               	movwf	_pExpOS& (0+255),b
  4877                           
  4878                           ;main.c: 338:         pInspOS = 50;
  4879  000212  0E00               	movlw	0
  4880  000214  0102               	movlb	2	; () banked
  4881  000216  6FD8               	movwf	(_pInspOS+1)& (0+255),b
  4882  000218  0E32               	movlw	50
  4883  00021A  6FD7               	movwf	_pInspOS& (0+255),b
  4884                           
  4885                           ;main.c: 339:         pInspOS3 = 50;
  4886  00021C  0E00               	movlw	0
  4887  00021E  0101               	movlb	1	; () banked
  4888  000220  6FDA               	movwf	(_pInspOS3+1)& (0+255),b
  4889  000222  0E32               	movlw	50
  4890  000224  6FD9               	movwf	_pInspOS3& (0+255),b
  4891                           
  4892                           ;main.c: 340:         pInspOS2 = 50;
  4893  000226  0E00               	movlw	0
  4894  000228  6FD8               	movwf	(_pInspOS2+1)& (0+255),b
  4895  00022A  0E32               	movlw	50
  4896  00022C  6FD7               	movwf	_pInspOS2& (0+255),b
  4897                           
  4898                           ;main.c: 341:         vInspOS = 50;
  4899  00022E  0E00               	movlw	0
  4900  000230  6FD6               	movwf	(_vInspOS+1)& (0+255),b
  4901  000232  0E32               	movlw	50
  4902  000234  6FD5               	movwf	_vInspOS& (0+255),b
  4903                           
  4904                           ;main.c: 342:         vQuanta = 30;
  4905  000236  0E00               	movlw	0
  4906  000238  6FAA               	movwf	(_vQuanta+1)& (0+255),b
  4907  00023A  0E1E               	movlw	30
  4908  00023C  6FA9               	movwf	_vQuanta& (0+255),b
  4909                           
  4910                           ;main.c: 343:         pQuantaInsp = 20;
  4911  00023E  0E00               	movlw	0
  4912  000240  6FD2               	movwf	(_pQuantaInsp+1)& (0+255),b
  4913  000242  0E14               	movlw	20
  4914  000244  6FD1               	movwf	_pQuantaInsp& (0+255),b
  4915                           
  4916                           ;main.c: 344:         pQuantaExp = 20;
  4917  000246  0E00               	movlw	0
  4918  000248  6FD0               	movwf	(_pQuantaExp+1)& (0+255),b
  4919  00024A  0E14               	movlw	20
  4920  00024C  6FCF               	movwf	_pQuantaExp& (0+255),b
  4921                           
  4922                           ;main.c: 345:         lungC = 0;
  4923  00024E  0E00               	movlw	0
  4924  000250  6FDC               	movwf	(_lungC+1)& (0+255),b
  4925  000252  0E00               	movlw	0
  4926  000254  6FDB               	movwf	_lungC& (0+255),b
  4927                           
  4928                           ;main.c: 346:         lungR = 0;
  4929  000256  0E00               	movlw	0
  4930  000258  0102               	movlb	2	; () banked
  4931  00025A  6FD6               	movwf	(_lungR+1)& (0+255),b
  4932  00025C  0E00               	movlw	0
  4933  00025E  6FD5               	movwf	_lungR& (0+255),b
  4934                           
  4935                           ;main.c: 347:         pPeepActual = 0;
  4936  000260  0E00               	movlw	0
  4937  000262  0101               	movlb	1	; () banked
  4938  000264  6FAE               	movwf	(_pPeepActual+1)& (0+255),b
  4939  000266  0E00               	movlw	0
  4940  000268  6FAD               	movwf	_pPeepActual& (0+255),b
  4941                           
  4942                           ;main.c: 348:  pPeepErr = 0;
  4943  00026A  0E00               	movlw	0
  4944  00026C  6FCA               	movwf	(_pPeepErr+1)& (0+255),b
  4945  00026E  0E00               	movlw	0
  4946  000270  6FC9               	movwf	_pPeepErr& (0+255),b
  4947                           
  4948                           ;main.c: 349:  pPeepOsc = 0;
  4949  000272  0E00               	movlw	0
  4950  000274  6FC8               	movwf	(_pPeepOsc+1)& (0+255),b
  4951  000276  0E00               	movlw	0
  4952  000278  6FC7               	movwf	_pPeepOsc& (0+255),b
  4953                           
  4954                           ;main.c: 351:         sBreath = 0;
  4955  00027A  0E00               	movlw	0
  4956  00027C  6FC1               	movwf	_sBreath& (0+255),b
  4957                           
  4958                           ; BSR set to: 1
  4959                           ;main.c: 355:         if (freeFlowRateF > 50) {
  4960  00027E  0102               	movlb	2	; () banked
  4961  000280  51DE               	movf	(_freeFlowRateF+1)& (0+255),w,b
  4962  000282  E104               	bnz	u22170
  4963  000284  0E33               	movlw	51
  4964  000286  5DDD               	subwf	_freeFlowRateF& (0+255),w,b
  4965  000288  A0D8               	btfss	status,0,c
  4966  00028A  D016               	goto	l20581
  4967  00028C                     u22170:
  4968                           
  4969                           ; BSR set to: 2
  4970                           ;main.c: 356:             effectiveFlowRateInv = ((uint24_t) 1 << 18) / freeFlowRateF;
  4971  00028C  0E00               	movlw	0
  4972  00028E  0100               	movlb	0	; () banked
  4973  000290  6F8B               	movwf	___ltdiv@dividend& (0+255),b
  4974  000292  0E00               	movlw	0
  4975  000294  6F8C               	movwf	(___ltdiv@dividend+1)& (0+255),b
  4976  000296  0E04               	movlw	4
  4977  000298  6F8D               	movwf	(___ltdiv@dividend+2)& (0+255),b
  4978  00029A  0060  FB74  F08E   	movff	_freeFlowRateF,___ltdiv@divisor
  4979  0002A0  0060  FB78  F08F   	movff	_freeFlowRateF+1,___ltdiv@divisor+1
  4980  0002A6  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  4981  0002A8  EC4E  F046         	call	___ltdiv	;wreg free
  4982  0002AC  0060  F22C  F1CD   	movff	?___ltdiv,_effectiveFlowRateInv
  4983  0002B2  0060  F230  F1CE   	movff	?___ltdiv+1,_effectiveFlowRateInv+1
  4984  0002B8                     l20581:
  4985                           
  4986                           ;main.c: 358:         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
  4987  0002B8  0EEA               	movlw	234
  4988  0002BA  0100               	movlb	0	; () banked
  4989  0002BC  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  4990  0002BE  0E60               	movlw	96
  4991  0002C0  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  4992  0002C2  0101               	movlb	1	; () banked
  4993  0002C4  51F8               	movf	_BPM& (0+255),w,b
  4994  0002C6  0D03               	mullw	3
  4995  0002C8  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
  4996  0002CE  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
  4997  0002D4  EC5E  F049         	call	___lwdiv	;wreg free
  4998  0002D8  0060  F22C  F24C   	movff	?___lwdiv,_IDuration
  4999  0002DE  0060  F230  F24D   	movff	?___lwdiv+1,_IDuration+1
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;main.c: 359:         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDuration;
  5003  0002E4  0EEA               	movlw	234
  5004  0002E6  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  5005  0002E8  0E60               	movlw	96
  5006  0002EA  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  5007  0002EC  0060  F7E0  F08D   	movff	_BPM,___lwdiv@divisor
  5008  0002F2  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5009  0002F4  EC5E  F049         	call	___lwdiv	;wreg free
  5010  0002F8  0102               	movlb	2	; () banked
  5011  0002FA  514C               	movf	_IDuration& (0+255),w,b
  5012  0002FC  0100               	movlb	0	; () banked
  5013  0002FE  5D8B               	subwf	?___lwdiv& (0+255),w,b
  5014  000300  0102               	movlb	2	; () banked
  5015  000302  6F4A               	movwf	_EDuration& (0+255),b
  5016  000304  514D               	movf	(_IDuration+1)& (0+255),w,b
  5017  000306  0100               	movlb	0	; () banked
  5018  000308  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  5019  00030A  0102               	movlb	2	; () banked
  5020  00030C  6F4B               	movwf	(_EDuration+1)& (0+255),b
  5021                           
  5022                           ; BSR set to: 2
  5023                           ;main.c: 360:         lastCycleVol = 0;
  5024  00030E  0E00               	movlw	0
  5025  000310  6F49               	movwf	(_lastCycleVol+1)& (0+255),b
  5026  000312  0E00               	movlw	0
  5027  000314  6F48               	movwf	_lastCycleVol& (0+255),b
  5028                           
  5029                           ; BSR set to: 2
  5030                           ;main.c: 361:         bRateInit();
  5031  000316  ECF4  F050         	call	_bRateInit	;wreg free
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;main.c: 364:         if (VentMode == VMODE_PRESSURE) {
  5035  00031A  0101               	movlb	1	; () banked
  5036  00031C  51F4               	movf	_VentMode& (0+255),w,b
  5037  00031E  A4D8               	btfss	status,2,c
  5038  000320  D004               	goto	l20593
  5039                           
  5040                           ; BSR set to: 1
  5041                           ;main.c: 365:             MonitorMsgSendBlock(MONSTATE_RUNP);
  5042  000322  0E10               	movlw	16
  5043  000324  ECBB  F050         	call	_MonitorMsgSendBlock
  5044                           
  5045                           ;main.c: 366:         } else {
  5046  000328  D003               	goto	l20595
  5047  00032A                     l20593:
  5048                           
  5049                           ; BSR set to: 1
  5050                           ;main.c: 367:             MonitorMsgSendBlock(MONSTATE_RUNV);
  5051  00032A  0E14               	movlw	20
  5052  00032C  ECBB  F050         	call	_MonitorMsgSendBlock
  5053  000330                     l20595:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 371:         rCycleTime = timeGet();
  5057  000330  ECD5  F052         	call	_timeGet	;wreg free
  5058  000334  0060  F24C  F1CB   	movff	?_timeGet,_rCycleTime
  5059  00033A  0060  F250  F1CC   	movff	?_timeGet+1,_rCycleTime+1
  5060                           
  5061                           ;main.c: 372:         while (ctrlStatus != CTRL_SLEEP) {
  5062  000340  EF98  F015         	goto	l21273
  5063  000344                     l1743:
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;main.c: 377:             intVentMode = VentMode;
  5067  000344  C1F4  F1C2         	movff	_VentMode,_intVentMode
  5068                           
  5069                           ; BSR set to: 1
  5070                           ;main.c: 378:             intMaxP = ((int16_t) ((0.045*4096+2)/5)*MaxP);
  5071  000348  51FB               	movf	_MaxP& (0+255),w,b
  5072  00034A  0D25               	mullw	37
  5073  00034C  006F FFCC  F1EF    	movff	prodl,_intMaxP
  5074  000352  006F FFD0  F1F0    	movff	prodh,_intMaxP+1
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;main.c: 379:             intPEEP = ((int16_t) ((0.045*4096+2)/5)*PEEP) + ((int16_t) ((0
      +                          .045*4096+2)/5)*1.0) + pPeepOsc;
  5078  000358  0E00               	movlw	0
  5079  00035A  0100               	movlb	0	; () banked
  5080  00035C  6F9D               	movwf	___fladd@a& (0+255),b
  5081  00035E  0E00               	movlw	0
  5082  000360  6F9E               	movwf	(___fladd@a+1)& (0+255),b
  5083  000362  0E14               	movlw	20
  5084  000364  6F9F               	movwf	(___fladd@a+2)& (0+255),b
  5085  000366  0E42               	movlw	66
  5086  000368  6FA0               	movwf	(___fladd@a+3)& (0+255),b
  5087  00036A  0101               	movlb	1	; () banked
  5088  00036C  51F6               	movf	_PEEP& (0+255),w,b
  5089  00036E  0D25               	mullw	37
  5090  000370  006F FFCC  F39F    	movff	prodl,??_main
  5091  000376  006F FFD0  F3A0    	movff	prodh,??_main+1
  5092  00037C  0060  FE7C  F08B   	movff	??_main,___xxtofl@val
  5093  000382  0060  FE80  F08C   	movff	??_main+1,___xxtofl@val+1
  5094  000388  0100               	movlb	0	; () banked
  5095  00038A  0E00               	movlw	0
  5096  00038C  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5097  00038E  0EFF               	movlw	-1
  5098  000390  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
  5099  000392  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
  5100  000394  0E01               	movlw	1
  5101  000396  EC73  F039         	call	___xxtofl
  5102  00039A  0060  F22C  F099   	movff	?___xxtofl,___fladd@b
  5103  0003A0  0060  F230  F09A   	movff	?___xxtofl+1,___fladd@b+1
  5104  0003A6  0060  F234  F09B   	movff	?___xxtofl+2,___fladd@b+2
  5105  0003AC  0060  F238  F09C   	movff	?___xxtofl+3,___fladd@b+3
  5106  0003B2  EC0C  F02C         	call	___fladd	;wreg free
  5107  0003B6  0060  F264  F3AA   	movff	?___fladd,_main$6109
  5108  0003BC  0060  F268  F3AB   	movff	?___fladd+1,_main$6109+1
  5109  0003C2  0060  F26C  F3AC   	movff	?___fladd+2,_main$6109+2
  5110  0003C8  0060  F270  F3AD   	movff	?___fladd+3,_main$6109+3
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;main.c: 379:             intPEEP = ((int16_t) ((0.045*4096+2)/5)*PEEP) + ((int16_t) ((0
      +                          .045*4096+2)/5)*1.0) + pPeepOsc;
  5114  0003CE  0060  F71C  F08B   	movff	_pPeepOsc,___xxtofl@val
  5115  0003D4  0060  F720  F08C   	movff	_pPeepOsc+1,___xxtofl@val+1
  5116  0003DA  0E00               	movlw	0
  5117  0003DC  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5118  0003DE  0EFF               	movlw	-1
  5119  0003E0  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
  5120  0003E2  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
  5121  0003E4  0E01               	movlw	1
  5122  0003E6  EC73  F039         	call	___xxtofl
  5123  0003EA  0060  F22C  F09D   	movff	?___xxtofl,___fladd@a
  5124  0003F0  0060  F230  F09E   	movff	?___xxtofl+1,___fladd@a+1
  5125  0003F6  0060  F234  F09F   	movff	?___xxtofl+2,___fladd@a+2
  5126  0003FC  0060  F238  F0A0   	movff	?___xxtofl+3,___fladd@a+3
  5127  000402  0060  FEA8  F099   	movff	_main$6109,___fladd@b
  5128  000408  0060  FEAC  F09A   	movff	_main$6109+1,___fladd@b+1
  5129  00040E  0060  FEB0  F09B   	movff	_main$6109+2,___fladd@b+2
  5130  000414  0060  FEB4  F09C   	movff	_main$6109+3,___fladd@b+3
  5131  00041A  EC0C  F02C         	call	___fladd	;wreg free
  5132  00041E  0060  F264  F0A9   	movff	?___fladd,___fltol@f1
  5133  000424  0060  F268  F0AA   	movff	?___fladd+1,___fltol@f1+1
  5134  00042A  0060  F26C  F0AB   	movff	?___fladd+2,___fltol@f1+2
  5135  000430  0060  F270  F0AC   	movff	?___fladd+3,___fltol@f1+3
  5136  000436  EC9E  F03F         	call	___fltol	;wreg free
  5137  00043A  0060  F2A4  F1B3   	movff	?___fltol,_intPEEP
  5138  000440  0060  F2A8  F1B4   	movff	?___fltol+1,_intPEEP+1
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;main.c: 380:             intBdTrig = ((int16_t) ((0.045*4096+2)/5)*BdTrig);
  5142  000446  0101               	movlb	1	; () banked
  5143  000448  51F5               	movf	_BdTrig& (0+255),w,b
  5144  00044A  0D25               	mullw	37
  5145  00044C  006F FFCC  F250    	movff	prodl,_intBdTrig
  5146  000452  006F FFD0  F251    	movff	prodh,_intBdTrig+1
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;main.c: 381:             intIDuration = ((time_t) IDuration*1);
  5150  000458  C24C  F1B1         	movff	_IDuration,_intIDuration
  5151  00045C  C24D  F1B2         	movff	_IDuration+1,_intIDuration+1
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;main.c: 382:             if (sBreath) {
  5155  000460  51C1               	movf	_sBreath& (0+255),w,b
  5156  000462  B4D8               	btfsc	status,2,c
  5157  000464  D008               	goto	l1744
  5158                           
  5159                           ; BSR set to: 1
  5160                           ;main.c: 383:                 intEDuration = ((time_t) EDuration + 1000*1);
  5161  000466  0EE8               	movlw	232
  5162  000468  0102               	movlb	2	; () banked
  5163  00046A  254A               	addwf	_EDuration& (0+255),w,b
  5164  00046C  6F4E               	movwf	_intEDuration& (0+255),b
  5165  00046E  0E03               	movlw	3
  5166  000470  214B               	addwfc	(_EDuration+1)& (0+255),w,b
  5167  000472  6F4F               	movwf	(_intEDuration+1)& (0+255),b
  5168                           
  5169                           ;main.c: 384:             } else {
  5170  000474  D004               	goto	l20611
  5171  000476                     l1744:
  5172                           
  5173                           ; BSR set to: 1
  5174                           ;main.c: 385:                 intEDuration = ((time_t) EDuration*1);
  5175  000476  C24A  F24E         	movff	_EDuration,_intEDuration
  5176  00047A  C24B  F24F         	movff	_EDuration+1,_intEDuration+1
  5177  00047E                     l20611:
  5178                           
  5179                           ;main.c: 388:             if (intVentMode == VMODE_PRESSURE) {
  5180  00047E  0101               	movlb	1	; () banked
  5181  000480  51C2               	movf	_intVentMode& (0+255),w,b
  5182  000482  A4D8               	btfss	status,2,c
  5183  000484  D05D               	goto	l20621
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;main.c: 389:                 intIP = ((int16_t) ((0.045*4096+2)/5)*IP);
  5187  000486  51F7               	movf	_IP& (0+255),w,b
  5188  000488  0D25               	mullw	37
  5189  00048A  006F FFCC  F1B5    	movff	prodl,_intIP
  5190  000490  006F FFD0  F1B6    	movff	prodh,_intIP+1
  5191                           
  5192                           ; BSR set to: 1
  5193                           ;main.c: 391:                 intMaxV = ((((uint24_t) intIP - pPeepActual)*((uint24_t) l
      +                          ungC)) >> 7);
  5194  000496  0E07               	movlw	7
  5195  000498  0103               	movlb	3	; () banked
  5196  00049A  6F9F               	movwf	??_main& (0+255),b
  5197  00049C  0060  F6D4  F3A0   	movff	_intIP,??_main+1
  5198  0004A2  0060  F6D8  F3A1   	movff	_intIP+1,??_main+2
  5199  0004A8  6BA2               	clrf	(??_main+3)& (0+255),b
  5200  0004AA  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5201  0004AC  69A2               	setf	(??_main+3)& (0+255),b
  5202  0004AE  0101               	movlb	1	; () banked
  5203  0004B0  51AD               	movf	_pPeepActual& (0+255),w,b
  5204  0004B2  0103               	movlb	3	; () banked
  5205  0004B4  5DA0               	subwf	(??_main+1)& (0+255),w,b
  5206  0004B6  0100               	movlb	0	; () banked
  5207  0004B8  6F8B               	movwf	___tmul@multiplier& (0+255),b
  5208  0004BA  0101               	movlb	1	; () banked
  5209  0004BC  51AE               	movf	(_pPeepActual+1)& (0+255),w,b
  5210  0004BE  0103               	movlb	3	; () banked
  5211  0004C0  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5212  0004C2  0100               	movlb	0	; () banked
  5213  0004C4  6F8C               	movwf	(___tmul@multiplier+1)& (0+255),b
  5214  0004C6  0E00               	movlw	0
  5215  0004C8  0101               	movlb	1	; () banked
  5216  0004CA  BFAE               	btfsc	(_pPeepActual+1)& (0+255),7,b
  5217  0004CC  0EFF               	movlw	255
  5218  0004CE  0103               	movlb	3	; () banked
  5219  0004D0  59A2               	subwfb	(??_main+3)& (0+255),w,b
  5220  0004D2  0100               	movlb	0	; () banked
  5221  0004D4  6F8D               	movwf	(___tmul@multiplier+2)& (0+255),b
  5222  0004D6  0060  F76C  F08E   	movff	_lungC,___tmul@multiplicand
  5223  0004DC  0060  F770  F08F   	movff	_lungC+1,___tmul@multiplicand+1
  5224  0004E2  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5225  0004E4  EC1F  F04B         	call	___tmul	;wreg free
  5226  0004E8  0103               	movlb	3	; () banked
  5227  0004EA  299F               	incf	??_main& (0+255),w,b
  5228  0004EC  6FA3               	movwf	(??_main+4)& (0+255),b
  5229  0004EE  D005               	goto	u22210
  5230  0004F0                     u22215:
  5231  0004F0  0100               	movlb	0	; () banked
  5232  0004F2  90D8               	bcf	status,0,c
  5233  0004F4  338D               	rrcf	(?___tmul+2)& (0+255),f,b
  5234  0004F6  338C               	rrcf	(?___tmul+1)& (0+255),f,b
  5235  0004F8  338B               	rrcf	?___tmul& (0+255),f,b
  5236  0004FA                     u22210:
  5237  0004FA  0103               	movlb	3	; () banked
  5238  0004FC  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  5239  0004FE  D7F8               	goto	u22215
  5240  000500  0060  F22C  F1ED   	movff	?___tmul,_intMaxV
  5241  000506  0060  F230  F1EE   	movff	?___tmul+1,_intMaxV+1
  5242                           
  5243                           ;main.c: 393:                 if (intMaxV > (10 * HighVAlarm)) {
  5244  00050C  0101               	movlb	1	; () banked
  5245  00050E  51F9               	movf	_HighVAlarm& (0+255),w,b
  5246  000510  0D0A               	mullw	10
  5247  000512  51ED               	movf	_intMaxV& (0+255),w,b
  5248  000514  5CF3               	subwf	243,w,c
  5249  000516  50F4               	movf	244,w,c
  5250  000518  0A80               	xorlw	128
  5251  00051A  0103               	movlb	3	; () banked
  5252  00051C  6F9F               	movwf	??_main& (0+255),b
  5253  00051E  0101               	movlb	1	; () banked
  5254  000520  51EE               	movf	(_intMaxV+1)& (0+255),w,b
  5255  000522  0A80               	xorlw	128
  5256  000524  0103               	movlb	3	; () banked
  5257  000526  599F               	subwfb	??_main& (0+255),w,b
  5258  000528  B0D8               	btfsc	status,0,c
  5259  00052A  D09D               	goto	l20633
  5260                           
  5261                           ; BSR set to: 3
  5262                           ;main.c: 394:                     intMaxV = 10 * HighVAlarm;
  5263  00052C  0101               	movlb	1	; () banked
  5264  00052E  51F9               	movf	_HighVAlarm& (0+255),w,b
  5265  000530  0D0A               	mullw	10
  5266  000532  006F FFCC  F1ED    	movff	prodl,_intMaxV
  5267  000538  006F FFD0  F1EE    	movff	prodh,_intMaxV+1
  5268  00053E  D093               	goto	l20633
  5269  000540                     l20621:
  5270                           
  5271                           ; BSR set to: 1
  5272                           ;main.c: 398:                 if (pPeepActual > ((((int16_t) ((0.045*4096+2)/5)*4) + int
      +                          PEEP))) {
  5273  000540  0E94               	movlw	148
  5274  000542  25B3               	addwf	_intPEEP& (0+255),w,b
  5275  000544  0103               	movlb	3	; () banked
  5276  000546  6F9F               	movwf	??_main& (0+255),b
  5277  000548  0E00               	movlw	0
  5278  00054A  0101               	movlb	1	; () banked
  5279  00054C  21B4               	addwfc	(_intPEEP+1)& (0+255),w,b
  5280  00054E  0103               	movlb	3	; () banked
  5281  000550  6FA0               	movwf	(??_main+1)& (0+255),b
  5282  000552  0101               	movlb	1	; () banked
  5283  000554  51AD               	movf	_pPeepActual& (0+255),w,b
  5284  000556  0103               	movlb	3	; () banked
  5285  000558  5D9F               	subwf	??_main& (0+255),w,b
  5286  00055A  51A0               	movf	(??_main+1)& (0+255),w,b
  5287  00055C  0A80               	xorlw	128
  5288  00055E  6FA1               	movwf	(??_main+2)& (0+255),b
  5289  000560  0101               	movlb	1	; () banked
  5290  000562  51AE               	movf	(_pPeepActual+1)& (0+255),w,b
  5291  000564  0A80               	xorlw	128
  5292  000566  0103               	movlb	3	; () banked
  5293  000568  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5294  00056A  B0D8               	btfsc	status,0,c
  5295  00056C  D03B               	goto	l20625
  5296                           
  5297                           ; BSR set to: 3
  5298                           ;main.c: 399:     intMaxV = 10 * ((uint16_t) MaxV) - (((pPeepActual - intPEEP - ((int16_
      +                          t) ((0.045*4096+2)/5)*4)) * lungC) >> 7);
  5299  00056E  0101               	movlb	1	; () banked
  5300  000570  51B3               	movf	_intPEEP& (0+255),w,b
  5301  000572  5DAD               	subwf	_pPeepActual& (0+255),w,b
  5302  000574  0103               	movlb	3	; () banked
  5303  000576  6F9F               	movwf	??_main& (0+255),b
  5304  000578  0101               	movlb	1	; () banked
  5305  00057A  51B4               	movf	(_intPEEP+1)& (0+255),w,b
  5306  00057C  59AE               	subwfb	(_pPeepActual+1)& (0+255),w,b
  5307  00057E  0103               	movlb	3	; () banked
  5308  000580  6FA0               	movwf	(??_main+1)& (0+255),b
  5309  000582  0E6C               	movlw	108
  5310  000584  259F               	addwf	??_main& (0+255),w,b
  5311  000586  0100               	movlb	0	; () banked
  5312  000588  6F9B               	movwf	___wmul@multiplier& (0+255),b
  5313  00058A  0EFF               	movlw	255
  5314  00058C  0103               	movlb	3	; () banked
  5315  00058E  21A0               	addwfc	(??_main+1)& (0+255),w,b
  5316  000590  0100               	movlb	0	; () banked
  5317  000592  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  5318  000594  0060  F76C  F09D   	movff	_lungC,___wmul@multiplicand
  5319  00059A  0060  F770  F09E   	movff	_lungC+1,___wmul@multiplicand+1
  5320  0005A0  ECFC  F04E         	call	___wmul	;wreg free
  5321  0005A4  0E07               	movlw	7
  5322  0005A6  0103               	movlb	3	; () banked
  5323  0005A8  6FA1               	movwf	(??_main+2)& (0+255),b
  5324  0005AA                     u22245:
  5325  0005AA  0100               	movlb	0	; () banked
  5326  0005AC  90D8               	bcf	status,0,c
  5327  0005AE  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5328  0005B0  339B               	rrcf	?___wmul& (0+255),f,b
  5329  0005B2  0103               	movlb	3	; () banked
  5330  0005B4  2FA1               	decfsz	(??_main+2)& (0+255),f,b
  5331  0005B6  D7F9               	goto	u22245
  5332  0005B8  0101               	movlb	1	; () banked
  5333  0005BA  51FA               	movf	_MaxV& (0+255),w,b
  5334  0005BC  0D0A               	mullw	10
  5335  0005BE  006F FFCC  F3A2    	movff	prodl,??_main+3
  5336  0005C4  006F FFD0  F3A3    	movff	prodh,??_main+4
  5337  0005CA  0100               	movlb	0	; () banked
  5338  0005CC  519B               	movf	?___wmul& (0+255),w,b
  5339  0005CE  0103               	movlb	3	; () banked
  5340  0005D0  5DA2               	subwf	(??_main+3)& (0+255),w,b
  5341  0005D2  0101               	movlb	1	; () banked
  5342  0005D4  6FED               	movwf	_intMaxV& (0+255),b
  5343  0005D6  0100               	movlb	0	; () banked
  5344  0005D8  519C               	movf	(?___wmul+1)& (0+255),w,b
  5345  0005DA  0103               	movlb	3	; () banked
  5346  0005DC  59A3               	subwfb	(??_main+4)& (0+255),w,b
  5347  0005DE  0101               	movlb	1	; () banked
  5348  0005E0  6FEE               	movwf	(_intMaxV+1)& (0+255),b
  5349                           
  5350                           ;main.c: 400:                 } else {
  5351  0005E2  D009               	goto	l20627
  5352  0005E4                     l20625:
  5353                           
  5354                           ; BSR set to: 3
  5355                           ;main.c: 401:                     intMaxV = 10 * ((uint16_t) MaxV);
  5356  0005E4  0101               	movlb	1	; () banked
  5357  0005E6  51FA               	movf	_MaxV& (0+255),w,b
  5358  0005E8  0D0A               	mullw	10
  5359  0005EA  006F FFCC  F1ED    	movff	prodl,_intMaxV
  5360  0005F0  006F FFD0  F1EE    	movff	prodh,_intMaxV+1
  5361  0005F6                     l20627:
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;main.c: 403:                 if (lungC > 20) {
  5365  0005F6  51DC               	movf	(_lungC+1)& (0+255),w,b
  5366  0005F8  E104               	bnz	u22250
  5367  0005FA  0E15               	movlw	21
  5368  0005FC  5DDB               	subwf	_lungC& (0+255),w,b
  5369  0005FE  A0D8               	btfss	status,0,c
  5370  000600  D02E               	goto	l20631
  5371  000602                     u22250:
  5372                           
  5373                           ; BSR set to: 1
  5374                           ;main.c: 404:                     intIP = ((uint24_t) intMaxV<<7)/lungC;
  5375  000602  0E07               	movlw	7
  5376  000604  0103               	movlb	3	; () banked
  5377  000606  6F9F               	movwf	??_main& (0+255),b
  5378  000608  0060  F7B4  F3A0   	movff	_intMaxV,??_main+1
  5379  00060E  0060  F7B8  F3A1   	movff	_intMaxV+1,??_main+2
  5380  000614  6BA2               	clrf	(??_main+3)& (0+255),b
  5381  000616  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5382  000618  69A2               	setf	(??_main+3)& (0+255),b
  5383  00061A  299F               	incf	??_main& (0+255),w,b
  5384  00061C  D004               	goto	u22260
  5385  00061E                     u22265:
  5386  00061E  90D8               	bcf	status,0,c
  5387  000620  37A0               	rlcf	(??_main+1)& (0+255),f,b
  5388  000622  37A1               	rlcf	(??_main+2)& (0+255),f,b
  5389  000624  37A2               	rlcf	(??_main+3)& (0+255),f,b
  5390  000626                     u22260:
  5391  000626  2EE8               	decfsz	wreg,f,c
  5392  000628  D7FA               	goto	u22265
  5393  00062A  0060  FE80  F08B   	movff	??_main+1,___ltdiv@dividend
  5394  000630  0060  FE84  F08C   	movff	??_main+2,___ltdiv@dividend+1
  5395  000636  0060  FE88  F08D   	movff	??_main+3,___ltdiv@dividend+2
  5396  00063C  0060  F76C  F08E   	movff	_lungC,___ltdiv@divisor
  5397  000642  0060  F770  F08F   	movff	_lungC+1,___ltdiv@divisor+1
  5398  000648  0100               	movlb	0	; () banked
  5399  00064A  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  5400  00064C  EC4E  F046         	call	___ltdiv	;wreg free
  5401  000650  0060  F22C  F1B5   	movff	?___ltdiv,_intIP
  5402  000656  0060  F230  F1B6   	movff	?___ltdiv+1,_intIP+1
  5403                           
  5404                           ;main.c: 405:                 } else {
  5405  00065C  D004               	goto	l20633
  5406  00065E                     l20631:
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;main.c: 406:                     intIP = 0;
  5410  00065E  0E00               	movlw	0
  5411  000660  6FB6               	movwf	(_intIP+1)& (0+255),b
  5412  000662  0E00               	movlw	0
  5413  000664  6FB5               	movwf	_intIP& (0+255),b
  5414  000666                     l20633:
  5415                           
  5416                           ;main.c: 409:             printf ("\nIP. MaxV %d EBRate %d SV2RO %d SV2RC %d PQ %d VQ %d
      +                          .\n", intMaxV, bRateGet(), rSV2ValveORT, rSV2ValveCRT, ((int16_t) (((2560/((int16_t) ((0
      +                          .045*4096+2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vQuanta);
  5417  000666  0EC1               	movlw	low STR_10
  5418  000668  0101               	movlb	1	; () banked
  5419  00066A  6F46               	movwf	printf@fmt& (0+255),b
  5420  00066C  0EFA               	movlw	high STR_10
  5421  00066E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5422  000670  0060  F7B4  F148   	movff	_intMaxV,?_printf+2
  5423  000676  0060  F7B8  F149   	movff	_intMaxV+1,?_printf+3
  5424  00067C  EC29  F051         	call	_bRateGet	;wreg free
  5425  000680  0103               	movlb	3	; () banked
  5426  000682  6F9F               	movwf	??_main& (0+255),b
  5427  000684  519F               	movf	??_main& (0+255),w,b
  5428  000686  0101               	movlb	1	; () banked
  5429  000688  6F4A               	movwf	(?_printf+4)& (0+255),b
  5430  00068A  6B4B               	clrf	(?_printf+5)& (0+255),b
  5431  00068C  0060  F684  F14C   	movff	_rSV2ValveORT,?_printf+6
  5432  000692  0060  F688  F14D   	movff	_rSV2ValveORT+1,?_printf+7
  5433  000698  0060  F67C  F14E   	movff	_rSV2ValveCRT,?_printf+8
  5434  00069E  0060  F680  F14F   	movff	_rSV2ValveCRT+1,?_printf+9
  5435  0006A4  0060  F744  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  5436  0006AA  0060  F748  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  5437  0006B0  0100               	movlb	0	; () banked
  5438  0006B2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5439  0006B4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  5440  0006B6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  5441  0006B8  0E45               	movlw	69
  5442  0006BA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5443  0006BC  0E00               	movlw	0
  5444  0006BE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5445  0006C0  0E00               	movlw	0
  5446  0006C2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5447  0006C4  EC1F  F04B         	call	___tmul	;wreg free
  5448  0006C8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5449  0006CE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5450  0006D4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5451  0006D6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  5452  0006D8  698D               	setf	(?___tmul+2)& (0+255),b
  5453  0006DA  0060  F22C  F150   	movff	?___tmul,?_printf+10
  5454  0006E0  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  5455  0006E6  0060  F6A4  F152   	movff	_vQuanta,?_printf+12
  5456  0006EC  0060  F6A8  F153   	movff	_vQuanta+1,?_printf+13
  5457  0006F2  EC43  F050         	call	_printf	;wreg free
  5458                           
  5459                           ; BSR set to: 2
  5460                           ;main.c: 415:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5461  0006F6  0060  F7B4  F08E   	movff	_intMaxV,___tmul@multiplicand
  5462  0006FC  0060  F7B8  F08F   	movff	_intMaxV+1,___tmul@multiplicand+1
  5463  000702  0100               	movlb	0	; () banked
  5464  000704  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5465  000706  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5466  000708  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5467  00070A  0060  F734  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5468  000710  0060  F738  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5469  000716  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5470  000718  EC1F  F04B         	call	___tmul	;wreg free
  5471  00071C  0060  F22C  F3B3   	movff	?___tmul,_main$6110
  5472  000722  0060  F230  F3B4   	movff	?___tmul+1,_main$6110+1
  5473  000728  0060  F234  F3B5   	movff	?___tmul+2,_main$6110+2
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;main.c: 415:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5477  00072E  0060  FECC  F08B   	movff	_main$6110,___tmul@multiplier
  5478  000734  0060  FED0  F08C   	movff	_main$6110+1,___tmul@multiplier+1
  5479  00073A  0060  FED4  F08D   	movff	_main$6110+2,___tmul@multiplier+2
  5480  000740  0E03               	movlw	3
  5481  000742  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5482  000744  0E00               	movlw	0
  5483  000746  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5484  000748  0E00               	movlw	0
  5485  00074A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5486  00074C  EC1F  F04B         	call	___tmul	;wreg free
  5487  000750  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5488  000756  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5489  00075C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5490  00075E  0060  F22C  F3BF   	movff	?___tmul,main@tmpVal2
  5491  000764  0060  F230  F3C0   	movff	?___tmul+1,main@tmpVal2+1
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;main.c: 416:             if (tmpVal2 < 500) {
  5495  00076A  0103               	movlb	3	; () banked
  5496  00076C  BFC0               	btfsc	(main@tmpVal2+1)& (0+255),7,b
  5497  00076E  D006               	goto	u22270
  5498  000770  0EF4               	movlw	244
  5499  000772  5DBF               	subwf	main@tmpVal2& (0+255),w,b
  5500  000774  0E01               	movlw	1
  5501  000776  59C0               	subwfb	(main@tmpVal2+1)& (0+255),w,b
  5502  000778  B0D8               	btfsc	status,0,c
  5503  00077A  D026               	goto	l20653
  5504  00077C                     u22270:
  5505                           
  5506                           ; BSR set to: 3
  5507                           ;main.c: 417:                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  5508  00077C  94BA               	bcf	186,2,c	;volatile
  5509  00077E  86BC               	bsf	188,3,c	;volatile
  5510                           
  5511                           ; BSR set to: 3
  5512                           ;main.c: 418:                 rVLowActuationTstamp = timeGet();
  5513  000780  ECD5  F052         	call	_timeGet	;wreg free
  5514  000784  0060  F24C  F23C   	movff	?_timeGet,_rVLowActuationTstamp
  5515  00078A  0060  F250  F23D   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;main.c: 419:                 rVMedActuationTstamp = rCycleTime;
  5519  000790  C1CB  F1A3         	movff	_rCycleTime,_rVMedActuationTstamp
  5520  000794  C1CC  F1A4         	movff	_rCycleTime+1,_rVMedActuationTstamp+1
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;main.c: 420:                 rVHighActuationTstamp = rCycleTime;
  5524  000798  C1CB  F23E         	movff	_rCycleTime,_rVHighActuationTstamp
  5525  00079C  C1CC  F23F         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;main.c: 421:                 pInspVSet = 1;
  5529  0007A0  0E00               	movlw	0
  5530  0007A2  0101               	movlb	1	; () banked
  5531  0007A4  6FD4               	movwf	(_pInspVSet+1)& (0+255),b
  5532  0007A6  0E01               	movlw	1
  5533  0007A8  6FD3               	movwf	_pInspVSet& (0+255),b
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;main.c: 422:                 printf ("\nVLow T %d\n", timeGet());
  5537  0007AA  0E56               	movlw	low STR_11
  5538  0007AC  6F46               	movwf	printf@fmt& (0+255),b
  5539  0007AE  0EFF               	movlw	high STR_11
  5540  0007B0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5541  0007B2  ECD5  F052         	call	_timeGet	;wreg free
  5542  0007B6  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  5543  0007BC  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  5544  0007C2  EC43  F050         	call	_printf	;wreg free
  5545                           
  5546                           ;main.c: 423:             } else if ((tmpVal2 >> 1) < 500) {
  5547  0007C6  D03E               	goto	l20669
  5548  0007C8                     l20653:
  5549                           
  5550                           ; BSR set to: 3
  5551  0007C8  35C0               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  5552  0007CA  31C0               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  5553  0007CC  6FA0               	movwf	(??_main+1)& (0+255),b
  5554  0007CE  31BF               	rrcf	main@tmpVal2& (0+255),w,b
  5555  0007D0  6F9F               	movwf	??_main& (0+255),b
  5556  0007D2  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  5557  0007D4  D006               	goto	u22280
  5558  0007D6  0EF4               	movlw	244
  5559  0007D8  5D9F               	subwf	??_main& (0+255),w,b
  5560  0007DA  0E01               	movlw	1
  5561  0007DC  59A0               	subwfb	(??_main+1)& (0+255),w,b
  5562  0007DE  B0D8               	btfsc	status,0,c
  5563  0007E0  D022               	goto	l1755
  5564  0007E2                     u22280:
  5565                           
  5566                           ; BSR set to: 3
  5567                           ;main.c: 424:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  5568  0007E2  84BA               	bsf	186,2,c	;volatile
  5569  0007E4  96BC               	bcf	188,3,c	;volatile
  5570                           
  5571                           ; BSR set to: 3
  5572                           ;main.c: 425:                 rVMedActuationTstamp = timeGet();
  5573  0007E6  ECD5  F052         	call	_timeGet	;wreg free
  5574  0007EA  0060  F24C  F1A3   	movff	?_timeGet,_rVMedActuationTstamp
  5575  0007F0  0060  F250  F1A4   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;main.c: 426:                 rVHighActuationTstamp = rCycleTime;
  5579  0007F6  C1CB  F23E         	movff	_rCycleTime,_rVHighActuationTstamp
  5580  0007FA  C1CC  F23F         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;main.c: 427:                 pInspVSet = 2;
  5584  0007FE  0E00               	movlw	0
  5585  000800  0101               	movlb	1	; () banked
  5586  000802  6FD4               	movwf	(_pInspVSet+1)& (0+255),b
  5587  000804  0E02               	movlw	2
  5588  000806  6FD3               	movwf	_pInspVSet& (0+255),b
  5589                           
  5590                           ; BSR set to: 1
  5591                           ;main.c: 428:                 printf ("\nVMed T %d\n", timeGet());
  5592  000808  0E4A               	movlw	low STR_12
  5593  00080A  6F46               	movwf	printf@fmt& (0+255),b
  5594  00080C  0EFF               	movlw	high STR_12
  5595  00080E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5596  000810  ECD5  F052         	call	_timeGet	;wreg free
  5597  000814  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  5598  00081A  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  5599  000820  EC43  F050         	call	_printf	;wreg free
  5600                           
  5601                           ;main.c: 429:             } else {
  5602  000824  D00F               	goto	l20669
  5603  000826                     l1755:
  5604                           
  5605                           ; BSR set to: 3
  5606                           ;main.c: 430:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
  5607  000826  84BA               	bsf	186,2,c	;volatile
  5608  000828  86BC               	bsf	188,3,c	;volatile
  5609                           
  5610                           ; BSR set to: 3
  5611                           ;main.c: 431:                 pInspVSet = 3;
  5612  00082A  0E00               	movlw	0
  5613  00082C  0101               	movlb	1	; () banked
  5614  00082E  6FD4               	movwf	(_pInspVSet+1)& (0+255),b
  5615  000830  0E03               	movlw	3
  5616  000832  6FD3               	movwf	_pInspVSet& (0+255),b
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;main.c: 432:                 rVHighActuationTstamp = timeGet();
  5620  000834  ECD5  F052         	call	_timeGet	;wreg free
  5621  000838  0060  F24C  F23E   	movff	?_timeGet,_rVHighActuationTstamp
  5622  00083E  0060  F250  F23F   	movff	?_timeGet+1,_rVHighActuationTstamp+1
  5623  000844                     l20669:
  5624                           
  5625                           ;main.c: 434:             LATAbits.LATA3 = 1;
  5626  000844  86BA               	bsf	186,3,c	;volatile
  5627                           
  5628                           ;main.c: 437:             initInspSubState = 1;
  5629  000846  0E01               	movlw	1
  5630  000848  0101               	movlb	1	; () banked
  5631  00084A  6FBE               	movwf	_initInspSubState& (0+255),b
  5632                           
  5633                           ; BSR set to: 1
  5634                           ;main.c: 438:             sv2DelayCheck = 1;
  5635  00084C  0E01               	movlw	1
  5636  00084E  6FBD               	movwf	_sv2DelayCheck& (0+255),b
  5637                           
  5638                           ; BSR set to: 1
  5639                           ;main.c: 439:             OSCheck = 0;
  5640  000850  0E00               	movlw	0
  5641  000852  6FBB               	movwf	_OSCheck& (0+255),b
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;main.c: 440:             OSCheckInt = 0;
  5645  000854  0E00               	movlw	0
  5646  000856  6FB9               	movwf	_OSCheckInt& (0+255),b
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;main.c: 441:             QuantaCheck = 0;
  5650  000858  0E00               	movlw	0
  5651  00085A  6FBA               	movwf	_QuantaCheck& (0+255),b
  5652                           
  5653                           ;main.c: 442:             rValveDelayStart = timeGet();
  5654  00085C  ECD5  F052         	call	_timeGet	;wreg free
  5655  000860  0060  F24C  F19B   	movff	?_timeGet,_rValveDelayStart
  5656  000866  0060  F250  F19C   	movff	?_timeGet+1,_rValveDelayStart+1
  5657                           
  5658                           ;main.c: 443:             vMeasureRst();
  5659  00086C  EC2F  F052         	call	_vMeasureRst	;wreg free
  5660  000870                     l20681:
  5661                           
  5662                           ;main.c: 445:                 if (intVentMode == VMODE_PRESSURE) {
  5663  000870  0101               	movlb	1	; () banked
  5664  000872  51C2               	movf	_intVentMode& (0+255),w,b
  5665  000874  A4D8               	btfss	status,2,c
  5666  000876  D004               	goto	l20685
  5667                           
  5668                           ; BSR set to: 1
  5669                           ;main.c: 446:                     MonitorMsgSend(MONSTATE_RUNP);
  5670  000878  0E10               	movlw	16
  5671  00087A  EC59  F050         	call	_MonitorMsgSend
  5672                           
  5673                           ;main.c: 447:                 } else {
  5674  00087E  D003               	goto	l20687
  5675  000880                     l20685:
  5676                           
  5677                           ; BSR set to: 1
  5678                           ;main.c: 448:                     MonitorMsgSend(MONSTATE_RUNV);
  5679  000880  0E14               	movlw	20
  5680  000882  EC59  F050         	call	_MonitorMsgSend
  5681  000886                     l20687:
  5682                           
  5683                           ;main.c: 451:                 if (timeElapsedR(&rCycleTime, intIDuration)) {
  5684  000886  0ECB               	movlw	low _rCycleTime
  5685  000888  0100               	movlb	0	; () banked
  5686  00088A  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  5687  00088C  0E01               	movlw	high _rCycleTime
  5688  00088E  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5689  000890  0060  F6C4  F095   	movff	_intIDuration,timeElapsedR@duration
  5690  000896  0060  F6C8  F096   	movff	_intIDuration+1,timeElapsedR@duration+1
  5691  00089C  ECBE  F047         	call	_timeElapsedR	;wreg free
  5692  0008A0  0900               	iorlw	0
  5693  0008A2  B4D8               	btfsc	status,2,c
  5694  0008A4  D03F               	goto	l20719
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;main.c: 453:                     if (initInspSubState) {
  5698  0008A6  0101               	movlb	1	; () banked
  5699  0008A8  51BE               	movf	_initInspSubState& (0+255),w,b
  5700  0008AA  B4D8               	btfsc	status,2,c
  5701  0008AC  D011               	goto	l20701
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;main.c: 455:         MonitorErrorSet(MON_IPE);
  5705  0008AE  0E20               	movlw	32
  5706  0008B0  ECDE  F052         	call	_MonitorErrorSet
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;main.c: 457:         pPlatInsp = pInst;
  5710  0008B4  C1EB  F1DF         	movff	_pInst,_pPlatInsp
  5711  0008B8  C1EC  F1E0         	movff	_pInst+1,_pPlatInsp+1
  5712                           
  5713                           ; BSR set to: 1
  5714                           ;main.c: 458:         pValveActuation = pInst;
  5715  0008BC  C1EB  F1E1         	movff	_pInst,_pValveActuation
  5716  0008C0  C1EC  F1E2         	movff	_pInst+1,_pValveActuation+1
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;main.c: 459:         pPlatMax = pInst;
  5720  0008C4  C1EB  F1AF         	movff	_pInst,_pPlatMax
  5721  0008C8  C1EC  F1B0         	movff	_pInst+1,_pPlatMax+1
  5722                           
  5723                           ; BSR set to: 1
  5724                           ;main.c: 460:         inspOSMeasure();
  5725  0008CC  EC50  F028         	call	_inspOSMeasure	;wreg free
  5726  0008D0                     l20701:
  5727                           
  5728                           ;main.c: 462:                     if (OSCheck) {
  5729  0008D0  0101               	movlb	1	; () banked
  5730  0008D2  51BB               	movf	_OSCheck& (0+255),w,b
  5731  0008D4  B4D8               	btfsc	status,2,c
  5732  0008D6  D021               	goto	l20715
  5733                           
  5734                           ; BSR set to: 1
  5735                           ;main.c: 463:                         OSCheck = 0;
  5736  0008D8  0E00               	movlw	0
  5737  0008DA  6FBB               	movwf	_OSCheck& (0+255),b
  5738                           
  5739                           ; BSR set to: 1
  5740                           ;main.c: 464:                         aCaptGetResult(Flt1PSensor, &pAvgUShort);
  5741  0008DC  0EE7               	movlw	low _pAvgUShort
  5742  0008DE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5743  0008E0  0E01               	movlw	high _pAvgUShort
  5744  0008E2  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5745  0008E4  0E04               	movlw	4
  5746  0008E6  EC5A  F033         	call	_aCaptGetResult
  5747                           
  5748                           ;main.c: 465:                         pPlatInsp = pAvgUShort;
  5749  0008EA  C1E7  F1DF         	movff	_pAvgUShort,_pPlatInsp
  5750  0008EE  C1E8  F1E0         	movff	_pAvgUShort+1,_pPlatInsp+1
  5751                           
  5752                           ;main.c: 466:                         if (pPlatMax < pAvgUShort) {
  5753  0008F2  0101               	movlb	1	; () banked
  5754  0008F4  51E7               	movf	_pAvgUShort& (0+255),w,b
  5755  0008F6  5DAF               	subwf	_pPlatMax& (0+255),w,b
  5756  0008F8  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  5757  0008FA  0A80               	xorlw	128
  5758  0008FC  0103               	movlb	3	; () banked
  5759  0008FE  6F9F               	movwf	??_main& (0+255),b
  5760  000900  0101               	movlb	1	; () banked
  5761  000902  51E8               	movf	(_pAvgUShort+1)& (0+255),w,b
  5762  000904  0A80               	xorlw	128
  5763  000906  0103               	movlb	3	; () banked
  5764  000908  599F               	subwfb	??_main& (0+255),w,b
  5765  00090A  B0D8               	btfsc	status,0,c
  5766  00090C  D004               	goto	l20713
  5767                           
  5768                           ; BSR set to: 3
  5769                           ;main.c: 467:                             pPlatMax = pAvgUShort;
  5770  00090E  C1E7  F1AF         	movff	_pAvgUShort,_pPlatMax
  5771  000912  C1E8  F1B0         	movff	_pAvgUShort+1,_pPlatMax+1
  5772  000916                     l20713:
  5773                           
  5774                           ; BSR set to: 3
  5775                           ;main.c: 469:                         inspOSMeasure();
  5776  000916  EC50  F028         	call	_inspOSMeasure	;wreg free
  5777  00091A                     l20715:
  5778                           
  5779                           ;main.c: 471:                     initInspSubState = 0;
  5780  00091A  0E00               	movlw	0
  5781  00091C  0101               	movlb	1	; () banked
  5782  00091E  6FBE               	movwf	_initInspSubState& (0+255),b
  5783                           
  5784                           ;main.c: 472:                     break;
  5785  000920  EF7C  F00F         	goto	l21081
  5786  000924                     l20719:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;main.c: 475:                     if (timeElapsed(rCycleTime, ((time_t) 500*1))) {
  5790  000924  0060  F72C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  5791  00092A  0060  F730  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  5792  000930  0E01               	movlw	1
  5793  000932  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  5794  000934  0EF4               	movlw	244
  5795  000936  6F95               	movwf	timeElapsed@duration& (0+255),b
  5796  000938  ECE4  F04E         	call	_timeElapsed	;wreg free
  5797  00093C  0900               	iorlw	0
  5798  00093E  A4D8               	btfss	status,2,c
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;main.c: 477:                         LATDbits.LATD6 = 0;
  5802  000940  9CBD               	bcf	189,6,c	;volatile
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;main.c: 479:                     if (initInspSubState) {
  5806  000942  0101               	movlb	1	; () banked
  5807  000944  51BE               	movf	_initInspSubState& (0+255),w,b
  5808  000946  B4D8               	btfsc	status,2,c
  5809  000948  EFE3  F00B         	goto	l20927
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;main.c: 481:                         aCaptGetResult(MainPSensor, &pInst);
  5813  00094C  0EEB               	movlw	low _pInst
  5814  00094E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5815  000950  0E01               	movlw	high _pInst
  5816  000952  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5817  000954  0E00               	movlw	0
  5818  000956  EC5A  F033         	call	_aCaptGetResult
  5819                           
  5820                           ;main.c: 483:                         if (sv2DelayCheck) {
  5821  00095A  0101               	movlb	1	; () banked
  5822  00095C  51BD               	movf	_sv2DelayCheck& (0+255),w,b
  5823  00095E  B4D8               	btfsc	status,2,c
  5824  000960  D049               	goto	l20745
  5825                           
  5826                           ; BSR set to: 1
  5827                           ;main.c: 485:                             aCaptGetResult(VolPSensor, &tmpVal);
  5828  000962  0EC7               	movlw	low main@tmpVal
  5829  000964  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5830  000966  0E03               	movlw	high main@tmpVal
  5831  000968  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5832  00096A  0E01               	movlw	1
  5833  00096C  EC5A  F033         	call	_aCaptGetResult
  5834                           
  5835                           ;main.c: 486:                             if (tmpVal > (20 << 2)) {
  5836  000970  0103               	movlb	3	; () banked
  5837  000972  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  5838  000974  D03F               	goto	l20745
  5839  000976  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  5840  000978  E104               	bnz	u22370
  5841  00097A  0E51               	movlw	81
  5842  00097C  5DC7               	subwf	main@tmpVal& (0+255),w,b
  5843  00097E  A0D8               	btfss	status,0,c
  5844  000980  D039               	goto	l20745
  5845  000982                     u22370:
  5846                           
  5847                           ; BSR set to: 3
  5848                           ;main.c: 487:                                 sv2DelayCheck = 0;
  5849  000982  0E00               	movlw	0
  5850  000984  0101               	movlb	1	; () banked
  5851  000986  6FBD               	movwf	_sv2DelayCheck& (0+255),b
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;main.c: 489:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  5855  000988  0060  F66C  F095   	movff	_rValveDelayStart,timeDiff@startT
  5856  00098E  0060  F670  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  5857  000994  ECD5  F052         	call	_timeGet	;wreg free
  5858  000998  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5859  00099E  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5860  0009A4  EC80  F04E         	call	_timeDiff	;wreg free
  5861  0009A8  0060  F254  F199   	movff	?_timeDiff,_rTimeTmp
  5862  0009AE  0060  F258  F19A   	movff	?_timeDiff+1,_rTimeTmp+1
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;main.c: 490:                                 if (rTimeTmp < ((time_t) 100*1)) {
  5866  0009B4  0101               	movlb	1	; () banked
  5867  0009B6  519A               	movf	(_rTimeTmp+1)& (0+255),w,b
  5868  0009B8  E11A               	bnz	l20743
  5869  0009BA  0E64               	movlw	100
  5870  0009BC  5D99               	subwf	_rTimeTmp& (0+255),w,b
  5871  0009BE  B0D8               	btfsc	status,0,c
  5872  0009C0  D016               	goto	l20743
  5873                           
  5874                           ; BSR set to: 1
  5875                           ;main.c: 492:                                     rSV2ValveORT = (rSV2ValveORT + rTimeTm
      +                          p) >> 1;
  5876  0009C2  5199               	movf	_rTimeTmp& (0+255),w,b
  5877  0009C4  25A1               	addwf	_rSV2ValveORT& (0+255),w,b
  5878  0009C6  0103               	movlb	3	; () banked
  5879  0009C8  6F9F               	movwf	??_main& (0+255),b
  5880  0009CA  0101               	movlb	1	; () banked
  5881  0009CC  519A               	movf	(_rTimeTmp+1)& (0+255),w,b
  5882  0009CE  21A2               	addwfc	(_rSV2ValveORT+1)& (0+255),w,b
  5883  0009D0  0103               	movlb	3	; () banked
  5884  0009D2  6FA0               	movwf	(??_main+1)& (0+255),b
  5885  0009D4  90D8               	bcf	status,0,c
  5886  0009D6  31A0               	rrcf	(??_main+1)& (0+255),w,b
  5887  0009D8  6FA1               	movwf	(??_main+2)& (0+255),b
  5888  0009DA  319F               	rrcf	??_main& (0+255),w,b
  5889  0009DC  0101               	movlb	1	; () banked
  5890  0009DE  6FA1               	movwf	_rSV2ValveORT& (0+255),b
  5891  0009E0  0060  FE84  F1A2   	movff	??_main+2,_rSV2ValveORT+1
  5892                           
  5893                           ; BSR set to: 1
  5894                           ;main.c: 494:                                     MonitorErrorClr(MON_SV2E);
  5895  0009E6  0E08               	movlw	8
  5896  0009E8  ECE7  F052         	call	_MonitorErrorClr
  5897                           
  5898                           ;main.c: 495:                                 } else {
  5899  0009EC  D003               	goto	l20745
  5900  0009EE                     l20743:
  5901                           
  5902                           ; BSR set to: 1
  5903                           ;main.c: 497:                                     MonitorErrorSet(MON_SV2E);
  5904  0009EE  0E08               	movlw	8
  5905  0009F0  ECDE  F052         	call	_MonitorErrorSet
  5906  0009F4                     l20745:
  5907                           
  5908                           ;main.c: 507:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  5909  0009F4  0EE9               	movlw	low _pAvgShort
  5910  0009F6  0101               	movlb	1	; () banked
  5911  0009F8  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5912  0009FA  0E01               	movlw	high _pAvgShort
  5913  0009FC  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5914  0009FE  0E04               	movlw	4
  5915  000A00  EC5A  F033         	call	_aCaptGetResult
  5916                           
  5917                           ;main.c: 511:                         pCtrl = pAvgShort;
  5918  000A04  C1E9  F1E3         	movff	_pAvgShort,_pCtrl
  5919  000A08  C1EA  F1E4         	movff	_pAvgShort+1,_pCtrl+1
  5920                           
  5921                           ;main.c: 512:                         vValveActuation = vMeasureGet();
  5922  000A0C  ECD7  F048         	call	_vMeasureGet	;wreg free
  5923  000A10  0060  F290  F1AB   	movff	?_vMeasureGet,_vValveActuation
  5924  000A16  0060  F294  F1AC   	movff	?_vMeasureGet+1,_vValveActuation+1
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 514:                         tmpVal = 500 - timeDiff(rCycleTime, timeGet());
  5928  000A1C  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  5929  000A22  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  5930  000A28  ECD5  F052         	call	_timeGet	;wreg free
  5931  000A2C  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5932  000A32  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5933  000A38  EC80  F04E         	call	_timeDiff	;wreg free
  5934  000A3C  5195               	movf	?_timeDiff& (0+255),w,b
  5935  000A3E  08F4               	sublw	244
  5936  000A40  0103               	movlb	3	; () banked
  5937  000A42  6FC7               	movwf	main@tmpVal& (0+255),b
  5938  000A44  0100               	movlb	0	; () banked
  5939  000A46  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  5940  000A48  A0D8               	btfss	status,0,c
  5941  000A4A  2AE8               	incf	wreg,f,c
  5942  000A4C  0801               	sublw	1
  5943  000A4E  0103               	movlb	3	; () banked
  5944  000A50  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  5945                           
  5946                           ; BSR set to: 3
  5947                           ;main.c: 519:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5948  000A52  0101               	movlb	1	; () banked
  5949  000A54  51AB               	movf	_vValveActuation& (0+255),w,b
  5950  000A56  5DED               	subwf	_intMaxV& (0+255),w,b
  5951  000A58  0103               	movlb	3	; () banked
  5952  000A5A  6F9F               	movwf	??_main& (0+255),b
  5953  000A5C  0101               	movlb	1	; () banked
  5954  000A5E  51AC               	movf	(_vValveActuation+1)& (0+255),w,b
  5955  000A60  59EE               	subwfb	(_intMaxV+1)& (0+255),w,b
  5956  000A62  0103               	movlb	3	; () banked
  5957  000A64  6FA0               	movwf	(??_main+1)& (0+255),b
  5958  000A66  0060  FE7C  F08E   	movff	??_main,___tmul@multiplicand
  5959  000A6C  0060  FE80  F08F   	movff	??_main+1,___tmul@multiplicand+1
  5960  000A72  0100               	movlb	0	; () banked
  5961  000A74  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5962  000A76  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5963  000A78  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5964  000A7A  0060  F734  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5965  000A80  0060  F738  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5966  000A86  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5967  000A88  EC1F  F04B         	call	___tmul	;wreg free
  5968  000A8C  0060  F22C  F3B3   	movff	?___tmul,_main$6110
  5969  000A92  0060  F230  F3B4   	movff	?___tmul+1,_main$6110+1
  5970  000A98  0060  F234  F3B5   	movff	?___tmul+2,_main$6110+2
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;main.c: 519:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5974  000A9E  0060  FECC  F08B   	movff	_main$6110,___tmul@multiplier
  5975  000AA4  0060  FED0  F08C   	movff	_main$6110+1,___tmul@multiplier+1
  5976  000AAA  0060  FED4  F08D   	movff	_main$6110+2,___tmul@multiplier+2
  5977  000AB0  0E03               	movlw	3
  5978  000AB2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5979  000AB4  0E00               	movlw	0
  5980  000AB6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5981  000AB8  0E00               	movlw	0
  5982  000ABA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5983  000ABC  EC1F  F04B         	call	___tmul	;wreg free
  5984  000AC0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5985  000AC6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5986  000ACC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5987  000ACE  0060  F22C  F3BF   	movff	?___tmul,main@tmpVal2
  5988  000AD4  0060  F230  F3C0   	movff	?___tmul+1,main@tmpVal2+1
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;main.c: 520:                         if ((pInspVSet == 3) &&
  5992  000ADA  0E03               	movlw	3
  5993  000ADC  0101               	movlb	1	; () banked
  5994  000ADE  19D3               	xorwf	_pInspVSet& (0+255),w,b
  5995  000AE0  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  5996  000AE2  A4D8               	btfss	status,2,c
  5997  000AE4  D0EA               	goto	l20775
  5998                           
  5999                           ; BSR set to: 1
  6000  000AE6  51D9               	movf	_pInspOS3& (0+255),w,b
  6001  000AE8  25E3               	addwf	_pCtrl& (0+255),w,b
  6002  000AEA  0103               	movlb	3	; () banked
  6003  000AEC  6F9F               	movwf	??_main& (0+255),b
  6004  000AEE  0101               	movlb	1	; () banked
  6005  000AF0  51DA               	movf	(_pInspOS3+1)& (0+255),w,b
  6006  000AF2  21E4               	addwfc	(_pCtrl+1)& (0+255),w,b
  6007  000AF4  0103               	movlb	3	; () banked
  6008  000AF6  6FA0               	movwf	(??_main+1)& (0+255),b
  6009  000AF8  0101               	movlb	1	; () banked
  6010  000AFA  51D7               	movf	_pInspOS2& (0+255),w,b
  6011  000AFC  0103               	movlb	3	; () banked
  6012  000AFE  279F               	addwf	??_main& (0+255),f,b
  6013  000B00  0101               	movlb	1	; () banked
  6014  000B02  51D8               	movf	(_pInspOS2+1)& (0+255),w,b
  6015  000B04  0103               	movlb	3	; () banked
  6016  000B06  23A0               	addwfc	(??_main+1)& (0+255),f,b
  6017  000B08  0060  F7BC  F09B   	movff	_intMaxP,___wmul@multiplier
  6018  000B0E  0060  F7C0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  6019  000B14  0E00               	movlw	0
  6020  000B16  0100               	movlb	0	; () banked
  6021  000B18  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6022  000B1A  0E07               	movlw	7
  6023  000B1C  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6024  000B1E  ECFC  F04E         	call	___wmul	;wreg free
  6025  000B22  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6026  000B24  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6027  000B26  339B               	rrcf	?___wmul& (0+255),f,b
  6028  000B28  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6029  000B2A  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6030  000B2C  339B               	rrcf	?___wmul& (0+255),f,b
  6031  000B2E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6032  000B30  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6033  000B32  339B               	rrcf	?___wmul& (0+255),f,b
  6034  000B34  0103               	movlb	3	; () banked
  6035  000B36  519F               	movf	??_main& (0+255),w,b
  6036  000B38  0100               	movlb	0	; () banked
  6037  000B3A  5D9B               	subwf	?___wmul& (0+255),w,b
  6038  000B3C  519C               	movf	(?___wmul+1)& (0+255),w,b
  6039  000B3E  0A80               	xorlw	128
  6040  000B40  0103               	movlb	3	; () banked
  6041  000B42  6FA1               	movwf	(??_main+2)& (0+255),b
  6042  000B44  51A0               	movf	(??_main+1)& (0+255),w,b
  6043  000B46  0A80               	xorlw	128
  6044  000B48  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6045  000B4A  A0D8               	btfss	status,0,c
  6046  000B4C  D00F               	goto	u22410
  6047                           
  6048                           ; BSR set to: 3
  6049  000B4E  35C0               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  6050  000B50  31C0               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  6051  000B52  6FA0               	movwf	(??_main+1)& (0+255),b
  6052  000B54  31BF               	rrcf	main@tmpVal2& (0+255),w,b
  6053  000B56  6F9F               	movwf	??_main& (0+255),b
  6054  000B58  51C7               	movf	main@tmpVal& (0+255),w,b
  6055  000B5A  5D9F               	subwf	??_main& (0+255),w,b
  6056  000B5C  51A0               	movf	(??_main+1)& (0+255),w,b
  6057  000B5E  0A80               	xorlw	128
  6058  000B60  6FA1               	movwf	(??_main+2)& (0+255),b
  6059  000B62  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  6060  000B64  0A80               	xorlw	128
  6061  000B66  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6062  000B68  B0D8               	btfsc	status,0,c
  6063  000B6A  D0A7               	goto	l20775
  6064  000B6C                     u22410:
  6065                           
  6066                           ; BSR set to: 3
  6067                           ;main.c: 523:                                 ((tmpVal2 >> 1) < tmpVal))) {;main.c: 524:
      +                                                       LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  6068  000B6C  84BA               	bsf	186,2,c	;volatile
  6069  000B6E  96BC               	bcf	188,3,c	;volatile
  6070                           
  6071                           ; BSR set to: 3
  6072                           ;main.c: 525:                             pInspVSet = 2;
  6073  000B70  0E00               	movlw	0
  6074  000B72  0101               	movlb	1	; () banked
  6075  000B74  6FD4               	movwf	(_pInspVSet+1)& (0+255),b
  6076  000B76  0E02               	movlw	2
  6077  000B78  6FD3               	movwf	_pInspVSet& (0+255),b
  6078                           
  6079                           ;main.c: 526:                             OSCheckInt = 1;
  6080  000B7A  0E01               	movlw	1
  6081  000B7C  6FB9               	movwf	_OSCheckInt& (0+255),b
  6082                           
  6083                           ; BSR set to: 1
  6084                           ;main.c: 527:                             pPlatMax = pCtrl;
  6085  000B7E  C1E3  F1AF         	movff	_pCtrl,_pPlatMax
  6086  000B82  C1E4  F1B0         	movff	_pCtrl+1,_pPlatMax+1
  6087                           
  6088                           ; BSR set to: 1
  6089                           ;main.c: 528:                             rVMedActuationTstamp = timeGet();
  6090  000B86  ECD5  F052         	call	_timeGet	;wreg free
  6091  000B8A  0060  F24C  F1A3   	movff	?_timeGet,_rVMedActuationTstamp
  6092  000B90  0060  F250  F1A4   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;main.c: 529:                             rValveActuationTstamp = rVMedActuationTstamp;
  6096  000B96  C1A3  F1A5         	movff	_rVMedActuationTstamp,_rValveActuationTstamp
  6097  000B9A  C1A4  F1A6         	movff	_rVMedActuationTstamp+1,_rValveActuationTstamp+1
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;main.c: 530:                             pValveActuation = pCtrl;
  6101  000B9E  C1E3  F1E1         	movff	_pCtrl,_pValveActuation
  6102  000BA2  C1E4  F1E2         	movff	_pCtrl+1,_pValveActuation+1
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;main.c: 531:                             printf ("PI-MED T %d - Pi %d Pc %d Vol %3x OS 
      +                          %d RF %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))
      +                          *((int24_t) pCtrl))>>8)), vValveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInspOS3))>>8)), effectiveFlowRateInv);
  6106  000BA6  0EF8               	movlw	low STR_13
  6107  000BA8  0101               	movlb	1	; () banked
  6108  000BAA  6F46               	movwf	printf@fmt& (0+255),b
  6109  000BAC  0EFA               	movlw	high STR_13
  6110  000BAE  6F47               	movwf	(printf@fmt+1)& (0+255),b
  6111  000BB0  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  6112  000BB6  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6113  000BBC  ECD5  F052         	call	_timeGet	;wreg free
  6114  000BC0  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6115  000BC6  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6116  000BCC  EC80  F04E         	call	_timeDiff	;wreg free
  6117  000BD0  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  6118  000BD6  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  6119  000BDC  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  6120  000BE2  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6121  000BE8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6122  000BEA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6123  000BEC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6124  000BEE  0E45               	movlw	69
  6125  000BF0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6126  000BF2  0E00               	movlw	0
  6127  000BF4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6128  000BF6  0E00               	movlw	0
  6129  000BF8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6130  000BFA  EC1F  F04B         	call	___tmul	;wreg free
  6131  000BFE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6132  000C04  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6133  000C0A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6134  000C0C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6135  000C0E  698D               	setf	(?___tmul+2)& (0+255),b
  6136  000C10  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6137  000C16  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6138  000C1C  0060  F78C  F08B   	movff	_pCtrl,___tmul@multiplier
  6139  000C22  0060  F790  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6140  000C28  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6141  000C2A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6142  000C2C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6143  000C2E  0E45               	movlw	69
  6144  000C30  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6145  000C32  0E00               	movlw	0
  6146  000C34  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6147  000C36  0E00               	movlw	0
  6148  000C38  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6149  000C3A  EC1F  F04B         	call	___tmul	;wreg free
  6150  000C3E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6151  000C44  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6152  000C4A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6153  000C4C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6154  000C4E  698D               	setf	(?___tmul+2)& (0+255),b
  6155  000C50  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6156  000C56  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6157  000C5C  0060  F6AC  F14E   	movff	_vValveActuation,?_printf+8
  6158  000C62  0060  F6B0  F14F   	movff	_vValveActuation+1,?_printf+9
  6159  000C68  0060  F764  F08B   	movff	_pInspOS3,___tmul@multiplier
  6160  000C6E  0060  F768  F08C   	movff	_pInspOS3+1,___tmul@multiplier+1
  6161  000C74  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6162  000C76  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6163  000C78  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6164  000C7A  0E45               	movlw	69
  6165  000C7C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6166  000C7E  0E00               	movlw	0
  6167  000C80  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6168  000C82  0E00               	movlw	0
  6169  000C84  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6170  000C86  EC1F  F04B         	call	___tmul	;wreg free
  6171  000C8A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6172  000C90  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6173  000C96  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6174  000C98  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6175  000C9A  698D               	setf	(?___tmul+2)& (0+255),b
  6176  000C9C  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6177  000CA2  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6178  000CA8  0060  F734  F152   	movff	_effectiveFlowRateInv,?_printf+12
  6179  000CAE  0060  F738  F153   	movff	_effectiveFlowRateInv+1,?_printf+13
  6180  000CB4  EC43  F050         	call	_printf	;wreg free
  6181                           
  6182                           ;main.c: 533:                         } else if ((pInspVSet == 2) &&
  6183  000CB8  D0F5               	goto	l20809
  6184  000CBA                     l20775:
  6185  000CBA  0E02               	movlw	2
  6186  000CBC  0101               	movlb	1	; () banked
  6187  000CBE  19D3               	xorwf	_pInspVSet& (0+255),w,b
  6188  000CC0  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6189  000CC2  A4D8               	btfss	status,2,c
  6190  000CC4  D0EF               	goto	l20809
  6191                           
  6192                           ; BSR set to: 1
  6193  000CC6  51D7               	movf	_pInspOS2& (0+255),w,b
  6194  000CC8  25E3               	addwf	_pCtrl& (0+255),w,b
  6195  000CCA  0103               	movlb	3	; () banked
  6196  000CCC  6F9F               	movwf	??_main& (0+255),b
  6197  000CCE  0101               	movlb	1	; () banked
  6198  000CD0  51D8               	movf	(_pInspOS2+1)& (0+255),w,b
  6199  000CD2  21E4               	addwfc	(_pCtrl+1)& (0+255),w,b
  6200  000CD4  0103               	movlb	3	; () banked
  6201  000CD6  6FA0               	movwf	(??_main+1)& (0+255),b
  6202  000CD8  0060  F7BC  F09B   	movff	_intMaxP,___wmul@multiplier
  6203  000CDE  0060  F7C0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  6204  000CE4  0E00               	movlw	0
  6205  000CE6  0100               	movlb	0	; () banked
  6206  000CE8  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6207  000CEA  0E07               	movlw	7
  6208  000CEC  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6209  000CEE  ECFC  F04E         	call	___wmul	;wreg free
  6210  000CF2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6211  000CF4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6212  000CF6  339B               	rrcf	?___wmul& (0+255),f,b
  6213  000CF8  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6214  000CFA  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6215  000CFC  339B               	rrcf	?___wmul& (0+255),f,b
  6216  000CFE  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6217  000D00  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6218  000D02  339B               	rrcf	?___wmul& (0+255),f,b
  6219  000D04  0103               	movlb	3	; () banked
  6220  000D06  519F               	movf	??_main& (0+255),w,b
  6221  000D08  0100               	movlb	0	; () banked
  6222  000D0A  5D9B               	subwf	?___wmul& (0+255),w,b
  6223  000D0C  519C               	movf	(?___wmul+1)& (0+255),w,b
  6224  000D0E  0A80               	xorlw	128
  6225  000D10  0103               	movlb	3	; () banked
  6226  000D12  6FA1               	movwf	(??_main+2)& (0+255),b
  6227  000D14  51A0               	movf	(??_main+1)& (0+255),w,b
  6228  000D16  0A80               	xorlw	128
  6229  000D18  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6230  000D1A  A0D8               	btfss	status,0,c
  6231  000D1C  D00A               	goto	u22440
  6232                           
  6233                           ; BSR set to: 3
  6234  000D1E  51C7               	movf	main@tmpVal& (0+255),w,b
  6235  000D20  5DBF               	subwf	main@tmpVal2& (0+255),w,b
  6236  000D22  51C0               	movf	(main@tmpVal2+1)& (0+255),w,b
  6237  000D24  0A80               	xorlw	128
  6238  000D26  6F9F               	movwf	??_main& (0+255),b
  6239  000D28  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  6240  000D2A  0A80               	xorlw	128
  6241  000D2C  599F               	subwfb	??_main& (0+255),w,b
  6242  000D2E  B0D8               	btfsc	status,0,c
  6243  000D30  D0B9               	goto	l20809
  6244  000D32                     u22440:
  6245                           
  6246                           ; BSR set to: 3
  6247                           ;main.c: 535:                                 ((tmpVal2) < tmpVal))) {;main.c: 537:     
      +                                                  if (rSV2ValveCRT > rSV2ValveORT) {
  6248  000D32  0101               	movlb	1	; () banked
  6249  000D34  519F               	movf	_rSV2ValveCRT& (0+255),w,b
  6250  000D36  5DA1               	subwf	_rSV2ValveORT& (0+255),w,b
  6251  000D38  51A0               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6252  000D3A  59A2               	subwfb	(_rSV2ValveORT+1)& (0+255),w,b
  6253  000D3C  B0D8               	btfsc	status,0,c
  6254  000D3E  D009               	goto	l1779
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;main.c: 538:                                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  6258  000D40  94BA               	bcf	186,2,c	;volatile
  6259  000D42  96BC               	bcf	188,3,c	;volatile
  6260                           
  6261                           ; BSR set to: 1
  6262                           ;main.c: 539:                                 T4PR = 10 + rSV2ValveCRT - rSV2ValveORT;
  6263  000D44  51A1               	movf	_rSV2ValveORT& (0+255),w,b
  6264  000D46  5D9F               	subwf	_rSV2ValveCRT& (0+255),w,b
  6265  000D48  0F0A               	addlw	10
  6266  000D4A  6E9F               	movwf	159,c	;volatile
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;main.c: 540:                                 TMR4_Start();
  6270  000D4C  EC3F  F054         	call	_TMR4_Start	;wreg free
  6271                           
  6272                           ;main.c: 541:                             } else {
  6273  000D50  D002               	goto	l20789
  6274  000D52                     l1779:
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;main.c: 542:                                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  6278  000D52  94BA               	bcf	186,2,c	;volatile
  6279  000D54  86BC               	bsf	188,3,c	;volatile
  6280  000D56                     l20789:
  6281                           
  6282                           ; BSR set to: 1
  6283                           ;main.c: 544:                             if (OSCheckInt && (pInspOS3 < intMaxP)) {
  6284  000D56  51B9               	movf	_OSCheckInt& (0+255),w,b
  6285  000D58  B4D8               	btfsc	status,2,c
  6286  000D5A  D014               	goto	l20795
  6287                           
  6288                           ; BSR set to: 1
  6289  000D5C  51EF               	movf	_intMaxP& (0+255),w,b
  6290  000D5E  5DD9               	subwf	_pInspOS3& (0+255),w,b
  6291  000D60  51DA               	movf	(_pInspOS3+1)& (0+255),w,b
  6292  000D62  0A80               	xorlw	128
  6293  000D64  0103               	movlb	3	; () banked
  6294  000D66  6F9F               	movwf	??_main& (0+255),b
  6295  000D68  0101               	movlb	1	; () banked
  6296  000D6A  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  6297  000D6C  0A80               	xorlw	128
  6298  000D6E  0103               	movlb	3	; () banked
  6299  000D70  599F               	subwfb	??_main& (0+255),w,b
  6300  000D72  B0D8               	btfsc	status,0,c
  6301  000D74  D007               	goto	l20795
  6302                           
  6303                           ; BSR set to: 3
  6304                           ;main.c: 546:                                 pInspOS3 = pInspOS3 + ((int16_t) ((0.045*4
      +                          096+2)/5)*1);
  6305  000D76  0E25               	movlw	37
  6306  000D78  0101               	movlb	1	; () banked
  6307  000D7A  25D9               	addwf	_pInspOS3& (0+255),w,b
  6308  000D7C  6FD9               	movwf	_pInspOS3& (0+255),b
  6309  000D7E  0E00               	movlw	0
  6310  000D80  21DA               	addwfc	(_pInspOS3+1)& (0+255),w,b
  6311  000D82  6FDA               	movwf	(_pInspOS3+1)& (0+255),b
  6312  000D84                     l20795:
  6313                           
  6314                           ;main.c: 548:                             pInspVSet = 1;
  6315  000D84  0E00               	movlw	0
  6316  000D86  0101               	movlb	1	; () banked
  6317  000D88  6FD4               	movwf	(_pInspVSet+1)& (0+255),b
  6318  000D8A  0E01               	movlw	1
  6319  000D8C  6FD3               	movwf	_pInspVSet& (0+255),b
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;main.c: 549:                             OSCheckInt = 1;
  6323  000D8E  0E01               	movlw	1
  6324  000D90  6FB9               	movwf	_OSCheckInt& (0+255),b
  6325                           
  6326                           ; BSR set to: 1
  6327                           ;main.c: 550:                             pPlatMax = pCtrl;
  6328  000D92  C1E3  F1AF         	movff	_pCtrl,_pPlatMax
  6329  000D96  C1E4  F1B0         	movff	_pCtrl+1,_pPlatMax+1
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;main.c: 551:                             rVLowActuationTstamp = timeGet();
  6333  000D9A  ECD5  F052         	call	_timeGet	;wreg free
  6334  000D9E  0060  F24C  F23C   	movff	?_timeGet,_rVLowActuationTstamp
  6335  000DA4  0060  F250  F23D   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;main.c: 552:                             rValveActuationTstamp = rVLowActuationTstamp;
  6339  000DAA  C23C  F1A5         	movff	_rVLowActuationTstamp,_rValveActuationTstamp
  6340  000DAE  C23D  F1A6         	movff	_rVLowActuationTstamp+1,_rValveActuationTstamp+1
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;main.c: 553:                             pValveActuation = pCtrl;
  6344  000DB2  C1E3  F1E1         	movff	_pCtrl,_pValveActuation
  6345  000DB6  C1E4  F1E2         	movff	_pCtrl+1,_pValveActuation+1
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;main.c: 554:                             printf ("PI-LOW T %d - Pi %d Pc %d Vol %d OS %
      +                          d\n", timeGet(), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst))
      +                          >>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pCtrl))>>8)), vVa
      +                          lveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInspOS2))
      +                          >>8)));
  6349  000DBA  0E80               	movlw	low STR_14
  6350  000DBC  0101               	movlb	1	; () banked
  6351  000DBE  6F46               	movwf	printf@fmt& (0+255),b
  6352  000DC0  0EFB               	movlw	high STR_14
  6353  000DC2  6F47               	movwf	(printf@fmt+1)& (0+255),b
  6354  000DC4  ECD5  F052         	call	_timeGet	;wreg free
  6355  000DC8  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  6356  000DCE  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  6357  000DD4  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  6358  000DDA  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6359  000DE0  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6360  000DE2  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6361  000DE4  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6362  000DE6  0E45               	movlw	69
  6363  000DE8  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6364  000DEA  0E00               	movlw	0
  6365  000DEC  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6366  000DEE  0E00               	movlw	0
  6367  000DF0  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6368  000DF2  EC1F  F04B         	call	___tmul	;wreg free
  6369  000DF6  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6370  000DFC  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6371  000E02  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6372  000E04  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6373  000E06  698D               	setf	(?___tmul+2)& (0+255),b
  6374  000E08  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6375  000E0E  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6376  000E14  0060  F78C  F08B   	movff	_pCtrl,___tmul@multiplier
  6377  000E1A  0060  F790  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6378  000E20  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6379  000E22  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6380  000E24  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6381  000E26  0E45               	movlw	69
  6382  000E28  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6383  000E2A  0E00               	movlw	0
  6384  000E2C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6385  000E2E  0E00               	movlw	0
  6386  000E30  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6387  000E32  EC1F  F04B         	call	___tmul	;wreg free
  6388  000E36  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6389  000E3C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6390  000E42  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6391  000E44  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6392  000E46  698D               	setf	(?___tmul+2)& (0+255),b
  6393  000E48  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6394  000E4E  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6395  000E54  0060  F6AC  F14E   	movff	_vValveActuation,?_printf+8
  6396  000E5A  0060  F6B0  F14F   	movff	_vValveActuation+1,?_printf+9
  6397  000E60  0060  F75C  F08B   	movff	_pInspOS2,___tmul@multiplier
  6398  000E66  0060  F760  F08C   	movff	_pInspOS2+1,___tmul@multiplier+1
  6399  000E6C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6400  000E6E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6401  000E70  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6402  000E72  0E45               	movlw	69
  6403  000E74  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6404  000E76  0E00               	movlw	0
  6405  000E78  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6406  000E7A  0E00               	movlw	0
  6407  000E7C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6408  000E7E  EC1F  F04B         	call	___tmul	;wreg free
  6409  000E82  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6410  000E88  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6411  000E8E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6412  000E90  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6413  000E92  698D               	setf	(?___tmul+2)& (0+255),b
  6414  000E94  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6415  000E9A  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6416  000EA0  EC43  F050         	call	_printf	;wreg free
  6417  000EA4                     l20809:
  6418                           
  6419                           ;main.c: 557:                         if (pPlatMax < pCtrl) {
  6420  000EA4  0101               	movlb	1	; () banked
  6421  000EA6  51E3               	movf	_pCtrl& (0+255),w,b
  6422  000EA8  5DAF               	subwf	_pPlatMax& (0+255),w,b
  6423  000EAA  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  6424  000EAC  0A80               	xorlw	128
  6425  000EAE  0103               	movlb	3	; () banked
  6426  000EB0  6F9F               	movwf	??_main& (0+255),b
  6427  000EB2  0101               	movlb	1	; () banked
  6428  000EB4  51E4               	movf	(_pCtrl+1)& (0+255),w,b
  6429  000EB6  0A80               	xorlw	128
  6430  000EB8  0103               	movlb	3	; () banked
  6431  000EBA  599F               	subwfb	??_main& (0+255),w,b
  6432  000EBC  B0D8               	btfsc	status,0,c
  6433  000EBE  D004               	goto	l20813
  6434                           
  6435                           ; BSR set to: 3
  6436                           ;main.c: 558:                             pPlatMax = pCtrl;
  6437  000EC0  C1E3  F1AF         	movff	_pCtrl,_pPlatMax
  6438  000EC4  C1E4  F1B0         	movff	_pCtrl+1,_pPlatMax+1
  6439  000EC8                     l20813:
  6440                           
  6441                           ; BSR set to: 3
  6442                           ;main.c: 563:                         if (OSCheckInt) {
  6443  000EC8  0101               	movlb	1	; () banked
  6444  000ECA  51B9               	movf	_OSCheckInt& (0+255),w,b
  6445  000ECC  B4D8               	btfsc	status,2,c
  6446  000ECE  D0BF               	goto	l20833
  6447                           
  6448                           ; BSR set to: 1
  6449                           ;main.c: 564:      if ((pInspVSet == 2) && timeElapsed(rValveActuationTstamp, rSV2ValveC
      +                          RT + ((time_t) 15*1))) {
  6450  000ED0  0E02               	movlw	2
  6451  000ED2  19D3               	xorwf	_pInspVSet& (0+255),w,b
  6452  000ED4  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6453  000ED6  A4D8               	btfss	status,2,c
  6454  000ED8  D041               	goto	l20823
  6455                           
  6456                           ; BSR set to: 1
  6457  000EDA  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  6458  000EE0  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  6459  000EE6  0E0F               	movlw	15
  6460  000EE8  259F               	addwf	_rSV2ValveCRT& (0+255),w,b
  6461  000EEA  0100               	movlb	0	; () banked
  6462  000EEC  6F95               	movwf	timeElapsed@duration& (0+255),b
  6463  000EEE  0E00               	movlw	0
  6464  000EF0  0101               	movlb	1	; () banked
  6465  000EF2  21A0               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  6466  000EF4  0100               	movlb	0	; () banked
  6467  000EF6  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6468  000EF8  ECE4  F04E         	call	_timeElapsed	;wreg free
  6469  000EFC  0900               	iorlw	0
  6470  000EFE  B4D8               	btfsc	status,2,c
  6471  000F00  D02D               	goto	l20823
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;main.c: 565:        OSCheckInt = 0;
  6475  000F02  0E00               	movlw	0
  6476  000F04  0101               	movlb	1	; () banked
  6477  000F06  6FB9               	movwf	_OSCheckInt& (0+255),b
  6478                           
  6479                           ; BSR set to: 1
  6480                           ;main.c: 567:        pInspOS3 = (3 * pInspOS3 + pPlatMax - pValveActuation) >> 2;
  6481  000F08  0060  F764  F09B   	movff	_pInspOS3,___wmul@multiplier
  6482  000F0E  0060  F768  F09C   	movff	_pInspOS3+1,___wmul@multiplier+1
  6483  000F14  0E00               	movlw	0
  6484  000F16  0100               	movlb	0	; () banked
  6485  000F18  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6486  000F1A  0E03               	movlw	3
  6487  000F1C  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6488  000F1E  ECFC  F04E         	call	___wmul	;wreg free
  6489  000F22  0101               	movlb	1	; () banked
  6490  000F24  51E1               	movf	_pValveActuation& (0+255),w,b
  6491  000F26  0100               	movlb	0	; () banked
  6492  000F28  5F9B               	subwf	?___wmul& (0+255),f,b
  6493  000F2A  0101               	movlb	1	; () banked
  6494  000F2C  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
  6495  000F2E  0100               	movlb	0	; () banked
  6496  000F30  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6497  000F32  0101               	movlb	1	; () banked
  6498  000F34  51AF               	movf	_pPlatMax& (0+255),w,b
  6499  000F36  0100               	movlb	0	; () banked
  6500  000F38  279B               	addwf	?___wmul& (0+255),f,b
  6501  000F3A  0101               	movlb	1	; () banked
  6502  000F3C  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  6503  000F3E  0100               	movlb	0	; () banked
  6504  000F40  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6505  000F42  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6506  000F44  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6507  000F46  339B               	rrcf	?___wmul& (0+255),f,b
  6508  000F48  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6509  000F4A  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6510  000F4C  339B               	rrcf	?___wmul& (0+255),f,b
  6511  000F4E  0060  F26C  F1D9   	movff	?___wmul,_pInspOS3
  6512  000F54  0060  F270  F1DA   	movff	?___wmul+1,_pInspOS3+1
  6513                           
  6514                           ;main.c: 568:      } else if ((pInspVSet == 1) && timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT + ((time_t) 35*1))) {
  6515  000F5A  D045               	goto	l20831
  6516  000F5C                     l20823:
  6517  000F5C  0101               	movlb	1	; () banked
  6518  000F5E  05D3               	decf	_pInspVSet& (0+255),w,b
  6519  000F60  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6520  000F62  A4D8               	btfss	status,2,c
  6521  000F64  D040               	goto	l20831
  6522                           
  6523                           ; BSR set to: 1
  6524  000F66  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  6525  000F6C  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  6526  000F72  0E23               	movlw	35
  6527  000F74  259F               	addwf	_rSV2ValveCRT& (0+255),w,b
  6528  000F76  0100               	movlb	0	; () banked
  6529  000F78  6F95               	movwf	timeElapsed@duration& (0+255),b
  6530  000F7A  0E00               	movlw	0
  6531  000F7C  0101               	movlb	1	; () banked
  6532  000F7E  21A0               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  6533  000F80  0100               	movlb	0	; () banked
  6534  000F82  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6535  000F84  ECE4  F04E         	call	_timeElapsed	;wreg free
  6536  000F88  0900               	iorlw	0
  6537  000F8A  B4D8               	btfsc	status,2,c
  6538  000F8C  D02C               	goto	l20831
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;main.c: 569:        OSCheckInt = 0;
  6542  000F8E  0E00               	movlw	0
  6543  000F90  0101               	movlb	1	; () banked
  6544  000F92  6FB9               	movwf	_OSCheckInt& (0+255),b
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;main.c: 571:        pInspOS2 = (3 * pInspOS2 + pPlatMax - pValveActuation) >> 2;
  6548  000F94  0060  F75C  F09B   	movff	_pInspOS2,___wmul@multiplier
  6549  000F9A  0060  F760  F09C   	movff	_pInspOS2+1,___wmul@multiplier+1
  6550  000FA0  0E00               	movlw	0
  6551  000FA2  0100               	movlb	0	; () banked
  6552  000FA4  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6553  000FA6  0E03               	movlw	3
  6554  000FA8  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6555  000FAA  ECFC  F04E         	call	___wmul	;wreg free
  6556  000FAE  0101               	movlb	1	; () banked
  6557  000FB0  51E1               	movf	_pValveActuation& (0+255),w,b
  6558  000FB2  0100               	movlb	0	; () banked
  6559  000FB4  5F9B               	subwf	?___wmul& (0+255),f,b
  6560  000FB6  0101               	movlb	1	; () banked
  6561  000FB8  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
  6562  000FBA  0100               	movlb	0	; () banked
  6563  000FBC  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6564  000FBE  0101               	movlb	1	; () banked
  6565  000FC0  51AF               	movf	_pPlatMax& (0+255),w,b
  6566  000FC2  0100               	movlb	0	; () banked
  6567  000FC4  279B               	addwf	?___wmul& (0+255),f,b
  6568  000FC6  0101               	movlb	1	; () banked
  6569  000FC8  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  6570  000FCA  0100               	movlb	0	; () banked
  6571  000FCC  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6572  000FCE  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6573  000FD0  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6574  000FD2  339B               	rrcf	?___wmul& (0+255),f,b
  6575  000FD4  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6576  000FD6  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6577  000FD8  339B               	rrcf	?___wmul& (0+255),f,b
  6578  000FDA  0060  F26C  F1D7   	movff	?___wmul,_pInspOS2
  6579  000FE0  0060  F270  F1D8   	movff	?___wmul+1,_pInspOS2+1
  6580  000FE6                     l20831:
  6581                           
  6582                           ;main.c: 574:      pInspOSScale = 0;
  6583  000FE6  0E00               	movlw	0
  6584  000FE8  0103               	movlb	3	; () banked
  6585  000FEA  6FC2               	movwf	(main@pInspOSScale+1)& (0+255),b
  6586  000FEC  0E00               	movlw	0
  6587  000FEE  6FC1               	movwf	main@pInspOSScale& (0+255),b
  6588                           
  6589                           ;main.c: 575:      vInspOSScale = (5 * (1 + pInspVSet) * vInspOS) >> 4;
  6590  000FF0  0E01               	movlw	1
  6591  000FF2  0101               	movlb	1	; () banked
  6592  000FF4  25D3               	addwf	_pInspVSet& (0+255),w,b
  6593  000FF6  0100               	movlb	0	; () banked
  6594  000FF8  6F9B               	movwf	___wmul@multiplier& (0+255),b
  6595  000FFA  0E00               	movlw	0
  6596  000FFC  0101               	movlb	1	; () banked
  6597  000FFE  21D4               	addwfc	(_pInspVSet+1)& (0+255),w,b
  6598  001000  0100               	movlb	0	; () banked
  6599  001002  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  6600  001004  0060  F754  F09D   	movff	_vInspOS,___wmul@multiplicand
  6601  00100A  0060  F758  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6602  001010  ECFC  F04E         	call	___wmul	;wreg free
  6603  001014  0060  F26C  F3BD   	movff	?___wmul,_main$6111
  6604  00101A  0060  F270  F3BE   	movff	?___wmul+1,_main$6111+1
  6605                           
  6606                           ;main.c: 575:      vInspOSScale = (5 * (1 + pInspVSet) * vInspOS) >> 4;
  6607  001020  0060  FEF4  F09B   	movff	_main$6111,___wmul@multiplier
  6608  001026  0060  FEF8  F09C   	movff	_main$6111+1,___wmul@multiplier+1
  6609  00102C  0E00               	movlw	0
  6610  00102E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6611  001030  0E05               	movlw	5
  6612  001032  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6613  001034  ECFC  F04E         	call	___wmul	;wreg free
  6614  001038  0E04               	movlw	4
  6615  00103A  0103               	movlb	3	; () banked
  6616  00103C  6F9F               	movwf	??_main& (0+255),b
  6617  00103E                     u22545:
  6618  00103E  0100               	movlb	0	; () banked
  6619  001040  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6620  001042  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6621  001044  339B               	rrcf	?___wmul& (0+255),f,b
  6622  001046  0103               	movlb	3	; () banked
  6623  001048  2F9F               	decfsz	??_main& (0+255),f,b
  6624  00104A  D7F9               	goto	u22545
  6625  00104C  D072               	goto	L1
  6626  00104E                     l20833:
  6627                           
  6628                           ; BSR set to: 1
  6629                           ;main.c: 577:                             if (pInspVSet == 3) {
  6630  00104E  0E03               	movlw	3
  6631  001050  19D3               	xorwf	_pInspVSet& (0+255),w,b
  6632  001052  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6633  001054  A4D8               	btfss	status,2,c
  6634  001056  D007               	goto	l20837
  6635                           
  6636                           ; BSR set to: 1
  6637                           ;main.c: 578:                                 pInspOSScale = pInspOS3;
  6638  001058  0060  F764  F3C1   	movff	_pInspOS3,main@pInspOSScale
  6639  00105E  0060  F768  F3C2   	movff	_pInspOS3+1,main@pInspOSScale+1
  6640                           
  6641                           ;main.c: 579:                             } else if (pInspVSet == 2) {
  6642  001064  D03C               	goto	l1789
  6643  001066                     l20837:
  6644                           
  6645                           ; BSR set to: 1
  6646  001066  0E02               	movlw	2
  6647  001068  19D3               	xorwf	_pInspVSet& (0+255),w,b
  6648  00106A  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6649  00106C  A4D8               	btfss	status,2,c
  6650  00106E  D007               	goto	l20841
  6651                           
  6652                           ; BSR set to: 1
  6653                           ;main.c: 580:                                 pInspOSScale = pInspOS2;
  6654  001070  0060  F75C  F3C1   	movff	_pInspOS2,main@pInspOSScale
  6655  001076  0060  F760  F3C2   	movff	_pInspOS2+1,main@pInspOSScale+1
  6656                           
  6657                           ;main.c: 581:                             } else {
  6658  00107C  D030               	goto	l1789
  6659  00107E                     l20841:
  6660                           
  6661                           ; BSR set to: 1
  6662                           ;main.c: 582:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6663  00107E  0060  F74C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6664  001084  0060  F750  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6665  00108A  0060  FB5C  F09D   	movff	_pInspOS,___wmul@multiplicand
  6666  001090  0060  FB60  F09E   	movff	_pInspOS+1,___wmul@multiplicand+1
  6667  001096  ECFC  F04E         	call	___wmul	;wreg free
  6668  00109A  0060  F26C  F3BD   	movff	?___wmul,_main$6111
  6669  0010A0  0060  F270  F3BE   	movff	?___wmul+1,_main$6111+1
  6670                           
  6671                           ;main.c: 582:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6672  0010A6  0060  FEF4  F09B   	movff	_main$6111,___wmul@multiplier
  6673  0010AC  0060  FEF8  F09C   	movff	_main$6111+1,___wmul@multiplier+1
  6674  0010B2  0E00               	movlw	0
  6675  0010B4  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6676  0010B6  0E05               	movlw	5
  6677  0010B8  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6678  0010BA  ECFC  F04E         	call	___wmul	;wreg free
  6679  0010BE  0E04               	movlw	4
  6680  0010C0  0103               	movlb	3	; () banked
  6681  0010C2  6F9F               	movwf	??_main& (0+255),b
  6682  0010C4                     u22575:
  6683  0010C4  0100               	movlb	0	; () banked
  6684  0010C6  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6685  0010C8  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6686  0010CA  339B               	rrcf	?___wmul& (0+255),f,b
  6687  0010CC  0103               	movlb	3	; () banked
  6688  0010CE  2F9F               	decfsz	??_main& (0+255),f,b
  6689  0010D0  D7F9               	goto	u22575
  6690  0010D2  0060  F26C  F3C1   	movff	?___wmul,main@pInspOSScale
  6691  0010D8  0060  F270  F3C2   	movff	?___wmul+1,main@pInspOSScale+1
  6692  0010DE                     l1789:
  6693                           
  6694                           ;main.c: 584:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6695  0010DE  0060  F74C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6696  0010E4  0060  F750  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6697  0010EA  0060  F754  F09D   	movff	_vInspOS,___wmul@multiplicand
  6698  0010F0  0060  F758  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6699  0010F6  ECFC  F04E         	call	___wmul	;wreg free
  6700  0010FA  0060  F26C  F3BD   	movff	?___wmul,_main$6111
  6701  001100  0060  F270  F3BE   	movff	?___wmul+1,_main$6111+1
  6702                           
  6703                           ;main.c: 584:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6704  001106  0060  FEF4  F09B   	movff	_main$6111,___wmul@multiplier
  6705  00110C  0060  FEF8  F09C   	movff	_main$6111+1,___wmul@multiplier+1
  6706  001112  0E00               	movlw	0
  6707  001114  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6708  001116  0E05               	movlw	5
  6709  001118  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6710  00111A  ECFC  F04E         	call	___wmul	;wreg free
  6711  00111E  0E04               	movlw	4
  6712  001120  0103               	movlb	3	; () banked
  6713  001122  6F9F               	movwf	??_main& (0+255),b
  6714  001124                     u22585:
  6715  001124  0100               	movlb	0	; () banked
  6716  001126  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6717  001128  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6718  00112A  339B               	rrcf	?___wmul& (0+255),f,b
  6719  00112C  0103               	movlb	3	; () banked
  6720  00112E  2F9F               	decfsz	??_main& (0+255),f,b
  6721  001130  D7F9               	goto	u22585
  6722  001132                     L1:
  6723  001132  0060  F26C  F3B6   	movff	?___wmul,main@vInspOSScale
  6724  001138  0060  F270  F3B7   	movff	?___wmul+1,main@vInspOSScale+1
  6725                           
  6726                           ; BSR set to: 3
  6727                           ;main.c: 588:                         if (timeElapsed(rCycleTime, intIDuration - rSV2Val
      +                          veCRT - ((time_t) 20*1)) ||
  6728  00113E  0060  F72C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  6729  001144  0060  F730  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  6730  00114A  0101               	movlb	1	; () banked
  6731  00114C  519F               	movf	_rSV2ValveCRT& (0+255),w,b
  6732  00114E  5DB1               	subwf	_intIDuration& (0+255),w,b
  6733  001150  0103               	movlb	3	; () banked
  6734  001152  6F9F               	movwf	??_main& (0+255),b
  6735  001154  0101               	movlb	1	; () banked
  6736  001156  51A0               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6737  001158  59B2               	subwfb	(_intIDuration+1)& (0+255),w,b
  6738  00115A  0103               	movlb	3	; () banked
  6739  00115C  6FA0               	movwf	(??_main+1)& (0+255),b
  6740  00115E  0EEC               	movlw	236
  6741  001160  259F               	addwf	??_main& (0+255),w,b
  6742  001162  0100               	movlb	0	; () banked
  6743  001164  6F95               	movwf	timeElapsed@duration& (0+255),b
  6744  001166  0EFF               	movlw	255
  6745  001168  0103               	movlb	3	; () banked
  6746  00116A  21A0               	addwfc	(??_main+1)& (0+255),w,b
  6747  00116C  0100               	movlb	0	; () banked
  6748  00116E  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6749  001170  ECE4  F04E         	call	_timeElapsed	;wreg free
  6750  001174  0900               	iorlw	0
  6751  001176  A4D8               	btfss	status,2,c
  6752  001178  D08E               	goto	u22670
  6753                           
  6754                           ; BSR set to: 0
  6755  00117A  0E4A               	movlw	74
  6756  00117C  0101               	movlb	1	; () banked
  6757  00117E  25EF               	addwf	_intMaxP& (0+255),w,b
  6758  001180  0103               	movlb	3	; () banked
  6759  001182  6F9F               	movwf	??_main& (0+255),b
  6760  001184  0E00               	movlw	0
  6761  001186  0101               	movlb	1	; () banked
  6762  001188  21F0               	addwfc	(_intMaxP+1)& (0+255),w,b
  6763  00118A  0103               	movlb	3	; () banked
  6764  00118C  6FA0               	movwf	(??_main+1)& (0+255),b
  6765  00118E  0101               	movlb	1	; () banked
  6766  001190  51EB               	movf	_pInst& (0+255),w,b
  6767  001192  0103               	movlb	3	; () banked
  6768  001194  5D9F               	subwf	??_main& (0+255),w,b
  6769  001196  51A0               	movf	(??_main+1)& (0+255),w,b
  6770  001198  0A80               	xorlw	128
  6771  00119A  6FA1               	movwf	(??_main+2)& (0+255),b
  6772  00119C  0101               	movlb	1	; () banked
  6773  00119E  51EC               	movf	(_pInst+1)& (0+255),w,b
  6774  0011A0  0A80               	xorlw	128
  6775  0011A2  0103               	movlb	3	; () banked
  6776  0011A4  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6777  0011A6  A0D8               	btfss	status,0,c
  6778  0011A8  D076               	goto	u22670
  6779                           
  6780                           ; BSR set to: 3
  6781  0011AA  0101               	movlb	1	; () banked
  6782  0011AC  51E3               	movf	_pCtrl& (0+255),w,b
  6783  0011AE  5DEF               	subwf	_intMaxP& (0+255),w,b
  6784  0011B0  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  6785  0011B2  0A80               	xorlw	128
  6786  0011B4  0103               	movlb	3	; () banked
  6787  0011B6  6F9F               	movwf	??_main& (0+255),b
  6788  0011B8  0101               	movlb	1	; () banked
  6789  0011BA  51E4               	movf	(_pCtrl+1)& (0+255),w,b
  6790  0011BC  0A80               	xorlw	128
  6791  0011BE  0103               	movlb	3	; () banked
  6792  0011C0  599F               	subwfb	??_main& (0+255),w,b
  6793  0011C2  A0D8               	btfss	status,0,c
  6794  0011C4  D068               	goto	u22670
  6795                           
  6796                           ; BSR set to: 3
  6797  0011C6  51C1               	movf	main@pInspOSScale& (0+255),w,b
  6798  0011C8  0101               	movlb	1	; () banked
  6799  0011CA  25E3               	addwf	_pCtrl& (0+255),w,b
  6800  0011CC  0103               	movlb	3	; () banked
  6801  0011CE  6F9F               	movwf	??_main& (0+255),b
  6802  0011D0  51C2               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6803  0011D2  0101               	movlb	1	; () banked
  6804  0011D4  21E4               	addwfc	(_pCtrl+1)& (0+255),w,b
  6805  0011D6  0103               	movlb	3	; () banked
  6806  0011D8  6FA0               	movwf	(??_main+1)& (0+255),b
  6807  0011DA  519F               	movf	??_main& (0+255),w,b
  6808  0011DC  0101               	movlb	1	; () banked
  6809  0011DE  5DEF               	subwf	_intMaxP& (0+255),w,b
  6810  0011E0  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  6811  0011E2  0A80               	xorlw	128
  6812  0011E4  0103               	movlb	3	; () banked
  6813  0011E6  6FA1               	movwf	(??_main+2)& (0+255),b
  6814  0011E8  51A0               	movf	(??_main+1)& (0+255),w,b
  6815  0011EA  0A80               	xorlw	128
  6816  0011EC  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6817  0011EE  A0D8               	btfss	status,0,c
  6818  0011F0  D052               	goto	u22670
  6819                           
  6820                           ; BSR set to: 3
  6821  0011F2  0101               	movlb	1	; () banked
  6822  0011F4  51C2               	movf	_intVentMode& (0+255),w,b
  6823  0011F6  A4D8               	btfss	status,2,c
  6824  0011F8  D02F               	goto	u22650
  6825                           
  6826                           ; BSR set to: 1
  6827  0011FA  0103               	movlb	3	; () banked
  6828  0011FC  51C1               	movf	main@pInspOSScale& (0+255),w,b
  6829  0011FE  0101               	movlb	1	; () banked
  6830  001200  25E3               	addwf	_pCtrl& (0+255),w,b
  6831  001202  0103               	movlb	3	; () banked
  6832  001204  6F9F               	movwf	??_main& (0+255),b
  6833  001206  51C2               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6834  001208  0101               	movlb	1	; () banked
  6835  00120A  21E4               	addwfc	(_pCtrl+1)& (0+255),w,b
  6836  00120C  0103               	movlb	3	; () banked
  6837  00120E  6FA0               	movwf	(??_main+1)& (0+255),b
  6838  001210  519F               	movf	??_main& (0+255),w,b
  6839  001212  0101               	movlb	1	; () banked
  6840  001214  5DB5               	subwf	_intIP& (0+255),w,b
  6841  001216  51B6               	movf	(_intIP+1)& (0+255),w,b
  6842  001218  0A80               	xorlw	128
  6843  00121A  0103               	movlb	3	; () banked
  6844  00121C  6FA1               	movwf	(??_main+2)& (0+255),b
  6845  00121E  51A0               	movf	(??_main+1)& (0+255),w,b
  6846  001220  0A80               	xorlw	128
  6847  001222  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6848  001224  B0D8               	btfsc	status,0,c
  6849  001226  D018               	goto	u22650
  6850                           
  6851                           ; BSR set to: 3
  6852  001228  51B6               	movf	main@vInspOSScale& (0+255),w,b
  6853  00122A  0101               	movlb	1	; () banked
  6854  00122C  25AB               	addwf	_vValveActuation& (0+255),w,b
  6855  00122E  0103               	movlb	3	; () banked
  6856  001230  6F9F               	movwf	??_main& (0+255),b
  6857  001232  51B7               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6858  001234  0101               	movlb	1	; () banked
  6859  001236  21AC               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6860  001238  0103               	movlb	3	; () banked
  6861  00123A  6FA0               	movwf	(??_main+1)& (0+255),b
  6862  00123C  0101               	movlb	1	; () banked
  6863  00123E  51ED               	movf	_intMaxV& (0+255),w,b
  6864  001240  0103               	movlb	3	; () banked
  6865  001242  5D9F               	subwf	??_main& (0+255),w,b
  6866  001244  51A0               	movf	(??_main+1)& (0+255),w,b
  6867  001246  0A80               	xorlw	128
  6868  001248  6FA1               	movwf	(??_main+2)& (0+255),b
  6869  00124A  0101               	movlb	1	; () banked
  6870  00124C  51EE               	movf	(_intMaxV+1)& (0+255),w,b
  6871  00124E  0A80               	xorlw	128
  6872  001250  0103               	movlb	3	; () banked
  6873  001252  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6874  001254  B0D8               	btfsc	status,0,c
  6875  001256  D01F               	goto	u22670
  6876  001258                     u22650:
  6877  001258  0101               	movlb	1	; () banked
  6878  00125A  05C2               	decf	_intVentMode& (0+255),w,b
  6879  00125C  A4D8               	btfss	status,2,c
  6880  00125E  EFB0  F00E         	goto	l21043
  6881                           
  6882                           ; BSR set to: 1
  6883  001262  0103               	movlb	3	; () banked
  6884  001264  51B6               	movf	main@vInspOSScale& (0+255),w,b
  6885  001266  0101               	movlb	1	; () banked
  6886  001268  25AB               	addwf	_vValveActuation& (0+255),w,b
  6887  00126A  0103               	movlb	3	; () banked
  6888  00126C  6F9F               	movwf	??_main& (0+255),b
  6889  00126E  51B7               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6890  001270  0101               	movlb	1	; () banked
  6891  001272  21AC               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6892  001274  0103               	movlb	3	; () banked
  6893  001276  6FA0               	movwf	(??_main+1)& (0+255),b
  6894  001278  0101               	movlb	1	; () banked
  6895  00127A  51ED               	movf	_intMaxV& (0+255),w,b
  6896  00127C  0103               	movlb	3	; () banked
  6897  00127E  5D9F               	subwf	??_main& (0+255),w,b
  6898  001280  51A0               	movf	(??_main+1)& (0+255),w,b
  6899  001282  0A80               	xorlw	128
  6900  001284  6FA1               	movwf	(??_main+2)& (0+255),b
  6901  001286  0101               	movlb	1	; () banked
  6902  001288  51EE               	movf	(_intMaxV+1)& (0+255),w,b
  6903  00128A  0A80               	xorlw	128
  6904  00128C  0103               	movlb	3	; () banked
  6905  00128E  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6906  001290  A0D8               	btfss	status,0,c
  6907  001292  EFB0  F00E         	goto	l21043
  6908  001296                     u22670:
  6909                           
  6910                           ;main.c: 593:                                 ((intVentMode == VMODE_VOLUME) && ((vValve
      +                          Actuation + vInspOSScale) >= intMaxV))) {;main.c: 594:                             LATAb
      +                          its.LATA2 = 0;LATCbits.LATC3 = 0;
  6911  001296  94BA               	bcf	186,2,c	;volatile
  6912  001298  96BC               	bcf	188,3,c	;volatile
  6913                           
  6914                           ;main.c: 595:                             sv2DelayCheck = 1;
  6915  00129A  0E01               	movlw	1
  6916  00129C  0101               	movlb	1	; () banked
  6917  00129E  6FBD               	movwf	_sv2DelayCheck& (0+255),b
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;main.c: 596:                             pValveActuation = pCtrl;
  6921  0012A0  C1E3  F1E1         	movff	_pCtrl,_pValveActuation
  6922  0012A4  C1E4  F1E2         	movff	_pCtrl+1,_pValveActuation+1
  6923                           
  6924                           ;main.c: 597:                             initInspSubState = 0;
  6925  0012A8  0E00               	movlw	0
  6926  0012AA  6FBE               	movwf	_initInspSubState& (0+255),b
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;main.c: 598:                             rValveActuationTstamp = timeGet();
  6930  0012AC  ECD5  F052         	call	_timeGet	;wreg free
  6931  0012B0  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  6932  0012B6  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;main.c: 599:                             rValveDelayStart = rValveActuationTstamp;
  6936  0012BC  C1A5  F19B         	movff	_rValveActuationTstamp,_rValveDelayStart
  6937  0012C0  C1A6  F19C         	movff	_rValveActuationTstamp+1,_rValveDelayStart+1
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;main.c: 600:                             tInsp = timeDiff(rCycleTime, rValveActuationTs
      +                          tamp);
  6941  0012C4  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  6942  0012CA  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6943  0012D0  0060  F694  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  6944  0012D6  0060  F698  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  6945  0012DC  EC80  F04E         	call	_timeDiff	;wreg free
  6946  0012E0  0060  F254  F240   	movff	?_timeDiff,_tInsp
  6947  0012E6  0060  F258  F241   	movff	?_timeDiff+1,_tInsp+1
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;main.c: 606:                             OSCheck = 1;
  6951  0012EC  0E01               	movlw	1
  6952  0012EE  0101               	movlb	1	; () banked
  6953  0012F0  6FBB               	movwf	_OSCheck& (0+255),b
  6954                           
  6955                           ; BSR set to: 1
  6956                           ;main.c: 607:                             pPlatMax = pInst;
  6957  0012F2  C1EB  F1AF         	movff	_pInst,_pPlatMax
  6958  0012F6  C1EC  F1B0         	movff	_pInst+1,_pPlatMax+1
  6959                           
  6960                           ; BSR set to: 1
  6961                           ;main.c: 608:                             if (((pInspVSet != 1) || OSCheckInt) && ((pIns
      +                          t > intMaxP) || ((pCtrl + pInspOSScale) > intMaxP))) {
  6962  0012FA  05D3               	decf	_pInspVSet& (0+255),w,b
  6963  0012FC  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6964  0012FE  A4D8               	btfss	status,2,c
  6965  001300  D003               	goto	u22690
  6966                           
  6967                           ; BSR set to: 1
  6968  001302  51B9               	movf	_OSCheckInt& (0+255),w,b
  6969  001304  B4D8               	btfsc	status,2,c
  6970  001306  D054               	goto	l20895
  6971  001308                     u22690:
  6972                           
  6973                           ; BSR set to: 1
  6974  001308  51EB               	movf	_pInst& (0+255),w,b
  6975  00130A  5DEF               	subwf	_intMaxP& (0+255),w,b
  6976  00130C  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  6977  00130E  0A80               	xorlw	128
  6978  001310  0103               	movlb	3	; () banked
  6979  001312  6F9F               	movwf	??_main& (0+255),b
  6980  001314  0101               	movlb	1	; () banked
  6981  001316  51EC               	movf	(_pInst+1)& (0+255),w,b
  6982  001318  0A80               	xorlw	128
  6983  00131A  0103               	movlb	3	; () banked
  6984  00131C  599F               	subwfb	??_main& (0+255),w,b
  6985  00131E  A0D8               	btfss	status,0,c
  6986  001320  D016               	goto	u22710
  6987                           
  6988                           ; BSR set to: 3
  6989  001322  51C1               	movf	main@pInspOSScale& (0+255),w,b
  6990  001324  0101               	movlb	1	; () banked
  6991  001326  25E3               	addwf	_pCtrl& (0+255),w,b
  6992  001328  0103               	movlb	3	; () banked
  6993  00132A  6F9F               	movwf	??_main& (0+255),b
  6994  00132C  51C2               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6995  00132E  0101               	movlb	1	; () banked
  6996  001330  21E4               	addwfc	(_pCtrl+1)& (0+255),w,b
  6997  001332  0103               	movlb	3	; () banked
  6998  001334  6FA0               	movwf	(??_main+1)& (0+255),b
  6999  001336  519F               	movf	??_main& (0+255),w,b
  7000  001338  0101               	movlb	1	; () banked
  7001  00133A  5DEF               	subwf	_intMaxP& (0+255),w,b
  7002  00133C  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  7003  00133E  0A80               	xorlw	128
  7004  001340  0103               	movlb	3	; () banked
  7005  001342  6FA1               	movwf	(??_main+2)& (0+255),b
  7006  001344  51A0               	movf	(??_main+1)& (0+255),w,b
  7007  001346  0A80               	xorlw	128
  7008  001348  59A1               	subwfb	(??_main+2)& (0+255),w,b
  7009  00134A  B0D8               	btfsc	status,0,c
  7010  00134C  D031               	goto	l20895
  7011  00134E                     u22710:
  7012                           
  7013                           ; BSR set to: 3
  7014                           ;main.c: 611:                                 if ((pInspOS3 < intMaxP) && ((pInspVSet ==
      +                           2) || (pInspVSet == 3))) {
  7015  00134E  0101               	movlb	1	; () banked
  7016  001350  51EF               	movf	_intMaxP& (0+255),w,b
  7017  001352  5DD9               	subwf	_pInspOS3& (0+255),w,b
  7018  001354  51DA               	movf	(_pInspOS3+1)& (0+255),w,b
  7019  001356  0A80               	xorlw	128
  7020  001358  0103               	movlb	3	; () banked
  7021  00135A  6F9F               	movwf	??_main& (0+255),b
  7022  00135C  0101               	movlb	1	; () banked
  7023  00135E  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  7024  001360  0A80               	xorlw	128
  7025  001362  0103               	movlb	3	; () banked
  7026  001364  599F               	subwfb	??_main& (0+255),w,b
  7027  001366  B0D8               	btfsc	status,0,c
  7028  001368  D010               	goto	l20891
  7029                           
  7030                           ; BSR set to: 3
  7031  00136A  0E02               	movlw	2
  7032  00136C  0101               	movlb	1	; () banked
  7033  00136E  19D3               	xorwf	_pInspVSet& (0+255),w,b
  7034  001370  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7035  001372  B4D8               	btfsc	status,2,c
  7036  001374  D005               	goto	u22740
  7037                           
  7038                           ; BSR set to: 1
  7039  001376  0E03               	movlw	3
  7040  001378  19D3               	xorwf	_pInspVSet& (0+255),w,b
  7041  00137A  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7042  00137C  A4D8               	btfss	status,2,c
  7043  00137E  D005               	goto	l20891
  7044  001380                     u22740:
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;main.c: 612:                                     pInspOS3 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  7048  001380  0EB9               	movlw	185
  7049  001382  27D9               	addwf	_pInspOS3& (0+255),f,b
  7050  001384  0E00               	movlw	0
  7051  001386  23DA               	addwfc	(_pInspOS3+1)& (0+255),f,b
  7052                           
  7053                           ;main.c: 613:                                 } else if (pInspOS2 < intMaxP) {
  7054  001388  D013               	goto	l20895
  7055  00138A                     l20891:
  7056  00138A  0101               	movlb	1	; () banked
  7057  00138C  51EF               	movf	_intMaxP& (0+255),w,b
  7058  00138E  5DD7               	subwf	_pInspOS2& (0+255),w,b
  7059  001390  51D8               	movf	(_pInspOS2+1)& (0+255),w,b
  7060  001392  0A80               	xorlw	128
  7061  001394  0103               	movlb	3	; () banked
  7062  001396  6F9F               	movwf	??_main& (0+255),b
  7063  001398  0101               	movlb	1	; () banked
  7064  00139A  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  7065  00139C  0A80               	xorlw	128
  7066  00139E  0103               	movlb	3	; () banked
  7067  0013A0  599F               	subwfb	??_main& (0+255),w,b
  7068  0013A2  B0D8               	btfsc	status,0,c
  7069  0013A4  D005               	goto	l20895
  7070                           
  7071                           ; BSR set to: 3
  7072                           ;main.c: 614:                                     pInspOS2 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  7073  0013A6  0EB9               	movlw	185
  7074  0013A8  0101               	movlb	1	; () banked
  7075  0013AA  27D7               	addwf	_pInspOS2& (0+255),f,b
  7076  0013AC  0E00               	movlw	0
  7077  0013AE  23D8               	addwfc	(_pInspOS2+1)& (0+255),f,b
  7078  0013B0                     l20895:
  7079                           
  7080                           ;main.c: 618:                             if (OSCheckInt) {
  7081  0013B0  0101               	movlb	1	; () banked
  7082  0013B2  51B9               	movf	_OSCheckInt& (0+255),w,b
  7083  0013B4  B4D8               	btfsc	status,2,c
  7084  0013B6  D00A               	goto	l1807
  7085                           
  7086                           ; BSR set to: 1
  7087                           ;main.c: 619:                                 pInspOSVSet = pInspVSet + 1;
  7088  0013B8  0E01               	movlw	1
  7089  0013BA  25D3               	addwf	_pInspVSet& (0+255),w,b
  7090  0013BC  0102               	movlb	2	; () banked
  7091  0013BE  6F44               	movwf	_pInspOSVSet& (0+255),b
  7092  0013C0  0E00               	movlw	0
  7093  0013C2  0101               	movlb	1	; () banked
  7094  0013C4  21D4               	addwfc	(_pInspVSet+1)& (0+255),w,b
  7095  0013C6  0102               	movlb	2	; () banked
  7096  0013C8  6F45               	movwf	(_pInspOSVSet+1)& (0+255),b
  7097                           
  7098                           ;main.c: 620:                             } else {
  7099  0013CA  D004               	goto	l20899
  7100  0013CC                     l1807:
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;main.c: 621:                                 pInspOSVSet = pInspVSet;
  7104  0013CC  C1D3  F244         	movff	_pInspVSet,_pInspOSVSet
  7105  0013D0  C1D4  F245         	movff	_pInspVSet+1,_pInspOSVSet+1
  7106  0013D4                     l20899:
  7107                           
  7108                           ;main.c: 624:                             if (pInspVSet == 3) {
  7109  0013D4  0E03               	movlw	3
  7110  0013D6  0101               	movlb	1	; () banked
  7111  0013D8  19D3               	xorwf	_pInspVSet& (0+255),w,b
  7112  0013DA  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7113  0013DC  A4D8               	btfss	status,2,c
  7114  0013DE  D017               	goto	l20903
  7115                           
  7116                           ; BSR set to: 1
  7117                           ;main.c: 625:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          timeGet());
  7118  0013E0  0060  F8F8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7119  0013E6  0060  F8FC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7120  0013EC  ECD5  F052         	call	_timeGet	;wreg free
  7121  0013F0  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7122  0013F6  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7123  0013FC  EC80  F04E         	call	_timeDiff	;wreg free
  7124  001400  0060  F254  F3BB   	movff	?_timeDiff,main@tmpUVal
  7125  001406  0060  F258  F3BC   	movff	?_timeDiff+1,main@tmpUVal+1
  7126                           
  7127                           ;main.c: 626:                             } else if (pInspVSet == 2) {
  7128  00140C  D0A4               	goto	l20911
  7129  00140E                     l20903:
  7130                           
  7131                           ; BSR set to: 1
  7132  00140E  0E02               	movlw	2
  7133  001410  19D3               	xorwf	_pInspVSet& (0+255),w,b
  7134  001412  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7135  001414  A4D8               	btfss	status,2,c
  7136  001416  D03B               	goto	l20907
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;main.c: 627:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((2 * 5 * timeDiff(rVMedActuationTstamp, timeGet())) >> 4);
  7140  001418  0060  F8F8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7141  00141E  0060  F8FC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7142  001424  0060  F68C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7143  00142A  0060  F690  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7144  001430  EC80  F04E         	call	_timeDiff	;wreg free
  7145  001434  0060  F254  F39F   	movff	?_timeDiff,??_main
  7146  00143A  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7147  001440  ECD5  F052         	call	_timeGet	;wreg free
  7148  001444  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7149  00144A  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7150  001450  0060  F68C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7151  001456  0060  F690  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7152  00145C  EC80  F04E         	call	_timeDiff	;wreg free
  7153  001460  0060  F254  F09B   	movff	?_timeDiff,___wmul@multiplier
  7154  001466  0060  F258  F09C   	movff	?_timeDiff+1,___wmul@multiplier+1
  7155  00146C  0E00               	movlw	0
  7156  00146E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7157  001470  0E0A               	movlw	10
  7158  001472  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7159  001474  ECFC  F04E         	call	___wmul	;wreg free
  7160  001478  0E04               	movlw	4
  7161  00147A  0103               	movlb	3	; () banked
  7162  00147C  6FA1               	movwf	(??_main+2)& (0+255),b
  7163  00147E                     u22795:
  7164  00147E  0100               	movlb	0	; () banked
  7165  001480  90D8               	bcf	status,0,c
  7166  001482  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7167  001484  339B               	rrcf	?___wmul& (0+255),f,b
  7168  001486  0103               	movlb	3	; () banked
  7169  001488  2FA1               	decfsz	(??_main+2)& (0+255),f,b
  7170  00148A  D7F9               	goto	u22795
  7171  00148C  D05A               	goto	L2
  7172  00148E                     l20907:
  7173                           
  7174                           ; BSR set to: 1
  7175  00148E  05D3               	decf	_pInspVSet& (0+255),w,b
  7176  001490  11D4               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7177  001492  A4D8               	btfss	status,2,c
  7178  001494  D060               	goto	l20911
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;main.c: 629:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((5 * ((2 * timeDiff(rVMedActuationTstamp, rVLowActuationTstamp)
      +                          ) + timeDiff(rVLowActuationTstamp, timeGet()))) >> 4);
  7182  001496  0060  F8F8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7183  00149C  0060  F8FC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7184  0014A2  0060  F68C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7185  0014A8  0060  F690  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7186  0014AE  EC80  F04E         	call	_timeDiff	;wreg free
  7187  0014B2  0060  F254  F39F   	movff	?_timeDiff,??_main
  7188  0014B8  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7189  0014BE  0060  F8F0  F097   	movff	_rVLowActuationTstamp,timeDiff@endT
  7190  0014C4  0060  F8F4  F098   	movff	_rVLowActuationTstamp+1,timeDiff@endT+1
  7191  0014CA  0060  F68C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7192  0014D0  0060  F690  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7193  0014D6  EC80  F04E         	call	_timeDiff	;wreg free
  7194  0014DA  0060  F254  F3A1   	movff	?_timeDiff,??_main+2
  7195  0014E0  0060  F258  F3A2   	movff	?_timeDiff+1,??_main+3
  7196  0014E6  90D8               	bcf	status,0,c
  7197  0014E8  0103               	movlb	3	; () banked
  7198  0014EA  37A1               	rlcf	(??_main+2)& (0+255),f,b
  7199  0014EC  37A2               	rlcf	(??_main+3)& (0+255),f,b
  7200  0014EE  ECD5  F052         	call	_timeGet	;wreg free
  7201  0014F2  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7202  0014F8  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7203  0014FE  0060  F8F0  F095   	movff	_rVLowActuationTstamp,timeDiff@startT
  7204  001504  0060  F8F4  F096   	movff	_rVLowActuationTstamp+1,timeDiff@startT+1
  7205  00150A  EC80  F04E         	call	_timeDiff	;wreg free
  7206  00150E  5195               	movf	?_timeDiff& (0+255),w,b
  7207  001510  0103               	movlb	3	; () banked
  7208  001512  25A1               	addwf	(??_main+2)& (0+255),w,b
  7209  001514  0100               	movlb	0	; () banked
  7210  001516  6F9B               	movwf	___wmul@multiplier& (0+255),b
  7211  001518  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  7212  00151A  0103               	movlb	3	; () banked
  7213  00151C  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7214  00151E  0100               	movlb	0	; () banked
  7215  001520  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  7216  001522  0E00               	movlw	0
  7217  001524  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7218  001526  0E05               	movlw	5
  7219  001528  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7220  00152A  ECFC  F04E         	call	___wmul	;wreg free
  7221  00152E  0E04               	movlw	4
  7222  001530  0103               	movlb	3	; () banked
  7223  001532  6FA3               	movwf	(??_main+4)& (0+255),b
  7224  001534                     u22815:
  7225  001534  0100               	movlb	0	; () banked
  7226  001536  90D8               	bcf	status,0,c
  7227  001538  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7228  00153A  339B               	rrcf	?___wmul& (0+255),f,b
  7229  00153C  0103               	movlb	3	; () banked
  7230  00153E  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  7231  001540  D7F9               	goto	u22815
  7232  001542                     L2:
  7233  001542  0100               	movlb	0	; () banked
  7234  001544  519B               	movf	?___wmul& (0+255),w,b
  7235  001546  0103               	movlb	3	; () banked
  7236  001548  259F               	addwf	??_main& (0+255),w,b
  7237  00154A  6FBB               	movwf	main@tmpUVal& (0+255),b
  7238  00154C  0100               	movlb	0	; () banked
  7239  00154E  519C               	movf	(?___wmul+1)& (0+255),w,b
  7240  001550  0103               	movlb	3	; () banked
  7241  001552  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7242  001554  6FBC               	movwf	(main@tmpUVal+1)& (0+255),b
  7243  001556                     l20911:
  7244                           
  7245                           ;main.c: 632:                             if ((tmpUVal > 50)&&(vValveActuation > 50)) {
  7246  001556  0103               	movlb	3	; () banked
  7247  001558  51BC               	movf	(main@tmpUVal+1)& (0+255),w,b
  7248  00155A  E104               	bnz	u22820
  7249  00155C  0E33               	movlw	51
  7250  00155E  5DBB               	subwf	main@tmpUVal& (0+255),w,b
  7251  001560  A0D8               	btfss	status,0,c
  7252  001562  D061               	goto	l20917
  7253  001564                     u22820:
  7254                           
  7255                           ; BSR set to: 3
  7256  001564  0101               	movlb	1	; () banked
  7257  001566  BFAC               	btfsc	(_vValveActuation+1)& (0+255),7,b
  7258  001568  D05E               	goto	l20917
  7259  00156A  51AC               	movf	(_vValveActuation+1)& (0+255),w,b
  7260  00156C  E104               	bnz	u22830
  7261  00156E  0E33               	movlw	51
  7262  001570  5DAB               	subwf	_vValveActuation& (0+255),w,b
  7263  001572  A0D8               	btfss	status,0,c
  7264  001574  D058               	goto	l20917
  7265  001576                     u22830:
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;main.c: 634:                                 effectiveFlowRateInv = (3 * effectiveFlowR
      +                          ateInv + ((((uint24_t) tmpUVal) << 8) / vValveActuation)) >> 2;
  7269  001576  0E02               	movlw	2
  7270  001578  0103               	movlb	3	; () banked
  7271  00157A  6F9F               	movwf	??_main& (0+255),b
  7272  00157C  0060  F734  F09B   	movff	_effectiveFlowRateInv,___wmul@multiplier
  7273  001582  0060  F738  F09C   	movff	_effectiveFlowRateInv+1,___wmul@multiplier+1
  7274  001588  0E00               	movlw	0
  7275  00158A  0100               	movlb	0	; () banked
  7276  00158C  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7277  00158E  0E03               	movlw	3
  7278  001590  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7279  001592  ECFC  F04E         	call	___wmul	;wreg free
  7280  001596  0060  F26C  F3A0   	movff	?___wmul,??_main+1
  7281  00159C  0060  F270  F3A1   	movff	?___wmul+1,??_main+2
  7282  0015A2  0103               	movlb	3	; () banked
  7283  0015A4  6BA2               	clrf	(??_main+3)& (0+255),b
  7284  0015A6  0060  FEEC  F3A3   	movff	main@tmpUVal,??_main+4
  7285  0015AC  0060  FEF0  F3A4   	movff	main@tmpUVal+1,??_main+5
  7286  0015B2  6BA5               	clrf	(??_main+6)& (0+255),b
  7287  0015B4  0060  FE90  F3A5   	movff	??_main+5,??_main+6
  7288  0015BA  0060  FE8C  F3A4   	movff	??_main+4,??_main+5
  7289  0015C0  6BA3               	clrf	(??_main+4)& (0+255),b
  7290  0015C2  0060  FE8C  F08B   	movff	??_main+4,___ltdiv@dividend
  7291  0015C8  0060  FE90  F08C   	movff	??_main+5,___ltdiv@dividend+1
  7292  0015CE  0060  FE94  F08D   	movff	??_main+6,___ltdiv@dividend+2
  7293  0015D4  0060  F6AC  F08E   	movff	_vValveActuation,___ltdiv@divisor
  7294  0015DA  0060  F6B0  F08F   	movff	_vValveActuation+1,___ltdiv@divisor+1
  7295  0015E0  0100               	movlb	0	; () banked
  7296  0015E2  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  7297  0015E4  BF8F               	btfsc	(___ltdiv@divisor+1)& (0+255),7,b
  7298  0015E6  0790               	decf	(___ltdiv@divisor+2)& (0+255),f,b
  7299  0015E8  EC4E  F046         	call	___ltdiv	;wreg free
  7300  0015EC  518B               	movf	?___ltdiv& (0+255),w,b
  7301  0015EE  0103               	movlb	3	; () banked
  7302  0015F0  25A0               	addwf	(??_main+1)& (0+255),w,b
  7303  0015F2  6FA6               	movwf	(??_main+7)& (0+255),b
  7304  0015F4  0100               	movlb	0	; () banked
  7305  0015F6  518C               	movf	(?___ltdiv+1)& (0+255),w,b
  7306  0015F8  0103               	movlb	3	; () banked
  7307  0015FA  21A1               	addwfc	(??_main+2)& (0+255),w,b
  7308  0015FC  6FA7               	movwf	(??_main+8)& (0+255),b
  7309  0015FE  0100               	movlb	0	; () banked
  7310  001600  518D               	movf	(?___ltdiv+2)& (0+255),w,b
  7311  001602  0103               	movlb	3	; () banked
  7312  001604  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7313  001606  6FA8               	movwf	(??_main+9)& (0+255),b
  7314  001608  299F               	incf	??_main& (0+255),w,b
  7315  00160A  6FA9               	movwf	(??_main+10)& (0+255),b
  7316  00160C  D004               	goto	u22840
  7317  00160E                     u22845:
  7318  00160E  90D8               	bcf	status,0,c
  7319  001610  33A8               	rrcf	(??_main+9)& (0+255),f,b
  7320  001612  33A7               	rrcf	(??_main+8)& (0+255),f,b
  7321  001614  33A6               	rrcf	(??_main+7)& (0+255),f,b
  7322  001616                     u22840:
  7323  001616  2FA9               	decfsz	(??_main+10)& (0+255),f,b
  7324  001618  D7FA               	goto	u22845
  7325  00161A  0060  FE98  F1CD   	movff	??_main+7,_effectiveFlowRateInv
  7326  001620  0060  FE9C  F1CE   	movff	??_main+8,_effectiveFlowRateInv+1
  7327  001626                     l20917:
  7328                           
  7329                           ;main.c: 637:                             if (effectiveFlowRateInv > 2621) {
  7330  001626  0E3E               	movlw	62
  7331  001628  0101               	movlb	1	; () banked
  7332  00162A  5DCD               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7333  00162C  0E0A               	movlw	10
  7334  00162E  59CE               	subwfb	(_effectiveFlowRateInv+1)& (0+255),w,b
  7335  001630  A0D8               	btfss	status,0,c
  7336  001632  D004               	goto	l20921
  7337                           
  7338                           ; BSR set to: 1
  7339                           ;main.c: 638:                                 effectiveFlowRateInv = 2621;
  7340  001634  0E0A               	movlw	10
  7341  001636  6FCE               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7342  001638  0E3D               	movlw	61
  7343  00163A  D009               	goto	L3
  7344  00163C                     l20921:
  7345                           
  7346                           ; BSR set to: 1
  7347  00163C  51CE               	movf	(_effectiveFlowRateInv+1)& (0+255),w,b
  7348  00163E  E108               	bnz	l20925
  7349  001640  0E83               	movlw	131
  7350  001642  5DCD               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7351  001644  B0D8               	btfsc	status,0,c
  7352  001646  D004               	goto	l20925
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;main.c: 640:                                 effectiveFlowRateInv = 131;
  7356  001648  0E00               	movlw	0
  7357  00164A  6FCE               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7358  00164C  0E83               	movlw	131
  7359  00164E                     L3:
  7360  00164E  6FCD               	movwf	_effectiveFlowRateInv& (0+255),b
  7361  001650                     l20925:
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;main.c: 643:                             printf ("PI-END T %d - Pi %d Pc %d Vol %d PMax
      +                           %d VL %d VOS %d POS %d FR %d UV %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2
      +                          560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int1
      +                          6_t) ((0.045*4096+2)/5)*1))*((int24_t) pValveActuation))>>8)), vValveActuation, ((int16_
      +                          t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) intMaxP))>>8)), intMaxV, vInspOS
      +                          , ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInspOSScale))>>8)), e
      +                          ffectiveFlowRateInv, tmpUVal);
  7365  001650  0E77               	movlw	low STR_15
  7366  001652  6F46               	movwf	printf@fmt& (0+255),b
  7367  001654  0EFA               	movlw	high STR_15
  7368  001656  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7369  001658  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  7370  00165E  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7371  001664  ECD5  F052         	call	_timeGet	;wreg free
  7372  001668  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7373  00166E  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7374  001674  EC80  F04E         	call	_timeDiff	;wreg free
  7375  001678  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7376  00167E  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7377  001684  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  7378  00168A  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7379  001690  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7380  001692  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7381  001694  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7382  001696  0E45               	movlw	69
  7383  001698  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7384  00169A  0E00               	movlw	0
  7385  00169C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7386  00169E  0E00               	movlw	0
  7387  0016A0  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7388  0016A2  EC1F  F04B         	call	___tmul	;wreg free
  7389  0016A6  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7390  0016AC  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7391  0016B2  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7392  0016B4  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7393  0016B6  698D               	setf	(?___tmul+2)& (0+255),b
  7394  0016B8  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7395  0016BE  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7396  0016C4  0060  F784  F08B   	movff	_pValveActuation,___tmul@multiplier
  7397  0016CA  0060  F788  F08C   	movff	_pValveActuation+1,___tmul@multiplier+1
  7398  0016D0  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7399  0016D2  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7400  0016D4  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7401  0016D6  0E45               	movlw	69
  7402  0016D8  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7403  0016DA  0E00               	movlw	0
  7404  0016DC  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7405  0016DE  0E00               	movlw	0
  7406  0016E0  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7407  0016E2  EC1F  F04B         	call	___tmul	;wreg free
  7408  0016E6  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7409  0016EC  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7410  0016F2  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7411  0016F4  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7412  0016F6  698D               	setf	(?___tmul+2)& (0+255),b
  7413  0016F8  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  7414  0016FE  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  7415  001704  0060  F6AC  F14E   	movff	_vValveActuation,?_printf+8
  7416  00170A  0060  F6B0  F14F   	movff	_vValveActuation+1,?_printf+9
  7417  001710  0060  F7BC  F08B   	movff	_intMaxP,___tmul@multiplier
  7418  001716  0060  F7C0  F08C   	movff	_intMaxP+1,___tmul@multiplier+1
  7419  00171C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7420  00171E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7421  001720  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7422  001722  0E45               	movlw	69
  7423  001724  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7424  001726  0E00               	movlw	0
  7425  001728  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7426  00172A  0E00               	movlw	0
  7427  00172C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7428  00172E  EC1F  F04B         	call	___tmul	;wreg free
  7429  001732  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7430  001738  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7431  00173E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7432  001740  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7433  001742  698D               	setf	(?___tmul+2)& (0+255),b
  7434  001744  0060  F22C  F150   	movff	?___tmul,?_printf+10
  7435  00174A  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  7436  001750  0060  F7B4  F152   	movff	_intMaxV,?_printf+12
  7437  001756  0060  F7B8  F153   	movff	_intMaxV+1,?_printf+13
  7438  00175C  0060  F754  F154   	movff	_vInspOS,?_printf+14
  7439  001762  0060  F758  F155   	movff	_vInspOS+1,?_printf+15
  7440  001768  0060  FF04  F08B   	movff	main@pInspOSScale,___tmul@multiplier
  7441  00176E  0060  FF08  F08C   	movff	main@pInspOSScale+1,___tmul@multiplier+1
  7442  001774  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7443  001776  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7444  001778  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7445  00177A  0E45               	movlw	69
  7446  00177C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7447  00177E  0E00               	movlw	0
  7448  001780  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7449  001782  0E00               	movlw	0
  7450  001784  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7451  001786  EC1F  F04B         	call	___tmul	;wreg free
  7452  00178A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7453  001790  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7454  001796  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7455  001798  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7456  00179A  698D               	setf	(?___tmul+2)& (0+255),b
  7457  00179C  0060  F22C  F156   	movff	?___tmul,?_printf+16
  7458  0017A2  0060  F230  F157   	movff	?___tmul+1,?_printf+17
  7459  0017A8  0060  F734  F158   	movff	_effectiveFlowRateInv,?_printf+18
  7460  0017AE  0060  F738  F159   	movff	_effectiveFlowRateInv+1,?_printf+19
  7461  0017B4  0060  FEEC  F15A   	movff	main@tmpUVal,?_printf+20
  7462  0017BA  0060  FEF0  F15B   	movff	main@tmpUVal+1,?_printf+21
  7463  0017C0  EC43  F050         	call	_printf	;wreg free
  7464                           
  7465                           ; BSR set to: 3
  7466                           ;main.c: 648:                     } else {
  7467                           
  7468                           ;main.c: 647:                         }
  7469  0017C4  D2CD               	goto	l21043
  7470  0017C6                     l20927:
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;main.c: 650:                         if (sv2DelayCheck) {
  7474  0017C6  51BD               	movf	_sv2DelayCheck& (0+255),w,b
  7475  0017C8  B4D8               	btfsc	status,2,c
  7476  0017CA  D049               	goto	l20945
  7477                           
  7478                           ; BSR set to: 1
  7479                           ;main.c: 651:                             aCaptGetResult(VolPSensor, &tmpVal);
  7480  0017CC  0EC7               	movlw	low main@tmpVal
  7481  0017CE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7482  0017D0  0E03               	movlw	high main@tmpVal
  7483  0017D2  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7484  0017D4  0E01               	movlw	1
  7485  0017D6  EC5A  F033         	call	_aCaptGetResult
  7486                           
  7487                           ;main.c: 652:                             if (tmpVal < (20 << 1)) {
  7488  0017DA  0103               	movlb	3	; () banked
  7489  0017DC  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7490  0017DE  D006               	goto	u22880
  7491  0017E0  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  7492  0017E2  E13D               	bnz	l20945
  7493  0017E4  0E28               	movlw	40
  7494  0017E6  5DC7               	subwf	main@tmpVal& (0+255),w,b
  7495  0017E8  B0D8               	btfsc	status,0,c
  7496  0017EA  D039               	goto	l20945
  7497  0017EC                     u22880:
  7498                           
  7499                           ; BSR set to: 3
  7500                           ;main.c: 653:                                 sv2DelayCheck = 0;
  7501  0017EC  0E00               	movlw	0
  7502  0017EE  0101               	movlb	1	; () banked
  7503  0017F0  6FBD               	movwf	_sv2DelayCheck& (0+255),b
  7504                           
  7505                           ; BSR set to: 1
  7506                           ;main.c: 655:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  7507  0017F2  0060  F66C  F095   	movff	_rValveDelayStart,timeDiff@startT
  7508  0017F8  0060  F670  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  7509  0017FE  ECD5  F052         	call	_timeGet	;wreg free
  7510  001802  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7511  001808  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7512  00180E  EC80  F04E         	call	_timeDiff	;wreg free
  7513  001812  0060  F254  F199   	movff	?_timeDiff,_rTimeTmp
  7514  001818  0060  F258  F19A   	movff	?_timeDiff+1,_rTimeTmp+1
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;main.c: 656:                                 if (rTimeTmp < ((time_t) 150*1)) {
  7518  00181E  0101               	movlb	1	; () banked
  7519  001820  519A               	movf	(_rTimeTmp+1)& (0+255),w,b
  7520  001822  E11A               	bnz	l20943
  7521  001824  0E96               	movlw	150
  7522  001826  5D99               	subwf	_rTimeTmp& (0+255),w,b
  7523  001828  B0D8               	btfsc	status,0,c
  7524  00182A  D016               	goto	l20943
  7525                           
  7526                           ; BSR set to: 1
  7527                           ;main.c: 658:                                     rSV2ValveCRT = (rSV2ValveCRT + rTimeTm
      +                          p) >> 1;
  7528  00182C  5199               	movf	_rTimeTmp& (0+255),w,b
  7529  00182E  259F               	addwf	_rSV2ValveCRT& (0+255),w,b
  7530  001830  0103               	movlb	3	; () banked
  7531  001832  6F9F               	movwf	??_main& (0+255),b
  7532  001834  0101               	movlb	1	; () banked
  7533  001836  519A               	movf	(_rTimeTmp+1)& (0+255),w,b
  7534  001838  21A0               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7535  00183A  0103               	movlb	3	; () banked
  7536  00183C  6FA0               	movwf	(??_main+1)& (0+255),b
  7537  00183E  90D8               	bcf	status,0,c
  7538  001840  31A0               	rrcf	(??_main+1)& (0+255),w,b
  7539  001842  6FA1               	movwf	(??_main+2)& (0+255),b
  7540  001844  319F               	rrcf	??_main& (0+255),w,b
  7541  001846  0101               	movlb	1	; () banked
  7542  001848  6F9F               	movwf	_rSV2ValveCRT& (0+255),b
  7543  00184A  0060  FE84  F1A0   	movff	??_main+2,_rSV2ValveCRT+1
  7544                           
  7545                           ; BSR set to: 1
  7546                           ;main.c: 660:                                     MonitorErrorClr(MON_SV2E);
  7547  001850  0E08               	movlw	8
  7548  001852  ECE7  F052         	call	_MonitorErrorClr
  7549                           
  7550                           ;main.c: 661:                                 } else {
  7551  001856  D003               	goto	l20945
  7552  001858                     l20943:
  7553                           
  7554                           ; BSR set to: 1
  7555                           ;main.c: 663:                                     MonitorErrorSet(MON_SV2E);
  7556  001858  0E08               	movlw	8
  7557  00185A  ECDE  F052         	call	_MonitorErrorSet
  7558  00185E                     l20945:
  7559                           
  7560                           ;main.c: 668:                         aCaptGetResult(MainPSensor, &pInst);
  7561  00185E  0EEB               	movlw	low _pInst
  7562  001860  0101               	movlb	1	; () banked
  7563  001862  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7564  001864  0E01               	movlw	high _pInst
  7565  001866  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7566  001868  0E00               	movlw	0
  7567  00186A  EC5A  F033         	call	_aCaptGetResult
  7568                           
  7569                           ;main.c: 669:                         MonitorErrorClr(MON_IPE);
  7570  00186E  0E20               	movlw	32
  7571  001870  ECE7  F052         	call	_MonitorErrorClr
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;main.c: 670:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  7575  001874  0E00               	movlw	0
  7576  001876  B4BA               	btfsc	186,2,c	;volatile
  7577  001878  0E01               	movlw	1
  7578  00187A  B6BC               	btfsc	188,3,c	;volatile
  7579  00187C  0E01               	movlw	1
  7580  00187E  A0E8               	btfss	wreg,0,c
  7581  001880  D004               	goto	u22900
  7582  001882  0103               	movlb	3	; () banked
  7583  001884  6B9F               	clrf	??_main& (0+255),b
  7584  001886  2B9F               	incf	??_main& (0+255),f,b
  7585  001888  D002               	goto	u22908
  7586  00188A                     u22900:
  7587  00188A  0103               	movlb	3	; () banked
  7588  00188C  6B9F               	clrf	??_main& (0+255),b
  7589  00188E                     u22908:
  7590  00188E  519F               	movf	??_main& (0+255),w,b
  7591  001890  B4D8               	btfsc	status,2,c
  7592  001892  D06C               	goto	l20961
  7593                           
  7594                           ; BSR set to: 3
  7595  001894  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7596  00189A  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7597  0018A0  0E00               	movlw	0
  7598  0018A2  0100               	movlb	0	; () banked
  7599  0018A4  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7600  0018A6  0E0F               	movlw	15
  7601  0018A8  6F95               	movwf	timeElapsed@duration& (0+255),b
  7602  0018AA  ECE4  F04E         	call	_timeElapsed	;wreg free
  7603  0018AE  0900               	iorlw	0
  7604  0018B0  A4D8               	btfss	status,2,c
  7605  0018B2  D00E               	goto	u22930
  7606                           
  7607                           ; BSR set to: 0
  7608  0018B4  0101               	movlb	1	; () banked
  7609  0018B6  51EB               	movf	_pInst& (0+255),w,b
  7610  0018B8  5DEF               	subwf	_intMaxP& (0+255),w,b
  7611  0018BA  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  7612  0018BC  0A80               	xorlw	128
  7613  0018BE  0103               	movlb	3	; () banked
  7614  0018C0  6F9F               	movwf	??_main& (0+255),b
  7615  0018C2  0101               	movlb	1	; () banked
  7616  0018C4  51EC               	movf	(_pInst+1)& (0+255),w,b
  7617  0018C6  0A80               	xorlw	128
  7618  0018C8  0103               	movlb	3	; () banked
  7619  0018CA  599F               	subwfb	??_main& (0+255),w,b
  7620  0018CC  B0D8               	btfsc	status,0,c
  7621  0018CE  D04E               	goto	l20961
  7622  0018D0                     u22930:
  7623                           
  7624                           ;main.c: 671:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  7625  0018D0  94BA               	bcf	186,2,c	;volatile
  7626  0018D2  96BC               	bcf	188,3,c	;volatile
  7627                           
  7628                           ;main.c: 672:                             rValveActuationTstamp = timeGet();
  7629  0018D4  ECD5  F052         	call	_timeGet	;wreg free
  7630  0018D8  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  7631  0018DE  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;main.c: 673:                             aCaptGetResult(MainPSensor, &pInst);
  7635  0018E4  0EEB               	movlw	low _pInst
  7636  0018E6  0101               	movlb	1	; () banked
  7637  0018E8  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7638  0018EA  0E01               	movlw	high _pInst
  7639  0018EC  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7640  0018EE  0E00               	movlw	0
  7641  0018F0  EC5A  F033         	call	_aCaptGetResult
  7642                           
  7643                           ;main.c: 674:                             printf ("PI-VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((in
      +                          t24_t) pInst))>>8)));
  7644  0018F4  0ED5               	movlw	low STR_16
  7645  0018F6  0101               	movlb	1	; () banked
  7646  0018F8  6F46               	movwf	printf@fmt& (0+255),b
  7647  0018FA  0EFC               	movlw	high STR_16
  7648  0018FC  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7649  0018FE  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  7650  001904  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7651  00190A  0060  F694  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  7652  001910  0060  F698  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  7653  001916  EC80  F04E         	call	_timeDiff	;wreg free
  7654  00191A  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7655  001920  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7656  001926  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  7657  00192C  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7658  001932  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7659  001934  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7660  001936  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7661  001938  0E45               	movlw	69
  7662  00193A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7663  00193C  0E00               	movlw	0
  7664  00193E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7665  001940  0E00               	movlw	0
  7666  001942  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7667  001944  EC1F  F04B         	call	___tmul	;wreg free
  7668  001948  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7669  00194E  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7670  001954  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7671  001956  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7672  001958  698D               	setf	(?___tmul+2)& (0+255),b
  7673  00195A  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7674  001960  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7675  001966  EC43  F050         	call	_printf	;wreg free
  7676                           
  7677                           ;main.c: 675:                         } else {
  7678  00196A  D1FA               	goto	l21043
  7679  00196C                     l20961:
  7680                           
  7681                           ; BSR set to: 3
  7682                           ;main.c: 676:                             if (OSCheck) {
  7683  00196C  0101               	movlb	1	; () banked
  7684  00196E  51BB               	movf	_OSCheck& (0+255),w,b
  7685  001970  B4D8               	btfsc	status,2,c
  7686  001972  D038               	goto	l20977
  7687                           
  7688                           ; BSR set to: 1
  7689                           ;main.c: 678:                                 aCaptGetResult(Flt1PSensor, &pAvgUShort);
  7690  001974  0EE7               	movlw	low _pAvgUShort
  7691  001976  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7692  001978  0E01               	movlw	high _pAvgUShort
  7693  00197A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7694  00197C  0E04               	movlw	4
  7695  00197E  EC5A  F033         	call	_aCaptGetResult
  7696                           
  7697                           ;main.c: 679:                                 pPlatInsp = pAvgUShort;
  7698  001982  C1E7  F1DF         	movff	_pAvgUShort,_pPlatInsp
  7699  001986  C1E8  F1E0         	movff	_pAvgUShort+1,_pPlatInsp+1
  7700                           
  7701                           ;main.c: 680:                                 if (pPlatMax < pAvgUShort) {
  7702  00198A  0101               	movlb	1	; () banked
  7703  00198C  51E7               	movf	_pAvgUShort& (0+255),w,b
  7704  00198E  5DAF               	subwf	_pPlatMax& (0+255),w,b
  7705  001990  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  7706  001992  0A80               	xorlw	128
  7707  001994  0103               	movlb	3	; () banked
  7708  001996  6F9F               	movwf	??_main& (0+255),b
  7709  001998  0101               	movlb	1	; () banked
  7710  00199A  51E8               	movf	(_pAvgUShort+1)& (0+255),w,b
  7711  00199C  0A80               	xorlw	128
  7712  00199E  0103               	movlb	3	; () banked
  7713  0019A0  599F               	subwfb	??_main& (0+255),w,b
  7714  0019A2  B0D8               	btfsc	status,0,c
  7715  0019A4  D004               	goto	l20971
  7716                           
  7717                           ; BSR set to: 3
  7718                           ;main.c: 681:                                     pPlatMax = pAvgUShort;
  7719  0019A6  C1E7  F1AF         	movff	_pAvgUShort,_pPlatMax
  7720  0019AA  C1E8  F1B0         	movff	_pAvgUShort+1,_pPlatMax+1
  7721  0019AE                     l20971:
  7722                           
  7723                           ; BSR set to: 3
  7724                           ;main.c: 684:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 150*1) + rSV2ValveCRT)) {
  7725  0019AE  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7726  0019B4  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7727  0019BA  0E96               	movlw	150
  7728  0019BC  0101               	movlb	1	; () banked
  7729  0019BE  259F               	addwf	_rSV2ValveCRT& (0+255),w,b
  7730  0019C0  0100               	movlb	0	; () banked
  7731  0019C2  6F95               	movwf	timeElapsed@duration& (0+255),b
  7732  0019C4  0E00               	movlw	0
  7733  0019C6  0101               	movlb	1	; () banked
  7734  0019C8  21A0               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7735  0019CA  0100               	movlb	0	; () banked
  7736  0019CC  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7737  0019CE  ECE4  F04E         	call	_timeElapsed	;wreg free
  7738  0019D2  0900               	iorlw	0
  7739  0019D4  B4D8               	btfsc	status,2,c
  7740  0019D6  D1C4               	goto	l21043
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;main.c: 685:                                     OSCheck = 0;
  7744  0019D8  0E00               	movlw	0
  7745  0019DA  0101               	movlb	1	; () banked
  7746  0019DC  6FBB               	movwf	_OSCheck& (0+255),b
  7747                           
  7748                           ; BSR set to: 1
  7749                           ;main.c: 686:                                     inspOSMeasure();
  7750  0019DE  EC50  F028         	call	_inspOSMeasure	;wreg free
  7751  0019E2  D1BE               	goto	l21043
  7752  0019E4                     l20977:
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;main.c: 689:                                 if (QuantaCheck) {
  7756  0019E4  51BA               	movf	_QuantaCheck& (0+255),w,b
  7757  0019E6  B4D8               	btfsc	status,2,c
  7758  0019E8  D019               	goto	l20985
  7759                           
  7760                           ; BSR set to: 1
  7761                           ;main.c: 690:                                     aCaptGetResult(Flt1PSensor, &pAvgUShor
      +                          t);
  7762  0019EA  0EE7               	movlw	low _pAvgUShort
  7763  0019EC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7764  0019EE  0E01               	movlw	high _pAvgUShort
  7765  0019F0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7766  0019F2  0E04               	movlw	4
  7767  0019F4  EC5A  F033         	call	_aCaptGetResult
  7768                           
  7769                           ;main.c: 691:                                     if (pPlatMax < pAvgUShort) {
  7770  0019F8  0101               	movlb	1	; () banked
  7771  0019FA  51E7               	movf	_pAvgUShort& (0+255),w,b
  7772  0019FC  5DAF               	subwf	_pPlatMax& (0+255),w,b
  7773  0019FE  51B0               	movf	(_pPlatMax+1)& (0+255),w,b
  7774  001A00  0A80               	xorlw	128
  7775  001A02  0103               	movlb	3	; () banked
  7776  001A04  6F9F               	movwf	??_main& (0+255),b
  7777  001A06  0101               	movlb	1	; () banked
  7778  001A08  51E8               	movf	(_pAvgUShort+1)& (0+255),w,b
  7779  001A0A  0A80               	xorlw	128
  7780  001A0C  0103               	movlb	3	; () banked
  7781  001A0E  599F               	subwfb	??_main& (0+255),w,b
  7782  001A10  B0D8               	btfsc	status,0,c
  7783  001A12  D004               	goto	l20985
  7784                           
  7785                           ; BSR set to: 3
  7786                           ;main.c: 692:                                         pPlatMax = pAvgUShort;
  7787  001A14  C1E7  F1AF         	movff	_pAvgUShort,_pPlatMax
  7788  001A18  C1E8  F1B0         	movff	_pAvgUShort+1,_pPlatMax+1
  7789  001A1C                     l20985:
  7790                           
  7791                           ;main.c: 695:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  7792  001A1C  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7793  001A22  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7794  001A28  0060  F67C  F39F   	movff	_rSV2ValveCRT,??_main
  7795  001A2E  0060  F680  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  7796  001A34  0103               	movlb	3	; () banked
  7797  001A36  90D8               	bcf	status,0,c
  7798  001A38  379F               	rlcf	??_main& (0+255),f,b
  7799  001A3A  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7800  001A3C  90D8               	bcf	status,0,c
  7801  001A3E  379F               	rlcf	??_main& (0+255),f,b
  7802  001A40  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7803  001A42  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  7804  001A48  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  7805  001A4E  ECE4  F04E         	call	_timeElapsed	;wreg free
  7806  001A52  0900               	iorlw	0
  7807  001A54  B4D8               	btfsc	status,2,c
  7808  001A56  D184               	goto	l21043
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;main.c: 696:                                     if (QuantaCheck) {
  7812  001A58  0101               	movlb	1	; () banked
  7813  001A5A  51BA               	movf	_QuantaCheck& (0+255),w,b
  7814  001A5C  B4D8               	btfsc	status,2,c
  7815  001A5E  D081               	goto	l21015
  7816                           
  7817                           ; BSR set to: 1
  7818                           ;main.c: 697:                                         QuantaCheck = 0;
  7819  001A60  0E00               	movlw	0
  7820  001A62  6FBA               	movwf	_QuantaCheck& (0+255),b
  7821                           
  7822                           ; BSR set to: 1
  7823                           ;main.c: 698:                                         tmpVal = vMeasureGet() - vValveAct
      +                          uation;
  7824  001A64  ECD7  F048         	call	_vMeasureGet	;wreg free
  7825  001A68  0101               	movlb	1	; () banked
  7826  001A6A  51AB               	movf	_vValveActuation& (0+255),w,b
  7827  001A6C  0100               	movlb	0	; () banked
  7828  001A6E  5DA4               	subwf	?_vMeasureGet& (0+255),w,b
  7829  001A70  0103               	movlb	3	; () banked
  7830  001A72  6FC7               	movwf	main@tmpVal& (0+255),b
  7831  001A74  0101               	movlb	1	; () banked
  7832  001A76  51AC               	movf	(_vValveActuation+1)& (0+255),w,b
  7833  001A78  0100               	movlb	0	; () banked
  7834  001A7A  59A5               	subwfb	(?_vMeasureGet+1)& (0+255),w,b
  7835  001A7C  0103               	movlb	3	; () banked
  7836  001A7E  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  7837                           
  7838                           ; BSR set to: 3
  7839                           ;main.c: 699:                                         if (tmpVal > 90) {
  7840  001A80  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7841  001A82  D00A               	goto	l20997
  7842  001A84  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  7843  001A86  E104               	bnz	u23010
  7844  001A88  0E5B               	movlw	91
  7845  001A8A  5DC7               	subwf	main@tmpVal& (0+255),w,b
  7846  001A8C  A0D8               	btfss	status,0,c
  7847  001A8E  D004               	goto	l20997
  7848  001A90                     u23010:
  7849                           
  7850                           ; BSR set to: 3
  7851                           ;main.c: 700:                                             tmpVal = 90;
  7852  001A90  0E00               	movlw	0
  7853  001A92  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  7854  001A94  0E5A               	movlw	90
  7855  001A96  6FC7               	movwf	main@tmpVal& (0+255),b
  7856  001A98                     l20997:
  7857                           
  7858                           ; BSR set to: 3
  7859                           ;main.c: 702:                                         vQuanta = (3 * tmpVal + vQuanta)>>
      +                          2;
  7860  001A98  0060  FF1C  F09B   	movff	main@tmpVal,___wmul@multiplier
  7861  001A9E  0060  FF20  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7862  001AA4  0E00               	movlw	0
  7863  001AA6  0100               	movlb	0	; () banked
  7864  001AA8  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7865  001AAA  0E03               	movlw	3
  7866  001AAC  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7867  001AAE  ECFC  F04E         	call	___wmul	;wreg free
  7868  001AB2  0101               	movlb	1	; () banked
  7869  001AB4  51A9               	movf	_vQuanta& (0+255),w,b
  7870  001AB6  0100               	movlb	0	; () banked
  7871  001AB8  279B               	addwf	?___wmul& (0+255),f,b
  7872  001ABA  0101               	movlb	1	; () banked
  7873  001ABC  51AA               	movf	(_vQuanta+1)& (0+255),w,b
  7874  001ABE  0100               	movlb	0	; () banked
  7875  001AC0  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  7876  001AC2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  7877  001AC4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7878  001AC6  339B               	rrcf	?___wmul& (0+255),f,b
  7879  001AC8  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  7880  001ACA  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7881  001ACC  339B               	rrcf	?___wmul& (0+255),f,b
  7882  001ACE  0060  F26C  F1A9   	movff	?___wmul,_vQuanta
  7883  001AD4  0060  F270  F1AA   	movff	?___wmul+1,_vQuanta+1
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;main.c: 703:                                         tmpVal = (pPlatMax - pValveActuati
      +                          on);
  7887  001ADA  0101               	movlb	1	; () banked
  7888  001ADC  51E1               	movf	_pValveActuation& (0+255),w,b
  7889  001ADE  5DAF               	subwf	_pPlatMax& (0+255),w,b
  7890  001AE0  0103               	movlb	3	; () banked
  7891  001AE2  6FC7               	movwf	main@tmpVal& (0+255),b
  7892  001AE4  0101               	movlb	1	; () banked
  7893  001AE6  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
  7894  001AE8  59B0               	subwfb	(_pPlatMax+1)& (0+255),w,b
  7895  001AEA  0103               	movlb	3	; () banked
  7896  001AEC  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  7897                           
  7898                           ; BSR set to: 3
  7899                           ;main.c: 704:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  7900  001AEE  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7901  001AF0  D00A               	goto	l21005
  7902  001AF2  0E29               	movlw	41
  7903  001AF4  5DC7               	subwf	main@tmpVal& (0+255),w,b
  7904  001AF6  0E01               	movlw	1
  7905  001AF8  59C8               	subwfb	(main@tmpVal+1)& (0+255),w,b
  7906  001AFA  A0D8               	btfss	status,0,c
  7907  001AFC  D004               	goto	l21005
  7908                           
  7909                           ; BSR set to: 3
  7910                           ;main.c: 705:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  7911  001AFE  0E01               	movlw	1
  7912  001B00  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  7913  001B02  0E28               	movlw	40
  7914  001B04  6FC7               	movwf	main@tmpVal& (0+255),b
  7915  001B06                     l21005:
  7916                           
  7917                           ; BSR set to: 3
  7918                           ;main.c: 707:                                         pQuantaInsp = (3 * tmpVal + pQuant
      +                          aInsp)>>2;
  7919  001B06  0060  FF1C  F09B   	movff	main@tmpVal,___wmul@multiplier
  7920  001B0C  0060  FF20  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7921  001B12  0E00               	movlw	0
  7922  001B14  0100               	movlb	0	; () banked
  7923  001B16  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7924  001B18  0E03               	movlw	3
  7925  001B1A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7926  001B1C  ECFC  F04E         	call	___wmul	;wreg free
  7927  001B20  0101               	movlb	1	; () banked
  7928  001B22  51D1               	movf	_pQuantaInsp& (0+255),w,b
  7929  001B24  0100               	movlb	0	; () banked
  7930  001B26  279B               	addwf	?___wmul& (0+255),f,b
  7931  001B28  0101               	movlb	1	; () banked
  7932  001B2A  51D2               	movf	(_pQuantaInsp+1)& (0+255),w,b
  7933  001B2C  0100               	movlb	0	; () banked
  7934  001B2E  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  7935  001B30  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  7936  001B32  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7937  001B34  339B               	rrcf	?___wmul& (0+255),f,b
  7938  001B36  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  7939  001B38  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7940  001B3A  339B               	rrcf	?___wmul& (0+255),f,b
  7941  001B3C  0060  F26C  F1D1   	movff	?___wmul,_pQuantaInsp
  7942  001B42  0060  F270  F1D2   	movff	?___wmul+1,_pQuantaInsp+1
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;main.c: 708:                                         if (vQuanta < 0) {
  7946  001B48  0101               	movlb	1	; () banked
  7947  001B4A  AFAA               	btfss	(_vQuanta+1)& (0+255),7,b
  7948  001B4C  D004               	goto	l21011
  7949                           
  7950                           ; BSR set to: 1
  7951                           ;main.c: 709:                                             vQuanta = 0;
  7952  001B4E  0E00               	movlw	0
  7953  001B50  6FAA               	movwf	(_vQuanta+1)& (0+255),b
  7954  001B52  0E00               	movlw	0
  7955  001B54  6FA9               	movwf	_vQuanta& (0+255),b
  7956  001B56                     l21011:
  7957                           
  7958                           ; BSR set to: 1
  7959                           ;main.c: 711:                                         if (pQuantaInsp < 0) {
  7960  001B56  AFD2               	btfss	(_pQuantaInsp+1)& (0+255),7,b
  7961  001B58  D004               	goto	l21015
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;main.c: 712:                                             pQuantaInsp = 0;
  7965  001B5A  0E00               	movlw	0
  7966  001B5C  6FD2               	movwf	(_pQuantaInsp+1)& (0+255),b
  7967  001B5E  0E00               	movlw	0
  7968  001B60  6FD1               	movwf	_pQuantaInsp& (0+255),b
  7969  001B62                     l21015:
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;main.c: 715:                                     pAdj = pInst;
  7973  001B62  C1EB  F1A7         	movff	_pInst,_pAdj
  7974  001B66  C1EC  F1A8         	movff	_pInst+1,_pAdj+1
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;main.c: 716:                                     vAdj = vMeasureGet();
  7978  001B6A  ECD7  F048         	call	_vMeasureGet	;wreg free
  7979  001B6E  0060  F290  F242   	movff	?_vMeasureGet,_vAdj
  7980  001B74  0060  F294  F243   	movff	?_vMeasureGet+1,_vAdj+1
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;main.c: 718:                                     vValveActuation = vAdj;
  7984  001B7A  C242  F1AB         	movff	_vAdj,_vValveActuation
  7985  001B7E  C243  F1AC         	movff	_vAdj+1,_vValveActuation+1
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;main.c: 719:                                     pValveActuation = pAdj;
  7989  001B82  C1A7  F1E1         	movff	_pAdj,_pValveActuation
  7990  001B86  C1A8  F1E2         	movff	_pAdj+1,_pValveActuation+1
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;main.c: 723:                                     pAdj = pAdj + (pQuantaInsp >> 1);
  7994  001B8A  0101               	movlb	1	; () banked
  7995  001B8C  35D2               	rlcf	(_pQuantaInsp+1)& (0+255),w,b
  7996  001B8E  31D2               	rrcf	(_pQuantaInsp+1)& (0+255),w,b
  7997  001B90  0103               	movlb	3	; () banked
  7998  001B92  6FA0               	movwf	(??_main+1)& (0+255),b
  7999  001B94  0101               	movlb	1	; () banked
  8000  001B96  31D1               	rrcf	_pQuantaInsp& (0+255),w,b
  8001  001B98  0103               	movlb	3	; () banked
  8002  001B9A  6F9F               	movwf	??_main& (0+255),b
  8003  001B9C  0101               	movlb	1	; () banked
  8004  001B9E  51A7               	movf	_pAdj& (0+255),w,b
  8005  001BA0  0103               	movlb	3	; () banked
  8006  001BA2  259F               	addwf	??_main& (0+255),w,b
  8007  001BA4  0101               	movlb	1	; () banked
  8008  001BA6  6FA7               	movwf	_pAdj& (0+255),b
  8009  001BA8  51A8               	movf	(_pAdj+1)& (0+255),w,b
  8010  001BAA  0103               	movlb	3	; () banked
  8011  001BAC  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8012  001BAE  0101               	movlb	1	; () banked
  8013  001BB0  6FA8               	movwf	(_pAdj+1)& (0+255),b
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;main.c: 724:                                     vAdj = vAdj + (vQuanta >> 1);
  8017  001BB2  35AA               	rlcf	(_vQuanta+1)& (0+255),w,b
  8018  001BB4  31AA               	rrcf	(_vQuanta+1)& (0+255),w,b
  8019  001BB6  0103               	movlb	3	; () banked
  8020  001BB8  6FA0               	movwf	(??_main+1)& (0+255),b
  8021  001BBA  0101               	movlb	1	; () banked
  8022  001BBC  31A9               	rrcf	_vQuanta& (0+255),w,b
  8023  001BBE  0103               	movlb	3	; () banked
  8024  001BC0  6F9F               	movwf	??_main& (0+255),b
  8025  001BC2  0102               	movlb	2	; () banked
  8026  001BC4  5142               	movf	_vAdj& (0+255),w,b
  8027  001BC6  0103               	movlb	3	; () banked
  8028  001BC8  259F               	addwf	??_main& (0+255),w,b
  8029  001BCA  0102               	movlb	2	; () banked
  8030  001BCC  6F42               	movwf	_vAdj& (0+255),b
  8031  001BCE  5143               	movf	(_vAdj+1)& (0+255),w,b
  8032  001BD0  0103               	movlb	3	; () banked
  8033  001BD2  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8034  001BD4  0102               	movlb	2	; () banked
  8035  001BD6  6F43               	movwf	(_vAdj+1)& (0+255),b
  8036                           
  8037                           ; BSR set to: 2
  8038                           ;main.c: 728:                                     if (((pInst + pQuantaInsp) < intMaxP) 
      +                          &&
  8039  001BD8  0101               	movlb	1	; () banked
  8040  001BDA  51D1               	movf	_pQuantaInsp& (0+255),w,b
  8041  001BDC  25EB               	addwf	_pInst& (0+255),w,b
  8042  001BDE  0103               	movlb	3	; () banked
  8043  001BE0  6F9F               	movwf	??_main& (0+255),b
  8044  001BE2  0101               	movlb	1	; () banked
  8045  001BE4  51D2               	movf	(_pQuantaInsp+1)& (0+255),w,b
  8046  001BE6  21EC               	addwfc	(_pInst+1)& (0+255),w,b
  8047  001BE8  0103               	movlb	3	; () banked
  8048  001BEA  6FA0               	movwf	(??_main+1)& (0+255),b
  8049  001BEC  0101               	movlb	1	; () banked
  8050  001BEE  51EF               	movf	_intMaxP& (0+255),w,b
  8051  001BF0  0103               	movlb	3	; () banked
  8052  001BF2  5D9F               	subwf	??_main& (0+255),w,b
  8053  001BF4  51A0               	movf	(??_main+1)& (0+255),w,b
  8054  001BF6  0A80               	xorlw	128
  8055  001BF8  6FA1               	movwf	(??_main+2)& (0+255),b
  8056  001BFA  0101               	movlb	1	; () banked
  8057  001BFC  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  8058  001BFE  0A80               	xorlw	128
  8059  001C00  0103               	movlb	3	; () banked
  8060  001C02  59A1               	subwfb	(??_main+2)& (0+255),w,b
  8061  001C04  B0D8               	btfsc	status,0,c
  8062  001C06  D0AC               	goto	l21043
  8063                           
  8064                           ; BSR set to: 3
  8065  001C08  0EB6               	movlw	182
  8066  001C0A  6F9F               	movwf	??_main& (0+255),b
  8067  001C0C  0EFF               	movlw	255
  8068  001C0E  6FA0               	movwf	(??_main+1)& (0+255),b
  8069  001C10  0060  F77C  F3A1   	movff	_pPlatInsp,??_main+2
  8070  001C16  0060  F780  F3A2   	movff	_pPlatInsp+1,??_main+3
  8071  001C1C  519F               	movf	??_main& (0+255),w,b
  8072  001C1E  27A1               	addwf	(??_main+2)& (0+255),f,b
  8073  001C20  51A0               	movf	(??_main+1)& (0+255),w,b
  8074  001C22  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8075  001C24  51A1               	movf	(??_main+2)& (0+255),w,b
  8076  001C26  0101               	movlb	1	; () banked
  8077  001C28  5DA7               	subwf	_pAdj& (0+255),w,b
  8078  001C2A  51A8               	movf	(_pAdj+1)& (0+255),w,b
  8079  001C2C  0A80               	xorlw	128
  8080  001C2E  0103               	movlb	3	; () banked
  8081  001C30  6FA3               	movwf	(??_main+4)& (0+255),b
  8082  001C32  51A2               	movf	(??_main+3)& (0+255),w,b
  8083  001C34  0A80               	xorlw	128
  8084  001C36  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8085  001C38  B0D8               	btfsc	status,0,c
  8086  001C3A  D092               	goto	l21043
  8087                           
  8088                           ; BSR set to: 3
  8089  001C3C  0101               	movlb	1	; () banked
  8090  001C3E  05C2               	decf	_intVentMode& (0+255),w,b
  8091  001C40  B4D8               	btfsc	status,2,c
  8092  001C42  D01B               	goto	u23080
  8093                           
  8094                           ; BSR set to: 1
  8095  001C44  0EB6               	movlw	182
  8096  001C46  0103               	movlb	3	; () banked
  8097  001C48  6F9F               	movwf	??_main& (0+255),b
  8098  001C4A  0EFF               	movlw	255
  8099  001C4C  6FA0               	movwf	(??_main+1)& (0+255),b
  8100  001C4E  0060  F6D4  F3A1   	movff	_intIP,??_main+2
  8101  001C54  0060  F6D8  F3A2   	movff	_intIP+1,??_main+3
  8102  001C5A  519F               	movf	??_main& (0+255),w,b
  8103  001C5C  27A1               	addwf	(??_main+2)& (0+255),f,b
  8104  001C5E  51A0               	movf	(??_main+1)& (0+255),w,b
  8105  001C60  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8106  001C62  51A1               	movf	(??_main+2)& (0+255),w,b
  8107  001C64  0101               	movlb	1	; () banked
  8108  001C66  5DA7               	subwf	_pAdj& (0+255),w,b
  8109  001C68  51A8               	movf	(_pAdj+1)& (0+255),w,b
  8110  001C6A  0A80               	xorlw	128
  8111  001C6C  0103               	movlb	3	; () banked
  8112  001C6E  6FA3               	movwf	(??_main+4)& (0+255),b
  8113  001C70  51A2               	movf	(??_main+3)& (0+255),w,b
  8114  001C72  0A80               	xorlw	128
  8115  001C74  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8116  001C76  B0D8               	btfsc	status,0,c
  8117  001C78  D073               	goto	l21043
  8118  001C7A                     u23080:
  8119                           
  8120                           ;main.c: 730:                                          ((intVentMode == VMODE_VOLUME) ||
      +                           (pAdj < (intIP - ((int16_t) ((0.045*4096+2)/5)*2))))) {;main.c: 731:                   
      +                                                LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  8121  001C7A  94BA               	bcf	186,2,c	;volatile
  8122  001C7C  86BC               	bsf	188,3,c	;volatile
  8123                           
  8124                           ;main.c: 732:                                         rValveActuationTstamp = timeGet();
  8125  001C7E  ECD5  F052         	call	_timeGet	;wreg free
  8126  001C82  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  8127  001C88  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;main.c: 733:                                         QuantaCheck = 1;
  8131  001C8E  0E01               	movlw	1
  8132  001C90  0101               	movlb	1	; () banked
  8133  001C92  6FBA               	movwf	_QuantaCheck& (0+255),b
  8134                           
  8135                           ; BSR set to: 1
  8136                           ;main.c: 734:                                         pPlatMax = pAvgUShort;
  8137  001C94  C1E7  F1AF         	movff	_pAvgUShort,_pPlatMax
  8138  001C98  C1E8  F1B0         	movff	_pAvgUShort+1,_pPlatMax+1
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;main.c: 735:                                         printf ("PI-VO T %d - Pi %d Pq %d 
      +                          VOL %d\n", timeDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((
      +                          0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vMeasureGet());
  8142  001C9C  0E39               	movlw	low STR_17
  8143  001C9E  6F46               	movwf	printf@fmt& (0+255),b
  8144  001CA0  0EFC               	movlw	high STR_17
  8145  001CA2  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8146  001CA4  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  8147  001CAA  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8148  001CB0  0060  F694  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8149  001CB6  0060  F698  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8150  001CBC  EC80  F04E         	call	_timeDiff	;wreg free
  8151  001CC0  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8152  001CC6  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8153  001CCC  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  8154  001CD2  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8155  001CD8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8156  001CDA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8157  001CDC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8158  001CDE  0E45               	movlw	69
  8159  001CE0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8160  001CE2  0E00               	movlw	0
  8161  001CE4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8162  001CE6  0E00               	movlw	0
  8163  001CE8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8164  001CEA  EC1F  F04B         	call	___tmul	;wreg free
  8165  001CEE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8166  001CF4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8167  001CFA  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8168  001CFC  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8169  001CFE  698D               	setf	(?___tmul+2)& (0+255),b
  8170  001D00  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8171  001D06  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8172  001D0C  0060  F744  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  8173  001D12  0060  F748  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  8174  001D18  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8175  001D1A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8176  001D1C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8177  001D1E  0E45               	movlw	69
  8178  001D20  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8179  001D22  0E00               	movlw	0
  8180  001D24  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8181  001D26  0E00               	movlw	0
  8182  001D28  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8183  001D2A  EC1F  F04B         	call	___tmul	;wreg free
  8184  001D2E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8185  001D34  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8186  001D3A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8187  001D3C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8188  001D3E  698D               	setf	(?___tmul+2)& (0+255),b
  8189  001D40  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8190  001D46  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8191  001D4C  ECD7  F048         	call	_vMeasureGet	;wreg free
  8192  001D50  0060  F290  F14E   	movff	?_vMeasureGet,?_printf+8
  8193  001D56  0060  F294  F14F   	movff	?_vMeasureGet+1,?_printf+9
  8194  001D5C  EC43  F050         	call	_printf	;wreg free
  8195  001D60                     l21043:
  8196                           
  8197                           ;main.c: 742:                     screenMng();
  8198  001D60  EC2F  F01A         	call	_screenMng	;wreg free
  8199                           
  8200                           ;main.c: 743:                     MenuMng();
  8201  001D64  ECA2  F015         	call	_MenuMng	;wreg free
  8202                           
  8203                           ;main.c: 747:                 if ((LATAbits.LATA3) && (rSV3ValveORT > ((time_t) 50*1)) &
      +                          &
  8204  001D68  A6BA               	btfss	186,3,c	;volatile
  8205  001D6A  D063               	goto	l21063
  8206  001D6C  0101               	movlb	1	; () banked
  8207  001D6E  519E               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8208  001D70  E104               	bnz	u23100
  8209  001D72  0E33               	movlw	51
  8210  001D74  5D9D               	subwf	_rSV3ValveORT& (0+255),w,b
  8211  001D76  A0D8               	btfss	status,0,c
  8212  001D78  D05C               	goto	l21063
  8213  001D7A                     u23100:
  8214                           
  8215                           ; BSR set to: 1
  8216  001D7A  0ECE               	movlw	206
  8217  001D7C  0103               	movlb	3	; () banked
  8218  001D7E  6F9F               	movwf	??_main& (0+255),b
  8219  001D80  0EFF               	movlw	255
  8220  001D82  6FA0               	movwf	(??_main+1)& (0+255),b
  8221  001D84  0060  F674  F3A1   	movff	_rSV3ValveORT,??_main+2
  8222  001D8A  0060  F678  F3A2   	movff	_rSV3ValveORT+1,??_main+3
  8223  001D90  519F               	movf	??_main& (0+255),w,b
  8224  001D92  27A1               	addwf	(??_main+2)& (0+255),f,b
  8225  001D94  51A0               	movf	(??_main+1)& (0+255),w,b
  8226  001D96  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8227  001D98  51A1               	movf	(??_main+2)& (0+255),w,b
  8228  001D9A  0101               	movlb	1	; () banked
  8229  001D9C  5DB1               	subwf	_intIDuration& (0+255),w,b
  8230  001D9E  0103               	movlb	3	; () banked
  8231  001DA0  51A2               	movf	(??_main+3)& (0+255),w,b
  8232  001DA2  0101               	movlb	1	; () banked
  8233  001DA4  59B2               	subwfb	(_intIDuration+1)& (0+255),w,b
  8234  001DA6  A0D8               	btfss	status,0,c
  8235  001DA8  D01D               	goto	u23120
  8236                           
  8237                           ; BSR set to: 1
  8238  001DAA  0060  F72C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  8239  001DB0  0060  F730  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  8240  001DB6  519D               	movf	_rSV3ValveORT& (0+255),w,b
  8241  001DB8  5DB1               	subwf	_intIDuration& (0+255),w,b
  8242  001DBA  0103               	movlb	3	; () banked
  8243  001DBC  6F9F               	movwf	??_main& (0+255),b
  8244  001DBE  0101               	movlb	1	; () banked
  8245  001DC0  519E               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8246  001DC2  59B2               	subwfb	(_intIDuration+1)& (0+255),w,b
  8247  001DC4  0103               	movlb	3	; () banked
  8248  001DC6  6FA0               	movwf	(??_main+1)& (0+255),b
  8249  001DC8  0E32               	movlw	50
  8250  001DCA  259F               	addwf	??_main& (0+255),w,b
  8251  001DCC  0100               	movlb	0	; () banked
  8252  001DCE  6F95               	movwf	timeElapsed@duration& (0+255),b
  8253  001DD0  0E00               	movlw	0
  8254  001DD2  0103               	movlb	3	; () banked
  8255  001DD4  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8256  001DD6  0100               	movlb	0	; () banked
  8257  001DD8  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8258  001DDA  ECE4  F04E         	call	_timeElapsed	;wreg free
  8259  001DDE  0900               	iorlw	0
  8260  001DE0  B4D8               	btfsc	status,2,c
  8261  001DE2  D027               	goto	l21063
  8262  001DE4                     u23120:
  8263                           
  8264                           ;main.c: 748:                         ((intIDuration < (rSV3ValveORT - ((time_t) 50*1)))
      +                           || timeElapsed(rCycleTime, intIDuration - (rSV3ValveORT - ((time_t) 50*1))))) {;main.c:
      +                           749:                     sv3DelayCheck = 1;
  8265  001DE4  0E01               	movlw	1
  8266  001DE6  0101               	movlb	1	; () banked
  8267  001DE8  6FBC               	movwf	_sv3DelayCheck& (0+255),b
  8268                           
  8269                           ; BSR set to: 1
  8270                           ;main.c: 750:                     rValveDelayStart = timeGet();
  8271  001DEA  ECD5  F052         	call	_timeGet	;wreg free
  8272  001DEE  0060  F24C  F19B   	movff	?_timeGet,_rValveDelayStart
  8273  001DF4  0060  F250  F19C   	movff	?_timeGet+1,_rValveDelayStart+1
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;main.c: 751:                     LATAbits.LATA3 = 0;
  8277  001DFA  96BA               	bcf	186,3,c	;volatile
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;main.c: 752:                     printf ("PI-OSV3 T %d\n", timeDiff(rCycleTime, rValveD
      +                          elayStart));
  8281  001DFC  0E18               	movlw	low STR_18
  8282  001DFE  0101               	movlb	1	; () banked
  8283  001E00  6F46               	movwf	printf@fmt& (0+255),b
  8284  001E02  0EFF               	movlw	high STR_18
  8285  001E04  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8286  001E06  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  8287  001E0C  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8288  001E12  0060  F66C  F097   	movff	_rValveDelayStart,timeDiff@endT
  8289  001E18  0060  F670  F098   	movff	_rValveDelayStart+1,timeDiff@endT+1
  8290  001E1E  EC80  F04E         	call	_timeDiff	;wreg free
  8291  001E22  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8292  001E28  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8293  001E2E  EC43  F050         	call	_printf	;wreg free
  8294  001E32                     l21063:
  8295                           
  8296                           ;main.c: 755:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  8297  001E32  0EB8               	movlw	low main@printTime
  8298  001E34  0100               	movlb	0	; () banked
  8299  001E36  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8300  001E38  0E03               	movlw	high main@printTime
  8301  001E3A  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8302  001E3C  0E00               	movlw	0
  8303  001E3E  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  8304  001E40  0E14               	movlw	20
  8305  001E42  6F95               	movwf	timeElapsedR@duration& (0+255),b
  8306  001E44  ECBE  F047         	call	_timeElapsedR	;wreg free
  8307  001E48  0900               	iorlw	0
  8308  001E4A  B4D8               	btfsc	status,2,c
  8309  001E4C  EF38  F004         	goto	l20681
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;main.c: 756:     int16_t pAux;;main.c: 757:                     aCaptGetResult(VolPSens
      +                          or, &pAux);
  8313  001E50  0EC3               	movlw	low main@pAux
  8314  001E52  0101               	movlb	1	; () banked
  8315  001E54  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8316  001E56  0E03               	movlw	high main@pAux
  8317  001E58  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8318  001E5A  0E01               	movlw	1
  8319  001E5C  EC5A  F033         	call	_aCaptGetResult
  8320                           
  8321                           ;main.c: 758:                     printf ("-: %d %d %d %d\n", timeGet(), (LATAbits.LATA2
      +                           ? 1 : 0) + (LATCbits.LATC3 ? 2 : 0) + (LATAbits.LATA3 ? 4 : 0), pAvgShort, vMeasureGet(
      +                          ) );
  8322  001E60  B6BA               	btfsc	186,3,c	;volatile
  8323  001E62  D005               	goto	l21071
  8324  001E64  0E00               	movlw	0
  8325  001E66  0103               	movlb	3	; () banked
  8326  001E68  6FAF               	movwf	(_main$3850+1)& (0+255),b
  8327  001E6A  0E00               	movlw	0
  8328  001E6C  D004               	goto	L4
  8329  001E6E                     l21071:
  8330  001E6E  0E00               	movlw	0
  8331  001E70  0103               	movlb	3	; () banked
  8332  001E72  6FAF               	movwf	(_main$3850+1)& (0+255),b
  8333  001E74  0E04               	movlw	4
  8334  001E76                     L4:
  8335  001E76  6FAE               	movwf	_main$3850& (0+255),b
  8336                           
  8337                           ; BSR set to: 3
  8338  001E78  B6BC               	btfsc	188,3,c	;volatile
  8339  001E7A  D004               	goto	l21077
  8340                           
  8341                           ; BSR set to: 3
  8342  001E7C  0E00               	movlw	0
  8343  001E7E  6FB1               	movwf	(_main$3851+1)& (0+255),b
  8344  001E80  0E00               	movlw	0
  8345  001E82  D003               	goto	L5
  8346  001E84                     l21077:
  8347                           
  8348                           ; BSR set to: 3
  8349  001E84  0E00               	movlw	0
  8350  001E86  6FB1               	movwf	(_main$3851+1)& (0+255),b
  8351  001E88  0E02               	movlw	2
  8352  001E8A                     L5:
  8353  001E8A  6FB0               	movwf	_main$3851& (0+255),b
  8354                           
  8355                           ; BSR set to: 3
  8356  001E8C  0EFA               	movlw	low STR_19
  8357  001E8E  0101               	movlb	1	; () banked
  8358  001E90  6F46               	movwf	printf@fmt& (0+255),b
  8359  001E92  0EFE               	movlw	high STR_19
  8360  001E94  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8361  001E96  ECD5  F052         	call	_timeGet	;wreg free
  8362  001E9A  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  8363  001EA0  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  8364  001EA6  A4BA               	btfss	186,2,c	;volatile
  8365  001EA8  D004               	goto	u23160
  8366  001EAA  0103               	movlb	3	; () banked
  8367  001EAC  6B9F               	clrf	??_main& (0+255),b
  8368  001EAE  2B9F               	incf	??_main& (0+255),f,b
  8369  001EB0  D002               	goto	u23168
  8370  001EB2                     u23160:
  8371  001EB2  0103               	movlb	3	; () banked
  8372  001EB4  6B9F               	clrf	??_main& (0+255),b
  8373  001EB6                     u23168:
  8374  001EB6  519F               	movf	??_main& (0+255),w,b
  8375  001EB8  25B0               	addwf	_main$3851& (0+255),w,b
  8376  001EBA  6FA0               	movwf	(??_main+1)& (0+255),b
  8377  001EBC  0E00               	movlw	0
  8378  001EBE  21B1               	addwfc	(_main$3851+1)& (0+255),w,b
  8379  001EC0  6FA1               	movwf	(??_main+2)& (0+255),b
  8380  001EC2  51AE               	movf	_main$3850& (0+255),w,b
  8381  001EC4  25A0               	addwf	(??_main+1)& (0+255),w,b
  8382  001EC6  0101               	movlb	1	; () banked
  8383  001EC8  6F4A               	movwf	(?_printf+4)& (0+255),b
  8384  001ECA  0103               	movlb	3	; () banked
  8385  001ECC  51AF               	movf	(_main$3850+1)& (0+255),w,b
  8386  001ECE  21A1               	addwfc	(??_main+2)& (0+255),w,b
  8387  001ED0  0101               	movlb	1	; () banked
  8388  001ED2  6F4B               	movwf	(?_printf+5)& (0+255),b
  8389  001ED4  0060  F7A4  F14C   	movff	_pAvgShort,?_printf+6
  8390  001EDA  0060  F7A8  F14D   	movff	_pAvgShort+1,?_printf+7
  8391  001EE0  ECD7  F048         	call	_vMeasureGet	;wreg free
  8392  001EE4  0060  F290  F14E   	movff	?_vMeasureGet,?_printf+8
  8393  001EEA  0060  F294  F14F   	movff	?_vMeasureGet+1,?_printf+9
  8394  001EF0  EC43  F050         	call	_printf	;wreg free
  8395  001EF4  EF38  F004         	goto	l20681
  8396  001EF8                     l21081:
  8397                           
  8398                           ; BSR set to: 1
  8399                           ;main.c: 768:             lastCycleVol = vMeasureGet();
  8400  001EF8  ECD7  F048         	call	_vMeasureGet	;wreg free
  8401  001EFC  0060  F290  F248   	movff	?_vMeasureGet,_lastCycleVol
  8402  001F02  0060  F294  F249   	movff	?_vMeasureGet+1,_lastCycleVol+1
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;main.c: 769:             sprintf(lcdBtnRRow, "V% 4d", lastCycleVol);
  8406  001F08  0EC9               	movlw	low _lcdBtnRRow
  8407  001F0A  0101               	movlb	1	; () banked
  8408  001F0C  6F46               	movwf	sprintf@s& (0+255),b
  8409  001F0E  0E02               	movlw	high _lcdBtnRRow
  8410  001F10  6F47               	movwf	(sprintf@s+1)& (0+255),b
  8411  001F12  0EF3               	movlw	low STR_20
  8412  001F14  6F48               	movwf	sprintf@fmt& (0+255),b
  8413  001F16  0EFF               	movlw	high STR_20
  8414  001F18  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
  8415  001F1A  0060  F920  F14A   	movff	_lastCycleVol,?_sprintf+4
  8416  001F20  0060  F924  F14B   	movff	_lastCycleVol+1,?_sprintf+5
  8417  001F26  EC31  F049         	call	_sprintf	;wreg free
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;main.c: 770:             lcdPrintBRR = 1;
  8421  001F2A  0E01               	movlw	1
  8422  001F2C  6FC4               	movwf	_lcdPrintBRR& (0+255),b
  8423                           
  8424                           ; BSR set to: 1
  8425                           ;main.c: 775:             printf ("\nEP\n");
  8426  001F2E  0EF9               	movlw	low STR_21
  8427  001F30  6F46               	movwf	printf@fmt& (0+255),b
  8428  001F32  0EFF               	movlw	high STR_21
  8429  001F34  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8430  001F36  EC43  F050         	call	_printf	;wreg free
  8431                           
  8432                           ; BSR set to: 2
  8433                           ;main.c: 777:             aCaptRstFlt(Flt0PSensor);
  8434  001F3A  0E03               	movlw	3
  8435  001F3C  EC44  F03D         	call	_aCaptRstFlt
  8436                           
  8437                           ; BSR set to: 57
  8438                           ;main.c: 778:             aCaptRstFlt(Flt1PSensor);
  8439  001F40  0E04               	movlw	4
  8440  001F42  EC44  F03D         	call	_aCaptRstFlt
  8441                           
  8442                           ; BSR set to: 57
  8443                           ;main.c: 779:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8444  001F46  94BA               	bcf	186,2,c	;volatile
  8445                           
  8446                           ; BSR set to: 57
  8447  001F48  96BC               	bcf	188,3,c	;volatile
  8448                           
  8449                           ; BSR set to: 57
  8450                           ;main.c: 780:             if (LATAbits.LATA3) {
  8451  001F4A  A6BA               	btfss	186,3,c	;volatile
  8452  001F4C  D00C               	goto	l21105
  8453                           
  8454                           ; BSR set to: 57
  8455                           ;main.c: 781:                 LATAbits.LATA3 = 0;
  8456  001F4E  96BA               	bcf	186,3,c	;volatile
  8457                           
  8458                           ; BSR set to: 57
  8459                           ;main.c: 782:                 sv3DelayCheck = 1;
  8460  001F50  0E01               	movlw	1
  8461  001F52  0101               	movlb	1	; () banked
  8462  001F54  6FBC               	movwf	_sv3DelayCheck& (0+255),b
  8463                           
  8464                           ; BSR set to: 1
  8465                           ;main.c: 783:                 rValveDelayStart = timeGet();
  8466  001F56  ECD5  F052         	call	_timeGet	;wreg free
  8467  001F5A  0060  F24C  F19B   	movff	?_timeGet,_rValveDelayStart
  8468  001F60  0060  F250  F19C   	movff	?_timeGet+1,_rValveDelayStart+1
  8469  001F66                     l21105:
  8470                           
  8471                           ;main.c: 786:             initExpSubState = 1;
  8472  001F66  0E01               	movlw	1
  8473  001F68  0101               	movlb	1	; () banked
  8474  001F6A  6FBF               	movwf	_initExpSubState& (0+255),b
  8475                           
  8476                           ; BSR set to: 1
  8477                           ;main.c: 787:             OSCheck = 0;
  8478  001F6C  0E00               	movlw	0
  8479  001F6E  6FBB               	movwf	_OSCheck& (0+255),b
  8480                           
  8481                           ; BSR set to: 1
  8482                           ;main.c: 788:             QuantaCheck = 0;
  8483  001F70  0E00               	movlw	0
  8484  001F72  6FBA               	movwf	_QuantaCheck& (0+255),b
  8485  001F74                     l21111:
  8486                           
  8487                           ;main.c: 791:                 if (intVentMode == VMODE_PRESSURE) {
  8488  001F74  0101               	movlb	1	; () banked
  8489  001F76  51C2               	movf	_intVentMode& (0+255),w,b
  8490  001F78  A4D8               	btfss	status,2,c
  8491  001F7A  D004               	goto	l21115
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;main.c: 792:                     MonitorMsgSend(MONSTATE_RUNP);
  8495  001F7C  0E10               	movlw	16
  8496  001F7E  EC59  F050         	call	_MonitorMsgSend
  8497                           
  8498                           ;main.c: 793:                 } else {
  8499  001F82  D003               	goto	l21117
  8500  001F84                     l21115:
  8501                           
  8502                           ; BSR set to: 1
  8503                           ;main.c: 794:                     MonitorMsgSend(MONSTATE_RUNV);
  8504  001F84  0E14               	movlw	20
  8505  001F86  EC59  F050         	call	_MonitorMsgSend
  8506  001F8A                     l21117:
  8507                           
  8508                           ;main.c: 797:                 if (timeElapsedR(&rCycleTime, intEDuration)) {
  8509  001F8A  0ECB               	movlw	low _rCycleTime
  8510  001F8C  0100               	movlb	0	; () banked
  8511  001F8E  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8512  001F90  0E01               	movlw	high _rCycleTime
  8513  001F92  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8514  001F94  0060  F938  F095   	movff	_intEDuration,timeElapsedR@duration
  8515  001F9A  0060  F93C  F096   	movff	_intEDuration+1,timeElapsedR@duration+1
  8516  001FA0  ECBE  F047         	call	_timeElapsedR	;wreg free
  8517  001FA4  0900               	iorlw	0
  8518  001FA6  B4D8               	btfsc	status,2,c
  8519  001FA8  D02C               	goto	l21133
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;main.c: 799:                     sBreath = 0;
  8523  001FAA  0E00               	movlw	0
  8524  001FAC  0101               	movlb	1	; () banked
  8525  001FAE  6FC1               	movwf	_sBreath& (0+255),b
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;main.c: 800:                     bRateUpdt(0);
  8529  001FB0  0E00               	movlw	0
  8530  001FB2  EC05  F040         	call	_bRateUpdt
  8531                           
  8532                           ; BSR set to: 2
  8533                           ;main.c: 801:                     if (initExpSubState) {
  8534  001FB6  0101               	movlb	1	; () banked
  8535  001FB8  51BF               	movf	_initExpSubState& (0+255),w,b
  8536  001FBA  B4D8               	btfsc	status,2,c
  8537  001FBC  D003               	goto	l21127
  8538                           
  8539                           ; BSR set to: 1
  8540                           ;main.c: 803:                         MonitorErrorSet(MON_EPE);
  8541  001FBE  0E10               	movlw	16
  8542  001FC0  ECDE  F052         	call	_MonitorErrorSet
  8543  001FC4                     l21127:
  8544                           
  8545                           ; BSR set to: 1
  8546                           ;main.c: 805:                     if (OSCheck) {
  8547  001FC4  51BB               	movf	_OSCheck& (0+255),w,b
  8548  001FC6  B4D8               	btfsc	status,2,c
  8549  001FC8  EF98  F015         	goto	l21273
  8550                           
  8551                           ; BSR set to: 1
  8552                           ;main.c: 807:                         pExpOS = (3 * pExpOS) >> 2;
  8553  001FCC  0060  F774  F09B   	movff	_pExpOS,___wmul@multiplier
  8554  001FD2  0060  F778  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  8555  001FD8  0E00               	movlw	0
  8556  001FDA  0100               	movlb	0	; () banked
  8557  001FDC  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8558  001FDE  0E03               	movlw	3
  8559  001FE0  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8560  001FE2  ECFC  F04E         	call	___wmul	;wreg free
  8561  001FE6  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8562  001FE8  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8563  001FEA  339B               	rrcf	?___wmul& (0+255),f,b
  8564  001FEC  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8565  001FEE  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8566  001FF0  339B               	rrcf	?___wmul& (0+255),f,b
  8567  001FF2  0060  F26C  F1DD   	movff	?___wmul,_pExpOS
  8568  001FF8  0060  F270  F1DE   	movff	?___wmul+1,_pExpOS+1
  8569  001FFE  EF98  F015         	goto	l21273
  8570  002002                     l21133:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;main.c: 811:                     aCaptGetResult(MainPSensor, &pInst);
  8574  002002  0EEB               	movlw	low _pInst
  8575  002004  0101               	movlb	1	; () banked
  8576  002006  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8577  002008  0E01               	movlw	high _pInst
  8578  00200A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8579  00200C  0E00               	movlw	0
  8580  00200E  EC5A  F033         	call	_aCaptGetResult
  8581                           
  8582                           ;main.c: 812:                     aCaptGetResult(Flt1PSensor, &pAvgShort);
  8583  002012  0EE9               	movlw	low _pAvgShort
  8584  002014  0101               	movlb	1	; () banked
  8585  002016  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8586  002018  0E01               	movlw	high _pAvgShort
  8587  00201A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8588  00201C  0E04               	movlw	4
  8589  00201E  EC5A  F033         	call	_aCaptGetResult
  8590                           
  8591                           ;main.c: 813:                     pPeepActual = pAvgShort;
  8592  002022  C1E9  F1AD         	movff	_pAvgShort,_pPeepActual
  8593  002026  C1EA  F1AE         	movff	_pAvgShort+1,_pPeepActual+1
  8594                           
  8595                           ;main.c: 814:                     if (initExpSubState) {
  8596  00202A  0101               	movlb	1	; () banked
  8597  00202C  51BF               	movf	_initExpSubState& (0+255),w,b
  8598  00202E  B4D8               	btfsc	status,2,c
  8599  002030  D123               	goto	l21175
  8600                           
  8601                           ; BSR set to: 1
  8602                           ;main.c: 823:                         tmpVal = intPEEP - pExpOS;
  8603  002032  51DD               	movf	_pExpOS& (0+255),w,b
  8604  002034  5DB3               	subwf	_intPEEP& (0+255),w,b
  8605  002036  0103               	movlb	3	; () banked
  8606  002038  6FC7               	movwf	main@tmpVal& (0+255),b
  8607  00203A  0101               	movlb	1	; () banked
  8608  00203C  51DE               	movf	(_pExpOS+1)& (0+255),w,b
  8609  00203E  59B4               	subwfb	(_intPEEP+1)& (0+255),w,b
  8610  002040  0103               	movlb	3	; () banked
  8611  002042  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  8612                           
  8613                           ;main.c: 824:                         if (tmpVal <= ((int16_t) ((0.045*4096+2)/5)*1)) {
  8614  002044  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  8615  002046  D006               	goto	u23230
  8616  002048  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  8617  00204A  E108               	bnz	l21143
  8618  00204C  0E26               	movlw	38
  8619  00204E  5DC7               	subwf	main@tmpVal& (0+255),w,b
  8620  002050  B0D8               	btfsc	status,0,c
  8621  002052  D004               	goto	l21143
  8622  002054                     u23230:
  8623                           
  8624                           ; BSR set to: 3
  8625                           ;main.c: 825:                             tmpVal = ((int16_t) ((0.045*4096+2)/5)*1);
  8626  002054  0E00               	movlw	0
  8627  002056  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  8628  002058  0E25               	movlw	37
  8629  00205A  6FC7               	movwf	main@tmpVal& (0+255),b
  8630  00205C                     l21143:
  8631                           
  8632                           ; BSR set to: 3
  8633                           ;main.c: 827:                         if (pAvgShort < tmpVal) {
  8634  00205C  51C7               	movf	main@tmpVal& (0+255),w,b
  8635  00205E  0101               	movlb	1	; () banked
  8636  002060  5DE9               	subwf	_pAvgShort& (0+255),w,b
  8637  002062  51EA               	movf	(_pAvgShort+1)& (0+255),w,b
  8638  002064  0A80               	xorlw	128
  8639  002066  0103               	movlb	3	; () banked
  8640  002068  6F9F               	movwf	??_main& (0+255),b
  8641  00206A  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  8642  00206C  0A80               	xorlw	128
  8643  00206E  599F               	subwfb	??_main& (0+255),w,b
  8644  002070  B0D8               	btfsc	status,0,c
  8645  002072  D08D               	goto	l21157
  8646                           
  8647                           ; BSR set to: 3
  8648                           ;main.c: 828:                             LATAbits.LATA3 = 1;
  8649  002074  86BA               	bsf	186,3,c	;volatile
  8650                           
  8651                           ; BSR set to: 3
  8652                           ;main.c: 829:                             initExpSubState = 0;
  8653  002076  0E00               	movlw	0
  8654  002078  0101               	movlb	1	; () banked
  8655  00207A  6FBF               	movwf	_initExpSubState& (0+255),b
  8656                           
  8657                           ; BSR set to: 1
  8658                           ;main.c: 830:                             rValveActuationTstamp = timeGet();
  8659  00207C  ECD5  F052         	call	_timeGet	;wreg free
  8660  002080  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  8661  002086  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;main.c: 831:                             pValveActuation = pAvgShort;
  8665  00208C  C1E9  F1E1         	movff	_pAvgShort,_pValveActuation
  8666  002090  C1EA  F1E2         	movff	_pAvgShort+1,_pValveActuation+1
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;main.c: 832:                             OSCheck = 1;
  8670  002094  0E01               	movlw	1
  8671  002096  0101               	movlb	1	; () banked
  8672  002098  6FBB               	movwf	_OSCheck& (0+255),b
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;main.c: 833:                             printf ("PEI end T %d - Pi %d Ps %d OS %d\n", 
      +                          timeDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+
      +                          2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*
      +                          ((int24_t) pAvgShort))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int2
      +                          4_t) pExpOS))>>8)));
  8676  00209A  0E17               	movlw	low STR_22
  8677  00209C  6F46               	movwf	printf@fmt& (0+255),b
  8678  00209E  0EFC               	movlw	high STR_22
  8679  0020A0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8680  0020A2  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  8681  0020A8  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8682  0020AE  0060  F694  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8683  0020B4  0060  F698  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8684  0020BA  EC80  F04E         	call	_timeDiff	;wreg free
  8685  0020BE  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8686  0020C4  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8687  0020CA  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  8688  0020D0  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8689  0020D6  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8690  0020D8  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8691  0020DA  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8692  0020DC  0E45               	movlw	69
  8693  0020DE  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8694  0020E0  0E00               	movlw	0
  8695  0020E2  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8696  0020E4  0E00               	movlw	0
  8697  0020E6  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8698  0020E8  EC1F  F04B         	call	___tmul	;wreg free
  8699  0020EC  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8700  0020F2  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8701  0020F8  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8702  0020FA  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8703  0020FC  698D               	setf	(?___tmul+2)& (0+255),b
  8704  0020FE  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8705  002104  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8706  00210A  0060  F7A4  F08B   	movff	_pAvgShort,___tmul@multiplier
  8707  002110  0060  F7A8  F08C   	movff	_pAvgShort+1,___tmul@multiplier+1
  8708  002116  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8709  002118  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8710  00211A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8711  00211C  0E45               	movlw	69
  8712  00211E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8713  002120  0E00               	movlw	0
  8714  002122  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8715  002124  0E00               	movlw	0
  8716  002126  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8717  002128  EC1F  F04B         	call	___tmul	;wreg free
  8718  00212C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8719  002132  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8720  002138  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8721  00213A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8722  00213C  698D               	setf	(?___tmul+2)& (0+255),b
  8723  00213E  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8724  002144  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8725  00214A  0060  F774  F08B   	movff	_pExpOS,___tmul@multiplier
  8726  002150  0060  F778  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  8727  002156  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8728  002158  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8729  00215A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8730  00215C  0E45               	movlw	69
  8731  00215E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8732  002160  0E00               	movlw	0
  8733  002162  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8734  002164  0E00               	movlw	0
  8735  002166  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8736  002168  EC1F  F04B         	call	___tmul	;wreg free
  8737  00216C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8738  002172  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8739  002178  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8740  00217A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8741  00217C  698D               	setf	(?___tmul+2)& (0+255),b
  8742  00217E  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  8743  002184  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  8744  00218A  EC43  F050         	call	_printf	;wreg free
  8745  00218E                     l21157:
  8746                           
  8747                           ;main.c: 839:                         if (sv3DelayCheck) {
  8748  00218E  0101               	movlb	1	; () banked
  8749  002190  51BC               	movf	_sv3DelayCheck& (0+255),w,b
  8750  002192  B4D8               	btfsc	status,2,c
  8751  002194  EFDC  F014         	goto	l21269
  8752                           
  8753                           ; BSR set to: 1
  8754                           ;main.c: 842:                             if ((pInst <= ((intPEEP + pPlatInsp) >> 1)) ||
      +                           (pInst < (pAvgShort - ((int16_t) ((0.045*4096+2)/5)*3)))) {
  8755  002198  51DF               	movf	_pPlatInsp& (0+255),w,b
  8756  00219A  25B3               	addwf	_intPEEP& (0+255),w,b
  8757  00219C  0103               	movlb	3	; () banked
  8758  00219E  6F9F               	movwf	??_main& (0+255),b
  8759  0021A0  0101               	movlb	1	; () banked
  8760  0021A2  51E0               	movf	(_pPlatInsp+1)& (0+255),w,b
  8761  0021A4  21B4               	addwfc	(_intPEEP+1)& (0+255),w,b
  8762  0021A6  0103               	movlb	3	; () banked
  8763  0021A8  6FA0               	movwf	(??_main+1)& (0+255),b
  8764  0021AA  35A0               	rlcf	(??_main+1)& (0+255),w,b
  8765  0021AC  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8766  0021AE  6FA2               	movwf	(??_main+3)& (0+255),b
  8767  0021B0  319F               	rrcf	??_main& (0+255),w,b
  8768  0021B2  6FA1               	movwf	(??_main+2)& (0+255),b
  8769  0021B4  0101               	movlb	1	; () banked
  8770  0021B6  51EB               	movf	_pInst& (0+255),w,b
  8771  0021B8  0103               	movlb	3	; () banked
  8772  0021BA  5DA1               	subwf	(??_main+2)& (0+255),w,b
  8773  0021BC  51A2               	movf	(??_main+3)& (0+255),w,b
  8774  0021BE  0A80               	xorlw	128
  8775  0021C0  6FA3               	movwf	(??_main+4)& (0+255),b
  8776  0021C2  0101               	movlb	1	; () banked
  8777  0021C4  51EC               	movf	(_pInst+1)& (0+255),w,b
  8778  0021C6  0A80               	xorlw	128
  8779  0021C8  0103               	movlb	3	; () banked
  8780  0021CA  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8781  0021CC  B0D8               	btfsc	status,0,c
  8782  0021CE  D01A               	goto	u23270
  8783                           
  8784                           ; BSR set to: 3
  8785  0021D0  0E91               	movlw	145
  8786  0021D2  6F9F               	movwf	??_main& (0+255),b
  8787  0021D4  0EFF               	movlw	255
  8788  0021D6  6FA0               	movwf	(??_main+1)& (0+255),b
  8789  0021D8  0060  F7A4  F3A1   	movff	_pAvgShort,??_main+2
  8790  0021DE  0060  F7A8  F3A2   	movff	_pAvgShort+1,??_main+3
  8791  0021E4  519F               	movf	??_main& (0+255),w,b
  8792  0021E6  27A1               	addwf	(??_main+2)& (0+255),f,b
  8793  0021E8  51A0               	movf	(??_main+1)& (0+255),w,b
  8794  0021EA  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8795  0021EC  51A1               	movf	(??_main+2)& (0+255),w,b
  8796  0021EE  0101               	movlb	1	; () banked
  8797  0021F0  5DEB               	subwf	_pInst& (0+255),w,b
  8798  0021F2  51EC               	movf	(_pInst+1)& (0+255),w,b
  8799  0021F4  0A80               	xorlw	128
  8800  0021F6  0103               	movlb	3	; () banked
  8801  0021F8  6FA3               	movwf	(??_main+4)& (0+255),b
  8802  0021FA  51A2               	movf	(??_main+3)& (0+255),w,b
  8803  0021FC  0A80               	xorlw	128
  8804  0021FE  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8805  002200  B0D8               	btfsc	status,0,c
  8806  002202  D3DA               	goto	l21269
  8807  002204                     u23270:
  8808                           
  8809                           ; BSR set to: 3
  8810                           ;main.c: 843:                                 sv3DelayCheck = 0;
  8811  002204  0E00               	movlw	0
  8812  002206  0101               	movlb	1	; () banked
  8813  002208  6FBC               	movwf	_sv3DelayCheck& (0+255),b
  8814                           
  8815                           ; BSR set to: 1
  8816                           ;main.c: 845:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  8817  00220A  0060  F66C  F095   	movff	_rValveDelayStart,timeDiff@startT
  8818  002210  0060  F670  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  8819  002216  ECD5  F052         	call	_timeGet	;wreg free
  8820  00221A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8821  002220  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8822  002226  EC80  F04E         	call	_timeDiff	;wreg free
  8823  00222A  0060  F254  F199   	movff	?_timeDiff,_rTimeTmp
  8824  002230  0060  F258  F19A   	movff	?_timeDiff+1,_rTimeTmp+1
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;main.c: 846:                                 if (rTimeTmp < ((time_t) 600*1)) {
  8828  002236  0E58               	movlw	88
  8829  002238  0101               	movlb	1	; () banked
  8830  00223A  5D99               	subwf	_rTimeTmp& (0+255),w,b
  8831  00223C  0E02               	movlw	2
  8832  00223E  599A               	subwfb	(_rTimeTmp+1)& (0+255),w,b
  8833  002240  B0D8               	btfsc	status,0,c
  8834  002242  D016               	goto	l21173
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;main.c: 848:                                     rSV3ValveORT = (rSV3ValveORT + rTimeTm
      +                          p) >> 1;
  8838  002244  5199               	movf	_rTimeTmp& (0+255),w,b
  8839  002246  259D               	addwf	_rSV3ValveORT& (0+255),w,b
  8840  002248  0103               	movlb	3	; () banked
  8841  00224A  6F9F               	movwf	??_main& (0+255),b
  8842  00224C  0101               	movlb	1	; () banked
  8843  00224E  519A               	movf	(_rTimeTmp+1)& (0+255),w,b
  8844  002250  219E               	addwfc	(_rSV3ValveORT+1)& (0+255),w,b
  8845  002252  0103               	movlb	3	; () banked
  8846  002254  6FA0               	movwf	(??_main+1)& (0+255),b
  8847  002256  90D8               	bcf	status,0,c
  8848  002258  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8849  00225A  6FA1               	movwf	(??_main+2)& (0+255),b
  8850  00225C  319F               	rrcf	??_main& (0+255),w,b
  8851  00225E  0101               	movlb	1	; () banked
  8852  002260  6F9D               	movwf	_rSV3ValveORT& (0+255),b
  8853  002262  0060  FE84  F19E   	movff	??_main+2,_rSV3ValveORT+1
  8854                           
  8855                           ; BSR set to: 1
  8856                           ;main.c: 850:                                     MonitorErrorClr(MON_SV3E);
  8857  002268  0E40               	movlw	64
  8858  00226A  ECE7  F052         	call	_MonitorErrorClr
  8859                           
  8860                           ;main.c: 851:                                 } else {
  8861  00226E  D3A4               	goto	l21269
  8862  002270                     l21173:
  8863                           
  8864                           ; BSR set to: 1
  8865                           ;main.c: 853:                                     MonitorErrorSet(MON_SV3E);
  8866  002270  0E40               	movlw	64
  8867  002272  ECDE  F052         	call	_MonitorErrorSet
  8868  002276  D3A0               	goto	l21269
  8869  002278                     l21175:
  8870                           
  8871                           ; BSR set to: 1
  8872                           ;main.c: 859:                         MonitorErrorClr(MON_EPE);
  8873  002278  0E10               	movlw	16
  8874  00227A  ECE7  F052         	call	_MonitorErrorClr
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;main.c: 860:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  8878  00227E  0E00               	movlw	0
  8879  002280  B4BA               	btfsc	186,2,c	;volatile
  8880  002282  0E01               	movlw	1
  8881  002284  B6BC               	btfsc	188,3,c	;volatile
  8882  002286  0E01               	movlw	1
  8883  002288  A0E8               	btfss	wreg,0,c
  8884  00228A  D004               	goto	u23290
  8885  00228C  0103               	movlb	3	; () banked
  8886  00228E  6B9F               	clrf	??_main& (0+255),b
  8887  002290  2B9F               	incf	??_main& (0+255),f,b
  8888  002292  D002               	goto	u23298
  8889  002294                     u23290:
  8890  002294  0103               	movlb	3	; () banked
  8891  002296  6B9F               	clrf	??_main& (0+255),b
  8892  002298                     u23298:
  8893  002298  519F               	movf	??_main& (0+255),w,b
  8894  00229A  B4D8               	btfsc	status,2,c
  8895  00229C  D066               	goto	l21187
  8896                           
  8897                           ; BSR set to: 3
  8898  00229E  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8899  0022A4  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8900  0022AA  0E00               	movlw	0
  8901  0022AC  0100               	movlb	0	; () banked
  8902  0022AE  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8903  0022B0  0E0F               	movlw	15
  8904  0022B2  6F95               	movwf	timeElapsed@duration& (0+255),b
  8905  0022B4  ECE4  F04E         	call	_timeElapsed	;wreg free
  8906  0022B8  0900               	iorlw	0
  8907  0022BA  A4D8               	btfss	status,2,c
  8908  0022BC  D00E               	goto	u23320
  8909                           
  8910                           ; BSR set to: 0
  8911  0022BE  0101               	movlb	1	; () banked
  8912  0022C0  51EB               	movf	_pInst& (0+255),w,b
  8913  0022C2  5DEF               	subwf	_intMaxP& (0+255),w,b
  8914  0022C4  51F0               	movf	(_intMaxP+1)& (0+255),w,b
  8915  0022C6  0A80               	xorlw	128
  8916  0022C8  0103               	movlb	3	; () banked
  8917  0022CA  6F9F               	movwf	??_main& (0+255),b
  8918  0022CC  0101               	movlb	1	; () banked
  8919  0022CE  51EC               	movf	(_pInst+1)& (0+255),w,b
  8920  0022D0  0A80               	xorlw	128
  8921  0022D2  0103               	movlb	3	; () banked
  8922  0022D4  599F               	subwfb	??_main& (0+255),w,b
  8923  0022D6  B0D8               	btfsc	status,0,c
  8924  0022D8  D048               	goto	l21187
  8925  0022DA                     u23320:
  8926                           
  8927                           ;main.c: 861:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8928  0022DA  94BA               	bcf	186,2,c	;volatile
  8929  0022DC  96BC               	bcf	188,3,c	;volatile
  8930                           
  8931                           ;main.c: 862:                             rValveActuationTstamp = timeGet();
  8932  0022DE  ECD5  F052         	call	_timeGet	;wreg free
  8933  0022E2  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  8934  0022E8  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;main.c: 863:                             printf ("PE VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst
      +                          ))>>8)));
  8938  0022EE  0EC1               	movlw	low STR_23
  8939  0022F0  0101               	movlb	1	; () banked
  8940  0022F2  6F46               	movwf	printf@fmt& (0+255),b
  8941  0022F4  0EFC               	movlw	high STR_23
  8942  0022F6  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8943  0022F8  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  8944  0022FE  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8945  002304  ECD5  F052         	call	_timeGet	;wreg free
  8946  002308  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8947  00230E  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8948  002314  EC80  F04E         	call	_timeDiff	;wreg free
  8949  002318  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8950  00231E  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8951  002324  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  8952  00232A  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8953  002330  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8954  002332  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8955  002334  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8956  002336  0E45               	movlw	69
  8957  002338  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8958  00233A  0E00               	movlw	0
  8959  00233C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8960  00233E  0E00               	movlw	0
  8961  002340  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8962  002342  EC1F  F04B         	call	___tmul	;wreg free
  8963  002346  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8964  00234C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8965  002352  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8966  002354  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8967  002356  698D               	setf	(?___tmul+2)& (0+255),b
  8968  002358  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8969  00235E  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8970  002364  EC43  F050         	call	_printf	;wreg free
  8971                           
  8972                           ;main.c: 864:                         } else {
  8973  002368  D323               	goto	l1885
  8974  00236A                     l21187:
  8975                           
  8976                           ; BSR set to: 3
  8977                           ;main.c: 865:                             if (OSCheck) {
  8978  00236A  0101               	movlb	1	; () banked
  8979  00236C  51BB               	movf	_OSCheck& (0+255),w,b
  8980  00236E  B4D8               	btfsc	status,2,c
  8981  002370  D155               	goto	l21217
  8982                           
  8983                           ; BSR set to: 1
  8984                           ;main.c: 866:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 350*1) + (rSV2ValveCRT << 1))) {
  8985  002372  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8986  002378  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8987  00237E  0060  F67C  F39F   	movff	_rSV2ValveCRT,??_main
  8988  002384  0060  F680  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  8989  00238A  90D8               	bcf	status,0,c
  8990  00238C  0103               	movlb	3	; () banked
  8991  00238E  379F               	rlcf	??_main& (0+255),f,b
  8992  002390  37A0               	rlcf	(??_main+1)& (0+255),f,b
  8993  002392  0E5E               	movlw	94
  8994  002394  259F               	addwf	??_main& (0+255),w,b
  8995  002396  0100               	movlb	0	; () banked
  8996  002398  6F95               	movwf	timeElapsed@duration& (0+255),b
  8997  00239A  0E01               	movlw	1
  8998  00239C  0103               	movlb	3	; () banked
  8999  00239E  21A0               	addwfc	(??_main+1)& (0+255),w,b
  9000  0023A0  0100               	movlb	0	; () banked
  9001  0023A2  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  9002  0023A4  ECE4  F04E         	call	_timeElapsed	;wreg free
  9003  0023A8  0900               	iorlw	0
  9004  0023AA  B4D8               	btfsc	status,2,c
  9005  0023AC  D301               	goto	l1885
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;main.c: 868:                                     aCaptGetResult(Flt0PSensor, &pAvgUShor
      +                          t);
  9009  0023AE  0EE7               	movlw	low _pAvgUShort
  9010  0023B0  0101               	movlb	1	; () banked
  9011  0023B2  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9012  0023B4  0E01               	movlw	high _pAvgUShort
  9013  0023B6  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9014  0023B8  0E03               	movlw	3
  9015  0023BA  EC5A  F033         	call	_aCaptGetResult
  9016                           
  9017                           ;main.c: 869:                                     pPlatExp = pAvgUShort;
  9018  0023BE  C1E7  F2D9         	movff	_pAvgUShort,_pPlatExp
  9019  0023C2  C1E8  F2DA         	movff	_pAvgUShort+1,_pPlatExp+1
  9020                           
  9021                           ;main.c: 871:                                     tmpVal = pPlatExp - pValveActuation;
  9022  0023C6  0101               	movlb	1	; () banked
  9023  0023C8  51E1               	movf	_pValveActuation& (0+255),w,b
  9024  0023CA  0102               	movlb	2	; () banked
  9025  0023CC  5DD9               	subwf	_pPlatExp& (0+255),w,b
  9026  0023CE  0103               	movlb	3	; () banked
  9027  0023D0  6FC7               	movwf	main@tmpVal& (0+255),b
  9028  0023D2  0101               	movlb	1	; () banked
  9029  0023D4  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
  9030  0023D6  0102               	movlb	2	; () banked
  9031  0023D8  59DA               	subwfb	(_pPlatExp+1)& (0+255),w,b
  9032  0023DA  0103               	movlb	3	; () banked
  9033  0023DC  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  9034                           
  9035                           ; BSR set to: 3
  9036                           ;main.c: 872:                                     pExpOS = (3 * pExpOS + tmpVal)>>2;
  9037  0023DE  0060  F774  F09B   	movff	_pExpOS,___wmul@multiplier
  9038  0023E4  0060  F778  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  9039  0023EA  0E00               	movlw	0
  9040  0023EC  0100               	movlb	0	; () banked
  9041  0023EE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9042  0023F0  0E03               	movlw	3
  9043  0023F2  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  9044  0023F4  ECFC  F04E         	call	___wmul	;wreg free
  9045  0023F8  0103               	movlb	3	; () banked
  9046  0023FA  51C7               	movf	main@tmpVal& (0+255),w,b
  9047  0023FC  0100               	movlb	0	; () banked
  9048  0023FE  279B               	addwf	?___wmul& (0+255),f,b
  9049  002400  0103               	movlb	3	; () banked
  9050  002402  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  9051  002404  0100               	movlb	0	; () banked
  9052  002406  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  9053  002408  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9054  00240A  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9055  00240C  339B               	rrcf	?___wmul& (0+255),f,b
  9056  00240E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9057  002410  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9058  002412  339B               	rrcf	?___wmul& (0+255),f,b
  9059  002414  0060  F26C  F1DD   	movff	?___wmul,_pExpOS
  9060  00241A  0060  F270  F1DE   	movff	?___wmul+1,_pExpOS+1
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;main.c: 874:         pPeepErr = pPlatExp - intPEEP;
  9064  002420  0101               	movlb	1	; () banked
  9065  002422  51B3               	movf	_intPEEP& (0+255),w,b
  9066  002424  0102               	movlb	2	; () banked
  9067  002426  5DD9               	subwf	_pPlatExp& (0+255),w,b
  9068  002428  0101               	movlb	1	; () banked
  9069  00242A  6FC9               	movwf	_pPeepErr& (0+255),b
  9070  00242C  51B4               	movf	(_intPEEP+1)& (0+255),w,b
  9071  00242E  0102               	movlb	2	; () banked
  9072  002430  59DA               	subwfb	(_pPlatExp+1)& (0+255),w,b
  9073  002432  0101               	movlb	1	; () banked
  9074  002434  6FCA               	movwf	(_pPeepErr+1)& (0+255),b
  9075                           
  9076                           ; BSR set to: 1
  9077                           ;main.c: 875:         tmpVal = (pPeepErr > 0) ? pPeepErr : -pPeepErr;
  9078  002436  BFCA               	btfsc	(_pPeepErr+1)& (0+255),7,b
  9079  002438  D005               	goto	u23350
  9080  00243A  51CA               	movf	(_pPeepErr+1)& (0+255),w,b
  9081  00243C  E115               	bnz	l1881
  9082  00243E  05C9               	decf	_pPeepErr& (0+255),w,b
  9083  002440  B0D8               	btfsc	status,0,c
  9084  002442  D012               	goto	l1881
  9085  002444                     u23350:
  9086                           
  9087                           ; BSR set to: 1
  9088  002444  0060  F724  F39F   	movff	_pPeepErr,??_main
  9089  00244A  0060  F728  F3A0   	movff	_pPeepErr+1,??_main+1
  9090  002450  0103               	movlb	3	; () banked
  9091  002452  1F9F               	comf	??_main& (0+255),f,b
  9092  002454  1FA0               	comf	(??_main+1)& (0+255),f,b
  9093  002456  4B9F               	infsnz	??_main& (0+255),f,b
  9094  002458  2BA0               	incf	(??_main+1)& (0+255),f,b
  9095  00245A  0060  FE7C  F3C7   	movff	??_main,main@tmpVal
  9096  002460  0060  FE80  F3C8   	movff	??_main+1,main@tmpVal+1
  9097  002466  D006               	goto	l21205
  9098  002468                     l1881:
  9099                           
  9100                           ; BSR set to: 1
  9101  002468  0060  F724  F3C7   	movff	_pPeepErr,main@tmpVal
  9102  00246E  0060  F728  F3C8   	movff	_pPeepErr+1,main@tmpVal+1
  9103  002474                     l21205:
  9104                           
  9105                           ;main.c: 876:         pPeepOsc = (3*pPeepOsc + tmpVal)>>2;
  9106  002474  0060  F71C  F09B   	movff	_pPeepOsc,___wmul@multiplier
  9107  00247A  0060  F720  F09C   	movff	_pPeepOsc+1,___wmul@multiplier+1
  9108  002480  0E00               	movlw	0
  9109  002482  0100               	movlb	0	; () banked
  9110  002484  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9111  002486  0E03               	movlw	3
  9112  002488  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  9113  00248A  ECFC  F04E         	call	___wmul	;wreg free
  9114  00248E  0103               	movlb	3	; () banked
  9115  002490  51C7               	movf	main@tmpVal& (0+255),w,b
  9116  002492  0100               	movlb	0	; () banked
  9117  002494  279B               	addwf	?___wmul& (0+255),f,b
  9118  002496  0103               	movlb	3	; () banked
  9119  002498  51C8               	movf	(main@tmpVal+1)& (0+255),w,b
  9120  00249A  0100               	movlb	0	; () banked
  9121  00249C  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  9122  00249E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9123  0024A0  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9124  0024A2  339B               	rrcf	?___wmul& (0+255),f,b
  9125  0024A4  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9126  0024A6  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9127  0024A8  339B               	rrcf	?___wmul& (0+255),f,b
  9128  0024AA  0060  F26C  F1C7   	movff	?___wmul,_pPeepOsc
  9129  0024B0  0060  F270  F1C8   	movff	?___wmul+1,_pPeepOsc+1
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;main.c: 878:         if (pPeepOsc > ((int16_t) ((0.045*4096+2)/5)*2)) {
  9133  0024B6  0101               	movlb	1	; () banked
  9134  0024B8  BFC8               	btfsc	(_pPeepOsc+1)& (0+255),7,b
  9135  0024BA  D00A               	goto	l21211
  9136  0024BC  51C8               	movf	(_pPeepOsc+1)& (0+255),w,b
  9137  0024BE  E104               	bnz	u23360
  9138  0024C0  0E4B               	movlw	75
  9139  0024C2  5DC7               	subwf	_pPeepOsc& (0+255),w,b
  9140  0024C4  A0D8               	btfss	status,0,c
  9141  0024C6  D004               	goto	l21211
  9142  0024C8                     u23360:
  9143                           
  9144                           ; BSR set to: 1
  9145                           ;main.c: 879:           pPeepOsc = ((int16_t) ((0.045*4096+2)/5)*2);
  9146  0024C8  0E00               	movlw	0
  9147  0024CA  6FC8               	movwf	(_pPeepOsc+1)& (0+255),b
  9148  0024CC  0E4A               	movlw	74
  9149  0024CE  6FC7               	movwf	_pPeepOsc& (0+255),b
  9150  0024D0                     l21211:
  9151                           
  9152                           ; BSR set to: 1
  9153                           ;main.c: 882:                                     aCaptRstFlt(Flt2PSensor);
  9154  0024D0  0E05               	movlw	5
  9155  0024D2  EC44  F03D         	call	_aCaptRstFlt
  9156                           
  9157                           ; BSR set to: 57
  9158                           ;main.c: 883:                                     aCaptRstFlt(Flt3PSensor);
  9159  0024D6  0E06               	movlw	6
  9160  0024D8  EC44  F03D         	call	_aCaptRstFlt
  9161                           
  9162                           ;main.c: 884:                                     OSCheck = 0;
  9163  0024DC  0E00               	movlw	0
  9164  0024DE  0101               	movlb	1	; () banked
  9165  0024E0  6FBB               	movwf	_OSCheck& (0+255),b
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;main.c: 885:                                     printf ("PE OSC T %d - Pi %d P0 %d Pee
      +                          pE %d PeepOsc %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.
      +                          045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2
      +                          )/5)*1))*((int24_t) pAvgUShort))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pPeepErr))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((i
      +                          nt24_t) pPeepOsc))>>8)));
  9169  0024E2  0E27               	movlw	low STR_24
  9170  0024E4  6F46               	movwf	printf@fmt& (0+255),b
  9171  0024E6  0EFB               	movlw	high STR_24
  9172  0024E8  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9173  0024EA  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  9174  0024F0  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9175  0024F6  ECD5  F052         	call	_timeGet	;wreg free
  9176  0024FA  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9177  002500  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9178  002506  EC80  F04E         	call	_timeDiff	;wreg free
  9179  00250A  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9180  002510  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9181  002516  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  9182  00251C  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9183  002522  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9184  002524  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9185  002526  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9186  002528  0E45               	movlw	69
  9187  00252A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9188  00252C  0E00               	movlw	0
  9189  00252E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9190  002530  0E00               	movlw	0
  9191  002532  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9192  002534  EC1F  F04B         	call	___tmul	;wreg free
  9193  002538  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9194  00253E  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9195  002544  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9196  002546  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9197  002548  698D               	setf	(?___tmul+2)& (0+255),b
  9198  00254A  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9199  002550  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9200  002556  0060  F79C  F08B   	movff	_pAvgUShort,___tmul@multiplier
  9201  00255C  0060  F7A0  F08C   	movff	_pAvgUShort+1,___tmul@multiplier+1
  9202  002562  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9203  002564  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9204  002566  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9205  002568  0E45               	movlw	69
  9206  00256A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9207  00256C  0E00               	movlw	0
  9208  00256E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9209  002570  0E00               	movlw	0
  9210  002572  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9211  002574  EC1F  F04B         	call	___tmul	;wreg free
  9212  002578  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9213  00257E  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9214  002584  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9215  002586  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9216  002588  698D               	setf	(?___tmul+2)& (0+255),b
  9217  00258A  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9218  002590  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9219  002596  0060  F724  F08B   	movff	_pPeepErr,___tmul@multiplier
  9220  00259C  0060  F728  F08C   	movff	_pPeepErr+1,___tmul@multiplier+1
  9221  0025A2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9222  0025A4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9223  0025A6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9224  0025A8  0E45               	movlw	69
  9225  0025AA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9226  0025AC  0E00               	movlw	0
  9227  0025AE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9228  0025B0  0E00               	movlw	0
  9229  0025B2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9230  0025B4  EC1F  F04B         	call	___tmul	;wreg free
  9231  0025B8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9232  0025BE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9233  0025C4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9234  0025C6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9235  0025C8  698D               	setf	(?___tmul+2)& (0+255),b
  9236  0025CA  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  9237  0025D0  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  9238  0025D6  0060  F71C  F08B   	movff	_pPeepOsc,___tmul@multiplier
  9239  0025DC  0060  F720  F08C   	movff	_pPeepOsc+1,___tmul@multiplier+1
  9240  0025E2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9241  0025E4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9242  0025E6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9243  0025E8  0E45               	movlw	69
  9244  0025EA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9245  0025EC  0E00               	movlw	0
  9246  0025EE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9247  0025F0  0E00               	movlw	0
  9248  0025F2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9249  0025F4  EC1F  F04B         	call	___tmul	;wreg free
  9250  0025F8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9251  0025FE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9252  002604  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9253  002606  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9254  002608  698D               	setf	(?___tmul+2)& (0+255),b
  9255  00260A  0060  F22C  F150   	movff	?___tmul,?_printf+10
  9256  002610  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  9257  002616  EC43  F050         	call	_printf	;wreg free
  9258  00261A  D1CA               	goto	l1885
  9259  00261C                     l21217:
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;main.c: 892:                                 aCaptGetResult(Flt2PSensor, &bdP1);
  9263  00261C  0EE5               	movlw	low _bdP1
  9264  00261E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9265  002620  0E01               	movlw	high _bdP1
  9266  002622  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9267  002624  0E05               	movlw	5
  9268  002626  EC5A  F033         	call	_aCaptGetResult
  9269                           
  9270                           ;main.c: 893:                                 aCaptGetResult(Flt3PSensor, &bdP2);
  9271  00262A  0EDB               	movlw	low _bdP2
  9272  00262C  0101               	movlb	1	; () banked
  9273  00262E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9274  002630  0E02               	movlw	high _bdP2
  9275  002632  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9276  002634  0E06               	movlw	6
  9277  002636  EC5A  F033         	call	_aCaptGetResult
  9278                           
  9279                           ;main.c: 894:                                 if (((bdP1 + intBdTrig) < bdP2) || (keyPee
      +                          k() == 4)) {
  9280  00263A  0102               	movlb	2	; () banked
  9281  00263C  5150               	movf	_intBdTrig& (0+255),w,b
  9282  00263E  0101               	movlb	1	; () banked
  9283  002640  25E5               	addwf	_bdP1& (0+255),w,b
  9284  002642  0103               	movlb	3	; () banked
  9285  002644  6F9F               	movwf	??_main& (0+255),b
  9286  002646  0102               	movlb	2	; () banked
  9287  002648  5151               	movf	(_intBdTrig+1)& (0+255),w,b
  9288  00264A  0101               	movlb	1	; () banked
  9289  00264C  21E6               	addwfc	(_bdP1+1)& (0+255),w,b
  9290  00264E  0103               	movlb	3	; () banked
  9291  002650  6FA0               	movwf	(??_main+1)& (0+255),b
  9292  002652  0102               	movlb	2	; () banked
  9293  002654  51DB               	movf	_bdP2& (0+255),w,b
  9294  002656  0103               	movlb	3	; () banked
  9295  002658  5D9F               	subwf	??_main& (0+255),w,b
  9296  00265A  51A0               	movf	(??_main+1)& (0+255),w,b
  9297  00265C  0A80               	xorlw	128
  9298  00265E  6FA1               	movwf	(??_main+2)& (0+255),b
  9299  002660  0102               	movlb	2	; () banked
  9300  002662  51DC               	movf	(_bdP2+1)& (0+255),w,b
  9301  002664  0A80               	xorlw	128
  9302  002666  0103               	movlb	3	; () banked
  9303  002668  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9304  00266A  A0D8               	btfss	status,0,c
  9305  00266C  D005               	goto	u23380
  9306                           
  9307                           ; BSR set to: 3
  9308  00266E  ECEE  F047         	call	_keyPeek	;wreg free
  9309  002672  0A04               	xorlw	4
  9310  002674  A4D8               	btfss	status,2,c
  9311  002676  D0A6               	goto	l21235
  9312  002678                     u23380:
  9313                           
  9314                           ;main.c: 896:                                     printf ("BD VO T %d - Pi %d P50 %d P20
      +                          00 %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) bd
      +                          P1))>>8)));
  9315  002678  0EF3               	movlw	low STR_25
  9316  00267A  0101               	movlb	1	; () banked
  9317  00267C  6F46               	movwf	printf@fmt& (0+255),b
  9318  00267E  0EFB               	movlw	high STR_25
  9319  002680  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9320  002682  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  9321  002688  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9322  00268E  ECD5  F052         	call	_timeGet	;wreg free
  9323  002692  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9324  002698  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9325  00269E  EC80  F04E         	call	_timeDiff	;wreg free
  9326  0026A2  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9327  0026A8  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9328  0026AE  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  9329  0026B4  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9330  0026BA  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9331  0026BC  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9332  0026BE  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9333  0026C0  0E45               	movlw	69
  9334  0026C2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9335  0026C4  0E00               	movlw	0
  9336  0026C6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9337  0026C8  0E00               	movlw	0
  9338  0026CA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9339  0026CC  EC1F  F04B         	call	___tmul	;wreg free
  9340  0026D0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9341  0026D6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9342  0026DC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9343  0026DE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9344  0026E0  698D               	setf	(?___tmul+2)& (0+255),b
  9345  0026E2  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9346  0026E8  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9347  0026EE  0060  F794  F08B   	movff	_bdP1,___tmul@multiplier
  9348  0026F4  0060  F798  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9349  0026FA  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9350  0026FC  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9351  0026FE  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9352  002700  0E45               	movlw	69
  9353  002702  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9354  002704  0E00               	movlw	0
  9355  002706  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9356  002708  0E00               	movlw	0
  9357  00270A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9358  00270C  EC1F  F04B         	call	___tmul	;wreg free
  9359  002710  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9360  002716  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9361  00271C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9362  00271E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9363  002720  698D               	setf	(?___tmul+2)& (0+255),b
  9364  002722  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9365  002728  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9366  00272E  0060  F794  F08B   	movff	_bdP1,___tmul@multiplier
  9367  002734  0060  F798  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9368  00273A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9369  00273C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9370  00273E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9371  002740  0E45               	movlw	69
  9372  002742  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9373  002744  0E00               	movlw	0
  9374  002746  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9375  002748  0E00               	movlw	0
  9376  00274A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9377  00274C  EC1F  F04B         	call	___tmul	;wreg free
  9378  002750  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9379  002756  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9380  00275C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9381  00275E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9382  002760  698D               	setf	(?___tmul+2)& (0+255),b
  9383  002762  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  9384  002768  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  9385  00276E  EC43  F050         	call	_printf	;wreg free
  9386                           
  9387                           ; BSR set to: 2
  9388                           ;main.c: 897:                                     LATDbits.LATD6 = 1;
  9389  002772  8CBD               	bsf	189,6,c	;volatile
  9390                           
  9391                           ; BSR set to: 2
  9392                           ;main.c: 898:                                     if ((bdP1 + intBdTrig) < bdP2) {
  9393  002774  5150               	movf	_intBdTrig& (0+255),w,b
  9394  002776  0101               	movlb	1	; () banked
  9395  002778  25E5               	addwf	_bdP1& (0+255),w,b
  9396  00277A  0103               	movlb	3	; () banked
  9397  00277C  6F9F               	movwf	??_main& (0+255),b
  9398  00277E  0102               	movlb	2	; () banked
  9399  002780  5151               	movf	(_intBdTrig+1)& (0+255),w,b
  9400  002782  0101               	movlb	1	; () banked
  9401  002784  21E6               	addwfc	(_bdP1+1)& (0+255),w,b
  9402  002786  0103               	movlb	3	; () banked
  9403  002788  6FA0               	movwf	(??_main+1)& (0+255),b
  9404  00278A  0102               	movlb	2	; () banked
  9405  00278C  51DB               	movf	_bdP2& (0+255),w,b
  9406  00278E  0103               	movlb	3	; () banked
  9407  002790  5D9F               	subwf	??_main& (0+255),w,b
  9408  002792  51A0               	movf	(??_main+1)& (0+255),w,b
  9409  002794  0A80               	xorlw	128
  9410  002796  6FA1               	movwf	(??_main+2)& (0+255),b
  9411  002798  0102               	movlb	2	; () banked
  9412  00279A  51DC               	movf	(_bdP2+1)& (0+255),w,b
  9413  00279C  0A80               	xorlw	128
  9414  00279E  0103               	movlb	3	; () banked
  9415  0027A0  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9416  0027A2  B0D8               	btfsc	status,0,c
  9417  0027A4  D1C5               	goto	l21273
  9418                           
  9419                           ; BSR set to: 3
  9420                           ;main.c: 899:                                         sBreath = 1;
  9421  0027A6  0E01               	movlw	1
  9422  0027A8  0101               	movlb	1	; () banked
  9423  0027AA  6FC1               	movwf	_sBreath& (0+255),b
  9424                           
  9425                           ; BSR set to: 1
  9426                           ;main.c: 900:                                         rCycleTime = timeGet();
  9427  0027AC  ECD5  F052         	call	_timeGet	;wreg free
  9428  0027B0  0060  F24C  F1CB   	movff	?_timeGet,_rCycleTime
  9429  0027B6  0060  F250  F1CC   	movff	?_timeGet+1,_rCycleTime+1
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;main.c: 901:                                         bRateUpdt(1);
  9433  0027BC  0E01               	movlw	1
  9434  0027BE  EC05  F040         	call	_bRateUpdt
  9435  0027C2  D1B6               	goto	l21273
  9436  0027C4                     l21235:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;main.c: 907:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  9440  0027C4  0060  F694  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  9441  0027CA  0060  F698  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  9442  0027D0  0060  F67C  F39F   	movff	_rSV2ValveCRT,??_main
  9443  0027D6  0060  F680  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  9444  0027DC  0103               	movlb	3	; () banked
  9445  0027DE  90D8               	bcf	status,0,c
  9446  0027E0  379F               	rlcf	??_main& (0+255),f,b
  9447  0027E2  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9448  0027E4  90D8               	bcf	status,0,c
  9449  0027E6  379F               	rlcf	??_main& (0+255),f,b
  9450  0027E8  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9451  0027EA  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  9452  0027F0  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  9453  0027F6  ECE4  F04E         	call	_timeElapsed	;wreg free
  9454  0027FA  0900               	iorlw	0
  9455  0027FC  B4D8               	btfsc	status,2,c
  9456  0027FE  D0D8               	goto	l1885
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;main.c: 908:                                     if (QuantaCheck) {
  9460  002800  0101               	movlb	1	; () banked
  9461  002802  51BA               	movf	_QuantaCheck& (0+255),w,b
  9462  002804  B4D8               	btfsc	status,2,c
  9463  002806  D03F               	goto	l21253
  9464                           
  9465                           ; BSR set to: 1
  9466                           ;main.c: 909:                                         QuantaCheck = 0;
  9467  002808  0E00               	movlw	0
  9468  00280A  6FBA               	movwf	_QuantaCheck& (0+255),b
  9469                           
  9470                           ; BSR set to: 1
  9471                           ;main.c: 910:                                         tmpVal = (bdP1 - pValveActuation);
  9472  00280C  51E1               	movf	_pValveActuation& (0+255),w,b
  9473  00280E  5DE5               	subwf	_bdP1& (0+255),w,b
  9474  002810  0103               	movlb	3	; () banked
  9475  002812  6FC7               	movwf	main@tmpVal& (0+255),b
  9476  002814  0101               	movlb	1	; () banked
  9477  002816  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
  9478  002818  59E6               	subwfb	(_bdP1+1)& (0+255),w,b
  9479  00281A  0103               	movlb	3	; () banked
  9480  00281C  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  9481                           
  9482                           ; BSR set to: 3
  9483                           ;main.c: 911:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  9484  00281E  BFC8               	btfsc	(main@tmpVal+1)& (0+255),7,b
  9485  002820  D00A               	goto	l21247
  9486  002822  0E29               	movlw	41
  9487  002824  5DC7               	subwf	main@tmpVal& (0+255),w,b
  9488  002826  0E01               	movlw	1
  9489  002828  59C8               	subwfb	(main@tmpVal+1)& (0+255),w,b
  9490  00282A  A0D8               	btfss	status,0,c
  9491  00282C  D004               	goto	l21247
  9492                           
  9493                           ; BSR set to: 3
  9494                           ;main.c: 912:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  9495  00282E  0E01               	movlw	1
  9496  002830  6FC8               	movwf	(main@tmpVal+1)& (0+255),b
  9497  002832  0E28               	movlw	40
  9498  002834  6FC7               	movwf	main@tmpVal& (0+255),b
  9499  002836                     l21247:
  9500                           
  9501                           ; BSR set to: 3
  9502                           ;main.c: 915:                                         pQuantaExp = (3 * tmpVal + pQuanta
      +                          Exp)>>2;
  9503  002836  0060  FF1C  F09B   	movff	main@tmpVal,___wmul@multiplier
  9504  00283C  0060  FF20  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  9505  002842  0E00               	movlw	0
  9506  002844  0100               	movlb	0	; () banked
  9507  002846  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9508  002848  0E03               	movlw	3
  9509  00284A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  9510  00284C  ECFC  F04E         	call	___wmul	;wreg free
  9511  002850  0101               	movlb	1	; () banked
  9512  002852  51CF               	movf	_pQuantaExp& (0+255),w,b
  9513  002854  0100               	movlb	0	; () banked
  9514  002856  279B               	addwf	?___wmul& (0+255),f,b
  9515  002858  0101               	movlb	1	; () banked
  9516  00285A  51D0               	movf	(_pQuantaExp+1)& (0+255),w,b
  9517  00285C  0100               	movlb	0	; () banked
  9518  00285E  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  9519  002860  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9520  002862  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9521  002864  339B               	rrcf	?___wmul& (0+255),f,b
  9522  002866  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  9523  002868  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  9524  00286A  339B               	rrcf	?___wmul& (0+255),f,b
  9525  00286C  0060  F26C  F1CF   	movff	?___wmul,_pQuantaExp
  9526  002872  0060  F270  F1D0   	movff	?___wmul+1,_pQuantaExp+1
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;main.c: 916:                                         if (pQuantaExp < 0) {
  9530  002878  0101               	movlb	1	; () banked
  9531  00287A  AFD0               	btfss	(_pQuantaExp+1)& (0+255),7,b
  9532  00287C  D004               	goto	l21253
  9533                           
  9534                           ; BSR set to: 1
  9535                           ;main.c: 917:                                             pQuantaExp = 0;
  9536  00287E  0E00               	movlw	0
  9537  002880  6FD0               	movwf	(_pQuantaExp+1)& (0+255),b
  9538  002882  0E00               	movlw	0
  9539  002884  6FCF               	movwf	_pQuantaExp& (0+255),b
  9540  002886                     l21253:
  9541                           
  9542                           ; BSR set to: 1
  9543                           ;main.c: 920:                                     if ((bdP1 + (pQuantaExp >> 1)) < (intP
      +                          EEP - ((int16_t) ((0.045*4096+2)/5)*1))) {
  9544  002886  0EDB               	movlw	219
  9545  002888  0103               	movlb	3	; () banked
  9546  00288A  6F9F               	movwf	??_main& (0+255),b
  9547  00288C  0EFF               	movlw	255
  9548  00288E  6FA0               	movwf	(??_main+1)& (0+255),b
  9549  002890  0060  F6CC  F3A1   	movff	_intPEEP,??_main+2
  9550  002896  0060  F6D0  F3A2   	movff	_intPEEP+1,??_main+3
  9551  00289C  519F               	movf	??_main& (0+255),w,b
  9552  00289E  27A1               	addwf	(??_main+2)& (0+255),f,b
  9553  0028A0  51A0               	movf	(??_main+1)& (0+255),w,b
  9554  0028A2  23A2               	addwfc	(??_main+3)& (0+255),f,b
  9555  0028A4  0101               	movlb	1	; () banked
  9556  0028A6  35D0               	rlcf	(_pQuantaExp+1)& (0+255),w,b
  9557  0028A8  31D0               	rrcf	(_pQuantaExp+1)& (0+255),w,b
  9558  0028AA  0103               	movlb	3	; () banked
  9559  0028AC  6FA4               	movwf	(??_main+5)& (0+255),b
  9560  0028AE  0101               	movlb	1	; () banked
  9561  0028B0  31CF               	rrcf	_pQuantaExp& (0+255),w,b
  9562  0028B2  0103               	movlb	3	; () banked
  9563  0028B4  6FA3               	movwf	(??_main+4)& (0+255),b
  9564  0028B6  0101               	movlb	1	; () banked
  9565  0028B8  51E5               	movf	_bdP1& (0+255),w,b
  9566  0028BA  0103               	movlb	3	; () banked
  9567  0028BC  27A3               	addwf	(??_main+4)& (0+255),f,b
  9568  0028BE  0101               	movlb	1	; () banked
  9569  0028C0  51E6               	movf	(_bdP1+1)& (0+255),w,b
  9570  0028C2  0103               	movlb	3	; () banked
  9571  0028C4  23A4               	addwfc	(??_main+5)& (0+255),f,b
  9572  0028C6  51A1               	movf	(??_main+2)& (0+255),w,b
  9573  0028C8  5DA3               	subwf	(??_main+4)& (0+255),w,b
  9574  0028CA  51A4               	movf	(??_main+5)& (0+255),w,b
  9575  0028CC  0A80               	xorlw	128
  9576  0028CE  6FA5               	movwf	(??_main+6)& (0+255),b
  9577  0028D0  51A2               	movf	(??_main+3)& (0+255),w,b
  9578  0028D2  0A80               	xorlw	128
  9579  0028D4  59A5               	subwfb	(??_main+6)& (0+255),w,b
  9580  0028D6  B0D8               	btfsc	status,0,c
  9581  0028D8  D06B               	goto	l1885
  9582                           
  9583                           ; BSR set to: 3
  9584                           ;main.c: 921:                                         LATAbits.LATA2 = 0;LATCbits.LATC3 
      +                          = 1;
  9585  0028DA  94BA               	bcf	186,2,c	;volatile
  9586  0028DC  86BC               	bsf	188,3,c	;volatile
  9587                           
  9588                           ; BSR set to: 3
  9589                           ;main.c: 922:                                         rValveActuationTstamp = timeGet();
  9590  0028DE  ECD5  F052         	call	_timeGet	;wreg free
  9591  0028E2  0060  F24C  F1A5   	movff	?_timeGet,_rValveActuationTstamp
  9592  0028E8  0060  F250  F1A6   	movff	?_timeGet+1,_rValveActuationTstamp+1
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;main.c: 923:                                         QuantaCheck = 1;
  9596  0028EE  0E01               	movlw	1
  9597  0028F0  0101               	movlb	1	; () banked
  9598  0028F2  6FBA               	movwf	_QuantaCheck& (0+255),b
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;main.c: 924:                                         pValveActuation = pInst;
  9602  0028F4  C1EB  F1E1         	movff	_pInst,_pValveActuation
  9603  0028F8  C1EC  F1E2         	movff	_pInst+1,_pValveActuation+1
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;main.c: 925:                                         printf ("PE VO T %d - Pi %d\n", ti
      +                          meDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)));
  9607  0028FC  0EE9               	movlw	low STR_26
  9608  0028FE  6F46               	movwf	printf@fmt& (0+255),b
  9609  002900  0EFC               	movlw	high STR_26
  9610  002902  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9611  002904  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  9612  00290A  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9613  002910  0060  F694  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  9614  002916  0060  F698  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  9615  00291C  EC80  F04E         	call	_timeDiff	;wreg free
  9616  002920  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9617  002926  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9618  00292C  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  9619  002932  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9620  002938  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9621  00293A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9622  00293C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9623  00293E  0E45               	movlw	69
  9624  002940  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9625  002942  0E00               	movlw	0
  9626  002944  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9627  002946  0E00               	movlw	0
  9628  002948  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9629  00294A  EC1F  F04B         	call	___tmul	;wreg free
  9630  00294E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9631  002954  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9632  00295A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9633  00295C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9634  00295E  698D               	setf	(?___tmul+2)& (0+255),b
  9635  002960  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9636  002966  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9637  00296C  0060  F794  F08B   	movff	_bdP1,___tmul@multiplier
  9638  002972  0060  F798  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9639  002978  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9640  00297A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9641  00297C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9642  00297E  0E45               	movlw	69
  9643  002980  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9644  002982  0E00               	movlw	0
  9645  002984  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9646  002986  0E00               	movlw	0
  9647  002988  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9648  00298A  EC1F  F04B         	call	___tmul	;wreg free
  9649  00298E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9650  002994  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9651  00299A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9652  00299C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9653  00299E  698D               	setf	(?___tmul+2)& (0+255),b
  9654  0029A0  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9655  0029A6  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9656  0029AC  EC43  F050         	call	_printf	;wreg free
  9657  0029B0                     l1885:
  9658                           
  9659                           ;main.c: 932:                         screenMng();
  9660                           
  9661                           ; BSR set to: 3
  9662  0029B0  EC2F  F01A         	call	_screenMng	;wreg free
  9663                           
  9664                           ;main.c: 933:                         MenuMng();
  9665  0029B4  ECA2  F015         	call	_MenuMng	;wreg free
  9666  0029B8                     l21269:
  9667                           
  9668                           ;main.c: 937:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  9669  0029B8  0EB8               	movlw	low main@printTime
  9670  0029BA  0100               	movlb	0	; () banked
  9671  0029BC  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  9672  0029BE  0E03               	movlw	high main@printTime
  9673  0029C0  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  9674  0029C2  0E00               	movlw	0
  9675  0029C4  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  9676  0029C6  0E14               	movlw	20
  9677  0029C8  6F95               	movwf	timeElapsedR@duration& (0+255),b
  9678  0029CA  ECBE  F047         	call	_timeElapsedR	;wreg free
  9679  0029CE  0900               	iorlw	0
  9680  0029D0  B4D8               	btfsc	status,2,c
  9681  0029D2  EFBA  F00F         	goto	l21111
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;main.c: 938:         int16_t pAux;;main.c: 939:                     aCaptGetResult(VolP
      +                          Sensor, &pAux);
  9685  0029D6  0EC5               	movlw	low main@pAux_3859
  9686  0029D8  0101               	movlb	1	; () banked
  9687  0029DA  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9688  0029DC  0E03               	movlw	high main@pAux_3859
  9689  0029DE  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9690  0029E0  0E01               	movlw	1
  9691  0029E2  EC5A  F033         	call	_aCaptGetResult
  9692                           
  9693                           ;main.c: 940:                     printf ("PE T %d - Pi %d R %d Pep %d POS %d PQ %d\n", 
      +                          timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) pInst))>>8)), rSV3ValveORT, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1)
      +                          )*((int24_t) pPlatExp))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int
      +                          24_t) pExpOS))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pQu
      +                          antaExp))>>8)) );
  9694  0029E6  0E56               	movlw	low STR_27
  9695  0029E8  0101               	movlb	1	; () banked
  9696  0029EA  6F46               	movwf	printf@fmt& (0+255),b
  9697  0029EC  0EFB               	movlw	high STR_27
  9698  0029EE  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9699  0029F0  0060  F72C  F095   	movff	_rCycleTime,timeDiff@startT
  9700  0029F6  0060  F730  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9701  0029FC  ECD5  F052         	call	_timeGet	;wreg free
  9702  002A00  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9703  002A06  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9704  002A0C  EC80  F04E         	call	_timeDiff	;wreg free
  9705  002A10  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9706  002A16  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9707  002A1C  0060  F7AC  F08B   	movff	_pInst,___tmul@multiplier
  9708  002A22  0060  F7B0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9709  002A28  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9710  002A2A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9711  002A2C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9712  002A2E  0E45               	movlw	69
  9713  002A30  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9714  002A32  0E00               	movlw	0
  9715  002A34  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9716  002A36  0E00               	movlw	0
  9717  002A38  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9718  002A3A  EC1F  F04B         	call	___tmul	;wreg free
  9719  002A3E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9720  002A44  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9721  002A4A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9722  002A4C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9723  002A4E  698D               	setf	(?___tmul+2)& (0+255),b
  9724  002A50  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9725  002A56  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9726  002A5C  0060  F674  F14C   	movff	_rSV3ValveORT,?_printf+6
  9727  002A62  0060  F678  F14D   	movff	_rSV3ValveORT+1,?_printf+7
  9728  002A68  0060  FB64  F08B   	movff	_pPlatExp,___tmul@multiplier
  9729  002A6E  0060  FB68  F08C   	movff	_pPlatExp+1,___tmul@multiplier+1
  9730  002A74  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9731  002A76  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9732  002A78  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9733  002A7A  0E45               	movlw	69
  9734  002A7C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9735  002A7E  0E00               	movlw	0
  9736  002A80  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9737  002A82  0E00               	movlw	0
  9738  002A84  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9739  002A86  EC1F  F04B         	call	___tmul	;wreg free
  9740  002A8A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9741  002A90  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9742  002A96  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9743  002A98  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9744  002A9A  698D               	setf	(?___tmul+2)& (0+255),b
  9745  002A9C  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  9746  002AA2  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  9747  002AA8  0060  F774  F08B   	movff	_pExpOS,___tmul@multiplier
  9748  002AAE  0060  F778  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  9749  002AB4  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9750  002AB6  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9751  002AB8  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9752  002ABA  0E45               	movlw	69
  9753  002ABC  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9754  002ABE  0E00               	movlw	0
  9755  002AC0  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9756  002AC2  0E00               	movlw	0
  9757  002AC4  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9758  002AC6  EC1F  F04B         	call	___tmul	;wreg free
  9759  002ACA  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9760  002AD0  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9761  002AD6  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9762  002AD8  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9763  002ADA  698D               	setf	(?___tmul+2)& (0+255),b
  9764  002ADC  0060  F22C  F150   	movff	?___tmul,?_printf+10
  9765  002AE2  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  9766  002AE8  0060  F73C  F08B   	movff	_pQuantaExp,___tmul@multiplier
  9767  002AEE  0060  F740  F08C   	movff	_pQuantaExp+1,___tmul@multiplier+1
  9768  002AF4  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9769  002AF6  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9770  002AF8  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9771  002AFA  0E45               	movlw	69
  9772  002AFC  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9773  002AFE  0E00               	movlw	0
  9774  002B00  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9775  002B02  0E00               	movlw	0
  9776  002B04  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9777  002B06  EC1F  F04B         	call	___tmul	;wreg free
  9778  002B0A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9779  002B10  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9780  002B16  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9781  002B18  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9782  002B1A  698D               	setf	(?___tmul+2)& (0+255),b
  9783  002B1C  0060  F22C  F152   	movff	?___tmul,?_printf+12
  9784  002B22  0060  F230  F153   	movff	?___tmul+1,?_printf+13
  9785  002B28  EC43  F050         	call	_printf	;wreg free
  9786  002B2C  EFBA  F00F         	goto	l21111
  9787  002B30                     l21273:
  9788                           
  9789                           ;main.c: 372:         while (ctrlStatus != CTRL_SLEEP) {
  9790  002B30  0E03               	movlw	3
  9791  002B32  0101               	movlb	1	; () banked
  9792  002B34  19C0               	xorwf	_ctrlStatus& (0+255),w,b
  9793  002B36  A4D8               	btfss	status,2,c
  9794  002B38  EFA2  F001         	goto	l1743
  9795                           
  9796                           ; BSR set to: 1
  9797                           ;main.c: 983:         CtrlPowerOff();
  9798  002B3C  ECD3  F042         	call	_CtrlPowerOff	;wreg free
  9799  002B40  EF7F  F000         	goto	l20521
  9800  002B44                     __end_of_main:
  9801                           	opt callstack 0
  9802                           
  9803 ;; *************** function _vMeasureInit *****************
  9804 ;; Defined at:
  9805 ;;		line 52 in file "vMeasure.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 3F/1
  9816 ;;		On exit  : 3F/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:   18
  9826 ;; This function calls:
  9827 ;;		_TMR2_SetInterruptHandler
  9828 ;;		_TMR2_Start
  9829 ;; This function is called by:
  9830 ;;		_main
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text1
  9835  00A104                     __ptext1:
  9836                           	opt callstack 0
  9837  00A104                     _vMeasureInit:
  9838                           	opt callstack 12
  9839                           
  9840                           ; BSR set to: 1
  9841                           ;vMeasure.c: 53:     volume = 0;
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;incstack = 0
  9845  00A104  0E00               	movlw	0
  9846  00A106  0102               	movlb	2	; () banked
  9847  00A108  6F2B               	movwf	_volume& (0+255),b
  9848  00A10A  0E00               	movlw	0
  9849  00A10C  6F2C               	movwf	(_volume+1)& (0+255),b
  9850  00A10E  0E00               	movlw	0
  9851  00A110  6F2D               	movwf	(_volume+2)& (0+255),b
  9852  00A112  0E00               	movlw	0
  9853  00A114  6F2E               	movwf	(_volume+3)& (0+255),b
  9854                           
  9855                           ; BSR set to: 2
  9856                           ;vMeasure.c: 54:     TMR2_SetInterruptHandler(vMeasureIsr);
  9857  00A116  0EEC               	movlw	low _vMeasureIsr
  9858  00A118  0100               	movlb	0	; () banked
  9859  00A11A  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9860  00A11C  0E86               	movlw	high _vMeasureIsr
  9861  00A11E  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9862  00A120  EC62  F053         	call	_TMR2_SetInterruptHandler	;wreg free
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;vMeasure.c: 55:     TMR2_Start();
  9866  00A124  EC39  F054         	call	_TMR2_Start	;wreg free
  9867                           
  9868                           ; BSR set to: 0
  9869  00A128  0012               	return		;funcret
  9870  00A12A                     __end_of_vMeasureInit:
  9871                           	opt callstack 0
  9872                           
  9873 ;; *************** function _TMR2_Start *****************
  9874 ;; Defined at:
  9875 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		None
  9884 ;; Tracked objects:
  9885 ;;		On entry : 3F/0
  9886 ;;		On exit  : 3F/0
  9887 ;;		Unchanged: 3F/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;Total ram usage:        0 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:   17
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_vMeasureInit
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text2
  9904  00A872                     __ptext2:
  9905                           	opt callstack 0
  9906  00A872                     _TMR2_Start:
  9907                           	opt callstack 12
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;incstack = 0
  9914  00A872  8EAC               	bsf	172,7,c	;volatile
  9915                           
  9916                           ; BSR set to: 0
  9917  00A874  0012               	return		;funcret
  9918  00A876                     __end_of_TMR2_Start:
  9919                           	opt callstack 0
  9920                           
  9921 ;; *************** function _timeInit *****************
  9922 ;; Defined at:
  9923 ;;		line 24 in file "time.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;		None
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 3F/39
  9934 ;;		On exit  : 3F/39
  9935 ;;		Unchanged: 3E/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9941 ;;Total ram usage:        0 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:   18
  9944 ;; This function calls:
  9945 ;;		_TMR0_StartTimer
  9946 ;;		_TMR1_StartTimer
  9947 ;; This function is called by:
  9948 ;;		_main
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text3
  9953  00A7BA                     __ptext3:
  9954                           	opt callstack 0
  9955  00A7BA                     _timeInit:
  9956                           	opt callstack 12
  9957                           
  9958                           ; BSR set to: 57
  9959                           ;time.c: 25:     TMR0_StartTimer();
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;incstack = 0
  9963  00A7BA  EC3D  F054         	call	_TMR0_StartTimer	;wreg free
  9964                           
  9965                           ;time.c: 26:     TMR1_StartTimer();
  9966  00A7BE  EC3B  F054         	call	_TMR1_StartTimer	;wreg free
  9967                           
  9968                           ; BSR set to: 57
  9969  00A7C2  0012               	return		;funcret
  9970  00A7C4                     __end_of_timeInit:
  9971                           	opt callstack 0
  9972                           
  9973 ;; *************** function _TMR1_StartTimer *****************
  9974 ;; Defined at:
  9975 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;		None
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		None
  9984 ;; Tracked objects:
  9985 ;;		On entry : 3F/39
  9986 ;;		On exit  : 3F/39
  9987 ;;		Unchanged: 3E/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;Total ram usage:        0 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:   17
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_timeInit
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text4
 10004  00A876                     __ptext4:
 10005                           	opt callstack 0
 10006  00A876                     _TMR1_StartTimer:
 10007                           	opt callstack 12
 10008                           
 10009                           ; BSR set to: 57
 10010                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
 10011                           
 10012                           ; BSR set to: 57
 10013                           ;incstack = 0
 10014  00A876  80B2               	bsf	178,0,c	;volatile
 10015                           
 10016                           ; BSR set to: 57
 10017  00A878  0012               	return		;funcret
 10018  00A87A                     __end_of_TMR1_StartTimer:
 10019                           	opt callstack 0
 10020                           
 10021 ;; *************** function _TMR0_StartTimer *****************
 10022 ;; Defined at:
 10023 ;;		line 80 in file "mcc_generated_files/tmr0.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		None
 10032 ;; Tracked objects:
 10033 ;;		On entry : 3F/39
 10034 ;;		On exit  : 3F/39
 10035 ;;		Unchanged: 3E/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:   17
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_timeInit
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text5
 10052  00A87A                     __ptext5:
 10053                           	opt callstack 0
 10054  00A87A                     _TMR0_StartTimer:
 10055                           	opt callstack 12
 10056                           
 10057                           ; BSR set to: 57
 10058                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
 10059                           
 10060                           ; BSR set to: 57
 10061                           ;incstack = 0
 10062  00A87A  8EB8               	bsf	184,7,c	;volatile
 10063                           
 10064                           ; BSR set to: 57
 10065  00A87C  0012               	return		;funcret
 10066  00A87E                     __end_of_TMR0_StartTimer:
 10067                           	opt callstack 0
 10068                           
 10069 ;; *************** function _screenInit *****************
 10070 ;; Defined at:
 10071 ;;		line 373 in file "menu.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 3F/0
 10082 ;;		On exit  : 6/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:   23
 10092 ;; This function calls:
 10093 ;;		_LcdI2CInit
 10094 ;;		_blink
 10095 ;;		_clear
 10096 ;;		_printstrblock
 10097 ;;		_setCursor
 10098 ;;		_timeDelayMs
 10099 ;; This function is called by:
 10100 ;;		_main
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text6
 10105  009154                     __ptext6:
 10106                           	opt callstack 0
 10107  009154                     _screenInit:
 10108                           	opt callstack 7
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;menu.c: 374:     LcdI2CInit(0x27, 16, 2);
 10112                           
 10113                           ; BSR set to: 57
 10114                           ;incstack = 0
 10115  009154  0E10               	movlw	16
 10116  009156  6F9F               	movwf	LcdI2CInit@lcd_cols& (0+255),b
 10117  009158  0E02               	movlw	2
 10118  00915A  6FA0               	movwf	LcdI2CInit@lcd_rows& (0+255),b
 10119  00915C  0E27               	movlw	39
 10120  00915E  ECB2  F03C         	call	_LcdI2CInit
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;menu.c: 375:     setCursor(0, 0);
 10124  009162  0E00               	movlw	0
 10125  009164  6F92               	movwf	setCursor@row& (0+255),b
 10126  009166  0E00               	movlw	0
 10127  009168  ECAD  F04C         	call	_setCursor
 10128                           
 10129                           ;menu.c: 376:     printstrblock("OxyVitaEmergency");
 10130  00916C  0EC7               	movlw	low STR_35
 10131  00916E  0100               	movlb	0	; () banked
 10132  009170  6F8F               	movwf	printstrblock@c& (0+255),b
 10133  009172  0EFE               	movlw	high STR_35
 10134  009174  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 10135  009176  ECA8  F050         	call	_printstrblock	;wreg free
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;menu.c: 377:     setCursor(0, 1);
 10139  00917A  0E01               	movlw	1
 10140  00917C  6F92               	movwf	setCursor@row& (0+255),b
 10141  00917E  0E00               	movlw	0
 10142  009180  ECAD  F04C         	call	_setCursor
 10143                           
 10144                           ;menu.c: 378:     printstrblock("Ventilator V1.0 ");
 10145  009184  0EA5               	movlw	low STR_36
 10146  009186  0100               	movlb	0	; () banked
 10147  009188  6F8F               	movwf	printstrblock@c& (0+255),b
 10148  00918A  0EFE               	movlw	high STR_36
 10149  00918C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 10150  00918E  ECA8  F050         	call	_printstrblock	;wreg free
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;menu.c: 379:     timeDelayMs(((time_t) 2000*1));
 10154  009192  0E07               	movlw	7
 10155  009194  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10156  009196  0ED0               	movlw	208
 10157  009198  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10158  00919A  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;menu.c: 380:     clear();
 10162  00919E  EC6D  F052         	call	_clear	;wreg free
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;menu.c: 381:     lcdPrintTR = 1;
 10166  0091A2  0E01               	movlw	1
 10167  0091A4  0101               	movlb	1	; () banked
 10168  0091A6  6FC6               	movwf	_lcdPrintTR& (0+255),b
 10169                           
 10170                           ; BSR set to: 1
 10171                           ;menu.c: 382:     blink();
 10172  0091A8  EC31  F053         	call	_blink	;wreg free
 10173  0091AC  0012               	return		;funcret
 10174  0091AE                     __end_of_screenInit:
 10175                           	opt callstack 0
 10176                           
 10177 ;; *************** function _blink *****************
 10178 ;; Defined at:
 10179 ;;		line 266 in file "LiquidCrystal_I2C.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;		None
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;		None
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10188 ;; Tracked objects:
 10189 ;;		On entry : 3F/1
 10190 ;;		On exit  : 6/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;Total ram usage:        0 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; Hardware stack levels required when called:   21
 10200 ;; This function calls:
 10201 ;;		_command
 10202 ;; This function is called by:
 10203 ;;		_screenInit
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text7
 10208  00A662                     __ptext7:
 10209                           	opt callstack 0
 10210  00A662                     _blink:
 10211                           	opt callstack 8
 10212                           
 10213                           ; BSR set to: 1
 10214                           ;LiquidCrystal_I2C.c: 267:  _displaycontrol |= 0x01;
 10215                           
 10216                           ;incstack = 0
 10217  00A662  0100               	movlb	0	; () banked
 10218  00A664  81CC               	bsf	__displaycontrol& (0+255),0,b
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;LiquidCrystal_I2C.c: 268:  command(0x08 | _displaycontrol);
 10222  00A666  51CC               	movf	__displaycontrol& (0+255),w,b
 10223  00A668  0908               	iorlw	8
 10224  00A66A  EC01  F053         	call	_command
 10225  00A66E  0012               	return		;funcret
 10226  00A670                     __end_of_blink:
 10227                           	opt callstack 0
 10228                           
 10229 ;; *************** function _LcdI2CInit *****************
 10230 ;; Defined at:
 10231 ;;		line 159 in file "LiquidCrystal_I2C.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  lcd_Addr        1    wreg     unsigned char 
 10234 ;;  lcd_cols        1   63[BANK0 ] unsigned char 
 10235 ;;  lcd_rows        1   64[BANK0 ] unsigned char 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  lcd_Addr        1   65[BANK0 ] unsigned char 
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      void 
 10240 ;; Registers used:
 10241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10242 ;; Tracked objects:
 10243 ;;		On entry : 3F/0
 10244 ;;		On exit  : 3F/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;Total ram usage:        3 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:   22
 10254 ;; This function calls:
 10255 ;;		_TMR6_SetInterruptHandler
 10256 ;;		_clear
 10257 ;;		_command
 10258 ;;		_display
 10259 ;;		_expanderWriteBlock
 10260 ;;		_home
 10261 ;;		_send4bits
 10262 ;;		_timeDelayMs
 10263 ;; This function is called by:
 10264 ;;		_screenInit
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           	psect	text8
 10269  007964                     __ptext8:
 10270                           	opt callstack 0
 10271  007964                     _LcdI2CInit:
 10272                           	opt callstack 7
 10273                           
 10274                           ;incstack = 0
 10275                           ;LcdI2CInit@lcd_Addr stored from wreg
 10276  007964  6FA1               	movwf	LcdI2CInit@lcd_Addr& (0+255),b
 10277                           
 10278                           ;LiquidCrystal_I2C.c: 160:     _Addr = lcd_Addr;
 10279  007966  0060  F284  F259   	movff	LcdI2CInit@lcd_Addr,__Addr
 10280                           
 10281                           ;LiquidCrystal_I2C.c: 161:     _cols = lcd_cols;
 10282  00796C  0060  F27C  F258   	movff	LcdI2CInit@lcd_cols,__cols
 10283                           
 10284                           ;LiquidCrystal_I2C.c: 162:     _rows = lcd_rows;
 10285  007972  0060  F280  F257   	movff	LcdI2CInit@lcd_rows,__rows
 10286                           
 10287                           ;LiquidCrystal_I2C.c: 163:     _backlightval = 0x08;
 10288  007978  0E08               	movlw	8
 10289  00797A  0100               	movlb	0	; () banked
 10290  00797C  6FC9               	movwf	__backlightval& (0+255),b	;volatile
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;LiquidCrystal_I2C.c: 164:     _numlines = 2;
 10294  00797E  0E02               	movlw	2
 10295  007980  6FCA               	movwf	__numlines& (0+255),b
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;LiquidCrystal_I2C.c: 166:     _displayfunction = 0x00 | 0x08 | 0x00;
 10299  007982  0E08               	movlw	8
 10300  007984  6FCD               	movwf	__displayfunction& (0+255),b
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;LiquidCrystal_I2C.c: 168:     parBuffPtr = 0;
 10304  007986  0E00               	movlw	0
 10305  007988  6FC8               	movwf	_parBuffPtr& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;LiquidCrystal_I2C.c: 169:     parBuffLen = 0;
 10309  00798A  0E00               	movlw	0
 10310  00798C  6FC7               	movwf	_parBuffLen& (0+255),b	;volatile
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;LiquidCrystal_I2C.c: 170:     lcdBusy = 0;
 10314  00798E  0E00               	movlw	0
 10315  007990  6FC6               	movwf	_lcdBusy& (0+255),b	;volatile
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;LiquidCrystal_I2C.c: 171:     TMR6_SetInterruptHandler(lcdIrqHandler);
 10319  007992  0EB0               	movlw	low _lcdIrqHandler
 10320  007994  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 10321  007996  0E7C               	movlw	high _lcdIrqHandler
 10322  007998  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10323  00799A  EC54  F053         	call	_TMR6_SetInterruptHandler	;wreg free
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;LiquidCrystal_I2C.c: 176:     timeDelayMs(50);
 10327  00799E  0E00               	movlw	0
 10328  0079A0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10329  0079A2  0E32               	movlw	50
 10330  0079A4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10331  0079A6  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;LiquidCrystal_I2C.c: 179:     expanderWriteBlock(_backlightval);
 10335  0079AA  51C9               	movf	__backlightval& (0+255),w,b	;volatile
 10336  0079AC  ECF9  F052         	call	_expanderWriteBlock
 10337                           
 10338                           ;LiquidCrystal_I2C.c: 180:     timeDelayMs(20);
 10339  0079B0  0E00               	movlw	0
 10340  0079B2  0100               	movlb	0	; () banked
 10341  0079B4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10342  0079B6  0E14               	movlw	20
 10343  0079B8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10344  0079BA  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;LiquidCrystal_I2C.c: 183:     send4bits(0x03 << 4, 0x4);
 10348  0079BE  0E04               	movlw	4
 10349  0079C0  6F8B               	movwf	send4bits@mode& (0+255),b
 10350  0079C2  0E30               	movlw	48
 10351  0079C4  EC04  F049         	call	_send4bits
 10352  0079C8                     l18955:
 10353  0079C8  0100               	movlb	0	; () banked
 10354  0079CA  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10355  0079CC  A4D8               	btfss	status,2,c
 10356  0079CE  D7FC               	goto	l18955
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;LiquidCrystal_I2C.c: 185:     timeDelayMs(20);
 10360  0079D0  0E00               	movlw	0
 10361  0079D2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10362  0079D4  0E14               	movlw	20
 10363  0079D6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10364  0079D8  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;LiquidCrystal_I2C.c: 186:     send4bits(0x03 << 4, 0x4);
 10368  0079DC  0E04               	movlw	4
 10369  0079DE  6F8B               	movwf	send4bits@mode& (0+255),b
 10370  0079E0  0E30               	movlw	48
 10371  0079E2  EC04  F049         	call	_send4bits
 10372  0079E6                     l18961:
 10373  0079E6  0100               	movlb	0	; () banked
 10374  0079E8  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10375  0079EA  A4D8               	btfss	status,2,c
 10376  0079EC  D7FC               	goto	l18961
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;LiquidCrystal_I2C.c: 188:     timeDelayMs(20);
 10380  0079EE  0E00               	movlw	0
 10381  0079F0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10382  0079F2  0E14               	movlw	20
 10383  0079F4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10384  0079F6  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;LiquidCrystal_I2C.c: 189:     send4bits(0x03 << 4, 0x4);
 10388  0079FA  0E04               	movlw	4
 10389  0079FC  6F8B               	movwf	send4bits@mode& (0+255),b
 10390  0079FE  0E30               	movlw	48
 10391  007A00  EC04  F049         	call	_send4bits
 10392  007A04                     l18967:
 10393  007A04  0100               	movlb	0	; () banked
 10394  007A06  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10395  007A08  A4D8               	btfss	status,2,c
 10396  007A0A  D7FC               	goto	l18967
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;LiquidCrystal_I2C.c: 191:     timeDelayMs(20);
 10400  007A0C  0E00               	movlw	0
 10401  007A0E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10402  007A10  0E14               	movlw	20
 10403  007A12  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10404  007A14  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;LiquidCrystal_I2C.c: 194:     send4bits(0x02 << 4, 0x4);
 10408  007A18  0E04               	movlw	4
 10409  007A1A  6F8B               	movwf	send4bits@mode& (0+255),b
 10410  007A1C  0E20               	movlw	32
 10411  007A1E  EC04  F049         	call	_send4bits
 10412  007A22                     l18973:
 10413  007A22  0100               	movlb	0	; () banked
 10414  007A24  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10415  007A26  A4D8               	btfss	status,2,c
 10416  007A28  D7FC               	goto	l18973
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;LiquidCrystal_I2C.c: 196:     timeDelayMs(20);
 10420  007A2A  0E00               	movlw	0
 10421  007A2C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10422  007A2E  0E14               	movlw	20
 10423  007A30  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10424  007A32  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;LiquidCrystal_I2C.c: 199:     command(0x20 | _displayfunction);
 10428  007A36  0E28               	movlw	40
 10429  007A38  EC01  F053         	call	_command
 10430  007A3C                     l18979:
 10431  007A3C  0100               	movlb	0	; () banked
 10432  007A3E  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10433  007A40  A4D8               	btfss	status,2,c
 10434  007A42  D7FC               	goto	l18979
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;LiquidCrystal_I2C.c: 201:     timeDelayMs(20);
 10438  007A44  0E00               	movlw	0
 10439  007A46  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10440  007A48  0E14               	movlw	20
 10441  007A4A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10442  007A4C  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;LiquidCrystal_I2C.c: 204:     _displaycontrol = 0x04 | 0x00 | 0x00;
 10446  007A50  0E04               	movlw	4
 10447  007A52  6FCC               	movwf	__displaycontrol& (0+255),b
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;LiquidCrystal_I2C.c: 205:     display();
 10451  007A54  ECA1  F053         	call	_display	;wreg free
 10452  007A58                     l18987:
 10453  007A58  0100               	movlb	0	; () banked
 10454  007A5A  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10455  007A5C  A4D8               	btfss	status,2,c
 10456  007A5E  D7FC               	goto	l18987
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;LiquidCrystal_I2C.c: 209:     clear();
 10460  007A60  EC6D  F052         	call	_clear	;wreg free
 10461  007A64                     l18991:
 10462                           
 10463                           ; BSR set to: 0
 10464  007A64  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10465  007A66  A4D8               	btfss	status,2,c
 10466  007A68  D7FD               	goto	l18991
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;LiquidCrystal_I2C.c: 213:     _displaymode = 0x02 | 0x00;
 10470  007A6A  0E02               	movlw	2
 10471  007A6C  6FCB               	movwf	__displaymode& (0+255),b
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;LiquidCrystal_I2C.c: 216:     command(0x04 | _displaymode);
 10475  007A6E  0E06               	movlw	6
 10476  007A70  EC01  F053         	call	_command
 10477  007A74                     l18997:
 10478  007A74  0100               	movlb	0	; () banked
 10479  007A76  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10480  007A78  A4D8               	btfss	status,2,c
 10481  007A7A  D7FC               	goto	l18997
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;LiquidCrystal_I2C.c: 219:     home();
 10485  007A7C  EC62  F052         	call	_home	;wreg free
 10486  007A80                     l19001:
 10487                           
 10488                           ; BSR set to: 0
 10489  007A80  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 10490  007A82  B4D8               	btfsc	status,2,c
 10491  007A84  0012               	return	
 10492  007A86  D7FC               	goto	l19001
 10493  007A88                     __end_of_LcdI2CInit:
 10494                           	opt callstack 0
 10495                           
 10496 ;; *************** function _home *****************
 10497 ;; Defined at:
 10498 ;;		line 228 in file "LiquidCrystal_I2C.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;		None
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1    wreg      void 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 3F/0
 10509 ;;		On exit  : 3F/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;Total ram usage:        0 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:   21
 10519 ;; This function calls:
 10520 ;;		_command
 10521 ;;		_timeDelayMs
 10522 ;; This function is called by:
 10523 ;;		_LcdI2CInit
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text9
 10528  00A4C4                     __ptext9:
 10529                           	opt callstack 0
 10530  00A4C4                     _home:
 10531                           	opt callstack 7
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;LiquidCrystal_I2C.c: 229:  command(0x02);
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;incstack = 0
 10538  00A4C4  0E02               	movlw	2
 10539  00A4C6  EC01  F053         	call	_command
 10540                           
 10541                           ;LiquidCrystal_I2C.c: 230:  timeDelayMs(10);
 10542  00A4CA  0E00               	movlw	0
 10543  00A4CC  0100               	movlb	0	; () banked
 10544  00A4CE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10545  00A4D0  0E0A               	movlw	10
 10546  00A4D2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10547  00A4D4  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10548                           
 10549                           ; BSR set to: 0
 10550  00A4D8  0012               	return		;funcret
 10551  00A4DA                     __end_of_home:
 10552                           	opt callstack 0
 10553                           
 10554 ;; *************** function _display *****************
 10555 ;; Defined at:
 10556 ;;		line 246 in file "LiquidCrystal_I2C.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;		None
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;		None
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  1    wreg      void 
 10563 ;; Registers used:
 10564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10565 ;; Tracked objects:
 10566 ;;		On entry : 3F/0
 10567 ;;		On exit  : 6/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;Total ram usage:        0 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; Hardware stack levels required when called:   21
 10577 ;; This function calls:
 10578 ;;		_command
 10579 ;; This function is called by:
 10580 ;;		_LcdI2CInit
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           	psect	text10
 10585  00A742                     __ptext10:
 10586                           	opt callstack 0
 10587  00A742                     _display:
 10588                           	opt callstack 7
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;LiquidCrystal_I2C.c: 247:  _displaycontrol |= 0x04;
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;incstack = 0
 10595  00A742  85CC               	bsf	__displaycontrol& (0+255),2,b
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;LiquidCrystal_I2C.c: 248:  command(0x08 | _displaycontrol);
 10599  00A744  51CC               	movf	__displaycontrol& (0+255),w,b
 10600  00A746  0908               	iorlw	8
 10601  00A748  EC01  F053         	call	_command
 10602  00A74C  0012               	return		;funcret
 10603  00A74E                     __end_of_display:
 10604                           	opt callstack 0
 10605                           
 10606 ;; *************** function _clear *****************
 10607 ;; Defined at:
 10608 ;;		line 223 in file "LiquidCrystal_I2C.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;		None
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 3F/0
 10619 ;;		On exit  : 3F/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;Total ram usage:        0 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:   21
 10629 ;; This function calls:
 10630 ;;		_command
 10631 ;;		_timeDelayMs
 10632 ;; This function is called by:
 10633 ;;		_LcdI2CInit
 10634 ;;		_screenInit
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text11
 10639  00A4DA                     __ptext11:
 10640                           	opt callstack 0
 10641  00A4DA                     _clear:
 10642                           	opt callstack 8
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;LiquidCrystal_I2C.c: 224:  command(0x01);
 10646                           
 10647                           ;incstack = 0
 10648  00A4DA  0E01               	movlw	1
 10649  00A4DC  EC01  F053         	call	_command
 10650                           
 10651                           ;LiquidCrystal_I2C.c: 225:  timeDelayMs(10);
 10652  00A4E0  0E00               	movlw	0
 10653  00A4E2  0100               	movlb	0	; () banked
 10654  00A4E4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10655  00A4E6  0E0A               	movlw	10
 10656  00A4E8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10657  00A4EA  ECE4  F04D         	call	_timeDelayMs	;wreg free
 10658                           
 10659                           ; BSR set to: 0
 10660  00A4EE  0012               	return		;funcret
 10661  00A4F0                     __end_of_clear:
 10662                           	opt callstack 0
 10663                           
 10664 ;; *************** function _inspOSMeasure *****************
 10665 ;; Defined at:
 10666 ;;		line 114 in file "main.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  tmpVal          2  107[BANK1 ] short 
 10671 ;;  tmpUVal         2  104[BANK1 ] unsigned short 
 10672 ;;  setScale        1  106[BANK1 ] char 
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 3D/1
 10679 ;;		On exit  : 3F/2
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;Total ram usage:       13 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:   26
 10689 ;; This function calls:
 10690 ;;		___lmul
 10691 ;;		___ltdiv
 10692 ;;		___tmul
 10693 ;;		___wmul
 10694 ;;		_printf
 10695 ;;		_vMeasureGet
 10696 ;; This function is called by:
 10697 ;;		_main
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text12
 10702  0050A0                     __ptext12:
 10703                           	opt callstack 0
 10704  0050A0                     _inspOSMeasure:
 10705                           	opt callstack 4
 10706                           
 10707                           ;main.c: 115:     uint16_t tmpUVal;;main.c: 116:     int16_t tmpVal;;main.c: 117:     in
      +                          t8_t setScale;;main.c: 119:     switch (pInspOSVSet) {
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;incstack = 0
 10711  0050A0  D009               	goto	l19319
 10712  0050A2                     l19311:
 10713                           
 10714                           ; BSR set to: 1
 10715                           ;main.c: 121:             setScale = 3*2;
 10716  0050A2  0E06               	movlw	6
 10717  0050A4  D005               	goto	L8
 10718  0050A6                     l19313:
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;main.c: 124:             setScale = 3*2/2;
 10722  0050A6  0E03               	movlw	3
 10723  0050A8  D003               	goto	L8
 10724  0050AA                     l19315:
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;main.c: 127:             setScale = 3*2/3;
 10728  0050AA  0E02               	movlw	2
 10729  0050AC  D001               	goto	L8
 10730  0050AE                     l19317:
 10731                           
 10732                           ; BSR set to: 1
 10733                           ;main.c: 130:           setScale = 0;
 10734  0050AE  0E00               	movlw	0
 10735  0050B0                     L8:
 10736  0050B0  6F6A               	movwf	inspOSMeasure@setScale& (0+255),b
 10737                           
 10738                           ;main.c: 131:     }
 10739  0050B2  D016               	goto	l19321
 10740  0050B4                     l19319:
 10741  0050B4  0060  F910  F160   	movff	_pInspOSVSet,??_inspOSMeasure
 10742  0050BA  0060  F914  F161   	movff	_pInspOSVSet+1,??_inspOSMeasure+1
 10743                           
 10744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10745                           ; Switch size 1, requested type "simple"
 10746                           ; Number of cases is 1, Range of values is 0 to 0
 10747                           ; switch strategies available:
 10748                           ; Name         Instructions Cycles
 10749                           ; simple_byte            4     3 (average)
 10750                           ;	Chosen strategy is simple_byte
 10751  0050C0  0101               	movlb	1	; () banked
 10752  0050C2  5161               	movf	(??_inspOSMeasure+1)& (0+255),w,b
 10753  0050C4  0A00               	xorlw	0	; case 0
 10754  0050C6  A4D8               	btfss	status,2,c
 10755  0050C8  D7F2               	goto	l19317
 10756                           
 10757                           ; BSR set to: 1
 10758                           ; Switch size 1, requested type "simple"
 10759                           ; Number of cases is 3, Range of values is 1 to 3
 10760                           ; switch strategies available:
 10761                           ; Name         Instructions Cycles
 10762                           ; simple_byte           10     6 (average)
 10763                           ;	Chosen strategy is simple_byte
 10764  0050CA  5160               	movf	??_inspOSMeasure& (0+255),w,b
 10765  0050CC  0A01               	xorlw	1	; case 1
 10766  0050CE  B4D8               	btfsc	status,2,c
 10767  0050D0  D7E8               	goto	l19311
 10768  0050D2  0A03               	xorlw	3	; case 2
 10769  0050D4  B4D8               	btfsc	status,2,c
 10770  0050D6  D7E7               	goto	l19313
 10771  0050D8  0A01               	xorlw	1	; case 3
 10772  0050DA  B4D8               	btfsc	status,2,c
 10773  0050DC  D7E6               	goto	l19315
 10774  0050DE  D7E7               	goto	l19317
 10775  0050E0                     l19321:
 10776                           
 10777                           ; BSR set to: 1
 10778                           ;main.c: 135:     tmpVal = (setScale*(pPlatMax - pValveActuation))>>1;
 10779  0050E0  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10780  0050E2  0100               	movlb	0	; () banked
 10781  0050E4  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10782  0050E6  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10783  0050E8  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 10784  0050EA  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 10785  0050EC  0101               	movlb	1	; () banked
 10786  0050EE  51E1               	movf	_pValveActuation& (0+255),w,b
 10787  0050F0  5DAF               	subwf	_pPlatMax& (0+255),w,b
 10788  0050F2  0100               	movlb	0	; () banked
 10789  0050F4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10790  0050F6  0101               	movlb	1	; () banked
 10791  0050F8  51E2               	movf	(_pValveActuation+1)& (0+255),w,b
 10792  0050FA  59B0               	subwfb	(_pPlatMax+1)& (0+255),w,b
 10793  0050FC  0100               	movlb	0	; () banked
 10794  0050FE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10795  005100  ECFC  F04E         	call	___wmul	;wreg free
 10796  005104  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10797  005106  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 10798  005108  0101               	movlb	1	; () banked
 10799  00510A  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10800  00510C  0100               	movlb	0	; () banked
 10801  00510E  319B               	rrcf	?___wmul& (0+255),w,b
 10802  005110  0101               	movlb	1	; () banked
 10803  005112  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10804  005114  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 10805                           
 10806                           ; BSR set to: 1
 10807                           ;main.c: 136:     if (pInspOS == 0){
 10808  00511A  0102               	movlb	2	; () banked
 10809  00511C  51D7               	movf	_pInspOS& (0+255),w,b
 10810  00511E  11D8               	iorwf	(_pInspOS+1)& (0+255),w,b
 10811  005120  A4D8               	btfss	status,2,c
 10812  005122  D00E               	goto	l19327
 10813                           
 10814                           ; BSR set to: 2
 10815                           ;main.c: 137:         pInspOS = (3*tmpVal)>>2;
 10816  005124  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 10817  00512A  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 10818  005130  0E00               	movlw	0
 10819  005132  0100               	movlb	0	; () banked
 10820  005134  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10821  005136  0E03               	movlw	3
 10822  005138  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10823  00513A  ECFC  F04E         	call	___wmul	;wreg free
 10824  00513E  D015               	goto	L9
 10825  005140                     l19327:
 10826                           
 10827                           ; BSR set to: 2
 10828                           ;main.c: 139:         pInspOS = (3 * pInspOS + tmpVal) >> 2;
 10829  005140  0060  FB5C  F09B   	movff	_pInspOS,___wmul@multiplier
 10830  005146  0060  FB60  F09C   	movff	_pInspOS+1,___wmul@multiplier+1
 10831  00514C  0E00               	movlw	0
 10832  00514E  0100               	movlb	0	; () banked
 10833  005150  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10834  005152  0E03               	movlw	3
 10835  005154  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10836  005156  ECFC  F04E         	call	___wmul	;wreg free
 10837  00515A  0101               	movlb	1	; () banked
 10838  00515C  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10839  00515E  0100               	movlb	0	; () banked
 10840  005160  279B               	addwf	?___wmul& (0+255),f,b
 10841  005162  0101               	movlb	1	; () banked
 10842  005164  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10843  005166  0100               	movlb	0	; () banked
 10844  005168  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10845  00516A                     L9:
 10846  00516A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10847  00516C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10848  00516E  339B               	rrcf	?___wmul& (0+255),f,b
 10849  005170  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10850  005172  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10851  005174  339B               	rrcf	?___wmul& (0+255),f,b
 10852  005176  0060  F26C  F2D7   	movff	?___wmul,_pInspOS
 10853  00517C  0060  F270  F2D8   	movff	?___wmul+1,_pInspOS+1
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;main.c: 141:     if (vInspOS < 0) {
 10857  005182  0101               	movlb	1	; () banked
 10858  005184  AFD6               	btfss	(_vInspOS+1)& (0+255),7,b
 10859  005186  D004               	goto	l19333
 10860                           
 10861                           ; BSR set to: 1
 10862                           ;main.c: 143:         vInspOS = 0;
 10863  005188  0E00               	movlw	0
 10864  00518A  6FD6               	movwf	(_vInspOS+1)& (0+255),b
 10865  00518C  0E00               	movlw	0
 10866  00518E  6FD5               	movwf	_vInspOS& (0+255),b
 10867  005190                     l19333:
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;main.c: 146:     tmpVal = vMeasureGet();
 10871  005190  ECD7  F048         	call	_vMeasureGet	;wreg free
 10872  005194  0060  F290  F16B   	movff	?_vMeasureGet,inspOSMeasure@tmpVal
 10873  00519A  0060  F294  F16C   	movff	?_vMeasureGet+1,inspOSMeasure@tmpVal+1
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;main.c: 148:     if ((pPlatInsp > ((int16_t) ((0.045*4096+2)/5)*4)) && (tmpVal < 2047))
      +                           {
 10877  0051A0  0101               	movlb	1	; () banked
 10878  0051A2  BFE0               	btfsc	(_pPlatInsp+1)& (0+255),7,b
 10879  0051A4  D07B               	goto	l1688
 10880  0051A6  51E0               	movf	(_pPlatInsp+1)& (0+255),w,b
 10881  0051A8  E104               	bnz	u20270
 10882  0051AA  0E95               	movlw	149
 10883  0051AC  5DDF               	subwf	_pPlatInsp& (0+255),w,b
 10884  0051AE  A0D8               	btfss	status,0,c
 10885  0051B0  D075               	goto	l1688
 10886  0051B2                     u20270:
 10887                           
 10888                           ; BSR set to: 1
 10889  0051B2  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10890  0051B4  D005               	goto	u20280
 10891  0051B6  296B               	incf	inspOSMeasure@tmpVal& (0+255),w,b
 10892  0051B8  0E07               	movlw	7
 10893  0051BA  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10894  0051BC  B0D8               	btfsc	status,0,c
 10895  0051BE  D06E               	goto	l1688
 10896  0051C0                     u20280:
 10897                           
 10898                           ; BSR set to: 1
 10899                           ;main.c: 149:         tmpUVal = (pPlatInsp - pPeepActual) >> 1;
 10900  0051C0  51AD               	movf	_pPeepActual& (0+255),w,b
 10901  0051C2  5DDF               	subwf	_pPlatInsp& (0+255),w,b
 10902  0051C4  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10903  0051C6  51AE               	movf	(_pPeepActual+1)& (0+255),w,b
 10904  0051C8  59E0               	subwfb	(_pPlatInsp+1)& (0+255),w,b
 10905  0051CA  6F61               	movwf	(??_inspOSMeasure+1)& (0+255),b
 10906  0051CC  3561               	rlcf	(??_inspOSMeasure+1)& (0+255),w,b
 10907  0051CE  3161               	rrcf	(??_inspOSMeasure+1)& (0+255),w,b
 10908  0051D0  6F62               	movwf	(??_inspOSMeasure+2)& (0+255),b
 10909  0051D2  3160               	rrcf	??_inspOSMeasure& (0+255),w,b
 10910  0051D4  6F68               	movwf	inspOSMeasure@tmpUVal& (0+255),b
 10911  0051D6  0060  F588  F169   	movff	??_inspOSMeasure+2,inspOSMeasure@tmpUVal+1
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;main.c: 150:         tmpUVal = (((uint24_t) tmpVal) << 6) / tmpUVal;
 10915  0051DC  0E06               	movlw	6
 10916  0051DE  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10917  0051E0  0060  F5AC  F161   	movff	inspOSMeasure@tmpVal,??_inspOSMeasure+1
 10918  0051E6  0060  F5B0  F162   	movff	inspOSMeasure@tmpVal+1,??_inspOSMeasure+2
 10919  0051EC  6B63               	clrf	(??_inspOSMeasure+3)& (0+255),b
 10920  0051EE  BF62               	btfsc	(??_inspOSMeasure+2)& (0+255),7,b
 10921  0051F0  6963               	setf	(??_inspOSMeasure+3)& (0+255),b
 10922  0051F2  2960               	incf	??_inspOSMeasure& (0+255),w,b
 10923  0051F4  D004               	goto	u20290
 10924  0051F6                     u20295:
 10925  0051F6  90D8               	bcf	status,0,c
 10926  0051F8  3761               	rlcf	(??_inspOSMeasure+1)& (0+255),f,b
 10927  0051FA  3762               	rlcf	(??_inspOSMeasure+2)& (0+255),f,b
 10928  0051FC  3763               	rlcf	(??_inspOSMeasure+3)& (0+255),f,b
 10929  0051FE                     u20290:
 10930  0051FE  2EE8               	decfsz	wreg,f,c
 10931  005200  D7FA               	goto	u20295
 10932  005202  0060  F584  F08B   	movff	??_inspOSMeasure+1,___ltdiv@dividend
 10933  005208  0060  F588  F08C   	movff	??_inspOSMeasure+2,___ltdiv@dividend+1
 10934  00520E  0060  F58C  F08D   	movff	??_inspOSMeasure+3,___ltdiv@dividend+2
 10935  005214  0060  F5A0  F08E   	movff	inspOSMeasure@tmpUVal,___ltdiv@divisor
 10936  00521A  0060  F5A4  F08F   	movff	inspOSMeasure@tmpUVal+1,___ltdiv@divisor+1
 10937  005220  0100               	movlb	0	; () banked
 10938  005222  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
 10939  005224  EC4E  F046         	call	___ltdiv	;wreg free
 10940  005228  0060  F22C  F168   	movff	?___ltdiv,inspOSMeasure@tmpUVal
 10941  00522E  0060  F230  F169   	movff	?___ltdiv+1,inspOSMeasure@tmpUVal+1
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;main.c: 152:         if (lungC == 0){
 10945  005234  0101               	movlb	1	; () banked
 10946  005236  51DB               	movf	_lungC& (0+255),w,b
 10947  005238  11DC               	iorwf	(_lungC+1)& (0+255),w,b
 10948  00523A  A4D8               	btfss	status,2,c
 10949  00523C  D00E               	goto	l19347
 10950                           
 10951                           ; BSR set to: 1
 10952                           ;main.c: 153:             lungC = (3*tmpUVal)>>2;
 10953  00523E  0060  F5A0  F09B   	movff	inspOSMeasure@tmpUVal,___wmul@multiplier
 10954  005244  0060  F5A4  F09C   	movff	inspOSMeasure@tmpUVal+1,___wmul@multiplier+1
 10955  00524A  0E00               	movlw	0
 10956  00524C  0100               	movlb	0	; () banked
 10957  00524E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10958  005250  0E03               	movlw	3
 10959  005252  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10960  005254  ECFC  F04E         	call	___wmul	;wreg free
 10961  005258  D015               	goto	L10
 10962  00525A                     l19347:
 10963                           
 10964                           ; BSR set to: 1
 10965                           ;main.c: 155:             lungC = (3 * lungC + tmpUVal) >> 2;
 10966  00525A  0060  F76C  F09B   	movff	_lungC,___wmul@multiplier
 10967  005260  0060  F770  F09C   	movff	_lungC+1,___wmul@multiplier+1
 10968  005266  0E00               	movlw	0
 10969  005268  0100               	movlb	0	; () banked
 10970  00526A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10971  00526C  0E03               	movlw	3
 10972  00526E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10973  005270  ECFC  F04E         	call	___wmul	;wreg free
 10974  005274  0101               	movlb	1	; () banked
 10975  005276  5168               	movf	inspOSMeasure@tmpUVal& (0+255),w,b
 10976  005278  0100               	movlb	0	; () banked
 10977  00527A  279B               	addwf	?___wmul& (0+255),f,b
 10978  00527C  0101               	movlb	1	; () banked
 10979  00527E  5169               	movf	(inspOSMeasure@tmpUVal+1)& (0+255),w,b
 10980  005280  0100               	movlb	0	; () banked
 10981  005282  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10982  005284                     L10:
 10983  005284  90D8               	bcf	status,0,c
 10984  005286  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10985  005288  339B               	rrcf	?___wmul& (0+255),f,b
 10986  00528A  90D8               	bcf	status,0,c
 10987  00528C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10988  00528E  339B               	rrcf	?___wmul& (0+255),f,b
 10989  005290  0060  F26C  F1DB   	movff	?___wmul,_lungC
 10990  005296  0060  F270  F1DC   	movff	?___wmul+1,_lungC+1
 10991  00529C                     l1688:
 10992                           
 10993                           ;main.c: 159:     tmpVal = (setScale*(tmpVal - vValveActuation))>>1;
 10994  00529C  0101               	movlb	1	; () banked
 10995  00529E  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10996  0052A0  0100               	movlb	0	; () banked
 10997  0052A2  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10998  0052A4  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10999  0052A6  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 11000  0052A8  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 11001  0052AA  0101               	movlb	1	; () banked
 11002  0052AC  51AB               	movf	_vValveActuation& (0+255),w,b
 11003  0052AE  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 11004  0052B0  0100               	movlb	0	; () banked
 11005  0052B2  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 11006  0052B4  0101               	movlb	1	; () banked
 11007  0052B6  51AC               	movf	(_vValveActuation+1)& (0+255),w,b
 11008  0052B8  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 11009  0052BA  0100               	movlb	0	; () banked
 11010  0052BC  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11011  0052BE  ECFC  F04E         	call	___wmul	;wreg free
 11012  0052C2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 11013  0052C4  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 11014  0052C6  0101               	movlb	1	; () banked
 11015  0052C8  6F60               	movwf	??_inspOSMeasure& (0+255),b
 11016  0052CA  0100               	movlb	0	; () banked
 11017  0052CC  319B               	rrcf	?___wmul& (0+255),w,b
 11018  0052CE  0101               	movlb	1	; () banked
 11019  0052D0  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 11020  0052D2  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 11021                           
 11022                           ; BSR set to: 1
 11023                           ;main.c: 160:     if (vInspOS == 0){
 11024  0052D8  51D5               	movf	_vInspOS& (0+255),w,b
 11025  0052DA  11D6               	iorwf	(_vInspOS+1)& (0+255),w,b
 11026  0052DC  A4D8               	btfss	status,2,c
 11027  0052DE  D00E               	goto	l19353
 11028                           
 11029                           ; BSR set to: 1
 11030                           ;main.c: 161:         vInspOS = (3*tmpVal)>>2;
 11031  0052E0  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 11032  0052E6  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 11033  0052EC  0E00               	movlw	0
 11034  0052EE  0100               	movlb	0	; () banked
 11035  0052F0  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11036  0052F2  0E03               	movlw	3
 11037  0052F4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 11038  0052F6  ECFC  F04E         	call	___wmul	;wreg free
 11039  0052FA  D015               	goto	L11
 11040  0052FC                     l19353:
 11041                           
 11042                           ; BSR set to: 1
 11043                           ;main.c: 163:         vInspOS = (3 * vInspOS + tmpVal) >> 2;
 11044  0052FC  0060  F754  F09B   	movff	_vInspOS,___wmul@multiplier
 11045  005302  0060  F758  F09C   	movff	_vInspOS+1,___wmul@multiplier+1
 11046  005308  0E00               	movlw	0
 11047  00530A  0100               	movlb	0	; () banked
 11048  00530C  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11049  00530E  0E03               	movlw	3
 11050  005310  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 11051  005312  ECFC  F04E         	call	___wmul	;wreg free
 11052  005316  0101               	movlb	1	; () banked
 11053  005318  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 11054  00531A  0100               	movlb	0	; () banked
 11055  00531C  279B               	addwf	?___wmul& (0+255),f,b
 11056  00531E  0101               	movlb	1	; () banked
 11057  005320  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 11058  005322  0100               	movlb	0	; () banked
 11059  005324  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 11060  005326                     L11:
 11061  005326  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 11062  005328  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 11063  00532A  339B               	rrcf	?___wmul& (0+255),f,b
 11064  00532C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 11065  00532E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 11066  005330  339B               	rrcf	?___wmul& (0+255),f,b
 11067  005332  0060  F26C  F1D5   	movff	?___wmul,_vInspOS
 11068  005338  0060  F270  F1D6   	movff	?___wmul+1,_vInspOS+1
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;main.c: 168:     tmpVal = pPlatMax - pPlatInsp;
 11072  00533E  0101               	movlb	1	; () banked
 11073  005340  51DF               	movf	_pPlatInsp& (0+255),w,b
 11074  005342  5DAF               	subwf	_pPlatMax& (0+255),w,b
 11075  005344  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 11076  005346  51E0               	movf	(_pPlatInsp+1)& (0+255),w,b
 11077  005348  59B0               	subwfb	(_pPlatMax+1)& (0+255),w,b
 11078  00534A  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 11079                           
 11080                           ; BSR set to: 1
 11081                           ;main.c: 169:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 11082  00534C  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 11083  00534E  0100               	movlb	0	; () banked
 11084  005350  6F8B               	movwf	___lmul@multiplier& (0+255),b
 11085  005352  0E00               	movlw	0
 11086  005354  BF8B               	btfsc	___lmul@multiplier& (0+255),7,b
 11087  005356  0EFF               	movlw	-1
 11088  005358  6F8C               	movwf	(___lmul@multiplier+1)& (0+255),b
 11089  00535A  6F8D               	movwf	(___lmul@multiplier+2)& (0+255),b
 11090  00535C  6F8E               	movwf	(___lmul@multiplier+3)& (0+255),b
 11091  00535E  0060  F5AC  F08F   	movff	inspOSMeasure@tmpVal,___lmul@multiplicand
 11092  005364  0060  F5B0  F090   	movff	inspOSMeasure@tmpVal+1,___lmul@multiplicand+1
 11093  00536A  0E00               	movlw	0
 11094  00536C  BF90               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11095  00536E  0EFF               	movlw	-1
 11096  005370  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11097  005372  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11098  005374  EC1E  F048         	call	___lmul	;wreg free
 11099  005378  0060  F22C  F164   	movff	?___lmul,_inspOSMeasure$6108
 11100  00537E  0060  F230  F165   	movff	?___lmul+1,_inspOSMeasure$6108+1
 11101  005384  0060  F234  F166   	movff	?___lmul+2,_inspOSMeasure$6108+2
 11102  00538A  0060  F238  F167   	movff	?___lmul+3,_inspOSMeasure$6108+3
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;main.c: 169:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 11106  005390  0060  F590  F08B   	movff	_inspOSMeasure$6108,___lmul@multiplier
 11107  005396  0060  F594  F08C   	movff	_inspOSMeasure$6108+1,___lmul@multiplier+1
 11108  00539C  0060  F598  F08D   	movff	_inspOSMeasure$6108+2,___lmul@multiplier+2
 11109  0053A2  0060  F59C  F08E   	movff	_inspOSMeasure$6108+3,___lmul@multiplier+3
 11110  0053A8  0060  F734  F08F   	movff	_effectiveFlowRateInv,___lmul@multiplicand
 11111  0053AE  0060  F738  F090   	movff	_effectiveFlowRateInv+1,___lmul@multiplicand+1
 11112  0053B4  6B91               	clrf	(___lmul@multiplicand+2)& (0+255),b
 11113  0053B6  6B92               	clrf	(___lmul@multiplicand+3)& (0+255),b
 11114  0053B8  EC1E  F048         	call	___lmul	;wreg free
 11115  0053BC  0E0A               	movlw	10
 11116  0053BE  D005               	goto	u20320
 11117  0053C0                     u20325:
 11118  0053C0  90D8               	bcf	status,0,c
 11119  0053C2  338E               	rrcf	(?___lmul+3)& (0+255),f,b
 11120  0053C4  338D               	rrcf	(?___lmul+2)& (0+255),f,b
 11121  0053C6  338C               	rrcf	(?___lmul+1)& (0+255),f,b
 11122  0053C8  338B               	rrcf	?___lmul& (0+255),f,b
 11123  0053CA                     u20320:
 11124  0053CA  2EE8               	decfsz	wreg,f,c
 11125  0053CC  D7F9               	goto	u20325
 11126  0053CE  0060  F22C  F16B   	movff	?___lmul,inspOSMeasure@tmpVal
 11127  0053D4  0060  F230  F16C   	movff	?___lmul+1,inspOSMeasure@tmpVal+1
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;main.c: 170:     if (tmpVal > (200*((int16_t) ((0.045*4096+2)/5)*1))){
 11131  0053DA  0101               	movlb	1	; () banked
 11132  0053DC  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 11133  0053DE  D00A               	goto	l19365
 11134  0053E0  0EE9               	movlw	233
 11135  0053E2  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 11136  0053E4  0E1C               	movlw	28
 11137  0053E6  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 11138  0053E8  A0D8               	btfss	status,0,c
 11139  0053EA  D004               	goto	l19365
 11140                           
 11141                           ; BSR set to: 1
 11142                           ;main.c: 171:         tmpVal = 200;
 11143  0053EC  0E00               	movlw	0
 11144  0053EE  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 11145  0053F0  0EC8               	movlw	200
 11146  0053F2  D00B               	goto	L12
 11147  0053F4                     l19365:
 11148                           
 11149                           ; BSR set to: 1
 11150  0053F4  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 11151  0053F6  D006               	goto	u20340
 11152  0053F8  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 11153  0053FA  E108               	bnz	l19369
 11154  0053FC  0E4A               	movlw	74
 11155  0053FE  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 11156  005400  B0D8               	btfsc	status,0,c
 11157  005402  D004               	goto	l19369
 11158  005404                     u20340:
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;main.c: 173:         tmpVal = 2;
 11162  005404  0E00               	movlw	0
 11163  005406  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 11164  005408  0E02               	movlw	2
 11165  00540A                     L12:
 11166  00540A  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 11167  00540C                     l19369:
 11168                           
 11169                           ; BSR set to: 1
 11170                           ;main.c: 175:     lungR = (3*lungR + tmpVal)>>2;
 11171  00540C  0060  FB54  F09B   	movff	_lungR,___wmul@multiplier
 11172  005412  0060  FB58  F09C   	movff	_lungR+1,___wmul@multiplier+1
 11173  005418  0E00               	movlw	0
 11174  00541A  0100               	movlb	0	; () banked
 11175  00541C  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11176  00541E  0E03               	movlw	3
 11177  005420  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 11178  005422  ECFC  F04E         	call	___wmul	;wreg free
 11179  005426  0101               	movlb	1	; () banked
 11180  005428  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 11181  00542A  0100               	movlb	0	; () banked
 11182  00542C  279B               	addwf	?___wmul& (0+255),f,b
 11183  00542E  0101               	movlb	1	; () banked
 11184  005430  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 11185  005432  0100               	movlb	0	; () banked
 11186  005434  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 11187  005436  90D8               	bcf	status,0,c
 11188  005438  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 11189  00543A  339B               	rrcf	?___wmul& (0+255),f,b
 11190  00543C  90D8               	bcf	status,0,c
 11191  00543E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 11192  005440  339B               	rrcf	?___wmul& (0+255),f,b
 11193  005442  0060  F26C  F2D5   	movff	?___wmul,_lungR
 11194  005448  0060  F270  F2D6   	movff	?___wmul+1,_lungR+1
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;main.c: 177:     printf ("\nIPOS LC %d Plat %d FI %d\n", lungC,((int16_t) (((2560/((int
      +                          16_t) ((0.045*4096+2)/5)*1))*((int24_t) pPlatInsp))>>8)), effectiveFlowRateInv);
 11198  00544E  0E91               	movlw	low STR_1
 11199  005450  0101               	movlb	1	; () banked
 11200  005452  6F46               	movwf	printf@fmt& (0+255),b
 11201  005454  0EFC               	movlw	high STR_1
 11202  005456  6F47               	movwf	(printf@fmt+1)& (0+255),b
 11203  005458  0060  F76C  F148   	movff	_lungC,?_printf+2
 11204  00545E  0060  F770  F149   	movff	_lungC+1,?_printf+3
 11205  005464  0060  F77C  F08B   	movff	_pPlatInsp,___tmul@multiplier
 11206  00546A  0060  F780  F08C   	movff	_pPlatInsp+1,___tmul@multiplier+1
 11207  005470  0100               	movlb	0	; () banked
 11208  005472  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 11209  005474  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
 11210  005476  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
 11211  005478  0E45               	movlw	69
 11212  00547A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 11213  00547C  0E00               	movlw	0
 11214  00547E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 11215  005480  0E00               	movlw	0
 11216  005482  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 11217  005484  EC1F  F04B         	call	___tmul	;wreg free
 11218  005488  0060  F230  F08B   	movff	?___tmul+1,?___tmul
 11219  00548E  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
 11220  005494  6B8D               	clrf	(?___tmul+2)& (0+255),b
 11221  005496  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
 11222  005498  698D               	setf	(?___tmul+2)& (0+255),b
 11223  00549A  0060  F22C  F14A   	movff	?___tmul,?_printf+4
 11224  0054A0  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
 11225  0054A6  0060  F734  F14C   	movff	_effectiveFlowRateInv,?_printf+6
 11226  0054AC  0060  F738  F14D   	movff	_effectiveFlowRateInv+1,?_printf+7
 11227  0054B2  EC43  F050         	call	_printf	;wreg free
 11228                           
 11229                           ; BSR set to: 2
 11230  0054B6  0012               	return		;funcret
 11231  0054B8                     __end_of_inspOSMeasure:
 11232                           	opt callstack 0
 11233                           
 11234 ;; *************** function ___ltdiv *****************
 11235 ;; Defined at:
 11236 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\ltdiv.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  dividend        3   43[BANK0 ] unsigned um
 11239 ;;  divisor         3   46[BANK0 ] unsigned um
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  quotient        3   49[BANK0 ] unsigned um
 11242 ;;  counter         1   52[BANK0 ] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  3   43[BANK0 ] unsigned um
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0
 11247 ;; Tracked objects:
 11248 ;;		On entry : 3F/0
 11249 ;;		On exit  : 3F/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;Total ram usage:       10 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:   17
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_inspOSMeasure
 11263 ;;		_main
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text13
 11268  008C9C                     __ptext13:
 11269                           	opt callstack 0
 11270  008C9C                     ___ltdiv:
 11271                           	opt callstack 12
 11272                           
 11273                           ; BSR set to: 0
 11274                           
 11275                           ; BSR set to: 2
 11276                           ;incstack = 0
 11277  008C9C  0E00               	movlw	0
 11278  008C9E  6F91               	movwf	___ltdiv@quotient& (0+255),b
 11279  008CA0  0E00               	movlw	0
 11280  008CA2  6F92               	movwf	(___ltdiv@quotient+1)& (0+255),b
 11281  008CA4  0E00               	movlw	0
 11282  008CA6  6F93               	movwf	(___ltdiv@quotient+2)& (0+255),b
 11283                           
 11284                           ; BSR set to: 0
 11285  008CA8  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11286  008CAA  118F               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 11287  008CAC  1190               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 11288  008CAE  B4D8               	btfsc	status,2,c
 11289  008CB0  D023               	goto	l3667
 11290                           
 11291                           ; BSR set to: 0
 11292  008CB2  0E01               	movlw	1
 11293  008CB4  6F94               	movwf	___ltdiv@counter& (0+255),b
 11294  008CB6  D005               	goto	l19255
 11295  008CB8                     l19253:
 11296                           
 11297                           ; BSR set to: 0
 11298  008CB8  90D8               	bcf	status,0,c
 11299  008CBA  378E               	rlcf	___ltdiv@divisor& (0+255),f,b
 11300  008CBC  378F               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 11301  008CBE  3790               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 11302  008CC0  2B94               	incf	___ltdiv@counter& (0+255),f,b
 11303  008CC2                     l19255:
 11304                           
 11305                           ; BSR set to: 0
 11306  008CC2  AF90               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 11307  008CC4  D7F9               	goto	l19253
 11308  008CC6                     u20190:
 11309                           
 11310                           ; BSR set to: 0
 11311  008CC6  90D8               	bcf	status,0,c
 11312  008CC8  3791               	rlcf	___ltdiv@quotient& (0+255),f,b
 11313  008CCA  3792               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 11314  008CCC  3793               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 11315                           
 11316                           ; BSR set to: 0
 11317  008CCE  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11318  008CD0  5D8B               	subwf	___ltdiv@dividend& (0+255),w,b
 11319  008CD2  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11320  008CD4  598C               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 11321  008CD6  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11322  008CD8  598D               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 11323  008CDA  A0D8               	btfss	status,0,c
 11324  008CDC  D007               	goto	l3672
 11325                           
 11326                           ; BSR set to: 0
 11327  008CDE  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11328  008CE0  5F8B               	subwf	___ltdiv@dividend& (0+255),f,b
 11329  008CE2  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11330  008CE4  5B8C               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 11331  008CE6  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11332  008CE8  5B8D               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 11333                           
 11334                           ; BSR set to: 0
 11335  008CEA  8191               	bsf	___ltdiv@quotient& (0+255),0,b
 11336  008CEC                     l3672:
 11337                           
 11338                           ; BSR set to: 0
 11339  008CEC  90D8               	bcf	status,0,c
 11340  008CEE  3390               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 11341  008CF0  338F               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 11342  008CF2  338E               	rrcf	___ltdiv@divisor& (0+255),f,b
 11343                           
 11344                           ; BSR set to: 0
 11345  008CF4  2F94               	decfsz	___ltdiv@counter& (0+255),f,b
 11346  008CF6  D7E7               	goto	u20190
 11347  008CF8                     l3667:
 11348                           
 11349                           ; BSR set to: 0
 11350  008CF8  0060  F244  F08B   	movff	___ltdiv@quotient,?___ltdiv
 11351  008CFE  0060  F248  F08C   	movff	___ltdiv@quotient+1,?___ltdiv+1
 11352  008D04  0060  F24C  F08D   	movff	___ltdiv@quotient+2,?___ltdiv+2
 11353                           
 11354                           ; BSR set to: 0
 11355  008D0A  0012               	return		;funcret
 11356  008D0C                     __end_of___ltdiv:
 11357                           	opt callstack 0
 11358                           
 11359 ;; *************** function _bRateUpdt *****************
 11360 ;; Defined at:
 11361 ;;		line 35 in file "brate.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;  triggered       1    wreg     _Bool 
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;  triggered       1   46[BANK0 ] _Bool 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 3E/1
 11372 ;;		On exit  : 3F/2
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;Total ram usage:        4 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:   17
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_main
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text14
 11390  00800A                     __ptext14:
 11391                           	opt callstack 0
 11392  00800A                     _bRateUpdt:
 11393                           	opt callstack 13
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;incstack = 0
 11397                           ;bRateUpdt@triggered stored from wreg
 11398  00800A  0100               	movlb	0	; () banked
 11399  00800C  6F8E               	movwf	bRateUpdt@triggered& (0+255),b
 11400                           
 11401                           ;brate.c: 36:     bRatePtr = bRatePtr << 1;
 11402  00800E  0060  F2BC  F08B   	movff	_bRatePtr,??_bRateUpdt
 11403  008014  0060  F2C0  F08C   	movff	_bRatePtr+1,??_bRateUpdt+1
 11404  00801A  0060  F2C4  F08D   	movff	_bRatePtr+2,??_bRateUpdt+2
 11405  008020  0100               	movlb	0	; () banked
 11406  008022  90D8               	bcf	status,0,c
 11407  008024  378B               	rlcf	??_bRateUpdt& (0+255),f,b
 11408  008026  378C               	rlcf	(??_bRateUpdt+1)& (0+255),f,b
 11409  008028  378D               	rlcf	(??_bRateUpdt+2)& (0+255),f,b
 11410  00802A  0060  F22C  F0AF   	movff	??_bRateUpdt,_bRatePtr
 11411  008030  0060  F230  F0B0   	movff	??_bRateUpdt+1,_bRatePtr+1
 11412  008036  0060  F234  F0B1   	movff	??_bRateUpdt+2,_bRatePtr+2
 11413                           
 11414                           ;brate.c: 37:     bRateCnt++;
 11415  00803C  2BBA               	incf	_bRateCnt& (0+255),f,b
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;brate.c: 38:     if (bRateCnt > 20){
 11419  00803E  0E14               	movlw	20
 11420  008040  65BA               	cpfsgt	_bRateCnt& (0+255),b
 11421  008042  D002               	goto	l20161
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;brate.c: 39:         bRateCnt = 20;
 11425  008044  0E14               	movlw	20
 11426  008046  6FBA               	movwf	_bRateCnt& (0+255),b
 11427  008048                     l20161:
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;brate.c: 41:     if (bRatePtr == (0x1L << 20)) {
 11431  008048  0E10               	movlw	16
 11432  00804A  19B1               	xorwf	(_bRatePtr+2)& (0+255),w,b
 11433  00804C  11AF               	iorwf	_bRatePtr& (0+255),w,b
 11434  00804E  11B0               	iorwf	(_bRatePtr+1)& (0+255),w,b
 11435  008050  A4D8               	btfss	status,2,c
 11436  008052  D006               	goto	l20165
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;brate.c: 42:         bRatePtr = 1;
 11440  008054  0E01               	movlw	1
 11441  008056  6FAF               	movwf	_bRatePtr& (0+255),b
 11442  008058  0E00               	movlw	0
 11443  00805A  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11444  00805C  0E00               	movlw	0
 11445  00805E  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11446  008060                     l20165:
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;brate.c: 45:     if (bRateHist & bRatePtr) {
 11450  008060  51AF               	movf	_bRatePtr& (0+255),w,b
 11451  008062  0102               	movlb	2	; () banked
 11452  008064  152F               	andwf	_bRateHist& (0+255),w,b
 11453  008066  0100               	movlb	0	; () banked
 11454  008068  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11455  00806A  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11456  00806C  0102               	movlb	2	; () banked
 11457  00806E  1530               	andwf	(_bRateHist+1)& (0+255),w,b
 11458  008070  0100               	movlb	0	; () banked
 11459  008072  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11460  008074  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11461  008076  0102               	movlb	2	; () banked
 11462  008078  1531               	andwf	(_bRateHist+2)& (0+255),w,b
 11463  00807A  0100               	movlb	0	; () banked
 11464  00807C  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11465  00807E  518B               	movf	??_bRateUpdt& (0+255),w,b
 11466  008080  118C               	iorwf	(??_bRateUpdt+1)& (0+255),w,b
 11467  008082  118D               	iorwf	(??_bRateUpdt+2)& (0+255),w,b
 11468  008084  B4D8               	btfsc	status,2,c
 11469  008086  D002               	goto	l20169
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;brate.c: 46:         eBRate -= 5;
 11473  008088  0E05               	movlw	5
 11474  00808A  5FBB               	subwf	_eBRate& (0+255),f,b
 11475  00808C                     l20169:
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;brate.c: 48:     if (triggered) {
 11479  00808C  518E               	movf	bRateUpdt@triggered& (0+255),w,b
 11480  00808E  B4D8               	btfsc	status,2,c
 11481  008090  D00E               	goto	l20175
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;brate.c: 49:         eBRate += 5;
 11485  008092  0E05               	movlw	5
 11486  008094  27BB               	addwf	_eBRate& (0+255),f,b
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;brate.c: 50:         bRateHist |= bRatePtr;
 11490  008096  51AF               	movf	_bRatePtr& (0+255),w,b
 11491  008098  0102               	movlb	2	; () banked
 11492  00809A  132F               	iorwf	_bRateHist& (0+255),f,b
 11493  00809C  0100               	movlb	0	; () banked
 11494  00809E  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11495  0080A0  0102               	movlb	2	; () banked
 11496  0080A2  1330               	iorwf	(_bRateHist+1)& (0+255),f,b
 11497  0080A4  0100               	movlb	0	; () banked
 11498  0080A6  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11499  0080A8  0102               	movlb	2	; () banked
 11500  0080AA  1331               	iorwf	(_bRateHist+2)& (0+255),f,b
 11501                           
 11502                           ;brate.c: 51:     } else {
 11503  0080AC  0012               	return	
 11504  0080AE                     l20175:
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;brate.c: 52:         bRateHist &= ~bRatePtr;
 11508  0080AE  1DAF               	comf	_bRatePtr& (0+255),w,b
 11509  0080B0  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11510  0080B2  1DB0               	comf	(_bRatePtr+1)& (0+255),w,b
 11511  0080B4  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11512  0080B6  1DB1               	comf	(_bRatePtr+2)& (0+255),w,b
 11513  0080B8  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11514  0080BA  518B               	movf	??_bRateUpdt& (0+255),w,b
 11515  0080BC  0102               	movlb	2	; () banked
 11516  0080BE  172F               	andwf	_bRateHist& (0+255),f,b
 11517  0080C0  0100               	movlb	0	; () banked
 11518  0080C2  518C               	movf	(??_bRateUpdt+1)& (0+255),w,b
 11519  0080C4  0102               	movlb	2	; () banked
 11520  0080C6  1730               	andwf	(_bRateHist+1)& (0+255),f,b
 11521  0080C8  0100               	movlb	0	; () banked
 11522  0080CA  518D               	movf	(??_bRateUpdt+2)& (0+255),w,b
 11523  0080CC  0102               	movlb	2	; () banked
 11524  0080CE  1731               	andwf	(_bRateHist+2)& (0+255),f,b
 11525                           
 11526                           ; BSR set to: 2
 11527  0080D0  0012               	return		;funcret
 11528  0080D2                     __end_of_bRateUpdt:
 11529                           	opt callstack 0
 11530                           
 11531 ;; *************** function _bRateInit *****************
 11532 ;; Defined at:
 11533 ;;		line 28 in file "brate.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;		None
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;		None
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  1    wreg      void 
 11540 ;; Registers used:
 11541 ;;		wreg, status,2
 11542 ;; Tracked objects:
 11543 ;;		On entry : 3F/2
 11544 ;;		On exit  : 3F/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;Total ram usage:        0 bytes
 11552 ;; Hardware stack levels used:    1
 11553 ;; Hardware stack levels required when called:   17
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		_main
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text15
 11562  00A1E8                     __ptext15:
 11563                           	opt callstack 0
 11564  00A1E8                     _bRateInit:
 11565                           	opt callstack 13
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;brate.c: 29:     bRateHist = 0;
 11569                           
 11570                           ; BSR set to: 2
 11571                           ;incstack = 0
 11572  00A1E8  0E00               	movlw	0
 11573  00A1EA  6F2F               	movwf	_bRateHist& (0+255),b
 11574  00A1EC  0E00               	movlw	0
 11575  00A1EE  6F30               	movwf	(_bRateHist+1)& (0+255),b
 11576  00A1F0  0E00               	movlw	0
 11577  00A1F2  6F31               	movwf	(_bRateHist+2)& (0+255),b
 11578                           
 11579                           ;brate.c: 30:     bRatePtr = 1;
 11580  00A1F4  0E01               	movlw	1
 11581  00A1F6  0100               	movlb	0	; () banked
 11582  00A1F8  6FAF               	movwf	_bRatePtr& (0+255),b
 11583  00A1FA  0E00               	movlw	0
 11584  00A1FC  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11585  00A1FE  0E00               	movlw	0
 11586  00A200  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11587                           
 11588                           ;brate.c: 31:     eBRate = 0;
 11589  00A202  0E00               	movlw	0
 11590  00A204  6FBB               	movwf	_eBRate& (0+255),b
 11591                           
 11592                           ;brate.c: 32:     bRateCnt = 0;
 11593  00A206  0E00               	movlw	0
 11594  00A208  6FBA               	movwf	_bRateCnt& (0+255),b
 11595                           
 11596                           ; BSR set to: 0
 11597  00A20A  0012               	return		;funcret
 11598  00A20C                     __end_of_bRateInit:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function _aCaptureInit *****************
 11602 ;; Defined at:
 11603 ;;		line 119 in file "aCapture.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  idx             2   99[BANK1 ] int 
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11612 ;; Tracked objects:
 11613 ;;		On entry : 3F/0
 11614 ;;		On exit  : 3F/39
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11618 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11620 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11621 ;;Total ram usage:        2 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:   27
 11624 ;; This function calls:
 11625 ;;		_ADCC_SetADTIInterruptHandler
 11626 ;;		_ADCC_StartConversion
 11627 ;;		_adcGetCh
 11628 ;; This function is called by:
 11629 ;;		_main
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text16
 11634  00950E                     __ptext16:
 11635                           	opt callstack 0
 11636  00950E                     _aCaptureInit:
 11637                           	opt callstack 3
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;aCapture.c: 120:     int idx;;aCapture.c: 121:     curASrc=MainPSensor;
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;incstack = 0
 11644  00950E  0E00               	movlw	0
 11645  009510  6FD1               	movwf	_curASrc& (0+255),b
 11646                           
 11647                           ;aCapture.c: 123:     for (idx=0;idx<3;idx++)
 11648  009512  0E00               	movlw	0
 11649  009514  0101               	movlb	1	; () banked
 11650  009516  6F64               	movwf	(aCaptureInit@idx+1)& (0+255),b
 11651  009518  0E00               	movlw	0
 11652  00951A  6F63               	movwf	aCaptureInit@idx& (0+255),b
 11653  00951C                     l19425:
 11654                           
 11655                           ; BSR set to: 1
 11656                           ;aCapture.c: 124:         resultTblVal[idx]=0;
 11657  00951C  0E24               	movlw	low _resultTblVal
 11658  00951E  2563               	addwf	aCaptureInit@idx& (0+255),w,b
 11659  009520  6ED9               	movwf	fsr2l,c
 11660  009522  0E02               	movlw	high _resultTblVal
 11661  009524  2164               	addwfc	(aCaptureInit@idx+1)& (0+255),w,b
 11662  009526  6EDA               	movwf	fsr2h,c
 11663  009528  0E00               	movlw	0
 11664  00952A  6EDF               	movwf	indf2,c
 11665                           
 11666                           ; BSR set to: 1
 11667  00952C  4B63               	infsnz	aCaptureInit@idx& (0+255),f,b
 11668  00952E  2B64               	incf	(aCaptureInit@idx+1)& (0+255),f,b
 11669                           
 11670                           ; BSR set to: 1
 11671  009530  BF64               	btfsc	(aCaptureInit@idx+1)& (0+255),7,b
 11672  009532  D7F4               	goto	l19425
 11673  009534  5164               	movf	(aCaptureInit@idx+1)& (0+255),w,b
 11674  009536  E104               	bnz	u20370
 11675  009538  0E03               	movlw	3
 11676  00953A  5D63               	subwf	aCaptureInit@idx& (0+255),w,b
 11677  00953C  A0D8               	btfss	status,0,c
 11678  00953E  D7EE               	goto	l19425
 11679  009540                     u20370:
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;aCapture.c: 126:     ADCC_SetADTIInterruptHandler(adcCaptureIsr);
 11683  009540  0E60               	movlw	low _adcCaptureIsr
 11684  009542  0100               	movlb	0	; () banked
 11685  009544  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 11686  009546  0E5B               	movlw	high _adcCaptureIsr
 11687  009548  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 11688  00954A  EC69  F053         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;aCapture.c: 129:     ADCC_StartConversion(adcGetCh(curASrc));
 11692  00954E  51D1               	movf	_curASrc& (0+255),w,b
 11693  009550  EC8A  F049         	call	_adcGetCh
 11694  009554  ECCC  F052         	call	_ADCC_StartConversion
 11695                           
 11696                           ; BSR set to: 62
 11697                           ;aCapture.c: 131:     PIE1bits.ADTIE = 1;
 11698  009558  0139               	movlb	57	; () banked
 11699  00955A  8791               	bsf	145,3,b	;volatile
 11700                           
 11701                           ; BSR set to: 57
 11702  00955C  0012               	return		;funcret
 11703  00955E                     __end_of_aCaptureInit:
 11704                           	opt callstack 0
 11705                           
 11706 ;; *************** function _adcGetCh *****************
 11707 ;; Defined at:
 11708 ;;		line 43 in file "aCapture.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  sel             1    wreg     enum E16104
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  sel             1   98[BANK1 ] enum E16104
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      enum E16053
 11715 ;; Registers used:
 11716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 3F/0
 11719 ;;		On exit  : 3C/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;Total ram usage:        3 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:   26
 11729 ;; This function calls:
 11730 ;;		_printf
 11731 ;; This function is called by:
 11732 ;;		_aCaptureInit
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text17
 11737  009314                     __ptext17:
 11738                           	opt callstack 0
 11739  009314                     _adcGetCh:
 11740                           	opt callstack 3
 11741                           
 11742                           ; BSR set to: 57
 11743                           ;incstack = 0
 11744                           ;adcGetCh@sel stored from wreg
 11745  009314  0101               	movlb	1	; () banked
 11746  009316  6F62               	movwf	adcGetCh@sel& (0+255),b
 11747                           
 11748                           ;aCapture.c: 44:     switch (sel){
 11749  009318  D015               	goto	l18875
 11750  00931A                     l18849:
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;aCapture.c: 46:             return channel_ANE1;
 11754  00931A  0E21               	movlw	33
 11755  00931C  0012               	return	
 11756  00931E                     l18855:
 11757                           
 11758                           ; BSR set to: 1
 11759                           ;aCapture.c: 49:             return channel_ANE2;
 11760  00931E  0E22               	movlw	34
 11761  009320  0012               	return	
 11762  009322                     l18861:
 11763                           
 11764                           ; BSR set to: 1
 11765                           ;aCapture.c: 52:             return channel_ANE0;
 11766  009322  0E20               	movlw	32
 11767  009324  0012               	return	
 11768  009326                     l1943:
 11769                           
 11770                           ; BSR set to: 1
 11771                           ;aCapture.c: 56:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 11772  009326  94BA               	bcf	186,2,c	;volatile
 11773  009328  96BC               	bcf	188,3,c	;volatile
 11774  00932A  96BA               	bcf	186,3,c	;volatile
 11775                           
 11776                           ; BSR set to: 1
 11777  00932C  0EBE               	movlw	low STR_28
 11778  00932E  6F46               	movwf	printf@fmt& (0+255),b
 11779  009330  0EFF               	movlw	high STR_28
 11780  009332  6F47               	movwf	(printf@fmt+1)& (0+255),b
 11781  009334  0E00               	movlw	0
 11782  009336  6F49               	movwf	(?_printf+3)& (0+255),b
 11783  009338  0E64               	movlw	100
 11784  00933A  6F48               	movwf	(?_printf+2)& (0+255),b
 11785  00933C  EC43  F050         	call	_printf	;wreg free
 11786                           
 11787                           ; BSR set to: 2
 11788                           ;aCapture.c: 57:            return -1;
 11789  009340  0EFF               	movlw	255
 11790  009342  0012               	return	
 11791  009344                     l18875:
 11792  009344  0101               	movlb	1	; () banked
 11793  009346  5162               	movf	adcGetCh@sel& (0+255),w,b
 11794  009348  6F60               	movwf	??_adcGetCh& (0+255),b
 11795  00934A  6B61               	clrf	(??_adcGetCh+1)& (0+255),b
 11796                           
 11797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11798                           ; Switch size 1, requested type "simple"
 11799                           ; Number of cases is 1, Range of values is 0 to 0
 11800                           ; switch strategies available:
 11801                           ; Name         Instructions Cycles
 11802                           ; simple_byte            4     3 (average)
 11803                           ;	Chosen strategy is simple_byte
 11804  00934C  5161               	movf	(??_adcGetCh+1)& (0+255),w,b
 11805  00934E  0A00               	xorlw	0	; case 0
 11806  009350  A4D8               	btfss	status,2,c
 11807  009352  D7E9               	goto	l1943
 11808                           
 11809                           ; BSR set to: 1
 11810                           ; Switch size 1, requested type "simple"
 11811                           ; Number of cases is 3, Range of values is 0 to 2
 11812                           ; switch strategies available:
 11813                           ; Name         Instructions Cycles
 11814                           ; simple_byte           10     6 (average)
 11815                           ;	Chosen strategy is simple_byte
 11816  009354  5160               	movf	??_adcGetCh& (0+255),w,b
 11817  009356  0A00               	xorlw	0	; case 0
 11818  009358  B4D8               	btfsc	status,2,c
 11819  00935A  D7DF               	goto	l18849
 11820  00935C  0A01               	xorlw	1	; case 1
 11821  00935E  B4D8               	btfsc	status,2,c
 11822  009360  D7DE               	goto	l18855
 11823  009362  0A03               	xorlw	3	; case 2
 11824  009364  B4D8               	btfsc	status,2,c
 11825  009366  D7DD               	goto	l18861
 11826  009368  D7DE               	goto	l1943
 11827  00936A                     __end_of_adcGetCh:
 11828                           	opt callstack 0
 11829                           
 11830 ;; *************** function _ADCC_StartConversion *****************
 11831 ;; Defined at:
 11832 ;;		line 120 in file "mcc_generated_files/adcc.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  channel         1    wreg     enum E16053
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;  channel         1   43[BANK0 ] enum E16053
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		wreg
 11841 ;; Tracked objects:
 11842 ;;		On entry : 3C/0
 11843 ;;		On exit  : 3F/3E
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;Total ram usage:        1 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:   17
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_aCaptureInit
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text18
 11861  00A598                     __ptext18:
 11862                           	opt callstack 0
 11863  00A598                     _ADCC_StartConversion:
 11864                           	opt callstack 12
 11865                           
 11866                           ;incstack = 0
 11867                           ;ADCC_StartConversion@channel stored from wreg
 11868  00A598  0100               	movlb	0	; () banked
 11869  00A59A  6F8B               	movwf	ADCC_StartConversion@channel& (0+255),b
 11870                           
 11871                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 11872  00A59C  0060  F22F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11873                           
 11874                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 11875  00A5A2  013E               	movlb	62	; () banked
 11876  00A5A4  8FF8               	bsf	248,7,b	;volatile
 11877                           
 11878                           ; BSR set to: 62
 11879                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 11880  00A5A6  81F8               	bsf	248,0,b	;volatile
 11881                           
 11882                           ; BSR set to: 62
 11883  00A5A8  0012               	return		;funcret
 11884  00A5AA                     __end_of_ADCC_StartConversion:
 11885                           	opt callstack 0
 11886                           
 11887 ;; *************** function ___fltol *****************
 11888 ;; Defined at:
 11889 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;  f1              4   73[BANK0 ] void 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  exp1            1   78[BANK0 ] unsigned char 
 11894 ;;  sign1           1   77[BANK0 ] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  4   73[BANK0 ] long 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0
 11899 ;; Tracked objects:
 11900 ;;		On entry : 3F/0
 11901 ;;		On exit  : 3F/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11907 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;Total ram usage:       10 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:   17
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_main
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text19
 11919  007F3C                     __ptext19:
 11920                           	opt callstack 0
 11921  007F3C                     ___fltol:
 11922                           	opt callstack 13
 11923                           
 11924                           ; BSR set to: 0
 11925                           
 11926                           ; BSR set to: 62
 11927                           ;incstack = 0
 11928  007F3C  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11929  007F3E  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11930  007F40  6FAE               	movwf	___fltol@exp1& (0+255),b
 11931  007F42  51AE               	movf	___fltol@exp1& (0+255),w,b
 11932  007F44  A4D8               	btfss	status,2,c
 11933  007F46  D009               	goto	l20385
 11934  007F48                     u21800:
 11935                           
 11936                           ; BSR set to: 0
 11937  007F48  0E00               	movlw	0
 11938  007F4A  6FA9               	movwf	?___fltol& (0+255),b
 11939  007F4C  0E00               	movlw	0
 11940  007F4E  6FAA               	movwf	(?___fltol+1)& (0+255),b
 11941  007F50  0E00               	movlw	0
 11942  007F52  6FAB               	movwf	(?___fltol+2)& (0+255),b
 11943  007F54  0E00               	movlw	0
 11944  007F56  6FAC               	movwf	(?___fltol+3)& (0+255),b
 11945  007F58  0012               	return	
 11946  007F5A                     l20385:
 11947                           
 11948                           ; BSR set to: 0
 11949  007F5A  0060  F2A4  F100   	movff	___fltol@f1,??___fltol
 11950  007F60  0060  F2A8  F101   	movff	___fltol@f1+1,??___fltol+1
 11951  007F66  0060  F2AC  F102   	movff	___fltol@f1+2,??___fltol+2
 11952  007F6C  0060  F2B0  F103   	movff	___fltol@f1+3,??___fltol+3
 11953  007F72  0E20               	movlw	32
 11954  007F74  D006               	goto	u21810
 11955  007F76                     u21815:
 11956  007F76  0101               	movlb	1	; () banked
 11957  007F78  90D8               	bcf	status,0,c
 11958  007F7A  3303               	rrcf	(??___fltol+3)& (0+255),f,b
 11959  007F7C  3302               	rrcf	(??___fltol+2)& (0+255),f,b
 11960  007F7E  3301               	rrcf	(??___fltol+1)& (0+255),f,b
 11961  007F80  3300               	rrcf	??___fltol& (0+255),f,b
 11962  007F82                     u21810:
 11963  007F82  2EE8               	decfsz	wreg,f,c
 11964  007F84  D7F8               	goto	u21815
 11965  007F86  5100               	movf	??___fltol& (0+255),w,b
 11966  007F88  0100               	movlb	0	; () banked
 11967  007F8A  6FAD               	movwf	___fltol@sign1& (0+255),b
 11968                           
 11969                           ; BSR set to: 0
 11970  007F8C  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 11971                           
 11972                           ; BSR set to: 0
 11973  007F8E  0EFF               	movlw	255
 11974  007F90  17A9               	andwf	___fltol@f1& (0+255),f,b
 11975  007F92  0EFF               	movlw	255
 11976  007F94  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 11977  007F96  0EFF               	movlw	255
 11978  007F98  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 11979  007F9A  0E00               	movlw	0
 11980  007F9C  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 11981                           
 11982                           ; BSR set to: 0
 11983  007F9E  0E96               	movlw	150
 11984  007FA0  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 11985                           
 11986                           ; BSR set to: 0
 11987  007FA2  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 11988  007FA4  D00D               	goto	l20405
 11989                           
 11990                           ; BSR set to: 0
 11991  007FA6  51AE               	movf	___fltol@exp1& (0+255),w,b
 11992  007FA8  0A80               	xorlw	128
 11993  007FAA  0F97               	addlw	151
 11994  007FAC  A0D8               	btfss	status,0,c
 11995  007FAE  D7CC               	goto	u21800
 11996  007FB0                     l20401:
 11997                           
 11998                           ; BSR set to: 0
 11999  007FB0  90D8               	bcf	status,0,c
 12000  007FB2  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12001  007FB4  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12002  007FB6  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12003  007FB8  33A9               	rrcf	___fltol@f1& (0+255),f,b
 12004                           
 12005                           ; BSR set to: 0
 12006  007FBA  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 12007  007FBC  D7F9               	goto	l20401
 12008  007FBE  D00D               	goto	u21850
 12009  007FC0                     l20405:
 12010                           
 12011                           ; BSR set to: 0
 12012  007FC0  0E1F               	movlw	31
 12013  007FC2  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 12014  007FC4  D007               	goto	l20413
 12015  007FC6  D7C0               	goto	u21800
 12016  007FC8                     l20411:
 12017                           
 12018                           ; BSR set to: 0
 12019  007FC8  90D8               	bcf	status,0,c
 12020  007FCA  37A9               	rlcf	___fltol@f1& (0+255),f,b
 12021  007FCC  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12022  007FCE  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12023  007FD0  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12024  007FD2  07AE               	decf	___fltol@exp1& (0+255),f,b
 12025  007FD4                     l20413:
 12026                           
 12027                           ; BSR set to: 0
 12028  007FD4  51AE               	movf	___fltol@exp1& (0+255),w,b
 12029  007FD6  A4D8               	btfss	status,2,c
 12030  007FD8  D7F7               	goto	l20411
 12031  007FDA                     u21850:
 12032                           
 12033                           ; BSR set to: 0
 12034  007FDA  51AD               	movf	___fltol@sign1& (0+255),w,b
 12035  007FDC  B4D8               	btfsc	status,2,c
 12036  007FDE  D008               	goto	l20419
 12037                           
 12038                           ; BSR set to: 0
 12039  007FE0  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 12040  007FE2  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 12041  007FE4  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 12042  007FE6  6DA9               	negf	___fltol@f1& (0+255),b
 12043  007FE8  0E00               	movlw	0
 12044  007FEA  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12045  007FEC  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12046  007FEE  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12047  007FF0                     l20419:
 12048                           
 12049                           ; BSR set to: 0
 12050  007FF0  0060  F2A4  F0A9   	movff	___fltol@f1,?___fltol
 12051  007FF6  0060  F2A8  F0AA   	movff	___fltol@f1+1,?___fltol+1
 12052  007FFC  0060  F2AC  F0AB   	movff	___fltol@f1+2,?___fltol+2
 12053  008002  0060  F2B0  F0AC   	movff	___fltol@f1+3,?___fltol+3
 12054                           
 12055                           ; BSR set to: 0
 12056  008008  0012               	return		;funcret
 12057  00800A                     __end_of___fltol:
 12058                           	opt callstack 0
 12059                           
 12060 ;; *************** function ___fladd *****************
 12061 ;; Defined at:
 12062 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;  b               4   57[BANK0 ] long 
 12065 ;;  a               4   61[BANK0 ] long 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;  grs             1   72[BANK0 ] unsigned char 
 12068 ;;  bexp            1   71[BANK0 ] unsigned char 
 12069 ;;  aexp            1   70[BANK0 ] unsigned char 
 12070 ;;  signs           1   69[BANK0 ] unsigned char 
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  4   57[BANK0 ] unsigned char 
 12073 ;; Registers used:
 12074 ;;		wreg, status,2, status,0
 12075 ;; Tracked objects:
 12076 ;;		On entry : 3F/0
 12077 ;;		On exit  : 3F/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12080 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12084 ;;Total ram usage:       16 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:   17
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_main
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text20
 12095  005818                     __ptext20:
 12096                           	opt callstack 0
 12097  005818                     ___fladd:
 12098                           	opt callstack 13
 12099                           
 12100                           ; BSR set to: 0
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;incstack = 0
 12104  005818  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12105  00581A  0B80               	andlw	128
 12106  00581C  6FA5               	movwf	___fladd@signs& (0+255),b
 12107  00581E  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12108  005820  259C               	addwf	(___fladd@b+3)& (0+255),w,b
 12109  005822  6FA7               	movwf	___fladd@bexp& (0+255),b
 12110                           
 12111                           ; BSR set to: 0
 12112  005824  BF9B               	btfsc	(___fladd@b+2)& (0+255),7,b
 12113                           
 12114                           ; BSR set to: 0
 12115  005826  81A7               	bsf	___fladd@bexp& (0+255),0,b
 12116                           
 12117                           ; BSR set to: 0
 12118  005828  51A7               	movf	___fladd@bexp& (0+255),w,b
 12119  00582A  B4D8               	btfsc	status,2,c
 12120  00582C  D00D               	goto	l20193
 12121                           
 12122                           ; BSR set to: 0
 12123  00582E  29A7               	incf	___fladd@bexp& (0+255),w,b
 12124  005830  A4D8               	btfss	status,2,c
 12125  005832  D008               	goto	l20189
 12126                           
 12127                           ; BSR set to: 0
 12128  005834  0E00               	movlw	0
 12129  005836  6F99               	movwf	___fladd@b& (0+255),b
 12130  005838  0E00               	movlw	0
 12131  00583A  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12132  00583C  0E00               	movlw	0
 12133  00583E  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12134  005840  0E00               	movlw	0
 12135  005842  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12136  005844                     l20189:
 12137                           
 12138                           ; BSR set to: 0
 12139  005844  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 12140  005846  D006               	goto	L13
 12141  005848                     l20193:
 12142                           
 12143                           ; BSR set to: 0
 12144  005848  0E00               	movlw	0
 12145  00584A  6F99               	movwf	___fladd@b& (0+255),b
 12146  00584C  0E00               	movlw	0
 12147  00584E  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12148  005850  0E00               	movlw	0
 12149  005852  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12150  005854                     L13:
 12151  005854  0E00               	movlw	0
 12152  005856  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12153                           
 12154                           ; BSR set to: 0
 12155  005858  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12156  00585A  0B80               	andlw	128
 12157  00585C  6FA6               	movwf	___fladd@aexp& (0+255),b
 12158                           
 12159                           ; BSR set to: 0
 12160  00585E  51A5               	movf	___fladd@signs& (0+255),w,b
 12161  005860  19A6               	xorwf	___fladd@aexp& (0+255),w,b
 12162  005862  A4D8               	btfss	status,2,c
 12163                           
 12164                           ; BSR set to: 0
 12165  005864  8DA5               	bsf	___fladd@signs& (0+255),6,b
 12166                           
 12167                           ; BSR set to: 0
 12168  005866  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12169  005868  25A0               	addwf	(___fladd@a+3)& (0+255),w,b
 12170  00586A  6FA6               	movwf	___fladd@aexp& (0+255),b
 12171                           
 12172                           ; BSR set to: 0
 12173  00586C  BF9F               	btfsc	(___fladd@a+2)& (0+255),7,b
 12174                           
 12175                           ; BSR set to: 0
 12176  00586E  81A6               	bsf	___fladd@aexp& (0+255),0,b
 12177                           
 12178                           ; BSR set to: 0
 12179  005870  51A6               	movf	___fladd@aexp& (0+255),w,b
 12180  005872  B4D8               	btfsc	status,2,c
 12181  005874  D00D               	goto	l20217
 12182                           
 12183                           ; BSR set to: 0
 12184  005876  29A6               	incf	___fladd@aexp& (0+255),w,b
 12185  005878  A4D8               	btfss	status,2,c
 12186  00587A  D008               	goto	l20213
 12187                           
 12188                           ; BSR set to: 0
 12189  00587C  0E00               	movlw	0
 12190  00587E  6F9D               	movwf	___fladd@a& (0+255),b
 12191  005880  0E00               	movlw	0
 12192  005882  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 12193  005884  0E00               	movlw	0
 12194  005886  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 12195  005888  0E00               	movlw	0
 12196  00588A  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 12197  00588C                     l20213:
 12198                           
 12199                           ; BSR set to: 0
 12200  00588C  8F9F               	bsf	(___fladd@a+2)& (0+255),7,b
 12201  00588E  D006               	goto	L14
 12202  005890                     l20217:
 12203                           
 12204                           ; BSR set to: 0
 12205  005890  0E00               	movlw	0
 12206  005892  6F9D               	movwf	___fladd@a& (0+255),b
 12207  005894  0E00               	movlw	0
 12208  005896  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 12209  005898  0E00               	movlw	0
 12210  00589A  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 12211  00589C                     L14:
 12212  00589C  0E00               	movlw	0
 12213  00589E  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 12214                           
 12215                           ; BSR set to: 0
 12216  0058A0  51A7               	movf	___fladd@bexp& (0+255),w,b
 12217  0058A2  5DA6               	subwf	___fladd@aexp& (0+255),w,b
 12218  0058A4  B0D8               	btfsc	status,0,c
 12219  0058A6  D031               	goto	l20255
 12220                           
 12221                           ; BSR set to: 0
 12222  0058A8  ADA5               	btfss	___fladd@signs& (0+255),6,b
 12223  0058AA  D002               	goto	l20225
 12224                           
 12225                           ; BSR set to: 0
 12226  0058AC  0E80               	movlw	128
 12227  0058AE  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12228  0058B0                     l20225:
 12229                           
 12230                           ; BSR set to: 0
 12231  0058B0  0060  F29C  F0A8   	movff	___fladd@bexp,___fladd@grs
 12232                           
 12233                           ; BSR set to: 0
 12234  0058B6  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12235                           
 12236                           ; BSR set to: 0
 12237  0058BC  0060  F2A0  F0A6   	movff	___fladd@grs,___fladd@aexp
 12238                           
 12239                           ; BSR set to: 0
 12240  0058C2  0060  F264  F0A8   	movff	___fladd@b,___fladd@grs
 12241                           
 12242                           ; BSR set to: 0
 12243  0058C8  0060  F274  F099   	movff	___fladd@a,___fladd@b
 12244                           
 12245                           ; BSR set to: 0
 12246  0058CE  0060  F2A0  F09D   	movff	___fladd@grs,___fladd@a
 12247                           
 12248                           ; BSR set to: 0
 12249  0058D4  0060  F268  F0A8   	movff	___fladd@b+1,___fladd@grs
 12250                           
 12251                           ; BSR set to: 0
 12252  0058DA  0060  F278  F09A   	movff	___fladd@a+1,___fladd@b+1
 12253                           
 12254                           ; BSR set to: 0
 12255  0058E0  0060  F2A0  F09E   	movff	___fladd@grs,___fladd@a+1
 12256                           
 12257                           ; BSR set to: 0
 12258  0058E6  0060  F26C  F0A8   	movff	___fladd@b+2,___fladd@grs
 12259                           
 12260                           ; BSR set to: 0
 12261  0058EC  0060  F27C  F09B   	movff	___fladd@a+2,___fladd@b+2
 12262                           
 12263                           ; BSR set to: 0
 12264  0058F2  0060  F2A0  F09F   	movff	___fladd@grs,___fladd@a+2
 12265                           
 12266                           ; BSR set to: 0
 12267  0058F8  0060  F270  F0A8   	movff	___fladd@b+3,___fladd@grs
 12268                           
 12269                           ; BSR set to: 0
 12270  0058FE  0060  F280  F09C   	movff	___fladd@a+3,___fladd@b+3
 12271                           
 12272                           ; BSR set to: 0
 12273  005904  0060  F2A0  F0A0   	movff	___fladd@grs,___fladd@a+3
 12274  00590A                     l20255:
 12275                           
 12276                           ; BSR set to: 0
 12277  00590A  0E00               	movlw	0
 12278  00590C  6FA8               	movwf	___fladd@grs& (0+255),b
 12279                           
 12280                           ; BSR set to: 0
 12281  00590E  51A7               	movf	___fladd@bexp& (0+255),w,b
 12282  005910  0060  F298  F0A1   	movff	___fladd@aexp,??___fladd
 12283  005916  6BA2               	clrf	(??___fladd+1)& (0+255),b
 12284  005918  5FA1               	subwf	??___fladd& (0+255),f,b
 12285  00591A  0E00               	movlw	0
 12286  00591C  5BA2               	subwfb	(??___fladd+1)& (0+255),f,b
 12287  00591E  BFA2               	btfsc	(??___fladd+1)& (0+255),7,b
 12288  005920  D02D               	goto	l3730
 12289  005922  51A2               	movf	(??___fladd+1)& (0+255),w,b
 12290  005924  E104               	bnz	u21500
 12291  005926  0E1A               	movlw	26
 12292  005928  5DA1               	subwf	??___fladd& (0+255),w,b
 12293  00592A  A0D8               	btfss	status,0,c
 12294  00592C  D027               	goto	l3730
 12295  00592E                     u21500:
 12296                           
 12297                           ; BSR set to: 0
 12298  00592E  5199               	movf	___fladd@b& (0+255),w,b
 12299  005930  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12300  005932  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12301  005934  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12302  005936  B4D8               	btfsc	status,2,c
 12303  005938  D002               	goto	u21510
 12304  00593A  0E01               	movlw	1
 12305  00593C  D001               	goto	u21520
 12306  00593E                     u21510:
 12307  00593E  0E00               	movlw	0
 12308  005940                     u21520:
 12309  005940  6FA8               	movwf	___fladd@grs& (0+255),b
 12310                           
 12311                           ; BSR set to: 0
 12312  005942  0E00               	movlw	0
 12313  005944  6F99               	movwf	___fladd@b& (0+255),b
 12314  005946  0E00               	movlw	0
 12315  005948  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12316  00594A  0E00               	movlw	0
 12317  00594C  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12318  00594E  0E00               	movlw	0
 12319  005950  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12320                           
 12321                           ; BSR set to: 0
 12322  005952  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12323  005958  D015               	goto	u21550
 12324  00595A                     l3731:
 12325                           
 12326                           ; BSR set to: 0
 12327  00595A  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12328  00595C  D005               	goto	l20267
 12329                           
 12330                           ; BSR set to: 0
 12331  00595E  90D8               	bcf	status,0,c
 12332  005960  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12333  005962  0901               	iorlw	1
 12334  005964  6FA8               	movwf	___fladd@grs& (0+255),b
 12335  005966  D002               	goto	l20269
 12336  005968                     l20267:
 12337                           
 12338                           ; BSR set to: 0
 12339  005968  90D8               	bcf	status,0,c
 12340  00596A  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12341  00596C                     l20269:
 12342                           
 12343                           ; BSR set to: 0
 12344  00596C  B199               	btfsc	___fladd@b& (0+255),0,b
 12345                           
 12346                           ; BSR set to: 0
 12347  00596E  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12348                           
 12349                           ; BSR set to: 0
 12350  005970  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12351  005972  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12352  005974  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12353  005976  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12354  005978  3399               	rrcf	___fladd@b& (0+255),f,b
 12355                           
 12356                           ; BSR set to: 0
 12357  00597A  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12358  00597C                     l3730:
 12359                           
 12360                           ; BSR set to: 0
 12361  00597C  51A6               	movf	___fladd@aexp& (0+255),w,b
 12362  00597E  5DA7               	subwf	___fladd@bexp& (0+255),w,b
 12363  005980  A0D8               	btfss	status,0,c
 12364  005982  D7EB               	goto	l3731
 12365  005984                     u21550:
 12366                           
 12367                           ; BSR set to: 0
 12368  005984  BDA5               	btfsc	___fladd@signs& (0+255),6,b
 12369  005986  D028               	goto	l20301
 12370                           
 12371                           ; BSR set to: 0
 12372  005988  51A7               	movf	___fladd@bexp& (0+255),w,b
 12373  00598A  A4D8               	btfss	status,2,c
 12374  00598C  D009               	goto	l20283
 12375                           
 12376                           ; BSR set to: 0
 12377  00598E  0E00               	movlw	0
 12378  005990  6F99               	movwf	?___fladd& (0+255),b
 12379  005992  0E00               	movlw	0
 12380  005994  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12381  005996  0E00               	movlw	0
 12382  005998  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12383  00599A  0E00               	movlw	0
 12384  00599C  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12385  00599E  0012               	return	
 12386  0059A0                     l20283:
 12387                           
 12388                           ; BSR set to: 0
 12389  0059A0  519D               	movf	___fladd@a& (0+255),w,b
 12390  0059A2  2799               	addwf	___fladd@b& (0+255),f,b
 12391  0059A4  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12392  0059A6  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12393  0059A8  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12394  0059AA  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12395  0059AC  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12396  0059AE  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12397                           
 12398                           ; BSR set to: 0
 12399  0059B0  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12400  0059B2  D071               	goto	u21680
 12401                           
 12402                           ; BSR set to: 0
 12403  0059B4  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12404  0059B6  D005               	goto	l20291
 12405                           
 12406                           ; BSR set to: 0
 12407  0059B8  90D8               	bcf	status,0,c
 12408  0059BA  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12409  0059BC  0901               	iorlw	1
 12410  0059BE  6FA8               	movwf	___fladd@grs& (0+255),b
 12411  0059C0  D002               	goto	l20293
 12412  0059C2                     l20291:
 12413                           
 12414                           ; BSR set to: 0
 12415  0059C2  90D8               	bcf	status,0,c
 12416  0059C4  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12417  0059C6                     l20293:
 12418                           
 12419                           ; BSR set to: 0
 12420  0059C6  B199               	btfsc	___fladd@b& (0+255),0,b
 12421                           
 12422                           ; BSR set to: 0
 12423  0059C8  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12424                           
 12425                           ; BSR set to: 0
 12426  0059CA  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12427  0059CC  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12428  0059CE  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12429  0059D0  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12430  0059D2  3399               	rrcf	___fladd@b& (0+255),f,b
 12431                           
 12432                           ; BSR set to: 0
 12433  0059D4  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12434  0059D6  D05F               	goto	u21680
 12435  0059D8                     l20301:
 12436                           
 12437                           ; BSR set to: 0
 12438  0059D8  519D               	movf	___fladd@a& (0+255),w,b
 12439  0059DA  5D99               	subwf	___fladd@b& (0+255),w,b
 12440  0059DC  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12441  0059DE  599A               	subwfb	(___fladd@b+1)& (0+255),w,b
 12442  0059E0  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12443  0059E2  599B               	subwfb	(___fladd@b+2)& (0+255),w,b
 12444  0059E4  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12445  0059E6  0A80               	xorlw	128
 12446  0059E8  6FA1               	movwf	??___fladd& (0+255),b
 12447  0059EA  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12448  0059EC  0A80               	xorlw	128
 12449  0059EE  59A1               	subwfb	??___fladd& (0+255),w,b
 12450  0059F0  B0D8               	btfsc	status,0,c
 12451  0059F2  D025               	goto	l20311
 12452                           
 12453                           ; BSR set to: 0
 12454  0059F4  5199               	movf	___fladd@b& (0+255),w,b
 12455  0059F6  5D9D               	subwf	___fladd@a& (0+255),w,b
 12456  0059F8  6FA1               	movwf	??___fladd& (0+255),b
 12457  0059FA  519A               	movf	(___fladd@b+1)& (0+255),w,b
 12458  0059FC  599E               	subwfb	(___fladd@a+1)& (0+255),w,b
 12459  0059FE  6FA2               	movwf	(??___fladd+1)& (0+255),b
 12460  005A00  519B               	movf	(___fladd@b+2)& (0+255),w,b
 12461  005A02  599F               	subwfb	(___fladd@a+2)& (0+255),w,b
 12462  005A04  6FA3               	movwf	(??___fladd+2)& (0+255),b
 12463  005A06  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12464  005A08  59A0               	subwfb	(___fladd@a+3)& (0+255),w,b
 12465  005A0A  6FA4               	movwf	(??___fladd+3)& (0+255),b
 12466  005A0C  0EFF               	movlw	255
 12467  005A0E  25A1               	addwf	??___fladd& (0+255),w,b
 12468  005A10  6F99               	movwf	___fladd@b& (0+255),b
 12469  005A12  0EFF               	movlw	255
 12470  005A14  21A2               	addwfc	(??___fladd+1)& (0+255),w,b
 12471  005A16  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12472  005A18  0EFF               	movlw	255
 12473  005A1A  21A3               	addwfc	(??___fladd+2)& (0+255),w,b
 12474  005A1C  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12475  005A1E  0EFF               	movlw	255
 12476  005A20  21A4               	addwfc	(??___fladd+3)& (0+255),w,b
 12477  005A22  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12478  005A24  0E80               	movlw	128
 12479  005A26  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12480                           
 12481                           ; BSR set to: 0
 12482  005A28  6DA8               	negf	___fladd@grs& (0+255),b
 12483                           
 12484                           ; BSR set to: 0
 12485  005A2A  51A8               	movf	___fladd@grs& (0+255),w,b
 12486  005A2C  A4D8               	btfss	status,2,c
 12487  005A2E  D00F               	goto	l3746
 12488                           
 12489                           ; BSR set to: 0
 12490  005A30  0E01               	movlw	1
 12491  005A32  2799               	addwf	___fladd@b& (0+255),f,b
 12492  005A34  0E00               	movlw	0
 12493  005A36  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12494  005A38  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12495  005A3A  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12496  005A3C  D008               	goto	l3746
 12497  005A3E                     l20311:
 12498                           
 12499                           ; BSR set to: 0
 12500  005A3E  519D               	movf	___fladd@a& (0+255),w,b
 12501  005A40  5F99               	subwf	___fladd@b& (0+255),f,b
 12502  005A42  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12503  005A44  5B9A               	subwfb	(___fladd@b+1)& (0+255),f,b
 12504  005A46  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12505  005A48  5B9B               	subwfb	(___fladd@b+2)& (0+255),f,b
 12506  005A4A  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12507  005A4C  5B9C               	subwfb	(___fladd@b+3)& (0+255),f,b
 12508  005A4E                     l3746:
 12509                           
 12510                           ; BSR set to: 0
 12511  005A4E  5199               	movf	___fladd@b& (0+255),w,b
 12512  005A50  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12513  005A52  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12514  005A54  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12515  005A56  A4D8               	btfss	status,2,c
 12516  005A58  D01C               	goto	l20335
 12517                           
 12518                           ; BSR set to: 0
 12519  005A5A  51A8               	movf	___fladd@grs& (0+255),w,b
 12520  005A5C  A4D8               	btfss	status,2,c
 12521  005A5E  D019               	goto	l20335
 12522                           
 12523                           ; BSR set to: 0
 12524  005A60  0E00               	movlw	0
 12525  005A62  6F99               	movwf	?___fladd& (0+255),b
 12526  005A64  0E00               	movlw	0
 12527  005A66  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12528  005A68  0E00               	movlw	0
 12529  005A6A  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12530  005A6C  0E00               	movlw	0
 12531  005A6E  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12532  005A70  0012               	return	
 12533  005A72                     l20319:
 12534                           
 12535                           ; BSR set to: 0
 12536  005A72  90D8               	bcf	status,0,c
 12537  005A74  3799               	rlcf	___fladd@b& (0+255),f,b
 12538  005A76  379A               	rlcf	(___fladd@b+1)& (0+255),f,b
 12539  005A78  379B               	rlcf	(___fladd@b+2)& (0+255),f,b
 12540  005A7A  379C               	rlcf	(___fladd@b+3)& (0+255),f,b
 12541                           
 12542                           ; BSR set to: 0
 12543  005A7C  BFA8               	btfsc	___fladd@grs& (0+255),7,b
 12544                           
 12545                           ; BSR set to: 0
 12546  005A7E  8199               	bsf	___fladd@b& (0+255),0,b
 12547                           
 12548                           ; BSR set to: 0
 12549  005A80  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12550  005A82  D002               	goto	l20329
 12551                           
 12552                           ; BSR set to: 0
 12553  005A84  80D8               	bsf	status,0,c
 12554  005A86  D001               	goto	L15
 12555  005A88                     l20329:
 12556                           
 12557                           ; BSR set to: 0
 12558  005A88  90D8               	bcf	status,0,c
 12559  005A8A                     L15:
 12560  005A8A  37A8               	rlcf	___fladd@grs& (0+255),f,b
 12561                           
 12562                           ; BSR set to: 0
 12563  005A8C  51A7               	movf	___fladd@bexp& (0+255),w,b
 12564  005A8E  A4D8               	btfss	status,2,c
 12565                           
 12566                           ; BSR set to: 0
 12567  005A90  07A7               	decf	___fladd@bexp& (0+255),f,b
 12568  005A92                     l20335:
 12569                           
 12570                           ; BSR set to: 0
 12571  005A92  AF9B               	btfss	(___fladd@b+2)& (0+255),7,b
 12572  005A94  D7EE               	goto	l20319
 12573  005A96                     u21680:
 12574                           
 12575                           ; BSR set to: 0
 12576  005A96  0E00               	movlw	0
 12577  005A98  6FA6               	movwf	___fladd@aexp& (0+255),b
 12578                           
 12579                           ; BSR set to: 0
 12580  005A9A  AFA8               	btfss	___fladd@grs& (0+255),7,b
 12581  005A9C  D00C               	goto	l3755
 12582                           
 12583                           ; BSR set to: 0
 12584  005A9E  0060  F2A0  F0A1   	movff	___fladd@grs,??___fladd
 12585  005AA4  0E7F               	movlw	127
 12586  005AA6  17A1               	andwf	??___fladd& (0+255),f,b
 12587  005AA8  B4D8               	btfsc	status,2,c
 12588  005AAA  D003               	goto	l3756
 12589  005AAC                     u21700:
 12590                           
 12591                           ; BSR set to: 0
 12592  005AAC  0E01               	movlw	1
 12593  005AAE  6FA6               	movwf	___fladd@aexp& (0+255),b
 12594  005AB0  D002               	goto	l3755
 12595  005AB2                     l3756:
 12596                           
 12597                           ; BSR set to: 0
 12598  005AB2  B199               	btfsc	___fladd@b& (0+255),0,b
 12599  005AB4  D7FB               	goto	u21700
 12600  005AB6                     l3755:
 12601                           
 12602                           ; BSR set to: 0
 12603  005AB6  51A6               	movf	___fladd@aexp& (0+255),w,b
 12604  005AB8  B4D8               	btfsc	status,2,c
 12605  005ABA  D028               	goto	l20355
 12606                           
 12607                           ; BSR set to: 0
 12608  005ABC  0E01               	movlw	1
 12609  005ABE  2799               	addwf	___fladd@b& (0+255),f,b
 12610  005AC0  0E00               	movlw	0
 12611  005AC2  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12612  005AC4  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12613  005AC6  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12614                           
 12615                           ; BSR set to: 0
 12616  005AC8  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12617  005ACA  D020               	goto	l20355
 12618                           
 12619                           ; BSR set to: 0
 12620  005ACC  0060  F264  F0A1   	movff	___fladd@b,??___fladd
 12621  005AD2  0060  F268  F0A2   	movff	___fladd@b+1,??___fladd+1
 12622  005AD8  0060  F26C  F0A3   	movff	___fladd@b+2,??___fladd+2
 12623  005ADE  0060  F270  F0A4   	movff	___fladd@b+3,??___fladd+3
 12624  005AE4  35A4               	rlcf	(??___fladd+3)& (0+255),w,b
 12625  005AE6  33A4               	rrcf	(??___fladd+3)& (0+255),f,b
 12626  005AE8  33A3               	rrcf	(??___fladd+2)& (0+255),f,b
 12627  005AEA  33A2               	rrcf	(??___fladd+1)& (0+255),f,b
 12628  005AEC  33A1               	rrcf	??___fladd& (0+255),f,b
 12629  005AEE  0060  F284  F099   	movff	??___fladd,___fladd@b
 12630  005AF4  0060  F288  F09A   	movff	??___fladd+1,___fladd@b+1
 12631  005AFA  0060  F28C  F09B   	movff	??___fladd+2,___fladd@b+2
 12632  005B00  0060  F290  F09C   	movff	??___fladd+3,___fladd@b+3
 12633  005B06  29A7               	incf	___fladd@bexp& (0+255),w,b
 12634  005B08  A4D8               	btfss	status,2,c
 12635                           
 12636                           ; BSR set to: 0
 12637  005B0A  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12638  005B0C                     l20355:
 12639                           
 12640                           ; BSR set to: 0
 12641  005B0C  29A7               	incf	___fladd@bexp& (0+255),w,b
 12642  005B0E  B4D8               	btfsc	status,2,c
 12643  005B10  D003               	goto	u21760
 12644                           
 12645                           ; BSR set to: 0
 12646  005B12  51A7               	movf	___fladd@bexp& (0+255),w,b
 12647  005B14  A4D8               	btfss	status,2,c
 12648  005B16  D00D               	goto	l20363
 12649  005B18                     u21760:
 12650                           
 12651                           ; BSR set to: 0
 12652  005B18  0E00               	movlw	0
 12653  005B1A  6F99               	movwf	___fladd@b& (0+255),b
 12654  005B1C  0E00               	movlw	0
 12655  005B1E  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12656  005B20  0E00               	movlw	0
 12657  005B22  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12658  005B24  0E00               	movlw	0
 12659  005B26  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12660  005B28  51A7               	movf	___fladd@bexp& (0+255),w,b
 12661  005B2A  A4D8               	btfss	status,2,c
 12662  005B2C  D002               	goto	l20363
 12663                           
 12664                           ; BSR set to: 0
 12665  005B2E  0E00               	movlw	0
 12666  005B30  6FA5               	movwf	___fladd@signs& (0+255),b
 12667  005B32                     l20363:
 12668                           
 12669                           ; BSR set to: 0
 12670  005B32  A1A7               	btfss	___fladd@bexp& (0+255),0,b
 12671  005B34  D002               	goto	l20367
 12672                           
 12673                           ; BSR set to: 0
 12674  005B36  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 12675  005B38  D001               	goto	l20369
 12676  005B3A                     l20367:
 12677                           
 12678                           ; BSR set to: 0
 12679  005B3A  9F9B               	bcf	(___fladd@b+2)& (0+255),7,b
 12680  005B3C                     l20369:
 12681                           
 12682                           ; BSR set to: 0
 12683  005B3C  90D8               	bcf	status,0,c
 12684  005B3E  31A7               	rrcf	___fladd@bexp& (0+255),w,b
 12685  005B40  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688  005B42  BFA5               	btfsc	___fladd@signs& (0+255),7,b
 12689                           
 12690                           ; BSR set to: 0
 12691  005B44  8F9C               	bsf	(___fladd@b+3)& (0+255),7,b
 12692                           
 12693                           ; BSR set to: 0
 12694  005B46  0060  F264  F099   	movff	___fladd@b,?___fladd
 12695  005B4C  0060  F268  F09A   	movff	___fladd@b+1,?___fladd+1
 12696  005B52  0060  F26C  F09B   	movff	___fladd@b+2,?___fladd+2
 12697  005B58  0060  F270  F09C   	movff	___fladd@b+3,?___fladd+3
 12698                           
 12699                           ; BSR set to: 0
 12700  005B5E  0012               	return		;funcret
 12701  005B60                     __end_of___fladd:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _TMR4_Start *****************
 12705 ;; Defined at:
 12706 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;		None
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		None
 12715 ;; Tracked objects:
 12716 ;;		On entry : 3F/1
 12717 ;;		On exit  : 3F/1
 12718 ;;		Unchanged: 3F/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;Total ram usage:        0 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:   17
 12727 ;; This function calls:
 12728 ;;		Nothing
 12729 ;; This function is called by:
 12730 ;;		_main
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text21
 12735  00A87E                     __ptext21:
 12736                           	opt callstack 0
 12737  00A87E                     _TMR4_Start:
 12738                           	opt callstack 13
 12739                           
 12740                           ; BSR set to: 1
 12741                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;incstack = 0
 12745  00A87E  8EA0               	bsf	160,7,c	;volatile
 12746                           
 12747                           ; BSR set to: 1
 12748  00A880  0012               	return		;funcret
 12749  00A882                     __end_of_TMR4_Start:
 12750                           	opt callstack 0
 12751                           
 12752 ;; *************** function _SelfTest *****************
 12753 ;; Defined at:
 12754 ;;		line 220 in file "selftest.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  tstScreen       1    wreg     _Bool 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  tstScreen       1    0[BANK3 ] _Bool 
 12759 ;;  vddVal          2   12[BANK3 ] short 
 12760 ;;  vddValMin       2   10[BANK3 ] short 
 12761 ;;  vddValMax       2    8[BANK3 ] short 
 12762 ;;  tstamp          2    6[BANK3 ] unsigned short 
 12763 ;;  cIdx            2    4[BANK3 ] int 
 12764 ;;  idx             2    2[BANK3 ] int 
 12765 ;;  aPValMean       2    0        short 
 12766 ;;  aPValMin        2    0        short 
 12767 ;;  aPValMax        2    0        short 
 12768 ;;  aPVal           2    0        short 
 12769 ;;  initOk          1   14[BANK3 ] _Bool 
 12770 ;;  lcdBLight       1    1[BANK3 ] _Bool 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  1    wreg      _Bool 
 12773 ;; Registers used:
 12774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12775 ;; Tracked objects:
 12776 ;;		On entry : 3F/3
 12777 ;;		On exit  : 3F/3
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12781 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12782 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12783 ;;      Totals:         0       0       4       0      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12784 ;;Total ram usage:       19 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:   33
 12787 ;; This function calls:
 12788 ;;		_MonitorMsgSendBlock
 12789 ;;		_aCaptGetResult
 12790 ;;		_aCaptureOffSet
 12791 ;;		_flowChk
 12792 ;;		_keyPeek
 12793 ;;		_keyReadEC
 12794 ;;		_keyReadInit
 12795 ;;		_pressureSensorChk
 12796 ;;		_printf
 12797 ;;		_printstrblock
 12798 ;;		_setBacklight
 12799 ;;		_setCursor
 12800 ;;		_sprintf
 12801 ;;		_timeDelayMs
 12802 ;;		_timeElapsedR
 12803 ;;		_timeGet
 12804 ;; This function is called by:
 12805 ;;		_main
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text22
 12810  003B84                     __ptext22:
 12811                           	opt callstack 0
 12812  003B84                     _SelfTest:
 12813                           	opt callstack 0
 12814                           
 12815                           ; BSR set to: 1
 12816                           ;incstack = 0
 12817 ;; hardware stack exceeded
 12818                           ;SelfTest@tstScreen stored from wreg
 12819  003B84  6F90               	movwf	SelfTest@tstScreen& (0+255),b
 12820                           
 12821                           ;selftest.c: 221:   int idx, cIdx;;selftest.c: 222:   int16_t vddVal, vddValMax, vddValM
      +                          in;;selftest.c: 223:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 224:   
      +                          _Bool lcdBLight;;selftest.c: 225:   time_t tstamp;;selftest.c: 226:   _Bool initOk;;self
      +                          test.c: 228:   ctrlStatus = CTRL_UNCAL;
 12822  003B86  0E00               	movlw	0
 12823  003B88  0101               	movlb	1	; () banked
 12824  003B8A  6FC0               	movwf	_ctrlStatus& (0+255),b
 12825                           
 12826                           ; BSR set to: 1
 12827                           ;selftest.c: 229:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 12828  003B8C  94BA               	bcf	186,2,c	;volatile
 12829                           
 12830                           ; BSR set to: 1
 12831  003B8E  96BC               	bcf	188,3,c	;volatile
 12832                           
 12833                           ; BSR set to: 1
 12834                           ;selftest.c: 230:   LATAbits.LATA3 = 0;
 12835  003B90  96BA               	bcf	186,3,c	;volatile
 12836                           
 12837                           ; BSR set to: 1
 12838                           ;selftest.c: 232:     if (tstScreen) {
 12839  003B92  0103               	movlb	3	; () banked
 12840  003B94  5190               	movf	SelfTest@tstScreen& (0+255),w,b
 12841  003B96  B4D8               	btfsc	status,2,c
 12842  003B98  D065               	goto	u20400
 12843                           
 12844                           ; BSR set to: 3
 12845                           ;selftest.c: 233:         setCursor(0, 1);
 12846  003B9A  0E01               	movlw	1
 12847  003B9C  0100               	movlb	0	; () banked
 12848  003B9E  6F92               	movwf	setCursor@row& (0+255),b
 12849  003BA0  0E00               	movlw	0
 12850  003BA2  ECAD  F04C         	call	_setCursor
 12851                           
 12852                           ;selftest.c: 234:         printstrblock("SELF-TEST       ");
 12853  003BA6  0EA6               	movlw	low STR_78
 12854  003BA8  0100               	movlb	0	; () banked
 12855  003BAA  6F8F               	movwf	printstrblock@c& (0+255),b
 12856  003BAC  0EFD               	movlw	high STR_78
 12857  003BAE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12858  003BB0  ECA8  F050         	call	_printstrblock	;wreg free
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;selftest.c: 235:         setCursor(0, 0);
 12862  003BB4  0E00               	movlw	0
 12863  003BB6  6F92               	movwf	setCursor@row& (0+255),b
 12864  003BB8  0E00               	movlw	0
 12865  003BBA  ECAD  F04C         	call	_setCursor
 12866                           
 12867                           ;selftest.c: 236:         printstrblock("DISPLAY TEST    ");
 12868  003BBE  0ED9               	movlw	low STR_79
 12869  003BC0  0100               	movlb	0	; () banked
 12870  003BC2  6F8F               	movwf	printstrblock@c& (0+255),b
 12871  003BC4  0EFD               	movlw	high STR_79
 12872  003BC6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12873  003BC8  ECA8  F050         	call	_printstrblock	;wreg free
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;selftest.c: 237:         for (idx = 0; idx < 10; idx++) {
 12877  003BCC  0E00               	movlw	0
 12878  003BCE  0103               	movlb	3	; () banked
 12879  003BD0  6F93               	movwf	(SelfTest@idx+1)& (0+255),b
 12880  003BD2  0E00               	movlw	0
 12881  003BD4  6F92               	movwf	SelfTest@idx& (0+255),b
 12882  003BD6                     l19487:
 12883                           
 12884                           ; BSR set to: 3
 12885                           ;selftest.c: 238:             setCursor(0, 0);
 12886  003BD6  0E00               	movlw	0
 12887  003BD8  0100               	movlb	0	; () banked
 12888  003BDA  6F92               	movwf	setCursor@row& (0+255),b
 12889  003BDC  0E00               	movlw	0
 12890  003BDE  ECAD  F04C         	call	_setCursor
 12891                           
 12892                           ;selftest.c: 239:             lcdTopRow[0] = 0x30 + idx;
 12893  003BE2  0103               	movlb	3	; () banked
 12894  003BE4  5192               	movf	SelfTest@idx& (0+255),w,b
 12895  003BE6  0F30               	addlw	48
 12896  003BE8  0102               	movlb	2	; () banked
 12897  003BEA  6FAB               	movwf	_lcdTopRow& (0+255),b
 12898                           
 12899                           ; BSR set to: 2
 12900                           ;selftest.c: 240:             for (cIdx = 1; cIdx < 16; cIdx++) {
 12901  003BEC  0E00               	movlw	0
 12902  003BEE  0103               	movlb	3	; () banked
 12903  003BF0  6F95               	movwf	(SelfTest@cIdx+1)& (0+255),b
 12904  003BF2  0E01               	movlw	1
 12905  003BF4  6F94               	movwf	SelfTest@cIdx& (0+255),b
 12906  003BF6                     l19497:
 12907                           
 12908                           ; BSR set to: 3
 12909                           ;selftest.c: 241:                 lcdTopRow[cIdx] = lcdTopRow[0];
 12910  003BF6  0EAB               	movlw	low _lcdTopRow
 12911  003BF8  2594               	addwf	SelfTest@cIdx& (0+255),w,b
 12912  003BFA  6ED9               	movwf	fsr2l,c
 12913  003BFC  0E02               	movlw	high _lcdTopRow
 12914  003BFE  2195               	addwfc	(SelfTest@cIdx+1)& (0+255),w,b
 12915  003C00  6EDA               	movwf	fsr2h,c
 12916  003C02  0060  FAAF  FFDF   	movff	_lcdTopRow,indf2
 12917                           
 12918                           ; BSR set to: 3
 12919                           ;selftest.c: 242:             }
 12920  003C08  4B94               	infsnz	SelfTest@cIdx& (0+255),f,b
 12921  003C0A  2B95               	incf	(SelfTest@cIdx+1)& (0+255),f,b
 12922                           
 12923                           ; BSR set to: 3
 12924  003C0C  BF95               	btfsc	(SelfTest@cIdx+1)& (0+255),7,b
 12925  003C0E  D7F3               	goto	l19497
 12926  003C10  5195               	movf	(SelfTest@cIdx+1)& (0+255),w,b
 12927  003C12  E104               	bnz	u20390
 12928  003C14  0E10               	movlw	16
 12929  003C16  5D94               	subwf	SelfTest@cIdx& (0+255),w,b
 12930  003C18  A0D8               	btfss	status,0,c
 12931  003C1A  D7ED               	goto	l19497
 12932  003C1C                     u20390:
 12933                           
 12934                           ; BSR set to: 3
 12935                           ;selftest.c: 243:             printstrblock(lcdTopRow);
 12936  003C1C  0EAB               	movlw	low _lcdTopRow
 12937  003C1E  0100               	movlb	0	; () banked
 12938  003C20  6F8F               	movwf	printstrblock@c& (0+255),b
 12939  003C22  0E02               	movlw	high _lcdTopRow
 12940  003C24  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12941  003C26  ECA8  F050         	call	_printstrblock	;wreg free
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;selftest.c: 244:             setCursor(0, 1);
 12945  003C2A  0E01               	movlw	1
 12946  003C2C  6F92               	movwf	setCursor@row& (0+255),b
 12947  003C2E  0E00               	movlw	0
 12948  003C30  ECAD  F04C         	call	_setCursor
 12949                           
 12950                           ;selftest.c: 245:             printstrblock(lcdTopRow);
 12951  003C34  0EAB               	movlw	low _lcdTopRow
 12952  003C36  0100               	movlb	0	; () banked
 12953  003C38  6F8F               	movwf	printstrblock@c& (0+255),b
 12954  003C3A  0E02               	movlw	high _lcdTopRow
 12955  003C3C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12956  003C3E  ECA8  F050         	call	_printstrblock	;wreg free
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;selftest.c: 246:             timeDelayMs(350);
 12960  003C42  0E01               	movlw	1
 12961  003C44  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12962  003C46  0E5E               	movlw	94
 12963  003C48  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12964  003C4A  ECE4  F04D         	call	_timeDelayMs	;wreg free
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;selftest.c: 247:         }
 12968  003C4E  0103               	movlb	3	; () banked
 12969  003C50  4B92               	infsnz	SelfTest@idx& (0+255),f,b
 12970  003C52  2B93               	incf	(SelfTest@idx+1)& (0+255),f,b
 12971                           
 12972                           ; BSR set to: 3
 12973  003C54  BF93               	btfsc	(SelfTest@idx+1)& (0+255),7,b
 12974  003C56  D7BF               	goto	l19487
 12975  003C58  5193               	movf	(SelfTest@idx+1)& (0+255),w,b
 12976  003C5A  E104               	bnz	u20400
 12977  003C5C  0E0A               	movlw	10
 12978  003C5E  5D92               	subwf	SelfTest@idx& (0+255),w,b
 12979  003C60  A0D8               	btfss	status,0,c
 12980  003C62  D7B9               	goto	l19487
 12981  003C64                     u20400:
 12982                           
 12983                           ; BSR set to: 3
 12984                           ;selftest.c: 250:   setCursor(0, 0);
 12985  003C64  0E00               	movlw	0
 12986  003C66  0100               	movlb	0	; () banked
 12987  003C68  6F92               	movwf	setCursor@row& (0+255),b
 12988  003C6A  0E00               	movlw	0
 12989  003C6C  ECAD  F04C         	call	_setCursor
 12990                           
 12991                           ;selftest.c: 251:   printstrblock("SELF-TEST. LEAVE");
 12992  003C70  0E50               	movlw	low STR_80
 12993  003C72  0100               	movlb	0	; () banked
 12994  003C74  6F8F               	movwf	printstrblock@c& (0+255),b
 12995  003C76  0EFE               	movlw	high STR_80
 12996  003C78  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12997  003C7A  ECA8  F050         	call	_printstrblock	;wreg free
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;selftest.c: 252:   setCursor(0, 1);
 13001  003C7E  0E01               	movlw	1
 13002  003C80  6F92               	movwf	setCursor@row& (0+255),b
 13003  003C82  0E00               	movlw	0
 13004  003C84  ECAD  F04C         	call	_setCursor
 13005                           
 13006                           ;selftest.c: 253:   printstrblock("AIRWAY OPEN     ");
 13007  003C88  0EC8               	movlw	low STR_81
 13008  003C8A  0100               	movlb	0	; () banked
 13009  003C8C  6F8F               	movwf	printstrblock@c& (0+255),b
 13010  003C8E  0EFD               	movlw	high STR_81
 13011  003C90  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13012  003C92  ECA8  F050         	call	_printstrblock	;wreg free
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;selftest.c: 254:   timeDelayMs(1000);
 13016  003C96  0E03               	movlw	3
 13017  003C98  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13018  003C9A  0EE8               	movlw	232
 13019  003C9C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13020  003C9E  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;selftest.c: 256:   vddValMin = 8000;
 13024  003CA2  0E1F               	movlw	31
 13025  003CA4  0103               	movlb	3	; () banked
 13026  003CA6  6F9B               	movwf	(SelfTest@vddValMin+1)& (0+255),b
 13027  003CA8  0E40               	movlw	64
 13028  003CAA  6F9A               	movwf	SelfTest@vddValMin& (0+255),b
 13029                           
 13030                           ; BSR set to: 3
 13031                           ;selftest.c: 257:   vddValMax = 0;
 13032  003CAC  0E00               	movlw	0
 13033  003CAE  6F99               	movwf	(SelfTest@vddValMax+1)& (0+255),b
 13034  003CB0  0E00               	movlw	0
 13035  003CB2  6F98               	movwf	SelfTest@vddValMax& (0+255),b
 13036                           
 13037                           ; BSR set to: 3
 13038                           ;selftest.c: 258:   initOk = 1;
 13039  003CB4  0E01               	movlw	1
 13040  003CB6  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13041                           
 13042                           ; BSR set to: 3
 13043                           ;selftest.c: 260:   if (!MonitorMsgSendBlock(MONSTATE_INIT)) {
 13044  003CB8  0E20               	movlw	32
 13045  003CBA  ECBB  F050         	call	_MonitorMsgSendBlock
 13046  003CBE  0900               	iorlw	0
 13047  003CC0  A4D8               	btfss	status,2,c
 13048  003CC2  D01D               	goto	l19541
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;selftest.c: 261:     initOk = 0;
 13052  003CC4  0E00               	movlw	0
 13053  003CC6  0103               	movlb	3	; () banked
 13054  003CC8  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13055                           
 13056                           ; BSR set to: 3
 13057                           ;selftest.c: 262:     printf ("Mon error");
 13058  003CCA  0E8D               	movlw	low STR_70
 13059  003CCC  0101               	movlb	1	; () banked
 13060  003CCE  6F46               	movwf	printf@fmt& (0+255),b
 13061  003CD0  0EFF               	movlw	high STR_70
 13062  003CD2  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13063  003CD4  EC43  F050         	call	_printf	;wreg free
 13064                           
 13065                           ; BSR set to: 2
 13066                           ;selftest.c: 263:     setCursor(0, 0);
 13067  003CD8  0E00               	movlw	0
 13068  003CDA  0100               	movlb	0	; () banked
 13069  003CDC  6F92               	movwf	setCursor@row& (0+255),b
 13070  003CDE  0E00               	movlw	0
 13071  003CE0  ECAD  F04C         	call	_setCursor
 13072                           
 13073                           ;selftest.c: 264:     printstrblock("MONITOR ERROR");
 13074  003CE4  0E0A               	movlw	low STR_71
 13075  003CE6  0100               	movlb	0	; () banked
 13076  003CE8  6F8F               	movwf	printstrblock@c& (0+255),b
 13077  003CEA  0EFF               	movlw	high STR_71
 13078  003CEC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13079  003CEE  ECA8  F050         	call	_printstrblock	;wreg free
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;selftest.c: 265:     timeDelayMs(500);
 13083  003CF2  0E01               	movlw	1
 13084  003CF4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13085  003CF6  0EF4               	movlw	244
 13086  003CF8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13087  003CFA  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13088  003CFE                     l19541:
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;selftest.c: 268:   aCaptureOffSet(MainPSensor, 0);
 13092  003CFE  0E00               	movlw	0
 13093  003D00  0101               	movlb	1	; () banked
 13094  003D02  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 13095  003D04  0E00               	movlw	0
 13096  003D06  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 13097  003D08  0E00               	movlw	0
 13098  003D0A  ECD5  F04A         	call	_aCaptureOffSet
 13099                           
 13100                           ;selftest.c: 269:   aCaptureOffSet(VolPSensor, 0);
 13101  003D0E  0E00               	movlw	0
 13102  003D10  0101               	movlb	1	; () banked
 13103  003D12  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 13104  003D14  0E00               	movlw	0
 13105  003D16  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 13106  003D18  0E01               	movlw	1
 13107  003D1A  ECD5  F04A         	call	_aCaptureOffSet
 13108                           
 13109                           ;selftest.c: 271:   tstamp = timeGet();
 13110  003D1E  ECD5  F052         	call	_timeGet	;wreg free
 13111  003D22  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13112  003D28  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13113                           
 13114                           ;selftest.c: 273:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 13115  003D2E  D045               	goto	l19561
 13116  003D30                     l19547:
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;selftest.c: 274:     if (aCaptGetResult(VddSensor, &vddVal)) {
 13120  003D30  0E9C               	movlw	low SelfTest@vddVal
 13121  003D32  0101               	movlb	1	; () banked
 13122  003D34  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 13123  003D36  0E03               	movlw	high SelfTest@vddVal
 13124  003D38  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 13125  003D3A  0E02               	movlw	2
 13126  003D3C  EC5A  F033         	call	_aCaptGetResult
 13127  003D40  0900               	iorlw	0
 13128  003D42  B4D8               	btfsc	status,2,c
 13129  003D44  D029               	goto	l2868
 13130                           
 13131                           ;selftest.c: 275:       if (vddVal > vddValMax) {
 13132  003D46  0103               	movlb	3	; () banked
 13133  003D48  519C               	movf	SelfTest@vddVal& (0+255),w,b
 13134  003D4A  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 13135  003D4C  5199               	movf	(SelfTest@vddValMax+1)& (0+255),w,b
 13136  003D4E  0A80               	xorlw	128
 13137  003D50  0101               	movlb	1	; () banked
 13138  003D52  6F91               	movwf	??_SelfTest& (0+255),b
 13139  003D54  0103               	movlb	3	; () banked
 13140  003D56  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 13141  003D58  0A80               	xorlw	128
 13142  003D5A  0101               	movlb	1	; () banked
 13143  003D5C  5991               	subwfb	??_SelfTest& (0+255),w,b
 13144  003D5E  B0D8               	btfsc	status,0,c
 13145  003D60  D006               	goto	l19553
 13146                           
 13147                           ; BSR set to: 1
 13148                           ;selftest.c: 276:  vddValMax = vddVal;
 13149  003D62  0060  FE70  F398   	movff	SelfTest@vddVal,SelfTest@vddValMax
 13150  003D68  0060  FE74  F399   	movff	SelfTest@vddVal+1,SelfTest@vddValMax+1
 13151  003D6E                     l19553:
 13152                           
 13153                           ; BSR set to: 1
 13154                           ;selftest.c: 278:       if (vddVal < vddValMin) {
 13155  003D6E  0103               	movlb	3	; () banked
 13156  003D70  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13157  003D72  5D9C               	subwf	SelfTest@vddVal& (0+255),w,b
 13158  003D74  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 13159  003D76  0A80               	xorlw	128
 13160  003D78  0101               	movlb	1	; () banked
 13161  003D7A  6F91               	movwf	??_SelfTest& (0+255),b
 13162  003D7C  0103               	movlb	3	; () banked
 13163  003D7E  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13164  003D80  0A80               	xorlw	128
 13165  003D82  0101               	movlb	1	; () banked
 13166  003D84  5991               	subwfb	??_SelfTest& (0+255),w,b
 13167  003D86  B0D8               	btfsc	status,0,c
 13168  003D88  D018               	goto	l19561
 13169                           
 13170                           ; BSR set to: 1
 13171                           ;selftest.c: 279:  vddValMin = vddVal;
 13172  003D8A  0060  FE70  F39A   	movff	SelfTest@vddVal,SelfTest@vddValMin
 13173  003D90  0060  FE74  F39B   	movff	SelfTest@vddVal+1,SelfTest@vddValMin+1
 13174  003D96  D011               	goto	l19561
 13175  003D98                     l2868:
 13176                           
 13177                           ;selftest.c: 282:       LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;printf(
      +                          "Fatal %d",22);
 13178  003D98  94BA               	bcf	186,2,c	;volatile
 13179  003D9A  96BC               	bcf	188,3,c	;volatile
 13180  003D9C  96BA               	bcf	186,3,c	;volatile
 13181  003D9E  0EBE               	movlw	low STR_28
 13182  003DA0  0101               	movlb	1	; () banked
 13183  003DA2  6F46               	movwf	printf@fmt& (0+255),b
 13184  003DA4  0EFF               	movlw	high STR_28
 13185  003DA6  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13186  003DA8  0E00               	movlw	0
 13187  003DAA  6F49               	movwf	(?_printf+3)& (0+255),b
 13188  003DAC  0E16               	movlw	22
 13189  003DAE  6F48               	movwf	(?_printf+2)& (0+255),b
 13190  003DB0  EC43  F050         	call	_printf	;wreg free
 13191                           
 13192                           ; BSR set to: 2
 13193                           ;selftest.c: 283:             initOk = 0;
 13194  003DB4  0E00               	movlw	0
 13195  003DB6  0103               	movlb	3	; () banked
 13196  003DB8  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13197  003DBA                     l19561:
 13198                           
 13199                           ;selftest.c: 273:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 13200  003DBA  0E96               	movlw	low SelfTest@tstamp
 13201  003DBC  0100               	movlb	0	; () banked
 13202  003DBE  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 13203  003DC0  0E03               	movlw	high SelfTest@tstamp
 13204  003DC2  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 13205  003DC4  0E01               	movlw	1
 13206  003DC6  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 13207  003DC8  0EF4               	movlw	244
 13208  003DCA  6F95               	movwf	timeElapsedR@duration& (0+255),b
 13209  003DCC  ECBE  F047         	call	_timeElapsedR	;wreg free
 13210  003DD0  0900               	iorlw	0
 13211  003DD2  B4D8               	btfsc	status,2,c
 13212  003DD4  D7AD               	goto	l19547
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;selftest.c: 287:   if (!initOk) {
 13216  003DD6  0103               	movlb	3	; () banked
 13217  003DD8  519E               	movf	SelfTest@initOk& (0+255),w,b
 13218  003DDA  A4D8               	btfss	status,2,c
 13219  003DDC  D003               	goto	l19569
 13220  003DDE                     u20460:
 13221                           
 13222                           ;selftest.c: 288:     return initOk;
 13223  003DDE  0103               	movlb	3	; () banked
 13224  003DE0  519E               	movf	SelfTest@initOk& (0+255),w,b
 13225  003DE2  0012               	return	
 13226  003DE4                     l19569:
 13227                           
 13228                           ; BSR set to: 3
 13229                           ;selftest.c: 292:   vddValMean = (vddValMax + vddValMin) >> 1;
 13230  003DE4  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13231  003DE6  2598               	addwf	SelfTest@vddValMax& (0+255),w,b
 13232  003DE8  0101               	movlb	1	; () banked
 13233  003DEA  6F91               	movwf	??_SelfTest& (0+255),b
 13234  003DEC  0103               	movlb	3	; () banked
 13235  003DEE  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13236  003DF0  2199               	addwfc	(SelfTest@vddValMax+1)& (0+255),w,b
 13237  003DF2  0101               	movlb	1	; () banked
 13238  003DF4  6F92               	movwf	(??_SelfTest+1)& (0+255),b
 13239  003DF6  3592               	rlcf	(??_SelfTest+1)& (0+255),w,b
 13240  003DF8  3192               	rrcf	(??_SelfTest+1)& (0+255),w,b
 13241  003DFA  6F93               	movwf	(??_SelfTest+2)& (0+255),b
 13242  003DFC  3191               	rrcf	??_SelfTest& (0+255),w,b
 13243  003DFE  6F95               	movwf	_vddValMean& (0+255),b
 13244  003E00  0060  F64C  F196   	movff	??_SelfTest+2,_vddValMean+1
 13245                           
 13246                           ; BSR set to: 1
 13247                           ;selftest.c: 293:   printf ("VDD Min %d Max %d MEAN %d\n", vddValMin, vddValMax, vddValM
      +                          ean);
 13248  003E06  0E76               	movlw	low STR_85
 13249  003E08  6F46               	movwf	printf@fmt& (0+255),b
 13250  003E0A  0EFC               	movlw	high STR_85
 13251  003E0C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13252  003E0E  0060  FE68  F148   	movff	SelfTest@vddValMin,?_printf+2
 13253  003E14  0060  FE6C  F149   	movff	SelfTest@vddValMin+1,?_printf+3
 13254  003E1A  0060  FE60  F14A   	movff	SelfTest@vddValMax,?_printf+4
 13255  003E20  0060  FE64  F14B   	movff	SelfTest@vddValMax+1,?_printf+5
 13256  003E26  0060  F654  F14C   	movff	_vddValMean,?_printf+6
 13257  003E2C  0060  F658  F14D   	movff	_vddValMean+1,?_printf+7
 13258  003E32  EC43  F050         	call	_printf	;wreg free
 13259                           
 13260                           ; BSR set to: 2
 13261                           ;selftest.c: 295:   if ((vddValMean > 5250) || (vddValMean < 4750)) {
 13262  003E36  0101               	movlb	1	; () banked
 13263  003E38  BF96               	btfsc	(_vddValMean+1)& (0+255),7,b
 13264  003E3A  D006               	goto	u20470
 13265  003E3C  0E83               	movlw	131
 13266  003E3E  5D95               	subwf	_vddValMean& (0+255),w,b
 13267  003E40  0E14               	movlw	20
 13268  003E42  5996               	subwfb	(_vddValMean+1)& (0+255),w,b
 13269  003E44  B0D8               	btfsc	status,0,c
 13270  003E46  D008               	goto	u20480
 13271  003E48                     u20470:
 13272                           
 13273                           ; BSR set to: 1
 13274  003E48  BF96               	btfsc	(_vddValMean+1)& (0+255),7,b
 13275  003E4A  D006               	goto	u20480
 13276  003E4C  0E8E               	movlw	142
 13277  003E4E  5D95               	subwf	_vddValMean& (0+255),w,b
 13278  003E50  0E12               	movlw	18
 13279  003E52  5996               	subwfb	(_vddValMean+1)& (0+255),w,b
 13280  003E54  B0D8               	btfsc	status,0,c
 13281  003E56  D02E               	goto	l19589
 13282  003E58                     u20480:
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;selftest.c: 297:     setCursor(0, 0);
 13286  003E58  0E00               	movlw	0
 13287  003E5A  0100               	movlb	0	; () banked
 13288  003E5C  6F92               	movwf	setCursor@row& (0+255),b
 13289  003E5E  0E00               	movlw	0
 13290  003E60  ECAD  F04C         	call	_setCursor
 13291                           
 13292                           ;selftest.c: 298:     printstrblock("INTERNAL ERROR  ");
 13293  003E64  0E1D               	movlw	low STR_86
 13294  003E66  0100               	movlb	0	; () banked
 13295  003E68  6F8F               	movwf	printstrblock@c& (0+255),b
 13296  003E6A  0EFE               	movlw	high STR_86
 13297  003E6C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13298  003E6E  ECA8  F050         	call	_printstrblock	;wreg free
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;selftest.c: 299:     setCursor(0, 1);
 13302  003E72  0E01               	movlw	1
 13303  003E74  6F92               	movwf	setCursor@row& (0+255),b
 13304  003E76  0E00               	movlw	0
 13305  003E78  ECAD  F04C         	call	_setCursor
 13306                           
 13307                           ;selftest.c: 300:     sprintf(lcdTopRow, "VDD OOL: % 3d mV", vddValMean);
 13308  003E7C  0EAB               	movlw	low _lcdTopRow
 13309  003E7E  0101               	movlb	1	; () banked
 13310  003E80  6F46               	movwf	sprintf@s& (0+255),b
 13311  003E82  0E02               	movlw	high _lcdTopRow
 13312  003E84  6F47               	movwf	(sprintf@s+1)& (0+255),b
 13313  003E86  0E72               	movlw	low STR_87
 13314  003E88  6F48               	movwf	sprintf@fmt& (0+255),b
 13315  003E8A  0EFE               	movlw	high STR_87
 13316  003E8C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 13317  003E8E  0060  F654  F14A   	movff	_vddValMean,?_sprintf+4
 13318  003E94  0060  F658  F14B   	movff	_vddValMean+1,?_sprintf+5
 13319  003E9A  EC31  F049         	call	_sprintf	;wreg free
 13320                           
 13321                           ; BSR set to: 1
 13322                           ;selftest.c: 301:     printstrblock(lcdTopRow);
 13323  003E9E  0EAB               	movlw	low _lcdTopRow
 13324  003EA0  0100               	movlb	0	; () banked
 13325  003EA2  6F8F               	movwf	printstrblock@c& (0+255),b
 13326  003EA4  0E02               	movlw	high _lcdTopRow
 13327  003EA6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13328  003EA8  ECA8  F050         	call	_printstrblock	;wreg free
 13329  003EAC                     l19587:
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;selftest.c: 302:     initOk = 0;
 13333  003EAC  0E00               	movlw	0
 13334  003EAE  0103               	movlb	3	; () banked
 13335  003EB0  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13336                           
 13337                           ;selftest.c: 303:   } else if ((vddValMax - vddValMin) > 100) {
 13338  003EB2  D02C               	goto	l19599
 13339  003EB4                     l19589:
 13340                           
 13341                           ; BSR set to: 1
 13342  003EB4  0103               	movlb	3	; () banked
 13343  003EB6  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13344  003EB8  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 13345  003EBA  0101               	movlb	1	; () banked
 13346  003EBC  6F91               	movwf	??_SelfTest& (0+255),b
 13347  003EBE  0103               	movlb	3	; () banked
 13348  003EC0  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13349  003EC2  5999               	subwfb	(SelfTest@vddValMax+1)& (0+255),w,b
 13350  003EC4  0101               	movlb	1	; () banked
 13351  003EC6  6F92               	movwf	(??_SelfTest+1)& (0+255),b
 13352  003EC8  BF92               	btfsc	(??_SelfTest+1)& (0+255),7,b
 13353  003ECA  D020               	goto	l19599
 13354  003ECC  5192               	movf	(??_SelfTest+1)& (0+255),w,b
 13355  003ECE  E104               	bnz	u20490
 13356  003ED0  0E65               	movlw	101
 13357  003ED2  5D91               	subwf	??_SelfTest& (0+255),w,b
 13358  003ED4  A0D8               	btfss	status,0,c
 13359  003ED6  D01A               	goto	l19599
 13360  003ED8                     u20490:
 13361                           
 13362                           ; BSR set to: 1
 13363                           ;selftest.c: 305:     setCursor(0, 0);
 13364  003ED8  0E00               	movlw	0
 13365  003EDA  0100               	movlb	0	; () banked
 13366  003EDC  6F92               	movwf	setCursor@row& (0+255),b
 13367  003EDE  0E00               	movlw	0
 13368  003EE0  ECAD  F04C         	call	_setCursor
 13369                           
 13370                           ;selftest.c: 306:     printstrblock("INTERNAL ERROR  ");
 13371  003EE4  0E1D               	movlw	low STR_86
 13372  003EE6  0100               	movlb	0	; () banked
 13373  003EE8  6F8F               	movwf	printstrblock@c& (0+255),b
 13374  003EEA  0EFE               	movlw	high STR_86
 13375  003EEC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13376  003EEE  ECA8  F050         	call	_printstrblock	;wreg free
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;selftest.c: 307:     setCursor(0, 1);
 13380  003EF2  0E01               	movlw	1
 13381  003EF4  6F92               	movwf	setCursor@row& (0+255),b
 13382  003EF6  0E00               	movlw	0
 13383  003EF8  ECAD  F04C         	call	_setCursor
 13384                           
 13385                           ;selftest.c: 308:     printstrblock("VDD NOISY       ");
 13386  003EFC  0EB7               	movlw	low STR_89
 13387  003EFE  0100               	movlb	0	; () banked
 13388  003F00  6F8F               	movwf	printstrblock@c& (0+255),b
 13389  003F02  0EFD               	movlw	high STR_89
 13390  003F04  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13391  003F06  ECA8  F050         	call	_printstrblock	;wreg free
 13392  003F0A  D7D0               	goto	l19587
 13393  003F0C                     l19599:
 13394                           
 13395                           ;selftest.c: 312:   if (!initOk) {
 13396  003F0C  0103               	movlb	3	; () banked
 13397  003F0E  519E               	movf	SelfTest@initOk& (0+255),w,b
 13398  003F10  B4D8               	btfsc	status,2,c
 13399  003F12  D765               	goto	u20460
 13400  003F14  D0A9               	goto	l19659
 13401  003F16                     l2882:
 13402                           
 13403                           ; BSR set to: 1
 13404                           ;selftest.c: 317:     LATDbits.LATD6 = 0;
 13405  003F16  9CBD               	bcf	189,6,c	;volatile
 13406                           
 13407                           ;selftest.c: 319:     while (keyPeek() != -1)
 13408  003F18  D00E               	goto	l19607
 13409  003F1A                     l19605:
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;selftest.c: 320:       printf ("KP %d\n", keyPeek());
 13413  003F1A  0EE6               	movlw	low STR_90
 13414  003F1C  0101               	movlb	1	; () banked
 13415  003F1E  6F46               	movwf	printf@fmt& (0+255),b
 13416  003F20  0EFF               	movlw	high STR_90
 13417  003F22  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13418  003F24  ECEE  F047         	call	_keyPeek	;wreg free
 13419  003F28  0101               	movlb	1	; () banked
 13420  003F2A  6F48               	movwf	(?_printf+2)& (0+255),b
 13421  003F2C  6B49               	clrf	(?_printf+3)& (0+255),b
 13422  003F2E  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 13423  003F30  0749               	decf	(?_printf+3)& (0+255),f,b
 13424  003F32  EC43  F050         	call	_printf	;wreg free
 13425  003F36                     l19607:
 13426                           
 13427                           ;selftest.c: 319:     while (keyPeek() != -1)
 13428  003F36  ECEE  F047         	call	_keyPeek	;wreg free
 13429  003F3A  0AFF               	xorlw	255
 13430  003F3C  A4D8               	btfss	status,2,c
 13431  003F3E  D7ED               	goto	l19605
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;selftest.c: 322:     keyReadInit();
 13435  003F40  ECA4  F052         	call	_keyReadInit	;wreg free
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;selftest.c: 326:     LATDbits.LATD6 = 1;
 13439  003F44  8CBD               	bsf	189,6,c	;volatile
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;selftest.c: 327:     setCursor(0, 0);
 13443  003F46  0E00               	movlw	0
 13444  003F48  6F92               	movwf	setCursor@row& (0+255),b
 13445  003F4A  0E00               	movlw	0
 13446  003F4C  ECAD  F04C         	call	_setCursor
 13447                           
 13448                           ;selftest.c: 328:     printstrblock("CAL PRESS BREATH");
 13449  003F50  0E61               	movlw	low STR_91
 13450  003F52  0100               	movlb	0	; () banked
 13451  003F54  6F8F               	movwf	printstrblock@c& (0+255),b
 13452  003F56  0EFE               	movlw	high STR_91
 13453  003F58  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13454  003F5A  ECA8  F050         	call	_printstrblock	;wreg free
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;selftest.c: 329:     tstamp = timeGet();
 13458  003F5E  ECD5  F052         	call	_timeGet	;wreg free
 13459  003F62  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13460  003F68  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;selftest.c: 330:     lcdBLight = 1;
 13464  003F6E  0E01               	movlw	1
 13465  003F70  0103               	movlb	3	; () banked
 13466  003F72  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13467                           
 13468                           ; BSR set to: 3
 13469                           ;selftest.c: 332:     tstamp = timeGet();
 13470  003F74  ECD5  F052         	call	_timeGet	;wreg free
 13471  003F78  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13472  003F7E  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13473  003F84                     l19623:
 13474                           
 13475                           ; BSR set to: 0
 13476                           ;selftest.c: 334:       if (timeElapsedR(&tstamp, ((time_t) 500*1))) {
 13477  003F84  0E96               	movlw	low SelfTest@tstamp
 13478  003F86  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 13479  003F88  0E03               	movlw	high SelfTest@tstamp
 13480  003F8A  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 13481  003F8C  0E01               	movlw	1
 13482  003F8E  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 13483  003F90  0EF4               	movlw	244
 13484  003F92  6F95               	movwf	timeElapsedR@duration& (0+255),b
 13485  003F94  ECBE  F047         	call	_timeElapsedR	;wreg free
 13486  003F98  0900               	iorlw	0
 13487  003F9A  B4D8               	btfsc	status,2,c
 13488  003F9C  D00C               	goto	l19629
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;selftest.c: 335:  setBacklight(lcdBLight);
 13492  003F9E  0103               	movlb	3	; () banked
 13493  003FA0  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13494  003FA2  EC56  F052         	call	_setBacklight
 13495                           
 13496                           ;selftest.c: 336:  lcdBLight = !lcdBLight;
 13497  003FA6  0103               	movlb	3	; () banked
 13498  003FA8  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13499  003FAA  A4D8               	btfss	status,2,c
 13500  003FAC  D002               	goto	u20530
 13501  003FAE  0E01               	movlw	1
 13502  003FB0  D001               	goto	u20540
 13503  003FB2                     u20530:
 13504  003FB2  0E00               	movlw	0
 13505  003FB4                     u20540:
 13506  003FB4  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13507  003FB6                     l19629:
 13508                           
 13509                           ;selftest.c: 340:       if (keyReadEC() == -100) {
 13510  003FB6  EC50  F044         	call	_keyReadEC	;wreg free
 13511  003FBA  0A9C               	xorlw	156
 13512  003FBC  A4D8               	btfss	status,2,c
 13513  003FBE  D7E2               	goto	l19623
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;selftest.c: 341:  if (keyPeek() == 4) {
 13517  003FC0  ECEE  F047         	call	_keyPeek	;wreg free
 13518  003FC4  0A04               	xorlw	4
 13519  003FC6  A4D8               	btfss	status,2,c
 13520  003FC8  D7DD               	goto	l19623
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;selftest.c: 343:    setBacklight(1);
 13524  003FCA  0E01               	movlw	1
 13525  003FCC  EC56  F052         	call	_setBacklight
 13526                           
 13527                           ;selftest.c: 349:     LATDbits.LATD6 = 0;
 13528                           
 13529                           ;selftest.c: 344:    break;
 13530  003FD0  9CBD               	bcf	189,6,c	;volatile
 13531                           
 13532                           ;selftest.c: 350:     printf ("CALP\n");
 13533  003FD2  0EED               	movlw	low STR_92
 13534  003FD4  0101               	movlb	1	; () banked
 13535  003FD6  6F46               	movwf	printf@fmt& (0+255),b
 13536  003FD8  0EFF               	movlw	high STR_92
 13537  003FDA  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13538  003FDC  EC43  F050         	call	_printf	;wreg free
 13539                           
 13540                           ; BSR set to: 2
 13541                           ;selftest.c: 351:     if (!MonitorMsgSendBlock(MONSTATE_CALP)){
 13542  003FE0  0E40               	movlw	64
 13543  003FE2  ECBB  F050         	call	_MonitorMsgSendBlock
 13544  003FE6  0900               	iorlw	0
 13545  003FE8  A4D8               	btfss	status,2,c
 13546  003FEA  D01D               	goto	l19649
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;selftest.c: 352:       initOk=0;
 13550  003FEC  0E00               	movlw	0
 13551  003FEE  0103               	movlb	3	; () banked
 13552  003FF0  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13553                           
 13554                           ; BSR set to: 3
 13555                           ;selftest.c: 353:       printf ("Mon error");
 13556  003FF2  0E8D               	movlw	low STR_70
 13557  003FF4  0101               	movlb	1	; () banked
 13558  003FF6  6F46               	movwf	printf@fmt& (0+255),b
 13559  003FF8  0EFF               	movlw	high STR_70
 13560  003FFA  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13561  003FFC  EC43  F050         	call	_printf	;wreg free
 13562                           
 13563                           ; BSR set to: 2
 13564                           ;selftest.c: 354:       setCursor(0, 0);
 13565  004000  0E00               	movlw	0
 13566  004002  0100               	movlb	0	; () banked
 13567  004004  6F92               	movwf	setCursor@row& (0+255),b
 13568  004006  0E00               	movlw	0
 13569  004008  ECAD  F04C         	call	_setCursor
 13570                           
 13571                           ;selftest.c: 355:       printstrblock("MONITOR ERROR   ");
 13572  00400C  0E0C               	movlw	low STR_94
 13573  00400E  0100               	movlb	0	; () banked
 13574  004010  6F8F               	movwf	printstrblock@c& (0+255),b
 13575  004012  0EFE               	movlw	high STR_94
 13576  004014  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13577  004016  ECA8  F050         	call	_printstrblock	;wreg free
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;selftest.c: 356:       timeDelayMs(500);
 13581  00401A  0E01               	movlw	1
 13582  00401C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13583  00401E  0EF4               	movlw	244
 13584  004020  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13585  004022  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13586  004026                     l19649:
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;selftest.c: 359:     if (pressureSensorChk(1, 500)) {
 13590  004026  0E01               	movlw	1
 13591  004028  0101               	movlb	1	; () banked
 13592  00402A  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13593  00402C  0EF4               	movlw	244
 13594  00402E  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13595  004030  0E01               	movlw	1
 13596  004032  EC19  F021         	call	_pressureSensorChk
 13597  004036  0900               	iorlw	0
 13598  004038  B4D8               	btfsc	status,2,c
 13599  00403A  D003               	goto	l19653
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;selftest.c: 361:       ctrlStatus = CTRL_STOP;
 13603  00403C  0E01               	movlw	1
 13604  00403E  6FC0               	movwf	_ctrlStatus& (0+255),b
 13605                           
 13606                           ;selftest.c: 362:     } else {
 13607  004040  D013               	goto	l19659
 13608  004042                     l19653:
 13609                           
 13610                           ; BSR set to: 1
 13611                           ;selftest.c: 363:       setCursor(0, 0);
 13612  004042  0E00               	movlw	0
 13613  004044  0100               	movlb	0	; () banked
 13614  004046  6F92               	movwf	setCursor@row& (0+255),b
 13615  004048  0E00               	movlw	0
 13616  00404A  ECAD  F04C         	call	_setCursor
 13617                           
 13618                           ;selftest.c: 364:       printstrblock("CAL ERROR. RETRY ");
 13619  00404E  0E82               	movlw	low STR_95
 13620  004050  0100               	movlb	0	; () banked
 13621  004052  6F8F               	movwf	printstrblock@c& (0+255),b
 13622  004054  0EFD               	movlw	high STR_95
 13623  004056  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13624  004058  ECA8  F050         	call	_printstrblock	;wreg free
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;selftest.c: 365:       timeDelayMs(500);
 13628  00405C  0E01               	movlw	1
 13629  00405E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13630  004060  0EF4               	movlw	244
 13631  004062  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13632  004064  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13633  004068                     l19659:
 13634                           
 13635                           ;selftest.c: 316:   while (ctrlStatus == CTRL_UNCAL) {
 13636  004068  0101               	movlb	1	; () banked
 13637  00406A  51C0               	movf	_ctrlStatus& (0+255),w,b
 13638  00406C  B4D8               	btfsc	status,2,c
 13639  00406E  D753               	goto	l2882
 13640                           
 13641                           ; BSR set to: 1
 13642                           ;selftest.c: 369:   if (!initOk) {
 13643  004070  0103               	movlb	3	; () banked
 13644  004072  519E               	movf	SelfTest@initOk& (0+255),w,b
 13645  004074  B4D8               	btfsc	status,2,c
 13646  004076  D6B3               	goto	u20460
 13647                           
 13648                           ; BSR set to: 3
 13649                           ;selftest.c: 374:   printf ("CHKSV2\n");
 13650  004078  0ECF               	movlw	low STR_96
 13651  00407A  0101               	movlb	1	; () banked
 13652  00407C  6F46               	movwf	printf@fmt& (0+255),b
 13653  00407E  0EFF               	movlw	high STR_96
 13654  004080  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13655  004082  EC43  F050         	call	_printf	;wreg free
 13656                           
 13657                           ; BSR set to: 2
 13658                           ;selftest.c: 376:   if (!MonitorMsgSendBlock(MONSTATE_SV2CHK)) {
 13659  004086  0E60               	movlw	96
 13660  004088  ECBB  F050         	call	_MonitorMsgSendBlock
 13661  00408C  0900               	iorlw	0
 13662  00408E  A4D8               	btfss	status,2,c
 13663  004090  D01D               	goto	l19681
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;selftest.c: 377:         initOk = 0;
 13667  004092  0E00               	movlw	0
 13668  004094  0103               	movlb	3	; () banked
 13669  004096  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13670                           
 13671                           ; BSR set to: 3
 13672                           ;selftest.c: 378:         printf ("Mon error");
 13673  004098  0E8D               	movlw	low STR_70
 13674  00409A  0101               	movlb	1	; () banked
 13675  00409C  6F46               	movwf	printf@fmt& (0+255),b
 13676  00409E  0EFF               	movlw	high STR_70
 13677  0040A0  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13678  0040A2  EC43  F050         	call	_printf	;wreg free
 13679                           
 13680                           ; BSR set to: 2
 13681                           ;selftest.c: 379:         setCursor(0, 0);
 13682  0040A6  0E00               	movlw	0
 13683  0040A8  0100               	movlb	0	; () banked
 13684  0040AA  6F92               	movwf	setCursor@row& (0+255),b
 13685  0040AC  0E00               	movlw	0
 13686  0040AE  ECAD  F04C         	call	_setCursor
 13687                           
 13688                           ;selftest.c: 380:         printstrblock("MONITOR ERROR   ");
 13689  0040B2  0E0C               	movlw	low STR_94
 13690  0040B4  0100               	movlb	0	; () banked
 13691  0040B6  6F8F               	movwf	printstrblock@c& (0+255),b
 13692  0040B8  0EFE               	movlw	high STR_94
 13693  0040BA  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13694  0040BC  ECA8  F050         	call	_printstrblock	;wreg free
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;selftest.c: 381:         timeDelayMs(500);
 13698  0040C0  0E01               	movlw	1
 13699  0040C2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13700  0040C4  0EF4               	movlw	244
 13701  0040C6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13702  0040C8  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13703  0040CC                     l19681:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;selftest.c: 384:   LATDbits.LATD0 = 1;
 13707  0040CC  80BD               	bsf	189,0,c	;volatile
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;selftest.c: 386:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 13711  0040CE  94BA               	bcf	186,2,c	;volatile
 13712                           
 13713                           ; BSR set to: 0
 13714  0040D0  96BC               	bcf	188,3,c	;volatile
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;selftest.c: 387:   timeDelayMs(200);
 13718  0040D2  0E00               	movlw	0
 13719  0040D4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13720  0040D6  0EC8               	movlw	200
 13721  0040D8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13722  0040DA  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;selftest.c: 388:   if (!pressureSensorChk(0, 100)) {
 13726  0040DE  0E00               	movlw	0
 13727  0040E0  0101               	movlb	1	; () banked
 13728  0040E2  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13729  0040E4  0E64               	movlw	100
 13730  0040E6  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13731  0040E8  0E00               	movlw	0
 13732  0040EA  EC19  F021         	call	_pressureSensorChk
 13733  0040EE  0900               	iorlw	0
 13734  0040F0  A4D8               	btfss	status,2,c
 13735  0040F2  D016               	goto	l19699
 13736                           
 13737                           ; BSR set to: 1
 13738                           ;selftest.c: 389:     initOk=0;
 13739  0040F4  0E00               	movlw	0
 13740  0040F6  0103               	movlb	3	; () banked
 13741  0040F8  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13742                           
 13743                           ; BSR set to: 3
 13744                           ;selftest.c: 390:  setCursor(0, 0);
 13745  0040FA  0E00               	movlw	0
 13746  0040FC  0100               	movlb	0	; () banked
 13747  0040FE  6F92               	movwf	setCursor@row& (0+255),b
 13748  004100  0E00               	movlw	0
 13749  004102  ECAD  F04C         	call	_setCursor
 13750                           
 13751                           ;selftest.c: 391:     printstrblock("SV2 Valve error ");
 13752  004106  0E3F               	movlw	low STR_99
 13753  004108  0100               	movlb	0	; () banked
 13754  00410A  6F8F               	movwf	printstrblock@c& (0+255),b
 13755  00410C  0EFE               	movlw	high STR_99
 13756  00410E  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13757  004110  ECA8  F050         	call	_printstrblock	;wreg free
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;selftest.c: 392:     timeDelayMs(500);
 13761  004114  0E01               	movlw	1
 13762  004116  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13763  004118  0EF4               	movlw	244
 13764  00411A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13765  00411C  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13766  004120                     l19699:
 13767                           
 13768                           ;selftest.c: 396:   LATDbits.LATD0 = 0;
 13769  004120  90BD               	bcf	189,0,c	;volatile
 13770                           
 13771                           ;selftest.c: 397:   printf ("CHKSV1\n");
 13772  004122  0EC7               	movlw	low STR_100
 13773  004124  0101               	movlb	1	; () banked
 13774  004126  6F46               	movwf	printf@fmt& (0+255),b
 13775  004128  0EFF               	movlw	high STR_100
 13776  00412A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13777  00412C  EC43  F050         	call	_printf	;wreg free
 13778                           
 13779                           ; BSR set to: 2
 13780                           ;selftest.c: 398:     if (!MonitorMsgSendBlock(MONSTATE_SV1CHK)) {
 13781  004130  0E80               	movlw	128
 13782  004132  ECBB  F050         	call	_MonitorMsgSendBlock
 13783  004136  0900               	iorlw	0
 13784  004138  A4D8               	btfss	status,2,c
 13785  00413A  D01D               	goto	l19715
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;selftest.c: 399:         initOk = 0;
 13789  00413C  0E00               	movlw	0
 13790  00413E  0103               	movlb	3	; () banked
 13791  004140  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13792                           
 13793                           ; BSR set to: 3
 13794                           ;selftest.c: 400:         printf ("Mon error");
 13795  004142  0E8D               	movlw	low STR_70
 13796  004144  0101               	movlb	1	; () banked
 13797  004146  6F46               	movwf	printf@fmt& (0+255),b
 13798  004148  0EFF               	movlw	high STR_70
 13799  00414A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13800  00414C  EC43  F050         	call	_printf	;wreg free
 13801                           
 13802                           ; BSR set to: 2
 13803                           ;selftest.c: 401:         setCursor(0, 0);
 13804  004150  0E00               	movlw	0
 13805  004152  0100               	movlb	0	; () banked
 13806  004154  6F92               	movwf	setCursor@row& (0+255),b
 13807  004156  0E00               	movlw	0
 13808  004158  ECAD  F04C         	call	_setCursor
 13809                           
 13810                           ;selftest.c: 402:         printstrblock("MONITOR ERROR   ");
 13811  00415C  0E0C               	movlw	low STR_94
 13812  00415E  0100               	movlb	0	; () banked
 13813  004160  6F8F               	movwf	printstrblock@c& (0+255),b
 13814  004162  0EFE               	movlw	high STR_94
 13815  004164  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13816  004166  ECA8  F050         	call	_printstrblock	;wreg free
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;selftest.c: 403:         timeDelayMs(500);
 13820  00416A  0E01               	movlw	1
 13821  00416C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13822  00416E  0EF4               	movlw	244
 13823  004170  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13824  004172  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13825  004176                     l19715:
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;selftest.c: 405:   timeDelayMs(100);
 13829  004176  0E00               	movlw	0
 13830  004178  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13831  00417A  0E64               	movlw	100
 13832  00417C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13833  00417E  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;selftest.c: 406:   LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 13837  004182  84BA               	bsf	186,2,c	;volatile
 13838                           
 13839                           ; BSR set to: 0
 13840  004184  86BC               	bsf	188,3,c	;volatile
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;selftest.c: 407:   timeDelayMs(300);
 13844  004186  0E01               	movlw	1
 13845  004188  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13846  00418A  0E2C               	movlw	44
 13847  00418C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13848  00418E  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;selftest.c: 408:   if (!pressureSensorChk(0, 100)) {
 13852  004192  0E00               	movlw	0
 13853  004194  0101               	movlb	1	; () banked
 13854  004196  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13855  004198  0E64               	movlw	100
 13856  00419A  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13857  00419C  0E00               	movlw	0
 13858  00419E  EC19  F021         	call	_pressureSensorChk
 13859  0041A2  0900               	iorlw	0
 13860  0041A4  A4D8               	btfss	status,2,c
 13861  0041A6  D016               	goto	l19733
 13862                           
 13863                           ; BSR set to: 1
 13864                           ;selftest.c: 409:     initOk=0;
 13865  0041A8  0E00               	movlw	0
 13866  0041AA  0103               	movlb	3	; () banked
 13867  0041AC  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13868                           
 13869                           ; BSR set to: 3
 13870                           ;selftest.c: 410:  setCursor(0, 0);
 13871  0041AE  0E00               	movlw	0
 13872  0041B0  0100               	movlb	0	; () banked
 13873  0041B2  6F92               	movwf	setCursor@row& (0+255),b
 13874  0041B4  0E00               	movlw	0
 13875  0041B6  ECAD  F04C         	call	_setCursor
 13876                           
 13877                           ;selftest.c: 411:     printstrblock("SV1 Valve error ");
 13878  0041BA  0E2E               	movlw	low STR_103
 13879  0041BC  0100               	movlb	0	; () banked
 13880  0041BE  6F8F               	movwf	printstrblock@c& (0+255),b
 13881  0041C0  0EFE               	movlw	high STR_103
 13882  0041C2  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13883  0041C4  ECA8  F050         	call	_printstrblock	;wreg free
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;selftest.c: 412:     timeDelayMs(500);
 13887  0041C8  0E01               	movlw	1
 13888  0041CA  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13889  0041CC  0EF4               	movlw	244
 13890  0041CE  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13891  0041D0  ECE4  F04D         	call	_timeDelayMs	;wreg free
 13892  0041D4                     l19733:
 13893                           
 13894                           ;selftest.c: 416:   printf ("CHK FLOW\n");
 13895  0041D4  0E83               	movlw	low STR_104
 13896  0041D6  0101               	movlb	1	; () banked
 13897  0041D8  6F46               	movwf	printf@fmt& (0+255),b
 13898  0041DA  0EFF               	movlw	high STR_104
 13899  0041DC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13900  0041DE  EC43  F050         	call	_printf	;wreg free
 13901                           
 13902                           ; BSR set to: 2
 13903                           ;selftest.c: 417:   tstamp = timeGet();
 13904  0041E2  ECD5  F052         	call	_timeGet	;wreg free
 13905  0041E6  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13906  0041EC  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;selftest.c: 420:   initOk &= flowChk(FCHK_LOW);
 13910  0041F2  0E00               	movlw	0
 13911  0041F4  EC5C  F02A         	call	_flowChk
 13912  0041F8  6F91               	movwf	??_SelfTest& (0+255),b
 13913  0041FA  6B92               	clrf	(??_SelfTest+1)& (0+255),b
 13914  0041FC  5191               	movf	??_SelfTest& (0+255),w,b
 13915  0041FE  0103               	movlb	3	; () banked
 13916  004200  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13917                           
 13918                           ; BSR set to: 3
 13919                           ;selftest.c: 421:   initOk &= flowChk(FCHK_MED);
 13920  004202  0E01               	movlw	1
 13921  004204  EC5C  F02A         	call	_flowChk
 13922  004208  6F91               	movwf	??_SelfTest& (0+255),b
 13923  00420A  6B92               	clrf	(??_SelfTest+1)& (0+255),b
 13924  00420C  5191               	movf	??_SelfTest& (0+255),w,b
 13925  00420E  0103               	movlb	3	; () banked
 13926  004210  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13927                           
 13928                           ; BSR set to: 3
 13929                           ;selftest.c: 422:   initOk &= flowChk(FCHK_HIGH);
 13930  004212  0E02               	movlw	2
 13931  004214  EC5C  F02A         	call	_flowChk
 13932  004218  6F91               	movwf	??_SelfTest& (0+255),b
 13933  00421A  6B92               	clrf	(??_SelfTest+1)& (0+255),b
 13934  00421C  5191               	movf	??_SelfTest& (0+255),w,b
 13935  00421E  0103               	movlb	3	; () banked
 13936  004220  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13937  004222                     l19743:
 13938                           
 13939                           ;selftest.c: 425:   while (keyPeek() != -1)
 13940  004222  ECEE  F047         	call	_keyPeek	;wreg free
 13941  004226  0AFF               	xorlw	255
 13942  004228  A4D8               	btfss	status,2,c
 13943  00422A  D7FB               	goto	l19743
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;selftest.c: 427:   keyReadInit();
 13947  00422C  ECA4  F052         	call	_keyReadInit	;wreg free
 13948  004230  D5D6               	goto	u20460
 13949  004232                     __end_of_SelfTest:
 13950                           	opt callstack 0
 13951                           
 13952 ;; *************** function _pressureSensorChk *****************
 13953 ;; Defined at:
 13954 ;;		line 40 in file "selftest.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;  offsetCal       1    wreg     _Bool 
 13957 ;;  time            2  108[BANK1 ] unsigned short 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  offsetCal       1  121[BANK1 ] _Bool 
 13960 ;;  aPValMean       4  137[BANK1 ] long 
 13961 ;;  mPValMean       4  133[BANK1 ] long 
 13962 ;;  aPVal           2  143[BANK1 ] short 
 13963 ;;  mPVal           2  141[BANK1 ] short 
 13964 ;;  aPValMin        2  131[BANK1 ] short 
 13965 ;;  aPValMax        2  129[BANK1 ] short 
 13966 ;;  mPValMin        2  127[BANK1 ] short 
 13967 ;;  mPValMax        2  125[BANK1 ] short 
 13968 ;;  tstamp          2  122[BANK1 ] unsigned short 
 13969 ;;  chkResult       1  124[BANK1 ] _Bool 
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      _Bool 
 13972 ;; Registers used:
 13973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 3F/1
 13976 ;;		On exit  : 3F/1
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13979 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;Total ram usage:       37 bytes
 13984 ;; Hardware stack levels used:    1
 13985 ;; Hardware stack levels required when called:   27
 13986 ;; This function calls:
 13987 ;;		___lmul
 13988 ;;		_aCaptGetResult
 13989 ;;		_aCaptRstFlt
 13990 ;;		_aCaptureOffSet
 13991 ;;		_printf
 13992 ;;		_printstrblock
 13993 ;;		_setCursor
 13994 ;;		_sprintf
 13995 ;;		_timeDelayMs
 13996 ;;		_timeElapsedR
 13997 ;;		_timeGet
 13998 ;; This function is called by:
 13999 ;;		_SelfTest
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           	psect	text23
 14004  004232                     __ptext23:
 14005                           	opt callstack 0
 14006  004232                     _pressureSensorChk:
 14007                           	opt callstack 2
 14008                           
 14009                           ; BSR set to: 3
 14010                           ;incstack = 0
 14011                           ;pressureSensorChk@offsetCal stored from wreg
 14012  004232  6F79               	movwf	pressureSensorChk@offsetCal& (0+255),b
 14013                           
 14014                           ;selftest.c: 41:     int16_t mPVal, mPValMax, mPValMin;;selftest.c: 42:     int32_t mPVa
      +                          lMean, aPValMean;;selftest.c: 43:     int16_t aPVal, aPValMax, aPValMin;;selftest.c: 44:
      +                               time_t tstamp;;selftest.c: 45:     _Bool chkResult;;selftest.c: 47:     chkResult =
      +                           1;
 14015  004234  0E01               	movlw	1
 14016  004236  0101               	movlb	1	; () banked
 14017  004238  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14018                           
 14019                           ;selftest.c: 50:     mPValMin = 4096;
 14020  00423A  0E10               	movlw	16
 14021  00423C  6F80               	movwf	(pressureSensorChk@mPValMin+1)& (0+255),b
 14022  00423E  0E00               	movlw	0
 14023  004240  6F7F               	movwf	pressureSensorChk@mPValMin& (0+255),b
 14024                           
 14025                           ;selftest.c: 51:     aPValMin = 4096;
 14026  004242  0E10               	movlw	16
 14027  004244  6F84               	movwf	(pressureSensorChk@aPValMin+1)& (0+255),b
 14028  004246  0E00               	movlw	0
 14029  004248  6F83               	movwf	pressureSensorChk@aPValMin& (0+255),b
 14030                           
 14031                           ;selftest.c: 52:     mPValMax = 0;
 14032  00424A  0E00               	movlw	0
 14033  00424C  6F7E               	movwf	(pressureSensorChk@mPValMax+1)& (0+255),b
 14034  00424E  0E00               	movlw	0
 14035  004250  6F7D               	movwf	pressureSensorChk@mPValMax& (0+255),b
 14036                           
 14037                           ;selftest.c: 53:     aPValMax = 0;
 14038  004252  0E00               	movlw	0
 14039  004254  6F82               	movwf	(pressureSensorChk@aPValMax+1)& (0+255),b
 14040  004256  0E00               	movlw	0
 14041  004258  6F81               	movwf	pressureSensorChk@aPValMax& (0+255),b
 14042                           
 14043                           ; BSR set to: 1
 14044                           ;selftest.c: 54:     tstamp = timeGet();
 14045  00425A  ECD5  F052         	call	_timeGet	;wreg free
 14046  00425E  0060  F24C  F17A   	movff	?_timeGet,pressureSensorChk@tstamp
 14047  004264  0060  F250  F17B   	movff	?_timeGet+1,pressureSensorChk@tstamp+1
 14048                           
 14049                           ;selftest.c: 56:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 14050  00426A  D131               	goto	l19063
 14051  00426C                     l19025:
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;selftest.c: 57:         if (aCaptGetResult(MainPSensor, &mPVal)) {
 14055  00426C  0E8D               	movlw	low pressureSensorChk@mPVal
 14056  00426E  0101               	movlb	1	; () banked
 14057  004270  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 14058  004272  0E01               	movlw	high pressureSensorChk@mPVal
 14059  004274  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 14060  004276  0E00               	movlw	0
 14061  004278  EC5A  F033         	call	_aCaptGetResult
 14062  00427C  0900               	iorlw	0
 14063  00427E  B4D8               	btfsc	status,2,c
 14064  004280  D07D               	goto	l2819
 14065                           
 14066                           ;selftest.c: 58:             if (mPVal > mPValMax) {
 14067  004282  0101               	movlb	1	; () banked
 14068  004284  518D               	movf	pressureSensorChk@mPVal& (0+255),w,b
 14069  004286  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14070  004288  517E               	movf	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14071  00428A  0A80               	xorlw	128
 14072  00428C  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14073  00428E  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 14074  004290  0A80               	xorlw	128
 14075  004292  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14076  004294  B0D8               	btfsc	status,0,c
 14077  004296  D006               	goto	l19031
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;selftest.c: 59:                 mPValMax = mPVal;
 14081  004298  0060  F634  F17D   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMax
 14082  00429E  0060  F638  F17E   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMax+1
 14083  0042A4                     l19031:
 14084                           
 14085                           ; BSR set to: 1
 14086                           ;selftest.c: 61:             if (mPVal < mPValMin) {
 14087  0042A4  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14088  0042A6  5D8D               	subwf	pressureSensorChk@mPVal& (0+255),w,b
 14089  0042A8  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 14090  0042AA  0A80               	xorlw	128
 14091  0042AC  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14092  0042AE  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14093  0042B0  0A80               	xorlw	128
 14094  0042B2  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14095  0042B4  B0D8               	btfsc	status,0,c
 14096  0042B6  D006               	goto	l19035
 14097                           
 14098                           ; BSR set to: 1
 14099                           ;selftest.c: 62:                 mPValMin = mPVal;
 14100  0042B8  0060  F634  F17F   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMin
 14101  0042BE  0060  F638  F180   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMin+1
 14102  0042C4                     l19035:
 14103                           
 14104                           ; BSR set to: 1
 14105                           ;selftest.c: 64:             mPValMean = (31*mPValMean + 32*mPVal)>>5;
 14106  0042C4  0E05               	movlw	5
 14107  0042C6  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14108  0042C8  0060  F634  F16F   	movff	pressureSensorChk@mPVal,??_pressureSensorChk+1
 14109  0042CE  0060  F638  F170   	movff	pressureSensorChk@mPVal+1,??_pressureSensorChk+2
 14110  0042D4  0E05               	movlw	5
 14111  0042D6                     u19875:
 14112  0042D6  90D8               	bcf	status,0,c
 14113  0042D8  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 14114  0042DA  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 14115  0042DC  2EE8               	decfsz	wreg,f,c
 14116  0042DE  D7FB               	goto	u19875
 14117  0042E0  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 14118  0042E6  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 14119  0042EC  0E00               	movlw	0
 14120  0042EE  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 14121  0042F0  0EFF               	movlw	255
 14122  0042F2  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 14123  0042F4  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 14124  0042F6  0060  F614  F08B   	movff	pressureSensorChk@mPValMean,___lmul@multiplier
 14125  0042FC  0060  F618  F08C   	movff	pressureSensorChk@mPValMean+1,___lmul@multiplier+1
 14126  004302  0060  F61C  F08D   	movff	pressureSensorChk@mPValMean+2,___lmul@multiplier+2
 14127  004308  0060  F620  F08E   	movff	pressureSensorChk@mPValMean+3,___lmul@multiplier+3
 14128  00430E  0E1F               	movlw	31
 14129  004310  0100               	movlb	0	; () banked
 14130  004312  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 14131  004314  0E00               	movlw	0
 14132  004316  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14133  004318  0E00               	movlw	0
 14134  00431A  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14135  00431C  0E00               	movlw	0
 14136  00431E  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14137  004320  EC1E  F048         	call	___lmul	;wreg free
 14138  004324  0101               	movlb	1	; () banked
 14139  004326  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 14140  004328  0100               	movlb	0	; () banked
 14141  00432A  258B               	addwf	?___lmul& (0+255),w,b
 14142  00432C  0101               	movlb	1	; () banked
 14143  00432E  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 14144  004330  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 14145  004332  0100               	movlb	0	; () banked
 14146  004334  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 14147  004336  0101               	movlb	1	; () banked
 14148  004338  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 14149  00433A  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 14150  00433C  0100               	movlb	0	; () banked
 14151  00433E  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 14152  004340  0101               	movlb	1	; () banked
 14153  004342  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 14154  004344  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 14155  004346  0100               	movlb	0	; () banked
 14156  004348  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 14157  00434A  0101               	movlb	1	; () banked
 14158  00434C  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 14159  00434E                     u19885:
 14160  00434E  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14161  004350  D001               	goto	u19886
 14162  004352  D007               	goto	u19887
 14163  004354                     u19886:
 14164  004354  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 14165  004356  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 14166  004358  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 14167  00435A  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 14168  00435C  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 14169  00435E  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14170  004360  D7F6               	goto	u19885
 14171  004362                     u19887:
 14172  004362  0060  F5D4  F185   	movff	??_pressureSensorChk+7,pressureSensorChk@mPValMean
 14173  004368  0060  F5D8  F186   	movff	??_pressureSensorChk+8,pressureSensorChk@mPValMean+1
 14174  00436E  0060  F5DC  F187   	movff	??_pressureSensorChk+9,pressureSensorChk@mPValMean+2
 14175  004374  0060  F5E0  F188   	movff	??_pressureSensorChk+10,pressureSensorChk@mPValMean+3
 14176                           
 14177                           ;selftest.c: 65:         } else {
 14178  00437A  D011               	goto	l19041
 14179  00437C                     l2819:
 14180                           
 14181                           ;selftest.c: 66:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",20);
 14182  00437C  94BA               	bcf	186,2,c	;volatile
 14183  00437E  96BC               	bcf	188,3,c	;volatile
 14184  004380  96BA               	bcf	186,3,c	;volatile
 14185  004382  0EBE               	movlw	low STR_28
 14186  004384  0101               	movlb	1	; () banked
 14187  004386  6F46               	movwf	printf@fmt& (0+255),b
 14188  004388  0EFF               	movlw	high STR_28
 14189  00438A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14190  00438C  0E00               	movlw	0
 14191  00438E  6F49               	movwf	(?_printf+3)& (0+255),b
 14192  004390  0E14               	movlw	20
 14193  004392  6F48               	movwf	(?_printf+2)& (0+255),b
 14194  004394  EC43  F050         	call	_printf	;wreg free
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;selftest.c: 67:             chkResult = 0;
 14198  004398  0E00               	movlw	0
 14199  00439A  0101               	movlb	1	; () banked
 14200  00439C  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14201  00439E                     l19041:
 14202                           
 14203                           ;selftest.c: 70:         if (aCaptGetResult(VolPSensor, &aPVal)) {
 14204  00439E  0E8F               	movlw	low pressureSensorChk@aPVal
 14205  0043A0  0101               	movlb	1	; () banked
 14206  0043A2  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 14207  0043A4  0E01               	movlw	high pressureSensorChk@aPVal
 14208  0043A6  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 14209  0043A8  0E01               	movlw	1
 14210  0043AA  EC5A  F033         	call	_aCaptGetResult
 14211  0043AE  0900               	iorlw	0
 14212  0043B0  B4D8               	btfsc	status,2,c
 14213  0043B2  D07D               	goto	l19053
 14214                           
 14215                           ;selftest.c: 71:             if (aPVal > aPValMax) {
 14216  0043B4  0101               	movlb	1	; () banked
 14217  0043B6  518F               	movf	pressureSensorChk@aPVal& (0+255),w,b
 14218  0043B8  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14219  0043BA  5182               	movf	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14220  0043BC  0A80               	xorlw	128
 14221  0043BE  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14222  0043C0  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14223  0043C2  0A80               	xorlw	128
 14224  0043C4  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14225  0043C6  B0D8               	btfsc	status,0,c
 14226  0043C8  D006               	goto	l19047
 14227                           
 14228                           ; BSR set to: 1
 14229                           ;selftest.c: 72:                 aPValMax = aPVal;
 14230  0043CA  0060  F63C  F181   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMax
 14231  0043D0  0060  F640  F182   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMax+1
 14232  0043D6                     l19047:
 14233                           
 14234                           ; BSR set to: 1
 14235                           ;selftest.c: 74:             if (aPVal < aPValMin) {
 14236  0043D6  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14237  0043D8  5D8F               	subwf	pressureSensorChk@aPVal& (0+255),w,b
 14238  0043DA  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14239  0043DC  0A80               	xorlw	128
 14240  0043DE  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14241  0043E0  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14242  0043E2  0A80               	xorlw	128
 14243  0043E4  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14244  0043E6  B0D8               	btfsc	status,0,c
 14245  0043E8  D006               	goto	l19051
 14246                           
 14247                           ; BSR set to: 1
 14248                           ;selftest.c: 75:                 aPValMin = aPVal;
 14249  0043EA  0060  F63C  F183   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMin
 14250  0043F0  0060  F640  F184   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMin+1
 14251  0043F6                     l19051:
 14252                           
 14253                           ; BSR set to: 1
 14254                           ;selftest.c: 77:             aPValMean = (31*aPValMean + 32*aPVal)>>5;
 14255  0043F6  0E05               	movlw	5
 14256  0043F8  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14257  0043FA  0060  F63C  F16F   	movff	pressureSensorChk@aPVal,??_pressureSensorChk+1
 14258  004400  0060  F640  F170   	movff	pressureSensorChk@aPVal+1,??_pressureSensorChk+2
 14259  004406  0E05               	movlw	5
 14260  004408                     u19925:
 14261  004408  90D8               	bcf	status,0,c
 14262  00440A  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 14263  00440C  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 14264  00440E  2EE8               	decfsz	wreg,f,c
 14265  004410  D7FB               	goto	u19925
 14266  004412  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 14267  004418  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 14268  00441E  0E00               	movlw	0
 14269  004420  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 14270  004422  0EFF               	movlw	255
 14271  004424  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 14272  004426  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 14273  004428  0060  F624  F08B   	movff	pressureSensorChk@aPValMean,___lmul@multiplier
 14274  00442E  0060  F628  F08C   	movff	pressureSensorChk@aPValMean+1,___lmul@multiplier+1
 14275  004434  0060  F62C  F08D   	movff	pressureSensorChk@aPValMean+2,___lmul@multiplier+2
 14276  00443A  0060  F630  F08E   	movff	pressureSensorChk@aPValMean+3,___lmul@multiplier+3
 14277  004440  0E1F               	movlw	31
 14278  004442  0100               	movlb	0	; () banked
 14279  004444  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 14280  004446  0E00               	movlw	0
 14281  004448  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14282  00444A  0E00               	movlw	0
 14283  00444C  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14284  00444E  0E00               	movlw	0
 14285  004450  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14286  004452  EC1E  F048         	call	___lmul	;wreg free
 14287  004456  0101               	movlb	1	; () banked
 14288  004458  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 14289  00445A  0100               	movlb	0	; () banked
 14290  00445C  258B               	addwf	?___lmul& (0+255),w,b
 14291  00445E  0101               	movlb	1	; () banked
 14292  004460  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 14293  004462  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 14294  004464  0100               	movlb	0	; () banked
 14295  004466  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 14296  004468  0101               	movlb	1	; () banked
 14297  00446A  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 14298  00446C  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 14299  00446E  0100               	movlb	0	; () banked
 14300  004470  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 14301  004472  0101               	movlb	1	; () banked
 14302  004474  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 14303  004476  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 14304  004478  0100               	movlb	0	; () banked
 14305  00447A  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 14306  00447C  0101               	movlb	1	; () banked
 14307  00447E  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 14308  004480                     u19935:
 14309  004480  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14310  004482  D001               	goto	u19936
 14311  004484  D007               	goto	u19937
 14312  004486                     u19936:
 14313  004486  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 14314  004488  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 14315  00448A  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 14316  00448C  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 14317  00448E  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 14318  004490  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14319  004492  D7F6               	goto	u19935
 14320  004494                     u19937:
 14321  004494  0060  F5D4  F189   	movff	??_pressureSensorChk+7,pressureSensorChk@aPValMean
 14322  00449A  0060  F5D8  F18A   	movff	??_pressureSensorChk+8,pressureSensorChk@aPValMean+1
 14323  0044A0  0060  F5DC  F18B   	movff	??_pressureSensorChk+9,pressureSensorChk@aPValMean+2
 14324  0044A6  0060  F5E0  F18C   	movff	??_pressureSensorChk+10,pressureSensorChk@aPValMean+3
 14325                           
 14326                           ;selftest.c: 78:         } else {
 14327  0044AC  D010               	goto	l19063
 14328  0044AE                     l19053:
 14329                           
 14330                           ;selftest.c: 79:             chkResult = 0;
 14331  0044AE  0E00               	movlw	0
 14332  0044B0  0101               	movlb	1	; () banked
 14333  0044B2  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14334                           
 14335                           ; BSR set to: 1
 14336                           ;selftest.c: 80:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",21);
 14337  0044B4  94BA               	bcf	186,2,c	;volatile
 14338                           
 14339                           ; BSR set to: 1
 14340  0044B6  96BC               	bcf	188,3,c	;volatile
 14341                           
 14342                           ; BSR set to: 1
 14343  0044B8  96BA               	bcf	186,3,c	;volatile
 14344                           
 14345                           ; BSR set to: 1
 14346  0044BA  0EBE               	movlw	low STR_28
 14347  0044BC  6F46               	movwf	printf@fmt& (0+255),b
 14348  0044BE  0EFF               	movlw	high STR_28
 14349  0044C0  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14350  0044C2  0E00               	movlw	0
 14351  0044C4  6F49               	movwf	(?_printf+3)& (0+255),b
 14352  0044C6  0E15               	movlw	21
 14353  0044C8  6F48               	movwf	(?_printf+2)& (0+255),b
 14354  0044CA  EC43  F050         	call	_printf	;wreg free
 14355  0044CE                     l19063:
 14356                           
 14357                           ;selftest.c: 56:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 14358  0044CE  0E7A               	movlw	low pressureSensorChk@tstamp
 14359  0044D0  0100               	movlb	0	; () banked
 14360  0044D2  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 14361  0044D4  0E01               	movlw	high pressureSensorChk@tstamp
 14362  0044D6  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 14363  0044D8  0060  F5B0  F095   	movff	pressureSensorChk@time,timeElapsedR@duration
 14364  0044DE  0060  F5B4  F096   	movff	pressureSensorChk@time+1,timeElapsedR@duration+1
 14365  0044E4  ECBE  F047         	call	_timeElapsedR	;wreg free
 14366  0044E8  0900               	iorlw	0
 14367  0044EA  B4D8               	btfsc	status,2,c
 14368  0044EC  D6BF               	goto	l19025
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;selftest.c: 85:     mPValMean = mPValMean>>5;
 14372  0044EE  0E05               	movlw	5
 14373  0044F0  0101               	movlb	1	; () banked
 14374  0044F2  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14375  0044F4  0060  F614  F16F   	movff	pressureSensorChk@mPValMean,??_pressureSensorChk+1
 14376  0044FA  0060  F618  F170   	movff	pressureSensorChk@mPValMean+1,??_pressureSensorChk+2
 14377  004500  0060  F61C  F171   	movff	pressureSensorChk@mPValMean+2,??_pressureSensorChk+3
 14378  004506  0060  F620  F172   	movff	pressureSensorChk@mPValMean+3,??_pressureSensorChk+4
 14379  00450C                     u19955:
 14380  00450C  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14381  00450E  D001               	goto	u19956
 14382  004510  D007               	goto	u19957
 14383  004512                     u19956:
 14384  004512  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14385  004514  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14386  004516  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14387  004518  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14388  00451A  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14389  00451C  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14390  00451E  D7F6               	goto	u19955
 14391  004520                     u19957:
 14392  004520  0060  F5BC  F185   	movff	??_pressureSensorChk+1,pressureSensorChk@mPValMean
 14393  004526  0060  F5C0  F186   	movff	??_pressureSensorChk+2,pressureSensorChk@mPValMean+1
 14394  00452C  0060  F5C4  F187   	movff	??_pressureSensorChk+3,pressureSensorChk@mPValMean+2
 14395  004532  0060  F5C8  F188   	movff	??_pressureSensorChk+4,pressureSensorChk@mPValMean+3
 14396                           
 14397                           ;selftest.c: 86:     aPValMean = aPValMean>>5;
 14398  004538  0E05               	movlw	5
 14399  00453A  0101               	movlb	1	; () banked
 14400  00453C  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14401  00453E  0060  F624  F16F   	movff	pressureSensorChk@aPValMean,??_pressureSensorChk+1
 14402  004544  0060  F628  F170   	movff	pressureSensorChk@aPValMean+1,??_pressureSensorChk+2
 14403  00454A  0060  F62C  F171   	movff	pressureSensorChk@aPValMean+2,??_pressureSensorChk+3
 14404  004550  0060  F630  F172   	movff	pressureSensorChk@aPValMean+3,??_pressureSensorChk+4
 14405  004556                     u19965:
 14406  004556  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14407  004558  D001               	goto	u19966
 14408  00455A  D007               	goto	u19967
 14409  00455C                     u19966:
 14410  00455C  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14411  00455E  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14412  004560  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14413  004562  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14414  004564  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14415  004566  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14416  004568  D7F6               	goto	u19965
 14417  00456A                     u19967:
 14418  00456A  0060  F5BC  F189   	movff	??_pressureSensorChk+1,pressureSensorChk@aPValMean
 14419  004570  0060  F5C0  F18A   	movff	??_pressureSensorChk+2,pressureSensorChk@aPValMean+1
 14420  004576  0060  F5C4  F18B   	movff	??_pressureSensorChk+3,pressureSensorChk@aPValMean+2
 14421  00457C  0060  F5C8  F18C   	movff	??_pressureSensorChk+4,pressureSensorChk@aPValMean+3
 14422                           
 14423                           ;selftest.c: 87:     sprintf(lcdTopRow, "MS: % 3d AS: % 3d ", mPValMean, aPValMean);
 14424  004582  0EAB               	movlw	low _lcdTopRow
 14425  004584  0101               	movlb	1	; () banked
 14426  004586  6F46               	movwf	sprintf@s& (0+255),b
 14427  004588  0E02               	movlw	high _lcdTopRow
 14428  00458A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 14429  00458C  0E24               	movlw	low STR_64
 14430  00458E  6F48               	movwf	sprintf@fmt& (0+255),b
 14431  004590  0EFD               	movlw	high STR_64
 14432  004592  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 14433  004594  0060  F614  F14A   	movff	pressureSensorChk@mPValMean,?_sprintf+4
 14434  00459A  0060  F618  F14B   	movff	pressureSensorChk@mPValMean+1,?_sprintf+5
 14435  0045A0  0060  F61C  F14C   	movff	pressureSensorChk@mPValMean+2,?_sprintf+6
 14436  0045A6  0060  F620  F14D   	movff	pressureSensorChk@mPValMean+3,?_sprintf+7
 14437  0045AC  0060  F624  F14E   	movff	pressureSensorChk@aPValMean,?_sprintf+8
 14438  0045B2  0060  F628  F14F   	movff	pressureSensorChk@aPValMean+1,?_sprintf+9
 14439  0045B8  0060  F62C  F150   	movff	pressureSensorChk@aPValMean+2,?_sprintf+10
 14440  0045BE  0060  F630  F151   	movff	pressureSensorChk@aPValMean+3,?_sprintf+11
 14441  0045C4  EC31  F049         	call	_sprintf	;wreg free
 14442                           
 14443                           ; BSR set to: 1
 14444                           ;selftest.c: 88:     printf ("MAIN PRESSURE. Min %d Max %d MEAN %d\n", mPValMin, mPValMa
      +                          x, mPValMean);
 14445  0045C8  0EA8               	movlw	low STR_65
 14446  0045CA  6F46               	movwf	printf@fmt& (0+255),b
 14447  0045CC  0EFB               	movlw	high STR_65
 14448  0045CE  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14449  0045D0  0060  F5FC  F148   	movff	pressureSensorChk@mPValMin,?_printf+2
 14450  0045D6  0060  F600  F149   	movff	pressureSensorChk@mPValMin+1,?_printf+3
 14451  0045DC  0060  F5F4  F14A   	movff	pressureSensorChk@mPValMax,?_printf+4
 14452  0045E2  0060  F5F8  F14B   	movff	pressureSensorChk@mPValMax+1,?_printf+5
 14453  0045E8  0060  F614  F14C   	movff	pressureSensorChk@mPValMean,?_printf+6
 14454  0045EE  0060  F618  F14D   	movff	pressureSensorChk@mPValMean+1,?_printf+7
 14455  0045F4  0060  F61C  F14E   	movff	pressureSensorChk@mPValMean+2,?_printf+8
 14456  0045FA  0060  F620  F14F   	movff	pressureSensorChk@mPValMean+3,?_printf+9
 14457  004600  EC43  F050         	call	_printf	;wreg free
 14458                           
 14459                           ; BSR set to: 2
 14460                           ;selftest.c: 89:     printf ("AUX PRESSURE. Min %d Max %d MEAN %d\n", aPValMin, aPValMax
      +                          , aPValMean);
 14461  004604  0ECE               	movlw	low STR_66
 14462  004606  0101               	movlb	1	; () banked
 14463  004608  6F46               	movwf	printf@fmt& (0+255),b
 14464  00460A  0EFB               	movlw	high STR_66
 14465  00460C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14466  00460E  0060  F60C  F148   	movff	pressureSensorChk@aPValMin,?_printf+2
 14467  004614  0060  F610  F149   	movff	pressureSensorChk@aPValMin+1,?_printf+3
 14468  00461A  0060  F604  F14A   	movff	pressureSensorChk@aPValMax,?_printf+4
 14469  004620  0060  F608  F14B   	movff	pressureSensorChk@aPValMax+1,?_printf+5
 14470  004626  0060  F624  F14C   	movff	pressureSensorChk@aPValMean,?_printf+6
 14471  00462C  0060  F628  F14D   	movff	pressureSensorChk@aPValMean+1,?_printf+7
 14472  004632  0060  F62C  F14E   	movff	pressureSensorChk@aPValMean+2,?_printf+8
 14473  004638  0060  F630  F14F   	movff	pressureSensorChk@aPValMean+3,?_printf+9
 14474  00463E  EC43  F050         	call	_printf	;wreg free
 14475                           
 14476                           ; BSR set to: 2
 14477                           ;selftest.c: 90:     setCursor(0, 0);
 14478  004642  0E00               	movlw	0
 14479  004644  0100               	movlb	0	; () banked
 14480  004646  6F92               	movwf	setCursor@row& (0+255),b
 14481  004648  0E00               	movlw	0
 14482  00464A  ECAD  F04C         	call	_setCursor
 14483                           
 14484                           ;selftest.c: 91:     printstrblock(lcdTopRow);
 14485  00464E  0EAB               	movlw	low _lcdTopRow
 14486  004650  0100               	movlb	0	; () banked
 14487  004652  6F8F               	movwf	printstrblock@c& (0+255),b
 14488  004654  0E02               	movlw	high _lcdTopRow
 14489  004656  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 14490  004658  ECA8  F050         	call	_printstrblock	;wreg free
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;selftest.c: 92:     timeDelayMs(1000);
 14494  00465C  0E03               	movlw	3
 14495  00465E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14496  004660  0EE8               	movlw	232
 14497  004662  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14498  004664  ECE4  F04D         	call	_timeDelayMs	;wreg free
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;selftest.c: 95:     if (offsetCal) {
 14502  004668  0101               	movlb	1	; () banked
 14503  00466A  5179               	movf	pressureSensorChk@offsetCal& (0+255),w,b
 14504  00466C  B4D8               	btfsc	status,2,c
 14505  00466E  D07D               	goto	l19103
 14506                           
 14507                           ; BSR set to: 1
 14508                           ;selftest.c: 96:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 16
      +                          ) || (mPValMean > 350) || (mPValMean < 40) || (aPValMean < 600) || (aPValMean > 1030)) {
 14509  004670  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14510  004672  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14511  004674  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14512  004676  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14513  004678  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14514  00467A  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14515  00467C  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14516  00467E  D006               	goto	u19980
 14517  004680  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14518  004682  E13D               	bnz	l19093
 14519  004684  0E11               	movlw	17
 14520  004686  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14521  004688  B0D8               	btfsc	status,0,c
 14522  00468A  D039               	goto	u20030
 14523  00468C                     u19980:
 14524                           
 14525                           ; BSR set to: 1
 14526  00468C  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14527  00468E  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14528  004690  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14529  004692  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14530  004694  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14531  004696  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14532  004698  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14533  00469A  D006               	goto	u19990
 14534  00469C  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14535  00469E  E12F               	bnz	l19093
 14536  0046A0  0E11               	movlw	17
 14537  0046A2  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14538  0046A4  B0D8               	btfsc	status,0,c
 14539  0046A6  D02B               	goto	u20030
 14540  0046A8                     u19990:
 14541                           
 14542                           ; BSR set to: 1
 14543  0046A8  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14544  0046AA  D009               	goto	u20000
 14545  0046AC  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14546  0046AE  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14547  0046B0  E126               	bnz	l19093
 14548  0046B2  0E5F               	movlw	95
 14549  0046B4  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14550  0046B6  0E01               	movlw	1
 14551  0046B8  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14552  0046BA  B0D8               	btfsc	status,0,c
 14553  0046BC  D020               	goto	u20030
 14554  0046BE                     u20000:
 14555                           
 14556                           ; BSR set to: 1
 14557  0046BE  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14558  0046C0  D01E               	goto	u20030
 14559  0046C2  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14560  0046C4  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14561  0046C6  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14562  0046C8  E104               	bnz	u20010
 14563  0046CA  0E28               	movlw	40
 14564  0046CC  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14565  0046CE  A0D8               	btfss	status,0,c
 14566  0046D0  D016               	goto	u20030
 14567  0046D2                     u20010:
 14568                           
 14569                           ; BSR set to: 1
 14570  0046D2  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14571  0046D4  D014               	goto	u20030
 14572  0046D6  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14573  0046D8  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14574  0046DA  E106               	bnz	u20020
 14575  0046DC  0E58               	movlw	88
 14576  0046DE  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14577  0046E0  0E02               	movlw	2
 14578  0046E2  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14579  0046E4  A0D8               	btfss	status,0,c
 14580  0046E6  D00B               	goto	u20030
 14581  0046E8                     u20020:
 14582                           
 14583                           ; BSR set to: 1
 14584  0046E8  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14585  0046EA  D019               	goto	l19099
 14586  0046EC  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14587  0046EE  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14588  0046F0  E106               	bnz	u20030
 14589  0046F2  0E07               	movlw	7
 14590  0046F4  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14591  0046F6  0E04               	movlw	4
 14592  0046F8  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14593  0046FA  A0D8               	btfss	status,0,c
 14594  0046FC  D010               	goto	l19099
 14595  0046FE                     u20030:
 14596  0046FE                     l19093:
 14597                           
 14598                           ; BSR set to: 1
 14599                           ;selftest.c: 98:             setCursor(0, 0);
 14600  0046FE  0E00               	movlw	0
 14601  004700  0100               	movlb	0	; () banked
 14602  004702  6F92               	movwf	setCursor@row& (0+255),b
 14603  004704  0E00               	movlw	0
 14604  004706  ECAD  F04C         	call	_setCursor
 14605                           
 14606                           ;selftest.c: 99:             chkResult = 0;
 14607  00470A  0E00               	movlw	0
 14608  00470C  0101               	movlb	1	; () banked
 14609  00470E  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14610                           
 14611                           ; BSR set to: 1
 14612                           ;selftest.c: 100:             printf ("PRESSURE CALIBRATION ERROR\n");
 14613  004710  0E5A               	movlw	low STR_67
 14614  004712  6F46               	movwf	printf@fmt& (0+255),b
 14615  004714  0EFC               	movlw	high STR_67
 14616  004716  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14617  004718  EC43  F050         	call	_printf	;wreg free
 14618                           
 14619                           ;selftest.c: 101:         } else {
 14620  00471C  D077               	goto	l19119
 14621  00471E                     l19099:
 14622                           
 14623                           ; BSR set to: 1
 14624                           ;selftest.c: 103:             aCaptureOffSet(MainPSensor, mPValMean);
 14625  00471E  0060  F614  F160   	movff	pressureSensorChk@mPValMean,aCaptureOffSet@offVal
 14626  004724  0060  F618  F161   	movff	pressureSensorChk@mPValMean+1,aCaptureOffSet@offVal+1
 14627  00472A  0E00               	movlw	0
 14628  00472C  ECD5  F04A         	call	_aCaptureOffSet
 14629                           
 14630                           ;selftest.c: 104:             aCaptureOffSet(VolPSensor, aPValMean);
 14631  004730  0060  F624  F160   	movff	pressureSensorChk@aPValMean,aCaptureOffSet@offVal
 14632  004736  0060  F628  F161   	movff	pressureSensorChk@aPValMean+1,aCaptureOffSet@offVal+1
 14633  00473C  0E01               	movlw	1
 14634  00473E  ECD5  F04A         	call	_aCaptureOffSet
 14635                           
 14636                           ;selftest.c: 106:             aCaptRstFlt(Flt0PSensor);
 14637  004742  0E03               	movlw	3
 14638  004744  EC44  F03D         	call	_aCaptRstFlt
 14639                           
 14640                           ;selftest.c: 107:             aCaptRstFlt(Flt1PSensor);
 14641  004748  0E04               	movlw	4
 14642  00474A  EC44  F03D         	call	_aCaptRstFlt
 14643                           
 14644                           ;selftest.c: 108:             aCaptRstFlt(Flt2PSensor);
 14645  00474E  0E05               	movlw	5
 14646  004750  EC44  F03D         	call	_aCaptRstFlt
 14647                           
 14648                           ;selftest.c: 109:             aCaptRstFlt(Flt3PSensor);
 14649  004754  0E06               	movlw	6
 14650  004756  EC44  F03D         	call	_aCaptRstFlt
 14651                           
 14652                           ; BSR set to: 57
 14653                           ;selftest.c: 110:             timeDelayMs(50);
 14654  00475A  0E00               	movlw	0
 14655  00475C  0100               	movlb	0	; () banked
 14656  00475E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14657  004760  0E32               	movlw	50
 14658  004762  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14659  004764  ECE4  F04D         	call	_timeDelayMs	;wreg free
 14660  004768  D051               	goto	l19119
 14661  00476A                     l19103:
 14662                           
 14663                           ; BSR set to: 1
 14664                           ;selftest.c: 113:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 1
      +                          6) || (mPValMean > 10) || (mPValMean < -10) || (aPValMean < -10) || (aPValMean > 10)) {
 14665  00476A  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14666  00476C  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14667  00476E  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14668  004770  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14669  004772  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14670  004774  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14671  004776  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14672  004778  D006               	goto	u20040
 14673  00477A  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14674  00477C  E13E               	bnz	l19115
 14675  00477E  0E11               	movlw	17
 14676  004780  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14677  004782  B0D8               	btfsc	status,0,c
 14678  004784  D03A               	goto	u20090
 14679  004786                     u20040:
 14680                           
 14681                           ; BSR set to: 1
 14682  004786  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14683  004788  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14684  00478A  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14685  00478C  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14686  00478E  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14687  004790  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14688  004792  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14689  004794  D006               	goto	u20050
 14690  004796  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14691  004798  E130               	bnz	l19115
 14692  00479A  0E11               	movlw	17
 14693  00479C  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14694  00479E  B0D8               	btfsc	status,0,c
 14695  0047A0  D02C               	goto	u20090
 14696  0047A2                     u20050:
 14697                           
 14698                           ; BSR set to: 1
 14699  0047A2  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14700  0047A4  D008               	goto	u20060
 14701  0047A6  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14702  0047A8  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14703  0047AA  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14704  0047AC  E126               	bnz	l19115
 14705  0047AE  0E0B               	movlw	11
 14706  0047B0  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14707  0047B2  B0D8               	btfsc	status,0,c
 14708  0047B4  D022               	goto	u20090
 14709  0047B6                     u20060:
 14710                           
 14711                           ; BSR set to: 1
 14712  0047B6  AF88               	btfss	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14713  0047B8  D00A               	goto	u20070
 14714  0047BA  0EF6               	movlw	246
 14715  0047BC  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14716  0047BE  0EFF               	movlw	255
 14717  0047C0  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14718  0047C2  0EFF               	movlw	255
 14719  0047C4  5987               	subwfb	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14720  0047C6  0EFF               	movlw	255
 14721  0047C8  5988               	subwfb	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14722  0047CA  A0D8               	btfss	status,0,c
 14723  0047CC  D016               	goto	u20090
 14724  0047CE                     u20070:
 14725                           
 14726                           ; BSR set to: 1
 14727  0047CE  AF8C               	btfss	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14728  0047D0  D00A               	goto	u20080
 14729  0047D2  0EF6               	movlw	246
 14730  0047D4  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14731  0047D6  0EFF               	movlw	255
 14732  0047D8  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14733  0047DA  0EFF               	movlw	255
 14734  0047DC  598B               	subwfb	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14735  0047DE  0EFF               	movlw	255
 14736  0047E0  598C               	subwfb	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14737  0047E2  A0D8               	btfss	status,0,c
 14738  0047E4  D00A               	goto	u20090
 14739  0047E6                     u20080:
 14740                           
 14741                           ; BSR set to: 1
 14742  0047E6  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14743  0047E8  D011               	goto	l19119
 14744  0047EA  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14745  0047EC  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14746  0047EE  118A               	iorwf	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14747  0047F0  E104               	bnz	u20090
 14748  0047F2  0E0B               	movlw	11
 14749  0047F4  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14750  0047F6  A0D8               	btfss	status,0,c
 14751  0047F8  D009               	goto	l19119
 14752  0047FA                     u20090:
 14753  0047FA                     l19115:
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;selftest.c: 114:             printf ("VALVE CHECK ERROR\n");
 14757  0047FA  0E11               	movlw	low STR_68
 14758  0047FC  6F46               	movwf	printf@fmt& (0+255),b
 14759  0047FE  0EFD               	movlw	high STR_68
 14760  004800  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14761  004802  EC43  F050         	call	_printf	;wreg free
 14762                           
 14763                           ; BSR set to: 2
 14764                           ;selftest.c: 115:             chkResult = 0;
 14765  004806  0E00               	movlw	0
 14766  004808  0101               	movlb	1	; () banked
 14767  00480A  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14768  00480C                     l19119:
 14769                           
 14770                           ;selftest.c: 118:     return chkResult;
 14771  00480C  0101               	movlb	1	; () banked
 14772  00480E  517C               	movf	pressureSensorChk@chkResult& (0+255),w,b
 14773                           
 14774                           ; BSR set to: 1
 14775  004810  0012               	return		;funcret
 14776  004812                     __end_of_pressureSensorChk:
 14777                           	opt callstack 0
 14778                           
 14779 ;; *************** function _aCaptureOffSet *****************
 14780 ;; Defined at:
 14781 ;;		line 134 in file "aCapture.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;  sel             1    wreg     enum E16104
 14784 ;;  offVal          2   96[BANK1 ] short 
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;  sel             1   98[BANK1 ] enum E16104
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  1    wreg      void 
 14789 ;; Registers used:
 14790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14791 ;; Tracked objects:
 14792 ;;		On entry : 3C/1
 14793 ;;		On exit  : 3C/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14796 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14797 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14799 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;Total ram usage:        3 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:   26
 14803 ;; This function calls:
 14804 ;;		_printf
 14805 ;; This function is called by:
 14806 ;;		_pressureSensorChk
 14807 ;;		_SelfTest
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           	psect	text24
 14812  0095AA                     __ptext24:
 14813                           	opt callstack 0
 14814  0095AA                     _aCaptureOffSet:
 14815                           	opt callstack 2
 14816                           
 14817                           ; BSR set to: 1
 14818                           ;incstack = 0
 14819                           ;aCaptureOffSet@sel stored from wreg
 14820  0095AA  0101               	movlb	1	; () banked
 14821  0095AC  6F62               	movwf	aCaptureOffSet@sel& (0+255),b
 14822                           
 14823                           ;aCapture.c: 135:     if (sel == MainPSensor) {
 14824  0095AE  0101               	movlb	1	; () banked
 14825  0095B0  5162               	movf	aCaptureOffSet@sel& (0+255),w,b
 14826  0095B2  A4D8               	btfss	status,2,c
 14827  0095B4  D007               	goto	l18193
 14828                           
 14829                           ; BSR set to: 1
 14830                           ;aCapture.c: 136:         mainPSensCal = offVal;
 14831  0095B6  0060  F580  F1F1   	movff	aCaptureOffSet@offVal,_mainPSensCal
 14832  0095BC  0060  F584  F1F2   	movff	aCaptureOffSet@offVal+1,_mainPSensCal+1
 14833                           
 14834                           ;aCapture.c: 137:     } else if (sel == VolPSensor) {
 14835  0095C2  0012               	return	
 14836  0095C4                     l18193:
 14837                           
 14838                           ; BSR set to: 1
 14839  0095C4  0562               	decf	aCaptureOffSet@sel& (0+255),w,b
 14840  0095C6  A4D8               	btfss	status,2,c
 14841  0095C8  D007               	goto	l1963
 14842                           
 14843                           ; BSR set to: 1
 14844                           ;aCapture.c: 138:         auxPSensCal = offVal;
 14845  0095CA  0060  F580  F2F2   	movff	aCaptureOffSet@offVal,_auxPSensCal
 14846  0095D0  0060  F584  F2F3   	movff	aCaptureOffSet@offVal+1,_auxPSensCal+1
 14847                           
 14848                           ;aCapture.c: 139:     } else {
 14849  0095D6  0012               	return	
 14850  0095D8                     l1963:
 14851                           
 14852                           ; BSR set to: 1
 14853                           ;aCapture.c: 140:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 14854  0095D8  94BA               	bcf	186,2,c	;volatile
 14855  0095DA  96BC               	bcf	188,3,c	;volatile
 14856  0095DC  96BA               	bcf	186,3,c	;volatile
 14857                           
 14858                           ; BSR set to: 1
 14859  0095DE  0EBE               	movlw	low STR_28
 14860  0095E0  6F46               	movwf	printf@fmt& (0+255),b
 14861  0095E2  0EFF               	movlw	high STR_28
 14862  0095E4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14863  0095E6  0E00               	movlw	0
 14864  0095E8  6F49               	movwf	(?_printf+3)& (0+255),b
 14865  0095EA  0E66               	movlw	102
 14866  0095EC  6F48               	movwf	(?_printf+2)& (0+255),b
 14867  0095EE  EC43  F050         	call	_printf	;wreg free
 14868  0095F2  0012               	return		;funcret
 14869  0095F4                     __end_of_aCaptureOffSet:
 14870                           	opt callstack 0
 14871                           
 14872 ;; *************** function _aCaptRstFlt *****************
 14873 ;; Defined at:
 14874 ;;		line 154 in file "aCapture.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  sel             1    wreg     enum E16104
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;  sel             1  100[BANK1 ] enum E16104
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      void 
 14881 ;; Registers used:
 14882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14883 ;; Tracked objects:
 14884 ;;		On entry : 4/2
 14885 ;;		On exit  : 3F/39
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14889 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14890 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14891 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14892 ;;Total ram usage:        5 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:   26
 14895 ;; This function calls:
 14896 ;;		_printf
 14897 ;; This function is called by:
 14898 ;;		_main
 14899 ;;		_pressureSensorChk
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903                           	psect	text25
 14904  007A88                     __ptext25:
 14905                           	opt callstack 0
 14906  007A88                     _aCaptRstFlt:
 14907                           	opt callstack 4
 14908                           
 14909                           ;incstack = 0
 14910                           ;aCaptRstFlt@sel stored from wreg
 14911  007A88  0101               	movlb	1	; () banked
 14912  007A8A  6F64               	movwf	aCaptRstFlt@sel& (0+255),b
 14913                           
 14914                           ;aCapture.c: 155:     switch (sel) {
 14915  007A8C  D076               	goto	l18181
 14916  007A8E                     l18171:
 14917                           
 14918                           ; BSR set to: 1
 14919                           ;aCapture.c: 158:             resultTbl[sel] = resultTbl[MainPSensor]<<9;
 14920  007A8E  0060  F9EC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14921  007A94  0060  F9F0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14922  007A9A  0060  F9F4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14923  007AA0  0060  F9F8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14924  007AA6  0E09               	movlw	9
 14925  007AA8                     u18735:
 14926  007AA8  90D8               	bcf	status,0,c
 14927  007AAA  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14928  007AAC  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14929  007AAE  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14930  007AB0  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14931  007AB2  2EE8               	decfsz	wreg,f,c
 14932  007AB4  D7F9               	goto	u18735
 14933  007AB6  D03E               	goto	L18
 14934  007AB8                     l18173:
 14935                           
 14936                           ; BSR set to: 1
 14937                           ;aCapture.c: 161:             resultTbl[sel] = resultTbl[MainPSensor]<<6;
 14938  007AB8  0060  F9EC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14939  007ABE  0060  F9F0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14940  007AC4  0060  F9F4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14941  007ACA  0060  F9F8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14942  007AD0  0E06               	movlw	6
 14943  007AD2                     u18745:
 14944  007AD2  90D8               	bcf	status,0,c
 14945  007AD4  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14946  007AD6  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14947  007AD8  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14948  007ADA  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14949  007ADC  2EE8               	decfsz	wreg,f,c
 14950  007ADE  D7F9               	goto	u18745
 14951  007AE0  D029               	goto	L18
 14952  007AE2                     l18175:
 14953                           
 14954                           ; BSR set to: 1
 14955                           ;aCapture.c: 164:             resultTbl[sel] = resultTbl[MainPSensor]<<4;
 14956  007AE2  0060  F9EC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14957  007AE8  0060  F9F0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14958  007AEE  0060  F9F4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14959  007AF4  0060  F9F8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14960  007AFA  0E04               	movlw	4
 14961  007AFC                     u18755:
 14962  007AFC  90D8               	bcf	status,0,c
 14963  007AFE  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14964  007B00  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14965  007B02  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14966  007B04  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14967  007B06  2EE8               	decfsz	wreg,f,c
 14968  007B08  D7F9               	goto	u18755
 14969  007B0A  D014               	goto	L18
 14970  007B0C                     l18177:
 14971                           
 14972                           ; BSR set to: 1
 14973                           ;aCapture.c: 167:             resultTbl[sel] = resultTbl[MainPSensor]<<2;
 14974  007B0C  0060  F9EC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14975  007B12  0060  F9F0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14976  007B18  0060  F9F4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14977  007B1E  0060  F9F8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14978  007B24  0E02               	movlw	2
 14979  007B26                     u18765:
 14980  007B26  90D8               	bcf	status,0,c
 14981  007B28  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14982  007B2A  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14983  007B2C  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14984  007B2E  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14985  007B30  2EE8               	decfsz	wreg,f,c
 14986  007B32  D7F9               	goto	u18765
 14987  007B34                     L18:
 14988  007B34  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 14989  007B36  0D04               	mullw	4
 14990  007B38  0E7B               	movlw	low _resultTbl
 14991  007B3A  24F3               	addwf	243,w,c
 14992  007B3C  6ED9               	movwf	fsr2l,c
 14993  007B3E  0E02               	movlw	high _resultTbl
 14994  007B40  20F4               	addwfc	prodh,w,c
 14995  007B42  6EDA               	movwf	fsr2h,c
 14996  007B44  0060  F583  FFDE   	movff	??_aCaptRstFlt,postinc2
 14997  007B4A  0060  F587  FFDE   	movff	??_aCaptRstFlt+1,postinc2
 14998  007B50  0060  F58B  FFDE   	movff	??_aCaptRstFlt+2,postinc2
 14999  007B56  0060  F58F  FFDE   	movff	??_aCaptRstFlt+3,postinc2
 15000                           
 15001                           ;aCapture.c: 168:             break;
 15002  007B5C  D024               	goto	l1977
 15003  007B5E                     l1981:
 15004                           
 15005                           ; BSR set to: 1
 15006                           ;aCapture.c: 171:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",103);
 15007  007B5E  94BA               	bcf	186,2,c	;volatile
 15008  007B60  96BC               	bcf	188,3,c	;volatile
 15009  007B62  96BA               	bcf	186,3,c	;volatile
 15010                           
 15011                           ; BSR set to: 1
 15012  007B64  0EBE               	movlw	low STR_28
 15013  007B66  6F46               	movwf	printf@fmt& (0+255),b
 15014  007B68  0EFF               	movlw	high STR_28
 15015  007B6A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15016  007B6C  0E00               	movlw	0
 15017  007B6E  6F49               	movwf	(?_printf+3)& (0+255),b
 15018  007B70  0E67               	movlw	103
 15019  007B72  6F48               	movwf	(?_printf+2)& (0+255),b
 15020  007B74  EC43  F050         	call	_printf	;wreg free
 15021                           
 15022                           ;aCapture.c: 172:     }
 15023  007B78  D016               	goto	l1977
 15024  007B7A                     l18181:
 15025  007B7A  0101               	movlb	1	; () banked
 15026  007B7C  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 15027  007B7E  6F60               	movwf	??_aCaptRstFlt& (0+255),b
 15028  007B80  6B61               	clrf	(??_aCaptRstFlt+1)& (0+255),b
 15029                           
 15030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15031                           ; Switch size 1, requested type "simple"
 15032                           ; Number of cases is 1, Range of values is 0 to 0
 15033                           ; switch strategies available:
 15034                           ; Name         Instructions Cycles
 15035                           ; simple_byte            4     3 (average)
 15036                           ;	Chosen strategy is simple_byte
 15037  007B82  5161               	movf	(??_aCaptRstFlt+1)& (0+255),w,b
 15038  007B84  0A00               	xorlw	0	; case 0
 15039  007B86  A4D8               	btfss	status,2,c
 15040  007B88  D7EA               	goto	l1981
 15041                           
 15042                           ; BSR set to: 1
 15043                           ; Switch size 1, requested type "simple"
 15044                           ; Number of cases is 4, Range of values is 3 to 6
 15045                           ; switch strategies available:
 15046                           ; Name         Instructions Cycles
 15047                           ; simple_byte           13     7 (average)
 15048                           ;	Chosen strategy is simple_byte
 15049  007B8A  5160               	movf	??_aCaptRstFlt& (0+255),w,b
 15050  007B8C  0A03               	xorlw	3	; case 3
 15051  007B8E  B4D8               	btfsc	status,2,c
 15052  007B90  D7BD               	goto	l18177
 15053  007B92  0A07               	xorlw	7	; case 4
 15054  007B94  B4D8               	btfsc	status,2,c
 15055  007B96  D7A5               	goto	l18175
 15056  007B98  0A01               	xorlw	1	; case 5
 15057  007B9A  B4D8               	btfsc	status,2,c
 15058  007B9C  D78D               	goto	l18173
 15059  007B9E  0A03               	xorlw	3	; case 6
 15060  007BA0  B4D8               	btfsc	status,2,c
 15061  007BA2  D775               	goto	l18171
 15062  007BA4  D7DC               	goto	l1981
 15063  007BA6                     l1977:
 15064                           
 15065                           ;aCapture.c: 173:             PIE1bits.ADTIE = 1;
 15066  007BA6  0139               	movlb	57	; () banked
 15067  007BA8  8791               	bsf	145,3,b	;volatile
 15068                           
 15069                           ; BSR set to: 57
 15070  007BAA  0012               	return		;funcret
 15071  007BAC                     __end_of_aCaptRstFlt:
 15072                           	opt callstack 0
 15073                           
 15074 ;; *************** function _keyReadInit *****************
 15075 ;; Defined at:
 15076 ;;		line 46 in file "keyRead.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;		None
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;		None
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      void 
 15083 ;; Registers used:
 15084 ;;		wreg, status,2
 15085 ;; Tracked objects:
 15086 ;;		On entry : 3F/0
 15087 ;;		On exit  : 3F/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15094 ;;Total ram usage:        0 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:   17
 15097 ;; This function calls:
 15098 ;;		Nothing
 15099 ;; This function is called by:
 15100 ;;		_main
 15101 ;;		_SelfTest
 15102 ;; This function uses a non-reentrant model
 15103 ;;
 15104                           
 15105                           	psect	text26
 15106  00A548                     __ptext26:
 15107                           	opt callstack 0
 15108  00A548                     _keyReadInit:
 15109                           	opt callstack 13
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;keyRead.c: 47:     pressMills = 0;
 15113                           
 15114                           ; BSR set to: 57
 15115                           ;incstack = 0
 15116  00A548  0E00               	movlw	0
 15117  00A54A  0102               	movlb	2	; () banked
 15118  00A54C  6F3B               	movwf	(_pressMills+1)& (0+255),b
 15119  00A54E  0E00               	movlw	0
 15120  00A550  6F3A               	movwf	_pressMills& (0+255),b
 15121                           
 15122                           ; BSR set to: 2
 15123                           ;keyRead.c: 48:     lastkey = -1;
 15124  00A552  0100               	movlb	0	; () banked
 15125  00A554  69D0               	setf	_lastkey& (0+255),b
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;keyRead.c: 49:     lastkeyEC = -1;
 15129  00A556  69CF               	setf	_lastkeyEC& (0+255),b
 15130                           
 15131                           ; BSR set to: 0
 15132                           ;keyRead.c: 50:     keyFilter = -1;
 15133  00A558  69CE               	setf	_keyFilter& (0+255),b
 15134                           
 15135                           ; BSR set to: 0
 15136  00A55A  0012               	return		;funcret
 15137  00A55C                     __end_of_keyReadInit:
 15138                           	opt callstack 0
 15139                           
 15140 ;; *************** function _keyReadEC *****************
 15141 ;; Defined at:
 15142 ;;		line 69 in file "keyRead.c"
 15143 ;; Parameters:    Size  Location     Type
 15144 ;;		None
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  longPress       1   59[BANK0 ] _Bool 
 15147 ;;  ch              1   61[BANK0 ] char 
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      char 
 15150 ;; Registers used:
 15151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 3C/1
 15154 ;;		On exit  : 3F/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15158 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15160 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15161 ;;Total ram usage:        3 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:   19
 15164 ;; This function calls:
 15165 ;;		_keyPeek
 15166 ;;		_timeDiff
 15167 ;;		_timeGet
 15168 ;; This function is called by:
 15169 ;;		_main
 15170 ;;		_SelfTest
 15171 ;; This function uses a non-reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text27
 15175  0088A0                     __ptext27:
 15176                           	opt callstack 0
 15177  0088A0                     _keyReadEC:
 15178                           	opt callstack 11
 15179                           
 15180                           ;keyRead.c: 70:     int8_t ch = keyPeek();
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;incstack = 0
 15184  0088A0  ECEE  F047         	call	_keyPeek	;wreg free
 15185  0088A4  6F9D               	movwf	keyReadEC@ch& (0+255),b
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;keyRead.c: 71:     if (lastkeyEC == -1) {
 15189  0088A6  29CF               	incf	_lastkeyEC& (0+255),w,b
 15190  0088A8  A4D8               	btfss	status,2,c
 15191  0088AA  D00C               	goto	l18825
 15192                           
 15193                           ; BSR set to: 0
 15194                           ;keyRead.c: 72:         lastkeyEC = ch;
 15195  0088AC  0060  F274  F0CF   	movff	keyReadEC@ch,_lastkeyEC
 15196                           
 15197                           ; BSR set to: 0
 15198                           ;keyRead.c: 73:         pressMills = timeGet();
 15199  0088B2  ECD5  F052         	call	_timeGet	;wreg free
 15200  0088B6  0060  F24C  F23A   	movff	?_timeGet,_pressMills
 15201  0088BC  0060  F250  F23B   	movff	?_timeGet+1,_pressMills+1
 15202                           
 15203                           ;keyRead.c: 74:     } else if ((ch != -1) && (ch == lastkeyEC)) {
 15204  0088C2  D030               	goto	l18843
 15205  0088C4                     l18825:
 15206                           
 15207                           ; BSR set to: 0
 15208  0088C4  299D               	incf	keyReadEC@ch& (0+255),w,b
 15209  0088C6  B4D8               	btfsc	status,2,c
 15210  0088C8  D02A               	goto	l18839
 15211                           
 15212                           ; BSR set to: 0
 15213  0088CA  51CF               	movf	_lastkeyEC& (0+255),w,b
 15214  0088CC  199D               	xorwf	keyReadEC@ch& (0+255),w,b
 15215  0088CE  A4D8               	btfss	status,2,c
 15216  0088D0  D026               	goto	l18839
 15217                           
 15218                           ; BSR set to: 0
 15219                           ;keyRead.c: 75:         _Bool longPress = 2000 && (timeDiff(pressMills,timeGet())>2000);
 15220  0088D2  0E00               	movlw	0
 15221  0088D4  6F9C               	movwf	_keyReadEC$4081& (0+255),b
 15222                           
 15223                           ; BSR set to: 0
 15224  0088D6  0060  F8E8  F095   	movff	_pressMills,timeDiff@startT
 15225  0088DC  0060  F8EC  F096   	movff	_pressMills+1,timeDiff@startT+1
 15226  0088E2  ECD5  F052         	call	_timeGet	;wreg free
 15227  0088E6  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
 15228  0088EC  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
 15229  0088F2  EC80  F04E         	call	_timeDiff	;wreg free
 15230  0088F6  0ED1               	movlw	209
 15231  0088F8  5D95               	subwf	?_timeDiff& (0+255),w,b
 15232  0088FA  0E07               	movlw	7
 15233  0088FC  5996               	subwfb	(?_timeDiff+1)& (0+255),w,b
 15234  0088FE  A0D8               	btfss	status,0,c
 15235  008900  D002               	goto	l2090
 15236                           
 15237                           ; BSR set to: 0
 15238  008902  0E01               	movlw	1
 15239  008904  6F9C               	movwf	_keyReadEC$4081& (0+255),b
 15240  008906                     l2090:
 15241                           
 15242                           ; BSR set to: 0
 15243  008906  519C               	movf	_keyReadEC$4081& (0+255),w,b
 15244  008908  B4D8               	btfsc	status,2,c
 15245  00890A  D002               	goto	u19550
 15246  00890C  0E01               	movlw	1
 15247  00890E  D001               	goto	u19560
 15248  008910                     u19550:
 15249  008910  0E00               	movlw	0
 15250  008912                     u19560:
 15251  008912  6F9B               	movwf	keyReadEC@longPress& (0+255),b
 15252                           
 15253                           ;keyRead.c: 76:         if (longPress) {
 15254  008914  519B               	movf	keyReadEC@longPress& (0+255),w,b
 15255  008916  B4D8               	btfsc	status,2,c
 15256  008918  D005               	goto	l18843
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;keyRead.c: 77:             return -100;
 15260  00891A  0E9C               	movlw	156
 15261  00891C  0012               	return	
 15262  00891E                     l18839:
 15263                           
 15264                           ; BSR set to: 0
 15265  00891E  299D               	incf	keyReadEC@ch& (0+255),w,b
 15266  008920  B4D8               	btfsc	status,2,c
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;keyRead.c: 80:         lastkeyEC = -1;
 15270  008922  69CF               	setf	_lastkeyEC& (0+255),b
 15271  008924                     l18843:
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;keyRead.c: 82:     return -1;
 15275  008924  0EFF               	movlw	255
 15276                           
 15277                           ; BSR set to: 0
 15278  008926  0012               	return		;funcret
 15279  008928                     __end_of_keyReadEC:
 15280                           	opt callstack 0
 15281                           
 15282 ;; *************** function _timeDiff *****************
 15283 ;; Defined at:
 15284 ;;		line 35 in file "time.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  startT          2   53[BANK0 ] unsigned short 
 15287 ;;  endT            2   55[BANK0 ] unsigned short 
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  intDur          2   57[BANK0 ] unsigned short 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  2   53[BANK0 ] unsigned short 
 15292 ;; Registers used:
 15293 ;;		wreg, status,2, status,0
 15294 ;; Tracked objects:
 15295 ;;		On entry : 3E/0
 15296 ;;		On exit  : 3F/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15302 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15303 ;;Total ram usage:        6 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:   17
 15306 ;; This function calls:
 15307 ;;		Nothing
 15308 ;; This function is called by:
 15309 ;;		_main
 15310 ;;		_keyReadEC
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text28
 15315  009D00                     __ptext28:
 15316                           	opt callstack 0
 15317  009D00                     _timeDiff:
 15318                           	opt callstack 13
 15319                           
 15320                           ;time.c: 36:     time_t intDur;;time.c: 38:     intDur = endT - startT;
 15321                           
 15322                           ; BSR set to: 0
 15323                           ;incstack = 0
 15324  009D00  0100               	movlb	0	; () banked
 15325  009D02  5195               	movf	timeDiff@startT& (0+255),w,b
 15326  009D04  5D97               	subwf	timeDiff@endT& (0+255),w,b
 15327  009D06  6F99               	movwf	timeDiff@intDur& (0+255),b
 15328  009D08  5196               	movf	(timeDiff@startT+1)& (0+255),w,b
 15329  009D0A  5998               	subwfb	(timeDiff@endT+1)& (0+255),w,b
 15330  009D0C  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15331                           
 15332                           ;time.c: 39:     if (intDur>0x8000){
 15333  009D0E  0599               	decf	timeDiff@intDur& (0+255),w,b
 15334  009D10  0E80               	movlw	128
 15335  009D12  599A               	subwfb	(timeDiff@intDur+1)& (0+255),w,b
 15336  009D14  A0D8               	btfss	status,0,c
 15337  009D16  D006               	goto	l18163
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;time.c: 41:         intDur = startT-endT;
 15341  009D18  5197               	movf	timeDiff@endT& (0+255),w,b
 15342  009D1A  5D95               	subwf	timeDiff@startT& (0+255),w,b
 15343  009D1C  6F99               	movwf	timeDiff@intDur& (0+255),b
 15344  009D1E  5198               	movf	(timeDiff@endT+1)& (0+255),w,b
 15345  009D20  5996               	subwfb	(timeDiff@startT+1)& (0+255),w,b
 15346  009D22  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15347  009D24                     l18163:
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;time.c: 43:     return intDur;
 15351  009D24  0060  F264  F095   	movff	timeDiff@intDur,?_timeDiff
 15352  009D2A  0060  F268  F096   	movff	timeDiff@intDur+1,?_timeDiff+1
 15353                           
 15354                           ; BSR set to: 0
 15355  009D30  0012               	return		;funcret
 15356  009D32                     __end_of_timeDiff:
 15357                           	opt callstack 0
 15358                           
 15359 ;; *************** function _flowChk *****************
 15360 ;; Defined at:
 15361 ;;		line 122 in file "selftest.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  flowVal         1    wreg     enum E17018
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  flowVal         1  117[BANK1 ] enum E17018
 15366 ;;  aPVal           2  131[BANK1 ] short 
 15367 ;;  minFlowL        2  128[BANK1 ] short 
 15368 ;;  aPValMax        2  126[BANK1 ] short 
 15369 ;;  tstamp          2  124[BANK1 ] unsigned short 
 15370 ;;  aPValMin        2  122[BANK1 ] short 
 15371 ;;  maxFlowL        2  120[BANK1 ] short 
 15372 ;;  aPValMean       2  118[BANK1 ] short 
 15373 ;;  initOk          1  130[BANK1 ] _Bool 
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      _Bool 
 15376 ;; Registers used:
 15377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15378 ;; Tracked objects:
 15379 ;;		On entry : 3C/0
 15380 ;;		On exit  : 3F/1
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15384 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15385 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15386 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15387 ;;Total ram usage:       18 bytes
 15388 ;; Hardware stack levels used:    1
 15389 ;; Hardware stack levels required when called:   32
 15390 ;; This function calls:
 15391 ;;		_MonitorMsgSendBlock
 15392 ;;		___flge
 15393 ;;		___lldiv
 15394 ;;		___lmul
 15395 ;;		___xxtofl
 15396 ;;		_aCaptGetResult
 15397 ;;		_aCaptureOffGet
 15398 ;;		_printf
 15399 ;;		_printstrblock
 15400 ;;		_setCursor
 15401 ;;		_sprintf
 15402 ;;		_timeDelayMs
 15403 ;;		_timeElapsedR
 15404 ;;		_timeGet
 15405 ;;		_vMeasureGet
 15406 ;;		_vMeasureRst
 15407 ;; This function is called by:
 15408 ;;		_SelfTest
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           	psect	text29
 15413  0054B8                     __ptext29:
 15414                           	opt callstack 0
 15415  0054B8                     _flowChk:
 15416                           	opt callstack 0
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;incstack = 0
 15420 ;; hardware stack exceeded
 15421                           ;flowChk@flowVal stored from wreg
 15422  0054B8  0101               	movlb	1	; () banked
 15423  0054BA  6F75               	movwf	flowChk@flowVal& (0+255),b
 15424                           
 15425                           ;selftest.c: 123:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 124:   int
      +                          16_t minFlowL, maxFlowL;;selftest.c: 125:   _Bool initOk;;selftest.c: 126:   time_t tsta
      +                          mp;;selftest.c: 128:   initOk = 1;
 15426  0054BC  0E01               	movlw	1
 15427  0054BE  0101               	movlb	1	; () banked
 15428  0054C0  6F82               	movwf	flowChk@initOk& (0+255),b
 15429                           
 15430                           ; BSR set to: 1
 15431                           ;selftest.c: 131:   setCursor(0, 0);
 15432  0054C2  0E00               	movlw	0
 15433  0054C4  0100               	movlb	0	; () banked
 15434  0054C6  6F92               	movwf	setCursor@row& (0+255),b
 15435  0054C8  0E00               	movlw	0
 15436  0054CA  ECAD  F04C         	call	_setCursor
 15437                           
 15438                           ;selftest.c: 132:   printstrblock("FLOW RATE        ");
 15439  0054CE  0E70               	movlw	low STR_69
 15440  0054D0  0100               	movlb	0	; () banked
 15441  0054D2  6F8F               	movwf	printstrblock@c& (0+255),b
 15442  0054D4  0EFD               	movlw	high STR_69
 15443  0054D6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15444  0054D8  ECA8  F050         	call	_printstrblock	;wreg free
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;selftest.c: 133:   aPValMin = 4096;
 15448  0054DC  0E10               	movlw	16
 15449  0054DE  0101               	movlb	1	; () banked
 15450  0054E0  6F7B               	movwf	(flowChk@aPValMin+1)& (0+255),b
 15451  0054E2  0E00               	movlw	0
 15452  0054E4  6F7A               	movwf	flowChk@aPValMin& (0+255),b
 15453                           
 15454                           ; BSR set to: 1
 15455                           ;selftest.c: 134:   aPValMax = 0;
 15456  0054E6  0E00               	movlw	0
 15457  0054E8  6F7F               	movwf	(flowChk@aPValMax+1)& (0+255),b
 15458  0054EA  0E00               	movlw	0
 15459  0054EC  6F7E               	movwf	flowChk@aPValMax& (0+255),b
 15460                           
 15461                           ; BSR set to: 1
 15462                           ;selftest.c: 136:   if (!MonitorMsgSendBlock(MONSTATE_CALF)){
 15463  0054EE  0EA0               	movlw	160
 15464  0054F0  ECBB  F050         	call	_MonitorMsgSendBlock
 15465  0054F4  0900               	iorlw	0
 15466  0054F6  A4D8               	btfss	status,2,c
 15467  0054F8  D030               	goto	l19153
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;selftest.c: 137:     initOk=0;
 15471  0054FA  0E00               	movlw	0
 15472  0054FC  0101               	movlb	1	; () banked
 15473  0054FE  6F82               	movwf	flowChk@initOk& (0+255),b
 15474                           
 15475                           ; BSR set to: 1
 15476                           ;selftest.c: 138:     printf ("Mon error");
 15477  005500  0E8D               	movlw	low STR_70
 15478  005502  6F46               	movwf	printf@fmt& (0+255),b
 15479  005504  0EFF               	movlw	high STR_70
 15480  005506  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15481  005508  EC43  F050         	call	_printf	;wreg free
 15482                           
 15483                           ; BSR set to: 2
 15484                           ;selftest.c: 139:     setCursor(0, 0);
 15485  00550C  0E00               	movlw	0
 15486  00550E  0100               	movlb	0	; () banked
 15487  005510  6F92               	movwf	setCursor@row& (0+255),b
 15488  005512  0E00               	movlw	0
 15489  005514  ECAD  F04C         	call	_setCursor
 15490                           
 15491                           ;selftest.c: 140:     printstrblock("MONITOR ERROR");
 15492  005518  0E0A               	movlw	low STR_71
 15493  00551A  0100               	movlb	0	; () banked
 15494  00551C  6F8F               	movwf	printstrblock@c& (0+255),b
 15495  00551E  0EFF               	movlw	high STR_71
 15496  005520  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15497  005522  ECA8  F050         	call	_printstrblock	;wreg free
 15498                           
 15499                           ; BSR set to: 0
 15500                           ;selftest.c: 141:     timeDelayMs(500);
 15501  005526  0E01               	movlw	1
 15502  005528  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15503  00552A  0EF4               	movlw	244
 15504  00552C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15505  00552E  ECE4  F04D         	call	_timeDelayMs	;wreg free
 15506  005532  D013               	goto	l19153
 15507  005534                     l2842:
 15508                           
 15509                           ; BSR set to: 1
 15510                           ;selftest.c: 147:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
 15511  005534  94BA               	bcf	186,2,c	;volatile
 15512  005536  86BC               	bsf	188,3,c	;volatile
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;selftest.c: 148:     minFlowL = 250;
 15516  005538  0E00               	movlw	0
 15517  00553A  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15518  00553C  0EFA               	movlw	250
 15519  00553E  D00B               	goto	L20
 15520  005540                     l2844:
 15521                           
 15522                           ; BSR set to: 1
 15523                           ;selftest.c: 151:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
 15524  005540  84BA               	bsf	186,2,c	;volatile
 15525  005542  96BC               	bcf	188,3,c	;volatile
 15526                           
 15527                           ; BSR set to: 1
 15528                           ;selftest.c: 152:     minFlowL = 500;
 15529  005544  0E01               	movlw	1
 15530  005546  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15531  005548  0EF4               	movlw	244
 15532  00554A  D005               	goto	L20
 15533  00554C                     l2845:
 15534                           
 15535                           ; BSR set to: 1
 15536                           ;selftest.c: 155:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 15537  00554C  84BA               	bsf	186,2,c	;volatile
 15538  00554E  86BC               	bsf	188,3,c	;volatile
 15539                           
 15540                           ; BSR set to: 1
 15541                           ;selftest.c: 156:     minFlowL = 600;
 15542  005550  0E02               	movlw	2
 15543  005552  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15544  005554  0E58               	movlw	88
 15545  005556                     L20:
 15546  005556  6F80               	movwf	flowChk@minFlowL& (0+255),b
 15547                           
 15548                           ;selftest.c: 157:     break;
 15549  005558  D012               	goto	l19155
 15550  00555A                     l19153:
 15551                           
 15552                           ; BSR set to: 0
 15553  00555A  0101               	movlb	1	; () banked
 15554  00555C  5175               	movf	flowChk@flowVal& (0+255),w,b
 15555  00555E  6F73               	movwf	??_flowChk& (0+255),b
 15556  005560  6B74               	clrf	(??_flowChk+1)& (0+255),b
 15557                           
 15558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15559                           ; Switch size 1, requested type "simple"
 15560                           ; Number of cases is 1, Range of values is 0 to 0
 15561                           ; switch strategies available:
 15562                           ; Name         Instructions Cycles
 15563                           ; simple_byte            4     3 (average)
 15564                           ;	Chosen strategy is simple_byte
 15565  005562  5174               	movf	(??_flowChk+1)& (0+255),w,b
 15566  005564  0A00               	xorlw	0	; case 0
 15567  005566  A4D8               	btfss	status,2,c
 15568  005568  D00A               	goto	l19155
 15569                           
 15570                           ; BSR set to: 1
 15571                           ; Switch size 1, requested type "simple"
 15572                           ; Number of cases is 3, Range of values is 0 to 2
 15573                           ; switch strategies available:
 15574                           ; Name         Instructions Cycles
 15575                           ; simple_byte           10     6 (average)
 15576                           ;	Chosen strategy is simple_byte
 15577  00556A  5173               	movf	??_flowChk& (0+255),w,b
 15578  00556C  0A00               	xorlw	0	; case 0
 15579  00556E  B4D8               	btfsc	status,2,c
 15580  005570  D7E1               	goto	l2842
 15581  005572  0A01               	xorlw	1	; case 1
 15582  005574  B4D8               	btfsc	status,2,c
 15583  005576  D7E4               	goto	l2844
 15584  005578  0A03               	xorlw	3	; case 2
 15585  00557A  B4D8               	btfsc	status,2,c
 15586  00557C  D7E7               	goto	l2845
 15587  00557E                     l19155:
 15588                           
 15589                           ; BSR set to: 1
 15590                           ;selftest.c: 159:   maxFlowL = 2*minFlowL;
 15591  00557E  90D8               	bcf	status,0,c
 15592  005580  3580               	rlcf	flowChk@minFlowL& (0+255),w,b
 15593  005582  6F78               	movwf	flowChk@maxFlowL& (0+255),b
 15594  005584  3581               	rlcf	(flowChk@minFlowL+1)& (0+255),w,b
 15595  005586  6F79               	movwf	(flowChk@maxFlowL+1)& (0+255),b
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;selftest.c: 160:   LATAbits.LATA3 = 1;
 15599  005588  86BA               	bsf	186,3,c	;volatile
 15600                           
 15601                           ; BSR set to: 1
 15602                           ;selftest.c: 162:   timeDelayMs(250);
 15603  00558A  0E00               	movlw	0
 15604  00558C  0100               	movlb	0	; () banked
 15605  00558E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15606  005590  0EFA               	movlw	250
 15607  005592  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15608  005594  ECE4  F04D         	call	_timeDelayMs	;wreg free
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;selftest.c: 163:   vMeasureRst();
 15612  005598  EC2F  F052         	call	_vMeasureRst	;wreg free
 15613                           
 15614                           ; BSR set to: 57
 15615                           ;selftest.c: 164:   tstamp = timeGet();
 15616  00559C  ECD5  F052         	call	_timeGet	;wreg free
 15617  0055A0  0060  F24C  F17C   	movff	?_timeGet,flowChk@tstamp
 15618  0055A6  0060  F250  F17D   	movff	?_timeGet+1,flowChk@tstamp+1
 15619                           
 15620                           ;selftest.c: 165:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15621  0055AC  D029               	goto	l19175
 15622  0055AE                     l19165:
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;selftest.c: 166:     aCaptGetResult(VolPSensor, &aPVal);
 15626  0055AE  0E83               	movlw	low flowChk@aPVal
 15627  0055B0  0101               	movlb	1	; () banked
 15628  0055B2  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 15629  0055B4  0E01               	movlw	high flowChk@aPVal
 15630  0055B6  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 15631  0055B8  0E01               	movlw	1
 15632  0055BA  EC5A  F033         	call	_aCaptGetResult
 15633                           
 15634                           ;selftest.c: 167:     if (aPVal > aPValMax) {
 15635  0055BE  0101               	movlb	1	; () banked
 15636  0055C0  5183               	movf	flowChk@aPVal& (0+255),w,b
 15637  0055C2  5D7E               	subwf	flowChk@aPValMax& (0+255),w,b
 15638  0055C4  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15639  0055C6  0A80               	xorlw	128
 15640  0055C8  6F73               	movwf	??_flowChk& (0+255),b
 15641  0055CA  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15642  0055CC  0A80               	xorlw	128
 15643  0055CE  5973               	subwfb	??_flowChk& (0+255),w,b
 15644  0055D0  B0D8               	btfsc	status,0,c
 15645  0055D2  D006               	goto	l19171
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;selftest.c: 168:       aPValMax = aPVal;
 15649  0055D4  0060  F60C  F17E   	movff	flowChk@aPVal,flowChk@aPValMax
 15650  0055DA  0060  F610  F17F   	movff	flowChk@aPVal+1,flowChk@aPValMax+1
 15651  0055E0                     l19171:
 15652                           
 15653                           ; BSR set to: 1
 15654                           ;selftest.c: 170:     if (aPVal < aPValMin) {
 15655  0055E0  517A               	movf	flowChk@aPValMin& (0+255),w,b
 15656  0055E2  5D83               	subwf	flowChk@aPVal& (0+255),w,b
 15657  0055E4  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15658  0055E6  0A80               	xorlw	128
 15659  0055E8  6F73               	movwf	??_flowChk& (0+255),b
 15660  0055EA  517B               	movf	(flowChk@aPValMin+1)& (0+255),w,b
 15661  0055EC  0A80               	xorlw	128
 15662  0055EE  5973               	subwfb	??_flowChk& (0+255),w,b
 15663  0055F0  B0D8               	btfsc	status,0,c
 15664  0055F2  D006               	goto	l19175
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;selftest.c: 171:       aPValMin = aPVal;
 15668  0055F4  0060  F60C  F17A   	movff	flowChk@aPVal,flowChk@aPValMin
 15669  0055FA  0060  F610  F17B   	movff	flowChk@aPVal+1,flowChk@aPValMin+1
 15670  005600                     l19175:
 15671                           
 15672                           ;selftest.c: 165:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15673  005600  0E7C               	movlw	low flowChk@tstamp
 15674  005602  0100               	movlb	0	; () banked
 15675  005604  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 15676  005606  0E01               	movlw	high flowChk@tstamp
 15677  005608  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 15678  00560A  0E00               	movlw	0
 15679  00560C  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 15680  00560E  0EFA               	movlw	250
 15681  005610  6F95               	movwf	timeElapsedR@duration& (0+255),b
 15682  005612  ECBE  F047         	call	_timeElapsedR	;wreg free
 15683  005616  0900               	iorlw	0
 15684  005618  B4D8               	btfsc	status,2,c
 15685  00561A  D7C9               	goto	l19165
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;selftest.c: 175:   freeFlowRateL = vMeasureGet()<<2;
 15689  00561C  ECD7  F048         	call	_vMeasureGet	;wreg free
 15690  005620  90D8               	bcf	status,0,c
 15691  005622  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15692  005624  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15693  005626  90D8               	bcf	status,0,c
 15694  005628  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15695  00562A  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15696  00562C  0060  F290  F234   	movff	?_vMeasureGet,_freeFlowRateL
 15697  005632  0060  F294  F235   	movff	?_vMeasureGet+1,_freeFlowRateL+1
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;selftest.c: 176:   if (!MonitorMsgSendBlock(MONSTATE_STOP)){
 15701  005638  0E00               	movlw	0
 15702  00563A  ECBB  F050         	call	_MonitorMsgSendBlock
 15703  00563E  0900               	iorlw	0
 15704  005640  A4D8               	btfss	status,2,c
 15705  005642  D01C               	goto	l19191
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;selftest.c: 177:     initOk=0;
 15709  005644  0E00               	movlw	0
 15710  005646  0101               	movlb	1	; () banked
 15711  005648  6F82               	movwf	flowChk@initOk& (0+255),b
 15712                           
 15713                           ; BSR set to: 1
 15714                           ;selftest.c: 178:     printf ("Mon error");
 15715  00564A  0E8D               	movlw	low STR_70
 15716  00564C  6F46               	movwf	printf@fmt& (0+255),b
 15717  00564E  0EFF               	movlw	high STR_70
 15718  005650  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15719  005652  EC43  F050         	call	_printf	;wreg free
 15720                           
 15721                           ; BSR set to: 2
 15722                           ;selftest.c: 179:     setCursor(0, 0);
 15723  005656  0E00               	movlw	0
 15724  005658  0100               	movlb	0	; () banked
 15725  00565A  6F92               	movwf	setCursor@row& (0+255),b
 15726  00565C  0E00               	movlw	0
 15727  00565E  ECAD  F04C         	call	_setCursor
 15728                           
 15729                           ;selftest.c: 180:     printstrblock("MONITOR ERROR");
 15730  005662  0E0A               	movlw	low STR_71
 15731  005664  0100               	movlb	0	; () banked
 15732  005666  6F8F               	movwf	printstrblock@c& (0+255),b
 15733  005668  0EFF               	movlw	high STR_71
 15734  00566A  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15735  00566C  ECA8  F050         	call	_printstrblock	;wreg free
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;selftest.c: 181:     timeDelayMs(500);
 15739  005670  0E01               	movlw	1
 15740  005672  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15741  005674  0EF4               	movlw	244
 15742  005676  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15743  005678  ECE4  F04D         	call	_timeDelayMs	;wreg free
 15744  00567C                     l19191:
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;selftest.c: 183:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 15748  00567C  94BA               	bcf	186,2,c	;volatile
 15749                           
 15750                           ; BSR set to: 0
 15751  00567E  96BC               	bcf	188,3,c	;volatile
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;selftest.c: 184:   LATAbits.LATA3 = 0;
 15755  005680  96BA               	bcf	186,3,c	;volatile
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;selftest.c: 186:   aPValMean=aCaptureOffGet(VolPSensor);
 15759  005682  0E01               	movlw	1
 15760  005684  ECFA  F04A         	call	_aCaptureOffGet
 15761  005688  0060  F580  F176   	movff	?_aCaptureOffGet,flowChk@aPValMean
 15762  00568E  0060  F584  F177   	movff	?_aCaptureOffGet+1,flowChk@aPValMean+1
 15763                           
 15764                           ;selftest.c: 188:   if ((aPValMean + aPValMax)>= (0.95*8192)) {
 15765  005694  0101               	movlb	1	; () banked
 15766  005696  517E               	movf	flowChk@aPValMax& (0+255),w,b
 15767  005698  2576               	addwf	flowChk@aPValMean& (0+255),w,b
 15768  00569A  6F73               	movwf	??_flowChk& (0+255),b
 15769  00569C  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15770  00569E  2177               	addwfc	(flowChk@aPValMean+1)& (0+255),w,b
 15771  0056A0  6F74               	movwf	(??_flowChk+1)& (0+255),b
 15772  0056A2  0060  F5CC  F08B   	movff	??_flowChk,___xxtofl@val
 15773  0056A8  0060  F5D0  F08C   	movff	??_flowChk+1,___xxtofl@val+1
 15774  0056AE  0100               	movlb	0	; () banked
 15775  0056B0  0E00               	movlw	0
 15776  0056B2  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15777  0056B4  0EFF               	movlw	-1
 15778  0056B6  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
 15779  0056B8  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
 15780  0056BA  0E01               	movlw	1
 15781  0056BC  EC73  F039         	call	___xxtofl
 15782  0056C0  0060  F22C  F099   	movff	?___xxtofl,___flge@ff1
 15783  0056C6  0060  F230  F09A   	movff	?___xxtofl+1,___flge@ff1+1
 15784  0056CC  0060  F234  F09B   	movff	?___xxtofl+2,___flge@ff1+2
 15785  0056D2  0060  F238  F09C   	movff	?___xxtofl+3,___flge@ff1+3
 15786  0056D8  0E33               	movlw	51
 15787  0056DA  6F9D               	movwf	___flge@ff2& (0+255),b
 15788  0056DC  0E33               	movlw	51
 15789  0056DE  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 15790  0056E0  0EF3               	movlw	243
 15791  0056E2  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 15792  0056E4  0E45               	movlw	69
 15793  0056E6  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 15794  0056E8  EC36  F03F         	call	___flge	;wreg free
 15795  0056EC  A0D8               	btfss	status,0,c
 15796  0056EE  D016               	goto	l19209
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;selftest.c: 190:     setCursor(0, 0);
 15800  0056F0  0E00               	movlw	0
 15801  0056F2  6F92               	movwf	setCursor@row& (0+255),b
 15802  0056F4  0E00               	movlw	0
 15803  0056F6  ECAD  F04C         	call	_setCursor
 15804                           
 15805                           ;selftest.c: 191:     printstrblock("FLOW TOO HIGH   ");
 15806  0056FA  0EFB               	movlw	low STR_74
 15807  0056FC  0100               	movlb	0	; () banked
 15808  0056FE  6F8F               	movwf	printstrblock@c& (0+255),b
 15809  005700  0EFD               	movlw	high STR_74
 15810  005702  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15811  005704  ECA8  F050         	call	_printstrblock	;wreg free
 15812  005708                     l19205:
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;selftest.c: 192:     timeDelayMs(1000);
 15816  005708  0E03               	movlw	3
 15817  00570A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15818  00570C  0EE8               	movlw	232
 15819  00570E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15820  005710  ECE4  F04D         	call	_timeDelayMs	;wreg free
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;selftest.c: 193:     initOk = 0;
 15824  005714  0E00               	movlw	0
 15825  005716  0101               	movlb	1	; () banked
 15826  005718  6F82               	movwf	flowChk@initOk& (0+255),b
 15827                           
 15828                           ;selftest.c: 194:   } else {
 15829  00571A  D07C               	goto	l19237
 15830  00571C                     l19209:
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;selftest.c: 195:     sprintf(lcdTopRow, "FLOW: % 3d L/min ", (int16_t) ((uint32_t) ((ui
      +                          nt32_t) 60 * freeFlowRateL) / 1000));
 15834  00571C  0EAB               	movlw	low _lcdTopRow
 15835  00571E  0101               	movlb	1	; () banked
 15836  005720  6F46               	movwf	sprintf@s& (0+255),b
 15837  005722  0E02               	movlw	high _lcdTopRow
 15838  005724  6F47               	movwf	(sprintf@s+1)& (0+255),b
 15839  005726  0E94               	movlw	low STR_75
 15840  005728  6F48               	movwf	sprintf@fmt& (0+255),b
 15841  00572A  0EFD               	movlw	high STR_75
 15842  00572C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 15843  00572E  0060  F8D0  F08B   	movff	_freeFlowRateL,___lmul@multiplier
 15844  005734  0060  F8D4  F08C   	movff	_freeFlowRateL+1,___lmul@multiplier+1
 15845  00573A  0100               	movlb	0	; () banked
 15846  00573C  6B8D               	clrf	(___lmul@multiplier+2)& (0+255),b
 15847  00573E  6B8E               	clrf	(___lmul@multiplier+3)& (0+255),b
 15848  005740  0E3C               	movlw	60
 15849  005742  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 15850  005744  0E00               	movlw	0
 15851  005746  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15852  005748  0E00               	movlw	0
 15853  00574A  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15854  00574C  0E00               	movlw	0
 15855  00574E  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15856  005750  EC1E  F048         	call	___lmul	;wreg free
 15857  005754  0060  F22C  F097   	movff	?___lmul,___lldiv@dividend
 15858  00575A  0060  F230  F098   	movff	?___lmul+1,___lldiv@dividend+1
 15859  005760  0060  F234  F099   	movff	?___lmul+2,___lldiv@dividend+2
 15860  005766  0060  F238  F09A   	movff	?___lmul+3,___lldiv@dividend+3
 15861  00576C  0EE8               	movlw	232
 15862  00576E  6F9B               	movwf	___lldiv@divisor& (0+255),b
 15863  005770  0E03               	movlw	3
 15864  005772  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 15865  005774  0E00               	movlw	0
 15866  005776  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 15867  005778  0E00               	movlw	0
 15868  00577A  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 15869  00577C  ECC6  F043         	call	___lldiv	;wreg free
 15870  005780  0060  F25C  F14A   	movff	?___lldiv,?_sprintf+4
 15871  005786  0060  F260  F14B   	movff	?___lldiv+1,?_sprintf+5
 15872  00578C  EC31  F049         	call	_sprintf	;wreg free
 15873                           
 15874                           ; BSR set to: 1
 15875                           ;selftest.c: 196:     setCursor(0, 0);
 15876  005790  0E00               	movlw	0
 15877  005792  0100               	movlb	0	; () banked
 15878  005794  6F92               	movwf	setCursor@row& (0+255),b
 15879  005796  0E00               	movlw	0
 15880  005798  ECAD  F04C         	call	_setCursor
 15881                           
 15882                           ;selftest.c: 197:     printstrblock(lcdTopRow);
 15883  00579C  0EAB               	movlw	low _lcdTopRow
 15884  00579E  0100               	movlb	0	; () banked
 15885  0057A0  6F8F               	movwf	printstrblock@c& (0+255),b
 15886  0057A2  0E02               	movlw	high _lcdTopRow
 15887  0057A4  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15888  0057A6  ECA8  F050         	call	_printstrblock	;wreg free
 15889                           
 15890                           ; BSR set to: 0
 15891                           ;selftest.c: 198:     timeDelayMs(4000);
 15892  0057AA  0E0F               	movlw	15
 15893  0057AC  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15894  0057AE  0EA0               	movlw	160
 15895  0057B0  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15896  0057B2  ECE4  F04D         	call	_timeDelayMs	;wreg free
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;selftest.c: 200:     if (freeFlowRateL < minFlowL) {
 15900  0057B6  0101               	movlb	1	; () banked
 15901  0057B8  5180               	movf	flowChk@minFlowL& (0+255),w,b
 15902  0057BA  0102               	movlb	2	; () banked
 15903  0057BC  5D34               	subwf	_freeFlowRateL& (0+255),w,b
 15904  0057BE  0101               	movlb	1	; () banked
 15905  0057C0  5181               	movf	(flowChk@minFlowL+1)& (0+255),w,b
 15906  0057C2  0102               	movlb	2	; () banked
 15907  0057C4  5935               	subwfb	(_freeFlowRateL+1)& (0+255),w,b
 15908  0057C6  B0D8               	btfsc	status,0,c
 15909  0057C8  D00E               	goto	l19227
 15910                           
 15911                           ; BSR set to: 2
 15912                           ;selftest.c: 202:       setCursor(0, 0);
 15913  0057CA  0E00               	movlw	0
 15914  0057CC  0100               	movlb	0	; () banked
 15915  0057CE  6F92               	movwf	setCursor@row& (0+255),b
 15916  0057D0  0E00               	movlw	0
 15917  0057D2  ECAD  F04C         	call	_setCursor
 15918                           
 15919                           ;selftest.c: 203:       printstrblock("FLOW TOO LOW    ");
 15920  0057D6  0EEA               	movlw	low STR_76
 15921  0057D8  0100               	movlb	0	; () banked
 15922  0057DA  6F8F               	movwf	printstrblock@c& (0+255),b
 15923  0057DC  0EFD               	movlw	high STR_76
 15924  0057DE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15925  0057E0  ECA8  F050         	call	_printstrblock	;wreg free
 15926  0057E4  D791               	goto	l19205
 15927  0057E6                     l19227:
 15928                           
 15929                           ; BSR set to: 2
 15930  0057E6  5134               	movf	_freeFlowRateL& (0+255),w,b
 15931  0057E8  0101               	movlb	1	; () banked
 15932  0057EA  5D78               	subwf	flowChk@maxFlowL& (0+255),w,b
 15933  0057EC  0102               	movlb	2	; () banked
 15934  0057EE  5135               	movf	(_freeFlowRateL+1)& (0+255),w,b
 15935  0057F0  0101               	movlb	1	; () banked
 15936  0057F2  5979               	subwfb	(flowChk@maxFlowL+1)& (0+255),w,b
 15937  0057F4  B0D8               	btfsc	status,0,c
 15938  0057F6  D00E               	goto	l19237
 15939                           
 15940                           ; BSR set to: 1
 15941                           ;selftest.c: 208:       setCursor(0, 0);
 15942  0057F8  0E00               	movlw	0
 15943  0057FA  0100               	movlb	0	; () banked
 15944  0057FC  6F92               	movwf	setCursor@row& (0+255),b
 15945  0057FE  0E00               	movlw	0
 15946  005800  ECAD  F04C         	call	_setCursor
 15947                           
 15948                           ;selftest.c: 209:       printstrblock("FLOW TOO HIGH   ");
 15949  005804  0EFB               	movlw	low STR_74
 15950  005806  0100               	movlb	0	; () banked
 15951  005808  6F8F               	movwf	printstrblock@c& (0+255),b
 15952  00580A  0EFD               	movlw	high STR_74
 15953  00580C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15954  00580E  ECA8  F050         	call	_printstrblock	;wreg free
 15955  005812  D77A               	goto	l19205
 15956  005814                     l19237:
 15957                           
 15958                           ; BSR set to: 1
 15959                           ;selftest.c: 214:   return initOk;
 15960  005814  5182               	movf	flowChk@initOk& (0+255),w,b
 15961                           
 15962                           ; BSR set to: 1
 15963  005816  0012               	return		;funcret
 15964  005818                     __end_of_flowChk:
 15965                           	opt callstack 0
 15966                           
 15967 ;; *************** function _vMeasureRst *****************
 15968 ;; Defined at:
 15969 ;;		line 46 in file "vMeasure.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;		None
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		wreg, status,2
 15978 ;; Tracked objects:
 15979 ;;		On entry : 3F/0
 15980 ;;		On exit  : 3F/39
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;Total ram usage:        0 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; Hardware stack levels required when called:   17
 15990 ;; This function calls:
 15991 ;;		Nothing
 15992 ;; This function is called by:
 15993 ;;		_main
 15994 ;;		_flowChk
 15995 ;; This function uses a non-reentrant model
 15996 ;;
 15997                           
 15998                           	psect	text30
 15999  00A45E                     __ptext30:
 16000                           	opt callstack 0
 16001  00A45E                     _vMeasureRst:
 16002                           	opt callstack 13
 16003                           
 16004                           ; BSR set to: 0
 16005                           ;vMeasure.c: 47:     PIE4bits.TMR2IE = 0;
 16006                           
 16007                           ; BSR set to: 1
 16008                           ;incstack = 0
 16009  00A45E  0139               	movlb	57	; () banked
 16010  00A460  9594               	bcf	148,2,b	;volatile
 16011                           
 16012                           ; BSR set to: 57
 16013                           ;vMeasure.c: 48:     volume = 0;
 16014  00A462  0E00               	movlw	0
 16015  00A464  0102               	movlb	2	; () banked
 16016  00A466  6F2B               	movwf	_volume& (0+255),b
 16017  00A468  0E00               	movlw	0
 16018  00A46A  6F2C               	movwf	(_volume+1)& (0+255),b
 16019  00A46C  0E00               	movlw	0
 16020  00A46E  6F2D               	movwf	(_volume+2)& (0+255),b
 16021  00A470  0E00               	movlw	0
 16022  00A472  6F2E               	movwf	(_volume+3)& (0+255),b
 16023                           
 16024                           ; BSR set to: 2
 16025                           ;vMeasure.c: 49:     PIE4bits.TMR2IE = 1;
 16026  00A474  0139               	movlb	57	; () banked
 16027  00A476  8594               	bsf	148,2,b	;volatile
 16028                           
 16029                           ; BSR set to: 57
 16030  00A478  0012               	return		;funcret
 16031  00A47A                     __end_of_vMeasureRst:
 16032                           	opt callstack 0
 16033                           
 16034 ;; *************** function _vMeasureGet *****************
 16035 ;; Defined at:
 16036 ;;		line 59 in file "vMeasure.c"
 16037 ;; Parameters:    Size  Location     Type
 16038 ;;		None
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;  rawV            4   70[BANK0 ] unsigned long 
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  2   68[BANK0 ] unsigned short 
 16043 ;; Registers used:
 16044 ;;		wreg, status,2, status,0, cstack
 16045 ;; Tracked objects:
 16046 ;;		On entry : 3C/1
 16047 ;;		On exit  : 3F/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16051 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16053 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16054 ;;Total ram usage:        6 bytes
 16055 ;; Hardware stack levels used:    1
 16056 ;; Hardware stack levels required when called:   18
 16057 ;; This function calls:
 16058 ;;		___lldiv
 16059 ;; This function is called by:
 16060 ;;		_inspOSMeasure
 16061 ;;		_main
 16062 ;;		_flowChk
 16063 ;; This function uses a non-reentrant model
 16064 ;;
 16065                           
 16066                           	psect	text31
 16067  0091AE                     __ptext31:
 16068                           	opt callstack 0
 16069  0091AE                     _vMeasureGet:
 16070                           	opt callstack 12
 16071                           
 16072                           ;vMeasure.c: 60:     uint32_t rawV;;vMeasure.c: 61:     PIE4bits.TMR2IE = 0;
 16073                           
 16074                           ; BSR set to: 57
 16075                           ;incstack = 0
 16076  0091AE  0139               	movlb	57	; () banked
 16077  0091B0  9594               	bcf	148,2,b	;volatile
 16078                           
 16079                           ;vMeasure.c: 62:     rawV=volume;
 16080  0091B2  0060  F8AC  F0A6   	movff	_volume,vMeasureGet@rawV
 16081  0091B8  0060  F8B0  F0A7   	movff	_volume+1,vMeasureGet@rawV+1
 16082  0091BE  0060  F8B4  F0A8   	movff	_volume+2,vMeasureGet@rawV+2
 16083  0091C4  0060  F8B8  F0A9   	movff	_volume+3,vMeasureGet@rawV+3
 16084                           
 16085                           ;vMeasure.c: 63:     PIE4bits.TMR2IE = 1;
 16086  0091CA  8594               	bsf	148,2,b	;volatile
 16087                           
 16088                           ; BSR set to: 57
 16089                           ;vMeasure.c: 65:     return rawV/55;
 16090  0091CC  0060  F298  F097   	movff	vMeasureGet@rawV,___lldiv@dividend
 16091  0091D2  0060  F29C  F098   	movff	vMeasureGet@rawV+1,___lldiv@dividend+1
 16092  0091D8  0060  F2A0  F099   	movff	vMeasureGet@rawV+2,___lldiv@dividend+2
 16093  0091DE  0060  F2A4  F09A   	movff	vMeasureGet@rawV+3,___lldiv@dividend+3
 16094  0091E4  0E37               	movlw	55
 16095  0091E6  0100               	movlb	0	; () banked
 16096  0091E8  6F9B               	movwf	___lldiv@divisor& (0+255),b
 16097  0091EA  0E00               	movlw	0
 16098  0091EC  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 16099  0091EE  0E00               	movlw	0
 16100  0091F0  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 16101  0091F2  0E00               	movlw	0
 16102  0091F4  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 16103  0091F6  ECC6  F043         	call	___lldiv	;wreg free
 16104  0091FA  0060  F25C  F0A4   	movff	?___lldiv,?_vMeasureGet
 16105  009200  0060  F260  F0A5   	movff	?___lldiv+1,?_vMeasureGet+1
 16106                           
 16107                           ; BSR set to: 0
 16108  009206  0012               	return		;funcret
 16109  009208                     __end_of_vMeasureGet:
 16110                           	opt callstack 0
 16111                           
 16112 ;; *************** function ___lldiv *****************
 16113 ;; Defined at:
 16114 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 16115 ;; Parameters:    Size  Location     Type
 16116 ;;  dividend        4   55[BANK0 ] unsigned long 
 16117 ;;  divisor         4   59[BANK0 ] unsigned long 
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;  quotient        4   63[BANK0 ] unsigned long 
 16120 ;;  counter         1   67[BANK0 ] unsigned char 
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  4   55[BANK0 ] unsigned long 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0
 16125 ;; Tracked objects:
 16126 ;;		On entry : 3F/0
 16127 ;;		On exit  : 3F/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16133 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16134 ;;Total ram usage:       13 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:   17
 16137 ;; This function calls:
 16138 ;;		Nothing
 16139 ;; This function is called by:
 16140 ;;		_vMeasureGet
 16141 ;;		_flowChk
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	text32
 16146  00878C                     __ptext32:
 16147                           	opt callstack 0
 16148  00878C                     ___lldiv:
 16149                           	opt callstack 12
 16150                           
 16151                           ; BSR set to: 0
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;incstack = 0
 16155  00878C  0E00               	movlw	0
 16156  00878E  6F9F               	movwf	___lldiv@quotient& (0+255),b
 16157  008790  0E00               	movlw	0
 16158  008792  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 16159  008794  0E00               	movlw	0
 16160  008796  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 16161  008798  0E00               	movlw	0
 16162  00879A  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 16163                           
 16164                           ; BSR set to: 0
 16165  00879C  519B               	movf	___lldiv@divisor& (0+255),w,b
 16166  00879E  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16167  0087A0  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16168  0087A2  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16169  0087A4  B4D8               	btfsc	status,2,c
 16170  0087A6  D02A               	goto	l3228
 16171                           
 16172                           ; BSR set to: 0
 16173  0087A8  0E01               	movlw	1
 16174  0087AA  6FA3               	movwf	___lldiv@counter& (0+255),b
 16175  0087AC  D006               	goto	l17903
 16176  0087AE                     l17901:
 16177                           
 16178                           ; BSR set to: 0
 16179  0087AE  90D8               	bcf	status,0,c
 16180  0087B0  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 16181  0087B2  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16182  0087B4  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16183  0087B6  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16184  0087B8  2BA3               	incf	___lldiv@counter& (0+255),f,b
 16185  0087BA                     l17903:
 16186                           
 16187                           ; BSR set to: 0
 16188  0087BA  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16189  0087BC  D7F8               	goto	l17901
 16190  0087BE                     u18490:
 16191                           
 16192                           ; BSR set to: 0
 16193  0087BE  90D8               	bcf	status,0,c
 16194  0087C0  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 16195  0087C2  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16196  0087C4  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16197  0087C6  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16198                           
 16199                           ; BSR set to: 0
 16200  0087C8  519B               	movf	___lldiv@divisor& (0+255),w,b
 16201  0087CA  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 16202  0087CC  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16203  0087CE  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16204  0087D0  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16205  0087D2  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16206  0087D4  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16207  0087D6  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16208  0087D8  A0D8               	btfss	status,0,c
 16209  0087DA  D009               	goto	l17913
 16210                           
 16211                           ; BSR set to: 0
 16212  0087DC  519B               	movf	___lldiv@divisor& (0+255),w,b
 16213  0087DE  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 16214  0087E0  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16215  0087E2  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16216  0087E4  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16217  0087E6  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16218  0087E8  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16219  0087EA  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16220                           
 16221                           ; BSR set to: 0
 16222  0087EC  819F               	bsf	___lldiv@quotient& (0+255),0,b
 16223  0087EE                     l17913:
 16224                           
 16225                           ; BSR set to: 0
 16226  0087EE  90D8               	bcf	status,0,c
 16227  0087F0  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16228  0087F2  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16229  0087F4  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16230  0087F6  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 16231                           
 16232                           ; BSR set to: 0
 16233  0087F8  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 16234  0087FA  D7E1               	goto	u18490
 16235  0087FC                     l3228:
 16236                           
 16237                           ; BSR set to: 0
 16238  0087FC  0060  F27C  F097   	movff	___lldiv@quotient,?___lldiv
 16239  008802  0060  F280  F098   	movff	___lldiv@quotient+1,?___lldiv+1
 16240  008808  0060  F284  F099   	movff	___lldiv@quotient+2,?___lldiv+2
 16241  00880E  0060  F288  F09A   	movff	___lldiv@quotient+3,?___lldiv+3
 16242                           
 16243                           ; BSR set to: 0
 16244  008814  0012               	return		;funcret
 16245  008816                     __end_of___lldiv:
 16246                           	opt callstack 0
 16247                           
 16248 ;; *************** function _aCaptureOffGet *****************
 16249 ;; Defined at:
 16250 ;;		line 144 in file "aCapture.c"
 16251 ;; Parameters:    Size  Location     Type
 16252 ;;  sel             1    wreg     enum E16104
 16253 ;; Auto vars:     Size  Location     Type
 16254 ;;  sel             1   98[BANK1 ] enum E16104
 16255 ;; Return value:  Size  Location     Type
 16256 ;;                  2   96[BANK1 ] short 
 16257 ;; Registers used:
 16258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16259 ;; Tracked objects:
 16260 ;;		On entry : 3F/0
 16261 ;;		On exit  : 3C/0
 16262 ;;		Unchanged: 0/0
 16263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16264 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16265 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16267 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16268 ;;Total ram usage:        3 bytes
 16269 ;; Hardware stack levels used:    1
 16270 ;; Hardware stack levels required when called:   26
 16271 ;; This function calls:
 16272 ;;		_printf
 16273 ;; This function is called by:
 16274 ;;		_flowChk
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           	psect	text33
 16279  0095F4                     __ptext33:
 16280                           	opt callstack 0
 16281  0095F4                     _aCaptureOffGet:
 16282                           	opt callstack 2
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;incstack = 0
 16286                           ;aCaptureOffGet@sel stored from wreg
 16287  0095F4  0101               	movlb	1	; () banked
 16288  0095F6  6F62               	movwf	aCaptureOffGet@sel& (0+255),b
 16289                           
 16290                           ;aCapture.c: 145:     if (sel == MainPSensor) {
 16291  0095F8  0101               	movlb	1	; () banked
 16292  0095FA  5162               	movf	aCaptureOffGet@sel& (0+255),w,b
 16293  0095FC  A4D8               	btfss	status,2,c
 16294  0095FE  D007               	goto	l18205
 16295                           
 16296                           ; BSR set to: 1
 16297                           ;aCapture.c: 146:         return mainPSensCal;
 16298  009600  0060  F7C4  F160   	movff	_mainPSensCal,?_aCaptureOffGet
 16299  009606  0060  F7C8  F161   	movff	_mainPSensCal+1,?_aCaptureOffGet+1
 16300  00960C  0012               	return	
 16301  00960E                     l18205:
 16302                           
 16303                           ; BSR set to: 1
 16304  00960E  0562               	decf	aCaptureOffGet@sel& (0+255),w,b
 16305  009610  A4D8               	btfss	status,2,c
 16306  009612  D007               	goto	l1971
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;aCapture.c: 148:         return auxPSensCal;
 16310  009614  0060  FBC8  F160   	movff	_auxPSensCal,?_aCaptureOffGet
 16311  00961A  0060  FBCC  F161   	movff	_auxPSensCal+1,?_aCaptureOffGet+1
 16312  009620  0012               	return	
 16313  009622                     l1971:
 16314                           
 16315                           ; BSR set to: 1
 16316                           ;aCapture.c: 150:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 16317  009622  94BA               	bcf	186,2,c	;volatile
 16318  009624  96BC               	bcf	188,3,c	;volatile
 16319  009626  96BA               	bcf	186,3,c	;volatile
 16320                           
 16321                           ; BSR set to: 1
 16322  009628  0EBE               	movlw	low STR_28
 16323  00962A  6F46               	movwf	printf@fmt& (0+255),b
 16324  00962C  0EFF               	movlw	high STR_28
 16325  00962E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 16326  009630  0E00               	movlw	0
 16327  009632  6F49               	movwf	(?_printf+3)& (0+255),b
 16328  009634  0E66               	movlw	102
 16329  009636  6F48               	movwf	(?_printf+2)& (0+255),b
 16330  009638  EC43  F050         	call	_printf	;wreg free
 16331  00963C  0012               	return		;funcret
 16332  00963E                     __end_of_aCaptureOffGet:
 16333                           	opt callstack 0
 16334                           
 16335 ;; *************** function ___xxtofl *****************
 16336 ;; Defined at:
 16337 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;  sign            1    wreg     unsigned char 
 16340 ;;  val             4   43[BANK0 ] long 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  sign            1   51[BANK0 ] unsigned char 
 16343 ;;  arg             4   53[BANK0 ] unsigned long 
 16344 ;;  exp             1   52[BANK0 ] unsigned char 
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  4   43[BANK0 ] unsigned char 
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0
 16349 ;; Tracked objects:
 16350 ;;		On entry : 3F/0
 16351 ;;		On exit  : 3F/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16357 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16358 ;;Total ram usage:       14 bytes
 16359 ;; Hardware stack levels used:    1
 16360 ;; Hardware stack levels required when called:   17
 16361 ;; This function calls:
 16362 ;;		Nothing
 16363 ;; This function is called by:
 16364 ;;		_main
 16365 ;;		_flowChk
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           	psect	text34
 16370  0072E6                     __ptext34:
 16371                           	opt callstack 0
 16372  0072E6                     ___xxtofl:
 16373                           	opt callstack 13
 16374                           
 16375                           ;incstack = 0
 16376                           ;___xxtofl@sign stored from wreg
 16377  0072E6  6F93               	movwf	___xxtofl@sign& (0+255),b
 16378  0072E8  0100               	movlb	0	; () banked
 16379  0072EA  5193               	movf	___xxtofl@sign& (0+255),w,b
 16380  0072EC  A4D8               	btfss	status,2,c
 16381                           
 16382                           ; BSR set to: 0
 16383  0072EE  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16384  0072F0  D022               	goto	l3856
 16385                           
 16386                           ; BSR set to: 0
 16387  0072F2  0060  F22C  F08F   	movff	___xxtofl@val,??___xxtofl
 16388  0072F8  0060  F230  F090   	movff	___xxtofl@val+1,??___xxtofl+1
 16389  0072FE  0060  F234  F091   	movff	___xxtofl@val+2,??___xxtofl+2
 16390  007304  0060  F238  F092   	movff	___xxtofl@val+3,??___xxtofl+3
 16391  00730A  1F8F               	comf	??___xxtofl& (0+255),f,b
 16392  00730C  1F90               	comf	(??___xxtofl+1)& (0+255),f,b
 16393  00730E  1F91               	comf	(??___xxtofl+2)& (0+255),f,b
 16394  007310  1F92               	comf	(??___xxtofl+3)& (0+255),f,b
 16395  007312  2B8F               	incf	??___xxtofl& (0+255),f,b
 16396  007314  0E00               	movlw	0
 16397  007316  2390               	addwfc	(??___xxtofl+1)& (0+255),f,b
 16398  007318  2391               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16399  00731A  2392               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16400  00731C  0060  F23C  F095   	movff	??___xxtofl,___xxtofl@arg
 16401  007322  0060  F240  F096   	movff	??___xxtofl+1,___xxtofl@arg+1
 16402  007328  0060  F244  F097   	movff	??___xxtofl+2,___xxtofl@arg+2
 16403  00732E  0060  F248  F098   	movff	??___xxtofl+3,___xxtofl@arg+3
 16404  007334  D00C               	goto	l18303
 16405  007336                     l3856:
 16406                           
 16407                           ; BSR set to: 0
 16408  007336  0060  F22C  F095   	movff	___xxtofl@val,___xxtofl@arg
 16409  00733C  0060  F230  F096   	movff	___xxtofl@val+1,___xxtofl@arg+1
 16410  007342  0060  F234  F097   	movff	___xxtofl@val+2,___xxtofl@arg+2
 16411  007348  0060  F238  F098   	movff	___xxtofl@val+3,___xxtofl@arg+3
 16412  00734E                     l18303:
 16413                           
 16414                           ; BSR set to: 0
 16415  00734E  518B               	movf	___xxtofl@val& (0+255),w,b
 16416  007350  118C               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16417  007352  118D               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16418  007354  118E               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16419  007356  A4D8               	btfss	status,2,c
 16420  007358  D009               	goto	l18309
 16421                           
 16422                           ; BSR set to: 0
 16423  00735A  0E00               	movlw	0
 16424  00735C  6F8B               	movwf	?___xxtofl& (0+255),b
 16425  00735E  0E00               	movlw	0
 16426  007360  6F8C               	movwf	(?___xxtofl+1)& (0+255),b
 16427  007362  0E00               	movlw	0
 16428  007364  6F8D               	movwf	(?___xxtofl+2)& (0+255),b
 16429  007366  0E00               	movlw	0
 16430  007368  6F8E               	movwf	(?___xxtofl+3)& (0+255),b
 16431  00736A  0012               	return	
 16432  00736C                     l18309:
 16433                           
 16434                           ; BSR set to: 0
 16435  00736C  0E96               	movlw	150
 16436  00736E  6F94               	movwf	___xxtofl@exp& (0+255),b
 16437  007370  D006               	goto	l18313
 16438  007372                     l18311:
 16439                           
 16440                           ; BSR set to: 0
 16441  007372  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16442  007374  90D8               	bcf	status,0,c
 16443  007376  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16444  007378  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16445  00737A  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16446  00737C  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16447  00737E                     l18313:
 16448                           
 16449                           ; BSR set to: 0
 16450  00737E  0E00               	movlw	0
 16451  007380  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16452  007382  6F8F               	movwf	??___xxtofl& (0+255),b
 16453  007384  0E00               	movlw	0
 16454  007386  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16455  007388  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16456  00738A  0E00               	movlw	0
 16457  00738C  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16458  00738E  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16459  007390  0EFE               	movlw	254
 16460  007392  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16461  007394  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16462  007396  518F               	movf	??___xxtofl& (0+255),w,b
 16463  007398  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16464  00739A  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16465  00739C  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16466  00739E  B4D8               	btfsc	status,2,c
 16467  0073A0  D00D               	goto	l3863
 16468  0073A2  D7E7               	goto	l18311
 16469  0073A4                     l18315:
 16470                           
 16471                           ; BSR set to: 0
 16472  0073A4  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16473                           
 16474                           ; BSR set to: 0
 16475  0073A6  0E01               	movlw	1
 16476  0073A8  2795               	addwf	___xxtofl@arg& (0+255),f,b
 16477  0073AA  0E00               	movlw	0
 16478  0073AC  2396               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16479  0073AE  2397               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16480  0073B0  2398               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16481                           
 16482                           ; BSR set to: 0
 16483  0073B2  90D8               	bcf	status,0,c
 16484  0073B4  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16485  0073B6  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16486  0073B8  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16487  0073BA  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16488  0073BC                     l3863:
 16489                           
 16490                           ; BSR set to: 0
 16491  0073BC  0E00               	movlw	0
 16492  0073BE  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16493  0073C0  6F8F               	movwf	??___xxtofl& (0+255),b
 16494  0073C2  0E00               	movlw	0
 16495  0073C4  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16496  0073C6  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16497  0073C8  0E00               	movlw	0
 16498  0073CA  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16499  0073CC  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16500  0073CE  0EFF               	movlw	255
 16501  0073D0  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16502  0073D2  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16503  0073D4  518F               	movf	??___xxtofl& (0+255),w,b
 16504  0073D6  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16505  0073D8  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16506  0073DA  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16507  0073DC  B4D8               	btfsc	status,2,c
 16508  0073DE  D007               	goto	l18323
 16509  0073E0  D7E1               	goto	l18315
 16510  0073E2                     l18321:
 16511                           
 16512                           ; BSR set to: 0
 16513  0073E2  0794               	decf	___xxtofl@exp& (0+255),f,b
 16514  0073E4  90D8               	bcf	status,0,c
 16515  0073E6  3795               	rlcf	___xxtofl@arg& (0+255),f,b
 16516  0073E8  3796               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16517  0073EA  3797               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16518  0073EC  3798               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16519  0073EE                     l18323:
 16520                           
 16521                           ; BSR set to: 0
 16522  0073EE  BF97               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16523  0073F0  D003               	goto	u18990
 16524                           
 16525                           ; BSR set to: 0
 16526  0073F2  0E02               	movlw	2
 16527  0073F4  6194               	cpfslt	___xxtofl@exp& (0+255),b
 16528  0073F6  D7F5               	goto	l18321
 16529  0073F8                     u18990:
 16530                           
 16531                           ; BSR set to: 0
 16532  0073F8  A194               	btfss	___xxtofl@exp& (0+255),0,b
 16533                           
 16534                           ; BSR set to: 0
 16535  0073FA  9F97               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16536                           
 16537                           ; BSR set to: 0
 16538  0073FC  90D8               	bcf	status,0,c
 16539  0073FE  3394               	rrcf	___xxtofl@exp& (0+255),f,b
 16540                           
 16541                           ; BSR set to: 0
 16542  007400  0060  F250  F08F   	movff	___xxtofl@exp,??___xxtofl
 16543  007406  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16544  007408  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16545  00740A  6B92               	clrf	(??___xxtofl+3)& (0+255),b
 16546  00740C  0060  F23C  F092   	movff	??___xxtofl,??___xxtofl+3
 16547  007412  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16548  007414  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16549  007416  6B8F               	clrf	??___xxtofl& (0+255),b
 16550  007418  518F               	movf	??___xxtofl& (0+255),w,b
 16551  00741A  1395               	iorwf	___xxtofl@arg& (0+255),f,b
 16552  00741C  5190               	movf	(??___xxtofl+1)& (0+255),w,b
 16553  00741E  1396               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16554  007420  5191               	movf	(??___xxtofl+2)& (0+255),w,b
 16555  007422  1397               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16556  007424  5192               	movf	(??___xxtofl+3)& (0+255),w,b
 16557  007426  1398               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16558                           
 16559                           ; BSR set to: 0
 16560  007428  5193               	movf	___xxtofl@sign& (0+255),w,b
 16561  00742A  A4D8               	btfss	status,2,c
 16562                           
 16563                           ; BSR set to: 0
 16564  00742C  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16565  00742E  D001               	goto	l18339
 16566                           
 16567                           ; BSR set to: 0
 16568  007430  8F98               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16569  007432                     l18339:
 16570                           
 16571                           ; BSR set to: 0
 16572  007432  0060  F254  F08B   	movff	___xxtofl@arg,?___xxtofl
 16573  007438  0060  F258  F08C   	movff	___xxtofl@arg+1,?___xxtofl+1
 16574  00743E  0060  F25C  F08D   	movff	___xxtofl@arg+2,?___xxtofl+2
 16575  007444  0060  F260  F08E   	movff	___xxtofl@arg+3,?___xxtofl+3
 16576                           
 16577                           ; BSR set to: 0
 16578  00744A  0012               	return		;funcret
 16579  00744C                     __end_of___xxtofl:
 16580                           	opt callstack 0
 16581                           
 16582 ;; *************** function ___lmul *****************
 16583 ;; Defined at:
 16584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  multiplier      4   43[BANK0 ] unsigned long 
 16587 ;;  multiplicand    4   47[BANK0 ] unsigned long 
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;  product         4   51[BANK0 ] unsigned long 
 16590 ;; Return value:  Size  Location     Type
 16591 ;;                  4   43[BANK0 ] unsigned long 
 16592 ;; Registers used:
 16593 ;;		wreg, status,2, status,0
 16594 ;; Tracked objects:
 16595 ;;		On entry : 3F/0
 16596 ;;		On exit  : 3F/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16600 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16602 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16603 ;;Total ram usage:       12 bytes
 16604 ;; Hardware stack levels used:    1
 16605 ;; Hardware stack levels required when called:   17
 16606 ;; This function calls:
 16607 ;;		Nothing
 16608 ;; This function is called by:
 16609 ;;		_inspOSMeasure
 16610 ;;		_pressureSensorChk
 16611 ;;		_flowChk
 16612 ;; This function uses a non-reentrant model
 16613 ;;
 16614                           
 16615                           	psect	text35
 16616  00903C                     __ptext35:
 16617                           	opt callstack 0
 16618  00903C                     ___lmul:
 16619                           	opt callstack 12
 16620                           
 16621                           ; BSR set to: 0
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;incstack = 0
 16625  00903C  0E00               	movlw	0
 16626  00903E  6F93               	movwf	___lmul@product& (0+255),b
 16627  009040  0E00               	movlw	0
 16628  009042  6F94               	movwf	(___lmul@product+1)& (0+255),b
 16629  009044  0E00               	movlw	0
 16630  009046  6F95               	movwf	(___lmul@product+2)& (0+255),b
 16631  009048  0E00               	movlw	0
 16632  00904A  6F96               	movwf	(___lmul@product+3)& (0+255),b
 16633  00904C                     l18245:
 16634                           
 16635                           ; BSR set to: 0
 16636  00904C  A18B               	btfss	___lmul@multiplier& (0+255),0,b
 16637  00904E  D008               	goto	l18249
 16638                           
 16639                           ; BSR set to: 0
 16640  009050  518F               	movf	___lmul@multiplicand& (0+255),w,b
 16641  009052  2793               	addwf	___lmul@product& (0+255),f,b
 16642  009054  5190               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16643  009056  2394               	addwfc	(___lmul@product+1)& (0+255),f,b
 16644  009058  5191               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16645  00905A  2395               	addwfc	(___lmul@product+2)& (0+255),f,b
 16646  00905C  5192               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16647  00905E  2396               	addwfc	(___lmul@product+3)& (0+255),f,b
 16648  009060                     l18249:
 16649                           
 16650                           ; BSR set to: 0
 16651  009060  90D8               	bcf	status,0,c
 16652  009062  378F               	rlcf	___lmul@multiplicand& (0+255),f,b
 16653  009064  3790               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16654  009066  3791               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16655  009068  3792               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16656                           
 16657                           ; BSR set to: 0
 16658  00906A  90D8               	bcf	status,0,c
 16659  00906C  338E               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16660  00906E  338D               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16661  009070  338C               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16662  009072  338B               	rrcf	___lmul@multiplier& (0+255),f,b
 16663  009074  518B               	movf	___lmul@multiplier& (0+255),w,b
 16664  009076  118C               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16665  009078  118D               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16666  00907A  118E               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16667  00907C  A4D8               	btfss	status,2,c
 16668  00907E  D7E6               	goto	l18245
 16669                           
 16670                           ; BSR set to: 0
 16671  009080  0060  F24C  F08B   	movff	___lmul@product,?___lmul
 16672  009086  0060  F250  F08C   	movff	___lmul@product+1,?___lmul+1
 16673  00908C  0060  F254  F08D   	movff	___lmul@product+2,?___lmul+2
 16674  009092  0060  F258  F08E   	movff	___lmul@product+3,?___lmul+3
 16675                           
 16676                           ; BSR set to: 0
 16677  009098  0012               	return		;funcret
 16678  00909A                     __end_of___lmul:
 16679                           	opt callstack 0
 16680                           
 16681 ;; *************** function ___flge *****************
 16682 ;; Defined at:
 16683 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;  ff1             4   57[BANK0 ] unsigned long 
 16686 ;;  ff2             4   61[BANK0 ] unsigned long 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;		None
 16689 ;; Return value:  Size  Location     Type
 16690 ;;		None               void
 16691 ;; Registers used:
 16692 ;;		wreg, status,2, status,0
 16693 ;; Tracked objects:
 16694 ;;		On entry : 3F/0
 16695 ;;		On exit  : 3F/0
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;Total ram usage:       12 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:   17
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_flowChk
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           	psect	text36
 16713  007E6C                     __ptext36:
 16714                           	opt callstack 0
 16715  007E6C                     ___flge:
 16716                           	opt callstack 11
 16717                           
 16718                           ; BSR set to: 0
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;incstack = 0
 16722  007E6C  0E00               	movlw	0
 16723  007E6E  1599               	andwf	___flge@ff1& (0+255),w,b
 16724  007E70  6FA1               	movwf	??___flge& (0+255),b
 16725  007E72  0E00               	movlw	0
 16726  007E74  159A               	andwf	(___flge@ff1+1)& (0+255),w,b
 16727  007E76  6FA2               	movwf	(??___flge+1)& (0+255),b
 16728  007E78  0E80               	movlw	128
 16729  007E7A  159B               	andwf	(___flge@ff1+2)& (0+255),w,b
 16730  007E7C  6FA3               	movwf	(??___flge+2)& (0+255),b
 16731  007E7E  0E7F               	movlw	127
 16732  007E80  159C               	andwf	(___flge@ff1+3)& (0+255),w,b
 16733  007E82  6FA4               	movwf	(??___flge+3)& (0+255),b
 16734  007E84  51A1               	movf	??___flge& (0+255),w,b
 16735  007E86  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16736  007E88  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16737  007E8A  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16738  007E8C  A4D8               	btfss	status,2,c
 16739  007E8E  D008               	goto	l18257
 16740                           
 16741                           ; BSR set to: 0
 16742  007E90  0E00               	movlw	0
 16743  007E92  6F99               	movwf	___flge@ff1& (0+255),b
 16744  007E94  0E00               	movlw	0
 16745  007E96  6F9A               	movwf	(___flge@ff1+1)& (0+255),b
 16746  007E98  0E00               	movlw	0
 16747  007E9A  6F9B               	movwf	(___flge@ff1+2)& (0+255),b
 16748  007E9C  0E00               	movlw	0
 16749  007E9E  6F9C               	movwf	(___flge@ff1+3)& (0+255),b
 16750  007EA0                     l18257:
 16751                           
 16752                           ; BSR set to: 0
 16753  007EA0  0E00               	movlw	0
 16754  007EA2  159D               	andwf	___flge@ff2& (0+255),w,b
 16755  007EA4  6FA1               	movwf	??___flge& (0+255),b
 16756  007EA6  0E00               	movlw	0
 16757  007EA8  159E               	andwf	(___flge@ff2+1)& (0+255),w,b
 16758  007EAA  6FA2               	movwf	(??___flge+1)& (0+255),b
 16759  007EAC  0E80               	movlw	128
 16760  007EAE  159F               	andwf	(___flge@ff2+2)& (0+255),w,b
 16761  007EB0  6FA3               	movwf	(??___flge+2)& (0+255),b
 16762  007EB2  0E7F               	movlw	127
 16763  007EB4  15A0               	andwf	(___flge@ff2+3)& (0+255),w,b
 16764  007EB6  6FA4               	movwf	(??___flge+3)& (0+255),b
 16765  007EB8  51A1               	movf	??___flge& (0+255),w,b
 16766  007EBA  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16767  007EBC  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16768  007EBE  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16769  007EC0  A4D8               	btfss	status,2,c
 16770  007EC2  D008               	goto	l18261
 16771                           
 16772                           ; BSR set to: 0
 16773  007EC4  0E00               	movlw	0
 16774  007EC6  6F9D               	movwf	___flge@ff2& (0+255),b
 16775  007EC8  0E00               	movlw	0
 16776  007ECA  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 16777  007ECC  0E00               	movlw	0
 16778  007ECE  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 16779  007ED0  0E00               	movlw	0
 16780  007ED2  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 16781  007ED4                     l18261:
 16782                           
 16783                           ; BSR set to: 0
 16784  007ED4  AF9C               	btfss	(___flge@ff1+3)& (0+255),7,b
 16785  007ED6  D009               	goto	l18265
 16786                           
 16787                           ; BSR set to: 0
 16788  007ED8  6D99               	negf	___flge@ff1& (0+255),b
 16789  007EDA  1F9A               	comf	(___flge@ff1+1)& (0+255),f,b
 16790  007EDC  B0D8               	btfsc	status,0,c
 16791  007EDE  2B9A               	incf	(___flge@ff1+1)& (0+255),f,b
 16792  007EE0  1F9B               	comf	(___flge@ff1+2)& (0+255),f,b
 16793  007EE2  B0D8               	btfsc	status,0,c
 16794  007EE4  2B9B               	incf	(___flge@ff1+2)& (0+255),f,b
 16795  007EE6  0E80               	movlw	128
 16796  007EE8  579C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 16797  007EEA                     l18265:
 16798                           
 16799                           ; BSR set to: 0
 16800  007EEA  AFA0               	btfss	(___flge@ff2+3)& (0+255),7,b
 16801  007EEC  D009               	goto	l3466
 16802                           
 16803                           ; BSR set to: 0
 16804  007EEE  6D9D               	negf	___flge@ff2& (0+255),b
 16805  007EF0  1F9E               	comf	(___flge@ff2+1)& (0+255),f,b
 16806  007EF2  B0D8               	btfsc	status,0,c
 16807  007EF4  2B9E               	incf	(___flge@ff2+1)& (0+255),f,b
 16808  007EF6  1F9F               	comf	(___flge@ff2+2)& (0+255),f,b
 16809  007EF8  B0D8               	btfsc	status,0,c
 16810  007EFA  2B9F               	incf	(___flge@ff2+2)& (0+255),f,b
 16811  007EFC  0E80               	movlw	128
 16812  007EFE  57A0               	subfwb	(___flge@ff2+3)& (0+255),f,b
 16813  007F00                     l3466:
 16814                           
 16815                           ; BSR set to: 0
 16816  007F00  0E00               	movlw	0
 16817  007F02  1B99               	xorwf	___flge@ff1& (0+255),f,b
 16818  007F04  0E00               	movlw	0
 16819  007F06  1B9A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 16820  007F08  0E00               	movlw	0
 16821  007F0A  1B9B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 16822  007F0C  0E80               	movlw	128
 16823  007F0E  1B9C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 16824  007F10  0E00               	movlw	0
 16825  007F12  1B9D               	xorwf	___flge@ff2& (0+255),f,b
 16826  007F14  0E00               	movlw	0
 16827  007F16  1B9E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 16828  007F18  0E00               	movlw	0
 16829  007F1A  1B9F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 16830  007F1C  0E80               	movlw	128
 16831  007F1E  1BA0               	xorwf	(___flge@ff2+3)& (0+255),f,b
 16832  007F20  519D               	movf	___flge@ff2& (0+255),w,b
 16833  007F22  5D99               	subwf	___flge@ff1& (0+255),w,b
 16834  007F24  519E               	movf	(___flge@ff2+1)& (0+255),w,b
 16835  007F26  599A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 16836  007F28  519F               	movf	(___flge@ff2+2)& (0+255),w,b
 16837  007F2A  599B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 16838  007F2C  51A0               	movf	(___flge@ff2+3)& (0+255),w,b
 16839  007F2E  599C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 16840  007F30  B0D8               	btfsc	status,0,c
 16841  007F32  D002               	goto	l18271
 16842                           
 16843                           ; BSR set to: 0
 16844  007F34  90D8               	bcf	status,0,c
 16845  007F36  0012               	return	
 16846  007F38                     l18271:
 16847                           
 16848                           ; BSR set to: 0
 16849  007F38  80D8               	bsf	status,0,c
 16850                           
 16851                           ; BSR set to: 0
 16852  007F3A  0012               	return		;funcret
 16853  007F3C                     __end_of___flge:
 16854                           	opt callstack 0
 16855                           
 16856 ;; *************** function _SYSTEM_Initialize *****************
 16857 ;; Defined at:
 16858 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;		None
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  1    wreg      void 
 16865 ;; Registers used:
 16866 ;;		wreg, status,2, status,0, cstack
 16867 ;; Tracked objects:
 16868 ;;		On entry : 3F/3
 16869 ;;		On exit  : 3F/3D
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16876 ;;Total ram usage:        0 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:   19
 16879 ;; This function calls:
 16880 ;;		_ADCC_Initialize
 16881 ;;		_FVR_Initialize
 16882 ;;		_I2C2_Initialize
 16883 ;;		_INTERRUPT_Initialize
 16884 ;;		_OSCILLATOR_Initialize
 16885 ;;		_PIN_MANAGER_Initialize
 16886 ;;		_PMD_Initialize
 16887 ;;		_TMR0_Initialize
 16888 ;;		_TMR1_Initialize
 16889 ;;		_TMR2_Initialize
 16890 ;;		_TMR4_Initialize
 16891 ;;		_TMR6_Initialize
 16892 ;;		_UART1_Initialize
 16893 ;; This function is called by:
 16894 ;;		_main
 16895 ;; This function uses a non-reentrant model
 16896 ;;
 16897                           
 16898                           	psect	text37
 16899  009ABA                     __ptext37:
 16900                           	opt callstack 0
 16901  009ABA                     _SYSTEM_Initialize:
 16902                           	opt callstack 11
 16903                           
 16904                           ; BSR set to: 3
 16905                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;incstack = 0
 16909  009ABA  EC41  F054         	call	_INTERRUPT_Initialize	;wreg free
 16910                           
 16911                           ; BSR set to: 3
 16912                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16913  009ABE  EC06  F051         	call	_PMD_Initialize	;wreg free
 16914                           
 16915                           ; BSR set to: 57
 16916                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16917  009AC2  EC69  F040         	call	_PIN_MANAGER_Initialize	;wreg free
 16918                           
 16919                           ; BSR set to: 58
 16920                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16921  009AC6  EC4A  F052         	call	_OSCILLATOR_Initialize	;wreg free
 16922                           
 16923                           ; BSR set to: 57
 16924                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 16925  009ACA  EC00  F054         	call	_FVR_Initialize	;wreg free
 16926                           
 16927                           ; BSR set to: 62
 16928                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 16929  009ACE  EC8C  F04F         	call	_TMR6_Initialize	;wreg free
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 16933  009AD2  EC86  F046         	call	_ADCC_Initialize	;wreg free
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
 16937  009AD6  ECA3  F04F         	call	_TMR4_Initialize	;wreg free
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 16941  009ADA  ECBA  F04F         	call	_TMR2_Initialize	;wreg free
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;mcc_generated_files/mcc.c: 61:     TMR1_Initialize();
 16945  009ADE  EC10  F04C         	call	_TMR1_Initialize	;wreg free
 16946                           
 16947                           ; BSR set to: 3
 16948                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 16949  009AE2  EC78  F052         	call	_TMR0_Initialize	;wreg free
 16950                           
 16951                           ; BSR set to: 57
 16952                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 16953  009AE6  EC0B  F044         	call	_UART1_Initialize	;wreg free
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;mcc_generated_files/mcc.c: 64:     I2C2_Initialize();
 16957  009AEA  EC18  F051         	call	_I2C2_Initialize	;wreg free
 16958                           
 16959                           ; BSR set to: 61
 16960  009AEE  0012               	return		;funcret
 16961  009AF0                     __end_of_SYSTEM_Initialize:
 16962                           	opt callstack 0
 16963                           
 16964 ;; *************** function _UART1_Initialize *****************
 16965 ;; Defined at:
 16966 ;;		line 81 in file "mcc_generated_files/uart1.c"
 16967 ;; Parameters:    Size  Location     Type
 16968 ;;		None
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;		None
 16971 ;; Return value:  Size  Location     Type
 16972 ;;                  1    wreg      void 
 16973 ;; Registers used:
 16974 ;;		wreg, status,2, status,0, cstack
 16975 ;; Tracked objects:
 16976 ;;		On entry : 3F/39
 16977 ;;		On exit  : 3F/0
 16978 ;;		Unchanged: 0/0
 16979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16984 ;;Total ram usage:        0 bytes
 16985 ;; Hardware stack levels used:    1
 16986 ;; Hardware stack levels required when called:   18
 16987 ;; This function calls:
 16988 ;;		_UART1_SetErrorHandler
 16989 ;;		_UART1_SetFramingErrorHandler
 16990 ;;		_UART1_SetOverrunErrorHandler
 16991 ;;		_UART1_SetTxInterruptHandler
 16992 ;; This function is called by:
 16993 ;;		_SYSTEM_Initialize
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text38
 16998  008816                     __ptext38:
 16999                           	opt callstack 0
 17000  008816                     _UART1_Initialize:
 17001                           	opt callstack 11
 17002                           
 17003                           ; BSR set to: 57
 17004                           ;mcc_generated_files/uart1.c: 84:     PIE3bits.U1TXIE = 0;
 17005                           
 17006                           ; BSR set to: 61
 17007                           ;incstack = 0
 17008  008816  9993               	bcf	147,4,b	;volatile
 17009                           
 17010                           ; BSR set to: 57
 17011                           ;mcc_generated_files/uart1.c: 85:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 17012  008818  0E64               	movlw	low _UART1_Transmit_ISR
 17013  00881A  0100               	movlb	0	; () banked
 17014  00881C  6F8B               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 17015  00881E  0E9D               	movlw	high _UART1_Transmit_ISR
 17016  008820  6F8C               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 17017  008822  EC38  F053         	call	_UART1_SetTxInterruptHandler	;wreg free
 17018                           
 17019                           ; BSR set to: 0
 17020                           ;mcc_generated_files/uart1.c: 90:     U1P1L = 0x00;
 17021  008826  0E00               	movlw	0
 17022  008828  013D               	movlb	61	; () banked
 17023  00882A  6FEC               	movwf	236,b	;volatile
 17024                           
 17025                           ; BSR set to: 61
 17026                           ;mcc_generated_files/uart1.c: 93:     U1P1H = 0x00;
 17027  00882C  0E00               	movlw	0
 17028  00882E  6FED               	movwf	237,b	;volatile
 17029                           
 17030                           ; BSR set to: 61
 17031                           ;mcc_generated_files/uart1.c: 96:     U1P2L = 0x00;
 17032  008830  0E00               	movlw	0
 17033  008832  6FEE               	movwf	238,b	;volatile
 17034                           
 17035                           ; BSR set to: 61
 17036                           ;mcc_generated_files/uart1.c: 99:     U1P2H = 0x00;
 17037  008834  0E00               	movlw	0
 17038  008836  6FEF               	movwf	239,b	;volatile
 17039                           
 17040                           ; BSR set to: 61
 17041                           ;mcc_generated_files/uart1.c: 102:     U1P3L = 0x00;
 17042  008838  0E00               	movlw	0
 17043  00883A  6FF0               	movwf	240,b	;volatile
 17044                           
 17045                           ; BSR set to: 61
 17046                           ;mcc_generated_files/uart1.c: 105:     U1P3H = 0x00;
 17047  00883C  0E00               	movlw	0
 17048  00883E  6FF1               	movwf	241,b	;volatile
 17049                           
 17050                           ; BSR set to: 61
 17051                           ;mcc_generated_files/uart1.c: 108:     U1CON0 = 0xB0;
 17052  008840  0EB0               	movlw	176
 17053  008842  6FF2               	movwf	242,b	;volatile
 17054                           
 17055                           ; BSR set to: 61
 17056                           ;mcc_generated_files/uart1.c: 111:     U1CON1 = 0x80;
 17057  008844  0E80               	movlw	128
 17058  008846  6FF3               	movwf	243,b	;volatile
 17059                           
 17060                           ; BSR set to: 61
 17061                           ;mcc_generated_files/uart1.c: 114:     U1CON2 = 0x00;
 17062  008848  0E00               	movlw	0
 17063  00884A  6FF4               	movwf	244,b	;volatile
 17064                           
 17065                           ; BSR set to: 61
 17066                           ;mcc_generated_files/uart1.c: 117:     U1BRGL = 0x22;
 17067  00884C  0E22               	movlw	34
 17068  00884E  6FF5               	movwf	245,b	;volatile
 17069                           
 17070                           ; BSR set to: 61
 17071                           ;mcc_generated_files/uart1.c: 120:     U1BRGH = 0x00;
 17072  008850  0E00               	movlw	0
 17073  008852  6FF6               	movwf	246,b	;volatile
 17074                           
 17075                           ; BSR set to: 61
 17076                           ;mcc_generated_files/uart1.c: 123:     U1FIFO = 0x00;
 17077  008854  0E00               	movlw	0
 17078  008856  6FF7               	movwf	247,b	;volatile
 17079                           
 17080                           ; BSR set to: 61
 17081                           ;mcc_generated_files/uart1.c: 126:     U1UIR = 0x00;
 17082  008858  0E00               	movlw	0
 17083  00885A  6FF8               	movwf	248,b	;volatile
 17084                           
 17085                           ; BSR set to: 61
 17086                           ;mcc_generated_files/uart1.c: 129:     U1ERRIR = 0x00;
 17087  00885C  0E00               	movlw	0
 17088  00885E  6FF9               	movwf	249,b	;volatile
 17089                           
 17090                           ; BSR set to: 61
 17091                           ;mcc_generated_files/uart1.c: 132:     U1ERRIE = 0x00;
 17092  008860  0E00               	movlw	0
 17093  008862  6FFA               	movwf	250,b	;volatile
 17094                           
 17095                           ; BSR set to: 61
 17096                           ;mcc_generated_files/uart1.c: 135:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 17097  008864  0E00               	movlw	0
 17098  008866  0100               	movlb	0	; () banked
 17099  008868  6F8B               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 17100  00886A  0E00               	movlw	0
 17101  00886C  6F8C               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 17102  00886E  EC46  F053         	call	_UART1_SetFramingErrorHandler	;wreg free
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;mcc_generated_files/uart1.c: 136:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 17106  008872  0E00               	movlw	0
 17107  008874  6F8B               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 17108  008876  0E00               	movlw	0
 17109  008878  6F8C               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 17110  00887A  EC3F  F053         	call	_UART1_SetOverrunErrorHandler	;wreg free
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;mcc_generated_files/uart1.c: 137:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 17114  00887E  0E00               	movlw	0
 17115  008880  6F8B               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 17116  008882  0E00               	movlw	0
 17117  008884  6F8C               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 17118  008886  EC4D  F053         	call	_UART1_SetErrorHandler	;wreg free
 17119                           
 17120                           ;mcc_generated_files/uart1.c: 139:     uart1RxLastError.status = 0;
 17121  00888A  0E00               	movlw	0
 17122  00888C  0102               	movlb	2	; () banked
 17123  00888E  6F5A               	movwf	_uart1RxLastError& (0+255),b	;volatile
 17124                           
 17125                           ;mcc_generated_files/uart1.c: 142:     uart1TxHead = 0;
 17126  008890  0E00               	movlw	0
 17127  008892  0100               	movlb	0	; () banked
 17128  008894  6FD3               	movwf	_uart1TxHead& (0+255),b	;volatile
 17129                           
 17130                           ;mcc_generated_files/uart1.c: 143:     uart1TxTail = 0;
 17131  008896  0E00               	movlw	0
 17132  008898  6FD2               	movwf	_uart1TxTail& (0+255),b	;volatile
 17133                           
 17134                           ;mcc_generated_files/uart1.c: 144:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 17135  00889A  0E40               	movlw	64
 17136  00889C  6FD4               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 17137                           
 17138                           ; BSR set to: 0
 17139  00889E  0012               	return		;funcret
 17140  0088A0                     __end_of_UART1_Initialize:
 17141                           	opt callstack 0
 17142                           
 17143 ;; *************** function _UART1_SetTxInterruptHandler *****************
 17144 ;; Defined at:
 17145 ;;		line 260 in file "mcc_generated_files/uart1.c"
 17146 ;; Parameters:    Size  Location     Type
 17147 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17148 ;;		 -> UART1_Transmit_ISR(1), 
 17149 ;; Auto vars:     Size  Location     Type
 17150 ;;		None
 17151 ;; Return value:  Size  Location     Type
 17152 ;;                  1    wreg      void 
 17153 ;; Registers used:
 17154 ;;		wreg, status,2, status,0
 17155 ;; Tracked objects:
 17156 ;;		On entry : 3F/0
 17157 ;;		On exit  : 3F/0
 17158 ;;		Unchanged: 3F/0
 17159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17164 ;;Total ram usage:        2 bytes
 17165 ;; Hardware stack levels used:    1
 17166 ;; Hardware stack levels required when called:   17
 17167 ;; This function calls:
 17168 ;;		Nothing
 17169 ;; This function is called by:
 17170 ;;		_UART1_Initialize
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           	psect	text39
 17175  00A670                     __ptext39:
 17176                           	opt callstack 0
 17177  00A670                     _UART1_SetTxInterruptHandler:
 17178                           	opt callstack 11
 17179                           
 17180                           ; BSR set to: 0
 17181                           ;mcc_generated_files/uart1.c: 261:     UART1_TxInterruptHandler = InterruptHandler;
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;incstack = 0
 17185  00A670  0060  F22C  F2FC   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 17186  00A676  0060  F230  F2FD   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 17187                           
 17188                           ; BSR set to: 0
 17189  00A67C  0012               	return		;funcret
 17190  00A67E                     __end_of_UART1_SetTxInterruptHandler:
 17191                           	opt callstack 0
 17192                           
 17193 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 17194 ;; Defined at:
 17195 ;;		line 249 in file "mcc_generated_files/uart1.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17198 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;		None
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  1    wreg      void 
 17203 ;; Registers used:
 17204 ;;		wreg, status,2, status,0
 17205 ;; Tracked objects:
 17206 ;;		On entry : 3F/0
 17207 ;;		On exit  : 3F/0
 17208 ;;		Unchanged: 3F/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;Total ram usage:        2 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:   17
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_UART1_Initialize
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text40
 17225  00A67E                     __ptext40:
 17226                           	opt callstack 0
 17227  00A67E                     _UART1_SetOverrunErrorHandler:
 17228                           	opt callstack 11
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;mcc_generated_files/uart1.c: 250:     UART1_OverrunErrorHandler = interruptHandler;
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;incstack = 0
 17235  00A67E  0060  F22C  F3CD   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 17236  00A684  0060  F230  F3CE   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 17237                           
 17238                           ; BSR set to: 0
 17239  00A68A  0012               	return		;funcret
 17240  00A68C                     __end_of_UART1_SetOverrunErrorHandler:
 17241                           	opt callstack 0
 17242                           
 17243 ;; *************** function _UART1_SetFramingErrorHandler *****************
 17244 ;; Defined at:
 17245 ;;		line 245 in file "mcc_generated_files/uart1.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17248 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;		None
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  1    wreg      void 
 17253 ;; Registers used:
 17254 ;;		wreg, status,2, status,0
 17255 ;; Tracked objects:
 17256 ;;		On entry : 3F/0
 17257 ;;		On exit  : 3F/0
 17258 ;;		Unchanged: 3F/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17264 ;;Total ram usage:        2 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:   17
 17267 ;; This function calls:
 17268 ;;		Nothing
 17269 ;; This function is called by:
 17270 ;;		_UART1_Initialize
 17271 ;; This function uses a non-reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text41
 17275  00A68C                     __ptext41:
 17276                           	opt callstack 0
 17277  00A68C                     _UART1_SetFramingErrorHandler:
 17278                           	opt callstack 11
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;mcc_generated_files/uart1.c: 246:     UART1_FramingErrorHandler = interruptHandler;
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;incstack = 0
 17285  00A68C  0060  F22C  F2FA   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 17286  00A692  0060  F230  F2FB   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 17287                           
 17288                           ; BSR set to: 0
 17289  00A698  0012               	return		;funcret
 17290  00A69A                     __end_of_UART1_SetFramingErrorHandler:
 17291                           	opt callstack 0
 17292                           
 17293 ;; *************** function _UART1_SetErrorHandler *****************
 17294 ;; Defined at:
 17295 ;;		line 253 in file "mcc_generated_files/uart1.c"
 17296 ;; Parameters:    Size  Location     Type
 17297 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17298 ;;		 -> UART1_DefaultErrorHandler(1), 
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;		None
 17301 ;; Return value:  Size  Location     Type
 17302 ;;                  1    wreg      void 
 17303 ;; Registers used:
 17304 ;;		wreg, status,2, status,0
 17305 ;; Tracked objects:
 17306 ;;		On entry : 3F/0
 17307 ;;		On exit  : 3F/0
 17308 ;;		Unchanged: 3F/0
 17309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17314 ;;Total ram usage:        2 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:   17
 17317 ;; This function calls:
 17318 ;;		Nothing
 17319 ;; This function is called by:
 17320 ;;		_UART1_Initialize
 17321 ;; This function uses a non-reentrant model
 17322 ;;
 17323                           
 17324                           	psect	text42
 17325  00A69A                     __ptext42:
 17326                           	opt callstack 0
 17327  00A69A                     _UART1_SetErrorHandler:
 17328                           	opt callstack 11
 17329                           
 17330                           ; BSR set to: 0
 17331                           ;mcc_generated_files/uart1.c: 254:     UART1_ErrorHandler = interruptHandler;
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;incstack = 0
 17335  00A69A  0060  F22C  F3CB   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 17336  00A6A0  0060  F230  F3CC   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 17337                           
 17338                           ; BSR set to: 0
 17339  00A6A6  0012               	return		;funcret
 17340  00A6A8                     __end_of_UART1_SetErrorHandler:
 17341                           	opt callstack 0
 17342                           
 17343 ;; *************** function _TMR6_Initialize *****************
 17344 ;; Defined at:
 17345 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;		None
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, status,2, status,0, cstack
 17354 ;; Tracked objects:
 17355 ;;		On entry : 3F/3E
 17356 ;;		On exit  : 3F/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;Total ram usage:        0 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:   18
 17366 ;; This function calls:
 17367 ;;		_TMR6_SetInterruptHandler
 17368 ;; This function is called by:
 17369 ;;		_SYSTEM_Initialize
 17370 ;; This function uses a non-reentrant model
 17371 ;;
 17372                           
 17373                           	psect	text43
 17374  009F18                     __ptext43:
 17375                           	opt callstack 0
 17376  009F18                     _TMR6_Initialize:
 17377                           	opt callstack 11
 17378                           
 17379                           ; BSR set to: 62
 17380                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x06;
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;incstack = 0
 17384  009F18  0E06               	movlw	6
 17385  009F1A  6E96               	movwf	150,c	;volatile
 17386                           
 17387                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x08;
 17388  009F1C  0E08               	movlw	8
 17389  009F1E  6E95               	movwf	149,c	;volatile
 17390                           
 17391                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
 17392  009F20  0E00               	movlw	0
 17393  009F22  6E97               	movwf	151,c	;volatile
 17394                           
 17395                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x01;
 17396  009F24  0E01               	movlw	1
 17397  009F26  6E93               	movwf	147,c	;volatile
 17398                           
 17399                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
 17400  009F28  0E00               	movlw	0
 17401  009F2A  6E92               	movwf	146,c	;volatile
 17402                           
 17403                           ; BSR set to: 62
 17404                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
 17405  009F2C  0139               	movlb	57	; () banked
 17406  009F2E  91A9               	bcf	169,0,b	;volatile
 17407                           
 17408                           ; BSR set to: 57
 17409                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
 17410  009F30  8199               	bsf	153,0,b	;volatile
 17411                           
 17412                           ; BSR set to: 57
 17413                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 17414  009F32  0EB0               	movlw	low _TMR6_DefaultInterruptHandler
 17415  009F34  0100               	movlb	0	; () banked
 17416  009F36  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17417  009F38  0EA8               	movlw	high _TMR6_DefaultInterruptHandler
 17418  009F3A  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17419  009F3C  EC54  F053         	call	_TMR6_SetInterruptHandler	;wreg free
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0x50;
 17423  009F40  0E50               	movlw	80
 17424  009F42  6E94               	movwf	148,c	;volatile
 17425                           
 17426                           ; BSR set to: 0
 17427  009F44  0012               	return		;funcret
 17428  009F46                     __end_of_TMR6_Initialize:
 17429                           	opt callstack 0
 17430                           
 17431 ;; *************** function _TMR6_SetInterruptHandler *****************
 17432 ;; Defined at:
 17433 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17436 ;;		 -> lcdIrqHandler(1), TMR6_DefaultInterruptHandler(1), 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;		None
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      void 
 17441 ;; Registers used:
 17442 ;;		wreg, status,2, status,0
 17443 ;; Tracked objects:
 17444 ;;		On entry : 3F/0
 17445 ;;		On exit  : 3F/0
 17446 ;;		Unchanged: 3F/0
 17447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17452 ;;Total ram usage:        2 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; Hardware stack levels required when called:   17
 17455 ;; This function calls:
 17456 ;;		Nothing
 17457 ;; This function is called by:
 17458 ;;		_TMR6_Initialize
 17459 ;;		_LcdI2CInit
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text44
 17464  00A6A8                     __ptext44:
 17465                           	opt callstack 0
 17466  00A6A8                     _TMR6_SetInterruptHandler:
 17467                           	opt callstack 11
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;incstack = 0
 17474  00A6A8  0060  F22C  F2F4   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17475  00A6AE  0060  F230  F2F5   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17476                           
 17477                           ; BSR set to: 0
 17478  00A6B4  0012               	return		;funcret
 17479  00A6B6                     __end_of_TMR6_SetInterruptHandler:
 17480                           	opt callstack 0
 17481                           
 17482 ;; *************** function _TMR4_Initialize *****************
 17483 ;; Defined at:
 17484 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;		None
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;		None
 17489 ;; Return value:  Size  Location     Type
 17490 ;;                  1    wreg      void 
 17491 ;; Registers used:
 17492 ;;		wreg, status,2, status,0, cstack
 17493 ;; Tracked objects:
 17494 ;;		On entry : 3F/0
 17495 ;;		On exit  : 3F/0
 17496 ;;		Unchanged: 0/0
 17497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;Total ram usage:        0 bytes
 17503 ;; Hardware stack levels used:    1
 17504 ;; Hardware stack levels required when called:   18
 17505 ;; This function calls:
 17506 ;;		_TMR4_SetInterruptHandler
 17507 ;; This function is called by:
 17508 ;;		_SYSTEM_Initialize
 17509 ;; This function uses a non-reentrant model
 17510 ;;
 17511                           
 17512                           	psect	text45
 17513  009F46                     __ptext45:
 17514                           	opt callstack 0
 17515  009F46                     _TMR4_Initialize:
 17516                           	opt callstack 11
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x06;
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;incstack = 0
 17523  009F46  0E06               	movlw	6
 17524  009F48  6EA2               	movwf	162,c	;volatile
 17525                           
 17526                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
 17527  009F4A  0E08               	movlw	8
 17528  009F4C  6EA1               	movwf	161,c	;volatile
 17529                           
 17530                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
 17531  009F4E  0E00               	movlw	0
 17532  009F50  6EA3               	movwf	163,c	;volatile
 17533                           
 17534                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x21;
 17535  009F52  0E21               	movlw	33
 17536  009F54  6E9F               	movwf	159,c	;volatile
 17537                           
 17538                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
 17539  009F56  0E00               	movlw	0
 17540  009F58  6E9E               	movwf	158,c	;volatile
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
 17544  009F5A  0139               	movlb	57	; () banked
 17545  009F5C  91A7               	bcf	167,0,b	;volatile
 17546                           
 17547                           ; BSR set to: 57
 17548                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
 17549  009F5E  8197               	bsf	151,0,b	;volatile
 17550                           
 17551                           ; BSR set to: 57
 17552                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 17553  009F60  0EB2               	movlw	low _TMR4_DefaultInterruptHandler
 17554  009F62  0100               	movlb	0	; () banked
 17555  009F64  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17556  009F66  0EA8               	movlw	high _TMR4_DefaultInterruptHandler
 17557  009F68  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17558  009F6A  EC5B  F053         	call	_TMR4_SetInterruptHandler	;wreg free
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0x50;
 17562  009F6E  0E50               	movlw	80
 17563  009F70  6EA0               	movwf	160,c	;volatile
 17564                           
 17565                           ; BSR set to: 0
 17566  009F72  0012               	return		;funcret
 17567  009F74                     __end_of_TMR4_Initialize:
 17568                           	opt callstack 0
 17569                           
 17570 ;; *************** function _TMR4_SetInterruptHandler *****************
 17571 ;; Defined at:
 17572 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 17573 ;; Parameters:    Size  Location     Type
 17574 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17575 ;;		 -> SV2DelayOpen(1), TMR4_DefaultInterruptHandler(1), 
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;		None
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  1    wreg      void 
 17580 ;; Registers used:
 17581 ;;		wreg, status,2, status,0
 17582 ;; Tracked objects:
 17583 ;;		On entry : 3F/0
 17584 ;;		On exit  : 3F/0
 17585 ;;		Unchanged: 3F/0
 17586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17591 ;;Total ram usage:        2 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:   17
 17594 ;; This function calls:
 17595 ;;		Nothing
 17596 ;; This function is called by:
 17597 ;;		_TMR4_Initialize
 17598 ;;		_main
 17599 ;; This function uses a non-reentrant model
 17600 ;;
 17601                           
 17602                           	psect	text46
 17603  00A6B6                     __ptext46:
 17604                           	opt callstack 0
 17605  00A6B6                     _TMR4_SetInterruptHandler:
 17606                           	opt callstack 13
 17607                           
 17608                           ; BSR set to: 0
 17609                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;incstack = 0
 17613  00A6B6  0060  F22C  F2F6   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 17614  00A6BC  0060  F230  F2F7   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 17615                           
 17616                           ; BSR set to: 0
 17617  00A6C2  0012               	return		;funcret
 17618  00A6C4                     __end_of_TMR4_SetInterruptHandler:
 17619                           	opt callstack 0
 17620                           
 17621 ;; *************** function _TMR2_Initialize *****************
 17622 ;; Defined at:
 17623 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;		None
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;		None
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg, status,2, status,0, cstack
 17632 ;; Tracked objects:
 17633 ;;		On entry : 3F/0
 17634 ;;		On exit  : 3F/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;Total ram usage:        0 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:   18
 17644 ;; This function calls:
 17645 ;;		_TMR2_SetInterruptHandler
 17646 ;; This function is called by:
 17647 ;;		_SYSTEM_Initialize
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text47
 17652  009F74                     __ptext47:
 17653                           	opt callstack 0
 17654  009F74                     _TMR2_Initialize:
 17655                           	opt callstack 11
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;incstack = 0
 17662  009F74  0E03               	movlw	3
 17663  009F76  6EAE               	movwf	174,c	;volatile
 17664                           
 17665                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 17666  009F78  0E00               	movlw	0
 17667  009F7A  6EAD               	movwf	173,c	;volatile
 17668                           
 17669                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 17670  009F7C  0E00               	movlw	0
 17671  009F7E  6EAF               	movwf	175,c	;volatile
 17672                           
 17673                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
 17674  009F80  0EF9               	movlw	249
 17675  009F82  6EAB               	movwf	171,c	;volatile
 17676                           
 17677                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 17678  009F84  0E00               	movlw	0
 17679  009F86  6EAA               	movwf	170,c	;volatile
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 17683  009F88  0139               	movlb	57	; () banked
 17684  009F8A  95A4               	bcf	164,2,b	;volatile
 17685                           
 17686                           ; BSR set to: 57
 17687                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 17688  009F8C  8594               	bsf	148,2,b	;volatile
 17689                           
 17690                           ; BSR set to: 57
 17691                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17692  009F8E  0EB4               	movlw	low _TMR2_DefaultInterruptHandler
 17693  009F90  0100               	movlb	0	; () banked
 17694  009F92  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 17695  009F94  0EA8               	movlw	high _TMR2_DefaultInterruptHandler
 17696  009F96  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17697  009F98  EC62  F053         	call	_TMR2_SetInterruptHandler	;wreg free
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xDF;
 17701  009F9C  0EDF               	movlw	223
 17702  009F9E  6EAC               	movwf	172,c	;volatile
 17703                           
 17704                           ; BSR set to: 0
 17705  009FA0  0012               	return		;funcret
 17706  009FA2                     __end_of_TMR2_Initialize:
 17707                           	opt callstack 0
 17708                           
 17709 ;; *************** function _TMR2_SetInterruptHandler *****************
 17710 ;; Defined at:
 17711 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17714 ;;		 -> vMeasureIsr(1), TMR2_DefaultInterruptHandler(1), 
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;		None
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      void 
 17719 ;; Registers used:
 17720 ;;		wreg, status,2, status,0
 17721 ;; Tracked objects:
 17722 ;;		On entry : 3F/0
 17723 ;;		On exit  : 3F/0
 17724 ;;		Unchanged: 3F/0
 17725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17730 ;;Total ram usage:        2 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; Hardware stack levels required when called:   17
 17733 ;; This function calls:
 17734 ;;		Nothing
 17735 ;; This function is called by:
 17736 ;;		_TMR2_Initialize
 17737 ;;		_vMeasureInit
 17738 ;; This function uses a non-reentrant model
 17739 ;;
 17740                           
 17741                           	psect	text48
 17742  00A6C4                     __ptext48:
 17743                           	opt callstack 0
 17744  00A6C4                     _TMR2_SetInterruptHandler:
 17745                           	opt callstack 12
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;incstack = 0
 17752  00A6C4  0060  F22C  F2F8   	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17753  00A6CA  0060  F230  F2F9   	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17754                           
 17755                           ; BSR set to: 0
 17756  00A6D0  0012               	return		;funcret
 17757  00A6D2                     __end_of_TMR2_SetInterruptHandler:
 17758                           	opt callstack 0
 17759                           
 17760 ;; *************** function _TMR1_Initialize *****************
 17761 ;; Defined at:
 17762 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;		None
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  1    wreg      void 
 17769 ;; Registers used:
 17770 ;;		wreg, status,2, status,0
 17771 ;; Tracked objects:
 17772 ;;		On entry : 3F/0
 17773 ;;		On exit  : 3F/3
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17780 ;;Total ram usage:        2 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:   17
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		_SYSTEM_Initialize
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text49
 17791  009820                     __ptext49:
 17792                           	opt callstack 0
 17793  009820                     _TMR1_Initialize:
 17794                           	opt callstack 12
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17798                           
 17799                           ; BSR set to: 0
 17800                           ;incstack = 0
 17801  009820  0E00               	movlw	0
 17802  009822  6EB3               	movwf	179,c	;volatile
 17803                           
 17804                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
 17805  009824  0E00               	movlw	0
 17806  009826  6EB4               	movwf	180,c	;volatile
 17807                           
 17808                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x09;
 17809  009828  0E09               	movlw	9
 17810  00982A  6EB5               	movwf	181,c	;volatile
 17811                           
 17812                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
 17813  00982C  0E00               	movlw	0
 17814  00982E  6EB1               	movwf	177,c	;volatile
 17815                           
 17816                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
 17817  009830  0E00               	movlw	0
 17818  009832  6EB0               	movwf	176,c	;volatile
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
 17822  009834  0139               	movlb	57	; () banked
 17823  009836  91A4               	bcf	164,0,b	;volatile
 17824                           
 17825                           ; BSR set to: 57
 17826                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17827  009838  50B0               	movf	176,w,c	;volatile
 17828  00983A  006F FEC4  F08B    	movff	16305,??_TMR1_Initialize	;volatile
 17829  009840  0100               	movlb	0	; () banked
 17830  009842  6B8C               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17831  009844  0060  F22C  F08C   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17832  00984A  6B8B               	clrf	??_TMR1_Initialize& (0+255),b
 17833  00984C  118B               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17834  00984E  0103               	movlb	3	; () banked
 17835  009850  6FC9               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17836  009852  0100               	movlb	0	; () banked
 17837  009854  518C               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17838  009856  0103               	movlb	3	; () banked
 17839  009858  6FCA               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17840                           
 17841                           ; BSR set to: 3
 17842                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x03;
 17843  00985A  0E03               	movlw	3
 17844  00985C  6EB2               	movwf	178,c	;volatile
 17845                           
 17846                           ; BSR set to: 3
 17847  00985E  0012               	return		;funcret
 17848  009860                     __end_of_TMR1_Initialize:
 17849                           	opt callstack 0
 17850                           
 17851 ;; *************** function _TMR0_Initialize *****************
 17852 ;; Defined at:
 17853 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 17854 ;; Parameters:    Size  Location     Type
 17855 ;;		None
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;		None
 17858 ;; Return value:  Size  Location     Type
 17859 ;;                  1    wreg      void 
 17860 ;; Registers used:
 17861 ;;		wreg, status,2
 17862 ;; Tracked objects:
 17863 ;;		On entry : 3F/3
 17864 ;;		On exit  : 3F/39
 17865 ;;		Unchanged: 0/0
 17866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17871 ;;Total ram usage:        0 bytes
 17872 ;; Hardware stack levels used:    1
 17873 ;; Hardware stack levels required when called:   17
 17874 ;; This function calls:
 17875 ;;		Nothing
 17876 ;; This function is called by:
 17877 ;;		_SYSTEM_Initialize
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           	psect	text50
 17882  00A4F0                     __ptext50:
 17883                           	opt callstack 0
 17884  00A4F0                     _TMR0_Initialize:
 17885                           	opt callstack 12
 17886                           
 17887                           ; BSR set to: 3
 17888                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0xA1;
 17889                           
 17890                           ; BSR set to: 3
 17891                           ;incstack = 0
 17892  00A4F0  0EA1               	movlw	161
 17893  00A4F2  6EB9               	movwf	185,c	;volatile
 17894                           
 17895                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0xF9;
 17896  00A4F4  0EF9               	movlw	249
 17897  00A4F6  6EB7               	movwf	183,c	;volatile
 17898                           
 17899                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 17900  00A4F8  0E00               	movlw	0
 17901  00A4FA  6EB6               	movwf	182,c	;volatile
 17902                           
 17903                           ; BSR set to: 3
 17904                           ;mcc_generated_files/tmr0.c: 74:     PIR3bits.TMR0IF = 0;
 17905  00A4FC  0139               	movlb	57	; () banked
 17906  00A4FE  9FA3               	bcf	163,7,b	;volatile
 17907                           
 17908                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 17909  00A500  0E80               	movlw	128
 17910  00A502  6EB8               	movwf	184,c	;volatile
 17911                           
 17912                           ; BSR set to: 57
 17913  00A504  0012               	return		;funcret
 17914  00A506                     __end_of_TMR0_Initialize:
 17915                           	opt callstack 0
 17916                           
 17917 ;; *************** function _PMD_Initialize *****************
 17918 ;; Defined at:
 17919 ;;		line 81 in file "mcc_generated_files/mcc.c"
 17920 ;; Parameters:    Size  Location     Type
 17921 ;;		None
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;		None
 17924 ;; Return value:  Size  Location     Type
 17925 ;;                  1    wreg      void 
 17926 ;; Registers used:
 17927 ;;		wreg, status,2
 17928 ;; Tracked objects:
 17929 ;;		On entry : 3F/3
 17930 ;;		On exit  : 3F/39
 17931 ;;		Unchanged: 0/0
 17932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17937 ;;Total ram usage:        0 bytes
 17938 ;; Hardware stack levels used:    1
 17939 ;; Hardware stack levels required when called:   17
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		_SYSTEM_Initialize
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           	psect	text51
 17948  00A20C                     __ptext51:
 17949                           	opt callstack 0
 17950  00A20C                     _PMD_Initialize:
 17951                           	opt callstack 12
 17952                           
 17953                           ; BSR set to: 3
 17954                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
 17955                           
 17956                           ; BSR set to: 57
 17957                           ;incstack = 0
 17958  00A20C  0E00               	movlw	0
 17959  00A20E  0139               	movlb	57	; () banked
 17960  00A210  6FC0               	movwf	192,b	;volatile
 17961                           
 17962                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
 17963  00A212  0E00               	movlw	0
 17964  00A214  6FC1               	movwf	193,b	;volatile
 17965                           
 17966                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
 17967  00A216  0E00               	movlw	0
 17968  00A218  6FC2               	movwf	194,b	;volatile
 17969                           
 17970                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
 17971  00A21A  0E00               	movlw	0
 17972  00A21C  6FC3               	movwf	195,b	;volatile
 17973                           
 17974                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
 17975  00A21E  0E00               	movlw	0
 17976  00A220  6FC4               	movwf	196,b	;volatile
 17977                           
 17978                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
 17979  00A222  0E00               	movlw	0
 17980  00A224  6FC5               	movwf	197,b	;volatile
 17981                           
 17982                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
 17983  00A226  0E00               	movlw	0
 17984  00A228  6FC6               	movwf	198,b	;volatile
 17985                           
 17986                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
 17987  00A22A  0E00               	movlw	0
 17988  00A22C  6FC7               	movwf	199,b	;volatile
 17989                           
 17990                           ; BSR set to: 57
 17991  00A22E  0012               	return		;funcret
 17992  00A230                     __end_of_PMD_Initialize:
 17993                           	opt callstack 0
 17994                           
 17995 ;; *************** function _PIN_MANAGER_Initialize *****************
 17996 ;; Defined at:
 17997 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;		None
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;		None
 18002 ;; Return value:  Size  Location     Type
 18003 ;;                  1    wreg      void 
 18004 ;; Registers used:
 18005 ;;		wreg, status,2
 18006 ;; Tracked objects:
 18007 ;;		On entry : 3F/39
 18008 ;;		On exit  : 3F/3A
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18015 ;;Total ram usage:        0 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:   17
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_SYSTEM_Initialize
 18022 ;; This function uses a non-reentrant model
 18023 ;;
 18024                           
 18025                           	psect	text52
 18026  0080D2                     __ptext52:
 18027                           	opt callstack 0
 18028  0080D2                     _PIN_MANAGER_Initialize:
 18029                           	opt callstack 12
 18030                           
 18031                           ; BSR set to: 57
 18032                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18033                           
 18034                           ; BSR set to: 57
 18035                           ;incstack = 0
 18036  0080D2  0E00               	movlw	0
 18037  0080D4  6EBE               	movwf	190,c	;volatile
 18038                           
 18039                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 18040  0080D6  0E00               	movlw	0
 18041  0080D8  6EBD               	movwf	189,c	;volatile
 18042                           
 18043                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 18044  0080DA  0E00               	movlw	0
 18045  0080DC  6EBA               	movwf	186,c	;volatile
 18046                           
 18047                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 18048  0080DE  0E00               	movlw	0
 18049  0080E0  6EBB               	movwf	187,c	;volatile
 18050                           
 18051                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 18052  0080E2  0E00               	movlw	0
 18053  0080E4  6EBC               	movwf	188,c	;volatile
 18054                           
 18055                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 18056  0080E6  0E07               	movlw	7
 18057  0080E8  6EC6               	movwf	198,c	;volatile
 18058                           
 18059                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
 18060  0080EA  0E00               	movlw	0
 18061  0080EC  6EC2               	movwf	194,c	;volatile
 18062                           
 18063                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
 18064  0080EE  0EC0               	movlw	192
 18065  0080F0  6EC3               	movwf	195,c	;volatile
 18066                           
 18067                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xF5;
 18068  0080F2  0EF5               	movlw	245
 18069  0080F4  6EC4               	movwf	196,c	;volatile
 18070                           
 18071                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xBE;
 18072  0080F6  0EBE               	movlw	190
 18073  0080F8  6EC5               	movwf	197,c	;volatile
 18074                           
 18075                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 18076  0080FA  0E00               	movlw	0
 18077  0080FC  013A               	movlb	58	; () banked
 18078  0080FE  6F70               	movwf	112,b	;volatile
 18079                           
 18080                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 18081  008100  0E00               	movlw	0
 18082  008102  6F60               	movwf	96,b	;volatile
 18083                           
 18084                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x59;
 18085  008104  0E59               	movlw	89
 18086  008106  6F50               	movwf	80,b	;volatile
 18087                           
 18088                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 18089  008108  0E07               	movlw	7
 18090  00810A  6F80               	movwf	128,b	;volatile
 18091                           
 18092                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
 18093  00810C  0E00               	movlw	0
 18094  00810E  6F40               	movwf	64,b	;volatile
 18095                           
 18096                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0xBE;
 18097  008110  0EBE               	movlw	190
 18098  008112  6F71               	movwf	113,b	;volatile
 18099                           
 18100                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 18101  008114  0E00               	movlw	0
 18102  008116  6F81               	movwf	129,b	;volatile
 18103                           
 18104                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 18105  008118  0E00               	movlw	0
 18106  00811A  6F51               	movwf	81,b	;volatile
 18107                           
 18108                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 18109  00811C  0E00               	movlw	0
 18110  00811E  6F41               	movwf	65,b	;volatile
 18111                           
 18112                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0xF4;
 18113  008120  0EF4               	movlw	244
 18114  008122  6F61               	movwf	97,b	;volatile
 18115                           
 18116                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 18117  008124  0E00               	movlw	0
 18118  008126  6F5A               	movwf	90,b	;volatile
 18119                           
 18120                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 18121  008128  0E00               	movlw	0
 18122  00812A  6F5B               	movwf	91,b	;volatile
 18123                           
 18124                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 18125  00812C  0E00               	movlw	0
 18126  00812E  6F6A               	movwf	106,b	;volatile
 18127                           
 18128                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 18129  008130  0E00               	movlw	0
 18130  008132  6F6B               	movwf	107,b	;volatile
 18131                           
 18132                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 18133  008134  0E00               	movlw	0
 18134  008136  6F7A               	movwf	122,b	;volatile
 18135                           
 18136                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 18137  008138  0E00               	movlw	0
 18138  00813A  6F7B               	movwf	123,b	;volatile
 18139                           
 18140                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 18141  00813C  0E00               	movlw	0
 18142  00813E  6F82               	movwf	130,b	;volatile
 18143                           
 18144                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 18145  008140  0E00               	movlw	0
 18146  008142  6F42               	movwf	66,b	;volatile
 18147                           
 18148                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x06;
 18149  008144  0E06               	movlw	6
 18150  008146  6F52               	movwf	82,b	;volatile
 18151                           
 18152                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 18153  008148  0E00               	movlw	0
 18154  00814A  6F62               	movwf	98,b	;volatile
 18155                           
 18156                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 18157  00814C  0E00               	movlw	0
 18158  00814E  6F72               	movwf	114,b	;volatile
 18159                           
 18160                           ; BSR set to: 58
 18161                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 18162  008150  6943               	setf	67,b	;volatile
 18163                           
 18164                           ; BSR set to: 58
 18165                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 18166  008152  6953               	setf	83,b	;volatile
 18167                           
 18168                           ; BSR set to: 58
 18169                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 18170  008154  6963               	setf	99,b	;volatile
 18171                           
 18172                           ; BSR set to: 58
 18173                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 18174  008156  6973               	setf	115,b	;volatile
 18175                           
 18176                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 18177  008158  0E07               	movlw	7
 18178  00815A  6F83               	movwf	131,b	;volatile
 18179                           
 18180                           ; BSR set to: 58
 18181                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 18182  00815C  6944               	setf	68,b	;volatile
 18183                           
 18184                           ; BSR set to: 58
 18185                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 18186  00815E  6954               	setf	84,b	;volatile
 18187                           
 18188                           ; BSR set to: 58
 18189                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 18190  008160  6964               	setf	100,b	;volatile
 18191                           
 18192                           ; BSR set to: 58
 18193                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 18194  008162  6974               	setf	116,b	;volatile
 18195                           
 18196                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 18197  008164  0E0F               	movlw	15
 18198  008166  6F84               	movwf	132,b	;volatile
 18199                           
 18200                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x09;
 18201  008168  0E09               	movlw	9
 18202  00816A  6FE3               	movwf	227,b	;volatile
 18203                           
 18204                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x23;
 18205  00816C  0E23               	movlw	35
 18206  00816E  6F09               	movwf	9,b	;volatile
 18207                           
 18208                           ;mcc_generated_files/pin_manager.c: 139:     T6INPPS = 0x0F;
 18209  008170  0E0F               	movlw	15
 18210  008172  6FCC               	movwf	204,b	;volatile
 18211                           
 18212                           ;mcc_generated_files/pin_manager.c: 140:     RB2PPS = 0x24;
 18213  008174  0E24               	movlw	36
 18214  008176  6F0A               	movwf	10,b	;volatile
 18215                           
 18216                           ;mcc_generated_files/pin_manager.c: 141:     RC1PPS = 0x13;
 18217  008178  0E13               	movlw	19
 18218  00817A  6F11               	movwf	17,b	;volatile
 18219                           
 18220                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
 18221  00817C  0E10               	movlw	16
 18222  00817E  6FE5               	movwf	229,b	;volatile
 18223                           
 18224                           ;mcc_generated_files/pin_manager.c: 143:     T4INPPS = 0x15;
 18225  008180  0E15               	movlw	21
 18226  008182  6FCB               	movwf	203,b	;volatile
 18227                           
 18228                           ;mcc_generated_files/pin_manager.c: 144:     I2C2SDAPPS = 0x0A;
 18229  008184  0E0A               	movlw	10
 18230  008186  6FE4               	movwf	228,b	;volatile
 18231                           
 18232                           ; BSR set to: 58
 18233  008188  0012               	return		;funcret
 18234  00818A                     __end_of_PIN_MANAGER_Initialize:
 18235                           	opt callstack 0
 18236                           
 18237 ;; *************** function _OSCILLATOR_Initialize *****************
 18238 ;; Defined at:
 18239 ;;		line 67 in file "mcc_generated_files/mcc.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;		None
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;		None
 18244 ;; Return value:  Size  Location     Type
 18245 ;;                  1    wreg      void 
 18246 ;; Registers used:
 18247 ;;		wreg, status,2
 18248 ;; Tracked objects:
 18249 ;;		On entry : 3F/3A
 18250 ;;		On exit  : 3F/39
 18251 ;;		Unchanged: 0/0
 18252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18257 ;;Total ram usage:        0 bytes
 18258 ;; Hardware stack levels used:    1
 18259 ;; Hardware stack levels required when called:   17
 18260 ;; This function calls:
 18261 ;;		Nothing
 18262 ;; This function is called by:
 18263 ;;		_SYSTEM_Initialize
 18264 ;; This function uses a non-reentrant model
 18265 ;;
 18266                           
 18267                           	psect	text53
 18268  00A494                     __ptext53:
 18269                           	opt callstack 0
 18270  00A494                     _OSCILLATOR_Initialize:
 18271                           	opt callstack 12
 18272                           
 18273                           ; BSR set to: 58
 18274                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x60;
 18275                           
 18276                           ; BSR set to: 58
 18277                           ;incstack = 0
 18278  00A494  0E60               	movlw	96
 18279  00A496  0139               	movlb	57	; () banked
 18280  00A498  6FD9               	movwf	217,b	;volatile
 18281                           
 18282                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 18283  00A49A  0E00               	movlw	0
 18284  00A49C  6FDB               	movwf	219,b	;volatile
 18285                           
 18286                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 18287  00A49E  0E00               	movlw	0
 18288  00A4A0  6FDD               	movwf	221,b	;volatile
 18289                           
 18290                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
 18291  00A4A2  0E08               	movlw	8
 18292  00A4A4  6FDF               	movwf	223,b	;volatile
 18293                           
 18294                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 18295  00A4A6  0E00               	movlw	0
 18296  00A4A8  6FDE               	movwf	222,b	;volatile
 18297                           
 18298                           ; BSR set to: 57
 18299  00A4AA  0012               	return		;funcret
 18300  00A4AC                     __end_of_OSCILLATOR_Initialize:
 18301                           	opt callstack 0
 18302                           
 18303 ;; *************** function _INTERRUPT_Initialize *****************
 18304 ;; Defined at:
 18305 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;		None
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;		None
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  1    wreg      void 
 18312 ;; Registers used:
 18313 ;;		None
 18314 ;; Tracked objects:
 18315 ;;		On entry : 3F/3
 18316 ;;		On exit  : 3F/3
 18317 ;;		Unchanged: 3E/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18323 ;;Total ram usage:        0 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:   17
 18326 ;; This function calls:
 18327 ;;		Nothing
 18328 ;; This function is called by:
 18329 ;;		_SYSTEM_Initialize
 18330 ;; This function uses a non-reentrant model
 18331 ;;
 18332                           
 18333                           	psect	text54
 18334  00A882                     __ptext54:
 18335                           	opt callstack 0
 18336  00A882                     _INTERRUPT_Initialize:
 18337                           	opt callstack 12
 18338                           
 18339                           ; BSR set to: 3
 18340                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
 18341                           
 18342                           ; BSR set to: 57
 18343                           ;incstack = 0
 18344  00A882  9AD2               	bcf	210,5,c	;volatile
 18345                           
 18346                           ; BSR set to: 3
 18347  00A884  0012               	return		;funcret
 18348  00A886                     __end_of_INTERRUPT_Initialize:
 18349                           	opt callstack 0
 18350                           
 18351 ;; *************** function _I2C2_Initialize *****************
 18352 ;; Defined at:
 18353 ;;		line 183 in file "mcc_generated_files/i2c2_master.c"
 18354 ;; Parameters:    Size  Location     Type
 18355 ;;		None
 18356 ;; Auto vars:     Size  Location     Type
 18357 ;;		None
 18358 ;; Return value:  Size  Location     Type
 18359 ;;                  1    wreg      void 
 18360 ;; Registers used:
 18361 ;;		wreg, status,2
 18362 ;; Tracked objects:
 18363 ;;		On entry : 3F/0
 18364 ;;		On exit  : 3F/3D
 18365 ;;		Unchanged: 0/0
 18366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18371 ;;Total ram usage:        0 bytes
 18372 ;; Hardware stack levels used:    1
 18373 ;; Hardware stack levels required when called:   17
 18374 ;; This function calls:
 18375 ;;		Nothing
 18376 ;; This function is called by:
 18377 ;;		_SYSTEM_Initialize
 18378 ;; This function uses a non-reentrant model
 18379 ;;
 18380                           
 18381                           	psect	text55
 18382  00A230                     __ptext55:
 18383                           	opt callstack 0
 18384  00A230                     _I2C2_Initialize:
 18385                           	opt callstack 12
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;mcc_generated_files/i2c2_master.c: 186:     I2C2CON0 = 0x04;
 18389                           
 18390                           ; BSR set to: 3
 18391                           ;incstack = 0
 18392  00A230  0E04               	movlw	4
 18393  00A232  013D               	movlb	61	; () banked
 18394  00A234  6F5D               	movwf	93,b	;volatile
 18395                           
 18396                           ;mcc_generated_files/i2c2_master.c: 188:     I2C2CON1 = 0x80;
 18397  00A236  0E80               	movlw	128
 18398  00A238  6F5E               	movwf	94,b	;volatile
 18399                           
 18400                           ;mcc_generated_files/i2c2_master.c: 190:     I2C2CON2 = 0x18;
 18401  00A23A  0E18               	movlw	24
 18402  00A23C  6F5F               	movwf	95,b	;volatile
 18403                           
 18404                           ;mcc_generated_files/i2c2_master.c: 192:     I2C2CLK = 0x03;
 18405  00A23E  0E03               	movlw	3
 18406  00A240  6F65               	movwf	101,b	;volatile
 18407                           
 18408                           ;mcc_generated_files/i2c2_master.c: 194:     I2C2PIR = 0x00;
 18409  00A242  0E00               	movlw	0
 18410  00A244  6F63               	movwf	99,b	;volatile
 18411                           
 18412                           ;mcc_generated_files/i2c2_master.c: 196:     I2C2PIE = 0x00;
 18413  00A246  0E00               	movlw	0
 18414  00A248  6F64               	movwf	100,b	;volatile
 18415                           
 18416                           ;mcc_generated_files/i2c2_master.c: 198:     I2C2ERR = 0x00;
 18417  00A24A  0E00               	movlw	0
 18418  00A24C  6F60               	movwf	96,b	;volatile
 18419                           
 18420                           ; BSR set to: 61
 18421                           ;mcc_generated_files/i2c2_master.c: 200:     I2C2CNT = 0xFF;
 18422  00A24E  6956               	setf	86,b	;volatile
 18423                           
 18424                           ; BSR set to: 61
 18425  00A250  0012               	return		;funcret
 18426  00A252                     __end_of_I2C2_Initialize:
 18427                           	opt callstack 0
 18428                           
 18429 ;; *************** function _FVR_Initialize *****************
 18430 ;; Defined at:
 18431 ;;		line 58 in file "mcc_generated_files/fvr.c"
 18432 ;; Parameters:    Size  Location     Type
 18433 ;;		None
 18434 ;; Auto vars:     Size  Location     Type
 18435 ;;		None
 18436 ;; Return value:  Size  Location     Type
 18437 ;;                  1    wreg      void 
 18438 ;; Registers used:
 18439 ;;		wreg, status,2
 18440 ;; Tracked objects:
 18441 ;;		On entry : 3F/39
 18442 ;;		On exit  : 3F/3E
 18443 ;;		Unchanged: 0/0
 18444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18449 ;;Total ram usage:        0 bytes
 18450 ;; Hardware stack levels used:    1
 18451 ;; Hardware stack levels required when called:   17
 18452 ;; This function calls:
 18453 ;;		Nothing
 18454 ;; This function is called by:
 18455 ;;		_SYSTEM_Initialize
 18456 ;; This function uses a non-reentrant model
 18457 ;;
 18458                           
 18459                           	psect	text56
 18460  00A800                     __ptext56:
 18461                           	opt callstack 0
 18462  00A800                     _FVR_Initialize:
 18463                           	opt callstack 12
 18464                           
 18465                           ; BSR set to: 57
 18466                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x83;
 18467                           
 18468                           ; BSR set to: 61
 18469                           ;incstack = 0
 18470  00A800  0E83               	movlw	131
 18471  00A802  013E               	movlb	62	; () banked
 18472  00A804  6FC1               	movwf	193,b	;volatile
 18473                           
 18474                           ; BSR set to: 62
 18475  00A806  0012               	return		;funcret
 18476  00A808                     __end_of_FVR_Initialize:
 18477                           	opt callstack 0
 18478                           
 18479 ;; *************** function _ADCC_Initialize *****************
 18480 ;; Defined at:
 18481 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18482 ;; Parameters:    Size  Location     Type
 18483 ;;		None
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;		None
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  1    wreg      void 
 18488 ;; Registers used:
 18489 ;;		wreg, status,2, status,0, cstack
 18490 ;; Tracked objects:
 18491 ;;		On entry : 3F/0
 18492 ;;		On exit  : 3F/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18499 ;;Total ram usage:        0 bytes
 18500 ;; Hardware stack levels used:    1
 18501 ;; Hardware stack levels required when called:   18
 18502 ;; This function calls:
 18503 ;;		_ADCC_SetADTIInterruptHandler
 18504 ;; This function is called by:
 18505 ;;		_SYSTEM_Initialize
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text57
 18510  008D0C                     __ptext57:
 18511                           	opt callstack 0
 18512  008D0C                     _ADCC_Initialize:
 18513                           	opt callstack 11
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 18517                           
 18518                           ; BSR set to: 62
 18519                           ;incstack = 0
 18520  008D0C  013E               	movlb	62	; () banked
 18521  008D0E  69DE               	setf	222,b	;volatile
 18522                           
 18523                           ; BSR set to: 62
 18524                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 18525  008D10  0E7F               	movlw	127
 18526  008D12  6FDF               	movwf	223,b	;volatile
 18527                           
 18528                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 18529  008D14  0E00               	movlw	0
 18530  008D16  6FE0               	movwf	224,b	;volatile
 18531                           
 18532                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 18533  008D18  0E80               	movlw	128
 18534  008D1A  6FE1               	movwf	225,b	;volatile
 18535                           
 18536                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 18537  008D1C  0E00               	movlw	0
 18538  008D1E  6FE4               	movwf	228,b	;volatile
 18539                           
 18540                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 18541  008D20  0E00               	movlw	0
 18542  008D22  6FE5               	movwf	229,b	;volatile
 18543                           
 18544                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 18545  008D24  0E00               	movlw	0
 18546  008D26  6FEA               	movwf	234,b	;volatile
 18547                           
 18548                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 18549  008D28  0E10               	movlw	16
 18550  008D2A  6FEC               	movwf	236,b	;volatile
 18551                           
 18552                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 18553  008D2C  0E00               	movlw	0
 18554  008D2E  6FF1               	movwf	241,b	;volatile
 18555                           
 18556                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 18557  008D30  0E80               	movlw	128
 18558  008D32  6FF3               	movwf	243,b	;volatile
 18559                           
 18560                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 18561  008D34  0E00               	movlw	0
 18562  008D36  6FF4               	movwf	244,b	;volatile
 18563                           
 18564                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 18565  008D38  0E00               	movlw	0
 18566  008D3A  6FF5               	movwf	245,b	;volatile
 18567                           
 18568                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 18569  008D3C  0E00               	movlw	0
 18570  008D3E  6FF6               	movwf	246,b	;volatile
 18571                           
 18572                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 18573  008D40  0E00               	movlw	0
 18574  008D42  6FF7               	movwf	247,b	;volatile
 18575                           
 18576                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 18577  008D44  0E00               	movlw	0
 18578  008D46  6FF9               	movwf	249,b	;volatile
 18579                           
 18580                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 18581  008D48  0E43               	movlw	67
 18582  008D4A  6FFA               	movwf	250,b	;volatile
 18583                           
 18584                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 18585  008D4C  0E27               	movlw	39
 18586  008D4E  6FFB               	movwf	251,b	;volatile
 18587                           
 18588                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 18589  008D50  0E00               	movlw	0
 18590  008D52  6FFC               	movwf	252,b	;volatile
 18591                           
 18592                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 18593  008D54  0E03               	movlw	3
 18594  008D56  6FFD               	movwf	253,b	;volatile
 18595                           
 18596                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 18597  008D58  0E00               	movlw	0
 18598  008D5A  6FFE               	movwf	254,b	;volatile
 18599                           
 18600                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x33;
 18601  008D5C  0E33               	movlw	51
 18602  008D5E  6FFF               	movwf	255,b	;volatile
 18603                           
 18604                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 18605  008D60  0E84               	movlw	132
 18606  008D62  6FF8               	movwf	248,b	;volatile
 18607                           
 18608                           ; BSR set to: 62
 18609                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 18610  008D64  0139               	movlb	57	; () banked
 18611  008D66  97A1               	bcf	161,3,b	;volatile
 18612                           
 18613                           ; BSR set to: 57
 18614                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 18615  008D68  8791               	bsf	145,3,b	;volatile
 18616                           
 18617                           ; BSR set to: 57
 18618                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 18619  008D6A  0EB6               	movlw	low _ADCC_DefaultInterruptHandler
 18620  008D6C  0100               	movlb	0	; () banked
 18621  008D6E  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 18622  008D70  0EA8               	movlw	high _ADCC_DefaultInterruptHandler
 18623  008D72  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 18624  008D74  EC69  F053         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 18625                           
 18626                           ; BSR set to: 0
 18627  008D78  0012               	return		;funcret
 18628  008D7A                     __end_of_ADCC_Initialize:
 18629                           	opt callstack 0
 18630                           
 18631 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 18632 ;; Defined at:
 18633 ;;		line 316 in file "mcc_generated_files/adcc.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 18636 ;;		 -> adcCaptureIsr(1), ADCC_DefaultInterruptHandler(1), 
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;		None
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      void 
 18641 ;; Registers used:
 18642 ;;		wreg, status,2, status,0
 18643 ;; Tracked objects:
 18644 ;;		On entry : 3F/0
 18645 ;;		On exit  : 3F/0
 18646 ;;		Unchanged: 3F/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;Total ram usage:        2 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:   17
 18655 ;; This function calls:
 18656 ;;		Nothing
 18657 ;; This function is called by:
 18658 ;;		_ADCC_Initialize
 18659 ;;		_aCaptureInit
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text58
 18664  00A6D2                     __ptext58:
 18665                           	opt callstack 0
 18666  00A6D2                     _ADCC_SetADTIInterruptHandler:
 18667                           	opt callstack 12
 18668                           
 18669                           ; BSR set to: 0
 18670                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;incstack = 0
 18674  00A6D2  0060  F22C  F2FE   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 18675  00A6D8  0060  F230  F2FF   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 18676                           
 18677                           ; BSR set to: 0
 18678  00A6DE  0012               	return		;funcret
 18679  00A6E0                     __end_of_ADCC_SetADTIInterruptHandler:
 18680                           	opt callstack 0
 18681                           
 18682 ;; *************** function _MonitorMsgSend *****************
 18683 ;; Defined at:
 18684 ;;		line 140 in file "monComm.c"
 18685 ;; Parameters:    Size  Location     Type
 18686 ;;  state           1    wreg     enum E16832
 18687 ;; Auto vars:     Size  Location     Type
 18688 ;;  state           1  114[BANK1 ] enum E16832
 18689 ;; Return value:  Size  Location     Type
 18690 ;;                  1    wreg      void 
 18691 ;; Registers used:
 18692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18693 ;; Tracked objects:
 18694 ;;		On entry : 3D/3
 18695 ;;		On exit  : 3E/0
 18696 ;;		Unchanged: 0/0
 18697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18699 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18701 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18702 ;;Total ram usage:        1 bytes
 18703 ;; Hardware stack levels used:    1
 18704 ;; Hardware stack levels required when called:   31
 18705 ;; This function calls:
 18706 ;;		_MonitorMsgForcedSend
 18707 ;;		_timeElapsedR
 18708 ;; This function is called by:
 18709 ;;		_main
 18710 ;; This function uses a non-reentrant model
 18711 ;;
 18712                           
 18713                           	psect	text59
 18714  00A0B2                     __ptext59:
 18715                           	opt callstack 0
 18716  00A0B2                     _MonitorMsgSend:
 18717                           	opt callstack 0
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;incstack = 0
 18721 ;; hardware stack exceeded
 18722                           ;MonitorMsgSend@state stored from wreg
 18723  00A0B2  0101               	movlb	1	; () banked
 18724  00A0B4  6F72               	movwf	MonitorMsgSend@state& (0+255),b
 18725                           
 18726                           ;monComm.c: 141:     if (timeElapsedR(&monTstamp, ((time_t) 50*1))) {
 18727  00A0B6  0ED3               	movlw	low _monTstamp
 18728  00A0B8  0100               	movlb	0	; () banked
 18729  00A0BA  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 18730  00A0BC  0E02               	movlw	high _monTstamp
 18731  00A0BE  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 18732  00A0C0  0E00               	movlw	0
 18733  00A0C2  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 18734  00A0C4  0E32               	movlw	50
 18735  00A0C6  6F95               	movwf	timeElapsedR@duration& (0+255),b
 18736  00A0C8  ECBE  F047         	call	_timeElapsedR	;wreg free
 18737  00A0CC  0900               	iorlw	0
 18738  00A0CE  B4D8               	btfsc	status,2,c
 18739  00A0D0  0012               	return	
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;monComm.c: 142:         MonitorMsgForcedSend(state);
 18743  00A0D2  0101               	movlb	1	; () banked
 18744  00A0D4  5172               	movf	MonitorMsgSend@state& (0+255),w,b
 18745  00A0D6  EC29  F037         	call	_MonitorMsgForcedSend
 18746  00A0DA  0012               	return		;funcret
 18747  00A0DC                     __end_of_MonitorMsgSend:
 18748                           	opt callstack 0
 18749                           
 18750 ;; *************** function _timeElapsedR *****************
 18751 ;; Defined at:
 18752 ;;		line 47 in file "time.c"
 18753 ;; Parameters:    Size  Location     Type
 18754 ;;  prevTime        2   51[BANK0 ] PTR unsigned short 
 18755 ;;		 -> monTstamp(2), SelfTest@tstamp(2), flowChk@tstamp(2), pressureSensorChk@tstamp(2), 
 18756 ;;		 -> main@printTime(2), rCycleTime(2), 
 18757 ;;  duration        2   53[BANK0 ] unsigned short 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  intTime         2   59[BANK0 ] unsigned short 
 18760 ;;  intDur          2   57[BANK0 ] unsigned short 
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  1    wreg      _Bool 
 18763 ;; Registers used:
 18764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18765 ;; Tracked objects:
 18766 ;;		On entry : 3F/0
 18767 ;;		On exit  : 3F/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18771 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18773 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18774 ;;Total ram usage:       10 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:   18
 18777 ;; This function calls:
 18778 ;;		_TMR1_ReadTimer
 18779 ;; This function is called by:
 18780 ;;		_main
 18781 ;;		_pressureSensorChk
 18782 ;;		_flowChk
 18783 ;;		_SelfTest
 18784 ;;		_MonitorMsgSend
 18785 ;; This function uses a non-reentrant model
 18786 ;;
 18787                           
 18788                           	psect	text60
 18789  008F7C                     __ptext60:
 18790                           	opt callstack 0
 18791  008F7C                     _timeElapsedR:
 18792                           	opt callstack 12
 18793                           
 18794                           ; BSR set to: 0
 18795                           ;time.c: 48:     time_t intTime, intDur;;time.c: 49:     intTime = TMR1_ReadTimer();
 18796                           
 18797                           ;incstack = 0
 18798  008F7C  EC2D  F050         	call	_TMR1_ReadTimer	;wreg free
 18799  008F80  0060  F22C  F09B   	movff	?_TMR1_ReadTimer,timeElapsedR@intTime
 18800  008F86  0060  F230  F09C   	movff	?_TMR1_ReadTimer+1,timeElapsedR@intTime+1
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;time.c: 50:     intDur = intTime - *prevTime;
 18804  008F8C  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18805  008F92  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18806  008F98  006F FF78  F097    	movff	postinc2,??_timeElapsedR
 18807  008F9E  006F FF74  F098    	movff	postdec2,??_timeElapsedR+1
 18808  008FA4  5197               	movf	??_timeElapsedR& (0+255),w,b
 18809  008FA6  5D9B               	subwf	timeElapsedR@intTime& (0+255),w,b
 18810  008FA8  6F99               	movwf	timeElapsedR@intDur& (0+255),b
 18811  008FAA  5198               	movf	(??_timeElapsedR+1)& (0+255),w,b
 18812  008FAC  599C               	subwfb	(timeElapsedR@intTime+1)& (0+255),w,b
 18813  008FAE  6F9A               	movwf	(timeElapsedR@intDur+1)& (0+255),b
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;time.c: 51:     if (intDur < duration) {
 18817  008FB0  5195               	movf	timeElapsedR@duration& (0+255),w,b
 18818  008FB2  5D99               	subwf	timeElapsedR@intDur& (0+255),w,b
 18819  008FB4  5196               	movf	(timeElapsedR@duration+1)& (0+255),w,b
 18820  008FB6  599A               	subwfb	(timeElapsedR@intDur+1)& (0+255),w,b
 18821  008FB8  B0D8               	btfsc	status,0,c
 18822  008FBA  D002               	goto	l18153
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;time.c: 52:         return 0;
 18826  008FBC  0E00               	movlw	0
 18827  008FBE  0012               	return	
 18828  008FC0                     l18153:
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;time.c: 54:         *prevTime = intTime;
 18832  008FC0  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18833  008FC6  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18834  008FCC  0060  F26F  FFDE   	movff	timeElapsedR@intTime,postinc2
 18835  008FD2  0060  F273  FFDD   	movff	timeElapsedR@intTime+1,postdec2
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;time.c: 55:         return 1;
 18839  008FD8  0E01               	movlw	1
 18840                           
 18841                           ; BSR set to: 0
 18842  008FDA  0012               	return		;funcret
 18843  008FDC                     __end_of_timeElapsedR:
 18844                           	opt callstack 0
 18845                           
 18846 ;; *************** function _MonitorInit *****************
 18847 ;; Defined at:
 18848 ;;		line 30 in file "monComm.c"
 18849 ;; Parameters:    Size  Location     Type
 18850 ;;		None
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;		None
 18853 ;; Return value:  Size  Location     Type
 18854 ;;                  1    wreg      void 
 18855 ;; Registers used:
 18856 ;;		None
 18857 ;; Tracked objects:
 18858 ;;		On entry : 3F/1
 18859 ;;		On exit  : 3F/1
 18860 ;;		Unchanged: 3F/0
 18861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18866 ;;Total ram usage:        0 bytes
 18867 ;; Hardware stack levels used:    1
 18868 ;; Hardware stack levels required when called:   17
 18869 ;; This function calls:
 18870 ;;		Nothing
 18871 ;; This function is called by:
 18872 ;;		_main
 18873 ;; This function uses a non-reentrant model
 18874 ;;
 18875                           
 18876                           	psect	text61
 18877  00A8AE                     __ptext61:
 18878                           	opt callstack 0
 18879  00A8AE                     _MonitorInit:
 18880                           	opt callstack 13
 18881                           
 18882                           ; BSR set to: 1
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;incstack = 0
 18886  00A8AE  0012               	return		;funcret
 18887  00A8B0                     __end_of_MonitorInit:
 18888                           	opt callstack 0
 18889                           
 18890 ;; *************** function _MenuMng *****************
 18891 ;; Defined at:
 18892 ;;		line 58 in file "menu.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;		None
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;  keyPress        1  118[BANK1 ] char 
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  1    wreg      void 
 18899 ;; Registers used:
 18900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/1
 18903 ;;		On exit  : 3E/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18907 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18908 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18909 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18910 ;;Total ram usage:       23 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; Hardware stack levels required when called:   26
 18913 ;; This function calls:
 18914 ;;		___awdiv
 18915 ;;		___lwdiv
 18916 ;;		_keyRead
 18917 ;;		_printf
 18918 ;;		_timeElapsed
 18919 ;;		_timeGet
 18920 ;; This function is called by:
 18921 ;;		_main
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text62
 18926  002B44                     __ptext62:
 18927                           	opt callstack 0
 18928  002B44                     _MenuMng:
 18929                           	opt callstack 4
 18930                           
 18931                           ;menu.c: 60:     int8_t keyPress;;menu.c: 61:     keyPress = keyRead();
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;incstack = 0
 18935  002B44  EC44  F04B         	call	_keyRead	;wreg free
 18936  002B48  0101               	movlb	1	; () banked
 18937  002B4A  6F76               	movwf	MenuMng@keyPress& (0+255),b
 18938                           
 18939                           ; BSR set to: 1
 18940                           ;menu.c: 64:     if ((menuStatus == CFG_IDLE) && (keyPress == 3)){
 18941  002B4C  51B8               	movf	_menuStatus& (0+255),w,b
 18942  002B4E  A4D8               	btfss	status,2,c
 18943  002B50  D012               	goto	l19767
 18944                           
 18945                           ; BSR set to: 1
 18946  002B52  0E03               	movlw	3
 18947  002B54  1976               	xorwf	MenuMng@keyPress& (0+255),w,b
 18948  002B56  A4D8               	btfss	status,2,c
 18949  002B58  D00E               	goto	l19767
 18950                           
 18951                           ; BSR set to: 1
 18952                           ;menu.c: 65:         menuStatus = CFG_ENGMODE;
 18953  002B5A  0E08               	movlw	8
 18954  002B5C  6FB8               	movwf	_menuStatus& (0+255),b
 18955                           
 18956                           ; BSR set to: 1
 18957                           ;menu.c: 66:         menuTstamp = timeGet();
 18958  002B5E  ECD5  F052         	call	_timeGet	;wreg free
 18959  002B62  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 18960  002B68  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;menu.c: 67:         lcdPrintBR = 1;
 18964  002B6E  0E01               	movlw	1
 18965  002B70  0101               	movlb	1	; () banked
 18966  002B72  6FC5               	movwf	_lcdPrintBR& (0+255),b
 18967                           
 18968                           ;menu.c: 68:     } else if ((keyPress >= 0) && (keyPress != 4)) {
 18969  002B74  0012               	return	
 18970  002B76                     l19767:
 18971                           
 18972                           ; BSR set to: 1
 18973  002B76  BF76               	btfsc	MenuMng@keyPress& (0+255),7,b
 18974  002B78  EF14  F01A         	goto	l20127
 18975                           
 18976                           ; BSR set to: 1
 18977  002B7C  0E04               	movlw	4
 18978  002B7E  1976               	xorwf	MenuMng@keyPress& (0+255),w,b
 18979  002B80  B4D8               	btfsc	status,2,c
 18980  002B82  EF14  F01A         	goto	l20127
 18981                           
 18982                           ; BSR set to: 1
 18983                           ;menu.c: 69:         lcdPrintTR = 1;
 18984  002B86  0E01               	movlw	1
 18985  002B88  6FC6               	movwf	_lcdPrintTR& (0+255),b
 18986                           
 18987                           ;menu.c: 70:         lcdPrintBR = 1;
 18988  002B8A  0E01               	movlw	1
 18989  002B8C  6FC5               	movwf	_lcdPrintBR& (0+255),b
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;menu.c: 71:         printf ("KEY! %d\n", keyPress);
 18993  002B8E  0EB5               	movlw	low STR_34
 18994  002B90  6F46               	movwf	printf@fmt& (0+255),b
 18995  002B92  0EFF               	movlw	high STR_34
 18996  002B94  6F47               	movwf	(printf@fmt+1)& (0+255),b
 18997  002B96  5176               	movf	MenuMng@keyPress& (0+255),w,b
 18998  002B98  6F48               	movwf	(?_printf+2)& (0+255),b
 18999  002B9A  6B49               	clrf	(?_printf+3)& (0+255),b
 19000  002B9C  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 19001  002B9E  0749               	decf	(?_printf+3)& (0+255),f,b
 19002  002BA0  EC43  F050         	call	_printf	;wreg free
 19003                           
 19004                           ; BSR set to: 2
 19005                           ;menu.c: 73:         if (menuStatus == CFG_POWEROFF) {
 19006  002BA4  0E0C               	movlw	12
 19007  002BA6  0101               	movlb	1	; () banked
 19008  002BA8  19B8               	xorwf	_menuStatus& (0+255),w,b
 19009  002BAA  A4D8               	btfss	status,2,c
 19010  002BAC  EFE4  F019         	goto	l20123
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;menu.c: 74:             menuStatus = CFG_IDLE;
 19014  002BB0  0E00               	movlw	0
 19015  002BB2  6FB8               	movwf	_menuStatus& (0+255),b
 19016                           
 19017                           ; BSR set to: 1
 19018                           ;menu.c: 75:             if (keyPress == 2) {
 19019  002BB4  0E02               	movlw	2
 19020  002BB6  1976               	xorwf	MenuMng@keyPress& (0+255),w,b
 19021  002BB8  A4D8               	btfss	status,2,c
 19022  002BBA  EF0E  F01A         	goto	l20125
 19023                           
 19024                           ; BSR set to: 1
 19025                           ;menu.c: 77:                 ctrlStatus = CTRL_SLEEP;
 19026  002BBE  0E03               	movlw	3
 19027  002BC0  6FC0               	movwf	_ctrlStatus& (0+255),b
 19028                           
 19029                           ; BSR set to: 1
 19030                           ;menu.c: 81:         } else {
 19031                           
 19032                           ;menu.c: 80:             }
 19033                           
 19034                           ;menu.c: 78:             } else {
 19035  002BC2  EF0E  F01A         	goto	l20125
 19036  002BC6                     l19783:
 19037                           
 19038                           ; BSR set to: 1
 19039                           ;menu.c: 84:                     if (menuStatus == CFG_IDLE) {
 19040  002BC6  51B8               	movf	_menuStatus& (0+255),w,b
 19041  002BC8  A4D8               	btfss	status,2,c
 19042  002BCA  D03D               	goto	l19801
 19043                           
 19044                           ; BSR set to: 1
 19045                           ;menu.c: 85:                         menuStatus = CFG_IP;
 19046  002BCC  0E01               	movlw	1
 19047  002BCE  6FB8               	movwf	_menuStatus& (0+255),b
 19048                           
 19049                           ;menu.c: 86:                         if ((VentMode == VMODE_PRESSURE)||(intIP == 0)) {
 19050  002BD0  51F4               	movf	_VentMode& (0+255),w,b
 19051  002BD2  B4D8               	btfsc	status,2,c
 19052  002BD4  D004               	goto	u20750
 19053                           
 19054                           ; BSR set to: 1
 19055  002BD6  51B5               	movf	_intIP& (0+255),w,b
 19056  002BD8  11B6               	iorwf	(_intIP+1)& (0+255),w,b
 19057  002BDA  A4D8               	btfss	status,2,c
 19058  002BDC  D003               	goto	l19789
 19059  002BDE                     u20750:
 19060                           
 19061                           ; BSR set to: 1
 19062                           ;menu.c: 87:                             menuVal = IP;
 19063  002BDE  C1F7  F197         	movff	_IP,_menuVal
 19064  002BE2  D1F0               	goto	L35
 19065  002BE4                     l19789:
 19066                           
 19067                           ; BSR set to: 1
 19068                           ;menu.c: 89:                             menuVal = intIP/((int16_t) ((0.045*4096+2)/5)*1
      +                          );
 19069  002BE4  0060  F6D4  F08B   	movff	_intIP,___awdiv@dividend
 19070  002BEA  0060  F6D8  F08C   	movff	_intIP+1,___awdiv@dividend+1
 19071  002BF0  0E00               	movlw	0
 19072  002BF2  0100               	movlb	0	; () banked
 19073  002BF4  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
 19074  002BF6  0E25               	movlw	37
 19075  002BF8  6F8D               	movwf	___awdiv@divisor& (0+255),b
 19076  002BFA  EC94  F044         	call	___awdiv	;wreg free
 19077  002BFE  0060  F22C  F197   	movff	?___awdiv,_menuVal
 19078  002C04  0060  F230  F198   	movff	?___awdiv+1,_menuVal+1
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;menu.c: 90:                             if (menuVal > 60) {
 19082  002C0A  0101               	movlb	1	; () banked
 19083  002C0C  5198               	movf	(_menuVal+1)& (0+255),w,b
 19084  002C0E  E104               	bnz	u20760
 19085  002C10  0E3D               	movlw	61
 19086  002C12  5D97               	subwf	_menuVal& (0+255),w,b
 19087  002C14  A0D8               	btfss	status,0,c
 19088  002C16  D004               	goto	l19795
 19089  002C18                     u20760:
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;menu.c: 91:                                 menuVal = 60;
 19093  002C18  0E00               	movlw	0
 19094  002C1A  6F98               	movwf	(_menuVal+1)& (0+255),b
 19095  002C1C  0E3C               	movlw	60
 19096  002C1E  D009               	goto	L22
 19097  002C20                     l19795:
 19098                           
 19099                           ; BSR set to: 1
 19100  002C20  5198               	movf	(_menuVal+1)& (0+255),w,b
 19101  002C22  E108               	bnz	l19799
 19102  002C24  0E04               	movlw	4
 19103  002C26  5D97               	subwf	_menuVal& (0+255),w,b
 19104  002C28  B0D8               	btfsc	status,0,c
 19105  002C2A  D004               	goto	l19799
 19106                           
 19107                           ; BSR set to: 1
 19108                           ;menu.c: 93:                                 menuVal = 4;
 19109  002C2C  0E00               	movlw	0
 19110  002C2E  6F98               	movwf	(_menuVal+1)& (0+255),b
 19111  002C30  0E04               	movlw	4
 19112  002C32                     L22:
 19113  002C32  6F97               	movwf	_menuVal& (0+255),b
 19114  002C34                     l19799:
 19115                           
 19116                           ; BSR set to: 1
 19117                           ;menu.c: 96:                         menuTstamp = timeGet();
 19118  002C34  ECD5  F052         	call	_timeGet	;wreg free
 19119  002C38  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19120  002C3E  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19121                           
 19122                           ;menu.c: 97:                     } else if (menuStatus == CFG_IP) {
 19123  002C44  D3EB               	goto	l20125
 19124  002C46                     l19801:
 19125                           
 19126                           ; BSR set to: 1
 19127  002C46  05B8               	decf	_menuStatus& (0+255),w,b
 19128  002C48  A4D8               	btfss	status,2,c
 19129  002C4A  D034               	goto	l19821
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;menu.c: 99:                         if (VentMode == VMODE_VOLUME) {
 19133  002C4C  05F4               	decf	_VentMode& (0+255),w,b
 19134  002C4E  A4D8               	btfss	status,2,c
 19135  002C50  D009               	goto	l19809
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;menu.c: 100:                             VentMode = VMODE_PRESSURE;
 19139  002C52  0E00               	movlw	0
 19140  002C54  6FF4               	movwf	_VentMode& (0+255),b
 19141                           
 19142                           ;menu.c: 101:                             chVentMode = 1;
 19143  002C56  0E01               	movlw	1
 19144  002C58  0102               	movlb	2	; () banked
 19145  002C5A  6F55               	movwf	_chVentMode& (0+255),b
 19146                           
 19147                           ; BSR set to: 2
 19148                           ;menu.c: 103:                             MaxP = menuVal + 2;
 19149  002C5C  0101               	movlb	1	; () banked
 19150  002C5E  5197               	movf	_menuVal& (0+255),w,b
 19151  002C60  0F02               	addlw	2
 19152  002C62  D003               	goto	L23
 19153  002C64                     l19809:
 19154                           
 19155                           ; BSR set to: 1
 19156                           ;menu.c: 106:                             MaxP = MaxP + menuVal - IP;
 19157  002C64  51F7               	movf	_IP& (0+255),w,b
 19158  002C66  5DFB               	subwf	_MaxP& (0+255),w,b
 19159  002C68  2597               	addwf	_menuVal& (0+255),w,b
 19160  002C6A                     L23:
 19161  002C6A  6FFB               	movwf	_MaxP& (0+255),b
 19162                           
 19163                           ; BSR set to: 1
 19164                           ;menu.c: 108:                         if (MaxP < menuVal + 2){
 19165                           
 19166                           ;menu.c: 107:                         }
 19167  002C6C  0E02               	movlw	2
 19168  002C6E  2597               	addwf	_menuVal& (0+255),w,b
 19169  002C70  6F60               	movwf	??_MenuMng& (0+255),b
 19170  002C72  0E00               	movlw	0
 19171  002C74  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19172  002C76  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19173  002C78  51FB               	movf	_MaxP& (0+255),w,b
 19174  002C7A  6F62               	movwf	(??_MenuMng+2)& (0+255),b
 19175  002C7C  6B63               	clrf	(??_MenuMng+3)& (0+255),b
 19176  002C7E  5160               	movf	??_MenuMng& (0+255),w,b
 19177  002C80  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19178  002C82  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19179  002C84  5963               	subwfb	(??_MenuMng+3)& (0+255),w,b
 19180  002C86  B0D8               	btfsc	status,0,c
 19181  002C88  D003               	goto	l2433
 19182                           
 19183                           ; BSR set to: 1
 19184                           ;menu.c: 110:                             MaxP = menuVal + 2;
 19185  002C8A  5197               	movf	_menuVal& (0+255),w,b
 19186  002C8C  0F02               	addlw	2
 19187  002C8E  6FFB               	movwf	_MaxP& (0+255),b
 19188  002C90                     l2433:
 19189                           
 19190                           ; BSR set to: 1
 19191                           ;menu.c: 112:                         if (MaxP > 60){
 19192  002C90  0E3C               	movlw	60
 19193  002C92  65FB               	cpfsgt	_MaxP& (0+255),b
 19194  002C94  D002               	goto	l19815
 19195                           
 19196                           ; BSR set to: 1
 19197                           ;menu.c: 113:                             MaxP = 60;
 19198  002C96  0E3C               	movlw	60
 19199  002C98  D004               	goto	L24
 19200  002C9A                     l19815:
 19201                           
 19202                           ; BSR set to: 1
 19203  002C9A  0E04               	movlw	4
 19204  002C9C  61FB               	cpfslt	_MaxP& (0+255),b
 19205  002C9E  D002               	goto	l2435
 19206                           
 19207                           ; BSR set to: 1
 19208                           ;menu.c: 115:                             MaxP = 4;
 19209  002CA0  0E04               	movlw	4
 19210  002CA2                     L24:
 19211  002CA2  6FFB               	movwf	_MaxP& (0+255),b
 19212  002CA4                     l2435:
 19213                           
 19214                           ; BSR set to: 1
 19215                           ;menu.c: 118:                         chMaxP = 1;
 19216  002CA4  0E01               	movlw	1
 19217  002CA6  0100               	movlb	0	; () banked
 19218  002CA8  6FC3               	movwf	_chMaxP& (0+255),b
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;menu.c: 119:                         IP = menuVal;
 19222  002CAA  C197  F1F7         	movff	_menuVal,_IP
 19223                           
 19224                           ;menu.c: 120:                         chIP = 1;
 19225  002CAE  0E01               	movlw	1
 19226  002CB0  6FC4               	movwf	_chIP& (0+255),b
 19227  002CB2  D193               	goto	L36
 19228  002CB4                     l19821:
 19229                           
 19230                           ; BSR set to: 1
 19231  002CB4  0E08               	movlw	8
 19232  002CB6  19B8               	xorwf	_menuStatus& (0+255),w,b
 19233  002CB8  A4D8               	btfss	status,2,c
 19234  002CBA  D005               	goto	l19829
 19235                           
 19236                           ; BSR set to: 1
 19237                           ;menu.c: 123:                         menuStatus = CFG_ENGTRIG;
 19238  002CBC  0E0B               	movlw	11
 19239  002CBE  6FB8               	movwf	_menuStatus& (0+255),b
 19240                           
 19241                           ; BSR set to: 1
 19242                           ;menu.c: 124:                         menuVal = BdTrig;
 19243  002CC0  C1F5  F197         	movff	_BdTrig,_menuVal
 19244  002CC4  D17F               	goto	L35
 19245  002CC6                     l19829:
 19246                           
 19247                           ; BSR set to: 1
 19248  002CC6  0E0B               	movlw	11
 19249  002CC8  19B8               	xorwf	_menuStatus& (0+255),w,b
 19250  002CCA  A4D8               	btfss	status,2,c
 19251  002CCC  D186               	goto	L36
 19252                           
 19253                           ; BSR set to: 1
 19254                           ;menu.c: 127:                         BdTrig = menuVal;
 19255  002CCE  C197  F1F5         	movff	_menuVal,_BdTrig
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;menu.c: 128:                         chBdTrig = 1;
 19259  002CD2  0E01               	movlw	1
 19260  002CD4  0102               	movlb	2	; () banked
 19261  002CD6  6F56               	movwf	_chBdTrig& (0+255),b
 19262                           
 19263                           ;menu.c: 130:                     } else {
 19264                           
 19265                           ;menu.c: 129:                         menuStatus = CFG_IDLE;
 19266  002CD8  D180               	goto	L36
 19267  002CDA                     l19837:
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;menu.c: 136:                     if (menuStatus == CFG_IDLE) {
 19271  002CDA  51B8               	movf	_menuStatus& (0+255),w,b
 19272  002CDC  A4D8               	btfss	status,2,c
 19273  002CDE  D005               	goto	l19845
 19274                           
 19275                           ; BSR set to: 1
 19276                           ;menu.c: 137:                         menuStatus = CFG_BPM;
 19277  002CE0  0E02               	movlw	2
 19278  002CE2  6FB8               	movwf	_menuStatus& (0+255),b
 19279                           
 19280                           ; BSR set to: 1
 19281                           ;menu.c: 138:                         menuVal = BPM;
 19282  002CE4  C1F8  F197         	movff	_BPM,_menuVal
 19283  002CE8  D16D               	goto	L35
 19284  002CEA                     l19845:
 19285                           
 19286                           ; BSR set to: 1
 19287  002CEA  0E02               	movlw	2
 19288  002CEC  19B8               	xorwf	_menuStatus& (0+255),w,b
 19289  002CEE  A4D8               	btfss	status,2,c
 19290  002CF0  D030               	goto	l19857
 19291                           
 19292                           ; BSR set to: 1
 19293                           ;menu.c: 142:                         BPM = menuVal;
 19294  002CF2  C197  F1F8         	movff	_menuVal,_BPM
 19295                           
 19296                           ; BSR set to: 1
 19297                           ;menu.c: 143:                         chBPM = 1;
 19298  002CF6  0E01               	movlw	1
 19299  002CF8  0100               	movlb	0	; () banked
 19300  002CFA  6FC5               	movwf	_chBPM& (0+255),b
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;menu.c: 144:                         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
 19304  002CFC  0EEA               	movlw	234
 19305  002CFE  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 19306  002D00  0E60               	movlw	96
 19307  002D02  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 19308  002D04  0101               	movlb	1	; () banked
 19309  002D06  51F8               	movf	_BPM& (0+255),w,b
 19310  002D08  0D03               	mullw	3
 19311  002D0A  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
 19312  002D10  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
 19313  002D16  EC5E  F049         	call	___lwdiv	;wreg free
 19314  002D1A  0060  F22C  F24C   	movff	?___lwdiv,_IDuration
 19315  002D20  0060  F230  F24D   	movff	?___lwdiv+1,_IDuration+1
 19316                           
 19317                           ; BSR set to: 0
 19318                           ;menu.c: 145:                         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDurati
      +                          on;
 19319  002D26  0EEA               	movlw	234
 19320  002D28  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 19321  002D2A  0E60               	movlw	96
 19322  002D2C  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 19323  002D2E  0060  F7E0  F08D   	movff	_BPM,___lwdiv@divisor
 19324  002D34  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
 19325  002D36  EC5E  F049         	call	___lwdiv	;wreg free
 19326  002D3A  0102               	movlb	2	; () banked
 19327  002D3C  514C               	movf	_IDuration& (0+255),w,b
 19328  002D3E  0100               	movlb	0	; () banked
 19329  002D40  5D8B               	subwf	?___lwdiv& (0+255),w,b
 19330  002D42  0102               	movlb	2	; () banked
 19331  002D44  6F4A               	movwf	_EDuration& (0+255),b
 19332  002D46  514D               	movf	(_IDuration+1)& (0+255),w,b
 19333  002D48  0100               	movlb	0	; () banked
 19334  002D4A  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
 19335  002D4C  0102               	movlb	2	; () banked
 19336  002D4E  6F4B               	movwf	(_EDuration+1)& (0+255),b
 19337  002D50  D144               	goto	L36
 19338  002D52                     l19857:
 19339                           
 19340                           ; BSR set to: 1
 19341  002D52  0E08               	movlw	8
 19342  002D54  19B8               	xorwf	_menuStatus& (0+255),w,b
 19343  002D56  A4D8               	btfss	status,2,c
 19344  002D58  D140               	goto	L36
 19345                           
 19346                           ; BSR set to: 1
 19347                           ;menu.c: 148:                         menuStatus = CFG_ENGVSTATS;
 19348  002D5A  0E09               	movlw	9
 19349  002D5C  D017               	goto	L29
 19350  002D5E                     l19865:
 19351                           
 19352                           ; BSR set to: 1
 19353                           ;menu.c: 156:                     if (menuStatus == CFG_IDLE) {
 19354  002D5E  51B8               	movf	_menuStatus& (0+255),w,b
 19355  002D60  A4D8               	btfss	status,2,c
 19356  002D62  D005               	goto	l19873
 19357                           
 19358                           ; BSR set to: 1
 19359                           ;menu.c: 157:                         menuStatus = CFG_PEEP;
 19360  002D64  0E03               	movlw	3
 19361  002D66  6FB8               	movwf	_menuStatus& (0+255),b
 19362                           
 19363                           ; BSR set to: 1
 19364                           ;menu.c: 158:                         menuVal = PEEP;
 19365  002D68  C1F6  F197         	movff	_PEEP,_menuVal
 19366  002D6C  D12B               	goto	L35
 19367  002D6E                     l19873:
 19368                           
 19369                           ; BSR set to: 1
 19370  002D6E  0E03               	movlw	3
 19371  002D70  19B8               	xorwf	_menuStatus& (0+255),w,b
 19372  002D72  A4D8               	btfss	status,2,c
 19373  002D74  D006               	goto	l19879
 19374                           
 19375                           ; BSR set to: 1
 19376                           ;menu.c: 162:                         PEEP = menuVal;
 19377  002D76  C197  F1F6         	movff	_menuVal,_PEEP
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;menu.c: 163:                         chPEEP = 1;
 19381  002D7A  0E01               	movlw	1
 19382  002D7C  0100               	movlb	0	; () banked
 19383  002D7E  6FC2               	movwf	_chPEEP& (0+255),b
 19384  002D80  D12C               	goto	L36
 19385  002D82                     l19879:
 19386                           
 19387                           ; BSR set to: 1
 19388  002D82  0E08               	movlw	8
 19389  002D84  19B8               	xorwf	_menuStatus& (0+255),w,b
 19390  002D86  A4D8               	btfss	status,2,c
 19391  002D88  D128               	goto	L36
 19392                           
 19393                           ; BSR set to: 1
 19394                           ;menu.c: 166:                         menuStatus = CFG_ENGLSTATS;
 19395  002D8A  0E0A               	movlw	10
 19396  002D8C                     L29:
 19397  002D8C  6FB8               	movwf	_menuStatus& (0+255),b
 19398  002D8E  D752               	goto	l19799
 19399  002D90                     l19887:
 19400                           
 19401                           ; BSR set to: 1
 19402                           ;menu.c: 174:                     if (menuStatus == CFG_IDLE) {
 19403  002D90  51B8               	movf	_menuStatus& (0+255),w,b
 19404  002D92  A4D8               	btfss	status,2,c
 19405  002D94  D005               	goto	l19895
 19406                           
 19407                           ; BSR set to: 1
 19408                           ;menu.c: 175:                         menuStatus = CFG_MAXP;
 19409  002D96  0E04               	movlw	4
 19410  002D98  6FB8               	movwf	_menuStatus& (0+255),b
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;menu.c: 176:                         menuVal = MaxP;
 19414  002D9A  C1FB  F197         	movff	_MaxP,_menuVal
 19415  002D9E  D112               	goto	L35
 19416  002DA0                     l19895:
 19417                           
 19418                           ; BSR set to: 1
 19419  002DA0  0E04               	movlw	4
 19420  002DA2  19B8               	xorwf	_menuStatus& (0+255),w,b
 19421  002DA4  A4D8               	btfss	status,2,c
 19422  002DA6  D119               	goto	L36
 19423                           
 19424                           ; BSR set to: 1
 19425                           ;menu.c: 180:                         MaxP = menuVal;
 19426  002DA8  C197  F1FB         	movff	_menuVal,_MaxP
 19427                           
 19428                           ; BSR set to: 1
 19429                           ;menu.c: 181:                         chMaxP = 1;
 19430  002DAC  0E01               	movlw	1
 19431  002DAE  0100               	movlb	0	; () banked
 19432  002DB0  6FC3               	movwf	_chMaxP& (0+255),b
 19433  002DB2  D113               	goto	L36
 19434  002DB4                     l19903:
 19435                           
 19436                           ; BSR set to: 1
 19437                           ;menu.c: 189:                     if (menuStatus == CFG_IDLE) {
 19438  002DB4  51B8               	movf	_menuStatus& (0+255),w,b
 19439  002DB6  A4D8               	btfss	status,2,c
 19440  002DB8  D045               	goto	l19927
 19441                           
 19442                           ; BSR set to: 1
 19443                           ;menu.c: 190:                         menuStatus = CFG_MAXV;
 19444  002DBA  0E05               	movlw	5
 19445  002DBC  6FB8               	movwf	_menuStatus& (0+255),b
 19446                           
 19447                           ; BSR set to: 1
 19448                           ;menu.c: 191:                         if ((VentMode == VMODE_VOLUME)||(intMaxV==0)) {
 19449  002DBE  05F4               	decf	_VentMode& (0+255),w,b
 19450  002DC0  B4D8               	btfsc	status,2,c
 19451  002DC2  D004               	goto	u20950
 19452                           
 19453                           ; BSR set to: 1
 19454  002DC4  51ED               	movf	_intMaxV& (0+255),w,b
 19455  002DC6  11EE               	iorwf	(_intMaxV+1)& (0+255),w,b
 19456  002DC8  A4D8               	btfss	status,2,c
 19457  002DCA  D003               	goto	l19911
 19458  002DCC                     u20950:
 19459                           
 19460                           ; BSR set to: 1
 19461                           ;menu.c: 192:                             menuVal = MaxV;
 19462  002DCC  C1FA  F197         	movff	_MaxV,_menuVal
 19463  002DD0  D0F9               	goto	L35
 19464  002DD2                     l19911:
 19465                           
 19466                           ; BSR set to: 1
 19467                           ;menu.c: 194:                             menuVal = 2*((intMaxV+10)/20);
 19468  002DD2  0E0A               	movlw	10
 19469  002DD4  25ED               	addwf	_intMaxV& (0+255),w,b
 19470  002DD6  0100               	movlb	0	; () banked
 19471  002DD8  6F8B               	movwf	___awdiv@dividend& (0+255),b
 19472  002DDA  0E00               	movlw	0
 19473  002DDC  0101               	movlb	1	; () banked
 19474  002DDE  21EE               	addwfc	(_intMaxV+1)& (0+255),w,b
 19475  002DE0  0100               	movlb	0	; () banked
 19476  002DE2  6F8C               	movwf	(___awdiv@dividend+1)& (0+255),b
 19477  002DE4  0E00               	movlw	0
 19478  002DE6  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
 19479  002DE8  0E14               	movlw	20
 19480  002DEA  6F8D               	movwf	___awdiv@divisor& (0+255),b
 19481  002DEC  EC94  F044         	call	___awdiv	;wreg free
 19482  002DF0  90D8               	bcf	status,0,c
 19483  002DF2  358B               	rlcf	?___awdiv& (0+255),w,b
 19484  002DF4  0101               	movlb	1	; () banked
 19485  002DF6  6F97               	movwf	_menuVal& (0+255),b
 19486  002DF8  0100               	movlb	0	; () banked
 19487  002DFA  358C               	rlcf	(?___awdiv+1)& (0+255),w,b
 19488  002DFC  0101               	movlb	1	; () banked
 19489  002DFE  6F98               	movwf	(_menuVal+1)& (0+255),b
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;menu.c: 195:                             menuVal = ((menuVal > (1500/10))? (1500/10) : 
      +                          ((menuVal < (100/10))? (100/10) : menuVal));
 19493  002E00  5198               	movf	(_menuVal+1)& (0+255),w,b
 19494  002E02  E11C               	bnz	l19923
 19495  002E04  0E97               	movlw	151
 19496  002E06  5D97               	subwf	_menuVal& (0+255),w,b
 19497  002E08  B0D8               	btfsc	status,0,c
 19498  002E0A  D018               	goto	l19923
 19499                           
 19500                           ; BSR set to: 1
 19501  002E0C  5198               	movf	(_menuVal+1)& (0+255),w,b
 19502  002E0E  E104               	bnz	u20970
 19503  002E10  0E0A               	movlw	10
 19504  002E12  5D97               	subwf	_menuVal& (0+255),w,b
 19505  002E14  A0D8               	btfss	status,0,c
 19506  002E16  D007               	goto	l19919
 19507  002E18                     u20970:
 19508                           
 19509                           ; BSR set to: 1
 19510  002E18  0060  F65C  F164   	movff	_menuVal,_MenuMng$4367
 19511  002E1E  0060  F660  F165   	movff	_menuVal+1,_MenuMng$4367+1
 19512  002E24  D004               	goto	l19921
 19513  002E26                     l19919:
 19514                           
 19515                           ; BSR set to: 1
 19516  002E26  0E00               	movlw	0
 19517  002E28  6F65               	movwf	(_MenuMng$4367+1)& (0+255),b
 19518  002E2A  0E0A               	movlw	10
 19519  002E2C  6F64               	movwf	_MenuMng$4367& (0+255),b
 19520  002E2E                     l19921:
 19521                           
 19522                           ; BSR set to: 1
 19523  002E2E  0060  F590  F197   	movff	_MenuMng$4367,_menuVal
 19524  002E34  0060  F594  F198   	movff	_MenuMng$4367+1,_menuVal+1
 19525  002E3A  D6FC               	goto	l19799
 19526  002E3C                     l19923:
 19527                           
 19528                           ; BSR set to: 1
 19529  002E3C  0E00               	movlw	0
 19530  002E3E  6F98               	movwf	(_menuVal+1)& (0+255),b
 19531  002E40  0E96               	movlw	150
 19532  002E42  D6F7               	goto	L22
 19533  002E44                     l19927:
 19534                           
 19535                           ; BSR set to: 1
 19536  002E44  0E05               	movlw	5
 19537  002E46  19B8               	xorwf	_menuStatus& (0+255),w,b
 19538  002E48  A4D8               	btfss	status,2,c
 19539  002E4A  D0C7               	goto	L36
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;menu.c: 202:             HighVAlarm = ((HighVAlarm + (menuVal - MaxV) > (1500/10))? (15
      +                          00/10) : ((HighVAlarm + (menuVal - MaxV) < (100/10))? (100/10) : HighVAlarm + (menuVal -
      +                           MaxV)));
 19543  002E4C  51FA               	movf	_MaxV& (0+255),w,b
 19544  002E4E  0060  F7E4  F160   	movff	_HighVAlarm,??_MenuMng
 19545  002E54  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19546  002E56  5F60               	subwf	??_MenuMng& (0+255),f,b
 19547  002E58  0E00               	movlw	0
 19548  002E5A  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19549  002E5C  5197               	movf	_menuVal& (0+255),w,b
 19550  002E5E  2760               	addwf	??_MenuMng& (0+255),f,b
 19551  002E60  5198               	movf	(_menuVal+1)& (0+255),w,b
 19552  002E62  2361               	addwfc	(??_MenuMng+1)& (0+255),f,b
 19553  002E64  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19554  002E66  E130               	bnz	l19939
 19555  002E68  0E97               	movlw	151
 19556  002E6A  5D60               	subwf	??_MenuMng& (0+255),w,b
 19557  002E6C  B0D8               	btfsc	status,0,c
 19558  002E6E  D02C               	goto	l19939
 19559                           
 19560                           ; BSR set to: 1
 19561  002E70  51FA               	movf	_MaxV& (0+255),w,b
 19562  002E72  0060  F7E4  F160   	movff	_HighVAlarm,??_MenuMng
 19563  002E78  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19564  002E7A  5F60               	subwf	??_MenuMng& (0+255),f,b
 19565  002E7C  0E00               	movlw	0
 19566  002E7E  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19567  002E80  5197               	movf	_menuVal& (0+255),w,b
 19568  002E82  2760               	addwf	??_MenuMng& (0+255),f,b
 19569  002E84  5198               	movf	(_menuVal+1)& (0+255),w,b
 19570  002E86  2361               	addwfc	(??_MenuMng+1)& (0+255),f,b
 19571  002E88  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19572  002E8A  E104               	bnz	u21000
 19573  002E8C  0E0A               	movlw	10
 19574  002E8E  5D60               	subwf	??_MenuMng& (0+255),w,b
 19575  002E90  A0D8               	btfss	status,0,c
 19576  002E92  D00F               	goto	l19935
 19577  002E94                     u21000:
 19578                           
 19579                           ; BSR set to: 1
 19580  002E94  51FA               	movf	_MaxV& (0+255),w,b
 19581  002E96  0060  F7E4  F160   	movff	_HighVAlarm,??_MenuMng
 19582  002E9C  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19583  002E9E  5F60               	subwf	??_MenuMng& (0+255),f,b
 19584  002EA0  0E00               	movlw	0
 19585  002EA2  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19586  002EA4  5197               	movf	_menuVal& (0+255),w,b
 19587  002EA6  2560               	addwf	??_MenuMng& (0+255),w,b
 19588  002EA8  6F68               	movwf	_MenuMng$4369& (0+255),b
 19589  002EAA  5198               	movf	(_menuVal+1)& (0+255),w,b
 19590  002EAC  2161               	addwfc	(??_MenuMng+1)& (0+255),w,b
 19591  002EAE  6F69               	movwf	(_MenuMng$4369+1)& (0+255),b
 19592  002EB0  D004               	goto	l19937
 19593  002EB2                     l19935:
 19594                           
 19595                           ; BSR set to: 1
 19596  002EB2  0E00               	movlw	0
 19597  002EB4  6F69               	movwf	(_MenuMng$4369+1)& (0+255),b
 19598  002EB6  0E0A               	movlw	10
 19599  002EB8  6F68               	movwf	_MenuMng$4369& (0+255),b
 19600  002EBA                     l19937:
 19601                           
 19602                           ; BSR set to: 1
 19603  002EBA  0060  F5A0  F166   	movff	_MenuMng$4369,_MenuMng$4368
 19604  002EC0  0060  F5A4  F167   	movff	_MenuMng$4369+1,_MenuMng$4368+1
 19605  002EC6  D004               	goto	l19941
 19606  002EC8                     l19939:
 19607                           
 19608                           ; BSR set to: 1
 19609  002EC8  0E00               	movlw	0
 19610  002ECA  6F67               	movwf	(_MenuMng$4368+1)& (0+255),b
 19611  002ECC  0E96               	movlw	150
 19612  002ECE  6F66               	movwf	_MenuMng$4368& (0+255),b
 19613  002ED0                     l19941:
 19614                           
 19615                           ; BSR set to: 1
 19616  002ED0  0060  F598  F1F9   	movff	_MenuMng$4368,_HighVAlarm
 19617                           
 19618                           ; BSR set to: 1
 19619                           ;menu.c: 203:           LowVAlarm = ((LowVAlarm + (menuVal - MaxV) > (1500/10))? (1500/1
      +                          0) : ((LowVAlarm + (menuVal - MaxV) < (100/10))? (100/10) : LowVAlarm + (menuVal - MaxV)
      +                          ));
 19620  002ED6  51FA               	movf	_MaxV& (0+255),w,b
 19621  002ED8  0060  F7CC  F160   	movff	_LowVAlarm,??_MenuMng
 19622  002EDE  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19623  002EE0  5F60               	subwf	??_MenuMng& (0+255),f,b
 19624  002EE2  0E00               	movlw	0
 19625  002EE4  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19626  002EE6  5197               	movf	_menuVal& (0+255),w,b
 19627  002EE8  2760               	addwf	??_MenuMng& (0+255),f,b
 19628  002EEA  5198               	movf	(_menuVal+1)& (0+255),w,b
 19629  002EEC  2361               	addwfc	(??_MenuMng+1)& (0+255),f,b
 19630  002EEE  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19631  002EF0  E130               	bnz	l19953
 19632  002EF2  0E97               	movlw	151
 19633  002EF4  5D60               	subwf	??_MenuMng& (0+255),w,b
 19634  002EF6  B0D8               	btfsc	status,0,c
 19635  002EF8  D02C               	goto	l19953
 19636                           
 19637                           ; BSR set to: 1
 19638  002EFA  51FA               	movf	_MaxV& (0+255),w,b
 19639  002EFC  0060  F7CC  F160   	movff	_LowVAlarm,??_MenuMng
 19640  002F02  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19641  002F04  5F60               	subwf	??_MenuMng& (0+255),f,b
 19642  002F06  0E00               	movlw	0
 19643  002F08  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19644  002F0A  5197               	movf	_menuVal& (0+255),w,b
 19645  002F0C  2760               	addwf	??_MenuMng& (0+255),f,b
 19646  002F0E  5198               	movf	(_menuVal+1)& (0+255),w,b
 19647  002F10  2361               	addwfc	(??_MenuMng+1)& (0+255),f,b
 19648  002F12  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19649  002F14  E104               	bnz	u21020
 19650  002F16  0E0A               	movlw	10
 19651  002F18  5D60               	subwf	??_MenuMng& (0+255),w,b
 19652  002F1A  A0D8               	btfss	status,0,c
 19653  002F1C  D00F               	goto	l19949
 19654  002F1E                     u21020:
 19655                           
 19656                           ; BSR set to: 1
 19657  002F1E  51FA               	movf	_MaxV& (0+255),w,b
 19658  002F20  0060  F7CC  F160   	movff	_LowVAlarm,??_MenuMng
 19659  002F26  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19660  002F28  5F60               	subwf	??_MenuMng& (0+255),f,b
 19661  002F2A  0E00               	movlw	0
 19662  002F2C  5B61               	subwfb	(??_MenuMng+1)& (0+255),f,b
 19663  002F2E  5197               	movf	_menuVal& (0+255),w,b
 19664  002F30  2560               	addwf	??_MenuMng& (0+255),w,b
 19665  002F32  6F6C               	movwf	_MenuMng$4371& (0+255),b
 19666  002F34  5198               	movf	(_menuVal+1)& (0+255),w,b
 19667  002F36  2161               	addwfc	(??_MenuMng+1)& (0+255),w,b
 19668  002F38  6F6D               	movwf	(_MenuMng$4371+1)& (0+255),b
 19669  002F3A  D004               	goto	l19951
 19670  002F3C                     l19949:
 19671                           
 19672                           ; BSR set to: 1
 19673  002F3C  0E00               	movlw	0
 19674  002F3E  6F6D               	movwf	(_MenuMng$4371+1)& (0+255),b
 19675  002F40  0E0A               	movlw	10
 19676  002F42  6F6C               	movwf	_MenuMng$4371& (0+255),b
 19677  002F44                     l19951:
 19678                           
 19679                           ; BSR set to: 1
 19680  002F44  0060  F5B0  F16A   	movff	_MenuMng$4371,_MenuMng$4370
 19681  002F4A  0060  F5B4  F16B   	movff	_MenuMng$4371+1,_MenuMng$4370+1
 19682  002F50  D004               	goto	l19955
 19683  002F52                     l19953:
 19684                           
 19685                           ; BSR set to: 1
 19686  002F52  0E00               	movlw	0
 19687  002F54  6F6B               	movwf	(_MenuMng$4370+1)& (0+255),b
 19688  002F56  0E96               	movlw	150
 19689  002F58  6F6A               	movwf	_MenuMng$4370& (0+255),b
 19690  002F5A                     l19955:
 19691                           
 19692                           ; BSR set to: 1
 19693  002F5A  0060  F5A8  F1F3   	movff	_MenuMng$4370,_LowVAlarm
 19694                           
 19695                           ; BSR set to: 1
 19696                           ;menu.c: 204:                         MaxV = menuVal;
 19697  002F60  C197  F1FA         	movff	_menuVal,_MaxV
 19698                           
 19699                           ;menu.c: 205:                         chHighVAlarm = 1;
 19700  002F64  0E01               	movlw	1
 19701  002F66  0100               	movlb	0	; () banked
 19702  002F68  6FC0               	movwf	_chHighVAlarm& (0+255),b
 19703                           
 19704                           ;menu.c: 206:                         chLowVAlarm = 1;
 19705  002F6A  0E01               	movlw	1
 19706  002F6C  6FC1               	movwf	_chLowVAlarm& (0+255),b
 19707                           
 19708                           ;menu.c: 207:                         chMaxV = 1;
 19709  002F6E  0E01               	movlw	1
 19710  002F70  6FBF               	movwf	_chMaxV& (0+255),b
 19711                           
 19712                           ;menu.c: 208:                         if (VentMode == VMODE_PRESSURE) {
 19713  002F72  0101               	movlb	1	; () banked
 19714  002F74  51F4               	movf	_VentMode& (0+255),w,b
 19715  002F76  A4D8               	btfss	status,2,c
 19716  002F78  D030               	goto	L36
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;menu.c: 209:                             VentMode = VMODE_VOLUME;
 19720  002F7A  0E01               	movlw	1
 19721  002F7C  6FF4               	movwf	_VentMode& (0+255),b
 19722                           
 19723                           ;menu.c: 210:                             chVentMode = 1;
 19724  002F7E  0E01               	movlw	1
 19725  002F80  0102               	movlb	2	; () banked
 19726  002F82  6F55               	movwf	_chVentMode& (0+255),b
 19727                           
 19728                           ;menu.c: 212:                             MaxP = 35;
 19729  002F84  0E23               	movlw	35
 19730  002F86  0101               	movlb	1	; () banked
 19731  002F88  6FFB               	movwf	_MaxP& (0+255),b
 19732                           
 19733                           ;menu.c: 213:                             chMaxP = 1;
 19734  002F8A  0E01               	movlw	1
 19735  002F8C  0100               	movlb	0	; () banked
 19736  002F8E  6FC3               	movwf	_chMaxP& (0+255),b
 19737  002F90  D024               	goto	L36
 19738  002F92                     l19963:
 19739                           
 19740                           ; BSR set to: 1
 19741                           ;menu.c: 222:                     if (menuStatus == CFG_IDLE) {
 19742  002F92  51B8               	movf	_menuStatus& (0+255),w,b
 19743  002F94  A4D8               	btfss	status,2,c
 19744  002F96  D005               	goto	l19971
 19745                           
 19746                           ; BSR set to: 1
 19747                           ;menu.c: 223:                         menuStatus = CFG_HIGHVA;
 19748  002F98  0E07               	movlw	7
 19749  002F9A  6FB8               	movwf	_menuStatus& (0+255),b
 19750                           
 19751                           ; BSR set to: 1
 19752                           ;menu.c: 224:                         menuVal = HighVAlarm;
 19753  002F9C  C1F9  F197         	movff	_HighVAlarm,_menuVal
 19754  002FA0  D011               	goto	L35
 19755  002FA2                     l19971:
 19756                           
 19757                           ; BSR set to: 1
 19758  002FA2  0E07               	movlw	7
 19759  002FA4  19B8               	xorwf	_menuStatus& (0+255),w,b
 19760  002FA6  A4D8               	btfss	status,2,c
 19761  002FA8  D018               	goto	L36
 19762                           
 19763                           ; BSR set to: 1
 19764                           ;menu.c: 228:                         HighVAlarm = menuVal;
 19765  002FAA  C197  F1F9         	movff	_menuVal,_HighVAlarm
 19766                           
 19767                           ; BSR set to: 1
 19768                           ;menu.c: 229:                         chHighVAlarm = 1;
 19769  002FAE  0E01               	movlw	1
 19770  002FB0  0100               	movlb	0	; () banked
 19771  002FB2  6FC0               	movwf	_chHighVAlarm& (0+255),b
 19772  002FB4  D012               	goto	L36
 19773  002FB6                     l19979:
 19774                           
 19775                           ; BSR set to: 1
 19776                           ;menu.c: 237:                     if (menuStatus == CFG_IDLE) {
 19777  002FB6  51B8               	movf	_menuStatus& (0+255),w,b
 19778  002FB8  A4D8               	btfss	status,2,c
 19779  002FBA  D006               	goto	l19987
 19780                           
 19781                           ; BSR set to: 1
 19782                           ;menu.c: 238:                         menuStatus = CFG_LOWVA;
 19783  002FBC  0E06               	movlw	6
 19784  002FBE  6FB8               	movwf	_menuStatus& (0+255),b
 19785                           
 19786                           ; BSR set to: 1
 19787                           ;menu.c: 239:                         menuVal = LowVAlarm;
 19788  002FC0  C1F3  F197         	movff	_LowVAlarm,_menuVal
 19789  002FC4                     L35:
 19790  002FC4  6B98               	clrf	(_menuVal+1)& (0+255),b
 19791  002FC6  D636               	goto	l19799
 19792  002FC8                     l19987:
 19793                           
 19794                           ; BSR set to: 1
 19795  002FC8  0E06               	movlw	6
 19796  002FCA  19B8               	xorwf	_menuStatus& (0+255),w,b
 19797  002FCC  A4D8               	btfss	status,2,c
 19798  002FCE  D005               	goto	L36
 19799                           
 19800                           ; BSR set to: 1
 19801                           ;menu.c: 243:                         LowVAlarm = menuVal;
 19802  002FD0  C197  F1F3         	movff	_menuVal,_LowVAlarm
 19803                           
 19804                           ; BSR set to: 1
 19805                           ;menu.c: 244:                         chLowVAlarm = 1;
 19806  002FD4  0E01               	movlw	1
 19807  002FD6  0100               	movlb	0	; () banked
 19808  002FD8  6FC1               	movwf	_chLowVAlarm& (0+255),b
 19809  002FDA                     L36:
 19810                           
 19811                           ;menu.c: 245:                         menuStatus = CFG_IDLE;
 19812  002FDA  0E00               	movlw	0
 19813  002FDC  0101               	movlb	1	; () banked
 19814  002FDE  6FB8               	movwf	_menuStatus& (0+255),b
 19815                           
 19816                           ;menu.c: 246:                     } else {
 19817  002FE0  D21D               	goto	l20125
 19818  002FE2                     l19995:
 19819                           
 19820                           ; BSR set to: 1
 19821                           ;menu.c: 252:                     if (menuStatus != CFG_IDLE) {
 19822  002FE2  51B8               	movf	_menuStatus& (0+255),w,b
 19823  002FE4  B4D8               	btfsc	status,2,c
 19824  002FE6  D21A               	goto	l20125
 19825                           
 19826                           ; BSR set to: 1
 19827                           ;menu.c: 253:                         menuTstamp = timeGet();
 19828  002FE8  ECD5  F052         	call	_timeGet	;wreg free
 19829  002FEC  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19830  002FF2  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19831                           
 19832                           ;menu.c: 255:                         switch (menuStatus) {
 19833  002FF8  D0C0               	goto	l20053
 19834  002FFA                     l19999:
 19835                           
 19836                           ; BSR set to: 1
 19837                           ;menu.c: 257:                                 menuVal = menuVal + 1;
 19838  002FFA  0E01               	movlw	1
 19839  002FFC  2597               	addwf	_menuVal& (0+255),w,b
 19840  002FFE  6F97               	movwf	_menuVal& (0+255),b
 19841  003000  0E00               	movlw	0
 19842  003002  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19843  003004  6F98               	movwf	(_menuVal+1)& (0+255),b
 19844                           
 19845                           ;menu.c: 258:                                 if (menuVal > 60) {
 19846  003006  5198               	movf	(_menuVal+1)& (0+255),w,b
 19847  003008  E104               	bnz	u21090
 19848  00300A  0E3D               	movlw	61
 19849  00300C  5D97               	subwf	_menuVal& (0+255),w,b
 19850  00300E  A0D8               	btfss	status,0,c
 19851  003010  D205               	goto	l20125
 19852  003012                     u21090:
 19853  003012                     l20001:
 19854                           
 19855                           ; BSR set to: 1
 19856                           ;menu.c: 259:                                     menuVal = 60;
 19857  003012  0E00               	movlw	0
 19858  003014  6F98               	movwf	(_menuVal+1)& (0+255),b
 19859  003016  0E3C               	movlw	60
 19860  003018  D130               	goto	L44
 19861  00301A                     l20003:
 19862                           
 19863                           ; BSR set to: 1
 19864                           ;menu.c: 263:                                 menuVal = menuVal + 1;
 19865  00301A  0E01               	movlw	1
 19866  00301C  2597               	addwf	_menuVal& (0+255),w,b
 19867  00301E  6F97               	movwf	_menuVal& (0+255),b
 19868  003020  0E00               	movlw	0
 19869  003022  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19870  003024  6F98               	movwf	(_menuVal+1)& (0+255),b
 19871                           
 19872                           ;menu.c: 264:                                 if (menuVal > 60) {
 19873  003026  5198               	movf	(_menuVal+1)& (0+255),w,b
 19874  003028  E1F4               	bnz	l20001
 19875  00302A  0E3D               	movlw	61
 19876  00302C  5D97               	subwf	_menuVal& (0+255),w,b
 19877  00302E  B0D8               	btfsc	status,0,c
 19878  003030  D7F0               	goto	u21090
 19879  003032  D1F4               	goto	l20125
 19880  003034                     l20007:
 19881                           
 19882                           ; BSR set to: 1
 19883                           ;menu.c: 269:                                 menuVal = menuVal + 1;
 19884  003034  0E01               	movlw	1
 19885  003036  2597               	addwf	_menuVal& (0+255),w,b
 19886  003038  6F97               	movwf	_menuVal& (0+255),b
 19887  00303A  0E00               	movlw	0
 19888  00303C  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19889  00303E  6F98               	movwf	(_menuVal+1)& (0+255),b
 19890                           
 19891                           ;menu.c: 270:                                 if (menuVal > 25) {
 19892  003040  5198               	movf	(_menuVal+1)& (0+255),w,b
 19893  003042  E104               	bnz	u21110
 19894  003044  0E1A               	movlw	26
 19895  003046  5D97               	subwf	_menuVal& (0+255),w,b
 19896  003048  A0D8               	btfss	status,0,c
 19897  00304A  D004               	goto	l2515
 19898  00304C                     u21110:
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;menu.c: 271:                                     menuVal = 25;
 19902  00304C  0E00               	movlw	0
 19903  00304E  6F98               	movwf	(_menuVal+1)& (0+255),b
 19904  003050  0E19               	movlw	25
 19905  003052  6F97               	movwf	_menuVal& (0+255),b
 19906  003054                     l2515:
 19907                           
 19908                           ; BSR set to: 1
 19909                           ;menu.c: 273:                                 if ((VentMode == VMODE_PRESSURE) && (menuV
      +                          al > IP)) {
 19910  003054  51F4               	movf	_VentMode& (0+255),w,b
 19911  003056  A4D8               	btfss	status,2,c
 19912  003058  D00C               	goto	l20015
 19913                           
 19914                           ; BSR set to: 1
 19915  00305A  51F7               	movf	_IP& (0+255),w,b
 19916  00305C  6F60               	movwf	??_MenuMng& (0+255),b
 19917  00305E  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19918  003060  5197               	movf	_menuVal& (0+255),w,b
 19919  003062  5D60               	subwf	??_MenuMng& (0+255),w,b
 19920  003064  5198               	movf	(_menuVal+1)& (0+255),w,b
 19921  003066  5961               	subwfb	(??_MenuMng+1)& (0+255),w,b
 19922  003068  B0D8               	btfsc	status,0,c
 19923  00306A  D003               	goto	l20015
 19924  00306C                     u21130:
 19925                           
 19926                           ; BSR set to: 1
 19927                           ;menu.c: 274:                                     menuVal = IP;
 19928  00306C  C1F7  F197         	movff	_IP,_menuVal
 19929  003070  D0C0               	goto	L39
 19930  003072                     l20015:
 19931                           
 19932                           ; BSR set to: 1
 19933  003072  51FB               	movf	_MaxP& (0+255),w,b
 19934  003074  6F60               	movwf	??_MenuMng& (0+255),b
 19935  003076  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19936  003078  5197               	movf	_menuVal& (0+255),w,b
 19937  00307A  5D60               	subwf	??_MenuMng& (0+255),w,b
 19938  00307C  5198               	movf	(_menuVal+1)& (0+255),w,b
 19939  00307E  5961               	subwfb	(??_MenuMng+1)& (0+255),w,b
 19940  003080  B0D8               	btfsc	status,0,c
 19941  003082  D1CC               	goto	l20125
 19942                           
 19943                           ; BSR set to: 1
 19944                           ;menu.c: 276:                                     menuVal = MaxP;
 19945  003084  C1FB  F197         	movff	_MaxP,_menuVal
 19946  003088  D0B4               	goto	L39
 19947  00308A                     l20019:
 19948                           
 19949                           ; BSR set to: 1
 19950                           ;menu.c: 280:                                 menuVal = menuVal + 1;
 19951  00308A  0E01               	movlw	1
 19952  00308C  2597               	addwf	_menuVal& (0+255),w,b
 19953  00308E  6F97               	movwf	_menuVal& (0+255),b
 19954  003090  0E00               	movlw	0
 19955  003092  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19956  003094  6F98               	movwf	(_menuVal+1)& (0+255),b
 19957                           
 19958                           ;menu.c: 281:                                 if (menuVal > 30) {
 19959  003096  5198               	movf	(_menuVal+1)& (0+255),w,b
 19960  003098  E104               	bnz	u21150
 19961  00309A  0E1F               	movlw	31
 19962  00309C  5D97               	subwf	_menuVal& (0+255),w,b
 19963  00309E  A0D8               	btfss	status,0,c
 19964  0030A0  D1BD               	goto	l20125
 19965  0030A2                     u21150:
 19966                           
 19967                           ; BSR set to: 1
 19968                           ;menu.c: 282:                                     menuVal = 30;
 19969  0030A2  0E00               	movlw	0
 19970  0030A4  6F98               	movwf	(_menuVal+1)& (0+255),b
 19971  0030A6  0E1E               	movlw	30
 19972  0030A8  D0E8               	goto	L44
 19973  0030AA                     l20023:
 19974                           
 19975                           ; BSR set to: 1
 19976                           ;menu.c: 286:                                 menuVal = menuVal + 1;
 19977  0030AA  0E01               	movlw	1
 19978  0030AC  2597               	addwf	_menuVal& (0+255),w,b
 19979  0030AE  6F97               	movwf	_menuVal& (0+255),b
 19980  0030B0  0E00               	movlw	0
 19981  0030B2  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 19982  0030B4  6F98               	movwf	(_menuVal+1)& (0+255),b
 19983                           
 19984                           ;menu.c: 287:                                 if (menuVal > 8) {
 19985  0030B6  5198               	movf	(_menuVal+1)& (0+255),w,b
 19986  0030B8  E104               	bnz	u21160
 19987  0030BA  0E09               	movlw	9
 19988  0030BC  5D97               	subwf	_menuVal& (0+255),w,b
 19989  0030BE  A0D8               	btfss	status,0,c
 19990  0030C0  D1AD               	goto	l20125
 19991  0030C2                     u21160:
 19992                           
 19993                           ; BSR set to: 1
 19994                           ;menu.c: 288:                                     menuVal = 8;
 19995  0030C2  0E00               	movlw	0
 19996  0030C4  6F98               	movwf	(_menuVal+1)& (0+255),b
 19997  0030C6  0E08               	movlw	8
 19998  0030C8  D0D8               	goto	L44
 19999  0030CA                     l20027:
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;menu.c: 292:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (100/10))? (100/10) : menuVal + 2));
 20003  0030CA  0E02               	movlw	2
 20004  0030CC  2597               	addwf	_menuVal& (0+255),w,b
 20005  0030CE  6F60               	movwf	??_MenuMng& (0+255),b
 20006  0030D0  0E00               	movlw	0
 20007  0030D2  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20008  0030D4  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20009  0030D6  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20010  0030D8  E122               	bnz	l20037
 20011  0030DA  0E97               	movlw	151
 20012  0030DC  5D60               	subwf	??_MenuMng& (0+255),w,b
 20013  0030DE  B0D8               	btfsc	status,0,c
 20014  0030E0  D01E               	goto	l20037
 20015                           
 20016                           ; BSR set to: 1
 20017  0030E2  0E02               	movlw	2
 20018  0030E4  2597               	addwf	_menuVal& (0+255),w,b
 20019  0030E6  6F60               	movwf	??_MenuMng& (0+255),b
 20020  0030E8  0E00               	movlw	0
 20021  0030EA  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20022  0030EC  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20023  0030EE  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20024  0030F0  E104               	bnz	u21180
 20025  0030F2  0E0A               	movlw	10
 20026  0030F4  5D60               	subwf	??_MenuMng& (0+255),w,b
 20027  0030F6  A0D8               	btfss	status,0,c
 20028  0030F8  D007               	goto	l20033
 20029  0030FA                     u21180:
 20030                           
 20031                           ; BSR set to: 1
 20032  0030FA  0E02               	movlw	2
 20033  0030FC  2597               	addwf	_menuVal& (0+255),w,b
 20034  0030FE  6F6E               	movwf	_MenuMng$4372& (0+255),b
 20035  003100  0E00               	movlw	0
 20036  003102  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20037  003104  6F6F               	movwf	(_MenuMng$4372+1)& (0+255),b
 20038  003106  D004               	goto	l20035
 20039  003108                     l20033:
 20040                           
 20041                           ; BSR set to: 1
 20042  003108  0E00               	movlw	0
 20043  00310A  6F6F               	movwf	(_MenuMng$4372+1)& (0+255),b
 20044  00310C  0E0A               	movlw	10
 20045  00310E  6F6E               	movwf	_MenuMng$4372& (0+255),b
 20046  003110                     l20035:
 20047                           
 20048                           ; BSR set to: 1
 20049  003110  0060  F5B8  F197   	movff	_MenuMng$4372,_menuVal
 20050  003116  0060  F5BC  F198   	movff	_MenuMng$4372+1,_menuVal+1
 20051  00311C  D17F               	goto	l20125
 20052  00311E                     l20037:
 20053                           
 20054                           ; BSR set to: 1
 20055  00311E  0E00               	movlw	0
 20056  003120  6F98               	movwf	(_menuVal+1)& (0+255),b
 20057  003122  0E96               	movlw	150
 20058  003124  D0AA               	goto	L44
 20059  003126                     l20039:
 20060                           
 20061                           ; BSR set to: 1
 20062                           ;menu.c: 296:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (50/10))? (50/10) : menuVal + 2));
 20063  003126  0E02               	movlw	2
 20064  003128  2597               	addwf	_menuVal& (0+255),w,b
 20065  00312A  6F60               	movwf	??_MenuMng& (0+255),b
 20066  00312C  0E00               	movlw	0
 20067  00312E  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20068  003130  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20069  003132  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20070  003134  E1F4               	bnz	l20037
 20071  003136  0E97               	movlw	151
 20072  003138  5D60               	subwf	??_MenuMng& (0+255),w,b
 20073  00313A  B0D8               	btfsc	status,0,c
 20074  00313C  D7F0               	goto	l20037
 20075                           
 20076                           ; BSR set to: 1
 20077  00313E  0E02               	movlw	2
 20078  003140  2597               	addwf	_menuVal& (0+255),w,b
 20079  003142  6F60               	movwf	??_MenuMng& (0+255),b
 20080  003144  0E00               	movlw	0
 20081  003146  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20082  003148  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20083  00314A  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20084  00314C  E104               	bnz	u21200
 20085  00314E  0E05               	movlw	5
 20086  003150  5D60               	subwf	??_MenuMng& (0+255),w,b
 20087  003152  A0D8               	btfss	status,0,c
 20088  003154  D007               	goto	l20045
 20089  003156                     u21200:
 20090                           
 20091                           ; BSR set to: 1
 20092  003156  0E02               	movlw	2
 20093  003158  2597               	addwf	_menuVal& (0+255),w,b
 20094  00315A  6F70               	movwf	_MenuMng$4373& (0+255),b
 20095  00315C  0E00               	movlw	0
 20096  00315E  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20097  003160  6F71               	movwf	(_MenuMng$4373+1)& (0+255),b
 20098  003162  D004               	goto	l20047
 20099  003164                     l20045:
 20100                           
 20101                           ; BSR set to: 1
 20102  003164  0E00               	movlw	0
 20103  003166  6F71               	movwf	(_MenuMng$4373+1)& (0+255),b
 20104  003168  0E05               	movlw	5
 20105  00316A  6F70               	movwf	_MenuMng$4373& (0+255),b
 20106  00316C                     l20047:
 20107                           
 20108                           ; BSR set to: 1
 20109  00316C  0060  F5C0  F197   	movff	_MenuMng$4373,_menuVal
 20110  003172  0060  F5C4  F198   	movff	_MenuMng$4373+1,_menuVal+1
 20111  003178  D151               	goto	l20125
 20112  00317A                     l20053:
 20113                           
 20114                           ; BSR set to: 0
 20115  00317A  0101               	movlb	1	; () banked
 20116  00317C  51B8               	movf	_menuStatus& (0+255),w,b
 20117  00317E  6F60               	movwf	??_MenuMng& (0+255),b
 20118  003180  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 20119                           
 20120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20121                           ; Switch size 1, requested type "simple"
 20122                           ; Number of cases is 1, Range of values is 0 to 0
 20123                           ; switch strategies available:
 20124                           ; Name         Instructions Cycles
 20125                           ; simple_byte            4     3 (average)
 20126                           ;	Chosen strategy is simple_byte
 20127  003182  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20128  003184  0A00               	xorlw	0	; case 0
 20129  003186  A4D8               	btfss	status,2,c
 20130  003188  D149               	goto	l20125
 20131                           
 20132                           ; BSR set to: 1
 20133                           ; Switch size 1, requested type "simple"
 20134                           ; Number of cases is 8, Range of values is 1 to 11
 20135                           ; switch strategies available:
 20136                           ; Name         Instructions Cycles
 20137                           ; simple_byte           25    13 (average)
 20138                           ;	Chosen strategy is simple_byte
 20139  00318A  5160               	movf	??_MenuMng& (0+255),w,b
 20140  00318C  0A01               	xorlw	1	; case 1
 20141  00318E  B4D8               	btfsc	status,2,c
 20142  003190  D734               	goto	l19999
 20143  003192  0A03               	xorlw	3	; case 2
 20144  003194  B4D8               	btfsc	status,2,c
 20145  003196  D779               	goto	l20019
 20146  003198  0A01               	xorlw	1	; case 3
 20147  00319A  B4D8               	btfsc	status,2,c
 20148  00319C  D74B               	goto	l20007
 20149  00319E  0A07               	xorlw	7	; case 4
 20150  0031A0  B4D8               	btfsc	status,2,c
 20151  0031A2  D73B               	goto	l20003
 20152  0031A4  0A01               	xorlw	1	; case 5
 20153  0031A6  B4D8               	btfsc	status,2,c
 20154  0031A8  D790               	goto	l20027
 20155  0031AA  0A03               	xorlw	3	; case 6
 20156  0031AC  B4D8               	btfsc	status,2,c
 20157  0031AE  D7BB               	goto	l20039
 20158  0031B0  0A01               	xorlw	1	; case 7
 20159  0031B2  B4D8               	btfsc	status,2,c
 20160  0031B4  D7B8               	goto	l20039
 20161  0031B6  0A0C               	xorlw	12	; case 11
 20162  0031B8  B4D8               	btfsc	status,2,c
 20163  0031BA  D777               	goto	l20023
 20164  0031BC  D12F               	goto	l20125
 20165  0031BE                     l20055:
 20166                           
 20167                           ; BSR set to: 1
 20168                           ;menu.c: 305:                     if (menuStatus != CFG_IDLE) {
 20169  0031BE  51B8               	movf	_menuStatus& (0+255),w,b
 20170  0031C0  B4D8               	btfsc	status,2,c
 20171  0031C2  D12C               	goto	l20125
 20172                           
 20173                           ; BSR set to: 1
 20174                           ;menu.c: 306:                         menuTstamp = timeGet();
 20175  0031C4  ECD5  F052         	call	_timeGet	;wreg free
 20176  0031C8  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 20177  0031CE  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 20178                           
 20179                           ;menu.c: 308:                         switch (menuStatus) {
 20180  0031D4  D0C8               	goto	l20113
 20181  0031D6                     l20059:
 20182                           
 20183                           ; BSR set to: 1
 20184                           ;menu.c: 311:                                 menuVal = menuVal - 1;
 20185  0031D6  0EFF               	movlw	255
 20186  0031D8  2597               	addwf	_menuVal& (0+255),w,b
 20187  0031DA  6F97               	movwf	_menuVal& (0+255),b
 20188  0031DC  0EFF               	movlw	255
 20189  0031DE  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20190  0031E0  6F98               	movwf	(_menuVal+1)& (0+255),b
 20191                           
 20192                           ;menu.c: 312:                                 if (menuVal < PEEP) {
 20193  0031E2  51F6               	movf	_PEEP& (0+255),w,b
 20194  0031E4  5D97               	subwf	_menuVal& (0+255),w,b
 20195  0031E6  0E00               	movlw	0
 20196  0031E8  5998               	subwfb	(_menuVal+1)& (0+255),w,b
 20197  0031EA  B0D8               	btfsc	status,0,c
 20198  0031EC  D004               	goto	l20063
 20199                           
 20200                           ; BSR set to: 1
 20201                           ;menu.c: 313:                                     menuVal = PEEP;
 20202  0031EE  C1F6  F197         	movff	_PEEP,_menuVal
 20203  0031F2                     L39:
 20204  0031F2  6B98               	clrf	(_menuVal+1)& (0+255),b
 20205                           
 20206                           ;menu.c: 314:                                 } else if (menuVal < 4) {
 20207  0031F4  D113               	goto	l20125
 20208  0031F6                     l20063:
 20209                           
 20210                           ; BSR set to: 1
 20211  0031F6  5198               	movf	(_menuVal+1)& (0+255),w,b
 20212  0031F8  E108               	bnz	l20067
 20213  0031FA  0E04               	movlw	4
 20214  0031FC  5D97               	subwf	_menuVal& (0+255),w,b
 20215  0031FE  B0D8               	btfsc	status,0,c
 20216  003200  D004               	goto	l20067
 20217  003202                     u21230:
 20218                           
 20219                           ; BSR set to: 1
 20220                           ;menu.c: 315:                                     menuVal = 4;
 20221  003202  0E00               	movlw	0
 20222  003204  6F98               	movwf	(_menuVal+1)& (0+255),b
 20223  003206  0E04               	movlw	4
 20224  003208  D038               	goto	L44
 20225  00320A                     l20067:
 20226                           
 20227                           ; BSR set to: 1
 20228  00320A  0E04               	movlw	4
 20229  00320C  19B8               	xorwf	_menuStatus& (0+255),w,b
 20230  00320E  A4D8               	btfss	status,2,c
 20231  003210  D105               	goto	l20125
 20232                           
 20233                           ; BSR set to: 1
 20234  003212  51F4               	movf	_VentMode& (0+255),w,b
 20235  003214  A4D8               	btfss	status,2,c
 20236  003216  D102               	goto	l20125
 20237                           
 20238                           ; BSR set to: 1
 20239  003218  51F7               	movf	_IP& (0+255),w,b
 20240  00321A  5D97               	subwf	_menuVal& (0+255),w,b
 20241  00321C  0E00               	movlw	0
 20242  00321E  5998               	subwfb	(_menuVal+1)& (0+255),w,b
 20243  003220  A0D8               	btfss	status,0,c
 20244  003222  D724               	goto	u21130
 20245  003224  D0FB               	goto	l20125
 20246  003226                     l20075:
 20247                           
 20248                           ; BSR set to: 1
 20249                           ;menu.c: 321:                                 menuVal = menuVal - 1;
 20250  003226  0EFF               	movlw	255
 20251  003228  2597               	addwf	_menuVal& (0+255),w,b
 20252  00322A  6F97               	movwf	_menuVal& (0+255),b
 20253  00322C  0EFF               	movlw	255
 20254  00322E  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20255  003230  6F98               	movwf	(_menuVal+1)& (0+255),b
 20256                           
 20257                           ;menu.c: 322:                                 if (menuVal < 4) {
 20258  003232  5198               	movf	(_menuVal+1)& (0+255),w,b
 20259  003234  E104               	bnz	u21271
 20260  003236  0E04               	movlw	4
 20261  003238  5D97               	subwf	_menuVal& (0+255),w,b
 20262  00323A  A0D8               	btfss	status,0,c
 20263  00323C  D7E2               	goto	u21230
 20264  00323E                     u21271:
 20265  00323E  D0EE               	goto	l20125
 20266  003240                     l20079:
 20267                           
 20268                           ; BSR set to: 1
 20269                           ;menu.c: 327:                                 menuVal = menuVal - 1;
 20270  003240  0EFF               	movlw	255
 20271  003242  2597               	addwf	_menuVal& (0+255),w,b
 20272  003244  6F97               	movwf	_menuVal& (0+255),b
 20273  003246  0EFF               	movlw	255
 20274  003248  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20275  00324A  6F98               	movwf	(_menuVal+1)& (0+255),b
 20276                           
 20277                           ;menu.c: 328:                                 if (menuVal < 10) {
 20278  00324C  5198               	movf	(_menuVal+1)& (0+255),w,b
 20279  00324E  E103               	bnz	u21281
 20280  003250  0E0A               	movlw	10
 20281  003252  5D97               	subwf	_menuVal& (0+255),w,b
 20282  003254  B0D8               	btfsc	status,0,c
 20283  003256                     u21281:
 20284  003256  D0E2               	goto	l20125
 20285                           
 20286                           ; BSR set to: 1
 20287                           ;menu.c: 329:                                     menuVal = 10;
 20288  003258  0E00               	movlw	0
 20289  00325A  6F98               	movwf	(_menuVal+1)& (0+255),b
 20290  00325C  0E0A               	movlw	10
 20291  00325E  D00D               	goto	L44
 20292  003260                     l20083:
 20293                           
 20294                           ; BSR set to: 1
 20295                           ;menu.c: 333:                                 menuVal = menuVal - 1;
 20296  003260  0EFF               	movlw	255
 20297  003262  2597               	addwf	_menuVal& (0+255),w,b
 20298  003264  6F97               	movwf	_menuVal& (0+255),b
 20299  003266  0EFF               	movlw	255
 20300  003268  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20301  00326A  6F98               	movwf	(_menuVal+1)& (0+255),b
 20302                           
 20303                           ;menu.c: 334:                                 if (menuVal < 1) {
 20304  00326C  5197               	movf	_menuVal& (0+255),w,b
 20305  00326E  1198               	iorwf	(_menuVal+1)& (0+255),w,b
 20306  003270  A4D8               	btfss	status,2,c
 20307  003272  D0D4               	goto	l20125
 20308                           
 20309                           ; BSR set to: 1
 20310                           ;menu.c: 335:                                     menuVal = 1;
 20311  003274  0E00               	movlw	0
 20312  003276  6F98               	movwf	(_menuVal+1)& (0+255),b
 20313  003278  0E01               	movlw	1
 20314  00327A                     L44:
 20315  00327A  6F97               	movwf	_menuVal& (0+255),b
 20316  00327C  D0CF               	goto	l20125
 20317  00327E                     l20087:
 20318                           
 20319                           ; BSR set to: 1
 20320                           ;menu.c: 339:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (100/10))? (100/10) : menuVal - 2));
 20321  00327E  0EFE               	movlw	254
 20322  003280  6F60               	movwf	??_MenuMng& (0+255),b
 20323  003282  0EFF               	movlw	255
 20324  003284  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20325  003286  0060  F65C  F162   	movff	_menuVal,??_MenuMng+2
 20326  00328C  0060  F660  F163   	movff	_menuVal+1,??_MenuMng+3
 20327  003292  5160               	movf	??_MenuMng& (0+255),w,b
 20328  003294  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20329  003296  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20330  003298  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20331  00329A  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20332  00329C  E103               	bnz	u21301
 20333  00329E  0E97               	movlw	151
 20334  0032A0  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20335  0032A2  B0D8               	btfsc	status,0,c
 20336  0032A4                     u21301:
 20337  0032A4  D73C               	goto	l20037
 20338                           
 20339                           ; BSR set to: 1
 20340  0032A6  0EFE               	movlw	254
 20341  0032A8  6F60               	movwf	??_MenuMng& (0+255),b
 20342  0032AA  0EFF               	movlw	255
 20343  0032AC  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20344  0032AE  0060  F65C  F162   	movff	_menuVal,??_MenuMng+2
 20345  0032B4  0060  F660  F163   	movff	_menuVal+1,??_MenuMng+3
 20346  0032BA  5160               	movf	??_MenuMng& (0+255),w,b
 20347  0032BC  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20348  0032BE  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20349  0032C0  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20350  0032C2  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20351  0032C4  E104               	bnz	u21310
 20352  0032C6  0E0A               	movlw	10
 20353  0032C8  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20354  0032CA  A0D8               	btfss	status,0,c
 20355  0032CC  D007               	goto	l20093
 20356  0032CE                     u21310:
 20357                           
 20358                           ; BSR set to: 1
 20359  0032CE  0EFE               	movlw	254
 20360  0032D0  2597               	addwf	_menuVal& (0+255),w,b
 20361  0032D2  6F72               	movwf	_MenuMng$4374& (0+255),b
 20362  0032D4  0EFF               	movlw	255
 20363  0032D6  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20364  0032D8  6F73               	movwf	(_MenuMng$4374+1)& (0+255),b
 20365  0032DA  D004               	goto	l20095
 20366  0032DC                     l20093:
 20367                           
 20368                           ; BSR set to: 1
 20369  0032DC  0E00               	movlw	0
 20370  0032DE  6F73               	movwf	(_MenuMng$4374+1)& (0+255),b
 20371  0032E0  0E0A               	movlw	10
 20372  0032E2  6F72               	movwf	_MenuMng$4374& (0+255),b
 20373  0032E4                     l20095:
 20374                           
 20375                           ; BSR set to: 1
 20376  0032E4  0060  F5C8  F197   	movff	_MenuMng$4374,_menuVal
 20377  0032EA  0060  F5CC  F198   	movff	_MenuMng$4374+1,_menuVal+1
 20378  0032F0  D095               	goto	l20125
 20379  0032F2                     l20099:
 20380                           
 20381                           ; BSR set to: 1
 20382                           ;menu.c: 343:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (50/10))? (50/10) : menuVal - 2));
 20383  0032F2  0EFE               	movlw	254
 20384  0032F4  6F60               	movwf	??_MenuMng& (0+255),b
 20385  0032F6  0EFF               	movlw	255
 20386  0032F8  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20387  0032FA  0060  F65C  F162   	movff	_menuVal,??_MenuMng+2
 20388  003300  0060  F660  F163   	movff	_menuVal+1,??_MenuMng+3
 20389  003306  5160               	movf	??_MenuMng& (0+255),w,b
 20390  003308  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20391  00330A  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20392  00330C  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20393  00330E  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20394  003310  E103               	bnz	u21321
 20395  003312  0E97               	movlw	151
 20396  003314  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20397  003316  B0D8               	btfsc	status,0,c
 20398  003318                     u21321:
 20399  003318  D702               	goto	l20037
 20400                           
 20401                           ; BSR set to: 1
 20402  00331A  0EFE               	movlw	254
 20403  00331C  6F60               	movwf	??_MenuMng& (0+255),b
 20404  00331E  0EFF               	movlw	255
 20405  003320  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 20406  003322  0060  F65C  F162   	movff	_menuVal,??_MenuMng+2
 20407  003328  0060  F660  F163   	movff	_menuVal+1,??_MenuMng+3
 20408  00332E  5160               	movf	??_MenuMng& (0+255),w,b
 20409  003330  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 20410  003332  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20411  003334  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 20412  003336  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 20413  003338  E104               	bnz	u21330
 20414  00333A  0E05               	movlw	5
 20415  00333C  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 20416  00333E  A0D8               	btfss	status,0,c
 20417  003340  D007               	goto	l20105
 20418  003342                     u21330:
 20419                           
 20420                           ; BSR set to: 1
 20421  003342  0EFE               	movlw	254
 20422  003344  2597               	addwf	_menuVal& (0+255),w,b
 20423  003346  6F74               	movwf	_MenuMng$4375& (0+255),b
 20424  003348  0EFF               	movlw	255
 20425  00334A  2198               	addwfc	(_menuVal+1)& (0+255),w,b
 20426  00334C  6F75               	movwf	(_MenuMng$4375+1)& (0+255),b
 20427  00334E  D004               	goto	l20107
 20428  003350                     l20105:
 20429                           
 20430                           ; BSR set to: 1
 20431  003350  0E00               	movlw	0
 20432  003352  6F75               	movwf	(_MenuMng$4375+1)& (0+255),b
 20433  003354  0E05               	movlw	5
 20434  003356  6F74               	movwf	_MenuMng$4375& (0+255),b
 20435  003358                     l20107:
 20436                           
 20437                           ; BSR set to: 1
 20438  003358  0060  F5D0  F197   	movff	_MenuMng$4375,_menuVal
 20439  00335E  0060  F5D4  F198   	movff	_MenuMng$4375+1,_menuVal+1
 20440  003364  D05B               	goto	l20125
 20441  003366                     l20113:
 20442                           
 20443                           ; BSR set to: 0
 20444  003366  0101               	movlb	1	; () banked
 20445  003368  51B8               	movf	_menuStatus& (0+255),w,b
 20446  00336A  6F60               	movwf	??_MenuMng& (0+255),b
 20447  00336C  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 20448                           
 20449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20450                           ; Switch size 1, requested type "simple"
 20451                           ; Number of cases is 1, Range of values is 0 to 0
 20452                           ; switch strategies available:
 20453                           ; Name         Instructions Cycles
 20454                           ; simple_byte            4     3 (average)
 20455                           ;	Chosen strategy is simple_byte
 20456  00336E  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20457  003370  0A00               	xorlw	0	; case 0
 20458  003372  A4D8               	btfss	status,2,c
 20459  003374  D053               	goto	l20125
 20460                           
 20461                           ; BSR set to: 1
 20462                           ; Switch size 1, requested type "simple"
 20463                           ; Number of cases is 8, Range of values is 1 to 11
 20464                           ; switch strategies available:
 20465                           ; Name         Instructions Cycles
 20466                           ; simple_byte           25    13 (average)
 20467                           ;	Chosen strategy is simple_byte
 20468  003376  5160               	movf	??_MenuMng& (0+255),w,b
 20469  003378  0A01               	xorlw	1	; case 1
 20470  00337A  B4D8               	btfsc	status,2,c
 20471  00337C  D72C               	goto	l20059
 20472  00337E  0A03               	xorlw	3	; case 2
 20473  003380  B4D8               	btfsc	status,2,c
 20474  003382  D75E               	goto	l20079
 20475  003384  0A01               	xorlw	1	; case 3
 20476  003386  B4D8               	btfsc	status,2,c
 20477  003388  D74E               	goto	l20075
 20478  00338A  0A07               	xorlw	7	; case 4
 20479  00338C  B4D8               	btfsc	status,2,c
 20480  00338E  D723               	goto	l20059
 20481  003390  0A01               	xorlw	1	; case 5
 20482  003392  B4D8               	btfsc	status,2,c
 20483  003394  D774               	goto	l20087
 20484  003396  0A03               	xorlw	3	; case 6
 20485  003398  B4D8               	btfsc	status,2,c
 20486  00339A  D7AB               	goto	l20099
 20487  00339C  0A01               	xorlw	1	; case 7
 20488  00339E  B4D8               	btfsc	status,2,c
 20489  0033A0  D7A8               	goto	l20099
 20490  0033A2  0A0C               	xorlw	12	; case 11
 20491  0033A4  B4D8               	btfsc	status,2,c
 20492  0033A6  D75C               	goto	l20083
 20493  0033A8  D039               	goto	l20125
 20494  0033AA                     l20115:
 20495                           
 20496                           ; BSR set to: 1
 20497                           ;menu.c: 352:                     if (menuStatus == CFG_IDLE) {
 20498  0033AA  51B8               	movf	_menuStatus& (0+255),w,b
 20499  0033AC  A4D8               	btfss	status,2,c
 20500  0033AE  D036               	goto	l20125
 20501                           
 20502                           ; BSR set to: 1
 20503                           ;menu.c: 354:                         menuStatus = CFG_POWEROFF;
 20504  0033B0  0E0C               	movlw	12
 20505  0033B2  6FB8               	movwf	_menuStatus& (0+255),b
 20506                           
 20507                           ; BSR set to: 1
 20508                           ;menu.c: 355:                         menuTstamp = timeGet();
 20509  0033B4  ECD5  F052         	call	_timeGet	;wreg free
 20510  0033B8  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 20511  0033BE  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;menu.c: 356:                         LATDbits.LATD0 = 1;
 20515  0033C4  80BD               	bsf	189,0,c	;volatile
 20516  0033C6  D02A               	goto	l20125
 20517  0033C8                     l20123:
 20518                           
 20519                           ; BSR set to: 1
 20520  0033C8  0060  F5D8  F160   	movff	MenuMng@keyPress,??_MenuMng
 20521  0033CE  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 20522  0033D0  BF60               	btfsc	??_MenuMng& (0+255),7,b
 20523  0033D2  0761               	decf	(??_MenuMng+1)& (0+255),f,b
 20524                           
 20525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20526                           ; Switch size 1, requested type "simple"
 20527                           ; Number of cases is 1, Range of values is 0 to 0
 20528                           ; switch strategies available:
 20529                           ; Name         Instructions Cycles
 20530                           ; simple_byte            4     3 (average)
 20531                           ;	Chosen strategy is simple_byte
 20532  0033D4  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 20533  0033D6  0A00               	xorlw	0	; case 0
 20534  0033D8  A4D8               	btfss	status,2,c
 20535  0033DA  D020               	goto	l20125
 20536                           
 20537                           ; BSR set to: 1
 20538                           ; Switch size 1, requested type "simple"
 20539                           ; Number of cases is 10, Range of values is 0 to 10
 20540                           ; switch strategies available:
 20541                           ; Name         Instructions Cycles
 20542                           ; simple_byte           31    16 (average)
 20543                           ;	Chosen strategy is simple_byte
 20544  0033DC  5160               	movf	??_MenuMng& (0+255),w,b
 20545  0033DE  0A00               	xorlw	0	; case 0
 20546  0033E0  B4D8               	btfsc	status,2,c
 20547  0033E2  EFE3  F015         	goto	l19783
 20548  0033E6  0A01               	xorlw	1	; case 1
 20549  0033E8  B4D8               	btfsc	status,2,c
 20550  0033EA  D4B9               	goto	l19865
 20551  0033EC  0A03               	xorlw	3	; case 2
 20552  0033EE  B4D8               	btfsc	status,2,c
 20553  0033F0  D474               	goto	l19837
 20554  0033F2  0A01               	xorlw	1	; case 3
 20555  0033F4  B4D8               	btfsc	status,2,c
 20556  0033F6  D5F5               	goto	l19995
 20557  0033F8  0A06               	xorlw	6	; case 5
 20558  0033FA  B4D8               	btfsc	status,2,c
 20559  0033FC  D6E0               	goto	l20055
 20560  0033FE  0A03               	xorlw	3	; case 6
 20561  003400  B4D8               	btfsc	status,2,c
 20562  003402  D4D8               	goto	l19903
 20563  003404  0A01               	xorlw	1	; case 7
 20564  003406  B4D8               	btfsc	status,2,c
 20565  003408  D4C3               	goto	l19887
 20566  00340A  0A0F               	xorlw	15	; case 8
 20567  00340C  B4D8               	btfsc	status,2,c
 20568  00340E  D5C1               	goto	l19963
 20569  003410  0A01               	xorlw	1	; case 9
 20570  003412  B4D8               	btfsc	status,2,c
 20571  003414  D5D0               	goto	l19979
 20572  003416  0A03               	xorlw	3	; case 10
 20573  003418  B4D8               	btfsc	status,2,c
 20574  00341A  D7C7               	goto	l20115
 20575  00341C                     l20125:
 20576                           
 20577                           ;menu.c: 360:         lcdPrintBR = 1;
 20578  00341C  0E01               	movlw	1
 20579  00341E  0101               	movlb	1	; () banked
 20580  003420  6FC5               	movwf	_lcdPrintBR& (0+255),b
 20581                           
 20582                           ;menu.c: 361:         lcdPrintTR = 1;
 20583  003422  0E01               	movlw	1
 20584  003424  6FC6               	movwf	_lcdPrintTR& (0+255),b
 20585                           
 20586                           ;menu.c: 362:     } else {
 20587  003426  0012               	return	
 20588  003428                     l20127:
 20589                           
 20590                           ; BSR set to: 1
 20591                           ;menu.c: 363:         if ((menuStatus != CFG_IDLE) && (timeElapsed(menuTstamp, ((time_t)
      +                           (5*1000))))) {
 20592  003428  51B8               	movf	_menuStatus& (0+255),w,b
 20593  00342A  B4D8               	btfsc	status,2,c
 20594  00342C  0012               	return	
 20595                           
 20596                           ; BSR set to: 1
 20597  00342E  0060  F8E0  F093   	movff	_menuTstamp,timeElapsed@prevTime
 20598  003434  0060  F8E4  F094   	movff	_menuTstamp+1,timeElapsed@prevTime+1
 20599  00343A  0E13               	movlw	19
 20600  00343C  0100               	movlb	0	; () banked
 20601  00343E  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
 20602  003440  0E88               	movlw	136
 20603  003442  6F95               	movwf	timeElapsed@duration& (0+255),b
 20604  003444  ECE4  F04E         	call	_timeElapsed	;wreg free
 20605  003448  0900               	iorlw	0
 20606  00344A  B4D8               	btfsc	status,2,c
 20607  00344C  0012               	return	
 20608                           
 20609                           ; BSR set to: 0
 20610                           ;menu.c: 365:             lcdPrintTR = 1;
 20611  00344E  0E01               	movlw	1
 20612  003450  0101               	movlb	1	; () banked
 20613  003452  6FC6               	movwf	_lcdPrintTR& (0+255),b
 20614                           
 20615                           ;menu.c: 366:             lcdPrintBR = 1;
 20616  003454  0E01               	movlw	1
 20617  003456  6FC5               	movwf	_lcdPrintBR& (0+255),b
 20618                           
 20619                           ;menu.c: 367:             menuStatus = CFG_IDLE;
 20620  003458  0E00               	movlw	0
 20621  00345A  6FB8               	movwf	_menuStatus& (0+255),b
 20622  00345C  0012               	return		;funcret
 20623  00345E                     __end_of_MenuMng:
 20624                           	opt callstack 0
 20625                           
 20626 ;; *************** function _I2C2_MuxInit *****************
 20627 ;; Defined at:
 20628 ;;		line 40 in file "i2c2_mux.c"
 20629 ;; Parameters:    Size  Location     Type
 20630 ;;		None
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;		None
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  1    wreg      void 
 20635 ;; Registers used:
 20636 ;;		wreg, status,2
 20637 ;; Tracked objects:
 20638 ;;		On entry : 6/0
 20639 ;;		On exit  : 3F/1
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20646 ;;Total ram usage:        0 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:   17
 20649 ;; This function calls:
 20650 ;;		Nothing
 20651 ;; This function is called by:
 20652 ;;		_main
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           	psect	text63
 20657  00A362                     __ptext63:
 20658                           	opt callstack 0
 20659  00A362                     _I2C2_MuxInit:
 20660                           	opt callstack 13
 20661                           
 20662                           ;i2c2_mux.c: 41:     lastI2C2MAckResponse = 1;
 20663                           
 20664                           ;incstack = 0
 20665  00A362  0E01               	movlw	1
 20666  00A364  0100               	movlb	0	; () banked
 20667  00A366  6FBC               	movwf	_lastI2C2MAckResponse& (0+255),b
 20668                           
 20669                           ;i2c2_mux.c: 42:     lastI2C2LAckResponse = 1;
 20670  00A368  0E01               	movlw	1
 20671  00A36A  0102               	movlb	2	; () banked
 20672  00A36C  6F53               	movwf	_lastI2C2LAckResponse& (0+255),b
 20673                           
 20674                           ;i2c2_mux.c: 43:     lastI2C2MTrfResponse = I2C2_NOERR;
 20675  00A36E  0E00               	movlw	0
 20676  00A370  0100               	movlb	0	; () banked
 20677  00A372  6FBD               	movwf	_lastI2C2MTrfResponse& (0+255),b
 20678                           
 20679                           ;i2c2_mux.c: 44:     lastI2C2LTrfResponse = I2C2_NOERR;
 20680  00A374  0E00               	movlw	0
 20681  00A376  0102               	movlb	2	; () banked
 20682  00A378  6F54               	movwf	_lastI2C2LTrfResponse& (0+255),b
 20683                           
 20684                           ;i2c2_mux.c: 45:     currentTrfAddr = 0x0;
 20685  00A37A  0E00               	movlw	0
 20686  00A37C  0101               	movlb	1	; () banked
 20687  00A37E  6FB7               	movwf	_currentTrfAddr& (0+255),b
 20688                           
 20689                           ; BSR set to: 1
 20690  00A380  0012               	return		;funcret
 20691  00A382                     __end_of_I2C2_MuxInit:
 20692                           	opt callstack 0
 20693                           
 20694 ;; *************** function _CtrlPowerOff *****************
 20695 ;; Defined at:
 20696 ;;		line 189 in file "main.c"
 20697 ;; Parameters:    Size  Location     Type
 20698 ;;		None
 20699 ;; Auto vars:     Size  Location     Type
 20700 ;;		None
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      void 
 20703 ;; Registers used:
 20704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20705 ;; Tracked objects:
 20706 ;;		On entry : 3F/1
 20707 ;;		On exit  : 3F/0
 20708 ;;		Unchanged: 0/0
 20709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20714 ;;Total ram usage:        0 bytes
 20715 ;; Hardware stack levels used:    1
 20716 ;; Hardware stack levels required when called:   32
 20717 ;; This function calls:
 20718 ;;		_MonitorMsgSendBlock
 20719 ;;		_PrintStrBusy
 20720 ;;		_keyRead
 20721 ;;		_printf
 20722 ;;		_printstrblock
 20723 ;;		_screenMng
 20724 ;;		_setBacklight
 20725 ;;		_setCursor
 20726 ;;		_timeDelayMs
 20727 ;; This function is called by:
 20728 ;;		_main
 20729 ;; This function uses a non-reentrant model
 20730 ;;
 20731                           
 20732                           	psect	text64
 20733  0085A6                     __ptext64:
 20734                           	opt callstack 0
 20735  0085A6                     _CtrlPowerOff:
 20736                           	opt callstack 0
 20737                           
 20738                           ; BSR set to: 1
 20739                           ;main.c: 191:     setCursor(0, 1);
 20740                           
 20741                           ; BSR set to: 1
 20742                           ;incstack = 0
 20743 ;; hardware stack exceeded
 20744  0085A6  0E01               	movlw	1
 20745  0085A8  0100               	movlb	0	; () banked
 20746  0085AA  6F92               	movwf	setCursor@row& (0+255),b
 20747  0085AC  0E00               	movlw	0
 20748  0085AE  ECAD  F04C         	call	_setCursor
 20749                           
 20750                           ;main.c: 192:     printstrblock("                ");
 20751  0085B2  0ED8               	movlw	low STR_2
 20752  0085B4  0100               	movlb	0	; () banked
 20753  0085B6  6F8F               	movwf	printstrblock@c& (0+255),b
 20754  0085B8  0EFE               	movlw	high STR_2
 20755  0085BA  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 20756  0085BC  ECA8  F050         	call	_printstrblock	;wreg free
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;main.c: 193:     printf ("POWER-OFF\n");
 20760  0085C0  0E78               	movlw	low STR_3
 20761  0085C2  0101               	movlb	1	; () banked
 20762  0085C4  6F46               	movwf	printf@fmt& (0+255),b
 20763  0085C6  0EFF               	movlw	high STR_3
 20764  0085C8  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20765  0085CA  EC43  F050         	call	_printf	;wreg free
 20766                           
 20767                           ; BSR set to: 2
 20768                           ;main.c: 195:     LATDbits.LATD0 = 0;
 20769  0085CE  90BD               	bcf	189,0,c	;volatile
 20770                           
 20771                           ; BSR set to: 2
 20772                           ;main.c: 196:     LATAbits.LATA3 = 0;
 20773  0085D0  96BA               	bcf	186,3,c	;volatile
 20774                           
 20775                           ; BSR set to: 2
 20776                           ;main.c: 197:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 20777  0085D2  94BA               	bcf	186,2,c	;volatile
 20778                           
 20779                           ; BSR set to: 2
 20780  0085D4  96BC               	bcf	188,3,c	;volatile
 20781                           
 20782                           ; BSR set to: 2
 20783                           ;main.c: 198:     LATDbits.LATD6 = 0;
 20784  0085D6  9CBD               	bcf	189,6,c	;volatile
 20785                           
 20786                           ; BSR set to: 2
 20787                           ;main.c: 200:     lcdPrintTR = 1;
 20788  0085D8  0E01               	movlw	1
 20789  0085DA  0101               	movlb	1	; () banked
 20790  0085DC  6FC6               	movwf	_lcdPrintTR& (0+255),b
 20791                           
 20792                           ; BSR set to: 1
 20793                           ;main.c: 201:     screenMng();
 20794  0085DE  EC2F  F01A         	call	_screenMng	;wreg free
 20795  0085E2                     l19397:
 20796  0085E2  EC18  F054         	call	_PrintStrBusy	;wreg free
 20797  0085E6  0900               	iorlw	0
 20798  0085E8  A4D8               	btfss	status,2,c
 20799  0085EA  D7FB               	goto	l19397
 20800                           
 20801                           ; BSR set to: 0
 20802                           ;main.c: 203:     screenMng();
 20803  0085EC  EC2F  F01A         	call	_screenMng	;wreg free
 20804                           
 20805                           ;main.c: 204:     timeDelayMs(50);
 20806  0085F0  0E00               	movlw	0
 20807  0085F2  0100               	movlb	0	; () banked
 20808  0085F4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20809  0085F6  0E32               	movlw	50
 20810  0085F8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20811  0085FA  ECE4  F04D         	call	_timeDelayMs	;wreg free
 20812                           
 20813                           ; BSR set to: 0
 20814                           ;main.c: 206:     MonitorMsgSendBlock(MONSTATE_SLEEP);
 20815  0085FE  0E08               	movlw	8
 20816  008600  ECBB  F050         	call	_MonitorMsgSendBlock
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;main.c: 207:     timeDelayMs(50);
 20820  008604  0E00               	movlw	0
 20821  008606  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20822  008608  0E32               	movlw	50
 20823  00860A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20824  00860C  ECE4  F04D         	call	_timeDelayMs	;wreg free
 20825                           
 20826                           ; BSR set to: 0
 20827                           ;main.c: 208:     setBacklight(0);
 20828  008610  0E00               	movlw	0
 20829  008612  EC56  F052         	call	_setBacklight
 20830                           
 20831                           ;main.c: 210:     printf ("Wait for key press\n");
 20832  008616  0EFD               	movlw	low STR_4
 20833  008618  0101               	movlb	1	; () banked
 20834  00861A  6F46               	movwf	printf@fmt& (0+255),b
 20835  00861C  0EFC               	movlw	high STR_4
 20836  00861E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20837  008620  EC43  F050         	call	_printf	;wreg free
 20838  008624                     l19411:
 20839  008624  EC44  F04B         	call	_keyRead	;wreg free
 20840  008628  0A0A               	xorlw	10
 20841  00862A  A4D8               	btfss	status,2,c
 20842  00862C  D7FB               	goto	l19411
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;main.c: 213:     ctrlStatus = CTRL_STOP;
 20846  00862E  0E01               	movlw	1
 20847  008630  0101               	movlb	1	; () banked
 20848  008632  6FC0               	movwf	_ctrlStatus& (0+255),b
 20849                           
 20850                           ; BSR set to: 1
 20851                           ;main.c: 214:     timeDelayMs(50);
 20852  008634  0E00               	movlw	0
 20853  008636  0100               	movlb	0	; () banked
 20854  008638  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20855  00863A  0E32               	movlw	50
 20856  00863C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20857  00863E  ECE4  F04D         	call	_timeDelayMs	;wreg free
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;main.c: 215:     MonitorMsgSendBlock(MONSTATE_STOP);
 20861  008642  0E00               	movlw	0
 20862  008644  ECBB  F050         	call	_MonitorMsgSendBlock
 20863                           
 20864                           ; BSR set to: 0
 20865  008648  0012               	return		;funcret
 20866  00864A                     __end_of_CtrlPowerOff:
 20867                           	opt callstack 0
 20868                           
 20869 ;; *************** function _timeDelayMs *****************
 20870 ;; Defined at:
 20871 ;;		line 71 in file "time.c"
 20872 ;; Parameters:    Size  Location     Type
 20873 ;;  delms           2   59[BANK0 ] unsigned short 
 20874 ;; Auto vars:     Size  Location     Type
 20875 ;;  tstamp          2   61[BANK0 ] unsigned short 
 20876 ;; Return value:  Size  Location     Type
 20877 ;;                  1    wreg      void 
 20878 ;; Registers used:
 20879 ;;		wreg, status,2, status,0, cstack
 20880 ;; Tracked objects:
 20881 ;;		On entry : 3F/0
 20882 ;;		On exit  : 3F/0
 20883 ;;		Unchanged: 0/0
 20884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20889 ;;Total ram usage:        4 bytes
 20890 ;; Hardware stack levels used:    1
 20891 ;; Hardware stack levels required when called:   19
 20892 ;; This function calls:
 20893 ;;		_timeElapsed
 20894 ;;		_timeGet
 20895 ;; This function is called by:
 20896 ;;		_CtrlPowerOff
 20897 ;;		_main
 20898 ;;		_LcdI2CInit
 20899 ;;		_clear
 20900 ;;		_home
 20901 ;;		_screenInit
 20902 ;;		_pressureSensorChk
 20903 ;;		_flowChk
 20904 ;;		_SelfTest
 20905 ;; This function uses a non-reentrant model
 20906 ;;
 20907                           
 20908                           	psect	text65
 20909  009BC8                     __ptext65:
 20910                           	opt callstack 0
 20911  009BC8                     _timeDelayMs:
 20912                           	opt callstack 11
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;time.c: 72:     time_t tstamp;;time.c: 73:     tstamp=timeGet();
 20916                           
 20917                           ; BSR set to: 0
 20918                           ;incstack = 0
 20919  009BC8  ECD5  F052         	call	_timeGet	;wreg free
 20920  009BCC  0060  F24C  F09D   	movff	?_timeGet,timeDelayMs@tstamp
 20921  009BD2  0060  F250  F09E   	movff	?_timeGet+1,timeDelayMs@tstamp+1
 20922  009BD8                     l17757:
 20923                           
 20924                           ; BSR set to: 0
 20925  009BD8  0060  F274  F093   	movff	timeDelayMs@tstamp,timeElapsed@prevTime
 20926  009BDE  0060  F278  F094   	movff	timeDelayMs@tstamp+1,timeElapsed@prevTime+1
 20927  009BE4  0060  F26C  F095   	movff	timeDelayMs@delms,timeElapsed@duration
 20928  009BEA  0060  F270  F096   	movff	timeDelayMs@delms+1,timeElapsed@duration+1
 20929  009BF0  ECE4  F04E         	call	_timeElapsed	;wreg free
 20930  009BF4  0900               	iorlw	0
 20931  009BF6  A4D8               	btfss	status,2,c
 20932  009BF8  0012               	return	
 20933  009BFA  D7EE               	goto	l17757
 20934  009BFC                     __end_of_timeDelayMs:
 20935                           	opt callstack 0
 20936                           
 20937 ;; *************** function _timeElapsed *****************
 20938 ;; Defined at:
 20939 ;;		line 60 in file "time.c"
 20940 ;; Parameters:    Size  Location     Type
 20941 ;;  prevTime        2   51[BANK0 ] unsigned short 
 20942 ;;  duration        2   53[BANK0 ] unsigned short 
 20943 ;; Auto vars:     Size  Location     Type
 20944 ;;  intDur          2   57[BANK0 ] unsigned short 
 20945 ;;  intTime         2   55[BANK0 ] unsigned short 
 20946 ;; Return value:  Size  Location     Type
 20947 ;;                  1    wreg      _Bool 
 20948 ;; Registers used:
 20949 ;;		wreg, status,2, status,0, cstack
 20950 ;; Tracked objects:
 20951 ;;		On entry : 3C/0
 20952 ;;		On exit  : 3F/0
 20953 ;;		Unchanged: 0/0
 20954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20958 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20959 ;;Total ram usage:        8 bytes
 20960 ;; Hardware stack levels used:    1
 20961 ;; Hardware stack levels required when called:   18
 20962 ;; This function calls:
 20963 ;;		_TMR1_ReadTimer
 20964 ;; This function is called by:
 20965 ;;		_main
 20966 ;;		_timeDelayMs
 20967 ;;		_MenuMng
 20968 ;; This function uses a non-reentrant model
 20969 ;;
 20970                           
 20971                           	psect	text66
 20972  009DC8                     __ptext66:
 20973                           	opt callstack 0
 20974  009DC8                     _timeElapsed:
 20975                           	opt callstack 12
 20976                           
 20977                           ;time.c: 61:     time_t intTime, intDur;;time.c: 62:     intTime = TMR1_ReadTimer();
 20978                           
 20979                           ; BSR set to: 0
 20980                           ;incstack = 0
 20981  009DC8  EC2D  F050         	call	_TMR1_ReadTimer	;wreg free
 20982  009DCC  0060  F22C  F097   	movff	?_TMR1_ReadTimer,timeElapsed@intTime
 20983  009DD2  0060  F230  F098   	movff	?_TMR1_ReadTimer+1,timeElapsed@intTime+1
 20984                           
 20985                           ; BSR set to: 0
 20986                           ;time.c: 63:     intDur = intTime - prevTime;
 20987  009DD8  5193               	movf	timeElapsed@prevTime& (0+255),w,b
 20988  009DDA  5D97               	subwf	timeElapsed@intTime& (0+255),w,b
 20989  009DDC  6F99               	movwf	timeElapsed@intDur& (0+255),b
 20990  009DDE  5194               	movf	(timeElapsed@prevTime+1)& (0+255),w,b
 20991  009DE0  5998               	subwfb	(timeElapsed@intTime+1)& (0+255),w,b
 20992  009DE2  6F9A               	movwf	(timeElapsed@intDur+1)& (0+255),b
 20993                           
 20994                           ; BSR set to: 0
 20995                           ;time.c: 64:     if (intDur < duration) {
 20996  009DE4  5195               	movf	timeElapsed@duration& (0+255),w,b
 20997  009DE6  5D99               	subwf	timeElapsed@intDur& (0+255),w,b
 20998  009DE8  5196               	movf	(timeElapsed@duration+1)& (0+255),w,b
 20999  009DEA  599A               	subwfb	(timeElapsed@intDur+1)& (0+255),w,b
 21000  009DEC  B0D8               	btfsc	status,0,c
 21001  009DEE  D002               	goto	l17645
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;time.c: 65:         return 0;
 21005  009DF0  0E00               	movlw	0
 21006  009DF2  0012               	return	
 21007  009DF4                     l17645:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;time.c: 67:         return 1;
 21011  009DF4  0E01               	movlw	1
 21012                           
 21013                           ; BSR set to: 0
 21014  009DF6  0012               	return		;funcret
 21015  009DF8                     __end_of_timeElapsed:
 21016                           	opt callstack 0
 21017                           
 21018 ;; *************** function _setBacklight *****************
 21019 ;; Defined at:
 21020 ;;		line 328 in file "LiquidCrystal_I2C.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;  new_val         1    wreg     _Bool 
 21023 ;; Auto vars:     Size  Location     Type
 21024 ;;  new_val         1   48[BANK0 ] _Bool 
 21025 ;; Return value:  Size  Location     Type
 21026 ;;                  1    wreg      void 
 21027 ;; Registers used:
 21028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21029 ;; Tracked objects:
 21030 ;;		On entry : 3C/0
 21031 ;;		On exit  : 6/0
 21032 ;;		Unchanged: 0/0
 21033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21038 ;;Total ram usage:        1 bytes
 21039 ;; Hardware stack levels used:    1
 21040 ;; Hardware stack levels required when called:   21
 21041 ;; This function calls:
 21042 ;;		_backlight
 21043 ;;		_noBacklight
 21044 ;; This function is called by:
 21045 ;;		_CtrlPowerOff
 21046 ;;		_main
 21047 ;;		_SelfTest
 21048 ;; This function uses a non-reentrant model
 21049 ;;
 21050                           
 21051                           	psect	text67
 21052  00A4AC                     __ptext67:
 21053                           	opt callstack 0
 21054  00A4AC                     _setBacklight:
 21055                           	opt callstack 9
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;incstack = 0
 21059                           ;setBacklight@new_val stored from wreg
 21060  00A4AC  0100               	movlb	0	; () banked
 21061  00A4AE  6F90               	movwf	setBacklight@new_val& (0+255),b
 21062                           
 21063                           ;LiquidCrystal_I2C.c: 329:  if(new_val){
 21064  00A4B0  0100               	movlb	0	; () banked
 21065  00A4B2  5190               	movf	setBacklight@new_val& (0+255),w,b
 21066  00A4B4  B4D8               	btfsc	status,2,c
 21067  00A4B6  D003               	goto	l18781
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;LiquidCrystal_I2C.c: 330:   backlight();
 21071  00A4B8  ECAD  F053         	call	_backlight	;wreg free
 21072                           
 21073                           ;LiquidCrystal_I2C.c: 331:  }else{
 21074  00A4BC  0012               	return	
 21075  00A4BE                     l18781:
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;LiquidCrystal_I2C.c: 332:   noBacklight();
 21079  00A4BE  ECA7  F053         	call	_noBacklight	;wreg free
 21080  00A4C2  0012               	return		;funcret
 21081  00A4C4                     __end_of_setBacklight:
 21082                           	opt callstack 0
 21083                           
 21084 ;; *************** function _noBacklight *****************
 21085 ;; Defined at:
 21086 ;;		line 314 in file "LiquidCrystal_I2C.c"
 21087 ;; Parameters:    Size  Location     Type
 21088 ;;		None
 21089 ;; Auto vars:     Size  Location     Type
 21090 ;;		None
 21091 ;; Return value:  Size  Location     Type
 21092 ;;                  1    wreg      void 
 21093 ;; Registers used:
 21094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21095 ;; Tracked objects:
 21096 ;;		On entry : 3F/0
 21097 ;;		On exit  : 6/0
 21098 ;;		Unchanged: 0/0
 21099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21104 ;;Total ram usage:        0 bytes
 21105 ;; Hardware stack levels used:    1
 21106 ;; Hardware stack levels required when called:   20
 21107 ;; This function calls:
 21108 ;;		_expanderWriteBlock
 21109 ;; This function is called by:
 21110 ;;		_setBacklight
 21111 ;; This function uses a non-reentrant model
 21112 ;;
 21113                           
 21114                           	psect	text68
 21115  00A74E                     __ptext68:
 21116                           	opt callstack 0
 21117  00A74E                     _noBacklight:
 21118                           	opt callstack 9
 21119                           
 21120                           ; BSR set to: 0
 21121                           ;LiquidCrystal_I2C.c: 315:  _backlightval=0x00;
 21122                           
 21123                           ;incstack = 0
 21124  00A74E  0E00               	movlw	0
 21125  00A750  6FC9               	movwf	__backlightval& (0+255),b	;volatile
 21126                           
 21127                           ; BSR set to: 0
 21128                           ;LiquidCrystal_I2C.c: 316:  expanderWriteBlock(0);
 21129  00A752  0E00               	movlw	0
 21130  00A754  ECF9  F052         	call	_expanderWriteBlock
 21131  00A758  0012               	return		;funcret
 21132  00A75A                     __end_of_noBacklight:
 21133                           	opt callstack 0
 21134                           
 21135 ;; *************** function _backlight *****************
 21136 ;; Defined at:
 21137 ;;		line 319 in file "LiquidCrystal_I2C.c"
 21138 ;; Parameters:    Size  Location     Type
 21139 ;;		None
 21140 ;; Auto vars:     Size  Location     Type
 21141 ;;		None
 21142 ;; Return value:  Size  Location     Type
 21143 ;;                  1    wreg      void 
 21144 ;; Registers used:
 21145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21146 ;; Tracked objects:
 21147 ;;		On entry : 3F/0
 21148 ;;		On exit  : 6/0
 21149 ;;		Unchanged: 0/0
 21150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21155 ;;Total ram usage:        0 bytes
 21156 ;; Hardware stack levels used:    1
 21157 ;; Hardware stack levels required when called:   20
 21158 ;; This function calls:
 21159 ;;		_expanderWriteBlock
 21160 ;; This function is called by:
 21161 ;;		_setBacklight
 21162 ;; This function uses a non-reentrant model
 21163 ;;
 21164                           
 21165                           	psect	text69
 21166  00A75A                     __ptext69:
 21167                           	opt callstack 0
 21168  00A75A                     _backlight:
 21169                           	opt callstack 9
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;LiquidCrystal_I2C.c: 320:  _backlightval=0x08;
 21173                           
 21174                           ;incstack = 0
 21175  00A75A  0E08               	movlw	8
 21176  00A75C  6FC9               	movwf	__backlightval& (0+255),b	;volatile
 21177                           
 21178                           ; BSR set to: 0
 21179                           ;LiquidCrystal_I2C.c: 321:  expanderWriteBlock(0);
 21180  00A75E  0E00               	movlw	0
 21181  00A760  ECF9  F052         	call	_expanderWriteBlock
 21182  00A764  0012               	return		;funcret
 21183  00A766                     __end_of_backlight:
 21184                           	opt callstack 0
 21185                           
 21186 ;; *************** function _expanderWriteBlock *****************
 21187 ;; Defined at:
 21188 ;;		line 87 in file "LiquidCrystal_I2C.c"
 21189 ;; Parameters:    Size  Location     Type
 21190 ;;  data            1    wreg     unsigned char 
 21191 ;; Auto vars:     Size  Location     Type
 21192 ;;  data            1   47[BANK0 ] unsigned char 
 21193 ;; Return value:  Size  Location     Type
 21194 ;;                  1    wreg      void 
 21195 ;; Registers used:
 21196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21197 ;; Tracked objects:
 21198 ;;		On entry : 3F/0
 21199 ;;		On exit  : 6/0
 21200 ;;		Unchanged: 0/0
 21201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21206 ;;Total ram usage:        1 bytes
 21207 ;; Hardware stack levels used:    1
 21208 ;; Hardware stack levels required when called:   19
 21209 ;; This function calls:
 21210 ;;		_send4bits
 21211 ;; This function is called by:
 21212 ;;		_LcdI2CInit
 21213 ;;		_noBacklight
 21214 ;;		_backlight
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text70
 21219  00A5F2                     __ptext70:
 21220                           	opt callstack 0
 21221  00A5F2                     _expanderWriteBlock:
 21222                           	opt callstack 9
 21223                           
 21224                           ;incstack = 0
 21225                           ;expanderWriteBlock@data stored from wreg
 21226  00A5F2  6F8F               	movwf	expanderWriteBlock@data& (0+255),b
 21227                           
 21228                           ;LiquidCrystal_I2C.c: 88:     send4bits(data, 0);
 21229  00A5F4  0E00               	movlw	0
 21230  00A5F6  0100               	movlb	0	; () banked
 21231  00A5F8  6F8B               	movwf	send4bits@mode& (0+255),b
 21232  00A5FA  518F               	movf	expanderWriteBlock@data& (0+255),w,b
 21233  00A5FC  EC04  F049         	call	_send4bits
 21234  00A600  0012               	return		;funcret
 21235  00A602                     __end_of_expanderWriteBlock:
 21236                           	opt callstack 0
 21237                           
 21238 ;; *************** function _screenMng *****************
 21239 ;; Defined at:
 21240 ;;		line 385 in file "menu.c"
 21241 ;; Parameters:    Size  Location     Type
 21242 ;;		None
 21243 ;; Auto vars:     Size  Location     Type
 21244 ;;		None
 21245 ;; Return value:  Size  Location     Type
 21246 ;;                  1    wreg      void 
 21247 ;; Registers used:
 21248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21249 ;; Tracked objects:
 21250 ;;		On entry : 0/1
 21251 ;;		On exit  : 6/0
 21252 ;;		Unchanged: 0/0
 21253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21255 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21256 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21257 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21258 ;;Total ram usage:        4 bytes
 21259 ;; Hardware stack levels used:    1
 21260 ;; Hardware stack levels required when called:   26
 21261 ;; This function calls:
 21262 ;;		_PrintStrBusy
 21263 ;;		___lwdiv
 21264 ;;		___tmul
 21265 ;;		___wmul
 21266 ;;		_printstr
 21267 ;;		_setCursor
 21268 ;;		_sprintf
 21269 ;; This function is called by:
 21270 ;;		_CtrlPowerOff
 21271 ;;		_main
 21272 ;; This function uses a non-reentrant model
 21273 ;;
 21274                           
 21275                           	psect	text71
 21276  00345E                     __ptext71:
 21277                           	opt callstack 0
 21278  00345E                     _screenMng:
 21279                           	opt callstack 4
 21280                           
 21281                           ;menu.c: 387:     if (lcdPrintTR && !PrintStrBusy()) {
 21282                           
 21283                           ;incstack = 0
 21284  00345E  0101               	movlb	1	; () banked
 21285  003460  51C6               	movf	_lcdPrintTR& (0+255),w,b
 21286  003462  B4D8               	btfsc	status,2,c
 21287  003464  D222               	goto	l18681
 21288                           
 21289                           ; BSR set to: 1
 21290  003466  EC18  F054         	call	_PrintStrBusy	;wreg free
 21291  00346A  0900               	iorlw	0
 21292  00346C  A4D8               	btfss	status,2,c
 21293  00346E  D21D               	goto	l18681
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;menu.c: 388:         lcdPrintTR = 0;
 21297  003470  0E00               	movlw	0
 21298  003472  0101               	movlb	1	; () banked
 21299  003474  6FC6               	movwf	_lcdPrintTR& (0+255),b
 21300                           
 21301                           ;menu.c: 389:         if ((menuStatus == CFG_IDLE) || (menuStatus == CFG_LOWVA) || (menu
      +                          Status == CFG_HIGHVA)) {
 21302  003476  51B8               	movf	_menuStatus& (0+255),w,b
 21303  003478  B4D8               	btfsc	status,2,c
 21304  00347A  D008               	goto	u19160
 21305                           
 21306                           ; BSR set to: 1
 21307  00347C  0E06               	movlw	6
 21308  00347E  19B8               	xorwf	_menuStatus& (0+255),w,b
 21309  003480  B4D8               	btfsc	status,2,c
 21310  003482  D004               	goto	u19160
 21311                           
 21312                           ; BSR set to: 1
 21313  003484  0E07               	movlw	7
 21314  003486  19B8               	xorwf	_menuStatus& (0+255),w,b
 21315  003488  A4D8               	btfss	status,2,c
 21316  00348A  D04C               	goto	l18623
 21317  00348C                     u19160:
 21318                           
 21319                           ; BSR set to: 1
 21320                           ;menu.c: 390:             if (ctrlStatus != CTRL_SLEEP) {
 21321  00348C  0E03               	movlw	3
 21322  00348E  19C0               	xorwf	_ctrlStatus& (0+255),w,b
 21323  003490  B4D8               	btfsc	status,2,c
 21324  003492  D03D               	goto	l18621
 21325                           
 21326                           ; BSR set to: 1
 21327                           ;menu.c: 391:                 if (VentMode == VMODE_PRESSURE) {
 21328  003494  51F4               	movf	_VentMode& (0+255),w,b
 21329  003496  A4D8               	btfss	status,2,c
 21330  003498  D01B               	goto	l18619
 21331                           
 21332                           ; BSR set to: 1
 21333                           ;menu.c: 392:                     sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, 
      +                          IP, MaxP);
 21334  00349A  0EAB               	movlw	low _lcdTopRow
 21335  00349C  6F46               	movwf	sprintf@s& (0+255),b
 21336  00349E  0E02               	movlw	high _lcdTopRow
 21337  0034A0  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21338  0034A2  0EAC               	movlw	low STR_37
 21339  0034A4  6F48               	movwf	sprintf@fmt& (0+255),b
 21340  0034A6  0EFC               	movlw	high STR_37
 21341  0034A8  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21342  0034AA  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21343  0034B0  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21344  0034B2  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21345  0034B8  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21346  0034BA  0060  F7DC  F14E   	movff	_IP,?_sprintf+8
 21347  0034C0  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21348  0034C2  0060  F7EC  F150   	movff	_MaxP,?_sprintf+10
 21349  0034C8  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21350  0034CA  EC31  F049         	call	_sprintf	;wreg free
 21351                           
 21352                           ;menu.c: 393:                 } else {
 21353  0034CE  D1D8               	goto	l18673
 21354  0034D0                     l18619:
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;menu.c: 394:                     sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 21358  0034D0  0EAB               	movlw	low _lcdTopRow
 21359  0034D2  6F46               	movwf	sprintf@s& (0+255),b
 21360  0034D4  0E02               	movlw	high _lcdTopRow
 21361  0034D6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21362  0034D8  0E4A               	movlw	low STR_38
 21363  0034DA  6F48               	movwf	sprintf@fmt& (0+255),b
 21364  0034DC  0EFD               	movlw	high STR_38
 21365  0034DE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21366  0034E0  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21367  0034E6  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21368  0034E8  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21369  0034EE  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21370  0034F0  0060  F7EC  F14E   	movff	_MaxP,?_sprintf+8
 21371  0034F6  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21372  0034F8  51FA               	movf	_MaxV& (0+255),w,b
 21373  0034FA  0D0A               	mullw	10
 21374  0034FC  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21375  003502  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21376  003508  EC31  F049         	call	_sprintf	;wreg free
 21377  00350C  D1B9               	goto	l18673
 21378  00350E                     l18621:
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;menu.c: 397:                 sprintf(lcdTopRow, "----OFF-STATE---");
 21382  00350E  0EAB               	movlw	low _lcdTopRow
 21383  003510  6F46               	movwf	sprintf@s& (0+255),b
 21384  003512  0E02               	movlw	high _lcdTopRow
 21385  003514  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21386  003516  0EB6               	movlw	low STR_39
 21387  003518  6F48               	movwf	sprintf@fmt& (0+255),b
 21388  00351A  0EFE               	movlw	high STR_39
 21389  00351C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21390  00351E  EC31  F049         	call	_sprintf	;wreg free
 21391  003522  D1AE               	goto	l18673
 21392  003524                     l18623:
 21393                           
 21394                           ; BSR set to: 1
 21395  003524  0E02               	movlw	2
 21396  003526  19B8               	xorwf	_menuStatus& (0+255),w,b
 21397  003528  A4D8               	btfss	status,2,c
 21398  00352A  D041               	goto	l18631
 21399                           
 21400                           ; BSR set to: 1
 21401                           ;menu.c: 400:             if (VentMode == VMODE_PRESSURE) {
 21402  00352C  51F4               	movf	_VentMode& (0+255),w,b
 21403  00352E  A4D8               	btfss	status,2,c
 21404  003530  D01D               	goto	l18629
 21405                           
 21406                           ; BSR set to: 1
 21407                           ;menu.c: 401:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", menuVal, PEEP, 
      +                          IP, MaxP);
 21408  003532  0EAB               	movlw	low _lcdTopRow
 21409  003534  6F46               	movwf	sprintf@s& (0+255),b
 21410  003536  0E02               	movlw	high _lcdTopRow
 21411  003538  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21412  00353A  0EAC               	movlw	low STR_37
 21413  00353C  6F48               	movwf	sprintf@fmt& (0+255),b
 21414  00353E  0EFC               	movlw	high STR_37
 21415  003540  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21416  003542  0060  F65C  F14A   	movff	_menuVal,?_sprintf+4
 21417  003548  0060  F660  F14B   	movff	_menuVal+1,?_sprintf+5
 21418  00354E  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21419  003554  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21420  003556  0060  F7DC  F14E   	movff	_IP,?_sprintf+8
 21421  00355C  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21422  00355E  0060  F7EC  F150   	movff	_MaxP,?_sprintf+10
 21423  003564  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21424  003566  EC31  F049         	call	_sprintf	;wreg free
 21425                           
 21426                           ;menu.c: 402:             } else {
 21427  00356A  D18A               	goto	l18673
 21428  00356C                     l18629:
 21429                           
 21430                           ; BSR set to: 1
 21431                           ;menu.c: 403:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", menuVal, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 21432  00356C  0EAB               	movlw	low _lcdTopRow
 21433  00356E  6F46               	movwf	sprintf@s& (0+255),b
 21434  003570  0E02               	movlw	high _lcdTopRow
 21435  003572  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21436  003574  0E4A               	movlw	low STR_38
 21437  003576  6F48               	movwf	sprintf@fmt& (0+255),b
 21438  003578  0EFD               	movlw	high STR_38
 21439  00357A  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21440  00357C  0060  F65C  F14A   	movff	_menuVal,?_sprintf+4
 21441  003582  0060  F660  F14B   	movff	_menuVal+1,?_sprintf+5
 21442  003588  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21443  00358E  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21444  003590  0060  F7EC  F14E   	movff	_MaxP,?_sprintf+8
 21445  003596  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21446  003598  51FA               	movf	_MaxV& (0+255),w,b
 21447  00359A  0D0A               	mullw	10
 21448  00359C  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21449  0035A2  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21450  0035A8  EC31  F049         	call	_sprintf	;wreg free
 21451  0035AC  D169               	goto	l18673
 21452  0035AE                     l18631:
 21453                           
 21454                           ; BSR set to: 1
 21455  0035AE  0E03               	movlw	3
 21456  0035B0  19B8               	xorwf	_menuStatus& (0+255),w,b
 21457  0035B2  A4D8               	btfss	status,2,c
 21458  0035B4  D041               	goto	l18639
 21459                           
 21460                           ; BSR set to: 1
 21461                           ;menu.c: 406:             if (VentMode == VMODE_PRESSURE) {
 21462  0035B6  51F4               	movf	_VentMode& (0+255),w,b
 21463  0035B8  A4D8               	btfss	status,2,c
 21464  0035BA  D01D               	goto	l18637
 21465                           
 21466                           ; BSR set to: 1
 21467                           ;menu.c: 407:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, menuVal, I
      +                          P, MaxP);
 21468  0035BC  0EAB               	movlw	low _lcdTopRow
 21469  0035BE  6F46               	movwf	sprintf@s& (0+255),b
 21470  0035C0  0E02               	movlw	high _lcdTopRow
 21471  0035C2  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21472  0035C4  0EAC               	movlw	low STR_37
 21473  0035C6  6F48               	movwf	sprintf@fmt& (0+255),b
 21474  0035C8  0EFC               	movlw	high STR_37
 21475  0035CA  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21476  0035CC  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21477  0035D2  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21478  0035D4  0060  F65C  F14C   	movff	_menuVal,?_sprintf+6
 21479  0035DA  0060  F660  F14D   	movff	_menuVal+1,?_sprintf+7
 21480  0035E0  0060  F7DC  F14E   	movff	_IP,?_sprintf+8
 21481  0035E6  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21482  0035E8  0060  F7EC  F150   	movff	_MaxP,?_sprintf+10
 21483  0035EE  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21484  0035F0  EC31  F049         	call	_sprintf	;wreg free
 21485                           
 21486                           ;menu.c: 408:             } else {
 21487  0035F4  D145               	goto	l18673
 21488  0035F6                     l18637:
 21489                           
 21490                           ; BSR set to: 1
 21491                           ;menu.c: 409:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, menuVal, Max
      +                          P, 10 * ((uint16_t) MaxV));
 21492  0035F6  0EAB               	movlw	low _lcdTopRow
 21493  0035F8  6F46               	movwf	sprintf@s& (0+255),b
 21494  0035FA  0E02               	movlw	high _lcdTopRow
 21495  0035FC  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21496  0035FE  0E4A               	movlw	low STR_38
 21497  003600  6F48               	movwf	sprintf@fmt& (0+255),b
 21498  003602  0EFD               	movlw	high STR_38
 21499  003604  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21500  003606  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21501  00360C  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21502  00360E  0060  F65C  F14C   	movff	_menuVal,?_sprintf+6
 21503  003614  0060  F660  F14D   	movff	_menuVal+1,?_sprintf+7
 21504  00361A  0060  F7EC  F14E   	movff	_MaxP,?_sprintf+8
 21505  003620  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21506  003622  51FA               	movf	_MaxV& (0+255),w,b
 21507  003624  0D0A               	mullw	10
 21508  003626  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21509  00362C  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21510  003632  EC31  F049         	call	_sprintf	;wreg free
 21511                           
 21512                           ; BSR set to: 1
 21513                           ;menu.c: 411:         } else if (menuStatus == CFG_IP) {
 21514                           
 21515                           ;menu.c: 410:             }
 21516  003636  D124               	goto	l18673
 21517  003638                     l18639:
 21518                           
 21519                           ; BSR set to: 1
 21520  003638  05B8               	decf	_menuStatus& (0+255),w,b
 21521  00363A  A4D8               	btfss	status,2,c
 21522  00363C  D01D               	goto	l18643
 21523                           
 21524                           ; BSR set to: 1
 21525                           ;menu.c: 412:             sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, menuVal,
      +                           MaxP);
 21526  00363E  0EAB               	movlw	low _lcdTopRow
 21527  003640  6F46               	movwf	sprintf@s& (0+255),b
 21528  003642  0E02               	movlw	high _lcdTopRow
 21529  003644  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21530  003646  0EAC               	movlw	low STR_37
 21531  003648  6F48               	movwf	sprintf@fmt& (0+255),b
 21532  00364A  0EFC               	movlw	high STR_37
 21533  00364C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21534  00364E  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21535  003654  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21536  003656  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21537  00365C  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21538  00365E  0060  F65C  F14E   	movff	_menuVal,?_sprintf+8
 21539  003664  0060  F660  F14F   	movff	_menuVal+1,?_sprintf+9
 21540  00366A  0060  F7EC  F150   	movff	_MaxP,?_sprintf+10
 21541  003670  6B51               	clrf	(?_sprintf+11)& (0+255),b
 21542  003672  EC31  F049         	call	_sprintf	;wreg free
 21543                           
 21544                           ;menu.c: 413:         } else if (menuStatus == CFG_MAXP) {
 21545  003676  D104               	goto	l18673
 21546  003678                     l18643:
 21547                           
 21548                           ; BSR set to: 1
 21549  003678  0E04               	movlw	4
 21550  00367A  19B8               	xorwf	_menuStatus& (0+255),w,b
 21551  00367C  A4D8               	btfss	status,2,c
 21552  00367E  D041               	goto	l18651
 21553                           
 21554                           ; BSR set to: 1
 21555                           ;menu.c: 414:             if (VentMode == VMODE_PRESSURE) {
 21556  003680  51F4               	movf	_VentMode& (0+255),w,b
 21557  003682  A4D8               	btfss	status,2,c
 21558  003684  D01D               	goto	l18649
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;menu.c: 415:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, IP, 
      +                          menuVal);
 21562  003686  0EAB               	movlw	low _lcdTopRow
 21563  003688  6F46               	movwf	sprintf@s& (0+255),b
 21564  00368A  0E02               	movlw	high _lcdTopRow
 21565  00368C  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21566  00368E  0EAC               	movlw	low STR_37
 21567  003690  6F48               	movwf	sprintf@fmt& (0+255),b
 21568  003692  0EFC               	movlw	high STR_37
 21569  003694  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21570  003696  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21571  00369C  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21572  00369E  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21573  0036A4  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21574  0036A6  0060  F7DC  F14E   	movff	_IP,?_sprintf+8
 21575  0036AC  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21576  0036AE  0060  F65C  F150   	movff	_menuVal,?_sprintf+10
 21577  0036B4  0060  F660  F151   	movff	_menuVal+1,?_sprintf+11
 21578  0036BA  EC31  F049         	call	_sprintf	;wreg free
 21579                           
 21580                           ;menu.c: 416:             } else {
 21581  0036BE  D0E0               	goto	l18673
 21582  0036C0                     l18649:
 21583                           
 21584                           ; BSR set to: 1
 21585                           ;menu.c: 417:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, menuVa
      +                          l, 10 * ((uint16_t) MaxV));
 21586  0036C0  0EAB               	movlw	low _lcdTopRow
 21587  0036C2  6F46               	movwf	sprintf@s& (0+255),b
 21588  0036C4  0E02               	movlw	high _lcdTopRow
 21589  0036C6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21590  0036C8  0E4A               	movlw	low STR_38
 21591  0036CA  6F48               	movwf	sprintf@fmt& (0+255),b
 21592  0036CC  0EFD               	movlw	high STR_38
 21593  0036CE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21594  0036D0  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21595  0036D6  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21596  0036D8  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21597  0036DE  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21598  0036E0  0060  F65C  F14E   	movff	_menuVal,?_sprintf+8
 21599  0036E6  0060  F660  F14F   	movff	_menuVal+1,?_sprintf+9
 21600  0036EC  51FA               	movf	_MaxV& (0+255),w,b
 21601  0036EE  0D0A               	mullw	10
 21602  0036F0  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21603  0036F6  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21604  0036FC  EC31  F049         	call	_sprintf	;wreg free
 21605  003700  D0BF               	goto	l18673
 21606  003702                     l18651:
 21607                           
 21608                           ; BSR set to: 1
 21609  003702  0E05               	movlw	5
 21610  003704  19B8               	xorwf	_menuStatus& (0+255),w,b
 21611  003706  A4D8               	btfss	status,2,c
 21612  003708  D031               	goto	l18657
 21613                           
 21614                           ; BSR set to: 1
 21615                           ;menu.c: 420:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21616  00370A  0060  F65C  F09B   	movff	_menuVal,___wmul@multiplier
 21617  003710  0060  F660  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21618  003716  0E00               	movlw	0
 21619  003718  0100               	movlb	0	; () banked
 21620  00371A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21621  00371C  0E0A               	movlw	10
 21622  00371E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21623  003720  ECFC  F04E         	call	___wmul	;wreg free
 21624  003724  0060  F26C  F15E   	movff	?___wmul,_screenMng$6112
 21625  00372A  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6112+1
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;menu.c: 420:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21629  003730  0EAB               	movlw	low _lcdTopRow
 21630  003732  0101               	movlb	1	; () banked
 21631  003734  6F46               	movwf	sprintf@s& (0+255),b
 21632  003736  0E02               	movlw	high _lcdTopRow
 21633  003738  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21634  00373A  0E4A               	movlw	low STR_38
 21635  00373C  6F48               	movwf	sprintf@fmt& (0+255),b
 21636  00373E  0EFD               	movlw	high STR_38
 21637  003740  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21638  003742  0060  F7E0  F14A   	movff	_BPM,?_sprintf+4
 21639  003748  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21640  00374A  0060  F7D8  F14C   	movff	_PEEP,?_sprintf+6
 21641  003750  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21642  003752  0060  F7EC  F14E   	movff	_MaxP,?_sprintf+8
 21643  003758  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21644  00375A  0060  F578  F150   	movff	_screenMng$6112,?_sprintf+10
 21645  003760  0060  F57C  F151   	movff	_screenMng$6112+1,?_sprintf+11
 21646  003766  EC31  F049         	call	_sprintf	;wreg free
 21647                           
 21648                           ;menu.c: 421:         } else if (menuStatus == CFG_POWEROFF) {
 21649  00376A  D08A               	goto	l18673
 21650  00376C                     l18657:
 21651                           
 21652                           ; BSR set to: 1
 21653  00376C  0E0C               	movlw	12
 21654  00376E  19B8               	xorwf	_menuStatus& (0+255),w,b
 21655  003770  A4D8               	btfss	status,2,c
 21656  003772  D00B               	goto	l18661
 21657                           
 21658                           ; BSR set to: 1
 21659                           ;menu.c: 422:             sprintf(lcdTopRow, "PRESS BPM TO    ");
 21660  003774  0EAB               	movlw	low _lcdTopRow
 21661  003776  6F46               	movwf	sprintf@s& (0+255),b
 21662  003778  0E02               	movlw	high _lcdTopRow
 21663  00377A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21664  00377C  0E94               	movlw	low STR_48
 21665  00377E  6F48               	movwf	sprintf@fmt& (0+255),b
 21666  003780  0EFE               	movlw	high STR_48
 21667  003782  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21668  003784  EC31  F049         	call	_sprintf	;wreg free
 21669                           
 21670                           ;menu.c: 423:         } else if (menuStatus == CFG_ENGVSTATS) {
 21671  003788  D07B               	goto	l18673
 21672  00378A                     l18661:
 21673                           
 21674                           ; BSR set to: 1
 21675  00378A  0E09               	movlw	9
 21676  00378C  19B8               	xorwf	_menuStatus& (0+255),w,b
 21677  00378E  A4D8               	btfss	status,2,c
 21678  003790  D01D               	goto	l18665
 21679                           
 21680                           ; BSR set to: 1
 21681                           ;menu.c: 424:             sprintf(lcdTopRow, "%3d %3d %3d     ", rSV2ValveORT, rSV2Valve
      +                          CRT, rSV3ValveORT);
 21682  003792  0EAB               	movlw	low _lcdTopRow
 21683  003794  6F46               	movwf	sprintf@s& (0+255),b
 21684  003796  0E02               	movlw	high _lcdTopRow
 21685  003798  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21686  00379A  0E83               	movlw	low STR_49
 21687  00379C  6F48               	movwf	sprintf@fmt& (0+255),b
 21688  00379E  0EFE               	movlw	high STR_49
 21689  0037A0  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21690  0037A2  0060  F684  F14A   	movff	_rSV2ValveORT,?_sprintf+4
 21691  0037A8  0060  F688  F14B   	movff	_rSV2ValveORT+1,?_sprintf+5
 21692  0037AE  0060  F67C  F14C   	movff	_rSV2ValveCRT,?_sprintf+6
 21693  0037B4  0060  F680  F14D   	movff	_rSV2ValveCRT+1,?_sprintf+7
 21694  0037BA  0060  F674  F14E   	movff	_rSV3ValveORT,?_sprintf+8
 21695  0037C0  0060  F678  F14F   	movff	_rSV3ValveORT+1,?_sprintf+9
 21696  0037C6  EC31  F049         	call	_sprintf	;wreg free
 21697                           
 21698                           ;menu.c: 425:         } else if (menuStatus == CFG_ENGLSTATS) {
 21699  0037CA  D05A               	goto	l18673
 21700  0037CC                     l18665:
 21701                           
 21702                           ; BSR set to: 1
 21703  0037CC  0E0A               	movlw	10
 21704  0037CE  19B8               	xorwf	_menuStatus& (0+255),w,b
 21705  0037D0  A4D8               	btfss	status,2,c
 21706  0037D2  D042               	goto	l18669
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;menu.c: 426:             sprintf(lcdTopRow, "%3d   %3d  ", (uint16_t) ((((uint24_t) ((i
      +                          nt16_t) ((0.045*4096+2)/5)*1))*((uint24_t) lungC))>>7), lungR/((int16_t) ((0.045*4096+2)
      +                          /5)*1));
 21710  0037D4  0EAB               	movlw	low _lcdTopRow
 21711  0037D6  6F46               	movwf	sprintf@s& (0+255),b
 21712  0037D8  0E02               	movlw	high _lcdTopRow
 21713  0037DA  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21714  0037DC  0E32               	movlw	low STR_50
 21715  0037DE  6F48               	movwf	sprintf@fmt& (0+255),b
 21716  0037E0  0EFF               	movlw	high STR_50
 21717  0037E2  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21718  0037E4  0E07               	movlw	7
 21719  0037E6  6F5C               	movwf	??_screenMng& (0+255),b
 21720  0037E8  0060  F76C  F08B   	movff	_lungC,___tmul@multiplier
 21721  0037EE  0060  F770  F08C   	movff	_lungC+1,___tmul@multiplier+1
 21722  0037F4  0100               	movlb	0	; () banked
 21723  0037F6  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 21724  0037F8  0E25               	movlw	37
 21725  0037FA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 21726  0037FC  0E00               	movlw	0
 21727  0037FE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 21728  003800  0E00               	movlw	0
 21729  003802  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 21730  003804  EC1F  F04B         	call	___tmul	;wreg free
 21731  003808  0101               	movlb	1	; () banked
 21732  00380A  295C               	incf	??_screenMng& (0+255),w,b
 21733  00380C  6F5D               	movwf	(??_screenMng+1)& (0+255),b
 21734  00380E  D005               	goto	u19300
 21735  003810                     u19305:
 21736  003810  0100               	movlb	0	; () banked
 21737  003812  90D8               	bcf	status,0,c
 21738  003814  338D               	rrcf	(?___tmul+2)& (0+255),f,b
 21739  003816  338C               	rrcf	(?___tmul+1)& (0+255),f,b
 21740  003818  338B               	rrcf	?___tmul& (0+255),f,b
 21741  00381A                     u19300:
 21742  00381A  0101               	movlb	1	; () banked
 21743  00381C  2F5D               	decfsz	(??_screenMng+1)& (0+255),f,b
 21744  00381E  D7F8               	goto	u19305
 21745  003820  0060  F22C  F14A   	movff	?___tmul,?_sprintf+4
 21746  003826  0060  F230  F14B   	movff	?___tmul+1,?_sprintf+5
 21747  00382C  0060  FB54  F08B   	movff	_lungR,___lwdiv@dividend
 21748  003832  0060  FB58  F08C   	movff	_lungR+1,___lwdiv@dividend+1
 21749  003838  0E00               	movlw	0
 21750  00383A  0100               	movlb	0	; () banked
 21751  00383C  6F8E               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21752  00383E  0E25               	movlw	37
 21753  003840  6F8D               	movwf	___lwdiv@divisor& (0+255),b
 21754  003842  EC5E  F049         	call	___lwdiv	;wreg free
 21755  003846  0060  F22C  F14C   	movff	?___lwdiv,?_sprintf+6
 21756  00384C  0060  F230  F14D   	movff	?___lwdiv+1,?_sprintf+7
 21757  003852  EC31  F049         	call	_sprintf	;wreg free
 21758                           
 21759                           ;menu.c: 427:         } else if (menuStatus == CFG_ENGTRIG) {
 21760  003856  D014               	goto	l18673
 21761  003858                     l18669:
 21762                           
 21763                           ; BSR set to: 1
 21764  003858  0E0B               	movlw	11
 21765  00385A  19B8               	xorwf	_menuStatus& (0+255),w,b
 21766  00385C  A4D8               	btfss	status,2,c
 21767  00385E  D010               	goto	l18673
 21768                           
 21769                           ; BSR set to: 1
 21770                           ;menu.c: 428:             sprintf(lcdTopRow, "%1d               ", menuVal);
 21771  003860  0EAB               	movlw	low _lcdTopRow
 21772  003862  6F46               	movwf	sprintf@s& (0+255),b
 21773  003864  0E02               	movlw	high _lcdTopRow
 21774  003866  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21775  003868  0E37               	movlw	low STR_51
 21776  00386A  6F48               	movwf	sprintf@fmt& (0+255),b
 21777  00386C  0EFD               	movlw	high STR_51
 21778  00386E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21779  003870  0060  F65C  F14A   	movff	_menuVal,?_sprintf+4
 21780  003876  0060  F660  F14B   	movff	_menuVal+1,?_sprintf+5
 21781  00387C  EC31  F049         	call	_sprintf	;wreg free
 21782  003880                     l18673:
 21783                           
 21784                           ; BSR set to: 1
 21785                           ;menu.c: 432:         setCursor(0, 0);
 21786  003880  0E00               	movlw	0
 21787  003882  0100               	movlb	0	; () banked
 21788  003884  6F92               	movwf	setCursor@row& (0+255),b
 21789  003886  0E00               	movlw	0
 21790  003888  ECAD  F04C         	call	_setCursor
 21791                           
 21792                           ;menu.c: 433:         printstr(lcdTopRow);
 21793  00388C  0EAB               	movlw	low _lcdTopRow
 21794  00388E  0100               	movlb	0	; () banked
 21795  003890  6F8B               	movwf	printstr@c& (0+255),b
 21796  003892  0E02               	movlw	high _lcdTopRow
 21797  003894  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21798  003896  ECD6  F03D         	call	_printstr	;wreg free
 21799  00389A                     
 21800                           ;menu.c: 434:         if (menuStatus != CFG_IDLE) {
 21801  00389A  0101               	movlb	1	; () banked
 21802  00389C  51B8               	movf	_menuStatus& (0+255),w,b
 21803  00389E  B4D8               	btfsc	status,2,c
 21804  0038A0  0012               	return	
 21805  0038A2                     u19320:
 21806                           
 21807                           ;menu.c: 435:             lcdBlink = 1;
 21808  0038A2  0E01               	movlw	1
 21809  0038A4  0100               	movlb	0	; () banked
 21810  0038A6  6FBE               	movwf	_lcdBlink& (0+255),b
 21811  0038A8  0012               	return	
 21812  0038AA                     l18681:
 21813  0038AA  0101               	movlb	1	; () banked
 21814  0038AC  51C4               	movf	_lcdPrintBRR& (0+255),w,b
 21815  0038AE  B4D8               	btfsc	status,2,c
 21816  0038B0  D016               	goto	l18695
 21817                           
 21818                           ; BSR set to: 1
 21819  0038B2  EC18  F054         	call	_PrintStrBusy	;wreg free
 21820  0038B6  0900               	iorlw	0
 21821  0038B8  A4D8               	btfss	status,2,c
 21822  0038BA  D011               	goto	l18695
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;menu.c: 438:         lcdPrintBRR = 0;
 21826  0038BC  0E00               	movlw	0
 21827  0038BE  0101               	movlb	1	; () banked
 21828  0038C0  6FC4               	movwf	_lcdPrintBRR& (0+255),b
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;menu.c: 440:         setCursor(11, 1);
 21832  0038C2  0E01               	movlw	1
 21833  0038C4  0100               	movlb	0	; () banked
 21834  0038C6  6F92               	movwf	setCursor@row& (0+255),b
 21835  0038C8  0E0B               	movlw	11
 21836  0038CA  ECAD  F04C         	call	_setCursor
 21837                           
 21838                           ;menu.c: 441:         printstr(lcdBtnRRow);
 21839  0038CE  0EC9               	movlw	low _lcdBtnRRow
 21840  0038D0  0100               	movlb	0	; () banked
 21841  0038D2  6F8B               	movwf	printstr@c& (0+255),b
 21842  0038D4  0E02               	movlw	high _lcdBtnRRow
 21843  0038D6  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21844  0038D8  ECD6  F03D         	call	_printstr	;wreg free
 21845  0038DC  D7DE               	goto	L64
 21846  0038DE                     l18695:
 21847  0038DE  0101               	movlb	1	; () banked
 21848  0038E0  51C5               	movf	_lcdPrintBR& (0+255),w,b
 21849  0038E2  B4D8               	btfsc	status,2,c
 21850  0038E4  D0EC               	goto	l18745
 21851                           
 21852                           ; BSR set to: 1
 21853  0038E6  EC18  F054         	call	_PrintStrBusy	;wreg free
 21854  0038EA  0900               	iorlw	0
 21855  0038EC  A4D8               	btfss	status,2,c
 21856  0038EE  D0E7               	goto	l18745
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;menu.c: 446:         lcdPrintBR = 0;
 21860  0038F0  0E00               	movlw	0
 21861  0038F2  0101               	movlb	1	; () banked
 21862  0038F4  6FC5               	movwf	_lcdPrintBR& (0+255),b
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;menu.c: 447:         if (menuStatus == CFG_LOWVA) {
 21866  0038F6  0E06               	movlw	6
 21867  0038F8  19B8               	xorwf	_menuStatus& (0+255),w,b
 21868  0038FA  A4D8               	btfss	status,2,c
 21869  0038FC  D02D               	goto	l18707
 21870                           
 21871                           ; BSR set to: 1
 21872                           ;menu.c: 448:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21873  0038FE  0060  F65C  F09B   	movff	_menuVal,___wmul@multiplier
 21874  003904  0060  F660  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21875  00390A  0E00               	movlw	0
 21876  00390C  0100               	movlb	0	; () banked
 21877  00390E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21878  003910  0E0A               	movlw	10
 21879  003912  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21880  003914  ECFC  F04E         	call	___wmul	;wreg free
 21881  003918  0060  F26C  F15E   	movff	?___wmul,_screenMng$6112
 21882  00391E  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6112+1
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;menu.c: 448:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21886  003924  0E97               	movlw	low _lcdBtnRow
 21887  003926  0101               	movlb	1	; () banked
 21888  003928  6F46               	movwf	sprintf@s& (0+255),b
 21889  00392A  0E02               	movlw	high _lcdBtnRow
 21890  00392C  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21891  00392E  0E97               	movlw	low STR_52
 21892  003930  6F48               	movwf	sprintf@fmt& (0+255),b
 21893  003932  0EFF               	movlw	high STR_52
 21894  003934  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21895  003936  0060  F578  F14A   	movff	_screenMng$6112,?_sprintf+4
 21896  00393C  0060  F57C  F14B   	movff	_screenMng$6112+1,?_sprintf+5
 21897  003942  51F9               	movf	_HighVAlarm& (0+255),w,b
 21898  003944  0D0A               	mullw	10
 21899  003946  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 21900  00394C  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 21901  003952  EC31  F049         	call	_sprintf	;wreg free
 21902                           
 21903                           ;menu.c: 449:         } else if (menuStatus == CFG_HIGHVA) {
 21904  003956  D0A5               	goto	l18739
 21905  003958                     l18707:
 21906                           
 21907                           ; BSR set to: 1
 21908  003958  0E07               	movlw	7
 21909  00395A  19B8               	xorwf	_menuStatus& (0+255),w,b
 21910  00395C  A4D8               	btfss	status,2,c
 21911  00395E  D02D               	goto	l18713
 21912                           
 21913                           ; BSR set to: 1
 21914                           ;menu.c: 450:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21915  003960  0060  F65C  F09B   	movff	_menuVal,___wmul@multiplier
 21916  003966  0060  F660  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21917  00396C  0E00               	movlw	0
 21918  00396E  0100               	movlb	0	; () banked
 21919  003970  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21920  003972  0E0A               	movlw	10
 21921  003974  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21922  003976  ECFC  F04E         	call	___wmul	;wreg free
 21923  00397A  0060  F26C  F15E   	movff	?___wmul,_screenMng$6112
 21924  003980  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6112+1
 21925                           
 21926                           ; BSR set to: 0
 21927                           ;menu.c: 450:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21928  003986  0E97               	movlw	low _lcdBtnRow
 21929  003988  0101               	movlb	1	; () banked
 21930  00398A  6F46               	movwf	sprintf@s& (0+255),b
 21931  00398C  0E02               	movlw	high _lcdBtnRow
 21932  00398E  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21933  003990  0E97               	movlw	low STR_52
 21934  003992  6F48               	movwf	sprintf@fmt& (0+255),b
 21935  003994  0EFF               	movlw	high STR_52
 21936  003996  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21937  003998  51F3               	movf	_LowVAlarm& (0+255),w,b
 21938  00399A  0D0A               	mullw	10
 21939  00399C  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 21940  0039A2  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 21941  0039A8  0060  F578  F14C   	movff	_screenMng$6112,?_sprintf+6
 21942  0039AE  0060  F57C  F14D   	movff	_screenMng$6112+1,?_sprintf+7
 21943  0039B4  EC31  F049         	call	_sprintf	;wreg free
 21944                           
 21945                           ;menu.c: 451:         } else if (menuStatus == CFG_POWEROFF) {
 21946  0039B8  D074               	goto	l18739
 21947  0039BA                     l18713:
 21948                           
 21949                           ; BSR set to: 1
 21950  0039BA  0E0C               	movlw	12
 21951  0039BC  19B8               	xorwf	_menuStatus& (0+255),w,b
 21952  0039BE  A4D8               	btfss	status,2,c
 21953  0039C0  D00B               	goto	l18717
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;menu.c: 452:                 sprintf(lcdBtnRow, "POWER OFF ");
 21957  0039C2  0E97               	movlw	low _lcdBtnRow
 21958  0039C4  6F46               	movwf	sprintf@s& (0+255),b
 21959  0039C6  0E02               	movlw	high _lcdBtnRow
 21960  0039C8  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21961  0039CA  0E62               	movlw	low STR_54
 21962  0039CC  6F48               	movwf	sprintf@fmt& (0+255),b
 21963  0039CE  0EFF               	movlw	high STR_54
 21964  0039D0  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21965  0039D2  EC31  F049         	call	_sprintf	;wreg free
 21966                           
 21967                           ;menu.c: 453:         } else if (menuStatus == CFG_ENGMODE) {
 21968  0039D6  D065               	goto	l18739
 21969  0039D8                     l18717:
 21970                           
 21971                           ; BSR set to: 1
 21972  0039D8  0E08               	movlw	8
 21973  0039DA  19B8               	xorwf	_menuStatus& (0+255),w,b
 21974  0039DC  A4D8               	btfss	status,2,c
 21975  0039DE  D00B               	goto	l18721
 21976                           
 21977                           ; BSR set to: 1
 21978                           ;menu.c: 454:                 sprintf(lcdBtnRow, "VS LS BDT");
 21979  0039E0  0E97               	movlw	low _lcdBtnRow
 21980  0039E2  6F46               	movwf	sprintf@s& (0+255),b
 21981  0039E4  0E02               	movlw	high _lcdBtnRow
 21982  0039E6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21983  0039E8  0EAB               	movlw	low STR_55
 21984  0039EA  6F48               	movwf	sprintf@fmt& (0+255),b
 21985  0039EC  0EFF               	movlw	high STR_55
 21986  0039EE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21987  0039F0  EC31  F049         	call	_sprintf	;wreg free
 21988                           
 21989                           ;menu.c: 455:         } else if (menuStatus == CFG_ENGTRIG) {
 21990  0039F4  D056               	goto	l18739
 21991  0039F6                     l18721:
 21992                           
 21993                           ; BSR set to: 1
 21994  0039F6  0E0B               	movlw	11
 21995  0039F8  19B8               	xorwf	_menuStatus& (0+255),w,b
 21996  0039FA  A4D8               	btfss	status,2,c
 21997  0039FC  D00B               	goto	l18725
 21998                           
 21999                           ; BSR set to: 1
 22000                           ;menu.c: 456:                 sprintf(lcdBtnRow, "      BDT");
 22001  0039FE  0E97               	movlw	low _lcdBtnRow
 22002  003A00  6F46               	movwf	sprintf@s& (0+255),b
 22003  003A02  0E02               	movlw	high _lcdBtnRow
 22004  003A04  6F47               	movwf	(sprintf@s+1)& (0+255),b
 22005  003A06  0EA1               	movlw	low STR_56
 22006  003A08  6F48               	movwf	sprintf@fmt& (0+255),b
 22007  003A0A  0EFF               	movlw	high STR_56
 22008  003A0C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 22009  003A0E  EC31  F049         	call	_sprintf	;wreg free
 22010                           
 22011                           ;menu.c: 457:         } else if (menuStatus == CFG_ENGVSTATS) {
 22012  003A12  D047               	goto	l18739
 22013  003A14                     l18725:
 22014                           
 22015                           ; BSR set to: 1
 22016  003A14  0E09               	movlw	9
 22017  003A16  19B8               	xorwf	_menuStatus& (0+255),w,b
 22018  003A18  A4D8               	btfss	status,2,c
 22019  003A1A  D00B               	goto	l18729
 22020                           
 22021                           ; BSR set to: 1
 22022                           ;menu.c: 458:                 sprintf(lcdBtnRow, "S2O S2C S3C");
 22023  003A1C  0E97               	movlw	low _lcdBtnRow
 22024  003A1E  6F46               	movwf	sprintf@s& (0+255),b
 22025  003A20  0E02               	movlw	high _lcdBtnRow
 22026  003A22  6F47               	movwf	(sprintf@s+1)& (0+255),b
 22027  003A24  0E3E               	movlw	low STR_57
 22028  003A26  6F48               	movwf	sprintf@fmt& (0+255),b
 22029  003A28  0EFF               	movlw	high STR_57
 22030  003A2A  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 22031  003A2C  EC31  F049         	call	_sprintf	;wreg free
 22032                           
 22033                           ;menu.c: 459:         } else if (menuStatus == CFG_ENGLSTATS) {
 22034  003A30  D038               	goto	l18739
 22035  003A32                     l18729:
 22036                           
 22037                           ; BSR set to: 1
 22038  003A32  0E0A               	movlw	10
 22039  003A34  19B8               	xorwf	_menuStatus& (0+255),w,b
 22040  003A36  A4D8               	btfss	status,2,c
 22041  003A38  D00B               	goto	l18733
 22042                           
 22043                           ; BSR set to: 1
 22044                           ;menu.c: 460:                 sprintf(lcdBtnRow, "LC    LR   ");
 22045  003A3A  0E97               	movlw	low _lcdBtnRow
 22046  003A3C  6F46               	movwf	sprintf@s& (0+255),b
 22047  003A3E  0E02               	movlw	high _lcdBtnRow
 22048  003A40  6F47               	movwf	(sprintf@s+1)& (0+255),b
 22049  003A42  0E26               	movlw	low STR_58
 22050  003A44  6F48               	movwf	sprintf@fmt& (0+255),b
 22051  003A46  0EFF               	movlw	high STR_58
 22052  003A48  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 22053  003A4A  EC31  F049         	call	_sprintf	;wreg free
 22054                           
 22055                           ;menu.c: 461:         } else {
 22056  003A4E  D029               	goto	l18739
 22057  003A50                     l18733:
 22058                           
 22059                           ; BSR set to: 1
 22060                           ;menu.c: 462:             if (ctrlStatus != CTRL_SLEEP) {
 22061  003A50  0E03               	movlw	3
 22062  003A52  19C0               	xorwf	_ctrlStatus& (0+255),w,b
 22063  003A54  B4D8               	btfsc	status,2,c
 22064  003A56  D01B               	goto	l18737
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;menu.c: 463:                 sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm
      +                          ), 10 * ((uint16_t) HighVAlarm));
 22068  003A58  0E97               	movlw	low _lcdBtnRow
 22069  003A5A  6F46               	movwf	sprintf@s& (0+255),b
 22070  003A5C  0E02               	movlw	high _lcdBtnRow
 22071  003A5E  6F47               	movwf	(sprintf@s+1)& (0+255),b
 22072  003A60  0E97               	movlw	low STR_52
 22073  003A62  6F48               	movwf	sprintf@fmt& (0+255),b
 22074  003A64  0EFF               	movlw	high STR_52
 22075  003A66  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 22076  003A68  51F3               	movf	_LowVAlarm& (0+255),w,b
 22077  003A6A  0D0A               	mullw	10
 22078  003A6C  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 22079  003A72  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 22080  003A78  51F9               	movf	_HighVAlarm& (0+255),w,b
 22081  003A7A  0D0A               	mullw	10
 22082  003A7C  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 22083  003A82  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 22084  003A88  EC31  F049         	call	_sprintf	;wreg free
 22085                           
 22086                           ;menu.c: 464:             } else {
 22087  003A8C  D00A               	goto	l18739
 22088  003A8E                     l18737:
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;menu.c: 465:                 sprintf(lcdBtnRow, "PWR TO ON ");
 22092  003A8E  0E97               	movlw	low _lcdBtnRow
 22093  003A90  6F46               	movwf	sprintf@s& (0+255),b
 22094  003A92  0E02               	movlw	high _lcdBtnRow
 22095  003A94  6F47               	movwf	(sprintf@s+1)& (0+255),b
 22096  003A96  0E6D               	movlw	low STR_60
 22097  003A98  6F48               	movwf	sprintf@fmt& (0+255),b
 22098  003A9A  0EFF               	movlw	high STR_60
 22099  003A9C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 22100  003A9E  EC31  F049         	call	_sprintf	;wreg free
 22101  003AA2                     l18739:
 22102                           
 22103                           ; BSR set to: 1
 22104                           ;menu.c: 471:         setCursor(0, 1);
 22105  003AA2  0E01               	movlw	1
 22106  003AA4  0100               	movlb	0	; () banked
 22107  003AA6  6F92               	movwf	setCursor@row& (0+255),b
 22108  003AA8  0E00               	movlw	0
 22109  003AAA  ECAD  F04C         	call	_setCursor
 22110                           
 22111                           ;menu.c: 472:         printstr(lcdBtnRow);
 22112  003AAE  0E97               	movlw	low _lcdBtnRow
 22113  003AB0  0100               	movlb	0	; () banked
 22114  003AB2  6F8B               	movwf	printstr@c& (0+255),b
 22115  003AB4  0E02               	movlw	high _lcdBtnRow
 22116  003AB6  6F8C               	movwf	(printstr@c+1)& (0+255),b
 22117  003AB8  ECD6  F03D         	call	_printstr	;wreg free
 22118  003ABC  D6F2               	goto	u19320
 22119  003ABE                     l18745:
 22120  003ABE  0100               	movlb	0	; () banked
 22121  003AC0  51BE               	movf	_lcdBlink& (0+255),w,b
 22122  003AC2  B4D8               	btfsc	status,2,c
 22123  003AC4  0012               	return	
 22124                           
 22125                           ; BSR set to: 0
 22126  003AC6  EC18  F054         	call	_PrintStrBusy	;wreg free
 22127  003ACA  0900               	iorlw	0
 22128  003ACC  A4D8               	btfss	status,2,c
 22129  003ACE  0012               	return	
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;menu.c: 475:         lcdBlink = 0;
 22133  003AD0  0E00               	movlw	0
 22134  003AD2  6FBE               	movwf	_lcdBlink& (0+255),b
 22135                           
 22136                           ;menu.c: 476:         switch (menuStatus) {
 22137  003AD4  D038               	goto	l18769
 22138  003AD6                     l18751:
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;menu.c: 478:                 setCursor(1, 0);
 22142  003AD6  0E00               	movlw	0
 22143  003AD8  0100               	movlb	0	; () banked
 22144  003ADA  6F92               	movwf	setCursor@row& (0+255),b
 22145  003ADC  0E01               	movlw	1
 22146  003ADE  ECAD  F04C         	call	_setCursor
 22147                           
 22148                           ;menu.c: 479:                 break;
 22149  003AE2  0012               	return	
 22150  003AE4                     l18753:
 22151                           
 22152                           ; BSR set to: 1
 22153                           ;menu.c: 481:                 setCursor(4, 0);
 22154  003AE4  0E00               	movlw	0
 22155  003AE6  0100               	movlb	0	; () banked
 22156  003AE8  6F92               	movwf	setCursor@row& (0+255),b
 22157  003AEA  0E04               	movlw	4
 22158  003AEC  ECAD  F04C         	call	_setCursor
 22159                           
 22160                           ;menu.c: 482:                 break;
 22161  003AF0  0012               	return	
 22162  003AF2                     l18755:
 22163                           
 22164                           ; BSR set to: 1
 22165                           ;menu.c: 484:                 setCursor(7, 0);
 22166  003AF2  0E00               	movlw	0
 22167  003AF4  0100               	movlb	0	; () banked
 22168  003AF6  6F92               	movwf	setCursor@row& (0+255),b
 22169  003AF8  0E07               	movlw	7
 22170  003AFA  ECAD  F04C         	call	_setCursor
 22171                           
 22172                           ;menu.c: 485:                 break;
 22173  003AFE  0012               	return	
 22174  003B00                     l18757:
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;menu.c: 487:                 setCursor(10, 0);
 22178  003B00  0E00               	movlw	0
 22179  003B02  0100               	movlb	0	; () banked
 22180  003B04  6F92               	movwf	setCursor@row& (0+255),b
 22181  003B06  0E0A               	movlw	10
 22182  003B08  ECAD  F04C         	call	_setCursor
 22183                           
 22184                           ;menu.c: 488:                 break;
 22185  003B0C  0012               	return	
 22186  003B0E                     l18759:
 22187                           
 22188                           ; BSR set to: 1
 22189                           ;menu.c: 490:                 setCursor(15, 0);
 22190  003B0E  0E00               	movlw	0
 22191  003B10  0100               	movlb	0	; () banked
 22192  003B12  6F92               	movwf	setCursor@row& (0+255),b
 22193  003B14  0E0F               	movlw	15
 22194  003B16  ECAD  F04C         	call	_setCursor
 22195                           
 22196                           ;menu.c: 491:                 break;
 22197  003B1A  0012               	return	
 22198  003B1C                     l18761:
 22199                           
 22200                           ; BSR set to: 1
 22201                           ;menu.c: 493:                 setCursor(3, 1);
 22202  003B1C  0E01               	movlw	1
 22203  003B1E  0100               	movlb	0	; () banked
 22204  003B20  6F92               	movwf	setCursor@row& (0+255),b
 22205  003B22  0E03               	movlw	3
 22206  003B24  ECAD  F04C         	call	_setCursor
 22207                           
 22208                           ;menu.c: 494:                 break;
 22209  003B28  0012               	return	
 22210  003B2A                     l18763:
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;menu.c: 496:                 setCursor(8, 1);
 22214  003B2A  0E01               	movlw	1
 22215  003B2C  0100               	movlb	0	; () banked
 22216  003B2E  6F92               	movwf	setCursor@row& (0+255),b
 22217  003B30  0E08               	movlw	8
 22218  003B32  ECAD  F04C         	call	_setCursor
 22219                           
 22220                           ;menu.c: 497:                 break;
 22221  003B36  0012               	return	
 22222  003B38                     l18765:
 22223                           
 22224                           ; BSR set to: 1
 22225                           ;menu.c: 499:                 setCursor(21, 0);
 22226  003B38  0E00               	movlw	0
 22227  003B3A  0100               	movlb	0	; () banked
 22228  003B3C  6F92               	movwf	setCursor@row& (0+255),b
 22229  003B3E  0E15               	movlw	21
 22230  003B40  ECAD  F04C         	call	_setCursor
 22231                           
 22232                           ;menu.c: 500:                 break;
 22233  003B44  0012               	return	
 22234  003B46                     l18769:
 22235                           
 22236                           ; BSR set to: 0
 22237  003B46  0101               	movlb	1	; () banked
 22238  003B48  51B8               	movf	_menuStatus& (0+255),w,b
 22239  003B4A  6F5C               	movwf	??_screenMng& (0+255),b
 22240  003B4C  6B5D               	clrf	(??_screenMng+1)& (0+255),b
 22241                           
 22242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22243                           ; Switch size 1, requested type "simple"
 22244                           ; Number of cases is 1, Range of values is 0 to 0
 22245                           ; switch strategies available:
 22246                           ; Name         Instructions Cycles
 22247                           ; simple_byte            4     3 (average)
 22248                           ;	Chosen strategy is simple_byte
 22249  003B4E  515D               	movf	(??_screenMng+1)& (0+255),w,b
 22250  003B50  0A00               	xorlw	0	; case 0
 22251  003B52  A4D8               	btfss	status,2,c
 22252  003B54  D7F1               	goto	l18765
 22253                           
 22254                           ; BSR set to: 1
 22255                           ; Switch size 1, requested type "simple"
 22256                           ; Number of cases is 7, Range of values is 1 to 7
 22257                           ; switch strategies available:
 22258                           ; Name         Instructions Cycles
 22259                           ; simple_byte           22    12 (average)
 22260                           ;	Chosen strategy is simple_byte
 22261  003B56  515C               	movf	??_screenMng& (0+255),w,b
 22262  003B58  0A01               	xorlw	1	; case 1
 22263  003B5A  B4D8               	btfsc	status,2,c
 22264  003B5C  D7CA               	goto	l18755
 22265  003B5E  0A03               	xorlw	3	; case 2
 22266  003B60  B4D8               	btfsc	status,2,c
 22267  003B62  D7B9               	goto	l18751
 22268  003B64  0A01               	xorlw	1	; case 3
 22269  003B66  B4D8               	btfsc	status,2,c
 22270  003B68  D7BD               	goto	l18753
 22271  003B6A  0A07               	xorlw	7	; case 4
 22272  003B6C  B4D8               	btfsc	status,2,c
 22273  003B6E  D7C8               	goto	l18757
 22274  003B70  0A01               	xorlw	1	; case 5
 22275  003B72  B4D8               	btfsc	status,2,c
 22276  003B74  D7CC               	goto	l18759
 22277  003B76  0A03               	xorlw	3	; case 6
 22278  003B78  B4D8               	btfsc	status,2,c
 22279  003B7A  D7D0               	goto	l18761
 22280  003B7C  0A01               	xorlw	1	; case 7
 22281  003B7E  B4D8               	btfsc	status,2,c
 22282  003B80  D7D4               	goto	l18763
 22283  003B82  D7DA               	goto	l18765
 22284  003B84                     __end_of_screenMng:
 22285                           	opt callstack 0
 22286                           
 22287 ;; *************** function _setCursor *****************
 22288 ;; Defined at:
 22289 ;;		line 233 in file "LiquidCrystal_I2C.c"
 22290 ;; Parameters:    Size  Location     Type
 22291 ;;  col             1    wreg     unsigned char 
 22292 ;;  row             1   50[BANK0 ] unsigned char 
 22293 ;; Auto vars:     Size  Location     Type
 22294 ;;  col             1   59[BANK0 ] unsigned char 
 22295 ;;  row_offsets     8   51[BANK0 ] int [4]
 22296 ;; Return value:  Size  Location     Type
 22297 ;;                  1    wreg      void 
 22298 ;; Registers used:
 22299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22300 ;; Tracked objects:
 22301 ;;		On entry : 3F/0
 22302 ;;		On exit  : 6/0
 22303 ;;		Unchanged: 0/0
 22304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22305 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22306 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22308 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22309 ;;Total ram usage:       10 bytes
 22310 ;; Hardware stack levels used:    1
 22311 ;; Hardware stack levels required when called:   21
 22312 ;; This function calls:
 22313 ;;		_command
 22314 ;; This function is called by:
 22315 ;;		_CtrlPowerOff
 22316 ;;		_main
 22317 ;;		_screenInit
 22318 ;;		_screenMng
 22319 ;;		_pressureSensorChk
 22320 ;;		_flowChk
 22321 ;;		_SelfTest
 22322 ;; This function uses a non-reentrant model
 22323 ;;
 22324                           
 22325                           	psect	text72
 22326  00995A                     __ptext72:
 22327                           	opt callstack 0
 22328  00995A                     _setCursor:
 22329                           	opt callstack 9
 22330                           
 22331                           ;incstack = 0
 22332                           ;setCursor@col stored from wreg
 22333  00995A  6F9B               	movwf	setCursor@col& (0+255),b
 22334                           
 22335                           ;LiquidCrystal_I2C.c: 234:  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 22336  00995C  EE20  F2DF         	lfsr	2,setCursor@F16920
 22337  009960  EE10  F093         	lfsr	1,setCursor@row_offsets
 22338  009964  0E07               	movlw	7
 22339  009966                     u18611:
 22340  009966  006F FF6F FFE3     	movff	plusw2,plusw1
 22341  00996C  06E8               	decf	wreg,f,c
 22342  00996E  E2FB               	bc	u18611
 22343                           
 22344                           ;LiquidCrystal_I2C.c: 235:  if ( row > _numlines ) {
 22345  009970  0100               	movlb	0	; () banked
 22346  009972  5192               	movf	setCursor@row& (0+255),w,b
 22347  009974  5DCA               	subwf	__numlines& (0+255),w,b
 22348  009976  B0D8               	btfsc	status,0,c
 22349  009978  D002               	goto	l18077
 22350                           
 22351                           ; BSR set to: 0
 22352                           ;LiquidCrystal_I2C.c: 236:   row = _numlines-1;
 22353  00997A  05CA               	decf	__numlines& (0+255),w,b
 22354  00997C  6F92               	movwf	setCursor@row& (0+255),b
 22355  00997E                     l18077:
 22356                           
 22357                           ; BSR set to: 0
 22358                           ;LiquidCrystal_I2C.c: 238:  command(0x80 | (col + row_offsets[row]));
 22359  00997E  5192               	movf	setCursor@row& (0+255),w,b
 22360  009980  0D02               	mullw	2
 22361  009982  50F3               	movf	243,w,c
 22362  009984  0F93               	addlw	low setCursor@row_offsets
 22363  009986  6ED9               	movwf	fsr2l,c
 22364  009988  6ADA               	clrf	fsr2h,c
 22365  00998A  50DF               	movf	indf2,w,c
 22366  00998C  259B               	addwf	setCursor@col& (0+255),w,b
 22367  00998E  0980               	iorlw	128
 22368  009990  EC01  F053         	call	_command
 22369  009994  0012               	return		;funcret
 22370  009996                     __end_of_setCursor:
 22371                           	opt callstack 0
 22372                           
 22373 ;; *************** function _command *****************
 22374 ;; Defined at:
 22375 ;;		line 135 in file "LiquidCrystal_I2C.c"
 22376 ;; Parameters:    Size  Location     Type
 22377 ;;  value           1    wreg     unsigned char 
 22378 ;; Auto vars:     Size  Location     Type
 22379 ;;  value           1   49[BANK0 ] unsigned char 
 22380 ;; Return value:  Size  Location     Type
 22381 ;;                  1    wreg      void 
 22382 ;; Registers used:
 22383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22384 ;; Tracked objects:
 22385 ;;		On entry : 3F/0
 22386 ;;		On exit  : 6/0
 22387 ;;		Unchanged: 0/0
 22388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22392 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22393 ;;Total ram usage:        1 bytes
 22394 ;; Hardware stack levels used:    1
 22395 ;; Hardware stack levels required when called:   20
 22396 ;; This function calls:
 22397 ;;		_send
 22398 ;; This function is called by:
 22399 ;;		_LcdI2CInit
 22400 ;;		_clear
 22401 ;;		_home
 22402 ;;		_setCursor
 22403 ;;		_display
 22404 ;;		_blink
 22405 ;; This function uses a non-reentrant model
 22406 ;;
 22407                           
 22408                           	psect	text73
 22409  00A602                     __ptext73:
 22410                           	opt callstack 0
 22411  00A602                     _command:
 22412                           	opt callstack 9
 22413                           
 22414                           ;incstack = 0
 22415                           ;command@value stored from wreg
 22416  00A602  6F91               	movwf	command@value& (0+255),b
 22417                           
 22418                           ;LiquidCrystal_I2C.c: 136:  send(value, 0x4);
 22419  00A604  0E04               	movlw	4
 22420  00A606  0100               	movlb	0	; () banked
 22421  00A608  6F8F               	movwf	send@mode& (0+255),b
 22422  00A60A  5191               	movf	command@value& (0+255),w,b
 22423  00A60C  EC95  F050         	call	_send
 22424  00A610  0012               	return		;funcret
 22425  00A612                     __end_of_command:
 22426                           	opt callstack 0
 22427                           
 22428 ;; *************** function _send *****************
 22429 ;; Defined at:
 22430 ;;		line 81 in file "LiquidCrystal_I2C.c"
 22431 ;; Parameters:    Size  Location     Type
 22432 ;;  value           1    wreg     unsigned char 
 22433 ;;  mode            1   47[BANK0 ] unsigned char 
 22434 ;; Auto vars:     Size  Location     Type
 22435 ;;  value           1   48[BANK0 ] unsigned char 
 22436 ;; Return value:  Size  Location     Type
 22437 ;;                  1    wreg      void 
 22438 ;; Registers used:
 22439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22440 ;; Tracked objects:
 22441 ;;		On entry : 3F/0
 22442 ;;		On exit  : 6/0
 22443 ;;		Unchanged: 0/0
 22444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22445 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22449 ;;Total ram usage:        2 bytes
 22450 ;; Hardware stack levels used:    1
 22451 ;; Hardware stack levels required when called:   19
 22452 ;; This function calls:
 22453 ;;		_send4bits
 22454 ;; This function is called by:
 22455 ;;		_command
 22456 ;; This function uses a non-reentrant model
 22457 ;;
 22458                           
 22459                           	psect	text74
 22460  00A12A                     __ptext74:
 22461                           	opt callstack 0
 22462  00A12A                     _send:
 22463                           	opt callstack 9
 22464                           
 22465                           ;incstack = 0
 22466                           ;send@value stored from wreg
 22467  00A12A  6F90               	movwf	send@value& (0+255),b
 22468                           
 22469                           ;LiquidCrystal_I2C.c: 82:     send4bits(value&0xf0, mode);
 22470  00A12C  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 22471  00A132  0100               	movlb	0	; () banked
 22472  00A134  5190               	movf	send@value& (0+255),w,b
 22473  00A136  0BF0               	andlw	240
 22474  00A138  EC04  F049         	call	_send4bits
 22475                           
 22476                           ;LiquidCrystal_I2C.c: 83:     send4bits((value<<4)&0xf0, mode);
 22477  00A13C  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 22478  00A142  0100               	movlb	0	; () banked
 22479  00A144  3990               	swapf	send@value& (0+255),w,b
 22480  00A146  0BF0               	andlw	240
 22481  00A148  0BF0               	andlw	240
 22482  00A14A  EC04  F049         	call	_send4bits
 22483  00A14E  0012               	return		;funcret
 22484  00A150                     __end_of_send:
 22485                           	opt callstack 0
 22486                           
 22487 ;; *************** function _send4bits *****************
 22488 ;; Defined at:
 22489 ;;		line 59 in file "LiquidCrystal_I2C.c"
 22490 ;; Parameters:    Size  Location     Type
 22491 ;;  value           1    wreg     unsigned char 
 22492 ;;  mode            1   43[BANK0 ] unsigned char 
 22493 ;; Auto vars:     Size  Location     Type
 22494 ;;  value           1   44[BANK0 ] unsigned char 
 22495 ;;  idx             2   45[BANK0 ] int 
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1    wreg      void 
 22498 ;; Registers used:
 22499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22500 ;; Tracked objects:
 22501 ;;		On entry : 3F/0
 22502 ;;		On exit  : 6/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22505 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22509 ;;Total ram usage:        4 bytes
 22510 ;; Hardware stack levels used:    1
 22511 ;; Hardware stack levels required when called:   18
 22512 ;; This function calls:
 22513 ;;		_TMR6_Start
 22514 ;; This function is called by:
 22515 ;;		_send
 22516 ;;		_expanderWriteBlock
 22517 ;;		_LcdI2CInit
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text75
 22522  009208                     __ptext75:
 22523                           	opt callstack 0
 22524  009208                     _send4bits:
 22525                           	opt callstack 9
 22526                           
 22527                           ;incstack = 0
 22528                           ;send4bits@value stored from wreg
 22529  009208  6F8C               	movwf	send4bits@value& (0+255),b
 22530                           
 22531                           ;LiquidCrystal_I2C.c: 60:     int idx;;LiquidCrystal_I2C.c: 62:     if (lcdBusy){
 22532  00920A  0100               	movlb	0	; () banked
 22533  00920C  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 22534  00920E  B4D8               	btfsc	status,2,c
 22535  009210  D008               	goto	l17435
 22536                           
 22537                           ; BSR set to: 0
 22538                           ;LiquidCrystal_I2C.c: 63:         PIE9bits.TMR6IE = 0;
 22539  009212  0139               	movlb	57	; () banked
 22540  009214  9199               	bcf	153,0,b	;volatile
 22541                           
 22542                           ;LiquidCrystal_I2C.c: 64:         idx = parBuffLen;
 22543  009216  0060  F31C  F08D   	movff	_parBuffLen,send4bits@idx	;volatile
 22544  00921C  0100               	movlb	0	; () banked
 22545  00921E  6B8E               	clrf	(send4bits@idx+1)& (0+255),b
 22546                           
 22547                           ;LiquidCrystal_I2C.c: 65:     } else {
 22548  009220  D006               	goto	l17437
 22549  009222                     l17435:
 22550                           
 22551                           ; BSR set to: 0
 22552                           ;LiquidCrystal_I2C.c: 66:         idx = 0;
 22553  009222  0E00               	movlw	0
 22554  009224  6F8E               	movwf	(send4bits@idx+1)& (0+255),b
 22555  009226  0E00               	movlw	0
 22556  009228  6F8D               	movwf	send4bits@idx& (0+255),b
 22557                           
 22558                           ;LiquidCrystal_I2C.c: 67:         parBuffPtr=0;
 22559  00922A  0E00               	movlw	0
 22560  00922C  6FC8               	movwf	_parBuffPtr& (0+255),b	;volatile
 22561  00922E                     l17437:
 22562                           
 22563                           ; BSR set to: 0
 22564                           ;LiquidCrystal_I2C.c: 69:     i2cBuff[idx++]=value | mode | _backlightval;
 22565  00922E  0E00               	movlw	low _i2cBuff
 22566  009230  258D               	addwf	send4bits@idx& (0+255),w,b
 22567  009232  6ED9               	movwf	fsr2l,c
 22568  009234  0E03               	movlw	high _i2cBuff
 22569  009236  218E               	addwfc	(send4bits@idx+1)& (0+255),w,b
 22570  009238  6EDA               	movwf	fsr2h,c
 22571  00923A  518C               	movf	send4bits@value& (0+255),w,b
 22572  00923C  118B               	iorwf	send4bits@mode& (0+255),w,b
 22573  00923E  11C9               	iorwf	__backlightval& (0+255),w,b	;volatile
 22574  009240  6EDF               	movwf	indf2,c
 22575                           
 22576                           ; BSR set to: 0
 22577  009242  4B8D               	infsnz	send4bits@idx& (0+255),f,b
 22578  009244  2B8E               	incf	(send4bits@idx+1)& (0+255),f,b
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;LiquidCrystal_I2C.c: 71:     parBuffLen=idx;
 22582  009246  0060  F234  F0C7   	movff	send4bits@idx,_parBuffLen	;volatile
 22583                           
 22584                           ; BSR set to: 0
 22585                           ;LiquidCrystal_I2C.c: 72:     if (lcdBusy){
 22586  00924C  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 22587  00924E  B4D8               	btfsc	status,2,c
 22588  009250  D003               	goto	l17447
 22589                           
 22590                           ; BSR set to: 0
 22591                           ;LiquidCrystal_I2C.c: 73:         PIE9bits.TMR6IE = 1;
 22592  009252  0139               	movlb	57	; () banked
 22593  009254  8199               	bsf	153,0,b	;volatile
 22594                           
 22595                           ;LiquidCrystal_I2C.c: 74:     } else {
 22596  009256  0012               	return	
 22597  009258                     l17447:
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;LiquidCrystal_I2C.c: 75:         lcdBusy = 1;
 22601  009258  0E01               	movlw	1
 22602  00925A  6FC6               	movwf	_lcdBusy& (0+255),b	;volatile
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;LiquidCrystal_I2C.c: 76:         TMR6_Start();
 22606  00925C  EC43  F054         	call	_TMR6_Start	;wreg free
 22607  009260  0012               	return		;funcret
 22608  009262                     __end_of_send4bits:
 22609                           	opt callstack 0
 22610                           
 22611 ;; *************** function ___tmul *****************
 22612 ;; Defined at:
 22613 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul24.c"
 22614 ;; Parameters:    Size  Location     Type
 22615 ;;  multiplier      3   43[BANK0 ] unsigned um
 22616 ;;  multiplicand    3   46[BANK0 ] unsigned um
 22617 ;; Auto vars:     Size  Location     Type
 22618 ;;  product         3   49[BANK0 ] unsigned um
 22619 ;; Return value:  Size  Location     Type
 22620 ;;                  3   43[BANK0 ] unsigned um
 22621 ;; Registers used:
 22622 ;;		wreg, status,2, status,0
 22623 ;; Tracked objects:
 22624 ;;		On entry : 3F/0
 22625 ;;		On exit  : 3F/0
 22626 ;;		Unchanged: 0/0
 22627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22632 ;;Total ram usage:        9 bytes
 22633 ;; Hardware stack levels used:    1
 22634 ;; Hardware stack levels required when called:   17
 22635 ;; This function calls:
 22636 ;;		Nothing
 22637 ;; This function is called by:
 22638 ;;		_inspOSMeasure
 22639 ;;		_main
 22640 ;;		_screenMng
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           	psect	text76
 22645  00963E                     __ptext76:
 22646                           	opt callstack 0
 22647  00963E                     ___tmul:
 22648                           	opt callstack 12
 22649                           
 22650                           ; BSR set to: 0
 22651                           
 22652                           ;incstack = 0
 22653  00963E  0E00               	movlw	0
 22654  009640  6F91               	movwf	___tmul@product& (0+255),b
 22655  009642  0E00               	movlw	0
 22656  009644  6F92               	movwf	(___tmul@product+1)& (0+255),b
 22657  009646  0E00               	movlw	0
 22658  009648  6F93               	movwf	(___tmul@product+2)& (0+255),b
 22659  00964A                     l18235:
 22660                           
 22661                           ; BSR set to: 0
 22662  00964A  A18B               	btfss	___tmul@multiplier& (0+255),0,b
 22663  00964C  D006               	goto	l18239
 22664                           
 22665                           ; BSR set to: 0
 22666  00964E  518E               	movf	___tmul@multiplicand& (0+255),w,b
 22667  009650  2791               	addwf	___tmul@product& (0+255),f,b
 22668  009652  518F               	movf	(___tmul@multiplicand+1)& (0+255),w,b
 22669  009654  2392               	addwfc	(___tmul@product+1)& (0+255),f,b
 22670  009656  5190               	movf	(___tmul@multiplicand+2)& (0+255),w,b
 22671  009658  2393               	addwfc	(___tmul@product+2)& (0+255),f,b
 22672  00965A                     l18239:
 22673                           
 22674                           ; BSR set to: 0
 22675  00965A  90D8               	bcf	status,0,c
 22676  00965C  378E               	rlcf	___tmul@multiplicand& (0+255),f,b
 22677  00965E  378F               	rlcf	(___tmul@multiplicand+1)& (0+255),f,b
 22678  009660  3790               	rlcf	(___tmul@multiplicand+2)& (0+255),f,b
 22679  009662  90D8               	bcf	status,0,c
 22680  009664  338D               	rrcf	(___tmul@multiplier+2)& (0+255),f,b
 22681  009666  338C               	rrcf	(___tmul@multiplier+1)& (0+255),f,b
 22682  009668  338B               	rrcf	___tmul@multiplier& (0+255),f,b
 22683                           
 22684                           ; BSR set to: 0
 22685  00966A  518B               	movf	___tmul@multiplier& (0+255),w,b
 22686  00966C  118C               	iorwf	(___tmul@multiplier+1)& (0+255),w,b
 22687  00966E  118D               	iorwf	(___tmul@multiplier+2)& (0+255),w,b
 22688  009670  A4D8               	btfss	status,2,c
 22689  009672  D7EB               	goto	l18235
 22690                           
 22691                           ; BSR set to: 0
 22692  009674  0060  F244  F08B   	movff	___tmul@product,?___tmul
 22693  00967A  0060  F248  F08C   	movff	___tmul@product+1,?___tmul+1
 22694  009680  0060  F24C  F08D   	movff	___tmul@product+2,?___tmul+2
 22695                           
 22696                           ; BSR set to: 0
 22697  009686  0012               	return		;funcret
 22698  009688                     __end_of___tmul:
 22699                           	opt callstack 0
 22700                           
 22701 ;; *************** function ___lwdiv *****************
 22702 ;; Defined at:
 22703 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 22704 ;; Parameters:    Size  Location     Type
 22705 ;;  dividend        2   43[BANK0 ] unsigned int 
 22706 ;;  divisor         2   45[BANK0 ] unsigned int 
 22707 ;; Auto vars:     Size  Location     Type
 22708 ;;  quotient        2   48[BANK0 ] unsigned int 
 22709 ;;  counter         1   47[BANK0 ] unsigned char 
 22710 ;; Return value:  Size  Location     Type
 22711 ;;                  2   43[BANK0 ] unsigned int 
 22712 ;; Registers used:
 22713 ;;		wreg, status,2, status,0
 22714 ;; Tracked objects:
 22715 ;;		On entry : 3E/1
 22716 ;;		On exit  : 3F/0
 22717 ;;		Unchanged: 0/0
 22718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22720 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22722 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22723 ;;Total ram usage:        7 bytes
 22724 ;; Hardware stack levels used:    1
 22725 ;; Hardware stack levels required when called:   17
 22726 ;; This function calls:
 22727 ;;		Nothing
 22728 ;; This function is called by:
 22729 ;;		_main
 22730 ;;		_MenuMng
 22731 ;;		_screenMng
 22732 ;; This function uses a non-reentrant model
 22733 ;;
 22734                           
 22735                           	psect	text77
 22736  0092BC                     __ptext77:
 22737                           	opt callstack 0
 22738  0092BC                     ___lwdiv:
 22739                           	opt callstack 12
 22740                           
 22741                           ; BSR set to: 0
 22742                           ;incstack = 0
 22743  0092BC  0E00               	movlw	0
 22744  0092BE  0100               	movlb	0	; () banked
 22745  0092C0  6F91               	movwf	(___lwdiv@quotient+1)& (0+255),b
 22746  0092C2  0E00               	movlw	0
 22747  0092C4  6F90               	movwf	___lwdiv@quotient& (0+255),b
 22748                           
 22749                           ; BSR set to: 0
 22750  0092C6  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22751  0092C8  118E               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22752  0092CA  B4D8               	btfsc	status,2,c
 22753  0092CC  D01C               	goto	l3692
 22754                           
 22755                           ; BSR set to: 0
 22756  0092CE  0E01               	movlw	1
 22757  0092D0  6F8F               	movwf	___lwdiv@counter& (0+255),b
 22758  0092D2  D004               	goto	l18283
 22759  0092D4                     l18281:
 22760                           
 22761                           ; BSR set to: 0
 22762  0092D4  90D8               	bcf	status,0,c
 22763  0092D6  378D               	rlcf	___lwdiv@divisor& (0+255),f,b
 22764  0092D8  378E               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22765  0092DA  2B8F               	incf	___lwdiv@counter& (0+255),f,b
 22766  0092DC                     l18283:
 22767                           
 22768                           ; BSR set to: 0
 22769  0092DC  AF8E               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22770  0092DE  D7FA               	goto	l18281
 22771  0092E0                     u18910:
 22772                           
 22773                           ; BSR set to: 0
 22774  0092E0  90D8               	bcf	status,0,c
 22775  0092E2  3790               	rlcf	___lwdiv@quotient& (0+255),f,b
 22776  0092E4  3791               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22777                           
 22778                           ; BSR set to: 0
 22779  0092E6  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22780  0092E8  5D8B               	subwf	___lwdiv@dividend& (0+255),w,b
 22781  0092EA  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22782  0092EC  598C               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22783  0092EE  A0D8               	btfss	status,0,c
 22784  0092F0  D005               	goto	l18293
 22785                           
 22786                           ; BSR set to: 0
 22787  0092F2  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22788  0092F4  5F8B               	subwf	___lwdiv@dividend& (0+255),f,b
 22789  0092F6  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22790  0092F8  5B8C               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22791                           
 22792                           ; BSR set to: 0
 22793  0092FA  8190               	bsf	___lwdiv@quotient& (0+255),0,b
 22794  0092FC                     l18293:
 22795                           
 22796                           ; BSR set to: 0
 22797  0092FC  90D8               	bcf	status,0,c
 22798  0092FE  338E               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22799  009300  338D               	rrcf	___lwdiv@divisor& (0+255),f,b
 22800                           
 22801                           ; BSR set to: 0
 22802  009302  2F8F               	decfsz	___lwdiv@counter& (0+255),f,b
 22803  009304  D7ED               	goto	u18910
 22804  009306                     l3692:
 22805                           
 22806                           ; BSR set to: 0
 22807  009306  0060  F240  F08B   	movff	___lwdiv@quotient,?___lwdiv
 22808  00930C  0060  F244  F08C   	movff	___lwdiv@quotient+1,?___lwdiv+1
 22809                           
 22810                           ; BSR set to: 0
 22811  009312  0012               	return		;funcret
 22812  009314                     __end_of___lwdiv:
 22813                           	opt callstack 0
 22814                           
 22815 ;; *************** function _printstrblock *****************
 22816 ;; Defined at:
 22817 ;;		line 127 in file "LiquidCrystal_I2C.c"
 22818 ;; Parameters:    Size  Location     Type
 22819 ;;  c               2   47[BANK0 ] PTR const unsigned char 
 22820 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22821 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22822 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22823 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22824 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22825 ;;		 -> STR_69(18), lcdTopRow(20), STR_36(17), STR_35(17), 
 22826 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 22827 ;;		 -> STR_5(19), STR_2(17), 
 22828 ;; Auto vars:     Size  Location     Type
 22829 ;;		None
 22830 ;; Return value:  Size  Location     Type
 22831 ;;                  1    wreg      void 
 22832 ;; Registers used:
 22833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22834 ;; Tracked objects:
 22835 ;;		On entry : 3F/0
 22836 ;;		On exit  : 3F/0
 22837 ;;		Unchanged: 0/0
 22838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22843 ;;Total ram usage:        2 bytes
 22844 ;; Hardware stack levels used:    1
 22845 ;; Hardware stack levels required when called:   19
 22846 ;; This function calls:
 22847 ;;		_PrintStrBusy
 22848 ;;		_printstr
 22849 ;; This function is called by:
 22850 ;;		_CtrlPowerOff
 22851 ;;		_main
 22852 ;;		_screenInit
 22853 ;;		_pressureSensorChk
 22854 ;;		_flowChk
 22855 ;;		_SelfTest
 22856 ;; This function uses a non-reentrant model
 22857 ;;
 22858                           
 22859                           	psect	text78
 22860  00A150                     __ptext78:
 22861                           	opt callstack 0
 22862  00A150                     _printstrblock:
 22863                           	opt callstack 10
 22864                           
 22865                           ; BSR set to: 0
 22866                           
 22867                           ; BSR set to: 0
 22868                           ;LiquidCrystal_I2C.c: 128:     while(PrintStrBusy());
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;incstack = 0
 22872  00A150  EC18  F054         	call	_PrintStrBusy	;wreg free
 22873  00A154  0900               	iorlw	0
 22874  00A156  A4D8               	btfss	status,2,c
 22875  00A158  D7FB               	goto	_printstrblock
 22876                           
 22877                           ; BSR set to: 0
 22878                           ;LiquidCrystal_I2C.c: 129:     printstr(c);
 22879  00A15A  0060  F23C  F08B   	movff	printstrblock@c,printstr@c
 22880  00A160  0060  F240  F08C   	movff	printstrblock@c+1,printstr@c+1
 22881  00A166  ECD6  F03D         	call	_printstr	;wreg free
 22882  00A16A                     l18085:
 22883  00A16A  EC18  F054         	call	_PrintStrBusy	;wreg free
 22884  00A16E  0900               	iorlw	0
 22885  00A170  B4D8               	btfsc	status,2,c
 22886  00A172  0012               	return	
 22887  00A174  D7FA               	goto	l18085
 22888  00A176                     __end_of_printstrblock:
 22889                           	opt callstack 0
 22890                           
 22891 ;; *************** function _printstr *****************
 22892 ;; Defined at:
 22893 ;;		line 95 in file "LiquidCrystal_I2C.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;  c               2   43[BANK0 ] PTR const unsigned char 
 22896 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22897 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22898 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22899 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22900 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22901 ;;		 -> STR_69(18), lcdBtnRow(20), lcdTopRow(20), STR_36(17), 
 22902 ;;		 -> STR_35(17), lcdBtnRRow(10), STR_9(17), STR_8(17), 
 22903 ;;		 -> STR_7(17), STR_6(17), STR_5(19), STR_2(17), 
 22904 ;; Auto vars:     Size  Location     Type
 22905 ;;  idx             1   46[BANK0 ] unsigned char 
 22906 ;; Return value:  Size  Location     Type
 22907 ;;                  1    wreg      void 
 22908 ;; Registers used:
 22909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22910 ;; Tracked objects:
 22911 ;;		On entry : 3F/0
 22912 ;;		On exit  : 6/0
 22913 ;;		Unchanged: 0/0
 22914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22918 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22919 ;;Total ram usage:        4 bytes
 22920 ;; Hardware stack levels used:    1
 22921 ;; Hardware stack levels required when called:   18
 22922 ;; This function calls:
 22923 ;;		_TMR6_Start
 22924 ;; This function is called by:
 22925 ;;		_printstrblock
 22926 ;;		_screenMng
 22927 ;; This function uses a non-reentrant model
 22928 ;;
 22929                           
 22930                           	psect	text79
 22931  007BAC                     __ptext79:
 22932                           	opt callstack 0
 22933  007BAC                     _printstr:
 22934                           	opt callstack 11
 22935                           
 22936                           ; BSR set to: 0
 22937                           ;LiquidCrystal_I2C.c: 96:     uint8_t idx;;LiquidCrystal_I2C.c: 98:     if (lcdBusy){
 22938                           
 22939                           ; BSR set to: 0
 22940                           ;incstack = 0
 22941  007BAC  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 22942  007BAE  B4D8               	btfsc	status,2,c
 22943  007BB0  D006               	goto	l17777
 22944                           
 22945                           ; BSR set to: 0
 22946                           ;LiquidCrystal_I2C.c: 99:         PIE9bits.TMR6IE = 0;
 22947  007BB2  0139               	movlb	57	; () banked
 22948  007BB4  9199               	bcf	153,0,b	;volatile
 22949                           
 22950                           ;LiquidCrystal_I2C.c: 100:         idx = parBuffLen;
 22951  007BB6  0060  F31C  F08E   	movff	_parBuffLen,printstr@idx	;volatile
 22952                           
 22953                           ;LiquidCrystal_I2C.c: 101:     } else {
 22954  007BBC  D052               	goto	l17789
 22955  007BBE                     l17777:
 22956                           
 22957                           ; BSR set to: 0
 22958                           ;LiquidCrystal_I2C.c: 102:         idx = 0;
 22959  007BBE  0E00               	movlw	0
 22960  007BC0  6F8E               	movwf	printstr@idx& (0+255),b
 22961                           
 22962                           ;LiquidCrystal_I2C.c: 103:         parBuffPtr=0;
 22963  007BC2  0E00               	movlw	0
 22964  007BC4  6FC8               	movwf	_parBuffPtr& (0+255),b	;volatile
 22965  007BC6  D04D               	goto	l17789
 22966  007BC8                     l17779:
 22967                           
 22968                           ;LiquidCrystal_I2C.c: 106:         i2cBuff[idx++]=((*c)&0xF0) | 0x1 | 0x4 | _backlightva
      +                          l;
 22969  007BC8  0E00               	movlw	low _i2cBuff
 22970  007BCA  0100               	movlb	0	; () banked
 22971  007BCC  258E               	addwf	printstr@idx& (0+255),w,b
 22972  007BCE  6ED9               	movwf	fsr2l,c
 22973  007BD0  6ADA               	clrf	fsr2h,c
 22974  007BD2  0E03               	movlw	high _i2cBuff
 22975  007BD4  22DA               	addwfc	fsr2h,f,c
 22976  007BD6  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22977  007BDC  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22978  007BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 22979  007BE4  6EF8               	movwf	tblptru,c
 22980  007BE6  0E0F               	movlw	(high __ramtop+-1)
 22981  007BE8  64F7               	cpfsgt	tblptrh,c
 22982  007BEA  D003               	bra	u18287
 22983  007BEC  0008               	tblrd		*
 22984  007BEE  50F5               	movf	tablat,w,c
 22985  007BF0  D007               	bra	u18280
 22986  007BF2                     u18287:
 22987  007BF2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22988  007BF8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22989  007BFE  50E7               	movf	indf1,w,c
 22990  007C00                     u18280:
 22991  007C00  0BF0               	andlw	240
 22992  007C02  0100               	movlb	0	; () banked
 22993  007C04  11C9               	iorwf	__backlightval& (0+255),w,b	;volatile
 22994  007C06  0905               	iorlw	5
 22995  007C08  6EDF               	movwf	indf2,c
 22996                           
 22997                           ; BSR set to: 0
 22998  007C0A  2B8E               	incf	printstr@idx& (0+255),f,b
 22999                           
 23000                           ; BSR set to: 0
 23001                           ;LiquidCrystal_I2C.c: 107:         i2cBuff[idx++]=(((*c)&0x0F)<<4) | 0x1 | 0x4 | _backli
      +                          ghtval;
 23002  007C0C  0E00               	movlw	low _i2cBuff
 23003  007C0E  258E               	addwf	printstr@idx& (0+255),w,b
 23004  007C10  6ED9               	movwf	fsr2l,c
 23005  007C12  6ADA               	clrf	fsr2h,c
 23006  007C14  0E03               	movlw	high _i2cBuff
 23007  007C16  22DA               	addwfc	fsr2h,f,c
 23008  007C18  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 23009  007C1E  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 23010  007C24  0E00               	movlw	low (__mediumconst shr (0+16))
 23011  007C26  6EF8               	movwf	tblptru,c
 23012  007C28  0E0F               	movlw	(high __ramtop+-1)
 23013  007C2A  64F7               	cpfsgt	tblptrh,c
 23014  007C2C  D003               	bra	u18297
 23015  007C2E  0008               	tblrd		*
 23016  007C30  50F5               	movf	tablat,w,c
 23017  007C32  D007               	bra	u18290
 23018  007C34                     u18297:
 23019  007C34  006F FFDB FFE1     	movff	tblptrl,fsr1l
 23020  007C3A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 23021  007C40  50E7               	movf	indf1,w,c
 23022  007C42                     u18290:
 23023  007C42  0100               	movlb	0	; () banked
 23024  007C44  6F8D               	movwf	??_printstr& (0+255),b
 23025  007C46  0E0F               	movlw	15
 23026  007C48  178D               	andwf	??_printstr& (0+255),f,b
 23027  007C4A  398D               	swapf	??_printstr& (0+255),w,b
 23028  007C4C  0BF0               	andlw	240
 23029  007C4E  11C9               	iorwf	__backlightval& (0+255),w,b	;volatile
 23030  007C50  0905               	iorlw	5
 23031  007C52  6EDF               	movwf	indf2,c
 23032  007C54  2B8E               	incf	printstr@idx& (0+255),f,b
 23033                           
 23034                           ;LiquidCrystal_I2C.c: 108:         c++;
 23035  007C56  4B8B               	infsnz	printstr@c& (0+255),f,b
 23036  007C58  2B8C               	incf	(printstr@c+1)& (0+255),f,b
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;LiquidCrystal_I2C.c: 109:         if (idx >=80) {
 23040  007C5A  0E4F               	movlw	79
 23041  007C5C  658E               	cpfsgt	printstr@idx& (0+255),b
 23042  007C5E  D001               	goto	l17789
 23043  007C60  D018               	goto	u18320
 23044  007C62                     l17789:
 23045                           
 23046                           ;LiquidCrystal_I2C.c: 105:     while (*c){
 23047  007C62  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 23048  007C68  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 23049  007C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 23050  007C70  6EF8               	movwf	tblptru,c
 23051  007C72  0E0F               	movlw	(high __ramtop+-1)
 23052  007C74  64F7               	cpfsgt	tblptrh,c
 23053  007C76  D003               	bra	u18317
 23054  007C78  0008               	tblrd		*
 23055  007C7A  50F5               	movf	tablat,w,c
 23056  007C7C  D007               	bra	u18310
 23057  007C7E                     u18317:
 23058  007C7E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 23059  007C84  006F FFDF FFE2     	movff	tblptrh,fsr1h
 23060  007C8A  50E7               	movf	indf1,w,c
 23061  007C8C                     u18310:
 23062  007C8C  0900               	iorlw	0
 23063  007C8E  A4D8               	btfss	status,2,c
 23064  007C90  D79B               	goto	l17779
 23065  007C92                     u18320:
 23066                           
 23067                           ;LiquidCrystal_I2C.c: 114:     parBuffLen=idx;
 23068  007C92  0060  F238  F0C7   	movff	printstr@idx,_parBuffLen	;volatile
 23069                           
 23070                           ;LiquidCrystal_I2C.c: 115:     if (lcdBusy){
 23071  007C98  0100               	movlb	0	; () banked
 23072  007C9A  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 23073  007C9C  B4D8               	btfsc	status,2,c
 23074  007C9E  D003               	goto	l17795
 23075                           
 23076                           ; BSR set to: 0
 23077                           ;LiquidCrystal_I2C.c: 116:         PIE9bits.TMR6IE = 1;
 23078  007CA0  0139               	movlb	57	; () banked
 23079  007CA2  8199               	bsf	153,0,b	;volatile
 23080                           
 23081                           ;LiquidCrystal_I2C.c: 117:     } else {
 23082  007CA4  0012               	return	
 23083  007CA6                     l17795:
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;LiquidCrystal_I2C.c: 118:         lcdBusy = 1;
 23087  007CA6  0E01               	movlw	1
 23088  007CA8  6FC6               	movwf	_lcdBusy& (0+255),b	;volatile
 23089                           
 23090                           ; BSR set to: 0
 23091                           ;LiquidCrystal_I2C.c: 119:         TMR6_Start();
 23092  007CAA  EC43  F054         	call	_TMR6_Start	;wreg free
 23093  007CAE  0012               	return		;funcret
 23094  007CB0                     __end_of_printstr:
 23095                           	opt callstack 0
 23096                           
 23097 ;; *************** function _TMR6_Start *****************
 23098 ;; Defined at:
 23099 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 23100 ;; Parameters:    Size  Location     Type
 23101 ;;		None
 23102 ;; Auto vars:     Size  Location     Type
 23103 ;;		None
 23104 ;; Return value:  Size  Location     Type
 23105 ;;                  1    wreg      void 
 23106 ;; Registers used:
 23107 ;;		None
 23108 ;; Tracked objects:
 23109 ;;		On entry : 3F/0
 23110 ;;		On exit  : 3F/0
 23111 ;;		Unchanged: 3F/0
 23112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23117 ;;Total ram usage:        0 bytes
 23118 ;; Hardware stack levels used:    1
 23119 ;; Hardware stack levels required when called:   17
 23120 ;; This function calls:
 23121 ;;		Nothing
 23122 ;; This function is called by:
 23123 ;;		_send4bits
 23124 ;;		_printstr
 23125 ;; This function uses a non-reentrant model
 23126 ;;
 23127                           
 23128                           	psect	text80
 23129  00A886                     __ptext80:
 23130                           	opt callstack 0
 23131  00A886                     _TMR6_Start:
 23132                           	opt callstack 9
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 23136                           
 23137                           ;incstack = 0
 23138  00A886  8E94               	bsf	148,7,c	;volatile
 23139                           
 23140                           ; BSR set to: 0
 23141  00A888  0012               	return		;funcret
 23142  00A88A                     __end_of_TMR6_Start:
 23143                           	opt callstack 0
 23144                           
 23145 ;; *************** function _PrintStrBusy *****************
 23146 ;; Defined at:
 23147 ;;		line 123 in file "LiquidCrystal_I2C.c"
 23148 ;; Parameters:    Size  Location     Type
 23149 ;;		None
 23150 ;; Auto vars:     Size  Location     Type
 23151 ;;		None
 23152 ;; Return value:  Size  Location     Type
 23153 ;;                  1    wreg      _Bool 
 23154 ;; Registers used:
 23155 ;;		wreg, status,2
 23156 ;; Tracked objects:
 23157 ;;		On entry : 6/1
 23158 ;;		On exit  : 3F/0
 23159 ;;		Unchanged: 0/0
 23160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23165 ;;Total ram usage:        0 bytes
 23166 ;; Hardware stack levels used:    1
 23167 ;; Hardware stack levels required when called:   17
 23168 ;; This function calls:
 23169 ;;		Nothing
 23170 ;; This function is called by:
 23171 ;;		_CtrlPowerOff
 23172 ;;		_printstrblock
 23173 ;;		_screenMng
 23174 ;; This function uses a non-reentrant model
 23175 ;;
 23176                           
 23177                           	psect	text81
 23178  00A830                     __ptext81:
 23179                           	opt callstack 0
 23180  00A830                     _PrintStrBusy:
 23181                           	opt callstack 12
 23182                           
 23183                           ;LiquidCrystal_I2C.c: 124:     return lcdBusy;
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;incstack = 0
 23187  00A830  0100               	movlb	0	; () banked
 23188  00A832  51C6               	movf	_lcdBusy& (0+255),w,b	;volatile
 23189                           
 23190                           ; BSR set to: 0
 23191  00A834  0012               	return		;funcret
 23192  00A836                     __end_of_PrintStrBusy:
 23193                           	opt callstack 0
 23194                           
 23195 ;; *************** function _keyRead *****************
 23196 ;; Defined at:
 23197 ;;		line 85 in file "keyRead.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;		None
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;  tmp             2   50[BANK0 ] int 
 23202 ;;  ch              1   52[BANK0 ] char 
 23203 ;; Return value:  Size  Location     Type
 23204 ;;                  1    wreg      char 
 23205 ;; Registers used:
 23206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23207 ;; Tracked objects:
 23208 ;;		On entry : 0/0
 23209 ;;		On exit  : 3F/0
 23210 ;;		Unchanged: 0/0
 23211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23213 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23216 ;;Total ram usage:        5 bytes
 23217 ;; Hardware stack levels used:    1
 23218 ;; Hardware stack levels required when called:   19
 23219 ;; This function calls:
 23220 ;;		_keyPeek
 23221 ;; This function is called by:
 23222 ;;		_CtrlPowerOff
 23223 ;;		_main
 23224 ;;		_MenuMng
 23225 ;; This function uses a non-reentrant model
 23226 ;;
 23227                           
 23228                           	psect	text82
 23229  009688                     __ptext82:
 23230                           	opt callstack 0
 23231  009688                     _keyRead:
 23232                           	opt callstack 11
 23233                           
 23234                           ;keyRead.c: 86:     int8_t ch = keyPeek();
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;incstack = 0
 23238  009688  ECEE  F047         	call	_keyPeek	;wreg free
 23239  00968C  6F94               	movwf	keyRead@ch& (0+255),b
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;keyRead.c: 87:     if (ch == lastkey) return -1;
 23243  00968E  51D0               	movf	_lastkey& (0+255),w,b
 23244  009690  1994               	xorwf	keyRead@ch& (0+255),w,b
 23245  009692  A4D8               	btfss	status,2,c
 23246  009694  D002               	goto	l18791
 23247  009696                     u19490:
 23248                           
 23249                           ; BSR set to: 0
 23250  009696  0EFF               	movlw	255
 23251  009698  0012               	return	
 23252  00969A                     l18791:
 23253                           
 23254                           ; BSR set to: 0
 23255                           ;keyRead.c: 88:     int tmp = lastkey;
 23256  00969A  51D0               	movf	_lastkey& (0+255),w,b
 23257  00969C  6F92               	movwf	keyRead@tmp& (0+255),b
 23258  00969E  6B93               	clrf	(keyRead@tmp+1)& (0+255),b
 23259  0096A0  BF92               	btfsc	keyRead@tmp& (0+255),7,b
 23260  0096A2  0793               	decf	(keyRead@tmp+1)& (0+255),f,b
 23261                           
 23262                           ; BSR set to: 0
 23263                           ;keyRead.c: 89:     lastkey = ch;
 23264  0096A4  0060  F250  F0D0   	movff	keyRead@ch,_lastkey
 23265                           
 23266                           ; BSR set to: 0
 23267                           ;keyRead.c: 90:     if (tmp == keyFilter) {
 23268  0096AA  0060  F338  F090   	movff	_keyFilter,??_keyRead
 23269  0096B0  6B91               	clrf	(??_keyRead+1)& (0+255),b
 23270  0096B2  BF90               	btfsc	??_keyRead& (0+255),7,b
 23271  0096B4  0791               	decf	(??_keyRead+1)& (0+255),f,b
 23272  0096B6  5192               	movf	keyRead@tmp& (0+255),w,b
 23273  0096B8  1990               	xorwf	??_keyRead& (0+255),w,b
 23274  0096BA  E106               	bnz	l2099
 23275  0096BC  5193               	movf	(keyRead@tmp+1)& (0+255),w,b
 23276  0096BE  1991               	xorwf	(??_keyRead+1)& (0+255),w,b
 23277  0096C0  A4D8               	btfss	status,2,c
 23278  0096C2  D002               	goto	l2099
 23279                           
 23280                           ; BSR set to: 0
 23281                           ;keyRead.c: 91:         keyFilter = -1;
 23282  0096C4  69CE               	setf	_keyFilter& (0+255),b
 23283  0096C6  D7E7               	goto	u19490
 23284  0096C8                     l2099:
 23285                           
 23286                           ; BSR set to: 0
 23287                           ;keyRead.c: 94:         keyFilter = -1;
 23288  0096C8  69CE               	setf	_keyFilter& (0+255),b
 23289                           
 23290                           ; BSR set to: 0
 23291                           ;keyRead.c: 95:         return tmp;
 23292  0096CA  5192               	movf	keyRead@tmp& (0+255),w,b
 23293                           
 23294                           ; BSR set to: 0
 23295  0096CC  0012               	return		;funcret
 23296  0096CE                     __end_of_keyRead:
 23297                           	opt callstack 0
 23298                           
 23299 ;; *************** function _keyPeek *****************
 23300 ;; Defined at:
 23301 ;;		line 54 in file "keyRead.c"
 23302 ;; Parameters:    Size  Location     Type
 23303 ;;		None
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;  n               1   47[BANK0 ] char 
 23306 ;;  n               1   46[BANK0 ] char 
 23307 ;; Return value:  Size  Location     Type
 23308 ;;                  1    wreg      char 
 23309 ;; Registers used:
 23310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23311 ;; Tracked objects:
 23312 ;;		On entry : 0/0
 23313 ;;		On exit  : 3F/0
 23314 ;;		Unchanged: 0/0
 23315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23319 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23320 ;;Total ram usage:        2 bytes
 23321 ;; Hardware stack levels used:    1
 23322 ;; Hardware stack levels required when called:   18
 23323 ;; This function calls:
 23324 ;;		_digitalReadC
 23325 ;;		_digitalReadD
 23326 ;; This function is called by:
 23327 ;;		_main
 23328 ;;		_keyReadEC
 23329 ;;		_keyRead
 23330 ;;		_SelfTest
 23331 ;; This function uses a non-reentrant model
 23332 ;;
 23333                           
 23334                           	psect	text83
 23335  008FDC                     __ptext83:
 23336                           	opt callstack 0
 23337  008FDC                     _keyPeek:
 23338                           	opt callstack 11
 23339                           
 23340                           ;keyRead.c: 55:     for (int8_t n = 0; n < 6; n++) {
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;incstack = 0
 23344  008FDC  0E00               	movlw	0
 23345  008FDE  0100               	movlb	0	; () banked
 23346  008FE0  6F8E               	movwf	keyPeek@n& (0+255),b
 23347  008FE2                     l18105:
 23348                           
 23349                           ; BSR set to: 0
 23350                           ;keyRead.c: 56:         if (digitalReadD(keysD[n]) != 1) {
 23351  008FE2  0EE7               	movlw	low _keysD
 23352  008FE4  258E               	addwf	keyPeek@n& (0+255),w,b
 23353  008FE6  6ED9               	movwf	fsr2l,c
 23354  008FE8  6ADA               	clrf	fsr2h,c
 23355  008FEA  0E02               	movlw	high _keysD
 23356  008FEC  22DA               	addwfc	fsr2h,f,c
 23357  008FEE  50DF               	movf	indf2,w,c
 23358  008FF0  ECD1  F04F         	call	_digitalReadD
 23359  008FF4  06E8               	decf	wreg,f,c
 23360  008FF6  B4D8               	btfsc	status,2,c
 23361  008FF8  D002               	goto	l18111
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;keyRead.c: 57:             return n;
 23365  008FFA  518E               	movf	keyPeek@n& (0+255),w,b
 23366  008FFC  0012               	return	
 23367  008FFE                     l18111:
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;keyRead.c: 59:     }
 23371  008FFE  2B8E               	incf	keyPeek@n& (0+255),f,b
 23372                           
 23373                           ; BSR set to: 0
 23374  009000  518E               	movf	keyPeek@n& (0+255),w,b
 23375  009002  0A80               	xorlw	128
 23376  009004  0F7A               	addlw	-134
 23377  009006  A0D8               	btfss	status,0,c
 23378  009008  D7EC               	goto	l18105
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;keyRead.c: 60:     for (int8_t n = 0; n < 5; n++) {
 23382  00900A  0E00               	movlw	0
 23383  00900C  6F8F               	movwf	keyPeek@n_4076& (0+255),b
 23384  00900E                     l18121:
 23385                           
 23386                           ; BSR set to: 0
 23387                           ;keyRead.c: 61:         if (digitalReadC(keysC[n]) != 1) {
 23388  00900E  0EED               	movlw	low _keysC
 23389  009010  258F               	addwf	keyPeek@n_4076& (0+255),w,b
 23390  009012  6ED9               	movwf	fsr2l,c
 23391  009014  6ADA               	clrf	fsr2h,c
 23392  009016  0E02               	movlw	high _keysC
 23393  009018  22DA               	addwfc	fsr2h,f,c
 23394  00901A  50DF               	movf	indf2,w,c
 23395  00901C  ECE8  F04F         	call	_digitalReadC
 23396  009020  06E8               	decf	wreg,f,c
 23397  009022  B4D8               	btfsc	status,2,c
 23398  009024  D003               	goto	l18127
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;keyRead.c: 62:             return n+6;
 23402  009026  518F               	movf	keyPeek@n_4076& (0+255),w,b
 23403  009028  0F06               	addlw	6
 23404  00902A  0012               	return	
 23405  00902C                     l18127:
 23406                           
 23407                           ; BSR set to: 0
 23408                           ;keyRead.c: 64:     }
 23409  00902C  2B8F               	incf	keyPeek@n_4076& (0+255),f,b
 23410                           
 23411                           ; BSR set to: 0
 23412  00902E  518F               	movf	keyPeek@n_4076& (0+255),w,b
 23413  009030  0A80               	xorlw	128
 23414  009032  0F7B               	addlw	-133
 23415  009034  A0D8               	btfss	status,0,c
 23416  009036  D7EB               	goto	l18121
 23417                           
 23418                           ; BSR set to: 0
 23419                           ;keyRead.c: 65:     return -1;
 23420  009038  0EFF               	movlw	255
 23421                           
 23422                           ; BSR set to: 0
 23423  00903A  0012               	return		;funcret
 23424  00903C                     __end_of_keyPeek:
 23425                           	opt callstack 0
 23426                           
 23427 ;; *************** function _digitalReadD *****************
 23428 ;; Defined at:
 23429 ;;		line 39 in file "keyRead.c"
 23430 ;; Parameters:    Size  Location     Type
 23431 ;;  pin             1    wreg     unsigned char 
 23432 ;; Auto vars:     Size  Location     Type
 23433 ;;  pin             1   45[BANK0 ] unsigned char 
 23434 ;; Return value:  Size  Location     Type
 23435 ;;                  1    wreg      unsigned char 
 23436 ;; Registers used:
 23437 ;;		wreg, status,2, status,0
 23438 ;; Tracked objects:
 23439 ;;		On entry : 3F/0
 23440 ;;		On exit  : 3F/0
 23441 ;;		Unchanged: 0/0
 23442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23445 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23446 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23447 ;;Total ram usage:        3 bytes
 23448 ;; Hardware stack levels used:    1
 23449 ;; Hardware stack levels required when called:   17
 23450 ;; This function calls:
 23451 ;;		Nothing
 23452 ;; This function is called by:
 23453 ;;		_keyPeek
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text84
 23458  009FA2                     __ptext84:
 23459                           	opt callstack 0
 23460  009FA2                     _digitalReadD:
 23461                           	opt callstack 11
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;incstack = 0
 23465                           ;digitalReadD@pin stored from wreg
 23466  009FA2  6F8D               	movwf	digitalReadD@pin& (0+255),b
 23467                           
 23468                           ;keyRead.c: 40:     return (PORTD&(1<<pin))!= 0;
 23469  009FA4  0060  F234  F08B   	movff	digitalReadD@pin,??_digitalReadD
 23470  009FAA  0E01               	movlw	1
 23471  009FAC  0100               	movlb	0	; () banked
 23472  009FAE  6F8C               	movwf	(??_digitalReadD+1)& (0+255),b
 23473  009FB0  2B8B               	incf	??_digitalReadD& (0+255),f,b
 23474  009FB2  D002               	goto	u18214
 23475  009FB4                     u18215:
 23476  009FB4  90D8               	bcf	status,0,c
 23477  009FB6  378C               	rlcf	(??_digitalReadD+1)& (0+255),f,b
 23478  009FB8                     u18214:
 23479  009FB8  2F8B               	decfsz	??_digitalReadD& (0+255),f,b
 23480  009FBA  D7FC               	goto	u18215
 23481  009FBC  0100               	movlb	0	; () banked
 23482  009FBE  518C               	movf	(??_digitalReadD+1)& (0+255),w,b
 23483  009FC0  14CD               	andwf	205,w,c	;volatile
 23484  009FC2  0900               	iorlw	0
 23485  009FC4  B4D8               	btfsc	status,2,c
 23486  009FC6  D002               	goto	u18220
 23487  009FC8  0E01               	movlw	1
 23488  009FCA  0012               	return	
 23489  009FCC                     u18220:
 23490  009FCC  0E00               	movlw	0
 23491                           
 23492                           ; BSR set to: 0
 23493  009FCE  0012               	return		;funcret
 23494  009FD0                     __end_of_digitalReadD:
 23495                           	opt callstack 0
 23496                           
 23497 ;; *************** function _digitalReadC *****************
 23498 ;; Defined at:
 23499 ;;		line 42 in file "keyRead.c"
 23500 ;; Parameters:    Size  Location     Type
 23501 ;;  pin             1    wreg     unsigned char 
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;  pin             1   45[BANK0 ] unsigned char 
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  1    wreg      unsigned char 
 23506 ;; Registers used:
 23507 ;;		wreg, status,2, status,0
 23508 ;; Tracked objects:
 23509 ;;		On entry : 3F/0
 23510 ;;		On exit  : 3F/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23516 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23517 ;;Total ram usage:        3 bytes
 23518 ;; Hardware stack levels used:    1
 23519 ;; Hardware stack levels required when called:   17
 23520 ;; This function calls:
 23521 ;;		Nothing
 23522 ;; This function is called by:
 23523 ;;		_keyPeek
 23524 ;; This function uses a non-reentrant model
 23525 ;;
 23526                           
 23527                           	psect	text85
 23528  009FD0                     __ptext85:
 23529                           	opt callstack 0
 23530  009FD0                     _digitalReadC:
 23531                           	opt callstack 11
 23532                           
 23533                           ; BSR set to: 0
 23534                           ;incstack = 0
 23535                           ;digitalReadC@pin stored from wreg
 23536  009FD0  6F8D               	movwf	digitalReadC@pin& (0+255),b
 23537                           
 23538                           ;keyRead.c: 43:     return (PORTC&(1<<pin))!= 0;
 23539  009FD2  0060  F234  F08B   	movff	digitalReadC@pin,??_digitalReadC
 23540  009FD8  0E01               	movlw	1
 23541  009FDA  0100               	movlb	0	; () banked
 23542  009FDC  6F8C               	movwf	(??_digitalReadC+1)& (0+255),b
 23543  009FDE  2B8B               	incf	??_digitalReadC& (0+255),f,b
 23544  009FE0  D002               	goto	u18244
 23545  009FE2                     u18245:
 23546  009FE2  90D8               	bcf	status,0,c
 23547  009FE4  378C               	rlcf	(??_digitalReadC+1)& (0+255),f,b
 23548  009FE6                     u18244:
 23549  009FE6  2F8B               	decfsz	??_digitalReadC& (0+255),f,b
 23550  009FE8  D7FC               	goto	u18245
 23551  009FEA  0100               	movlb	0	; () banked
 23552  009FEC  518C               	movf	(??_digitalReadC+1)& (0+255),w,b
 23553  009FEE  14CC               	andwf	204,w,c	;volatile
 23554  009FF0  0900               	iorlw	0
 23555  009FF2  B4D8               	btfsc	status,2,c
 23556  009FF4  D002               	goto	u18250
 23557  009FF6  0E01               	movlw	1
 23558  009FF8  0012               	return	
 23559  009FFA                     u18250:
 23560  009FFA  0E00               	movlw	0
 23561                           
 23562                           ; BSR set to: 0
 23563  009FFC  0012               	return		;funcret
 23564  009FFE                     __end_of_digitalReadC:
 23565                           	opt callstack 0
 23566                           
 23567 ;; *************** function _MonitorMsgSendBlock *****************
 23568 ;; Defined at:
 23569 ;;		line 147 in file "monComm.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;  state           1    wreg     enum E16832
 23572 ;; Auto vars:     Size  Location     Type
 23573 ;;  state           1  114[BANK1 ] enum E16832
 23574 ;; Return value:  Size  Location     Type
 23575 ;;                  1    wreg      _Bool 
 23576 ;; Registers used:
 23577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23578 ;; Tracked objects:
 23579 ;;		On entry : 3C/1
 23580 ;;		On exit  : 3F/0
 23581 ;;		Unchanged: 0/0
 23582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23584 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23586 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23587 ;;Total ram usage:        1 bytes
 23588 ;; Hardware stack levels used:    1
 23589 ;; Hardware stack levels required when called:   31
 23590 ;; This function calls:
 23591 ;;		_I2C2_MAck
 23592 ;;		_MonitorMsgBusy
 23593 ;;		_MonitorMsgForcedSend
 23594 ;; This function is called by:
 23595 ;;		_CtrlPowerOff
 23596 ;;		_main
 23597 ;;		_flowChk
 23598 ;;		_SelfTest
 23599 ;; This function uses a non-reentrant model
 23600 ;;
 23601                           
 23602                           	psect	text86
 23603  00A176                     __ptext86:
 23604                           	opt callstack 0
 23605  00A176                     _MonitorMsgSendBlock:
 23606                           	opt callstack 0
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;incstack = 0
 23610 ;; hardware stack exceeded
 23611                           ;MonitorMsgSendBlock@state stored from wreg
 23612  00A176  0101               	movlb	1	; () banked
 23613  00A178  6F72               	movwf	MonitorMsgSendBlock@state& (0+255),b
 23614  00A17A                     
 23615                           ;monComm.c: 148:     while (MonitorMsgBusy());
 23616  00A17A  ECF0  F052         	call	_MonitorMsgBusy	;wreg free
 23617  00A17E  0900               	iorlw	0
 23618  00A180  A4D8               	btfss	status,2,c
 23619  00A182  D7FB               	goto	l18087
 23620                           
 23621                           ; BSR set to: 0
 23622                           ;monComm.c: 149:     MonitorMsgForcedSend(state);
 23623  00A184  0101               	movlb	1	; () banked
 23624  00A186  5172               	movf	MonitorMsgSendBlock@state& (0+255),w,b
 23625  00A188  EC29  F037         	call	_MonitorMsgForcedSend
 23626  00A18C                     l18093:
 23627  00A18C  ECF0  F052         	call	_MonitorMsgBusy	;wreg free
 23628  00A190  0900               	iorlw	0
 23629  00A192  A4D8               	btfss	status,2,c
 23630  00A194  D7FB               	goto	l18093
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;monComm.c: 154:     return I2C2_MAck();
 23634  00A196  EC21  F054         	call	_I2C2_MAck	;wreg free
 23635                           
 23636                           ; BSR set to: 0
 23637  00A19A  0012               	return		;funcret
 23638  00A19C                     __end_of_MonitorMsgSendBlock:
 23639                           	opt callstack 0
 23640                           
 23641 ;; *************** function _MonitorMsgForcedSend *****************
 23642 ;; Defined at:
 23643 ;;		line 45 in file "monComm.c"
 23644 ;; Parameters:    Size  Location     Type
 23645 ;;  state           1    wreg     enum E16832
 23646 ;; Auto vars:     Size  Location     Type
 23647 ;;  state           1  110[BANK1 ] enum E16832
 23648 ;;  vddVal          2  112[BANK1 ] short 
 23649 ;;  trfAck          1  111[BANK1 ] _Bool 
 23650 ;;  trfError        1  109[BANK1 ] enum E16385
 23651 ;; Return value:  Size  Location     Type
 23652 ;;                  1    wreg      void 
 23653 ;; Registers used:
 23654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23655 ;; Tracked objects:
 23656 ;;		On entry : 3F/1
 23657 ;;		On exit  : 3F/1
 23658 ;;		Unchanged: 0/0
 23659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23661 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23662 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23663 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23664 ;;Total ram usage:        6 bytes
 23665 ;; Hardware stack levels used:    1
 23666 ;; Hardware stack levels required when called:   30
 23667 ;; This function calls:
 23668 ;;		_I2C2_MAck
 23669 ;;		_I2C2_MClose
 23670 ;;		_I2C2_MOpen
 23671 ;;		_I2C2_MasterOperation
 23672 ;;		_I2C2_SetBuffer
 23673 ;;		_MonitorErrorClr
 23674 ;;		_MonitorErrorSet
 23675 ;;		_aCaptGetResult
 23676 ;;		_bRateGet
 23677 ;;		_sprintf
 23678 ;;		_timeGet
 23679 ;; This function is called by:
 23680 ;;		_MonitorMsgSend
 23681 ;;		_MonitorMsgSendBlock
 23682 ;; This function uses a non-reentrant model
 23683 ;;
 23684                           
 23685                           	psect	text87
 23686  006E52                     __ptext87:
 23687                           	opt callstack 0
 23688  006E52                     _MonitorMsgForcedSend:
 23689                           	opt callstack 0
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;incstack = 0
 23693 ;; hardware stack exceeded
 23694                           ;MonitorMsgForcedSend@state stored from wreg
 23695  006E52  6F6E               	movwf	MonitorMsgForcedSend@state& (0+255),b
 23696                           
 23697                           ;monComm.c: 46:     i2c2_error_t trfError;;monComm.c: 47:     _Bool trfAck;;monComm.c: 4
      +                          8:     int16_t vddVal;;monComm.c: 50:     monTstamp = timeGet();
 23698  006E54  ECD5  F052         	call	_timeGet	;wreg free
 23699  006E58  0060  F24C  F2D3   	movff	?_timeGet,_monTstamp
 23700  006E5E  0060  F250  F2D4   	movff	?_timeGet+1,_monTstamp+1
 23701                           
 23702                           ; BSR set to: 0
 23703                           ;monComm.c: 53:     trfError = I2C2_MClose();
 23704  006E64  ECFF  F04F         	call	_I2C2_MClose	;wreg free
 23705  006E68  0101               	movlb	1	; () banked
 23706  006E6A  6F6D               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 23707                           
 23708                           ; BSR set to: 1
 23709                           ;monComm.c: 54:     trfAck = I2C2_MAck();
 23710  006E6C  EC21  F054         	call	_I2C2_MAck	;wreg free
 23711  006E70  0101               	movlb	1	; () banked
 23712  006E72  6F6F               	movwf	MonitorMsgForcedSend@trfAck& (0+255),b
 23713                           
 23714                           ; BSR set to: 1
 23715                           ;monComm.c: 56:     if (!trfAck) {
 23716  006E74  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23717  006E76  A4D8               	btfss	status,2,c
 23718  006E78  D011               	goto	l2994
 23719                           
 23720                           ; BSR set to: 1
 23721                           ;monComm.c: 58:         sprintf(lcdBtnRRow, " M.ERR");
 23722  006E7A  0EC9               	movlw	low _lcdBtnRRow
 23723  006E7C  6F46               	movwf	sprintf@s& (0+255),b
 23724  006E7E  0E02               	movlw	high _lcdBtnRRow
 23725  006E80  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23726  006E82  0EDF               	movlw	low STR_105
 23727  006E84  6F48               	movwf	sprintf@fmt& (0+255),b
 23728  006E86  0EFF               	movlw	high STR_105
 23729  006E88  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23730  006E8A  EC31  F049         	call	_sprintf	;wreg free
 23731                           
 23732                           ; BSR set to: 1
 23733                           ;monComm.c: 59:         lcdPrintBRR = 1;
 23734  006E8E  0E01               	movlw	1
 23735  006E90  6FC4               	movwf	_lcdPrintBRR& (0+255),b
 23736                           
 23737                           ; BSR set to: 1
 23738                           ;monComm.c: 60:         LATDbits.LATD0 = 1;
 23739  006E92  80BD               	bsf	189,0,c	;volatile
 23740  006E94                     l17815:
 23741                           
 23742                           ; BSR set to: 1
 23743                           ;monComm.c: 61:         lastI2CMonTrfResponse = 1;
 23744  006E94  0E01               	movlw	1
 23745  006E96  0102               	movlb	2	; () banked
 23746  006E98  6F52               	movwf	_lastI2CMonTrfResponse& (0+255),b
 23747                           
 23748                           ;monComm.c: 63:     } else if ((LATDbits.LATD0) && trfAck) {
 23749  006E9A  D013               	goto	l17827
 23750  006E9C                     l2994:
 23751                           
 23752                           ; BSR set to: 1
 23753  006E9C  A0BD               	btfss	189,0,c	;volatile
 23754  006E9E  D011               	goto	l17827
 23755                           
 23756                           ; BSR set to: 1
 23757  006EA0  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23758  006EA2  B4D8               	btfsc	status,2,c
 23759  006EA4  D00E               	goto	l17827
 23760                           
 23761                           ; BSR set to: 1
 23762                           ;monComm.c: 65:         sprintf(lcdBtnRRow, "      ");
 23763  006EA6  0EC9               	movlw	low _lcdBtnRRow
 23764  006EA8  6F46               	movwf	sprintf@s& (0+255),b
 23765  006EAA  0E02               	movlw	high _lcdBtnRRow
 23766  006EAC  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23767  006EAE  0EE2               	movlw	low (STR_2+10)
 23768  006EB0  6F48               	movwf	sprintf@fmt& (0+255),b
 23769  006EB2  0EFE               	movlw	high (STR_2+10)
 23770  006EB4  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23771  006EB6  EC31  F049         	call	_sprintf	;wreg free
 23772                           
 23773                           ; BSR set to: 1
 23774                           ;monComm.c: 66:         lcdPrintBRR = 1;
 23775  006EBA  0E01               	movlw	1
 23776  006EBC  6FC4               	movwf	_lcdPrintBRR& (0+255),b
 23777                           
 23778                           ; BSR set to: 1
 23779                           ;monComm.c: 67:         LATDbits.LATD0 = 0;
 23780  006EBE  90BD               	bcf	189,0,c	;volatile
 23781  006EC0  D7E9               	goto	l17815
 23782  006EC2                     l17827:
 23783                           
 23784                           ;monComm.c: 72:     if (trfError != I2C2_BUSY) {
 23785  006EC2  0101               	movlb	1	; () banked
 23786  006EC4  056D               	decf	MonitorMsgForcedSend@trfError& (0+255),w,b
 23787  006EC6  B4D8               	btfsc	status,2,c
 23788  006EC8  0012               	return	
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;monComm.c: 74:         aCaptGetResult(VddSensor, &vddVal);
 23792  006ECA  0E70               	movlw	low MonitorMsgForcedSend@vddVal
 23793  006ECC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 23794  006ECE  0E01               	movlw	high MonitorMsgForcedSend@vddVal
 23795  006ED0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 23796  006ED2  0E02               	movlw	2
 23797  006ED4  EC5A  F033         	call	_aCaptGetResult
 23798                           
 23799                           ;monComm.c: 75:         if (vddVal > vddValMean){
 23800  006ED8  0101               	movlb	1	; () banked
 23801  006EDA  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23802  006EDC  5D95               	subwf	_vddValMean& (0+255),w,b
 23803  006EDE  5196               	movf	(_vddValMean+1)& (0+255),w,b
 23804  006EE0  0A80               	xorlw	128
 23805  006EE2  6F6C               	movwf	??_MonitorMsgForcedSend& (0+255),b
 23806  006EE4  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23807  006EE6  0A80               	xorlw	128
 23808  006EE8  596C               	subwfb	??_MonitorMsgForcedSend& (0+255),w,b
 23809  006EEA  B0D8               	btfsc	status,0,c
 23810  006EEC  D006               	goto	l17835
 23811                           
 23812                           ; BSR set to: 1
 23813                           ;monComm.c: 76:             vddVal = vddVal - vddValMean;
 23814  006EEE  5195               	movf	_vddValMean& (0+255),w,b
 23815  006EF0  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23816  006EF2  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23817  006EF4  5196               	movf	(_vddValMean+1)& (0+255),w,b
 23818  006EF6  5971               	subwfb	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23819  006EF8  D005               	goto	L45
 23820  006EFA                     l17835:
 23821                           
 23822                           ; BSR set to: 1
 23823                           ;monComm.c: 78:             vddVal = vddValMean - vddVal;
 23824  006EFA  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23825  006EFC  5D95               	subwf	_vddValMean& (0+255),w,b
 23826  006EFE  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23827  006F00  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23828  006F02  5996               	subwfb	(_vddValMean+1)& (0+255),w,b
 23829  006F04                     L45:
 23830  006F04  6F71               	movwf	(MonitorMsgForcedSend@vddVal+1)& (0+255),b
 23831                           
 23832                           ; BSR set to: 1
 23833                           ;monComm.c: 80:         if (vddVal > 150) {
 23834                           
 23835                           ;monComm.c: 79:         }
 23836  006F06  BF71               	btfsc	(MonitorMsgForcedSend@vddVal+1)& (0+255),7,b
 23837  006F08  D00A               	goto	l17839
 23838  006F0A  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23839  006F0C  E104               	bnz	u18390
 23840  006F0E  0E97               	movlw	151
 23841  006F10  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23842  006F12  A0D8               	btfss	status,0,c
 23843  006F14  D004               	goto	l17839
 23844  006F16                     u18390:
 23845                           
 23846                           ; BSR set to: 1
 23847                           ;monComm.c: 81:             MonitorErrorSet(MON_VDDE);
 23848  006F16  0E80               	movlw	128
 23849  006F18  ECDE  F052         	call	_MonitorErrorSet
 23850                           
 23851                           ;monComm.c: 82:         } else {
 23852  006F1C  D003               	goto	l17841
 23853  006F1E                     l17839:
 23854                           
 23855                           ; BSR set to: 1
 23856                           ;monComm.c: 83:             MonitorErrorClr(MON_VDDE);
 23857  006F1E  0E80               	movlw	128
 23858  006F20  ECE7  F052         	call	_MonitorErrorClr
 23859  006F24                     l17841:
 23860                           
 23861                           ; BSR set to: 1
 23862                           ;monComm.c: 87:         if (VentMode == VMODE_VOLUME) {
 23863  006F24  05F4               	decf	_VentMode& (0+255),w,b
 23864  006F26  A4D8               	btfss	status,2,c
 23865  006F28  D005               	goto	l3002
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;monComm.c: 88:             monitorMsg[0] = state|0x4;
 23869  006F2A  516E               	movf	MonitorMsgForcedSend@state& (0+255),w,b
 23870  006F2C  0904               	iorlw	4
 23871  006F2E  0102               	movlb	2	; () banked
 23872  006F30  6FBF               	movwf	_monitorMsg& (0+255),b
 23873                           
 23874                           ;monComm.c: 89:         } else {
 23875  006F32  D003               	goto	l3003
 23876  006F34                     l3002:
 23877                           
 23878                           ; BSR set to: 1
 23879                           ;monComm.c: 90:             monitorMsg[0] = state;
 23880  006F34  0060  F5B8  F2BF   	movff	MonitorMsgForcedSend@state,_monitorMsg
 23881  006F3A                     l3003:
 23882                           
 23883                           ;monComm.c: 93:         monitorMsg[1] = IP;
 23884  006F3A  C1F7  F2C0         	movff	_IP,_monitorMsg+1
 23885                           
 23886                           ;monComm.c: 94:         if (chIP) {
 23887  006F3E  0100               	movlb	0	; () banked
 23888  006F40  51C4               	movf	_chIP& (0+255),w,b
 23889  006F42  B4D8               	btfsc	status,2,c
 23890  006F44  D002               	goto	l17849
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;monComm.c: 95:             monitorMsg[1] |= 0x80;
 23894  006F46  0102               	movlb	2	; () banked
 23895  006F48  8FC0               	bsf	(_monitorMsg+1)& (0+255),7,b
 23896  006F4A                     l17849:
 23897                           
 23898                           ;monComm.c: 98:         monitorMsg[2] = PEEP;
 23899  006F4A  C1F6  F2C1         	movff	_PEEP,_monitorMsg+2
 23900                           
 23901                           ;monComm.c: 99:         if (chPEEP) {
 23902  006F4E  0100               	movlb	0	; () banked
 23903  006F50  51C2               	movf	_chPEEP& (0+255),w,b
 23904  006F52  B4D8               	btfsc	status,2,c
 23905  006F54  D002               	goto	l17855
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;monComm.c: 100:             monitorMsg[2] |= 0x80;
 23909  006F56  0102               	movlb	2	; () banked
 23910  006F58  8FC1               	bsf	(_monitorMsg+2)& (0+255),7,b
 23911  006F5A                     l17855:
 23912                           
 23913                           ;monComm.c: 103:         monitorMsg[3] = BPM;
 23914  006F5A  C1F8  F2C2         	movff	_BPM,_monitorMsg+3
 23915                           
 23916                           ;monComm.c: 104:         if (chBPM) {
 23917  006F5E  0100               	movlb	0	; () banked
 23918  006F60  51C5               	movf	_chBPM& (0+255),w,b
 23919  006F62  B4D8               	btfsc	status,2,c
 23920  006F64  D002               	goto	l17861
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;monComm.c: 105:             monitorMsg[3] |= 0x80;
 23924  006F66  0102               	movlb	2	; () banked
 23925  006F68  8FC2               	bsf	(_monitorMsg+3)& (0+255),7,b
 23926  006F6A                     l17861:
 23927                           
 23928                           ;monComm.c: 108:         monitorMsg[4] = MaxP;
 23929  006F6A  C1FB  F2C3         	movff	_MaxP,_monitorMsg+4
 23930                           
 23931                           ;monComm.c: 109:         if (chMaxP){
 23932  006F6E  0100               	movlb	0	; () banked
 23933  006F70  51C3               	movf	_chMaxP& (0+255),w,b
 23934  006F72  B4D8               	btfsc	status,2,c
 23935  006F74  D002               	goto	l17867
 23936                           
 23937                           ; BSR set to: 0
 23938                           ;monComm.c: 110:             monitorMsg[3] |= 0x80;
 23939  006F76  0102               	movlb	2	; () banked
 23940  006F78  8FC2               	bsf	(_monitorMsg+3)& (0+255),7,b
 23941  006F7A                     l17867:
 23942                           
 23943                           ;monComm.c: 113:         monitorMsg[5] = MaxV>>1;
 23944  006F7A  0101               	movlb	1	; () banked
 23945  006F7C  90D8               	bcf	status,0,c
 23946  006F7E  31FA               	rrcf	_MaxV& (0+255),w,b
 23947  006F80  0102               	movlb	2	; () banked
 23948  006F82  6FC4               	movwf	(_monitorMsg+5)& (0+255),b
 23949                           
 23950                           ; BSR set to: 2
 23951                           ;monComm.c: 114:         if (chMaxV){
 23952  006F84  0100               	movlb	0	; () banked
 23953  006F86  51BF               	movf	_chMaxV& (0+255),w,b
 23954  006F88  B4D8               	btfsc	status,2,c
 23955  006F8A  D002               	goto	l17873
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;monComm.c: 115:             monitorMsg[5] |= 0x80;
 23959  006F8C  0102               	movlb	2	; () banked
 23960  006F8E  8FC4               	bsf	(_monitorMsg+5)& (0+255),7,b
 23961  006F90                     l17873:
 23962                           
 23963                           ;monComm.c: 118:         monitorMsg[6] = LowVAlarm>>1;
 23964  006F90  0101               	movlb	1	; () banked
 23965  006F92  90D8               	bcf	status,0,c
 23966  006F94  31F3               	rrcf	_LowVAlarm& (0+255),w,b
 23967  006F96  0102               	movlb	2	; () banked
 23968  006F98  6FC5               	movwf	(_monitorMsg+6)& (0+255),b
 23969                           
 23970                           ; BSR set to: 2
 23971                           ;monComm.c: 119:         if (chLowVAlarm){
 23972  006F9A  0100               	movlb	0	; () banked
 23973  006F9C  51C1               	movf	_chLowVAlarm& (0+255),w,b
 23974  006F9E  B4D8               	btfsc	status,2,c
 23975  006FA0  D002               	goto	l17879
 23976                           
 23977                           ; BSR set to: 0
 23978                           ;monComm.c: 120:             monitorMsg[6] |= 0x80;
 23979  006FA2  0102               	movlb	2	; () banked
 23980  006FA4  8FC5               	bsf	(_monitorMsg+6)& (0+255),7,b
 23981  006FA6                     l17879:
 23982                           
 23983                           ;monComm.c: 123:         monitorMsg[7] = HighVAlarm>>1;
 23984  006FA6  0101               	movlb	1	; () banked
 23985  006FA8  90D8               	bcf	status,0,c
 23986  006FAA  31F9               	rrcf	_HighVAlarm& (0+255),w,b
 23987  006FAC  0102               	movlb	2	; () banked
 23988  006FAE  6FC6               	movwf	(_monitorMsg+7)& (0+255),b
 23989                           
 23990                           ; BSR set to: 2
 23991                           ;monComm.c: 124:         if (chHighVAlarm){
 23992  006FB0  0100               	movlb	0	; () banked
 23993  006FB2  51C0               	movf	_chHighVAlarm& (0+255),w,b
 23994  006FB4  B4D8               	btfsc	status,2,c
 23995  006FB6  D002               	goto	l17885
 23996                           
 23997                           ; BSR set to: 0
 23998                           ;monComm.c: 125:             monitorMsg[7] |= 0x80;
 23999  006FB8  0102               	movlb	2	; () banked
 24000  006FBA  8FC6               	bsf	(_monitorMsg+7)& (0+255),7,b
 24001  006FBC                     l17885:
 24002                           
 24003                           ;monComm.c: 128:         monitorMsg[8] = bRateGet();
 24004  006FBC  EC29  F051         	call	_bRateGet	;wreg free
 24005  006FC0  0102               	movlb	2	; () banked
 24006  006FC2  6FC7               	movwf	(_monitorMsg+8)& (0+255),b
 24007                           
 24008                           ; BSR set to: 2
 24009                           ;monComm.c: 129:         monitorMsg[9] = ctrlErrorStatus;
 24010  006FC4  C1C3  F2C8         	movff	_ctrlErrorStatus,_monitorMsg+9
 24011                           
 24012                           ; BSR set to: 2
 24013  006FC8  EC28  F047         	call	_I2C2_MOpen	;wreg free
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;monComm.c: 132:         I2C2_SetBuffer(monitorMsg, 10);
 24017  006FCC  0EBF               	movlw	low _monitorMsg
 24018  006FCE  6F8B               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 24019  006FD0  0E02               	movlw	high _monitorMsg
 24020  006FD2  6F8C               	movwf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 24021  006FD4  0E00               	movlw	0
 24022  006FD6  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 24023  006FD8  0E0A               	movlw	10
 24024  006FDA  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 24025  006FDC  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 24026                           
 24027                           ; BSR set to: 2
 24028  006FE0  0E00               	movlw	0
 24029  006FE2  EC8A  F04B         	call	_I2C2_MasterOperation
 24030                           
 24031                           ; BSR set to: 1
 24032                           
 24033                           ;monComm.c: 134:     } else {
 24034  006FE6  0012               	return		;funcret
 24035  006FE8                     __end_of_MonitorMsgForcedSend:
 24036                           	opt callstack 0
 24037                           
 24038 ;; *************** function _timeGet *****************
 24039 ;; Defined at:
 24040 ;;		line 30 in file "time.c"
 24041 ;; Parameters:    Size  Location     Type
 24042 ;;		None
 24043 ;; Auto vars:     Size  Location     Type
 24044 ;;		None
 24045 ;; Return value:  Size  Location     Type
 24046 ;;                  2   51[BANK0 ] unsigned short 
 24047 ;; Registers used:
 24048 ;;		wreg, status,2, cstack
 24049 ;; Tracked objects:
 24050 ;;		On entry : 0/0
 24051 ;;		On exit  : 3F/0
 24052 ;;		Unchanged: 0/0
 24053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24058 ;;Total ram usage:        2 bytes
 24059 ;; Hardware stack levels used:    1
 24060 ;; Hardware stack levels required when called:   18
 24061 ;; This function calls:
 24062 ;;		_TMR1_ReadTimer
 24063 ;; This function is called by:
 24064 ;;		_main
 24065 ;;		_timeDelayMs
 24066 ;;		_keyReadEC
 24067 ;;		_MenuMng
 24068 ;;		_pressureSensorChk
 24069 ;;		_flowChk
 24070 ;;		_SelfTest
 24071 ;;		_MonitorMsgForcedSend
 24072 ;; This function uses a non-reentrant model
 24073 ;;
 24074                           
 24075                           	psect	text88
 24076  00A5AA                     __ptext88:
 24077                           	opt callstack 0
 24078  00A5AA                     _timeGet:
 24079                           	opt callstack 12
 24080                           
 24081                           ;time.c: 31:     return TMR1_ReadTimer();
 24082                           
 24083                           ; BSR set to: 1
 24084                           ;incstack = 0
 24085  00A5AA  EC2D  F050         	call	_TMR1_ReadTimer	;wreg free
 24086  00A5AE  0060  F22C  F093   	movff	?_TMR1_ReadTimer,?_timeGet
 24087  00A5B4  0060  F230  F094   	movff	?_TMR1_ReadTimer+1,?_timeGet+1
 24088                           
 24089                           ; BSR set to: 0
 24090  00A5BA  0012               	return		;funcret
 24091  00A5BC                     __end_of_timeGet:
 24092                           	opt callstack 0
 24093                           
 24094 ;; *************** function _TMR1_ReadTimer *****************
 24095 ;; Defined at:
 24096 ;;		line 104 in file "mcc_generated_files/tmr1.c"
 24097 ;; Parameters:    Size  Location     Type
 24098 ;;		None
 24099 ;; Auto vars:     Size  Location     Type
 24100 ;;  readVal         2   47[BANK0 ] unsigned short 
 24101 ;;  readValLow      1   50[BANK0 ] unsigned char 
 24102 ;;  readValHigh     1   49[BANK0 ] unsigned char 
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  2   43[BANK0 ] unsigned short 
 24105 ;; Registers used:
 24106 ;;		wreg, status,2
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 3F/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24113 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24116 ;;Total ram usage:        8 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; Hardware stack levels required when called:   17
 24119 ;; This function calls:
 24120 ;;		Nothing
 24121 ;; This function is called by:
 24122 ;;		_timeGet
 24123 ;;		_timeElapsedR
 24124 ;;		_timeElapsed
 24125 ;; This function uses a non-reentrant model
 24126 ;;
 24127                           
 24128                           	psect	text89
 24129  00A05A                     __ptext89:
 24130                           	opt callstack 0
 24131  00A05A                     _TMR1_ReadTimer:
 24132                           	opt callstack 12
 24133                           
 24134                           ;mcc_generated_files/tmr1.c: 106:     uint16_t readVal;;mcc_generated_files/tmr1.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 110:     T1CONbits.T1RD16 = 1;
 24135                           
 24136                           ; BSR set to: 0
 24137                           ;incstack = 0
 24138  00A05A  82B2               	bsf	178,1,c	;volatile
 24139                           
 24140                           ;mcc_generated_files/tmr1.c: 112:     readValLow = TMR1L;
 24141  00A05C  006F FEC0  F092    	movff	16304,TMR1_ReadTimer@readValLow	;volatile
 24142                           
 24143                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
 24144  00A062  006F FEC4  F091    	movff	16305,TMR1_ReadTimer@readValHigh	;volatile
 24145                           
 24146                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 24147  00A068  0100               	movlb	0	; () banked
 24148  00A06A  5191               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 24149  00A06C  6F8D               	movwf	??_TMR1_ReadTimer& (0+255),b
 24150  00A06E  5192               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 24151  00A070  6F8F               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 24152  00A072  0060  F234  F090   	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 24153                           
 24154                           ; BSR set to: 0
 24155                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
 24156  00A078  0060  F23C  F08B   	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 24157  00A07E  0060  F240  F08C   	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 24158                           
 24159                           ; BSR set to: 0
 24160  00A084  0012               	return		;funcret
 24161  00A086                     __end_of_TMR1_ReadTimer:
 24162                           	opt callstack 0
 24163                           
 24164 ;; *************** function _sprintf *****************
 24165 ;; Defined at:
 24166 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
 24167 ;; Parameters:    Size  Location     Type
 24168 ;;  s               2   70[BANK1 ] PTR unsigned char 
 24169 ;;		 -> lcdBtnRow(20), lcdTopRow(20), lcdBtnRRow(10), 
 24170 ;;  fmt             2   72[BANK1 ] PTR const unsigned char 
 24171 ;;		 -> STR_106(7), STR_105(7), STR_87(17), STR_75(18), 
 24172 ;;		 -> STR_64(19), STR_60(11), STR_59(10), STR_58(12), 
 24173 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 24174 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 24175 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 24176 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 24177 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 24178 ;;		 -> STR_37(21), STR_20(6), 
 24179 ;; Auto vars:     Size  Location     Type
 24180 ;;  f               6   86[BANK1 ] struct _IO_FILE
 24181 ;;  ap              2   84[BANK1 ] PTR void [1]
 24182 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24183 ;;  ret             2    0        int 
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  2   70[BANK1 ] int 
 24186 ;; Registers used:
 24187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24188 ;; Tracked objects:
 24189 ;;		On entry : 3E/1
 24190 ;;		On exit  : 3F/1
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24193 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24194 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24196 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24197 ;;Total ram usage:       22 bytes
 24198 ;; Hardware stack levels used:    1
 24199 ;; Hardware stack levels required when called:   25
 24200 ;; This function calls:
 24201 ;;		_vfprintf
 24202 ;; This function is called by:
 24203 ;;		_main
 24204 ;;		_screenMng
 24205 ;;		_pressureSensorChk
 24206 ;;		_flowChk
 24207 ;;		_SelfTest
 24208 ;;		_MonitorMsgForcedSend
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	text90
 24213  009262                     __ptext90:
 24214                           	opt callstack 0
 24215  009262                     _sprintf:
 24216                           	opt callstack 5
 24217                           
 24218                           ; BSR set to: 0
 24219                           ;incstack = 0
 24220  009262  0E4A               	movlw	low (?_sprintf+4)
 24221  009264  0101               	movlb	1	; () banked
 24222  009266  6F54               	movwf	sprintf@ap& (0+255),b
 24223  009268  0E01               	movlw	high (?_sprintf+4)
 24224  00926A  6F55               	movwf	(sprintf@ap+1)& (0+255),b
 24225  00926C  0060  F518  F156   	movff	sprintf@s,sprintf@f
 24226  009272  0060  F51C  F157   	movff	sprintf@s+1,sprintf@f+1
 24227                           
 24228                           ; BSR set to: 1
 24229  009278  0E00               	movlw	0
 24230  00927A  6F59               	movwf	(sprintf@f+3)& (0+255),b
 24231  00927C  0E00               	movlw	0
 24232  00927E  6F58               	movwf	(sprintf@f+2)& (0+255),b
 24233                           
 24234                           ; BSR set to: 1
 24235  009280  0E00               	movlw	0
 24236  009282  6F5B               	movwf	(sprintf@f+5)& (0+255),b
 24237  009284  0E00               	movlw	0
 24238  009286  6F5A               	movwf	(sprintf@f+4)& (0+255),b
 24239                           
 24240                           ; BSR set to: 1
 24241  009288  0E56               	movlw	low sprintf@f
 24242  00928A  6F40               	movwf	vfprintf@fp& (0+255),b
 24243  00928C  0E01               	movlw	high sprintf@f
 24244  00928E  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 24245  009290  0060  F520  F142   	movff	sprintf@fmt,vfprintf@fmt
 24246  009296  0060  F524  F143   	movff	sprintf@fmt+1,vfprintf@fmt+1
 24247  00929C  0E54               	movlw	low sprintf@ap
 24248  00929E  6F44               	movwf	vfprintf@ap& (0+255),b
 24249  0092A0  0E01               	movlw	high sprintf@ap
 24250  0092A2  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 24251  0092A4  ECBD  F046         	call	_vfprintf	;wreg free
 24252                           
 24253                           ; BSR set to: 2
 24254  0092A8  0101               	movlb	1	; () banked
 24255  0092AA  5158               	movf	(sprintf@f+2)& (0+255),w,b
 24256  0092AC  2546               	addwf	sprintf@s& (0+255),w,b
 24257  0092AE  6ED9               	movwf	fsr2l,c
 24258  0092B0  5159               	movf	(sprintf@f+3)& (0+255),w,b
 24259  0092B2  2147               	addwfc	(sprintf@s+1)& (0+255),w,b
 24260  0092B4  6EDA               	movwf	fsr2h,c
 24261  0092B6  0E00               	movlw	0
 24262  0092B8  6EDF               	movwf	indf2,c
 24263                           
 24264                           ; BSR set to: 1
 24265  0092BA  0012               	return		;funcret
 24266  0092BC                     __end_of_sprintf:
 24267                           	opt callstack 0
 24268                           
 24269 ;; *************** function _bRateGet *****************
 24270 ;; Defined at:
 24271 ;;		line 56 in file "brate.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;		None
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;		None
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  1    wreg      unsigned char 
 24278 ;; Registers used:
 24279 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 24280 ;; Tracked objects:
 24281 ;;		On entry : 3C/1
 24282 ;;		On exit  : 3F/0
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24289 ;;Total ram usage:        0 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; Hardware stack levels required when called:   18
 24292 ;; This function calls:
 24293 ;;		___awdiv
 24294 ;; This function is called by:
 24295 ;;		_main
 24296 ;;		_MonitorMsgForcedSend
 24297 ;; This function uses a non-reentrant model
 24298 ;;
 24299                           
 24300                           	psect	text91
 24301  00A252                     __ptext91:
 24302                           	opt callstack 0
 24303  00A252                     _bRateGet:
 24304                           	opt callstack 12
 24305                           
 24306                           ;brate.c: 57:     return eBRate*20/bRateCnt;
 24307                           
 24308                           ; BSR set to: 1
 24309                           ;incstack = 0
 24310  00A252  0100               	movlb	0	; () banked
 24311  00A254  51BB               	movf	_eBRate& (0+255),w,b
 24312  00A256  0D14               	mullw	20
 24313  00A258  006F FFCC  F08B    	movff	prodl,___awdiv@dividend
 24314  00A25E  006F FFD0  F08C    	movff	prodh,___awdiv@dividend+1
 24315  00A264  0060  F2E8  F08D   	movff	_bRateCnt,___awdiv@divisor
 24316  00A26A  6B8E               	clrf	(___awdiv@divisor+1)& (0+255),b
 24317  00A26C  EC94  F044         	call	___awdiv	;wreg free
 24318  00A270  518B               	movf	?___awdiv& (0+255),w,b
 24319                           
 24320                           ; BSR set to: 0
 24321  00A272  0012               	return		;funcret
 24322  00A274                     __end_of_bRateGet:
 24323                           	opt callstack 0
 24324                           
 24325 ;; *************** function ___awdiv *****************
 24326 ;; Defined at:
 24327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 24328 ;; Parameters:    Size  Location     Type
 24329 ;;  dividend        2   43[BANK0 ] int 
 24330 ;;  divisor         2   45[BANK0 ] int 
 24331 ;; Auto vars:     Size  Location     Type
 24332 ;;  quotient        2   49[BANK0 ] int 
 24333 ;;  sign            1   48[BANK0 ] unsigned char 
 24334 ;;  counter         1   47[BANK0 ] unsigned char 
 24335 ;; Return value:  Size  Location     Type
 24336 ;;                  2   43[BANK0 ] int 
 24337 ;; Registers used:
 24338 ;;		wreg, status,2, status,0
 24339 ;; Tracked objects:
 24340 ;;		On entry : 3F/0
 24341 ;;		On exit  : 3F/0
 24342 ;;		Unchanged: 0/0
 24343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24345 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24347 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24348 ;;Total ram usage:        8 bytes
 24349 ;; Hardware stack levels used:    1
 24350 ;; Hardware stack levels required when called:   17
 24351 ;; This function calls:
 24352 ;;		Nothing
 24353 ;; This function is called by:
 24354 ;;		_MenuMng
 24355 ;;		_bRateGet
 24356 ;; This function uses a non-reentrant model
 24357 ;;
 24358                           
 24359                           	psect	text92
 24360  008928                     __ptext92:
 24361                           	opt callstack 0
 24362  008928                     ___awdiv:
 24363                           	opt callstack 12
 24364                           
 24365                           ; BSR set to: 0
 24366                           
 24367                           ; BSR set to: 0
 24368                           ;incstack = 0
 24369  008928  0E00               	movlw	0
 24370  00892A  6F90               	movwf	___awdiv@sign& (0+255),b
 24371                           
 24372                           ; BSR set to: 0
 24373  00892C  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24374  00892E  D006               	goto	l17459
 24375                           
 24376                           ; BSR set to: 0
 24377  008930  6D8D               	negf	___awdiv@divisor& (0+255),b
 24378  008932  1F8E               	comf	(___awdiv@divisor+1)& (0+255),f,b
 24379  008934  B0D8               	btfsc	status,0,c
 24380  008936  2B8E               	incf	(___awdiv@divisor+1)& (0+255),f,b
 24381                           
 24382                           ; BSR set to: 0
 24383  008938  0E01               	movlw	1
 24384  00893A  6F90               	movwf	___awdiv@sign& (0+255),b
 24385  00893C                     l17459:
 24386                           
 24387                           ; BSR set to: 0
 24388  00893C  AF8C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 24389  00893E  D006               	goto	l17465
 24390                           
 24391                           ; BSR set to: 0
 24392  008940  6D8B               	negf	___awdiv@dividend& (0+255),b
 24393  008942  1F8C               	comf	(___awdiv@dividend+1)& (0+255),f,b
 24394  008944  B0D8               	btfsc	status,0,c
 24395  008946  2B8C               	incf	(___awdiv@dividend+1)& (0+255),f,b
 24396                           
 24397                           ; BSR set to: 0
 24398  008948  0E01               	movlw	1
 24399  00894A  1B90               	xorwf	___awdiv@sign& (0+255),f,b
 24400  00894C                     l17465:
 24401                           
 24402                           ; BSR set to: 0
 24403  00894C  0E00               	movlw	0
 24404  00894E  6F92               	movwf	(___awdiv@quotient+1)& (0+255),b
 24405  008950  0E00               	movlw	0
 24406  008952  6F91               	movwf	___awdiv@quotient& (0+255),b
 24407                           
 24408                           ; BSR set to: 0
 24409  008954  518D               	movf	___awdiv@divisor& (0+255),w,b
 24410  008956  118E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 24411  008958  B4D8               	btfsc	status,2,c
 24412  00895A  D01C               	goto	l17487
 24413                           
 24414                           ; BSR set to: 0
 24415  00895C  0E01               	movlw	1
 24416  00895E  6F8F               	movwf	___awdiv@counter& (0+255),b
 24417  008960  D004               	goto	l17473
 24418  008962                     l17471:
 24419                           
 24420                           ; BSR set to: 0
 24421  008962  90D8               	bcf	status,0,c
 24422  008964  378D               	rlcf	___awdiv@divisor& (0+255),f,b
 24423  008966  378E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 24424  008968  2B8F               	incf	___awdiv@counter& (0+255),f,b
 24425  00896A                     l17473:
 24426                           
 24427                           ; BSR set to: 0
 24428  00896A  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24429  00896C  D7FA               	goto	l17471
 24430  00896E                     u17980:
 24431                           
 24432                           ; BSR set to: 0
 24433  00896E  90D8               	bcf	status,0,c
 24434  008970  3791               	rlcf	___awdiv@quotient& (0+255),f,b
 24435  008972  3792               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24436                           
 24437                           ; BSR set to: 0
 24438  008974  518D               	movf	___awdiv@divisor& (0+255),w,b
 24439  008976  5D8B               	subwf	___awdiv@dividend& (0+255),w,b
 24440  008978  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24441  00897A  598C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24442  00897C  A0D8               	btfss	status,0,c
 24443  00897E  D005               	goto	l17483
 24444                           
 24445                           ; BSR set to: 0
 24446  008980  518D               	movf	___awdiv@divisor& (0+255),w,b
 24447  008982  5F8B               	subwf	___awdiv@dividend& (0+255),f,b
 24448  008984  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24449  008986  5B8C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24450                           
 24451                           ; BSR set to: 0
 24452  008988  8191               	bsf	___awdiv@quotient& (0+255),0,b
 24453  00898A                     l17483:
 24454                           
 24455                           ; BSR set to: 0
 24456  00898A  90D8               	bcf	status,0,c
 24457  00898C  338E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24458  00898E  338D               	rrcf	___awdiv@divisor& (0+255),f,b
 24459                           
 24460                           ; BSR set to: 0
 24461  008990  2F8F               	decfsz	___awdiv@counter& (0+255),f,b
 24462  008992  D7ED               	goto	u17980
 24463  008994                     l17487:
 24464                           
 24465                           ; BSR set to: 0
 24466  008994  5190               	movf	___awdiv@sign& (0+255),w,b
 24467  008996  B4D8               	btfsc	status,2,c
 24468  008998  D004               	goto	l17491
 24469                           
 24470                           ; BSR set to: 0
 24471  00899A  6D91               	negf	___awdiv@quotient& (0+255),b
 24472  00899C  1F92               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24473  00899E  B0D8               	btfsc	status,0,c
 24474  0089A0  2B92               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24475  0089A2                     l17491:
 24476                           
 24477                           ; BSR set to: 0
 24478  0089A2  0060  F244  F08B   	movff	___awdiv@quotient,?___awdiv
 24479  0089A8  0060  F248  F08C   	movff	___awdiv@quotient+1,?___awdiv+1
 24480                           
 24481                           ; BSR set to: 0
 24482  0089AE  0012               	return		;funcret
 24483  0089B0                     __end_of___awdiv:
 24484                           	opt callstack 0
 24485                           
 24486 ;; *************** function _aCaptGetResult *****************
 24487 ;; Defined at:
 24488 ;;		line 177 in file "aCapture.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;  sel             1    wreg     enum E16104
 24491 ;;  outVal          2   96[BANK1 ] PTR short 
 24492 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 24493 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), main@pAux_3859(2), bdP2(2), 
 24494 ;;		 -> bdP1(2), main@pAux(2), pAvgShort(2), main@tmpVal(2), 
 24495 ;;		 -> pAvgUShort(2), pInst(2), 
 24496 ;; Auto vars:     Size  Location     Type
 24497 ;;  sel             1  103[BANK1 ] enum E16104
 24498 ;;  lclRaw          4  104[BANK1 ] unsigned long 
 24499 ;;  lclValid        1  102[BANK1 ] unsigned char 
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      _Bool 
 24502 ;; Registers used:
 24503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24504 ;; Tracked objects:
 24505 ;;		On entry : 3F/1
 24506 ;;		On exit  : 3C/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24509 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24510 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24511 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24512 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24513 ;;Total ram usage:       12 bytes
 24514 ;; Hardware stack levels used:    1
 24515 ;; Hardware stack levels required when called:   26
 24516 ;; This function calls:
 24517 ;;		_printf
 24518 ;; This function is called by:
 24519 ;;		_main
 24520 ;;		_pressureSensorChk
 24521 ;;		_flowChk
 24522 ;;		_SelfTest
 24523 ;;		_MonitorMsgForcedSend
 24524 ;; This function uses a non-reentrant model
 24525 ;;
 24526                           
 24527                           	psect	text93
 24528  0066B4                     __ptext93:
 24529                           	opt callstack 0
 24530  0066B4                     _aCaptGetResult:
 24531                           	opt callstack 4
 24532                           
 24533                           ; BSR set to: 0
 24534                           ;incstack = 0
 24535                           ;aCaptGetResult@sel stored from wreg
 24536  0066B4  6F67               	movwf	aCaptGetResult@sel& (0+255),b
 24537                           
 24538                           ;aCapture.c: 178:     uint32_t lclRaw;;aCapture.c: 179:     uint8_t lclValid;;aCapture.c
      +                          : 182:     PIE1bits.ADTIE = 0;
 24539  0066B6  0139               	movlb	57	; () banked
 24540  0066B8  9791               	bcf	145,3,b	;volatile
 24541                           
 24542                           ; BSR set to: 57
 24543                           ;aCapture.c: 183:     lclRaw=resultTbl[sel];
 24544  0066BA  0101               	movlb	1	; () banked
 24545  0066BC  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24546  0066BE  0D04               	mullw	4
 24547  0066C0  0E7B               	movlw	low _resultTbl
 24548  0066C2  24F3               	addwf	243,w,c
 24549  0066C4  6ED9               	movwf	fsr2l,c
 24550  0066C6  0E02               	movlw	high _resultTbl
 24551  0066C8  20F4               	addwfc	prodh,w,c
 24552  0066CA  6EDA               	movwf	fsr2h,c
 24553  0066CC  006F FF78  F168    	movff	postinc2,aCaptGetResult@lclRaw
 24554  0066D2  006F FF78  F169    	movff	postinc2,aCaptGetResult@lclRaw+1
 24555  0066D8  006F FF78  F16A    	movff	postinc2,aCaptGetResult@lclRaw+2
 24556  0066DE  006F FF78  F16B    	movff	postinc2,aCaptGetResult@lclRaw+3
 24557                           
 24558                           ; BSR set to: 1
 24559                           ;aCapture.c: 184:     lclValid=resultTblVal[sel];
 24560  0066E4  0E24               	movlw	low _resultTblVal
 24561  0066E6  2567               	addwf	aCaptGetResult@sel& (0+255),w,b
 24562  0066E8  6ED9               	movwf	fsr2l,c
 24563  0066EA  6ADA               	clrf	fsr2h,c
 24564  0066EC  0E02               	movlw	high _resultTblVal
 24565  0066EE  22DA               	addwfc	fsr2h,f,c
 24566  0066F0  50DF               	movf	indf2,w,c
 24567  0066F2  6F66               	movwf	aCaptGetResult@lclValid& (0+255),b
 24568                           
 24569                           ; BSR set to: 1
 24570                           ;aCapture.c: 185:     PIE1bits.ADTIE = 1;
 24571  0066F4  0139               	movlb	57	; () banked
 24572  0066F6  8791               	bsf	145,3,b	;volatile
 24573                           
 24574                           ; BSR set to: 57
 24575                           ;aCapture.c: 187:     if (lclValid == 0) {
 24576  0066F8  0101               	movlb	1	; () banked
 24577  0066FA  5166               	movf	aCaptGetResult@lclValid& (0+255),w,b
 24578  0066FC  A4D8               	btfss	status,2,c
 24579  0066FE  D066               	goto	l17589
 24580                           
 24581                           ; BSR set to: 1
 24582                           ;aCapture.c: 188:         return 0;
 24583  006700  0E00               	movlw	0
 24584  006702  0012               	return	
 24585  006704                     l17579:
 24586                           
 24587                           ; BSR set to: 1
 24588                           ;aCapture.c: 195:             lclRaw=lclRaw>>9;
 24589  006704  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24590  00670A  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24591  006710  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24592  006716  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24593  00671C  0E0A               	movlw	10
 24594  00671E  D005               	goto	u18060
 24595  006720                     u18065:
 24596  006720  90D8               	bcf	status,0,c
 24597  006722  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24598  006724  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24599  006726  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24600  006728  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24601  00672A                     u18060:
 24602  00672A  2EE8               	decfsz	wreg,f,c
 24603  00672C  D7F9               	goto	u18065
 24604  00672E  D041               	goto	L48
 24605  006730                     l17581:
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;aCapture.c: 198:             lclRaw=lclRaw>>6;
 24609  006730  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24610  006736  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24611  00673C  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24612  006742  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24613  006748  0E07               	movlw	7
 24614  00674A  D005               	goto	u18070
 24615  00674C                     u18075:
 24616  00674C  90D8               	bcf	status,0,c
 24617  00674E  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24618  006750  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24619  006752  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24620  006754  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24621  006756                     u18070:
 24622  006756  2EE8               	decfsz	wreg,f,c
 24623  006758  D7F9               	goto	u18075
 24624  00675A  D02B               	goto	L48
 24625  00675C                     l17583:
 24626                           
 24627                           ; BSR set to: 1
 24628                           ;aCapture.c: 201:             lclRaw=lclRaw>>4;
 24629  00675C  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24630  006762  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24631  006768  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24632  00676E  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24633  006774  0E05               	movlw	5
 24634  006776  D005               	goto	u18080
 24635  006778                     u18085:
 24636  006778  90D8               	bcf	status,0,c
 24637  00677A  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24638  00677C  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24639  00677E  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24640  006780  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24641  006782                     u18080:
 24642  006782  2EE8               	decfsz	wreg,f,c
 24643  006784  D7F9               	goto	u18085
 24644  006786  D015               	goto	L48
 24645  006788                     l17585:
 24646                           
 24647                           ; BSR set to: 1
 24648                           ;aCapture.c: 204:             lclRaw=lclRaw>>2;
 24649  006788  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24650  00678E  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24651  006794  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24652  00679A  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24653  0067A0  0E03               	movlw	3
 24654  0067A2  D005               	goto	u18090
 24655  0067A4                     u18095:
 24656  0067A4  90D8               	bcf	status,0,c
 24657  0067A6  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24658  0067A8  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24659  0067AA  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24660  0067AC  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24661  0067AE                     u18090:
 24662  0067AE  2EE8               	decfsz	wreg,f,c
 24663  0067B0  D7F9               	goto	u18095
 24664  0067B2                     L48:
 24665  0067B2  0060  F588  F168   	movff	??_aCaptGetResult,aCaptGetResult@lclRaw
 24666  0067B8  0060  F58C  F169   	movff	??_aCaptGetResult+1,aCaptGetResult@lclRaw+1
 24667  0067BE  0060  F590  F16A   	movff	??_aCaptGetResult+2,aCaptGetResult@lclRaw+2
 24668  0067C4  0060  F594  F16B   	movff	??_aCaptGetResult+3,aCaptGetResult@lclRaw+3
 24669                           
 24670                           ;aCapture.c: 205:             break;
 24671  0067CA  D0A0               	goto	l17619
 24672  0067CC                     l17589:
 24673                           
 24674                           ; BSR set to: 1
 24675  0067CC  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24676  0067CE  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24677  0067D0  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24678                           
 24679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24680                           ; Switch size 1, requested type "simple"
 24681                           ; Number of cases is 1, Range of values is 0 to 0
 24682                           ; switch strategies available:
 24683                           ; Name         Instructions Cycles
 24684                           ; simple_byte            4     3 (average)
 24685                           ;	Chosen strategy is simple_byte
 24686  0067D2  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24687  0067D4  0A00               	xorlw	0	; case 0
 24688  0067D6  A4D8               	btfss	status,2,c
 24689  0067D8  D099               	goto	l17619
 24690                           
 24691                           ; BSR set to: 1
 24692                           ; Switch size 1, requested type "simple"
 24693                           ; Number of cases is 4, Range of values is 3 to 6
 24694                           ; switch strategies available:
 24695                           ; Name         Instructions Cycles
 24696                           ; simple_byte           13     7 (average)
 24697                           ;	Chosen strategy is simple_byte
 24698  0067DA  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24699  0067DC  0A03               	xorlw	3	; case 3
 24700  0067DE  B4D8               	btfsc	status,2,c
 24701  0067E0  D7D3               	goto	l17585
 24702  0067E2  0A07               	xorlw	7	; case 4
 24703  0067E4  B4D8               	btfsc	status,2,c
 24704  0067E6  D7BA               	goto	l17583
 24705  0067E8  0A01               	xorlw	1	; case 5
 24706  0067EA  B4D8               	btfsc	status,2,c
 24707  0067EC  D7A1               	goto	l17581
 24708  0067EE  0A03               	xorlw	3	; case 6
 24709  0067F0  B4D8               	btfsc	status,2,c
 24710  0067F2  D788               	goto	l17579
 24711  0067F4  D08B               	goto	l17619
 24712  0067F6                     l1998:
 24713                           
 24714                           ; BSR set to: 1
 24715                           ;aCapture.c: 217:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 24716                           
 24717                           ; BSR set to: 1
 24718  0067F6  0060  F7C4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24719  0067FC  0060  F7C8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24720  006802  0E00               	movlw	0
 24721  006804  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24722  006806  0EFF               	movlw	255
 24723  006808  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24724  00680A  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24725  00680C  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24726  00680E  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24727  006810  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24728  006812  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24729  006814  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24730  006816  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24731  006818  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24732  00681A  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24733  00681C  B0D8               	btfsc	status,0,c
 24734  00681E  D022               	goto	l17597
 24735                           
 24736                           ; BSR set to: 1
 24737  006820  0060  F7C4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24738  006826  0060  F7C8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24739  00682C  0E00               	movlw	0
 24740  00682E  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24741  006830  0EFF               	movlw	255
 24742  006832  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24743  006834  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24744  006836  5168               	movf	aCaptGetResult@lclRaw& (0+255),w,b
 24745  006838  5D62               	subwf	??_aCaptGetResult& (0+255),w,b
 24746  00683A  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24747  00683C  5169               	movf	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24748  00683E  5963               	subwfb	(??_aCaptGetResult+1)& (0+255),w,b
 24749  006840  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24750  006842  516A               	movf	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24751  006844  5964               	subwfb	(??_aCaptGetResult+2)& (0+255),w,b
 24752  006846  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24753  006848  516B               	movf	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24754  00684A  5965               	subwfb	(??_aCaptGetResult+3)& (0+255),w,b
 24755  00684C  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24756                           
 24757                           ; BSR set to: 1
 24758                           ;aCapture.c: 218:                 *outVal = - (lclRaw/1);
 24759  00684E  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24760  006854  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24761  00685A  1F62               	comf	??_aCaptGetResult& (0+255),f,b
 24762  00685C  1F63               	comf	(??_aCaptGetResult+1)& (0+255),f,b
 24763  00685E  4B62               	infsnz	??_aCaptGetResult& (0+255),f,b
 24764  006860  2B63               	incf	(??_aCaptGetResult+1)& (0+255),f,b
 24765  006862  D039               	goto	L50
 24766  006864                     l17597:
 24767                           
 24768                           ; BSR set to: 1
 24769                           ;aCapture.c: 220:                 lclRaw = lclRaw - mainPSensCal;
 24770  006864  0060  F7C4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24771  00686A  0060  F7C8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24772  006870  0E00               	movlw	0
 24773  006872  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24774  006874  0EFF               	movlw	255
 24775  006876  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24776  006878  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24777  00687A  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24778  00687C  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24779  00687E  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24780  006880  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24781  006882  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24782  006884  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24783  006886  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24784  006888  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24785  00688A  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24786  00688C  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24787  00688E  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24788  006890  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24789                           
 24790                           ; BSR set to: 1
 24791                           ;aCapture.c: 221:                 *outVal=(lclRaw/1);
 24792  006892  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24793  006898  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24794  00689E  0060  F5A3  FFDE   	movff	aCaptGetResult@lclRaw,postinc2
 24795  0068A4  0060  F5A7  FFDD   	movff	aCaptGetResult@lclRaw+1,postdec2
 24796  0068AA                     l17601:
 24797                           
 24798                           ; BSR set to: 1
 24799                           ;aCapture.c: 223:             return 1;
 24800  0068AA  0E01               	movlw	1
 24801  0068AC  0012               	return	
 24802  0068AE                     l17605:
 24803                           
 24804                           ; BSR set to: 1
 24805                           ;aCapture.c: 225:             *outVal = (lclRaw - auxPSensCal)/1;
 24806  0068AE  0102               	movlb	2	; () banked
 24807  0068B0  51F2               	movf	_auxPSensCal& (0+255),w,b
 24808  0068B2  0101               	movlb	1	; () banked
 24809  0068B4  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24810  0068B6  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24811  0068B8  0102               	movlb	2	; () banked
 24812  0068BA  51F3               	movf	(_auxPSensCal+1)& (0+255),w,b
 24813  0068BC  0101               	movlb	1	; () banked
 24814  0068BE  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24815  0068C0  6F63               	movwf	(??_aCaptGetResult+1)& (0+255),b
 24816  0068C2  D009               	goto	L50
 24817  0068C4                     l17611:
 24818                           
 24819                           ; BSR set to: 1
 24820                           ;aCapture.c: 228:             *outVal = lclRaw<<1;
 24821  0068C4  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24822  0068CA  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24823  0068D0  90D8               	bcf	status,0,c
 24824  0068D2  3762               	rlcf	??_aCaptGetResult& (0+255),f,b
 24825  0068D4  3763               	rlcf	(??_aCaptGetResult+1)& (0+255),f,b
 24826  0068D6                     L50:
 24827  0068D6  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24828  0068DC  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24829  0068E2  0060  F58B  FFDE   	movff	??_aCaptGetResult,postinc2
 24830  0068E8  0060  F58F  FFDD   	movff	??_aCaptGetResult+1,postdec2
 24831  0068EE  D7DD               	goto	l17601
 24832  0068F0                     l2004:
 24833                           
 24834                           ; BSR set to: 1
 24835                           ;aCapture.c: 232:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 24836  0068F0  94BA               	bcf	186,2,c	;volatile
 24837  0068F2  96BC               	bcf	188,3,c	;volatile
 24838  0068F4  96BA               	bcf	186,3,c	;volatile
 24839                           
 24840                           ; BSR set to: 1
 24841  0068F6  0EBE               	movlw	low STR_28
 24842  0068F8  6F46               	movwf	printf@fmt& (0+255),b
 24843  0068FA  0EFF               	movlw	high STR_28
 24844  0068FC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 24845  0068FE  0E00               	movlw	0
 24846  006900  6F49               	movwf	(?_printf+3)& (0+255),b
 24847  006902  0E68               	movlw	104
 24848  006904  6F48               	movwf	(?_printf+2)& (0+255),b
 24849  006906  EC43  F050         	call	_printf	;wreg free
 24850                           
 24851                           ;aCapture.c: 233:     }
 24852  00690A  0012               	return	
 24853  00690C                     l17619:
 24854                           
 24855                           ; BSR set to: 1
 24856  00690C  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24857  00690E  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24858  006910  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24859                           
 24860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24861                           ; Switch size 1, requested type "simple"
 24862                           ; Number of cases is 1, Range of values is 0 to 0
 24863                           ; switch strategies available:
 24864                           ; Name         Instructions Cycles
 24865                           ; simple_byte            4     3 (average)
 24866                           ;	Chosen strategy is simple_byte
 24867  006912  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24868  006914  0A00               	xorlw	0	; case 0
 24869  006916  A4D8               	btfss	status,2,c
 24870  006918  D7EB               	goto	l2004
 24871                           
 24872                           ; BSR set to: 1
 24873                           ; Switch size 1, requested type "simple"
 24874                           ; Number of cases is 7, Range of values is 0 to 6
 24875                           ; switch strategies available:
 24876                           ; Name         Instructions Cycles
 24877                           ; simple_byte           22    12 (average)
 24878                           ;	Chosen strategy is simple_byte
 24879  00691A  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24880  00691C  0A00               	xorlw	0	; case 0
 24881  00691E  B4D8               	btfsc	status,2,c
 24882  006920  D76A               	goto	l1998
 24883  006922  0A01               	xorlw	1	; case 1
 24884  006924  B4D8               	btfsc	status,2,c
 24885  006926  D7C3               	goto	l17605
 24886  006928  0A03               	xorlw	3	; case 2
 24887  00692A  B4D8               	btfsc	status,2,c
 24888  00692C  D7CB               	goto	l17611
 24889  00692E  0A01               	xorlw	1	; case 3
 24890  006930  B4D8               	btfsc	status,2,c
 24891  006932  D761               	goto	l1998
 24892  006934  0A07               	xorlw	7	; case 4
 24893  006936  B4D8               	btfsc	status,2,c
 24894  006938  D75E               	goto	l1998
 24895  00693A  0A01               	xorlw	1	; case 5
 24896  00693C  B4D8               	btfsc	status,2,c
 24897  00693E  D75B               	goto	l1998
 24898  006940  0A03               	xorlw	3	; case 6
 24899  006942  B4D8               	btfsc	status,2,c
 24900  006944  D758               	goto	l1998
 24901  006946  D7D4               	goto	l2004
 24902  006948                     __end_of_aCaptGetResult:
 24903                           	opt callstack 0
 24904                           
 24905 ;; *************** function _MonitorErrorSet *****************
 24906 ;; Defined at:
 24907 ;;		line 33 in file "monComm.c"
 24908 ;; Parameters:    Size  Location     Type
 24909 ;;  flag            1    wreg     enum E16825
 24910 ;; Auto vars:     Size  Location     Type
 24911 ;;  flag            1   43[BANK0 ] enum E16825
 24912 ;; Return value:  Size  Location     Type
 24913 ;;                  1    wreg      void 
 24914 ;; Registers used:
 24915 ;;		wreg, status,2, status,0
 24916 ;; Tracked objects:
 24917 ;;		On entry : 3F/1
 24918 ;;		On exit  : 3F/1
 24919 ;;		Unchanged: 0/0
 24920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24924 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24925 ;;Total ram usage:        1 bytes
 24926 ;; Hardware stack levels used:    1
 24927 ;; Hardware stack levels required when called:   17
 24928 ;; This function calls:
 24929 ;;		Nothing
 24930 ;; This function is called by:
 24931 ;;		_main
 24932 ;;		_MonitorMsgForcedSend
 24933 ;; This function uses a non-reentrant model
 24934 ;;
 24935                           
 24936                           	psect	text94
 24937  00A5BC                     __ptext94:
 24938                           	opt callstack 0
 24939  00A5BC                     _MonitorErrorSet:
 24940                           	opt callstack 9
 24941                           
 24942                           ;incstack = 0
 24943                           ;MonitorErrorSet@flag stored from wreg
 24944  00A5BC  0100               	movlb	0	; () banked
 24945  00A5BE  6F8B               	movwf	MonitorErrorSet@flag& (0+255),b
 24946                           
 24947                           ;monComm.c: 34:     ctrlErrorStatus = ctrlErrorStatus|flag;
 24948  00A5C0  0101               	movlb	1	; () banked
 24949  00A5C2  51C3               	movf	_ctrlErrorStatus& (0+255),w,b
 24950  00A5C4  0100               	movlb	0	; () banked
 24951  00A5C6  118B               	iorwf	MonitorErrorSet@flag& (0+255),w,b
 24952  00A5C8  0101               	movlb	1	; () banked
 24953  00A5CA  6FC3               	movwf	_ctrlErrorStatus& (0+255),b
 24954                           
 24955                           ; BSR set to: 1
 24956  00A5CC  0012               	return		;funcret
 24957  00A5CE                     __end_of_MonitorErrorSet:
 24958                           	opt callstack 0
 24959                           
 24960 ;; *************** function _MonitorErrorClr *****************
 24961 ;; Defined at:
 24962 ;;		line 37 in file "monComm.c"
 24963 ;; Parameters:    Size  Location     Type
 24964 ;;  flag            1    wreg     enum E16825
 24965 ;; Auto vars:     Size  Location     Type
 24966 ;;  flag            1   43[BANK0 ] enum E16825
 24967 ;; Return value:  Size  Location     Type
 24968 ;;                  1    wreg      void 
 24969 ;; Registers used:
 24970 ;;		wreg, status,2, status,0
 24971 ;; Tracked objects:
 24972 ;;		On entry : 3C/1
 24973 ;;		On exit  : 3F/1
 24974 ;;		Unchanged: 0/0
 24975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24980 ;;Total ram usage:        1 bytes
 24981 ;; Hardware stack levels used:    1
 24982 ;; Hardware stack levels required when called:   17
 24983 ;; This function calls:
 24984 ;;		Nothing
 24985 ;; This function is called by:
 24986 ;;		_main
 24987 ;;		_MonitorMsgForcedSend
 24988 ;; This function uses a non-reentrant model
 24989 ;;
 24990                           
 24991                           	psect	text95
 24992  00A5CE                     __ptext95:
 24993                           	opt callstack 0
 24994  00A5CE                     _MonitorErrorClr:
 24995                           	opt callstack 9
 24996                           
 24997                           ; BSR set to: 1
 24998                           ;incstack = 0
 24999                           ;MonitorErrorClr@flag stored from wreg
 25000  00A5CE  0100               	movlb	0	; () banked
 25001  00A5D0  6F8B               	movwf	MonitorErrorClr@flag& (0+255),b
 25002                           
 25003                           ;monComm.c: 38:     ctrlErrorStatus = ctrlErrorStatus&(~flag);
 25004  00A5D2  0100               	movlb	0	; () banked
 25005  00A5D4  518B               	movf	MonitorErrorClr@flag& (0+255),w,b
 25006  00A5D6  0AFF               	xorlw	255
 25007  00A5D8  0101               	movlb	1	; () banked
 25008  00A5DA  15C3               	andwf	_ctrlErrorStatus& (0+255),w,b
 25009  00A5DC  6FC3               	movwf	_ctrlErrorStatus& (0+255),b
 25010                           
 25011                           ; BSR set to: 1
 25012  00A5DE  0012               	return		;funcret
 25013  00A5E0                     __end_of_MonitorErrorClr:
 25014                           	opt callstack 0
 25015                           
 25016 ;; *************** function _I2C2_MasterOperation *****************
 25017 ;; Defined at:
 25018 ;;		line 254 in file "mcc_generated_files/i2c2_master.c"
 25019 ;; Parameters:    Size  Location     Type
 25020 ;;  read            1    wreg     _Bool 
 25021 ;; Auto vars:     Size  Location     Type
 25022 ;;  read            1  100[BANK1 ] _Bool 
 25023 ;;  returnValue     1  101[BANK1 ] enum E353
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  1    wreg      enum E353
 25026 ;; Registers used:
 25027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25028 ;; Tracked objects:
 25029 ;;		On entry : 3F/2
 25030 ;;		On exit  : 3F/1
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25034 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25036 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25037 ;;Total ram usage:        2 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; Hardware stack levels required when called:   29
 25040 ;; This function calls:
 25041 ;;		_I2C2_DO_SEND_ADR_READ
 25042 ;;		_I2C2_DO_SEND_ADR_WRITE
 25043 ;;		_I2C2_MasterSetCounter
 25044 ;; This function is called by:
 25045 ;;		_MonitorMsgForcedSend
 25046 ;; This function uses a non-reentrant model
 25047 ;;
 25048                           
 25049                           	psect	text96
 25050  009714                     __ptext96:
 25051                           	opt callstack 0
 25052  009714                     _I2C2_MasterOperation:
 25053                           	opt callstack 0
 25054                           
 25055                           ; BSR set to: 1
 25056                           ;incstack = 0
 25057 ;; hardware stack exceeded
 25058                           ;I2C2_MasterOperation@read stored from wreg
 25059  009714  0101               	movlb	1	; () banked
 25060  009716  6F64               	movwf	I2C2_MasterOperation@read& (0+255),b
 25061                           
 25062                           ;mcc_generated_files/i2c2_master.c: 254: i2c2_error_t I2C2_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c2_master.c: 255: {;mcc_generated_files/i2c2_master.c: 256:     i2c
      +                          2_error_t returnValue = I2C2_BUSY;
 25063  009718  0E01               	movlw	1
 25064  00971A  0101               	movlb	1	; () banked
 25065  00971C  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;mcc_generated_files/i2c2_master.c: 257:     if(!I2C2_Status.busy)
 25069  00971E  0102               	movlb	2	; () banked
 25070  009720  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 25071  009722  D017               	goto	l17551
 25072                           
 25073                           ; BSR set to: 2
 25074                           ;mcc_generated_files/i2c2_master.c: 258:     {;mcc_generated_files/i2c2_master.c: 259:  
      +                                 I2C2_Status.busy = 1;
 25075  009724  8523               	bsf	(_I2C2_Status+35)& (0+255),2,b
 25076                           
 25077                           ; BSR set to: 2
 25078                           ;mcc_generated_files/i2c2_master.c: 260:         returnValue = I2C2_NOERR;
 25079  009726  0E00               	movlw	0
 25080  009728  0101               	movlb	1	; () banked
 25081  00972A  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 25082                           
 25083                           ; BSR set to: 1
 25084                           ;mcc_generated_files/i2c2_master.c: 261:         I2C2_MasterSetCounter(I2C2_Status.data_
      +                          length);
 25085  00972C  0102               	movlb	2	; () banked
 25086  00972E  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 25087  009730  ECB9  F053         	call	_I2C2_MasterSetCounter
 25088                           
 25089                           ;mcc_generated_files/i2c2_master.c: 263:         if(read)
 25090  009734  0101               	movlb	1	; () banked
 25091  009736  5164               	movf	I2C2_MasterOperation@read& (0+255),w,b
 25092  009738  B4D8               	btfsc	status,2,c
 25093  00973A  D006               	goto	l17547
 25094                           
 25095                           ; BSR set to: 1
 25096                           ;mcc_generated_files/i2c2_master.c: 264:         {;mcc_generated_files/i2c2_master.c: 26
      +                          5:             I2C2_Status.state = I2C2_RX;
 25097  00973C  0E04               	movlw	4
 25098  00973E  0102               	movlb	2	; () banked
 25099  009740  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 25100                           
 25101                           ; BSR set to: 2
 25102                           ;mcc_generated_files/i2c2_master.c: 266:             I2C2_DO_SEND_ADR_READ();
 25103  009742  ECCE  F050         	call	_I2C2_DO_SEND_ADR_READ	;wreg free
 25104                           
 25105                           ;mcc_generated_files/i2c2_master.c: 267:         }
 25106  009746  D005               	goto	l17551
 25107  009748                     l17547:
 25108                           
 25109                           ; BSR set to: 1
 25110                           ;mcc_generated_files/i2c2_master.c: 269:         {;mcc_generated_files/i2c2_master.c: 27
      +                          0:             I2C2_Status.state = I2C2_TX;
 25111  009748  0E03               	movlw	3
 25112  00974A  0102               	movlb	2	; () banked
 25113  00974C  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 25114                           
 25115                           ; BSR set to: 2
 25116                           ;mcc_generated_files/i2c2_master.c: 271:             I2C2_DO_SEND_ADR_WRITE();
 25117  00974E  EC3D  F052         	call	_I2C2_DO_SEND_ADR_WRITE	;wreg free
 25118  009752                     l17551:
 25119                           
 25120                           ;mcc_generated_files/i2c2_master.c: 274:     return returnValue;
 25121  009752  0101               	movlb	1	; () banked
 25122  009754  5165               	movf	I2C2_MasterOperation@returnValue& (0+255),w,b
 25123                           
 25124                           ; BSR set to: 1
 25125  009756  0012               	return		;funcret
 25126  009758                     __end_of_I2C2_MasterOperation:
 25127                           	opt callstack 0
 25128                           
 25129 ;; *************** function _I2C2_DO_SEND_ADR_WRITE *****************
 25130 ;; Defined at:
 25131 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 25132 ;; Parameters:    Size  Location     Type
 25133 ;;		None
 25134 ;; Auto vars:     Size  Location     Type
 25135 ;;		None
 25136 ;; Return value:  Size  Location     Type
 25137 ;;                  1    wreg      enum E16447
 25138 ;; Registers used:
 25139 ;;		wreg, status,2, status,0, cstack
 25140 ;; Tracked objects:
 25141 ;;		On entry : 3F/2
 25142 ;;		On exit  : 0/0
 25143 ;;		Unchanged: 0/0
 25144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25149 ;;Total ram usage:        0 bytes
 25150 ;; Hardware stack levels used:    1
 25151 ;; Hardware stack levels required when called:   18
 25152 ;; This function calls:
 25153 ;;		_I2C2_MasterSendTxData
 25154 ;; This function is called by:
 25155 ;;		_I2C2_MasterOperation
 25156 ;;		_I2C2_MasterFsm
 25157 ;; This function uses a non-reentrant model
 25158 ;;
 25159                           
 25160                           	psect	text97
 25161  00A47A                     __ptext97:
 25162                           	opt callstack 0
 25163  00A47A                     _I2C2_DO_SEND_ADR_WRITE:
 25164                           	opt callstack 0
 25165                           
 25166                           ; BSR set to: 1
 25167  0000                     
 25168                           ;Skip over the trampoline to the duplicate function for level 2
 25169  00A47A  BED3               	btfsc	211,7,c
 25170  00A47C  EF83  F052         	goto	i2_I2C2_DO_SEND_ADR_WRITE
 25171  00A480                     _I2C2_DO_SEND_ADR_WRITE$intlevel0:
 25172                           	opt callstack 7
 25173                           
 25174                           ; BSR set to: 2
 25175                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 25176                           
 25177                           ;incstack = 0
 25178  00A480  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25179  00A482  0BFC               	andlw	-4
 25180  00A484  0902               	iorlw	2
 25181  00A486  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 25182                           
 25183                           ; BSR set to: 2
 25184                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 25185  00A488  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 25186  00A48A  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 25187  00A48C  ECB3  F053         	call	_I2C2_MasterSendTxData
 25188                           
 25189                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 25190  00A490  0E03               	movlw	3
 25191  00A492  0012               	return		;funcret
 25192  00A494                     __end_of_I2C2_DO_SEND_ADR_WRITE:
 25193                           	opt callstack 0
 25194                           
 25195 ;; *************** function _I2C2_DO_SEND_ADR_READ *****************
 25196 ;; Defined at:
 25197 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 25198 ;; Parameters:    Size  Location     Type
 25199 ;;		None
 25200 ;; Auto vars:     Size  Location     Type
 25201 ;;		None
 25202 ;; Return value:  Size  Location     Type
 25203 ;;                  1    wreg      enum E16447
 25204 ;; Registers used:
 25205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25206 ;; Tracked objects:
 25207 ;;		On entry : 3F/2
 25208 ;;		On exit  : 0/0
 25209 ;;		Unchanged: 0/0
 25210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25215 ;;Total ram usage:        0 bytes
 25216 ;; Hardware stack levels used:    1
 25217 ;; Hardware stack levels required when called:   28
 25218 ;; This function calls:
 25219 ;;		_I2C2_DO_RX_EMPTY
 25220 ;;		_I2C2_MasterSendTxData
 25221 ;; This function is called by:
 25222 ;;		_I2C2_MasterOperation
 25223 ;;		_I2C2_MasterFsm
 25224 ;; This function uses a non-reentrant model
 25225 ;;
 25226                           
 25227                           	psect	text98
 25228  00A19C                     __ptext98:
 25229                           	opt callstack 0
 25230  00A19C                     _I2C2_DO_SEND_ADR_READ:
 25231                           	opt callstack 0
 25232                           
 25233                           ;Skip over the trampoline to the duplicate function for level 2
 25234  00A19C  BED3               	btfsc	211,7,c
 25235  00A19E  EF8F  F051         	goto	i2_I2C2_DO_SEND_ADR_READ
 25236  00A1A2                     _I2C2_DO_SEND_ADR_READ$intlevel0:
 25237                           	opt callstack 0
 25238                           
 25239                           ; BSR set to: 2
 25240                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 25241                           
 25242                           ;incstack = 0
 25243 ;; hardware stack exceeded
 25244  00A1A2  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 25245  00A1A4  0BFC               	andlw	-4
 25246  00A1A6  0902               	iorlw	2
 25247  00A1A8  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 25248                           
 25249                           ; BSR set to: 2
 25250                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 25251  00A1AA  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 25252  00A1AC  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 25253  00A1AE  B4D8               	btfsc	status,2,c
 25254                           
 25255                           ; BSR set to: 2
 25256                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 25257  00A1B0  EC1B  F045         	call	_I2C2_DO_RX_EMPTY	;wreg free
 25258                           
 25259                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 25260  00A1B4  80D8               	bsf	status,0,c
 25261  00A1B6  0102               	movlb	2	; () banked
 25262  00A1B8  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 25263  00A1BA  ECB3  F053         	call	_I2C2_MasterSendTxData
 25264                           
 25265                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 25266  00A1BE  0E04               	movlw	4
 25267  00A1C0  0012               	return		;funcret
 25268  00A1C2                     __end_of_I2C2_DO_SEND_ADR_READ:
 25269                           	opt callstack 0
 25270                           
 25271 ;; *************** function _I2C2_MasterSendTxData *****************
 25272 ;; Defined at:
 25273 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 25274 ;; Parameters:    Size  Location     Type
 25275 ;;  data            1    wreg     unsigned char 
 25276 ;; Auto vars:     Size  Location     Type
 25277 ;;  data            1   43[BANK0 ] unsigned char 
 25278 ;; Return value:  Size  Location     Type
 25279 ;;                  1    wreg      void 
 25280 ;; Registers used:
 25281 ;;		wreg
 25282 ;; Tracked objects:
 25283 ;;		On entry : 3F/2
 25284 ;;		On exit  : 0/0
 25285 ;;		Unchanged: 0/0
 25286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25291 ;;Total ram usage:        1 bytes
 25292 ;; Hardware stack levels used:    1
 25293 ;; Hardware stack levels required when called:   17
 25294 ;; This function calls:
 25295 ;;		Nothing
 25296 ;; This function is called by:
 25297 ;;		_I2C2_DO_SEND_ADR_READ
 25298 ;;		_I2C2_DO_SEND_ADR_WRITE
 25299 ;; This function uses a non-reentrant model
 25300 ;;
 25301                           
 25302                           	psect	text99
 25303  00A766                     __ptext99:
 25304                           	opt callstack 0
 25305  00A766                     _I2C2_MasterSendTxData:
 25306                           	opt callstack 7
 25307                           
 25308                           ;incstack = 0
 25309                           ;I2C2_MasterSendTxData@data stored from wreg
 25310  00A766  0100               	movlb	0	; () banked
 25311  00A768  6F8B               	movwf	I2C2_MasterSendTxData@data& (0+255),b
 25312                           
 25313                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 25314  00A76A  0060  F22F  FD55   	movff	I2C2_MasterSendTxData@data,15701	;volatile
 25315  00A770  0012               	return		;funcret
 25316  00A772                     __end_of_I2C2_MasterSendTxData:
 25317                           	opt callstack 0
 25318                           
 25319 ;; *************** function _I2C2_DO_RX_EMPTY *****************
 25320 ;; Defined at:
 25321 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 25322 ;; Parameters:    Size  Location     Type
 25323 ;;		None
 25324 ;; Auto vars:     Size  Location     Type
 25325 ;;		None
 25326 ;; Return value:  Size  Location     Type
 25327 ;;                  1    wreg      enum E16447
 25328 ;; Registers used:
 25329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25330 ;; Tracked objects:
 25331 ;;		On entry : 3F/2
 25332 ;;		On exit  : 0/0
 25333 ;;		Unchanged: 0/0
 25334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25337 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25338 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25339 ;;Total ram usage:        2 bytes
 25340 ;; Hardware stack levels used:    1
 25341 ;; Hardware stack levels required when called:   27
 25342 ;; This function calls:
 25343 ;;		Absolute function
 25344 ;;		_I2C2_CallbackReturnReset
 25345 ;;		_I2C2_CallbackReturnStop
 25346 ;;		_I2C2_MasterDisableRestart
 25347 ;;		_I2C2_MasterEnableRestart
 25348 ;;		_I2C2_MasterSetCounter
 25349 ;;		_I2C2_NackCb
 25350 ;;		_rd1RegCompleteHandler
 25351 ;;		_rd2RegCompleteHandler
 25352 ;;		_rdBlkRegCompleteHandler
 25353 ;;		_wr1RegCompleteHandler
 25354 ;;		_wr2RegCompleteHandler
 25355 ;; This function is called by:
 25356 ;;		_I2C2_DO_SEND_ADR_READ
 25357 ;;		_I2C2_MasterFsm
 25358 ;; This function uses a non-reentrant model
 25359 ;;
 25360                           
 25361                           	psect	text100
 25362  008A36                     __ptext100:
 25363                           	opt callstack 0
 25364  008A36                     _I2C2_DO_RX_EMPTY:
 25365                           	opt callstack 0
 25366                           
 25367                           ;Skip over the trampoline to the duplicate function for level 2
 25368  008A36  BED3               	btfsc	211,7,c
 25369  008A38  EF9A  F045         	goto	i2_I2C2_DO_RX_EMPTY
 25370  008A3C                     _I2C2_DO_RX_EMPTY$intlevel0:
 25371                           	opt callstack 0
 25372                           
 25373                           ; BSR set to: 2
 25374                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 25375                           
 25376                           ;incstack = 0
 25377 ;; hardware stack exceeded
 25378  008A3C  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 25379                           
 25380                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 25381  008A3E  D016               	goto	l17305
 25382  008A40                     l17277:
 25383                           
 25384                           ; BSR set to: 1
 25385                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 25386  008A40  EC1B  F054         	call	_I2C2_MasterEnableRestart	;wreg free
 25387                           
 25388                           ; BSR set to: 61
 25389                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 25390  008A44  0E08               	movlw	8
 25391  008A46  0012               	return	
 25392  008A48                     l17283:
 25393                           
 25394                           ; BSR set to: 1
 25395                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 25396  008A48  EC1B  F054         	call	_I2C2_MasterEnableRestart	;wreg free
 25397                           
 25398                           ; BSR set to: 61
 25399                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 25400  008A4C  0E07               	movlw	7
 25401  008A4E  0012               	return	
 25402  008A50                     l17289:
 25403                           
 25404                           ; BSR set to: 1
 25405                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 25406  008A50  0102               	movlb	2	; () banked
 25407  008A52  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 25408  008A54  ECB9  F053         	call	_I2C2_MasterSetCounter
 25409                           
 25410                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 25411  008A58  0E04               	movlw	4
 25412  008A5A  0012               	return	
 25413  008A5C                     l17295:
 25414                           
 25415                           ; BSR set to: 1
 25416                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 25417  008A5C  0E07               	movlw	7
 25418  008A5E  0102               	movlb	2	; () banked
 25419  008A60  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 25420  008A62  A4D8               	btfss	status,2,c
 25421                           
 25422                           ; BSR set to: 2
 25423                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 25424  008A64  EC1E  F054         	call	_I2C2_MasterDisableRestart	;wreg free
 25425                           
 25426                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 25427  008A68  0E0F               	movlw	15
 25428  008A6A  0012               	return	
 25429  008A6C                     l17305:
 25430                           
 25431                           ; BSR set to: 2
 25432  008A6C  0060  F830  F160   	movff	_I2C2_Status+12,rd1RegCompleteHandler@ptr
 25433  008A72  0060  F834  F161   	movff	_I2C2_Status+13,rd1RegCompleteHandler@ptr+1
 25434  008A78  D801               	call	u17888
 25435  008A7A  D009               	goto	u17889
 25436  008A7C                     u17888:
 25437  008A7C  0005               	push	
 25438  008A7E  6EFA               	movwf	pclath,c
 25439  008A80  5100               	movf	_I2C2_Status& (0+255),w,b
 25440  008A82  6EFD               	movwf	tosl,c
 25441  008A84  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 25442  008A86  6EFE               	movwf	tosh,c
 25443  008A88  6AFF               	clrf	tosu,c
 25444  008A8A  50FA               	movf	pclath,w,c
 25445  008A8C  0012               	return		;indir
 25446  008A8E                     u17889:
 25447  008A8E  0101               	movlb	1	; () banked
 25448  008A90  6F62               	movwf	??_I2C2_DO_RX_EMPTY& (0+255),b
 25449  008A92  6B63               	clrf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),b
 25450                           
 25451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25452                           ; Switch size 1, requested type "simple"
 25453                           ; Number of cases is 1, Range of values is 0 to 0
 25454                           ; switch strategies available:
 25455                           ; Name         Instructions Cycles
 25456                           ; simple_byte            4     3 (average)
 25457                           ;	Chosen strategy is simple_byte
 25458  008A94  5163               	movf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),w,b
 25459  008A96  0A00               	xorlw	0	; case 0
 25460  008A98  A4D8               	btfss	status,2,c
 25461  008A9A  D7E0               	goto	l17295
 25462                           
 25463                           ; BSR set to: 1
 25464                           ; Switch size 1, requested type "simple"
 25465                           ; Number of cases is 4, Range of values is 1 to 4
 25466                           ; switch strategies available:
 25467                           ; Name         Instructions Cycles
 25468                           ; simple_byte           13     7 (average)
 25469                           ;	Chosen strategy is simple_byte
 25470  008A9C  5162               	movf	??_I2C2_DO_RX_EMPTY& (0+255),w,b
 25471  008A9E  0A01               	xorlw	1	; case 1
 25472  008AA0  B4D8               	btfsc	status,2,c
 25473  008AA2  D7DC               	goto	l17295
 25474  008AA4  0A03               	xorlw	3	; case 2
 25475  008AA6  B4D8               	btfsc	status,2,c
 25476  008AA8  D7CF               	goto	l17283
 25477  008AAA  0A01               	xorlw	1	; case 3
 25478  008AAC  B4D8               	btfsc	status,2,c
 25479  008AAE  D7C8               	goto	l17277
 25480  008AB0  0A07               	xorlw	7	; case 4
 25481  008AB2  B4D8               	btfsc	status,2,c
 25482  008AB4  D7CD               	goto	l17289
 25483  008AB6  D7D2               	goto	l17295
 25484  008AB8                     __end_of_I2C2_DO_RX_EMPTY:
 25485                           	opt callstack 0
 25486                           
 25487 ;; *************** function _I2C2_NackCb *****************
 25488 ;; Defined at:
 25489 ;;		line 30 in file "i2c2_mux.c"
 25490 ;; Parameters:    Size  Location     Type
 25491 ;;  ptr             2   96[BANK1 ] PTR void 
 25492 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25493 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25494 ;; Auto vars:     Size  Location     Type
 25495 ;;		None
 25496 ;; Return value:  Size  Location     Type
 25497 ;;                  1    wreg      enum E16390
 25498 ;; Registers used:
 25499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25500 ;; Tracked objects:
 25501 ;;		On entry : 3F/2
 25502 ;;		On exit  : 3C/0
 25503 ;;		Unchanged: 0/0
 25504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25505 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25509 ;;Total ram usage:        2 bytes
 25510 ;; Hardware stack levels used:    1
 25511 ;; Hardware stack levels required when called:   26
 25512 ;; This function calls:
 25513 ;;		_I2C2_CallbackReturnStop
 25514 ;;		_printf
 25515 ;; This function is called by:
 25516 ;;		_I2C2_MOpen
 25517 ;;		_I2C2_DO_RX_EMPTY
 25518 ;;		i2_I2C2_DO_RX_EMPTY
 25519 ;;		_I2C2_DO_TX_EMPTY
 25520 ;;		_I2C2_DO_TX
 25521 ;;		_I2C2_DO_ADDRESS_NACK
 25522 ;;		_I2C2_DO_BUS_COLLISION
 25523 ;; This function uses a non-reentrant model
 25524 ;;
 25525                           
 25526                           	psect	text101
 25527  009996                     __ptext101:
 25528                           	opt callstack 0
 25529  009996                     _I2C2_NackCb:
 25530                           	opt callstack 0
 25531                           
 25532                           ;Skip over the trampoline to the duplicate function for level 2
 25533  009996  BED3               	btfsc	211,7,c
 25534  009998  EFFE  F04D         	goto	i2_I2C2_NackCb
 25535  00999C                     _I2C2_NackCb$intlevel0:
 25536                           	opt callstack 0
 25537                           
 25538                           ; BSR set to: 2
 25539                           ;i2c2_mux.c: 31:     printf ("I2C2 E\n");
 25540                           
 25541                           ;incstack = 0
 25542 ;; hardware stack exceeded
 25543  00999C  0ED7               	movlw	low STR_61
 25544  00999E  0101               	movlb	1	; () banked
 25545  0099A0  6F46               	movwf	printf@fmt& (0+255),b
 25546  0099A2  0EFF               	movlw	high STR_61
 25547  0099A4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 25548  0099A6  EC43  F050         	call	_printf	;wreg free
 25549                           
 25550                           ; BSR set to: 2
 25551                           ;i2c2_mux.c: 32:     if (currentTrfAddr == 0x50) {
 25552  0099AA  0E50               	movlw	80
 25553  0099AC  0101               	movlb	1	; () banked
 25554  0099AE  19B7               	xorwf	_currentTrfAddr& (0+255),w,b
 25555  0099B0  A4D8               	btfss	status,2,c
 25556  0099B2  D004               	goto	l17239
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;i2c2_mux.c: 33:         lastI2C2MAckResponse = 0;
 25560  0099B4  0E00               	movlw	0
 25561  0099B6  0100               	movlb	0	; () banked
 25562  0099B8  6FBC               	movwf	_lastI2C2MAckResponse& (0+255),b
 25563                           
 25564                           ;i2c2_mux.c: 34:     } else {
 25565  0099BA  D003               	goto	l17241
 25566  0099BC                     l17239:
 25567                           
 25568                           ; BSR set to: 1
 25569                           ;i2c2_mux.c: 35:         lastI2C2LAckResponse = 0;
 25570  0099BC  0E00               	movlw	0
 25571  0099BE  0102               	movlb	2	; () banked
 25572  0099C0  6F53               	movwf	_lastI2C2LAckResponse& (0+255),b
 25573  0099C2                     l17241:
 25574                           
 25575                           ;i2c2_mux.c: 37:     return I2C2_CallbackReturnStop(((void*)0));
 25576  0099C2  0E00               	movlw	0
 25577  0099C4  0101               	movlb	1	; () banked
 25578  0099C6  6F60               	movwf	I2C2_CallbackReturnStop@funPtr& (0+255),b
 25579  0099C8  0E00               	movlw	0
 25580  0099CA  6F61               	movwf	(I2C2_CallbackReturnStop@funPtr+1)& (0+255),b
 25581  0099CC  ECE7  F053         	call	_I2C2_CallbackReturnStop	;wreg free
 25582  0099D0  0012               	return		;funcret
 25583  0099D2                     __end_of_I2C2_NackCb:
 25584                           	opt callstack 0
 25585                           
 25586 ;; *************** function _I2C2_CallbackReturnReset *****************
 25587 ;; Defined at:
 25588 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 25589 ;; Parameters:    Size  Location     Type
 25590 ;;  funPtr          2   96[BANK1 ] PTR void 
 25591 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25592 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25593 ;; Auto vars:     Size  Location     Type
 25594 ;;		None
 25595 ;; Return value:  Size  Location     Type
 25596 ;;                  1    wreg      enum E358
 25597 ;; Registers used:
 25598 ;;		wreg
 25599 ;; Tracked objects:
 25600 ;;		On entry : 3F/2
 25601 ;;		On exit  : 3F/2
 25602 ;;		Unchanged: 3F/0
 25603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25604 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25607 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25608 ;;Total ram usage:        2 bytes
 25609 ;; Hardware stack levels used:    1
 25610 ;; Hardware stack levels required when called:   17
 25611 ;; This function calls:
 25612 ;;		Nothing
 25613 ;; This function is called by:
 25614 ;;		_I2C2_Open
 25615 ;;		_I2C2_DO_RX_EMPTY
 25616 ;;		i2_I2C2_DO_RX_EMPTY
 25617 ;;		_I2C2_DO_TX_EMPTY
 25618 ;;		_I2C2_DO_TX
 25619 ;;		_I2C2_DO_ADDRESS_NACK
 25620 ;;		_I2C2_DO_BUS_COLLISION
 25621 ;; This function uses a non-reentrant model
 25622 ;;
 25623                           
 25624                           	psect	text102
 25625  00A7C4                     __ptext102:
 25626                           	opt callstack 0
 25627  00A7C4                     _I2C2_CallbackReturnReset:
 25628                           	opt callstack 0
 25629                           
 25630                           ;Skip over the trampoline to the duplicate function for level 2
 25631  00A7C4  BED3               	btfsc	211,7,c
 25632  00A7C6  EF4D  F054         	goto	i2_I2C2_CallbackReturnReset
 25633  00A7CA                     _I2C2_CallbackReturnReset$intlevel0:
 25634                           	opt callstack 6
 25635                           
 25636                           ; BSR set to: 2
 25637                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 25638                           
 25639                           ;incstack = 0
 25640  00A7CA  0E05               	movlw	5
 25641                           
 25642                           ; BSR set to: 2
 25643  00A7CC  0012               	return		;funcret
 25644  00A7CE                     __end_of_I2C2_CallbackReturnReset:
 25645                           	opt callstack 0
 25646                           
 25647 ;; *************** function _I2C2_CallbackReturnStop *****************
 25648 ;; Defined at:
 25649 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 25650 ;; Parameters:    Size  Location     Type
 25651 ;;  funPtr          2   96[BANK1 ] PTR void 
 25652 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25653 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25654 ;; Auto vars:     Size  Location     Type
 25655 ;;		None
 25656 ;; Return value:  Size  Location     Type
 25657 ;;                  1    wreg      enum E358
 25658 ;; Registers used:
 25659 ;;		wreg
 25660 ;; Tracked objects:
 25661 ;;		On entry : 3C/2
 25662 ;;		On exit  : 3C/0
 25663 ;;		Unchanged: 3C/0
 25664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25665 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25668 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25669 ;;Total ram usage:        2 bytes
 25670 ;; Hardware stack levels used:    1
 25671 ;; Hardware stack levels required when called:   17
 25672 ;; This function calls:
 25673 ;;		Nothing
 25674 ;; This function is called by:
 25675 ;;		_I2C2_Open
 25676 ;;		_I2C2_SetCallback
 25677 ;;		_I2C2_NackCb
 25678 ;;		_I2C2_DO_RX_EMPTY
 25679 ;;		i2_I2C2_DO_RX_EMPTY
 25680 ;;		_I2C2_DO_TX_EMPTY
 25681 ;;		_I2C2_DO_TX
 25682 ;;		_I2C2_DO_ADDRESS_NACK
 25683 ;;		_I2C2_DO_BUS_COLLISION
 25684 ;; This function uses a non-reentrant model
 25685 ;;
 25686                           
 25687                           	psect	text103
 25688  00A7CE                     __ptext103:
 25689                           	opt callstack 0
 25690  00A7CE                     _I2C2_CallbackReturnStop:
 25691                           	opt callstack 0
 25692                           
 25693                           ; BSR set to: 2
 25694                           ;Skip over the trampoline to the duplicate function for level 2
 25695  00A7CE  BED3               	btfsc	211,7,c
 25696  00A7D0  EF4F  F054         	goto	i2_I2C2_CallbackReturnStop
 25697  00A7D4                     _I2C2_CallbackReturnStop$intlevel0:
 25698                           	opt callstack 5
 25699                           
 25700                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 25701                           
 25702                           ;incstack = 0
 25703  00A7D4  0E01               	movlw	1
 25704  00A7D6  0012               	return		;funcret
 25705  00A7D8                     __end_of_I2C2_CallbackReturnStop:
 25706                           	opt callstack 0
 25707                           
 25708 ;; *************** function _rdBlkRegCompleteHandler *****************
 25709 ;; Defined at:
 25710 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25711 ;; Parameters:    Size  Location     Type
 25712 ;;  ptr             2   96[BANK1 ] PTR void 
 25713 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25714 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25715 ;; Auto vars:     Size  Location     Type
 25716 ;;		None
 25717 ;; Return value:  Size  Location     Type
 25718 ;;                  1    wreg      enum E358
 25719 ;; Registers used:
 25720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25721 ;; Tracked objects:
 25722 ;;		On entry : 3F/2
 25723 ;;		On exit  : 3F/0
 25724 ;;		Unchanged: 0/0
 25725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25726 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25729 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25730 ;;Total ram usage:        2 bytes
 25731 ;; Hardware stack levels used:    1
 25732 ;; Hardware stack levels required when called:   19
 25733 ;; This function calls:
 25734 ;;		_I2C2_SetBuffer
 25735 ;;		_I2C2_SetDataCompleteCallback
 25736 ;; This function is called by:
 25737 ;;		_I2C2_DO_RX_EMPTY
 25738 ;;		i2_I2C2_DO_RX_EMPTY
 25739 ;;		_I2C2_DO_TX_EMPTY
 25740 ;;		_I2C2_DO_TX
 25741 ;;		_I2C2_DO_ADDRESS_NACK
 25742 ;;		_I2C2_DO_BUS_COLLISION
 25743 ;; This function uses a non-reentrant model
 25744 ;;
 25745                           
 25746                           	psect	text104
 25747  00936A                     __ptext104:
 25748                           	opt callstack 0
 25749  00936A                     _rdBlkRegCompleteHandler:
 25750                           	opt callstack 0
 25751                           
 25752                           ;Skip over the trampoline to the duplicate function for level 2
 25753  00936A  BED3               	btfsc	211,7,c
 25754  00936C  EFAF  F04A         	goto	i2_rdBlkRegCompleteHandler
 25755  009370                     _rdBlkRegCompleteHandler$intlevel0:
 25756                           	opt callstack 4
 25757                           
 25758                           ; BSR set to: 2
 25759                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 25760                           
 25761                           ;incstack = 0
 25762  009370  0101               	movlb	1	; () banked
 25763  009372  EE20 F002          	lfsr	2,2
 25764  009376  5160               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 25765  009378  26D9               	addwf	fsr2l,f,c
 25766  00937A  5161               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 25767  00937C  22DA               	addwfc	fsr2h,f,c
 25768  00937E  006F FF78  F08B    	movff	postinc2,I2C2_SetBuffer@buffer
 25769  009384  006F FF74  F08C    	movff	postdec2,I2C2_SetBuffer@buffer+1
 25770  00938A  0060  F583  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 25771  009390  0060  F587  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 25772  009396  006F FF78  F08D    	movff	postinc2,I2C2_SetBuffer@bufferSize
 25773  00939C  006F FF74  F08E    	movff	postdec2,I2C2_SetBuffer@bufferSize+1
 25774  0093A2  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 25775                           
 25776                           ; BSR set to: 2
 25777                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25778  0093A6  0E00               	movlw	0
 25779  0093A8  0100               	movlb	0	; () banked
 25780  0093AA  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25781  0093AC  0E00               	movlw	0
 25782  0093AE  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25783  0093B0  0E00               	movlw	0
 25784  0093B2  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25785  0093B4  0E00               	movlw	0
 25786  0093B6  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25787  0093B8  ECC1  F051         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25788                           
 25789                           ; BSR set to: 0
 25790                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 25791  0093BC  0E02               	movlw	2
 25792                           
 25793                           ; BSR set to: 0
 25794  0093BE  0012               	return		;funcret
 25795  0093C0                     __end_of_rdBlkRegCompleteHandler:
 25796                           	opt callstack 0
 25797                           
 25798 ;; *************** function _wr1RegCompleteHandler *****************
 25799 ;; Defined at:
 25800 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25801 ;; Parameters:    Size  Location     Type
 25802 ;;  ptr             2   96[BANK1 ] PTR void 
 25803 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25804 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25805 ;; Auto vars:     Size  Location     Type
 25806 ;;		None
 25807 ;; Return value:  Size  Location     Type
 25808 ;;                  1    wreg      enum E358
 25809 ;; Registers used:
 25810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25811 ;; Tracked objects:
 25812 ;;		On entry : 3F/2
 25813 ;;		On exit  : 3F/0
 25814 ;;		Unchanged: 0/0
 25815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25816 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25819 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25820 ;;Total ram usage:        2 bytes
 25821 ;; Hardware stack levels used:    1
 25822 ;; Hardware stack levels required when called:   19
 25823 ;; This function calls:
 25824 ;;		_I2C2_SetBuffer
 25825 ;;		_I2C2_SetDataCompleteCallback
 25826 ;; This function is called by:
 25827 ;;		_I2C2_DO_RX_EMPTY
 25828 ;;		i2_I2C2_DO_RX_EMPTY
 25829 ;;		_I2C2_DO_TX_EMPTY
 25830 ;;		_I2C2_DO_TX
 25831 ;;		_I2C2_DO_ADDRESS_NACK
 25832 ;;		_I2C2_DO_BUS_COLLISION
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836                           	psect	text105
 25837  0099D2                     __ptext105:
 25838                           	opt callstack 0
 25839  0099D2                     _wr1RegCompleteHandler:
 25840                           	opt callstack 0
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;Skip over the trampoline to the duplicate function for level 2
 25844  0099D2  BED3               	btfsc	211,7,c
 25845  0099D4  EF14  F04F         	goto	i2_wr1RegCompleteHandler
 25846  0099D8                     _wr1RegCompleteHandler$intlevel0:
 25847                           	opt callstack 4
 25848                           
 25849                           ; BSR set to: 2
 25850                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 25851                           
 25852                           ;incstack = 0
 25853  0099D8  0060  F580  F08B   	movff	wr1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25854  0099DE  0060  F584  F08C   	movff	wr1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25855  0099E4  0E00               	movlw	0
 25856  0099E6  0100               	movlb	0	; () banked
 25857  0099E8  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25858  0099EA  0E01               	movlw	1
 25859  0099EC  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25860  0099EE  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 25861                           
 25862                           ; BSR set to: 2
 25863                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25864  0099F2  0E00               	movlw	0
 25865  0099F4  0100               	movlb	0	; () banked
 25866  0099F6  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25867  0099F8  0E00               	movlw	0
 25868  0099FA  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25869  0099FC  0E00               	movlw	0
 25870  0099FE  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25871  009A00  0E00               	movlw	0
 25872  009A02  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25873  009A04  ECC1  F051         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25874                           
 25875                           ; BSR set to: 0
 25876                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 25877  009A08  0E04               	movlw	4
 25878                           
 25879                           ; BSR set to: 0
 25880  009A0A  0012               	return		;funcret
 25881  009A0C                     __end_of_wr1RegCompleteHandler:
 25882                           	opt callstack 0
 25883                           
 25884 ;; *************** function _rd2RegCompleteHandler *****************
 25885 ;; Defined at:
 25886 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25887 ;; Parameters:    Size  Location     Type
 25888 ;;  ptr             2   96[BANK1 ] PTR void 
 25889 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25890 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25891 ;; Auto vars:     Size  Location     Type
 25892 ;;		None
 25893 ;; Return value:  Size  Location     Type
 25894 ;;                  1    wreg      enum E358
 25895 ;; Registers used:
 25896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25897 ;; Tracked objects:
 25898 ;;		On entry : 3F/2
 25899 ;;		On exit  : 3F/0
 25900 ;;		Unchanged: 0/0
 25901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25902 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25905 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25906 ;;Total ram usage:        2 bytes
 25907 ;; Hardware stack levels used:    1
 25908 ;; Hardware stack levels required when called:   19
 25909 ;; This function calls:
 25910 ;;		_I2C2_SetBuffer
 25911 ;;		_I2C2_SetDataCompleteCallback
 25912 ;; This function is called by:
 25913 ;;		_I2C2_DO_RX_EMPTY
 25914 ;;		i2_I2C2_DO_RX_EMPTY
 25915 ;;		_I2C2_DO_TX_EMPTY
 25916 ;;		_I2C2_DO_TX
 25917 ;;		_I2C2_DO_ADDRESS_NACK
 25918 ;;		_I2C2_DO_BUS_COLLISION
 25919 ;; This function uses a non-reentrant model
 25920 ;;
 25921                           
 25922                           	psect	text106
 25923  009A0C                     __ptext106:
 25924                           	opt callstack 0
 25925  009A0C                     _rd2RegCompleteHandler:
 25926                           	opt callstack 0
 25927                           
 25928                           ; BSR set to: 0
 25929                           ;Skip over the trampoline to the duplicate function for level 2
 25930  009A0C  BED3               	btfsc	211,7,c
 25931  009A0E  EF2C  F04F         	goto	i2_rd2RegCompleteHandler
 25932  009A12                     _rd2RegCompleteHandler$intlevel0:
 25933                           	opt callstack 4
 25934                           
 25935                           ; BSR set to: 2
 25936                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 25937                           
 25938                           ;incstack = 0
 25939  009A12  0060  F580  F08B   	movff	rd2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25940  009A18  0060  F584  F08C   	movff	rd2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25941  009A1E  0E00               	movlw	0
 25942  009A20  0100               	movlb	0	; () banked
 25943  009A22  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25944  009A24  0E02               	movlw	2
 25945  009A26  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25946  009A28  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 25947                           
 25948                           ; BSR set to: 2
 25949                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25950  009A2C  0E00               	movlw	0
 25951  009A2E  0100               	movlb	0	; () banked
 25952  009A30  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25953  009A32  0E00               	movlw	0
 25954  009A34  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25955  009A36  0E00               	movlw	0
 25956  009A38  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25957  009A3A  0E00               	movlw	0
 25958  009A3C  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25959  009A3E  ECC1  F051         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25960                           
 25961                           ; BSR set to: 0
 25962                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 25963  009A42  0E02               	movlw	2
 25964                           
 25965                           ; BSR set to: 0
 25966  009A44  0012               	return		;funcret
 25967  009A46                     __end_of_rd2RegCompleteHandler:
 25968                           	opt callstack 0
 25969                           
 25970 ;; *************** function _rd1RegCompleteHandler *****************
 25971 ;; Defined at:
 25972 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25973 ;; Parameters:    Size  Location     Type
 25974 ;;  ptr             2   96[BANK1 ] PTR void 
 25975 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25976 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25977 ;; Auto vars:     Size  Location     Type
 25978 ;;		None
 25979 ;; Return value:  Size  Location     Type
 25980 ;;                  1    wreg      enum E358
 25981 ;; Registers used:
 25982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25983 ;; Tracked objects:
 25984 ;;		On entry : 3F/2
 25985 ;;		On exit  : 3F/0
 25986 ;;		Unchanged: 0/0
 25987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25988 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25991 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25992 ;;Total ram usage:        2 bytes
 25993 ;; Hardware stack levels used:    1
 25994 ;; Hardware stack levels required when called:   19
 25995 ;; This function calls:
 25996 ;;		_I2C2_SetBuffer
 25997 ;;		_I2C2_SetDataCompleteCallback
 25998 ;; This function is called by:
 25999 ;;		_I2C2_DO_RX_EMPTY
 26000 ;;		i2_I2C2_DO_RX_EMPTY
 26001 ;;		_I2C2_DO_TX_EMPTY
 26002 ;;		_I2C2_DO_TX
 26003 ;;		_I2C2_DO_ADDRESS_NACK
 26004 ;;		_I2C2_DO_BUS_COLLISION
 26005 ;; This function uses a non-reentrant model
 26006 ;;
 26007                           
 26008                           	psect	text107
 26009  009A46                     __ptext107:
 26010                           	opt callstack 0
 26011  009A46                     _rd1RegCompleteHandler:
 26012                           	opt callstack 0
 26013                           
 26014                           ; BSR set to: 0
 26015                           ;Skip over the trampoline to the duplicate function for level 2
 26016  009A46  BED3               	btfsc	211,7,c
 26017  009A48  EF44  F04F         	goto	i2_rd1RegCompleteHandler
 26018  009A4C                     _rd1RegCompleteHandler$intlevel0:
 26019                           	opt callstack 4
 26020                           
 26021                           ; BSR set to: 2
 26022                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 26023                           
 26024                           ;incstack = 0
 26025  009A4C  0060  F580  F08B   	movff	rd1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 26026  009A52  0060  F584  F08C   	movff	rd1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 26027  009A58  0E00               	movlw	0
 26028  009A5A  0100               	movlb	0	; () banked
 26029  009A5C  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 26030  009A5E  0E01               	movlw	1
 26031  009A60  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 26032  009A62  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 26033                           
 26034                           ; BSR set to: 2
 26035                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26036  009A66  0E00               	movlw	0
 26037  009A68  0100               	movlb	0	; () banked
 26038  009A6A  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 26039  009A6C  0E00               	movlw	0
 26040  009A6E  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 26041  009A70  0E00               	movlw	0
 26042  009A72  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 26043  009A74  0E00               	movlw	0
 26044  009A76  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 26045  009A78  ECC1  F051         	call	_I2C2_SetDataCompleteCallback	;wreg free
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 26049  009A7C  0E02               	movlw	2
 26050                           
 26051                           ; BSR set to: 0
 26052  009A7E  0012               	return		;funcret
 26053  009A80                     __end_of_rd1RegCompleteHandler:
 26054                           	opt callstack 0
 26055                           
 26056 ;; *************** function _wr2RegCompleteHandler *****************
 26057 ;; Defined at:
 26058 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 26059 ;; Parameters:    Size  Location     Type
 26060 ;;  ptr             2   96[BANK1 ] PTR void 
 26061 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26062 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26063 ;; Auto vars:     Size  Location     Type
 26064 ;;		None
 26065 ;; Return value:  Size  Location     Type
 26066 ;;                  1    wreg      enum E358
 26067 ;; Registers used:
 26068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26069 ;; Tracked objects:
 26070 ;;		On entry : 3F/2
 26071 ;;		On exit  : 3F/0
 26072 ;;		Unchanged: 0/0
 26073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26074 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26077 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26078 ;;Total ram usage:        2 bytes
 26079 ;; Hardware stack levels used:    1
 26080 ;; Hardware stack levels required when called:   19
 26081 ;; This function calls:
 26082 ;;		_I2C2_SetBuffer
 26083 ;;		_I2C2_SetDataCompleteCallback
 26084 ;; This function is called by:
 26085 ;;		_I2C2_DO_RX_EMPTY
 26086 ;;		i2_I2C2_DO_RX_EMPTY
 26087 ;;		_I2C2_DO_TX_EMPTY
 26088 ;;		_I2C2_DO_TX
 26089 ;;		_I2C2_DO_ADDRESS_NACK
 26090 ;;		_I2C2_DO_BUS_COLLISION
 26091 ;; This function uses a non-reentrant model
 26092 ;;
 26093                           
 26094                           	psect	text108
 26095  009A80                     __ptext108:
 26096                           	opt callstack 0
 26097  009A80                     _wr2RegCompleteHandler:
 26098                           	opt callstack 0
 26099                           
 26100                           ; BSR set to: 0
 26101                           ;Skip over the trampoline to the duplicate function for level 2
 26102  009A80  BED3               	btfsc	211,7,c
 26103  009A82  EF5C  F04F         	goto	i2_wr2RegCompleteHandler
 26104  009A86                     _wr2RegCompleteHandler$intlevel0:
 26105                           	opt callstack 4
 26106                           
 26107                           ; BSR set to: 2
 26108                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 26109                           
 26110                           ;incstack = 0
 26111  009A86  0060  F580  F08B   	movff	wr2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 26112  009A8C  0060  F584  F08C   	movff	wr2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 26113  009A92  0E00               	movlw	0
 26114  009A94  0100               	movlb	0	; () banked
 26115  009A96  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 26116  009A98  0E02               	movlw	2
 26117  009A9A  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 26118  009A9C  EC3A  F051         	call	_I2C2_SetBuffer	;wreg free
 26119                           
 26120                           ; BSR set to: 2
 26121                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 26122  009AA0  0E00               	movlw	0
 26123  009AA2  0100               	movlb	0	; () banked
 26124  009AA4  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 26125  009AA6  0E00               	movlw	0
 26126  009AA8  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 26127  009AAA  0E00               	movlw	0
 26128  009AAC  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 26129  009AAE  0E00               	movlw	0
 26130  009AB0  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 26131  009AB2  ECC1  F051         	call	_I2C2_SetDataCompleteCallback	;wreg free
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 26135  009AB6  0E04               	movlw	4
 26136                           
 26137                           ; BSR set to: 0
 26138  009AB8  0012               	return		;funcret
 26139  009ABA                     __end_of_wr2RegCompleteHandler:
 26140                           	opt callstack 0
 26141                           
 26142 ;; *************** function _I2C2_SetDataCompleteCallback *****************
 26143 ;; Defined at:
 26144 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 26147 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 26148 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 26149 ;;  ptr             2   50[BANK0 ] PTR void 
 26150 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 26151 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 26152 ;; Auto vars:     Size  Location     Type
 26153 ;;		None
 26154 ;; Return value:  Size  Location     Type
 26155 ;;                  1    wreg      void 
 26156 ;; Registers used:
 26157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26158 ;; Tracked objects:
 26159 ;;		On entry : 3F/0
 26160 ;;		On exit  : 3F/0
 26161 ;;		Unchanged: 0/0
 26162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26167 ;;Total ram usage:        4 bytes
 26168 ;; Hardware stack levels used:    1
 26169 ;; Hardware stack levels required when called:   18
 26170 ;; This function calls:
 26171 ;;		_I2C2_SetCallback
 26172 ;; This function is called by:
 26173 ;;		_rd1RegCompleteHandler
 26174 ;;		_rd2RegCompleteHandler
 26175 ;;		_wr1RegCompleteHandler
 26176 ;;		_wr2RegCompleteHandler
 26177 ;;		_rdBlkRegCompleteHandler
 26178 ;; This function uses a non-reentrant model
 26179 ;;
 26180                           
 26181                           	psect	text109
 26182  00A382                     __ptext109:
 26183                           	opt callstack 0
 26184  00A382                     _I2C2_SetDataCompleteCallback:
 26185                           	opt callstack 4
 26186                           
 26187                           ; BSR set to: 0
 26188                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 26189                           
 26190                           ; BSR set to: 0
 26191                           ;incstack = 0
 26192  00A382  0060  F240  F08B   	movff	I2C2_SetDataCompleteCallback@cb,I2C2_SetCallback@cb
 26193  00A388  0060  F244  F08C   	movff	I2C2_SetDataCompleteCallback@cb+1,I2C2_SetCallback@cb+1
 26194  00A38E  0060  F248  F08D   	movff	I2C2_SetDataCompleteCallback@ptr,I2C2_SetCallback@ptr
 26195  00A394  0060  F24C  F08E   	movff	I2C2_SetDataCompleteCallback@ptr+1,I2C2_SetCallback@ptr+1
 26196  00A39A  0E00               	movlw	0
 26197  00A39C  ECD7  F045         	call	_I2C2_SetCallback
 26198                           
 26199                           ; BSR set to: 0
 26200  00A3A0  0012               	return		;funcret
 26201  00A3A2                     __end_of_I2C2_SetDataCompleteCallback:
 26202                           	opt callstack 0
 26203                           
 26204 ;; *************** function _I2C2_SetBuffer *****************
 26205 ;; Defined at:
 26206 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 26207 ;; Parameters:    Size  Location     Type
 26208 ;;  buffer          2   43[BANK0 ] PTR void 
 26209 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 26210 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 26211 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 26212 ;;  bufferSize      2   45[BANK0 ] unsigned int 
 26213 ;; Auto vars:     Size  Location     Type
 26214 ;;		None
 26215 ;; Return value:  Size  Location     Type
 26216 ;;                  1    wreg      void 
 26217 ;; Registers used:
 26218 ;;		wreg, status,2, status,0
 26219 ;; Tracked objects:
 26220 ;;		On entry : 3E/0
 26221 ;;		On exit  : 3F/2
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26227 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26228 ;;Total ram usage:        4 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:   17
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_rd1RegCompleteHandler
 26235 ;;		_rd2RegCompleteHandler
 26236 ;;		_wr1RegCompleteHandler
 26237 ;;		_wr2RegCompleteHandler
 26238 ;;		_rdBlkRegCompleteHandler
 26239 ;;		_MonitorMsgForcedSend
 26240 ;; This function uses a non-reentrant model
 26241 ;;
 26242                           
 26243                           	psect	text110
 26244  00A274                     __ptext110:
 26245                           	opt callstack 0
 26246  00A274                     _I2C2_SetBuffer:
 26247                           	opt callstack 9
 26248                           
 26249                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;incstack = 0
 26253  00A274  0102               	movlb	2	; () banked
 26254  00A276  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 26255  00A278  0012               	return	
 26256                           
 26257                           ; BSR set to: 2
 26258                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 26259  00A27A  0060  F22C  F21D   	movff	I2C2_SetBuffer@buffer,_I2C2_Status+29
 26260  00A280  0060  F230  F21E   	movff	I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 26261                           
 26262                           ; BSR set to: 2
 26263                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 26264  00A286  0060  F234  F21F   	movff	I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 26265  00A28C  0060  F238  F220   	movff	I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 26266                           
 26267                           ; BSR set to: 2
 26268                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 26269  00A292  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 26270                           
 26271                           ; BSR set to: 2
 26272  00A294  0012               	return		;funcret
 26273  00A296                     __end_of_I2C2_SetBuffer:
 26274                           	opt callstack 0
 26275                           
 26276 ;; *************** function _printf *****************
 26277 ;; Defined at:
 26278 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 26279 ;; Parameters:    Size  Location     Type
 26280 ;;  fmt             2   70[BANK1 ] PTR const unsigned char 
 26281 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 26282 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 26283 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 26284 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 26285 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 26286 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 26287 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(42), 
 26288 ;;		 -> STR_26(20), STR_25(36), STR_24(47), STR_23(20), 
 26289 ;;		 -> STR_22(34), STR_21(5), STR_19(16), STR_18(14), 
 26290 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 26291 ;;		 -> STR_13(47), STR_12(12), STR_11(12), STR_10(55), 
 26292 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 26293 ;; Auto vars:     Size  Location     Type
 26294 ;;  ap              2   94[BANK1 ] PTR void [1]
 26295 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26296 ;;  ret             2    0        int 
 26297 ;; Return value:  Size  Location     Type
 26298 ;;                  2   70[BANK1 ] int 
 26299 ;; Registers used:
 26300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26301 ;; Tracked objects:
 26302 ;;		On entry : 3E/0
 26303 ;;		On exit  : 3F/2
 26304 ;;		Unchanged: 0/0
 26305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26306 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26307 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26309 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26310 ;;Total ram usage:       26 bytes
 26311 ;; Hardware stack levels used:    1
 26312 ;; Hardware stack levels required when called:   25
 26313 ;; This function calls:
 26314 ;;		_vfprintf
 26315 ;; This function is called by:
 26316 ;;		_inspOSMeasure
 26317 ;;		_CtrlPowerOff
 26318 ;;		_main
 26319 ;;		_adcGetCh
 26320 ;;		_aCaptureOffSet
 26321 ;;		_aCaptureOffGet
 26322 ;;		_aCaptRstFlt
 26323 ;;		_aCaptGetResult
 26324 ;;		_MenuMng
 26325 ;;		_I2C2_NackCb
 26326 ;;		_pressureSensorChk
 26327 ;;		_flowChk
 26328 ;;		_SelfTest
 26329 ;; This function uses a non-reentrant model
 26330 ;;
 26331                           
 26332                           	psect	text111
 26333  00A086                     __ptext111:
 26334                           	opt callstack 0
 26335  00A086                     _printf:
 26336                           	opt callstack 5
 26337                           
 26338                           ; BSR set to: 2
 26339                           ;incstack = 0
 26340  00A086  0E48               	movlw	low (?_printf+2)
 26341  00A088  0101               	movlb	1	; () banked
 26342  00A08A  6F5E               	movwf	printf@ap& (0+255),b
 26343  00A08C  0E01               	movlw	high (?_printf+2)
 26344  00A08E  6F5F               	movwf	(printf@ap+1)& (0+255),b
 26345                           
 26346                           ; BSR set to: 1
 26347  00A090  0E00               	movlw	0
 26348  00A092  6F40               	movwf	vfprintf@fp& (0+255),b
 26349  00A094  0E00               	movlw	0
 26350  00A096  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 26351  00A098  0060  F518  F142   	movff	printf@fmt,vfprintf@fmt
 26352  00A09E  0060  F51C  F143   	movff	printf@fmt+1,vfprintf@fmt+1
 26353  00A0A4  0E5E               	movlw	low printf@ap
 26354  00A0A6  6F44               	movwf	vfprintf@ap& (0+255),b
 26355  00A0A8  0E01               	movlw	high printf@ap
 26356  00A0AA  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 26357  00A0AC  ECBD  F046         	call	_vfprintf	;wreg free
 26358                           
 26359                           ; BSR set to: 2
 26360  00A0B0  0012               	return		;funcret
 26361  00A0B2                     __end_of_printf:
 26362                           	opt callstack 0
 26363                           
 26364 ;; *************** function _vfprintf *****************
 26365 ;; Defined at:
 26366 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 26367 ;; Parameters:    Size  Location     Type
 26368 ;;  fp              2   64[BANK1 ] PTR struct _IO_FILE
 26369 ;;		 -> sprintf@f(6), NULL(0), 
 26370 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 26371 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 26372 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 26373 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 26374 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 26375 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 26376 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 26377 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 26378 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 26379 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 26380 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 26381 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 26382 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 26383 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 26384 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 26385 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 26386 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 26387 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 26388 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 26389 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 26390 ;;		 -> STR_1(27), 
 26391 ;;  ap              2   68[BANK1 ] PTR PTR void 
 26392 ;;		 -> printf@ap(2), sprintf@ap(2), 
 26393 ;; Auto vars:     Size  Location     Type
 26394 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
 26395 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 26396 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 26397 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 26398 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 26399 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 26400 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 26401 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 26402 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 26403 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 26404 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 26405 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 26406 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 26407 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 26408 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 26409 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 26410 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 26411 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 26412 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 26413 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 26414 ;;		 -> STR_1(27), 
 26415 ;; Return value:  Size  Location     Type
 26416 ;;                  2   64[BANK1 ] int 
 26417 ;; Registers used:
 26418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26419 ;; Tracked objects:
 26420 ;;		On entry : 3F/1
 26421 ;;		On exit  : 3F/2
 26422 ;;		Unchanged: 0/0
 26423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26424 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26427 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26428 ;;Total ram usage:        8 bytes
 26429 ;; Hardware stack levels used:    1
 26430 ;; Hardware stack levels required when called:   24
 26431 ;; This function calls:
 26432 ;;		_vfpfcnvrt
 26433 ;; This function is called by:
 26434 ;;		_sprintf
 26435 ;;		_printf
 26436 ;; This function uses a non-reentrant model
 26437 ;;
 26438                           
 26439                           	psect	text112
 26440  008D7A                     __ptext112:
 26441                           	opt callstack 0
 26442  008D7A                     _vfprintf:
 26443                           	opt callstack 5
 26444                           
 26445                           ; BSR set to: 1
 26446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 26447                           
 26448                           ; BSR set to: 2
 26449                           ;incstack = 0
 26450  008D7A  0060  F508  F0AD   	movff	vfprintf@fmt,vfprintf@cfmt
 26451  008D80  0060  F50C  F0AE   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 26452                           
 26453                           ; BSR set to: 1
 26454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 26455  008D86  0E00               	movlw	0
 26456  008D88  0102               	movlb	2	; () banked
 26457  008D8A  6F33               	movwf	(_nout+1)& (0+255),b
 26458  008D8C  0E00               	movlw	0
 26459  008D8E  6F32               	movwf	_nout& (0+255),b
 26460                           
 26461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 26462  008D90  D018               	goto	l17041
 26463  008D92                     l17039:
 26464                           
 26465                           ; BSR set to: 2
 26466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 26467  008D92  0060  F500  F0A8   	movff	vfprintf@fp,vfpfcnvrt@fp
 26468  008D98  0060  F504  F0A9   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 26469  008D9E  0EAD               	movlw	low vfprintf@cfmt
 26470  008DA0  0100               	movlb	0	; () banked
 26471  008DA2  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
 26472  008DA4  0060  F510  F0AB   	movff	vfprintf@ap,vfpfcnvrt@ap
 26473  008DAA  0060  F514  F0AC   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 26474  008DB0  EC09  F024         	call	_vfpfcnvrt	;wreg free
 26475  008DB4  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
 26476  008DB6  0102               	movlb	2	; () banked
 26477  008DB8  2732               	addwf	_nout& (0+255),f,b
 26478  008DBA  0100               	movlb	0	; () banked
 26479  008DBC  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 26480  008DBE  0102               	movlb	2	; () banked
 26481  008DC0  2333               	addwfc	(_nout+1)& (0+255),f,b
 26482  008DC2                     l17041:
 26483                           
 26484                           ; BSR set to: 2
 26485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 26486  008DC2  0060  F2B7  FFF6   	movff	vfprintf@cfmt,tblptrl
 26487  008DC8  0060  F2BB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 26488  008DCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26489  008DCE  6AF8               	clrf	tblptru,c
 26490  008DD0                     	endif
 26491  008DD0                     	if	0	;tblptru may be non-zero
 26492  008DD0                     	endif
 26493  008DD0  0008               	tblrd		*
 26494  008DD2  50F5               	movf	tablat,w,c
 26495  008DD4  0900               	iorlw	0
 26496  008DD6  A4D8               	btfss	status,2,c
 26497  008DD8  D7DC               	goto	l17039
 26498                           
 26499                           ; BSR set to: 2
 26500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 26501  008DDA  0060  F8C8  F140   	movff	_nout,?_vfprintf
 26502  008DE0  0060  F8CC  F141   	movff	_nout+1,?_vfprintf+1
 26503                           
 26504                           ; BSR set to: 2
 26505  008DE6  0012               	return		;funcret
 26506  008DE8                     __end_of_vfprintf:
 26507                           	opt callstack 0
 26508                           
 26509 ;; *************** function _vfpfcnvrt *****************
 26510 ;; Defined at:
 26511 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 26512 ;; Parameters:    Size  Location     Type
 26513 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
 26514 ;;		 -> sprintf@f(6), NULL(0), 
 26515 ;;  fmt             1   74[BANK0 ] PTR PTR unsigned char 
 26516 ;;		 -> vfprintf@cfmt(2), 
 26517 ;;  ap              2   75[BANK0 ] PTR PTR void 
 26518 ;;		 -> printf@ap(2), sprintf@ap(2), 
 26519 ;; Auto vars:     Size  Location     Type
 26520 ;;  llu             8   51[BANK1 ] unsigned long long 
 26521 ;;  ll              8   43[BANK1 ] long long 
 26522 ;;  f               4    0        long long 
 26523 ;;  vp              3    0        PTR void 
 26524 ;;  ct              3    0        unsigned char [3]
 26525 ;;  cp              3    0        PTR unsigned char 
 26526 ;;  done            2   60[BANK1 ] int 
 26527 ;;  i               2    0        int 
 26528 ;;  c               1   59[BANK1 ] unsigned char 
 26529 ;; Return value:  Size  Location     Type
 26530 ;;                  2   72[BANK0 ] int 
 26531 ;; Registers used:
 26532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26533 ;; Tracked objects:
 26534 ;;		On entry : 3F/0
 26535 ;;		On exit  : 3F/0
 26536 ;;		Unchanged: 0/0
 26537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26538 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26539 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26540 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26541 ;;      Totals:         0       5      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26542 ;;Total ram usage:       30 bytes
 26543 ;; Hardware stack levels used:    1
 26544 ;; Hardware stack levels required when called:   23
 26545 ;; This function calls:
 26546 ;;		_atoi
 26547 ;;		_dtoa
 26548 ;;		_fputc
 26549 ;;		_isdigit
 26550 ;;		_xtoa
 26551 ;; This function is called by:
 26552 ;;		_vfprintf
 26553 ;; This function uses a non-reentrant model
 26554 ;;
 26555                           
 26556                           	psect	text113
 26557  004812                     __ptext113:
 26558                           	opt callstack 0
 26559  004812                     _vfpfcnvrt:
 26560                           	opt callstack 5
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 26564                           
 26565                           ; BSR set to: 2
 26566                           ;incstack = 0
 26567  004812  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26568  004814  6ED9               	movwf	fsr2l,c
 26569  004816  6ADA               	clrf	fsr2h,c
 26570  004818  006F FF7B FFF6     	movff	postinc2,tblptrl
 26571  00481E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26572  004824                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26573  004824  6AF8               	clrf	tblptru,c
 26574  004826                     	endif
 26575  004826                     	if	0	;tblptru may be non-zero
 26576  004826                     	endif
 26577  004826  0008               	tblrd		*
 26578  004828  50F5               	movf	tablat,w,c
 26579  00482A  0A25               	xorlw	37
 26580  00482C  A4D8               	btfss	status,2,c
 26581  00482E  D1FF               	goto	l16845
 26582                           
 26583                           ; BSR set to: 0
 26584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 26585  004830  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26586  004832  6ED9               	movwf	fsr2l,c
 26587  004834  6ADA               	clrf	fsr2h,c
 26588  004836  2ADE               	incf	postinc2,f,c
 26589  004838  0E00               	movlw	0
 26590  00483A  22DD               	addwfc	postdec2,f,c
 26591                           
 26592                           ; BSR set to: 0
 26593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 26594  00483C  0E00               	movlw	0
 26595  00483E  6FB3               	movwf	(_width+1)& (0+255),b
 26596  004840  0E00               	movlw	0
 26597  004842  6FB2               	movwf	_width& (0+255),b
 26598  004844  C0B2  F0B6         	movff	_width,_flags
 26599  004848  C0B3  F0B7         	movff	_width+1,_flags+1
 26600                           
 26601                           ; BSR set to: 0
 26602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 26603  00484C  69B4               	setf	_prec& (0+255),b
 26604  00484E  69B5               	setf	(_prec+1)& (0+255),b
 26605                           
 26606                           ; BSR set to: 0
 26607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 26608  004850  0E00               	movlw	0
 26609  004852  0101               	movlb	1	; () banked
 26610  004854  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26611  004856  0E00               	movlw	0
 26612  004858  D018               	goto	L51
 26613  00485A                     l16757:
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 26617  00485A  0100               	movlb	0	; () banked
 26618  00485C  81B6               	bsf	_flags& (0+255),0,b
 26619  00485E                     l16759:
 26620                           
 26621                           ; BSR set to: 0
 26622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 26623  00485E  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26624  004860  6ED9               	movwf	fsr2l,c
 26625  004862  6ADA               	clrf	fsr2h,c
 26626  004864  2ADE               	incf	postinc2,f,c
 26627  004866  0E00               	movlw	0
 26628  004868  22DD               	addwfc	postdec2,f,c
 26629                           
 26630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 26631  00486A  D036               	goto	l16783
 26632  00486C                     l16761:
 26633                           
 26634                           ; BSR set to: 1
 26635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 26636  00486C  0100               	movlb	0	; () banked
 26637  00486E  83B6               	bsf	_flags& (0+255),1,b
 26638  004870  D7F6               	goto	l16759
 26639  004872                     l16765:
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 26643  004872  0100               	movlb	0	; () banked
 26644  004874  85B6               	bsf	_flags& (0+255),2,b
 26645  004876  D7F3               	goto	l16759
 26646  004878                     l16769:
 26647                           
 26648                           ; BSR set to: 1
 26649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 26650  004878  0100               	movlb	0	; () banked
 26651  00487A  87B6               	bsf	_flags& (0+255),3,b
 26652  00487C  D7F0               	goto	l16759
 26653  00487E                     l16773:
 26654                           
 26655                           ; BSR set to: 1
 26656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 26657  00487E  0100               	movlb	0	; () banked
 26658  004880  89B6               	bsf	_flags& (0+255),4,b
 26659  004882  D7ED               	goto	l16759
 26660  004884                     l16777:
 26661                           
 26662                           ; BSR set to: 1
 26663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 26664  004884  0E00               	movlw	0
 26665  004886  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26666  004888  0E01               	movlw	1
 26667  00488A                     L51:
 26668  00488A  6F3C               	movwf	vfpfcnvrt@done& (0+255),b
 26669                           
 26670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 26671  00488C  D025               	goto	l16783
 26672  00488E                     l16781:
 26673                           
 26674                           ; BSR set to: 1
 26675  00488E  0100               	movlb	0	; () banked
 26676  004890  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26677  004892  6ED9               	movwf	fsr2l,c
 26678  004894  6ADA               	clrf	fsr2h,c
 26679  004896  006F FF7B FFF6     	movff	postinc2,tblptrl
 26680  00489C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26681  0048A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26682  0048A2  6AF8               	clrf	tblptru,c
 26683  0048A4                     	endif
 26684  0048A4                     	if	0	;tblptru may be non-zero
 26685  0048A4                     	endif
 26686  0048A4  0008               	tblrd		*
 26687  0048A6  50F5               	movf	tablat,w,c
 26688  0048A8  0101               	movlb	1	; () banked
 26689  0048AA  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26690  0048AC  6B28               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 26691                           
 26692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26693                           ; Switch size 1, requested type "simple"
 26694                           ; Number of cases is 1, Range of values is 0 to 0
 26695                           ; switch strategies available:
 26696                           ; Name         Instructions Cycles
 26697                           ; simple_byte            4     3 (average)
 26698                           ;	Chosen strategy is simple_byte
 26699  0048AE  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26700  0048B0  0A00               	xorlw	0	; case 0
 26701  0048B2  A4D8               	btfss	status,2,c
 26702  0048B4  D7E7               	goto	l16777
 26703                           
 26704                           ; BSR set to: 1
 26705                           ; Switch size 1, requested type "simple"
 26706                           ; Number of cases is 5, Range of values is 32 to 48
 26707                           ; switch strategies available:
 26708                           ; Name         Instructions Cycles
 26709                           ; simple_byte           16     9 (average)
 26710                           ;	Chosen strategy is simple_byte
 26711  0048B6  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26712  0048B8  0A20               	xorlw	32	; case 32
 26713  0048BA  B4D8               	btfsc	status,2,c
 26714  0048BC  D7DD               	goto	l16769
 26715  0048BE  0A03               	xorlw	3	; case 35
 26716  0048C0  B4D8               	btfsc	status,2,c
 26717  0048C2  D7DD               	goto	l16773
 26718  0048C4  0A08               	xorlw	8	; case 43
 26719  0048C6  B4D8               	btfsc	status,2,c
 26720  0048C8  D7D4               	goto	l16765
 26721  0048CA  0A06               	xorlw	6	; case 45
 26722  0048CC  B4D8               	btfsc	status,2,c
 26723  0048CE  D7C5               	goto	l16757
 26724  0048D0  0A1D               	xorlw	29	; case 48
 26725  0048D2  B4D8               	btfsc	status,2,c
 26726  0048D4  D7CB               	goto	l16761
 26727  0048D6  D7D6               	goto	l16777
 26728  0048D8                     l16783:
 26729                           
 26730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 26731  0048D8  0101               	movlb	1	; () banked
 26732  0048DA  513C               	movf	vfpfcnvrt@done& (0+255),w,b
 26733  0048DC  113D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 26734  0048DE  B4D8               	btfsc	status,2,c
 26735  0048E0  D7D6               	goto	l16781
 26736                           
 26737                           ; BSR set to: 1
 26738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 26739  0048E2  0100               	movlb	0	; () banked
 26740  0048E4  B1B6               	btfsc	_flags& (0+255),0,b
 26741                           
 26742                           ; BSR set to: 0
 26743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 26744  0048E6  93B6               	bcf	_flags& (0+255),1,b
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 26748  0048E8  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26749  0048EA  6ED9               	movwf	fsr2l,c
 26750  0048EC  6ADA               	clrf	fsr2h,c
 26751  0048EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 26752  0048F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 26753  0048FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26754  0048FA  6AF8               	clrf	tblptru,c
 26755  0048FC                     	endif
 26756  0048FC                     	if	0	;tblptru may be non-zero
 26757  0048FC                     	endif
 26758  0048FC  0008               	tblrd		*
 26759  0048FE  50F5               	movf	tablat,w,c
 26760  004900  0A2A               	xorlw	42
 26761  004902  A4D8               	btfss	status,2,c
 26762  004904  D02A               	goto	l16795
 26763                           
 26764                           ; BSR set to: 0
 26765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 26766  004906  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26767  004908  6ED9               	movwf	fsr2l,c
 26768  00490A  6ADA               	clrf	fsr2h,c
 26769  00490C  2ADE               	incf	postinc2,f,c
 26770  00490E  0E00               	movlw	0
 26771  004910  22DD               	addwfc	postdec2,f,c
 26772                           
 26773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 26774  004912  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26775  004918  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26776  00491E  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26777  004924  0E02               	movlw	2
 26778  004926  26DE               	addwf	postinc2,f,c
 26779  004928  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26780  00492E  0E00               	movlw	0
 26781  004930  22DD               	addwfc	postdec2,f,c
 26782  004932  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26783  004938  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26784  00493E  006F FF78  F0B2    	movff	postinc2,_width
 26785  004944  006F FF74  F0B3    	movff	postdec2,_width+1
 26786                           
 26787                           ; BSR set to: 0
 26788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 26789  00494A  AFB3               	btfss	(_width+1)& (0+255),7,b
 26790  00494C  D047               	goto	u17230
 26791                           
 26792                           ; BSR set to: 0
 26793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 26794  00494E  81B6               	bsf	_flags& (0+255),0,b
 26795                           
 26796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 26797  004950  6DB2               	negf	_width& (0+255),b
 26798  004952  1FB3               	comf	(_width+1)& (0+255),f,b
 26799  004954  B0D8               	btfsc	status,0,c
 26800  004956  2BB3               	incf	(_width+1)& (0+255),f,b
 26801  004958  D041               	goto	u17230
 26802  00495A                     l16795:
 26803                           
 26804                           ; BSR set to: 0
 26805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 26806  00495A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26807  00495C  6ED9               	movwf	fsr2l,c
 26808  00495E  6ADA               	clrf	fsr2h,c
 26809  004960  006F FF78  F0A1    	movff	postinc2,atoi@s
 26810  004966  006F FF74  F0A2    	movff	postdec2,atoi@s+1
 26811  00496C  ECF4  F037         	call	_atoi	;wreg free
 26812  004970  0060  F284  F0B2   	movff	?_atoi,_width
 26813  004976  0060  F288  F0B3   	movff	?_atoi+1,_width+1
 26814                           
 26815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26816  00497C  D007               	goto	l16799
 26817  00497E                     l16797:
 26818                           
 26819                           ; BSR set to: 1
 26820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 26821  00497E  0100               	movlb	0	; () banked
 26822  004980  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26823  004982  6ED9               	movwf	fsr2l,c
 26824  004984  6ADA               	clrf	fsr2h,c
 26825  004986  2ADE               	incf	postinc2,f,c
 26826  004988  0E00               	movlw	0
 26827  00498A  22DD               	addwfc	postdec2,f,c
 26828  00498C                     l16799:
 26829  00498C  0ED0               	movlw	208
 26830  00498E  0101               	movlb	1	; () banked
 26831  004990  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26832  004992  0EFF               	movlw	255
 26833  004994  6F28               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 26834  004996  0100               	movlb	0	; () banked
 26835  004998  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26836  00499A  6ED9               	movwf	fsr2l,c
 26837  00499C  6ADA               	clrf	fsr2h,c
 26838  00499E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26839  0049A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 26840  0049AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26841  0049AA  6AF8               	clrf	tblptru,c
 26842  0049AC                     	endif
 26843  0049AC                     	if	0	;tblptru may be non-zero
 26844  0049AC                     	endif
 26845  0049AC  0008               	tblrd		*
 26846  0049AE  50F5               	movf	tablat,w,c
 26847  0049B0  0101               	movlb	1	; () banked
 26848  0049B2  6F29               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 26849  0049B4  6B2A               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 26850  0049B6  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26851  0049B8  2729               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 26852  0049BA  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26853  0049BC  232A               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 26854  0049BE  512A               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 26855  0049C0  E106               	bnz	u17210
 26856  0049C2  0E0A               	movlw	10
 26857  0049C4  5D29               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 26858  0049C6  B0D8               	btfsc	status,0,c
 26859  0049C8  D002               	goto	u17210
 26860  0049CA  0E01               	movlw	1
 26861  0049CC  D001               	goto	u17220
 26862  0049CE                     u17210:
 26863  0049CE  0E00               	movlw	0
 26864  0049D0                     u17220:
 26865  0049D0  6F3E               	movwf	_vfpfcnvrt$4925& (0+255),b
 26866  0049D2  6B3F               	clrf	(_vfpfcnvrt$4925+1)& (0+255),b
 26867                           
 26868                           ; BSR set to: 1
 26869  0049D4  513E               	movf	_vfpfcnvrt$4925& (0+255),w,b
 26870  0049D6  113F               	iorwf	(_vfpfcnvrt$4925+1)& (0+255),w,b
 26871  0049D8  A4D8               	btfss	status,2,c
 26872  0049DA  D7D1               	goto	l16797
 26873  0049DC                     u17230:
 26874                           
 26875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 26876  0049DC  0100               	movlb	0	; () banked
 26877  0049DE  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26878  0049E0  6ED9               	movwf	fsr2l,c
 26879  0049E2  6ADA               	clrf	fsr2h,c
 26880  0049E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26881  0049EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26882  0049F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26883  0049F0  6AF8               	clrf	tblptru,c
 26884  0049F2                     	endif
 26885  0049F2                     	if	0	;tblptru may be non-zero
 26886  0049F2                     	endif
 26887  0049F2  0008               	tblrd		*
 26888  0049F4  50F5               	movf	tablat,w,c
 26889  0049F6  0A64               	xorlw	100
 26890  0049F8  B4D8               	btfsc	status,2,c
 26891  0049FA  D00F               	goto	u17250
 26892                           
 26893                           ; BSR set to: 0
 26894  0049FC  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26895  0049FE  6ED9               	movwf	fsr2l,c
 26896  004A00  6ADA               	clrf	fsr2h,c
 26897  004A02  006F FF7B FFF6     	movff	postinc2,tblptrl
 26898  004A08  006F FF77 FFF7     	movff	postdec2,tblptrh
 26899  004A0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26900  004A0E  6AF8               	clrf	tblptru,c
 26901  004A10                     	endif
 26902  004A10                     	if	0	;tblptru may be non-zero
 26903  004A10                     	endif
 26904  004A10  0008               	tblrd		*
 26905  004A12  50F5               	movf	tablat,w,c
 26906  004A14  0A69               	xorlw	105
 26907  004A16  A4D8               	btfss	status,2,c
 26908  004A18  D053               	goto	l16815
 26909  004A1A                     u17250:
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 26913  004A1A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26914  004A1C  6ED9               	movwf	fsr2l,c
 26915  004A1E  6ADA               	clrf	fsr2h,c
 26916  004A20  2ADE               	incf	postinc2,f,c
 26917  004A22  0E00               	movlw	0
 26918  004A24  22DD               	addwfc	postdec2,f,c
 26919                           
 26920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 26921  004A26  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26922  004A2C  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26923  004A32  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26924  004A38  0E02               	movlw	2
 26925  004A3A  26DE               	addwf	postinc2,f,c
 26926  004A3C  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26927  004A42  0E00               	movlw	0
 26928  004A44  22DD               	addwfc	postdec2,f,c
 26929  004A46  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26930  004A4C  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26931  004A52  006F FF78  F12B    	movff	postinc2,vfpfcnvrt@ll
 26932  004A58  006F FF74  F12C    	movff	postdec2,vfpfcnvrt@ll+1
 26933  004A5E  0101               	movlb	1	; () banked
 26934  004A60  0E00               	movlw	0
 26935  004A62  BF2C               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 26936  004A64  0EFF               	movlw	-1
 26937  004A66  6F2D               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 26938  004A68  6F2E               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 26939  004A6A  6F2F               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 26940  004A6C  6F30               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 26941  004A6E  6F31               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 26942  004A70  6F32               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 26946  004A72  0060  F2A0  F100   	movff	vfpfcnvrt@fp,dtoa@fp
 26947  004A78  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 26948  004A7E  0060  F4AC  F102   	movff	vfpfcnvrt@ll,dtoa@d
 26949  004A84  0060  F4B0  F103   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 26950  004A8A  0060  F4B4  F104   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 26951  004A90  0060  F4B8  F105   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 26952  004A96  0060  F4BC  F106   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 26953  004A9C  0060  F4C0  F107   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 26954  004AA2  0060  F4C4  F108   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 26955  004AA8  0060  F4C8  F109   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 26956  004AAE  EC4C  F02F         	call	_dtoa	;wreg free
 26957  004AB2  0060  F400  F0A8   	movff	?_dtoa,?_vfpfcnvrt
 26958  004AB8  0060  F404  F0A9   	movff	?_dtoa+1,?_vfpfcnvrt+1
 26959  004ABE  0012               	return	
 26960  004AC0                     l16815:
 26961                           
 26962                           ; BSR set to: 0
 26963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 26964  004AC0  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26965  004AC2  6ED9               	movwf	fsr2l,c
 26966  004AC4  6ADA               	clrf	fsr2h,c
 26967  004AC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26968  004ACC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26969  004AD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26970  004AD2  6AF8               	clrf	tblptru,c
 26971  004AD4                     	endif
 26972  004AD4                     	if	0	;tblptru may be non-zero
 26973  004AD4                     	endif
 26974  004AD4  0008               	tblrd		*
 26975  004AD6  50F5               	movf	tablat,w,c
 26976  004AD8  0A78               	xorlw	120
 26977  004ADA  B4D8               	btfsc	status,2,c
 26978  004ADC  D00F               	goto	u17270
 26979                           
 26980                           ; BSR set to: 0
 26981  004ADE  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26982  004AE0  6ED9               	movwf	fsr2l,c
 26983  004AE2  6ADA               	clrf	fsr2h,c
 26984  004AE4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26985  004AEA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26986  004AF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26987  004AF0  6AF8               	clrf	tblptru,c
 26988  004AF2                     	endif
 26989  004AF2                     	if	0	;tblptru may be non-zero
 26990  004AF2                     	endif
 26991  004AF2  0008               	tblrd		*
 26992  004AF4  50F5               	movf	tablat,w,c
 26993  004AF6  0A58               	xorlw	88
 26994  004AF8  A4D8               	btfss	status,2,c
 26995  004AFA  D067               	goto	l16829
 26996  004AFC                     u17270:
 26997                           
 26998                           ; BSR set to: 0
 26999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 27000  004AFC  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27001  004AFE  6ED9               	movwf	fsr2l,c
 27002  004B00  6ADA               	clrf	fsr2h,c
 27003  004B02  006F FF7B FFF6     	movff	postinc2,tblptrl
 27004  004B08  006F FF77 FFF7     	movff	postdec2,tblptrh
 27005  004B0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27006  004B0E  6AF8               	clrf	tblptru,c
 27007  004B10                     	endif
 27008  004B10                     	if	0	;tblptru may be non-zero
 27009  004B10                     	endif
 27010  004B10  0008               	tblrd		*
 27011  004B12  006F FFD4  F13B    	movff	tablat,vfpfcnvrt@c
 27012                           
 27013                           ; BSR set to: 0
 27014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 27015  004B18  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27016  004B1A  6ED9               	movwf	fsr2l,c
 27017  004B1C  6ADA               	clrf	fsr2h,c
 27018  004B1E  2ADE               	incf	postinc2,f,c
 27019  004B20  0E00               	movlw	0
 27020  004B22  22DD               	addwfc	postdec2,f,c
 27021                           
 27022                           ; BSR set to: 0
 27023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 27024  004B24  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 27025  004B2A  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 27026  004B30  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 27027  004B36  0E02               	movlw	2
 27028  004B38  26DE               	addwf	postinc2,f,c
 27029  004B3A  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 27030  004B40  0E00               	movlw	0
 27031  004B42  22DD               	addwfc	postdec2,f,c
 27032  004B44  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 27033  004B4A  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 27034  004B50  006F FF78  F129    	movff	postinc2,??_vfpfcnvrt+2
 27035  004B56  006F FF74  F12A    	movff	postdec2,??_vfpfcnvrt+3
 27036  004B5C  0060  F4A4  F133   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 27037  004B62  0060  F4A8  F134   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 27038  004B68  0101               	movlb	1	; () banked
 27039  004B6A  6B35               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 27040  004B6C  6B36               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 27041  004B6E  6B37               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 27042  004B70  6B38               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 27043  004B72  6B39               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 27044  004B74  6B3A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 27045                           
 27046                           ; BSR set to: 1
 27047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 27048  004B76  0060  F2A0  F100   	movff	vfpfcnvrt@fp,xtoa@fp
 27049  004B7C  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 27050  004B82  0060  F4CC  F102   	movff	vfpfcnvrt@llu,xtoa@d
 27051  004B88  0060  F4D0  F103   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 27052  004B8E  0060  F4D4  F104   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 27053  004B94  0060  F4D8  F105   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 27054  004B9A  0060  F4DC  F106   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 27055  004BA0  0060  F4E0  F107   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 27056  004BA6  0060  F4E4  F108   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 27057  004BAC  0060  F4E8  F109   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 27058  004BB2  0060  F4EC  F10A   	movff	vfpfcnvrt@c,xtoa@x
 27059  004BB8  EC0D  F032         	call	_xtoa	;wreg free
 27060  004BBC  0060  F400  F0A8   	movff	?_xtoa,?_vfpfcnvrt
 27061  004BC2  0060  F404  F0A9   	movff	?_xtoa+1,?_vfpfcnvrt+1
 27062  004BC8  0012               	return	
 27063  004BCA                     l16829:
 27064                           
 27065                           ; BSR set to: 0
 27066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 27067  004BCA  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27068  004BCC  6ED9               	movwf	fsr2l,c
 27069  004BCE  6ADA               	clrf	fsr2h,c
 27070  004BD0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27071  004BD6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27072  004BDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27073  004BDC  6AF8               	clrf	tblptru,c
 27074  004BDE                     	endif
 27075  004BDE                     	if	0	;tblptru may be non-zero
 27076  004BDE                     	endif
 27077  004BDE  0008               	tblrd		*
 27078  004BE0  50F5               	movf	tablat,w,c
 27079  004BE2  0A25               	xorlw	37
 27080  004BE4  A4D8               	btfss	status,2,c
 27081  004BE6  D018               	goto	l16839
 27082                           
 27083                           ; BSR set to: 0
 27084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 27085  004BE8  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27086  004BEA  6ED9               	movwf	fsr2l,c
 27087  004BEC  6ADA               	clrf	fsr2h,c
 27088  004BEE  2ADE               	incf	postinc2,f,c
 27089  004BF0  0E00               	movlw	0
 27090  004BF2  22DD               	addwfc	postdec2,f,c
 27091                           
 27092                           ; BSR set to: 0
 27093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 27094  004BF4  0E00               	movlw	0
 27095  004BF6  6F8E               	movwf	(fputc@c+1)& (0+255),b
 27096  004BF8  0E25               	movlw	37
 27097  004BFA  6F8D               	movwf	fputc@c& (0+255),b
 27098  004BFC  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 27099  004C02  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 27100  004C08  ECD2  F041         	call	_fputc	;wreg free
 27101  004C0C                     l16835:
 27102                           
 27103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 27104  004C0C  0E00               	movlw	0
 27105  004C0E  0100               	movlb	0	; () banked
 27106  004C10  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 27107  004C12  0E01               	movlw	1
 27108  004C14  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 27109  004C16  0012               	return	
 27110  004C18                     l16839:
 27111                           
 27112                           ; BSR set to: 0
 27113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 27114  004C18  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27115  004C1A  6ED9               	movwf	fsr2l,c
 27116  004C1C  6ADA               	clrf	fsr2h,c
 27117  004C1E  2ADE               	incf	postinc2,f,c
 27118  004C20  0E00               	movlw	0
 27119  004C22  22DD               	addwfc	postdec2,f,c
 27120                           
 27121                           ; BSR set to: 0
 27122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 27123  004C24  0E00               	movlw	0
 27124  004C26  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 27125  004C28  0E00               	movlw	0
 27126  004C2A  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 27127  004C2C  0012               	return	
 27128  004C2E                     l16845:
 27129                           
 27130                           ; BSR set to: 0
 27131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 27132  004C2E  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27133  004C30  6ED9               	movwf	fsr2l,c
 27134  004C32  6ADA               	clrf	fsr2h,c
 27135  004C34  006F FF7B FFF6     	movff	postinc2,tblptrl
 27136  004C3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27137  004C40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27138  004C40  6AF8               	clrf	tblptru,c
 27139  004C42                     	endif
 27140  004C42                     	if	0	;tblptru may be non-zero
 27141  004C42                     	endif
 27142  004C42  0008               	tblrd		*
 27143  004C44  50F5               	movf	tablat,w,c
 27144  004C46  6F8D               	movwf	fputc@c& (0+255),b
 27145  004C48  6B8E               	clrf	(fputc@c+1)& (0+255),b
 27146  004C4A  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 27147  004C50  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 27148  004C56  ECD2  F041         	call	_fputc	;wreg free
 27149                           
 27150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 27151  004C5A  0100               	movlb	0	; () banked
 27152  004C5C  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 27153  004C5E  6ED9               	movwf	fsr2l,c
 27154  004C60  6ADA               	clrf	fsr2h,c
 27155  004C62  2ADE               	incf	postinc2,f,c
 27156  004C64  0E00               	movlw	0
 27157  004C66  22DD               	addwfc	postdec2,f,c
 27158  004C68  D7D1               	goto	l16835
 27159  004C6A                     __end_of_vfpfcnvrt:
 27160                           	opt callstack 0
 27161                           
 27162 ;; *************** function _xtoa *****************
 27163 ;; Defined at:
 27164 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 27165 ;; Parameters:    Size  Location     Type
 27166 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 27167 ;;		 -> sprintf@f(6), NULL(0), 
 27168 ;;  d               8    2[BANK1 ] unsigned long long 
 27169 ;;  x               1   10[BANK1 ] unsigned char 
 27170 ;; Auto vars:     Size  Location     Type
 27171 ;;  n               8   27[BANK1 ] unsigned long long 
 27172 ;;  c               2   37[BANK1 ] int 
 27173 ;;  i               2   35[BANK1 ] int 
 27174 ;;  w               2   25[BANK1 ] int 
 27175 ;;  p               2   23[BANK1 ] int 
 27176 ;; Return value:  Size  Location     Type
 27177 ;;                  2    0[BANK1 ] int 
 27178 ;; Registers used:
 27179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27180 ;; Tracked objects:
 27181 ;;		On entry : 3F/1
 27182 ;;		On exit  : 3F/0
 27183 ;;		Unchanged: 0/0
 27184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27185 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27186 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27187 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27188 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27189 ;;Total ram usage:       39 bytes
 27190 ;; Hardware stack levels used:    1
 27191 ;; Hardware stack levels required when called:   22
 27192 ;; This function calls:
 27193 ;;		_isalpha
 27194 ;;		_isupper
 27195 ;;		_pad
 27196 ;;		_toupper
 27197 ;; This function is called by:
 27198 ;;		_vfpfcnvrt
 27199 ;; This function uses a non-reentrant model
 27200 ;;
 27201                           
 27202                           	psect	text114
 27203  00641A                     __ptext114:
 27204                           	opt callstack 0
 27205  00641A                     _xtoa:
 27206                           	opt callstack 5
 27207                           
 27208                           ; BSR set to: 1
 27209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;incstack = 0
 27213  00641A  0100               	movlb	0	; () banked
 27214  00641C  AFB5               	btfss	(_prec+1)& (0+255),7,b
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 27218  00641E  93B6               	bcf	_flags& (0+255),1,b
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 27222  006420  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 27223  006422  D005               	goto	u16640
 27224  006424  51B5               	movf	(_prec+1)& (0+255),w,b
 27225  006426  E109               	bnz	l3134
 27226  006428  05B4               	decf	_prec& (0+255),w,b
 27227  00642A  B0D8               	btfsc	status,0,c
 27228  00642C  D006               	goto	l3134
 27229  00642E                     u16640:
 27230                           
 27231                           ; BSR set to: 0
 27232  00642E  0E00               	movlw	0
 27233  006430  0101               	movlb	1	; () banked
 27234  006432  6F18               	movwf	(xtoa@p+1)& (0+255),b
 27235  006434  0E01               	movlw	1
 27236  006436  6F17               	movwf	xtoa@p& (0+255),b
 27237  006438  D006               	goto	l3136
 27238  00643A                     l3134:
 27239                           
 27240                           ; BSR set to: 0
 27241  00643A  0060  F2D0  F117   	movff	_prec,xtoa@p
 27242  006440  0060  F2D4  F118   	movff	_prec+1,xtoa@p+1
 27243  006446                     l3136:
 27244                           
 27245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 27246  006446  0060  F2C8  F119   	movff	_width,xtoa@w
 27247  00644C  0060  F2CC  F11A   	movff	_width+1,xtoa@w+1
 27248                           
 27249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 27250  006452  0100               	movlb	0	; () banked
 27251  006454  A9B6               	btfss	_flags& (0+255),4,b
 27252  006456  D005               	goto	l16503
 27253                           
 27254                           ; BSR set to: 0
 27255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 27256  006458  0101               	movlb	1	; () banked
 27257  00645A  0EFE               	movlw	254
 27258  00645C  2719               	addwf	xtoa@w& (0+255),f,b
 27259  00645E  0EFF               	movlw	255
 27260  006460  231A               	addwfc	(xtoa@w+1)& (0+255),f,b
 27261  006462                     l16503:
 27262                           
 27263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 27264  006462  0060  F408  F11B   	movff	xtoa@d,xtoa@n
 27265  006468  0060  F40C  F11C   	movff	xtoa@d+1,xtoa@n+1
 27266  00646E  0060  F410  F11D   	movff	xtoa@d+2,xtoa@n+2
 27267  006474  0060  F414  F11E   	movff	xtoa@d+3,xtoa@n+3
 27268  00647A  0060  F418  F11F   	movff	xtoa@d+4,xtoa@n+4
 27269  006480  0060  F41C  F120   	movff	xtoa@d+5,xtoa@n+5
 27270  006486  0060  F420  F121   	movff	xtoa@d+6,xtoa@n+6
 27271  00648C  0060  F424  F122   	movff	xtoa@d+7,xtoa@n+7
 27272                           
 27273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 27274  006492  0E00               	movlw	0
 27275  006494  0101               	movlb	1	; () banked
 27276  006496  6F24               	movwf	(xtoa@i+1)& (0+255),b
 27277  006498  0E1F               	movlw	31
 27278  00649A  6F23               	movwf	xtoa@i& (0+255),b
 27279                           
 27280                           ; BSR set to: 1
 27281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 27282  00649C  0E00               	movlw	0
 27283  00649E  0102               	movlb	2	; () banked
 27284  0064A0  6F7A               	movwf	(_dbuf+31)& (0+255),b
 27285                           
 27286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27287  0064A2  D0AA               	goto	l16539
 27288  0064A4                     l16509:
 27289                           
 27290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 27291  0064A4  0101               	movlb	1	; () banked
 27292  0064A6  0723               	decf	xtoa@i& (0+255),f,b
 27293  0064A8  A0D8               	btfss	status,0,c
 27294  0064AA  0724               	decf	(xtoa@i+1)& (0+255),f,b
 27295                           
 27296                           ; BSR set to: 1
 27297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 27298  0064AC  0E0F               	movlw	15
 27299  0064AE  151B               	andwf	xtoa@n& (0+255),w,b
 27300  0064B0  6F25               	movwf	xtoa@c& (0+255),b
 27301  0064B2  6B26               	clrf	(xtoa@c+1)& (0+255),b
 27302                           
 27303                           ; BSR set to: 1
 27304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 27305  0064B4  BF26               	btfsc	(xtoa@c+1)& (0+255),7,b
 27306  0064B6  D008               	goto	l16517
 27307  0064B8  5126               	movf	(xtoa@c+1)& (0+255),w,b
 27308  0064BA  E104               	bnz	u16660
 27309  0064BC  0E0A               	movlw	10
 27310  0064BE  5D25               	subwf	xtoa@c& (0+255),w,b
 27311  0064C0  A0D8               	btfss	status,0,c
 27312  0064C2  D002               	goto	l16517
 27313  0064C4                     u16660:
 27314                           
 27315                           ; BSR set to: 1
 27316  0064C4  0E57               	movlw	87
 27317  0064C6  D001               	goto	L52
 27318  0064C8                     l16517:
 27319                           
 27320                           ; BSR set to: 1
 27321  0064C8  0E30               	movlw	48
 27322  0064CA                     L52:
 27323  0064CA  2525               	addwf	xtoa@c& (0+255),w,b
 27324  0064CC  6F25               	movwf	xtoa@c& (0+255),b
 27325  0064CE  0E00               	movlw	0
 27326  0064D0  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
 27327  0064D2  6F26               	movwf	(xtoa@c+1)& (0+255),b
 27328                           
 27329                           ; BSR set to: 1
 27330                           
 27331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 27332  0064D4  0EBF               	movlw	191
 27333  0064D6  6F0B               	movwf	??_xtoa& (0+255),b
 27334  0064D8  0EFF               	movlw	255
 27335  0064DA  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 27336  0064DC  510A               	movf	xtoa@x& (0+255),w,b
 27337  0064DE  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 27338  0064E0  6B0E               	clrf	(??_xtoa+3)& (0+255),b
 27339  0064E2  510B               	movf	??_xtoa& (0+255),w,b
 27340  0064E4  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 27341  0064E6  510C               	movf	(??_xtoa+1)& (0+255),w,b
 27342  0064E8  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 27343  0064EA  510E               	movf	(??_xtoa+3)& (0+255),w,b
 27344  0064EC  E106               	bnz	u16670
 27345  0064EE  0E1A               	movlw	26
 27346  0064F0  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 27347  0064F2  B0D8               	btfsc	status,0,c
 27348  0064F4  D002               	goto	u16670
 27349  0064F6  0E01               	movlw	1
 27350  0064F8  D001               	goto	u16680
 27351  0064FA                     u16670:
 27352  0064FA  0E00               	movlw	0
 27353  0064FC                     u16680:
 27354  0064FC  6F13               	movwf	_xtoa$4910& (0+255),b
 27355  0064FE  6B14               	clrf	(_xtoa$4910+1)& (0+255),b
 27356                           
 27357                           ; BSR set to: 1
 27358  006500  5113               	movf	_xtoa$4910& (0+255),w,b
 27359  006502  1114               	iorwf	(_xtoa$4910+1)& (0+255),w,b
 27360  006504  B4D8               	btfsc	status,2,c
 27361  006506  D02B               	goto	l16531
 27362                           
 27363                           ; BSR set to: 1
 27364  006508  0E9F               	movlw	159
 27365  00650A  6F0B               	movwf	??_xtoa& (0+255),b
 27366  00650C  0EFF               	movlw	255
 27367  00650E  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 27368  006510  0E20               	movlw	32
 27369  006512  1125               	iorwf	xtoa@c& (0+255),w,b
 27370  006514  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 27371  006516  0E00               	movlw	0
 27372  006518  1126               	iorwf	(xtoa@c+1)& (0+255),w,b
 27373  00651A  6F0E               	movwf	(??_xtoa+3)& (0+255),b
 27374  00651C  510B               	movf	??_xtoa& (0+255),w,b
 27375  00651E  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 27376  006520  510C               	movf	(??_xtoa+1)& (0+255),w,b
 27377  006522  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 27378  006524  510E               	movf	(??_xtoa+3)& (0+255),w,b
 27379  006526  E106               	bnz	u16700
 27380  006528  0E1A               	movlw	26
 27381  00652A  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 27382  00652C  B0D8               	btfsc	status,0,c
 27383  00652E  D002               	goto	u16700
 27384  006530  0E01               	movlw	1
 27385  006532  D001               	goto	u16710
 27386  006534                     u16700:
 27387  006534  0E00               	movlw	0
 27388  006536                     u16710:
 27389  006536  6F15               	movwf	_xtoa$4911& (0+255),b
 27390  006538  6B16               	clrf	(_xtoa$4911+1)& (0+255),b
 27391                           
 27392                           ; BSR set to: 1
 27393  00653A  5115               	movf	_xtoa$4911& (0+255),w,b
 27394  00653C  1116               	iorwf	(_xtoa$4911+1)& (0+255),w,b
 27395  00653E  B4D8               	btfsc	status,2,c
 27396  006540  D00E               	goto	l16531
 27397                           
 27398                           ; BSR set to: 1
 27399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 27400  006542  0060  F494  F091   	movff	xtoa@c,toupper@c
 27401  006548  0060  F498  F092   	movff	xtoa@c+1,toupper@c+1
 27402  00654E  ECE0  F049         	call	_toupper	;wreg free
 27403  006552  0060  F244  F125   	movff	?_toupper,xtoa@c
 27404  006558  0060  F248  F126   	movff	?_toupper+1,xtoa@c+1
 27405  00655E                     l16531:
 27406                           
 27407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 27408  00655E  0E5B               	movlw	low _dbuf
 27409  006560  0101               	movlb	1	; () banked
 27410  006562  2523               	addwf	xtoa@i& (0+255),w,b
 27411  006564  6ED9               	movwf	fsr2l,c
 27412  006566  0E02               	movlw	high _dbuf
 27413  006568  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27414  00656A  6EDA               	movwf	fsr2h,c
 27415  00656C  0060  F497  FFDF   	movff	xtoa@c,indf2
 27416                           
 27417                           ; BSR set to: 1
 27418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 27419  006572  0717               	decf	xtoa@p& (0+255),f,b
 27420  006574  A0D8               	btfss	status,0,c
 27421  006576  0718               	decf	(xtoa@p+1)& (0+255),f,b
 27422                           
 27423                           ; BSR set to: 1
 27424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 27425  006578  0719               	decf	xtoa@w& (0+255),f,b
 27426  00657A  A0D8               	btfss	status,0,c
 27427  00657C  071A               	decf	(xtoa@w+1)& (0+255),f,b
 27428                           
 27429                           ; BSR set to: 1
 27430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 27431  00657E  0060  F46C  F10B   	movff	xtoa@n,??_xtoa
 27432  006584  0060  F470  F10C   	movff	xtoa@n+1,??_xtoa+1
 27433  00658A  0060  F474  F10D   	movff	xtoa@n+2,??_xtoa+2
 27434  006590  0060  F478  F10E   	movff	xtoa@n+3,??_xtoa+3
 27435  006596  0060  F47C  F10F   	movff	xtoa@n+4,??_xtoa+4
 27436  00659C  0060  F480  F110   	movff	xtoa@n+5,??_xtoa+5
 27437  0065A2  0060  F484  F111   	movff	xtoa@n+6,??_xtoa+6
 27438  0065A8  0060  F488  F112   	movff	xtoa@n+7,??_xtoa+7
 27439  0065AE  0E05               	movlw	5
 27440  0065B0  D009               	goto	u16730
 27441  0065B2                     u16735:
 27442  0065B2  90D8               	bcf	status,0,c
 27443  0065B4  3312               	rrcf	(??_xtoa+7)& (0+255),f,b
 27444  0065B6  3311               	rrcf	(??_xtoa+6)& (0+255),f,b
 27445  0065B8  3310               	rrcf	(??_xtoa+5)& (0+255),f,b
 27446  0065BA  330F               	rrcf	(??_xtoa+4)& (0+255),f,b
 27447  0065BC  330E               	rrcf	(??_xtoa+3)& (0+255),f,b
 27448  0065BE  330D               	rrcf	(??_xtoa+2)& (0+255),f,b
 27449  0065C0  330C               	rrcf	(??_xtoa+1)& (0+255),f,b
 27450  0065C2  330B               	rrcf	??_xtoa& (0+255),f,b
 27451  0065C4                     u16730:
 27452  0065C4  2EE8               	decfsz	wreg,f,c
 27453  0065C6  D7F5               	goto	u16735
 27454  0065C8  0060  F42C  F11B   	movff	??_xtoa,xtoa@n
 27455  0065CE  0060  F430  F11C   	movff	??_xtoa+1,xtoa@n+1
 27456  0065D4  0060  F434  F11D   	movff	??_xtoa+2,xtoa@n+2
 27457  0065DA  0060  F438  F11E   	movff	??_xtoa+3,xtoa@n+3
 27458  0065E0  0060  F43C  F11F   	movff	??_xtoa+4,xtoa@n+4
 27459  0065E6  0060  F440  F120   	movff	??_xtoa+5,xtoa@n+5
 27460  0065EC  0060  F444  F121   	movff	??_xtoa+6,xtoa@n+6
 27461  0065F2  0060  F448  F122   	movff	??_xtoa+7,xtoa@n+7
 27462  0065F8                     l16539:
 27463                           
 27464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27465  0065F8  0101               	movlb	1	; () banked
 27466  0065FA  BF24               	btfsc	(xtoa@i+1)& (0+255),7,b
 27467  0065FC  D021               	goto	u16780
 27468  0065FE  5124               	movf	(xtoa@i+1)& (0+255),w,b
 27469  006600  E104               	bnz	u16740
 27470  006602  0E02               	movlw	2
 27471  006604  5D23               	subwf	xtoa@i& (0+255),w,b
 27472  006606  A0D8               	btfss	status,0,c
 27473  006608  D01B               	goto	u16780
 27474  00660A                     u16740:
 27475                           
 27476                           ; BSR set to: 1
 27477  00660A  511B               	movf	xtoa@n& (0+255),w,b
 27478  00660C  111C               	iorwf	(xtoa@n+1)& (0+255),w,b
 27479  00660E  111D               	iorwf	(xtoa@n+2)& (0+255),w,b
 27480  006610  111E               	iorwf	(xtoa@n+3)& (0+255),w,b
 27481  006612  111F               	iorwf	(xtoa@n+4)& (0+255),w,b
 27482  006614  1120               	iorwf	(xtoa@n+5)& (0+255),w,b
 27483  006616  1121               	iorwf	(xtoa@n+6)& (0+255),w,b
 27484  006618  1122               	iorwf	(xtoa@n+7)& (0+255),w,b
 27485  00661A  A4D8               	btfss	status,2,c
 27486  00661C  D743               	goto	l16509
 27487                           
 27488                           ; BSR set to: 1
 27489  00661E  BF18               	btfsc	(xtoa@p+1)& (0+255),7,b
 27490  006620  D005               	goto	u16760
 27491  006622  5118               	movf	(xtoa@p+1)& (0+255),w,b
 27492  006624  E102               	bnz	u16761
 27493  006626  0517               	decf	xtoa@p& (0+255),w,b
 27494  006628  B0D8               	btfsc	status,0,c
 27495  00662A                     u16761:
 27496  00662A  D73C               	goto	l16509
 27497  00662C                     u16760:
 27498                           
 27499                           ; BSR set to: 1
 27500  00662C  BF1A               	btfsc	(xtoa@w+1)& (0+255),7,b
 27501  00662E  D008               	goto	u16780
 27502  006630  511A               	movf	(xtoa@w+1)& (0+255),w,b
 27503  006632  E103               	bnz	u16770
 27504  006634  0519               	decf	xtoa@w& (0+255),w,b
 27505  006636  A0D8               	btfss	status,0,c
 27506  006638  D003               	goto	u16780
 27507  00663A                     u16770:
 27508                           
 27509                           ; BSR set to: 1
 27510  00663A  0100               	movlb	0	; () banked
 27511  00663C  B3B6               	btfsc	_flags& (0+255),1,b
 27512  00663E  D732               	goto	l16509
 27513  006640                     u16780:
 27514                           
 27515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 27516  006640  0100               	movlb	0	; () banked
 27517  006642  A9B6               	btfss	_flags& (0+255),4,b
 27518  006644  D018               	goto	l16555
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 27522  006646  0101               	movlb	1	; () banked
 27523  006648  0723               	decf	xtoa@i& (0+255),f,b
 27524  00664A  A0D8               	btfss	status,0,c
 27525  00664C  0724               	decf	(xtoa@i+1)& (0+255),f,b
 27526                           
 27527                           ; BSR set to: 1
 27528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 27529  00664E  0E5B               	movlw	low _dbuf
 27530  006650  2523               	addwf	xtoa@i& (0+255),w,b
 27531  006652  6ED9               	movwf	fsr2l,c
 27532  006654  0E02               	movlw	high _dbuf
 27533  006656  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27534  006658  6EDA               	movwf	fsr2h,c
 27535  00665A  0060  F42B  FFDF   	movff	xtoa@x,indf2
 27536                           
 27537                           ; BSR set to: 1
 27538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 27539  006660  0723               	decf	xtoa@i& (0+255),f,b
 27540  006662  A0D8               	btfss	status,0,c
 27541  006664  0724               	decf	(xtoa@i+1)& (0+255),f,b
 27542                           
 27543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 27544  006666  0E5B               	movlw	low _dbuf
 27545  006668  2523               	addwf	xtoa@i& (0+255),w,b
 27546  00666A  6ED9               	movwf	fsr2l,c
 27547  00666C  0E02               	movlw	high _dbuf
 27548  00666E  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27549  006670  6EDA               	movwf	fsr2h,c
 27550  006672  0E30               	movlw	48
 27551  006674  6EDF               	movwf	indf2,c
 27552  006676                     l16555:
 27553                           
 27554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 27555  006676  0060  F400  F09D   	movff	xtoa@fp,pad@fp
 27556  00667C  0060  F404  F09E   	movff	xtoa@fp+1,pad@fp+1
 27557  006682  0E5B               	movlw	low _dbuf
 27558  006684  0101               	movlb	1	; () banked
 27559  006686  2523               	addwf	xtoa@i& (0+255),w,b
 27560  006688  0100               	movlb	0	; () banked
 27561  00668A  6F9F               	movwf	pad@buf& (0+255),b
 27562  00668C  0E02               	movlw	high _dbuf
 27563  00668E  0101               	movlb	1	; () banked
 27564  006690  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 27565  006692  0100               	movlb	0	; () banked
 27566  006694  6FA0               	movwf	(pad@buf+1)& (0+255),b
 27567  006696  0060  F464  F0A1   	movff	xtoa@w,pad@p
 27568  00669C  0060  F468  F0A2   	movff	xtoa@w+1,pad@p+1
 27569  0066A2  EC20  F041         	call	_pad	;wreg free
 27570  0066A6  0060  F274  F100   	movff	?_pad,?_xtoa
 27571  0066AC  0060  F278  F101   	movff	?_pad+1,?_xtoa+1
 27572                           
 27573                           ; BSR set to: 0
 27574  0066B2  0012               	return		;funcret
 27575  0066B4                     __end_of_xtoa:
 27576                           	opt callstack 0
 27577                           
 27578 ;; *************** function _toupper *****************
 27579 ;; Defined at:
 27580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 27581 ;; Parameters:    Size  Location     Type
 27582 ;;  c               2   49[BANK0 ] int 
 27583 ;; Auto vars:     Size  Location     Type
 27584 ;;		None
 27585 ;; Return value:  Size  Location     Type
 27586 ;;                  2   49[BANK0 ] int 
 27587 ;; Registers used:
 27588 ;;		wreg, status,2, status,0
 27589 ;; Tracked objects:
 27590 ;;		On entry : 3F/1
 27591 ;;		On exit  : 3F/0
 27592 ;;		Unchanged: 0/0
 27593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27596 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27598 ;;Total ram usage:        8 bytes
 27599 ;; Hardware stack levels used:    1
 27600 ;; Hardware stack levels required when called:   18
 27601 ;; This function calls:
 27602 ;;		_islower
 27603 ;; This function is called by:
 27604 ;;		_xtoa
 27605 ;; This function uses a non-reentrant model
 27606 ;;
 27607                           
 27608                           	psect	text115
 27609  0093C0                     __ptext115:
 27610                           	opt callstack 0
 27611  0093C0                     _toupper:
 27612                           	opt callstack 8
 27613                           
 27614                           ; BSR set to: 1
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;incstack = 0
 27618  0093C0  0E9F               	movlw	159
 27619  0093C2  0100               	movlb	0	; () banked
 27620  0093C4  6F93               	movwf	??_toupper& (0+255),b
 27621  0093C6  0EFF               	movlw	255
 27622  0093C8  6F94               	movwf	(??_toupper+1)& (0+255),b
 27623  0093CA  0060  F244  F095   	movff	toupper@c,??_toupper+2
 27624  0093D0  0060  F248  F096   	movff	toupper@c+1,??_toupper+3
 27625  0093D6  5193               	movf	??_toupper& (0+255),w,b
 27626  0093D8  2795               	addwf	(??_toupper+2)& (0+255),f,b
 27627  0093DA  5194               	movf	(??_toupper+1)& (0+255),w,b
 27628  0093DC  2396               	addwfc	(??_toupper+3)& (0+255),f,b
 27629  0093DE  5196               	movf	(??_toupper+3)& (0+255),w,b
 27630  0093E0  E106               	bnz	u16240
 27631  0093E2  0E1A               	movlw	26
 27632  0093E4  5D95               	subwf	(??_toupper+2)& (0+255),w,b
 27633  0093E6  B0D8               	btfsc	status,0,c
 27634  0093E8  D002               	goto	u16240
 27635  0093EA  0E01               	movlw	1
 27636  0093EC  D001               	goto	u16250
 27637  0093EE                     u16240:
 27638  0093EE  0E00               	movlw	0
 27639  0093F0                     u16250:
 27640  0093F0  6F97               	movwf	_toupper$5491& (0+255),b
 27641  0093F2  6B98               	clrf	(_toupper$5491+1)& (0+255),b
 27642                           
 27643                           ; BSR set to: 0
 27644  0093F4  5197               	movf	_toupper$5491& (0+255),w,b
 27645  0093F6  1198               	iorwf	(_toupper$5491+1)& (0+255),w,b
 27646  0093F8  B4D8               	btfsc	status,2,c
 27647  0093FA  D005               	goto	l3981
 27648                           
 27649                           ; BSR set to: 0
 27650  0093FC  0E5F               	movlw	95
 27651  0093FE  1591               	andwf	toupper@c& (0+255),w,b
 27652  009400  6F91               	movwf	?_toupper& (0+255),b
 27653  009402  6B92               	clrf	(?_toupper+1)& (0+255),b
 27654  009404  0012               	return	
 27655  009406                     l3981:
 27656                           
 27657                           ; BSR set to: 0
 27658  009406  0060  F244  F091   	movff	toupper@c,?_toupper
 27659  00940C  0060  F248  F092   	movff	toupper@c+1,?_toupper+1
 27660                           
 27661                           ; BSR set to: 0
 27662  009412  0012               	return		;funcret
 27663  009414                     __end_of_toupper:
 27664                           	opt callstack 0
 27665                           
 27666 ;; *************** function _islower *****************
 27667 ;; Defined at:
 27668 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 27669 ;; Parameters:    Size  Location     Type
 27670 ;;  c               2   43[BANK0 ] int 
 27671 ;; Auto vars:     Size  Location     Type
 27672 ;;		None
 27673 ;; Return value:  Size  Location     Type
 27674 ;;                  2   43[BANK0 ] int 
 27675 ;; Registers used:
 27676 ;;		wreg, status,2, status,0
 27677 ;; Tracked objects:
 27678 ;;		On entry : 0/0
 27679 ;;		On exit  : 3F/0
 27680 ;;		Unchanged: 0/0
 27681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27685 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27686 ;;Total ram usage:        6 bytes
 27687 ;; Hardware stack levels used:    1
 27688 ;; Hardware stack levels required when called:   17
 27689 ;; This function calls:
 27690 ;;		Nothing
 27691 ;; This function is called by:
 27692 ;;		_toupper
 27693 ;; This function uses a non-reentrant model
 27694 ;;
 27695                           
 27696                           	psect	text116
 27697  009AF0                     __ptext116:
 27698                           	opt callstack 0
 27699  009AF0                     _islower:
 27700                           	opt callstack 8
 27701                           
 27702                           ; BSR set to: 0
 27703                           ;incstack = 0
 27704  009AF0  0E9F               	movlw	159
 27705  009AF2  0100               	movlb	0	; () banked
 27706  009AF4  6F8D               	movwf	??_islower& (0+255),b
 27707  009AF6  0EFF               	movlw	255
 27708  009AF8  6F8E               	movwf	(??_islower+1)& (0+255),b
 27709  009AFA  0060  F22C  F08F   	movff	islower@c,??_islower+2
 27710  009B00  0060  F230  F090   	movff	islower@c+1,??_islower+3
 27711  009B06  518D               	movf	??_islower& (0+255),w,b
 27712  009B08  278F               	addwf	(??_islower+2)& (0+255),f,b
 27713  009B0A  518E               	movf	(??_islower+1)& (0+255),w,b
 27714  009B0C  2390               	addwfc	(??_islower+3)& (0+255),f,b
 27715  009B0E  5190               	movf	(??_islower+3)& (0+255),w,b
 27716  009B10  E106               	bnz	u16090
 27717  009B12  0E1A               	movlw	26
 27718  009B14  5D8F               	subwf	(??_islower+2)& (0+255),w,b
 27719  009B16  B0D8               	btfsc	status,0,c
 27720  009B18  D002               	goto	u16090
 27721  009B1A  0E01               	movlw	1
 27722  009B1C  D001               	goto	u16100
 27723  009B1E                     u16090:
 27724  009B1E  0E00               	movlw	0
 27725  009B20                     u16100:
 27726  009B20  6F8B               	movwf	?_islower& (0+255),b
 27727  009B22  6B8C               	clrf	(?_islower+1)& (0+255),b
 27728                           
 27729                           ; BSR set to: 0
 27730  009B24  0012               	return		;funcret
 27731  009B26                     __end_of_islower:
 27732                           	opt callstack 0
 27733                           
 27734 ;; *************** function _isupper *****************
 27735 ;; Defined at:
 27736 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 27737 ;; Parameters:    Size  Location     Type
 27738 ;;  c               2   43[BANK0 ] int 
 27739 ;; Auto vars:     Size  Location     Type
 27740 ;;		None
 27741 ;; Return value:  Size  Location     Type
 27742 ;;                  2   43[BANK0 ] int 
 27743 ;; Registers used:
 27744 ;;		wreg, status,2, status,0
 27745 ;; Tracked objects:
 27746 ;;		On entry : 0/0
 27747 ;;		On exit  : 3F/0
 27748 ;;		Unchanged: 0/0
 27749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27753 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27754 ;;Total ram usage:        6 bytes
 27755 ;; Hardware stack levels used:    1
 27756 ;; Hardware stack levels required when called:   17
 27757 ;; This function calls:
 27758 ;;		Nothing
 27759 ;; This function is called by:
 27760 ;;		_xtoa
 27761 ;; This function uses a non-reentrant model
 27762 ;;
 27763                           
 27764                           	psect	text117
 27765  009B26                     __ptext117:
 27766                           	opt callstack 0
 27767  009B26                     _isupper:
 27768                           	opt callstack 9
 27769                           
 27770                           ; BSR set to: 0
 27771                           ;incstack = 0
 27772  009B26  0EBF               	movlw	191
 27773  009B28  0100               	movlb	0	; () banked
 27774  009B2A  6F8D               	movwf	??_isupper& (0+255),b
 27775  009B2C  0EFF               	movlw	255
 27776  009B2E  6F8E               	movwf	(??_isupper+1)& (0+255),b
 27777  009B30  0060  F22C  F08F   	movff	isupper@c,??_isupper+2
 27778  009B36  0060  F230  F090   	movff	isupper@c+1,??_isupper+3
 27779  009B3C  518D               	movf	??_isupper& (0+255),w,b
 27780  009B3E  278F               	addwf	(??_isupper+2)& (0+255),f,b
 27781  009B40  518E               	movf	(??_isupper+1)& (0+255),w,b
 27782  009B42  2390               	addwfc	(??_isupper+3)& (0+255),f,b
 27783  009B44  5190               	movf	(??_isupper+3)& (0+255),w,b
 27784  009B46  E106               	bnz	u16200
 27785  009B48  0E1A               	movlw	26
 27786  009B4A  5D8F               	subwf	(??_isupper+2)& (0+255),w,b
 27787  009B4C  B0D8               	btfsc	status,0,c
 27788  009B4E  D002               	goto	u16200
 27789  009B50  0E01               	movlw	1
 27790  009B52  D001               	goto	u16210
 27791  009B54                     u16200:
 27792  009B54  0E00               	movlw	0
 27793  009B56                     u16210:
 27794  009B56  6F8B               	movwf	?_isupper& (0+255),b
 27795  009B58  6B8C               	clrf	(?_isupper+1)& (0+255),b
 27796                           
 27797                           ; BSR set to: 0
 27798  009B5A  0012               	return		;funcret
 27799  009B5C                     __end_of_isupper:
 27800                           	opt callstack 0
 27801                           
 27802 ;; *************** function _isalpha *****************
 27803 ;; Defined at:
 27804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 27805 ;; Parameters:    Size  Location     Type
 27806 ;;  c               2   43[BANK0 ] int 
 27807 ;; Auto vars:     Size  Location     Type
 27808 ;;		None
 27809 ;; Return value:  Size  Location     Type
 27810 ;;                  2   43[BANK0 ] int 
 27811 ;; Registers used:
 27812 ;;		wreg, status,2, status,0
 27813 ;; Tracked objects:
 27814 ;;		On entry : 0/0
 27815 ;;		On exit  : 3F/0
 27816 ;;		Unchanged: 0/0
 27817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27818 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27822 ;;Total ram usage:        6 bytes
 27823 ;; Hardware stack levels used:    1
 27824 ;; Hardware stack levels required when called:   17
 27825 ;; This function calls:
 27826 ;;		Nothing
 27827 ;; This function is called by:
 27828 ;;		_xtoa
 27829 ;; This function uses a non-reentrant model
 27830 ;;
 27831                           
 27832                           	psect	text118
 27833  009B5C                     __ptext118:
 27834                           	opt callstack 0
 27835  009B5C                     _isalpha:
 27836                           	opt callstack 9
 27837                           
 27838                           ; BSR set to: 0
 27839                           ;incstack = 0
 27840  009B5C  0E9F               	movlw	159
 27841  009B5E  0100               	movlb	0	; () banked
 27842  009B60  6F8D               	movwf	??_isalpha& (0+255),b
 27843  009B62  0EFF               	movlw	255
 27844  009B64  6F8E               	movwf	(??_isalpha+1)& (0+255),b
 27845  009B66  0E20               	movlw	32
 27846  009B68  118B               	iorwf	isalpha@c& (0+255),w,b
 27847  009B6A  6F8F               	movwf	(??_isalpha+2)& (0+255),b
 27848  009B6C  0E00               	movlw	0
 27849  009B6E  118C               	iorwf	(isalpha@c+1)& (0+255),w,b
 27850  009B70  6F90               	movwf	(??_isalpha+3)& (0+255),b
 27851  009B72  518D               	movf	??_isalpha& (0+255),w,b
 27852  009B74  278F               	addwf	(??_isalpha+2)& (0+255),f,b
 27853  009B76  518E               	movf	(??_isalpha+1)& (0+255),w,b
 27854  009B78  2390               	addwfc	(??_isalpha+3)& (0+255),f,b
 27855  009B7A  5190               	movf	(??_isalpha+3)& (0+255),w,b
 27856  009B7C  E106               	bnz	u16220
 27857  009B7E  0E1A               	movlw	26
 27858  009B80  5D8F               	subwf	(??_isalpha+2)& (0+255),w,b
 27859  009B82  B0D8               	btfsc	status,0,c
 27860  009B84  D002               	goto	u16220
 27861  009B86  0E01               	movlw	1
 27862  009B88  D001               	goto	u16230
 27863  009B8A                     u16220:
 27864  009B8A  0E00               	movlw	0
 27865  009B8C                     u16230:
 27866  009B8C  6F8B               	movwf	?_isalpha& (0+255),b
 27867  009B8E  6B8C               	clrf	(?_isalpha+1)& (0+255),b
 27868                           
 27869                           ; BSR set to: 0
 27870  009B90  0012               	return		;funcret
 27871  009B92                     __end_of_isalpha:
 27872                           	opt callstack 0
 27873                           
 27874 ;; *************** function _dtoa *****************
 27875 ;; Defined at:
 27876 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 27877 ;; Parameters:    Size  Location     Type
 27878 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 27879 ;;		 -> sprintf@f(6), NULL(0), 
 27880 ;;  d               8    2[BANK1 ] long long 
 27881 ;; Auto vars:     Size  Location     Type
 27882 ;;  n               8   26[BANK1 ] long long 
 27883 ;;  i               2   34[BANK1 ] int 
 27884 ;;  s               2   24[BANK1 ] int 
 27885 ;;  w               2   22[BANK1 ] int 
 27886 ;;  p               2   20[BANK1 ] int 
 27887 ;; Return value:  Size  Location     Type
 27888 ;;                  2    0[BANK1 ] int 
 27889 ;; Registers used:
 27890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27891 ;; Tracked objects:
 27892 ;;		On entry : 3F/1
 27893 ;;		On exit  : 3F/0
 27894 ;;		Unchanged: 0/0
 27895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27896 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27897 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27898 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27899 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27900 ;;Total ram usage:       36 bytes
 27901 ;; Hardware stack levels used:    1
 27902 ;; Hardware stack levels required when called:   22
 27903 ;; This function calls:
 27904 ;;		___aodiv
 27905 ;;		___aomod
 27906 ;;		_abs
 27907 ;;		_pad
 27908 ;; This function is called by:
 27909 ;;		_vfpfcnvrt
 27910 ;; This function uses a non-reentrant model
 27911 ;;
 27912                           
 27913                           	psect	text119
 27914  005E98                     __ptext119:
 27915                           	opt callstack 0
 27916  005E98                     _dtoa:
 27917                           	opt callstack 5
 27918                           
 27919                           ; BSR set to: 1
 27920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 27921                           
 27922                           ; BSR set to: 0
 27923                           ;incstack = 0
 27924  005E98  0060  F408  F11A   	movff	dtoa@d,dtoa@n
 27925  005E9E  0060  F40C  F11B   	movff	dtoa@d+1,dtoa@n+1
 27926  005EA4  0060  F410  F11C   	movff	dtoa@d+2,dtoa@n+2
 27927  005EAA  0060  F414  F11D   	movff	dtoa@d+3,dtoa@n+3
 27928  005EB0  0060  F418  F11E   	movff	dtoa@d+4,dtoa@n+4
 27929  005EB6  0060  F41C  F11F   	movff	dtoa@d+5,dtoa@n+5
 27930  005EBC  0060  F420  F120   	movff	dtoa@d+6,dtoa@n+6
 27931  005EC2  0060  F424  F121   	movff	dtoa@d+7,dtoa@n+7
 27932                           
 27933                           ; BSR set to: 1
 27934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 27935  005EC8  AF21               	btfss	(dtoa@n+7)& (0+255),7,b
 27936  005ECA  D002               	goto	u16480
 27937  005ECC  0E01               	movlw	1
 27938  005ECE  D001               	goto	u16490
 27939  005ED0                     u16480:
 27940  005ED0  0E00               	movlw	0
 27941  005ED2                     u16490:
 27942  005ED2  6F18               	movwf	dtoa@s& (0+255),b
 27943  005ED4  6B19               	clrf	(dtoa@s+1)& (0+255),b
 27944                           
 27945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 27946  005ED6  5118               	movf	dtoa@s& (0+255),w,b
 27947  005ED8  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27948  005EDA  B4D8               	btfsc	status,2,c
 27949  005EDC  D010               	goto	l16437
 27950                           
 27951                           ; BSR set to: 1
 27952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 27953  005EDE  1F21               	comf	(dtoa@n+7)& (0+255),f,b
 27954  005EE0  1F20               	comf	(dtoa@n+6)& (0+255),f,b
 27955  005EE2  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
 27956  005EE4  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
 27957  005EE6  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
 27958  005EE8  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
 27959  005EEA  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
 27960  005EEC  6D1A               	negf	dtoa@n& (0+255),b
 27961  005EEE  0E00               	movlw	0
 27962  005EF0  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
 27963  005EF2  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
 27964  005EF4  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
 27965  005EF6  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
 27966  005EF8  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
 27967  005EFA  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
 27968  005EFC  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
 27969  005EFE                     l16437:
 27970                           
 27971                           ; BSR set to: 1
 27972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 27973  005EFE  0100               	movlb	0	; () banked
 27974  005F00  AFB5               	btfss	(_prec+1)& (0+255),7,b
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 27978  005F02  93B6               	bcf	_flags& (0+255),1,b
 27979                           
 27980                           ; BSR set to: 0
 27981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 27982  005F04  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 27983  005F06  D005               	goto	u16520
 27984  005F08  51B5               	movf	(_prec+1)& (0+255),w,b
 27985  005F0A  E109               	bnz	l3109
 27986  005F0C  05B4               	decf	_prec& (0+255),w,b
 27987  005F0E  B0D8               	btfsc	status,0,c
 27988  005F10  D006               	goto	l3109
 27989  005F12                     u16520:
 27990                           
 27991                           ; BSR set to: 0
 27992  005F12  0E00               	movlw	0
 27993  005F14  0101               	movlb	1	; () banked
 27994  005F16  6F15               	movwf	(dtoa@p+1)& (0+255),b
 27995  005F18  0E01               	movlw	1
 27996  005F1A  6F14               	movwf	dtoa@p& (0+255),b
 27997  005F1C  D006               	goto	l3111
 27998  005F1E                     l3109:
 27999                           
 28000                           ; BSR set to: 0
 28001  005F1E  0060  F2D0  F114   	movff	_prec,dtoa@p
 28002  005F24  0060  F2D4  F115   	movff	_prec+1,dtoa@p+1
 28003  005F2A                     l3111:
 28004                           
 28005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 28006  005F2A  0060  F2C8  F116   	movff	_width,dtoa@w
 28007  005F30  0060  F2CC  F117   	movff	_width+1,dtoa@w+1
 28008                           
 28009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 28010  005F36  0101               	movlb	1	; () banked
 28011  005F38  5118               	movf	dtoa@s& (0+255),w,b
 28012  005F3A  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 28013  005F3C  A4D8               	btfss	status,2,c
 28014  005F3E  D003               	goto	u16540
 28015                           
 28016                           ; BSR set to: 1
 28017  005F40  0100               	movlb	0	; () banked
 28018  005F42  A5B6               	btfss	_flags& (0+255),2,b
 28019  005F44  D004               	goto	l16451
 28020  005F46                     u16540:
 28021                           
 28022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 28023  005F46  0101               	movlb	1	; () banked
 28024  005F48  0716               	decf	dtoa@w& (0+255),f,b
 28025  005F4A  A0D8               	btfss	status,0,c
 28026  005F4C  0717               	decf	(dtoa@w+1)& (0+255),f,b
 28027  005F4E                     l16451:
 28028                           
 28029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 28030  005F4E  0E00               	movlw	0
 28031  005F50  0101               	movlb	1	; () banked
 28032  005F52  6F23               	movwf	(dtoa@i+1)& (0+255),b
 28033  005F54  0E1F               	movlw	31
 28034  005F56  6F22               	movwf	dtoa@i& (0+255),b
 28035                           
 28036                           ; BSR set to: 1
 28037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 28038  005F58  0E00               	movlw	0
 28039  005F5A  0102               	movlb	2	; () banked
 28040  005F5C  6F7A               	movwf	(_dbuf+31)& (0+255),b
 28041                           
 28042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28043  005F5E  D0A2               	goto	l16465
 28044  005F60                     l16455:
 28045                           
 28046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 28047  005F60  0101               	movlb	1	; () banked
 28048  005F62  0722               	decf	dtoa@i& (0+255),f,b
 28049  005F64  A0D8               	btfss	status,0,c
 28050  005F66  0723               	decf	(dtoa@i+1)& (0+255),f,b
 28051                           
 28052                           ; BSR set to: 1
 28053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 28054  005F68  0E5B               	movlw	low _dbuf
 28055  005F6A  2522               	addwf	dtoa@i& (0+255),w,b
 28056  005F6C  6ED9               	movwf	fsr2l,c
 28057  005F6E  0E02               	movlw	high _dbuf
 28058  005F70  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 28059  005F72  6EDA               	movwf	fsr2h,c
 28060  005F74  0060  F468  F08B   	movff	dtoa@n,___aomod@dividend
 28061  005F7A  0060  F46C  F08C   	movff	dtoa@n+1,___aomod@dividend+1
 28062  005F80  0060  F470  F08D   	movff	dtoa@n+2,___aomod@dividend+2
 28063  005F86  0060  F474  F08E   	movff	dtoa@n+3,___aomod@dividend+3
 28064  005F8C  0060  F478  F08F   	movff	dtoa@n+4,___aomod@dividend+4
 28065  005F92  0060  F47C  F090   	movff	dtoa@n+5,___aomod@dividend+5
 28066  005F98  0060  F480  F091   	movff	dtoa@n+6,___aomod@dividend+6
 28067  005F9E  0060  F484  F092   	movff	dtoa@n+7,___aomod@dividend+7
 28068  005FA4  0E0A               	movlw	10
 28069  005FA6  0100               	movlb	0	; () banked
 28070  005FA8  6F93               	movwf	___aomod@divisor& (0+255),b
 28071  005FAA  0E00               	movlw	0
 28072  005FAC  6F94               	movwf	(___aomod@divisor+1)& (0+255),b
 28073  005FAE  0E00               	movlw	0
 28074  005FB0  6F95               	movwf	(___aomod@divisor+2)& (0+255),b
 28075  005FB2  0E00               	movlw	0
 28076  005FB4  6F96               	movwf	(___aomod@divisor+3)& (0+255),b
 28077  005FB6  0E00               	movlw	0
 28078  005FB8  6F97               	movwf	(___aomod@divisor+4)& (0+255),b
 28079  005FBA  0E00               	movlw	0
 28080  005FBC  6F98               	movwf	(___aomod@divisor+5)& (0+255),b
 28081  005FBE  0E00               	movlw	0
 28082  005FC0  6F99               	movwf	(___aomod@divisor+6)& (0+255),b
 28083  005FC2  0E00               	movlw	0
 28084  005FC4  6F9A               	movwf	(___aomod@divisor+7)& (0+255),b
 28085  005FC6  EC7E  F03B         	call	___aomod	;wreg free
 28086  005FCA  0060  F22C  F10A   	movff	?___aomod,??_dtoa
 28087  005FD0  0060  F230  F10B   	movff	?___aomod+1,??_dtoa+1
 28088  005FD6  0060  F234  F10C   	movff	?___aomod+2,??_dtoa+2
 28089  005FDC  0060  F238  F10D   	movff	?___aomod+3,??_dtoa+3
 28090  005FE2  0060  F23C  F10E   	movff	?___aomod+4,??_dtoa+4
 28091  005FE8  0060  F240  F10F   	movff	?___aomod+5,??_dtoa+5
 28092  005FEE  0060  F244  F110   	movff	?___aomod+6,??_dtoa+6
 28093  005FF4  0060  F248  F111   	movff	?___aomod+7,??_dtoa+7
 28094  005FFA  0060  F428  F09D   	movff	??_dtoa,abs@a
 28095  006000  0060  F430  F09E   	movff	??_dtoa+2,abs@a+1
 28096  006006  EC50  F04C         	call	_abs	;wreg free
 28097  00600A  519D               	movf	?_abs& (0+255),w,b
 28098  00600C  0F30               	addlw	48
 28099  00600E  6EDF               	movwf	indf2,c
 28100                           
 28101                           ; BSR set to: 0
 28102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 28103  006010  0101               	movlb	1	; () banked
 28104  006012  0714               	decf	dtoa@p& (0+255),f,b
 28105  006014  A0D8               	btfss	status,0,c
 28106  006016  0715               	decf	(dtoa@p+1)& (0+255),f,b
 28107                           
 28108                           ; BSR set to: 1
 28109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 28110  006018  0716               	decf	dtoa@w& (0+255),f,b
 28111  00601A  A0D8               	btfss	status,0,c
 28112  00601C  0717               	decf	(dtoa@w+1)& (0+255),f,b
 28113                           
 28114                           ; BSR set to: 1
 28115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 28116  00601E  0060  F468  F08B   	movff	dtoa@n,___aodiv@dividend
 28117  006024  0060  F46C  F08C   	movff	dtoa@n+1,___aodiv@dividend+1
 28118  00602A  0060  F470  F08D   	movff	dtoa@n+2,___aodiv@dividend+2
 28119  006030  0060  F474  F08E   	movff	dtoa@n+3,___aodiv@dividend+3
 28120  006036  0060  F478  F08F   	movff	dtoa@n+4,___aodiv@dividend+4
 28121  00603C  0060  F47C  F090   	movff	dtoa@n+5,___aodiv@dividend+5
 28122  006042  0060  F480  F091   	movff	dtoa@n+6,___aodiv@dividend+6
 28123  006048  0060  F484  F092   	movff	dtoa@n+7,___aodiv@dividend+7
 28124  00604E  0E0A               	movlw	10
 28125  006050  0100               	movlb	0	; () banked
 28126  006052  6F93               	movwf	___aodiv@divisor& (0+255),b
 28127  006054  0E00               	movlw	0
 28128  006056  6F94               	movwf	(___aodiv@divisor+1)& (0+255),b
 28129  006058  0E00               	movlw	0
 28130  00605A  6F95               	movwf	(___aodiv@divisor+2)& (0+255),b
 28131  00605C  0E00               	movlw	0
 28132  00605E  6F96               	movwf	(___aodiv@divisor+3)& (0+255),b
 28133  006060  0E00               	movlw	0
 28134  006062  6F97               	movwf	(___aodiv@divisor+4)& (0+255),b
 28135  006064  0E00               	movlw	0
 28136  006066  6F98               	movwf	(___aodiv@divisor+5)& (0+255),b
 28137  006068  0E00               	movlw	0
 28138  00606A  6F99               	movwf	(___aodiv@divisor+6)& (0+255),b
 28139  00606C  0E00               	movlw	0
 28140  00606E  6F9A               	movwf	(___aodiv@divisor+7)& (0+255),b
 28141  006070  EC26  F03A         	call	___aodiv	;wreg free
 28142  006074  0060  F22C  F11A   	movff	?___aodiv,dtoa@n
 28143  00607A  0060  F230  F11B   	movff	?___aodiv+1,dtoa@n+1
 28144  006080  0060  F234  F11C   	movff	?___aodiv+2,dtoa@n+2
 28145  006086  0060  F238  F11D   	movff	?___aodiv+3,dtoa@n+3
 28146  00608C  0060  F23C  F11E   	movff	?___aodiv+4,dtoa@n+4
 28147  006092  0060  F240  F11F   	movff	?___aodiv+5,dtoa@n+5
 28148  006098  0060  F244  F120   	movff	?___aodiv+6,dtoa@n+6
 28149  00609E  0060  F248  F121   	movff	?___aodiv+7,dtoa@n+7
 28150  0060A4                     l16465:
 28151                           
 28152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28153  0060A4  0101               	movlb	1	; () banked
 28154  0060A6  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
 28155  0060A8  D020               	goto	u16590
 28156  0060AA  5123               	movf	(dtoa@i+1)& (0+255),w,b
 28157  0060AC  E103               	bnz	u16550
 28158  0060AE  0522               	decf	dtoa@i& (0+255),w,b
 28159  0060B0  A0D8               	btfss	status,0,c
 28160  0060B2  D01B               	goto	u16590
 28161  0060B4                     u16550:
 28162                           
 28163                           ; BSR set to: 1
 28164  0060B4  511A               	movf	dtoa@n& (0+255),w,b
 28165  0060B6  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
 28166  0060B8  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
 28167  0060BA  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
 28168  0060BC  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
 28169  0060BE  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
 28170  0060C0  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
 28171  0060C2  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
 28172  0060C4  A4D8               	btfss	status,2,c
 28173  0060C6  D74C               	goto	l16455
 28174                           
 28175                           ; BSR set to: 1
 28176  0060C8  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
 28177  0060CA  D005               	goto	u16570
 28178  0060CC  5115               	movf	(dtoa@p+1)& (0+255),w,b
 28179  0060CE  E102               	bnz	u16571
 28180  0060D0  0514               	decf	dtoa@p& (0+255),w,b
 28181  0060D2  B0D8               	btfsc	status,0,c
 28182  0060D4                     u16571:
 28183  0060D4  D745               	goto	l16455
 28184  0060D6                     u16570:
 28185                           
 28186                           ; BSR set to: 1
 28187  0060D6  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
 28188  0060D8  D008               	goto	u16590
 28189  0060DA  5117               	movf	(dtoa@w+1)& (0+255),w,b
 28190  0060DC  E103               	bnz	u16580
 28191  0060DE  0516               	decf	dtoa@w& (0+255),w,b
 28192  0060E0  A0D8               	btfss	status,0,c
 28193  0060E2  D003               	goto	u16590
 28194  0060E4                     u16580:
 28195                           
 28196                           ; BSR set to: 1
 28197  0060E4  0100               	movlb	0	; () banked
 28198  0060E6  B3B6               	btfsc	_flags& (0+255),1,b
 28199  0060E8  D73B               	goto	l16455
 28200  0060EA                     u16590:
 28201                           
 28202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 28203  0060EA  0101               	movlb	1	; () banked
 28204  0060EC  5118               	movf	dtoa@s& (0+255),w,b
 28205  0060EE  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 28206  0060F0  A4D8               	btfss	status,2,c
 28207  0060F2  D003               	goto	u16610
 28208                           
 28209                           ; BSR set to: 1
 28210  0060F4  0100               	movlb	0	; () banked
 28211  0060F6  A5B6               	btfss	_flags& (0+255),2,b
 28212  0060F8  D019               	goto	l16489
 28213  0060FA                     u16610:
 28214                           
 28215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 28216  0060FA  0101               	movlb	1	; () banked
 28217  0060FC  0722               	decf	dtoa@i& (0+255),f,b
 28218  0060FE  A0D8               	btfss	status,0,c
 28219  006100  0723               	decf	(dtoa@i+1)& (0+255),f,b
 28220                           
 28221                           ; BSR set to: 1
 28222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 28223  006102  5118               	movf	dtoa@s& (0+255),w,b
 28224  006104  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 28225  006106  A4D8               	btfss	status,2,c
 28226  006108  D004               	goto	l16485
 28227                           
 28228                           ; BSR set to: 1
 28229  00610A  0E00               	movlw	0
 28230  00610C  6F13               	movwf	(_dtoa$4899+1)& (0+255),b
 28231  00610E  0E2B               	movlw	43
 28232  006110  D003               	goto	L53
 28233  006112                     l16485:
 28234                           
 28235                           ; BSR set to: 1
 28236  006112  0E00               	movlw	0
 28237  006114  6F13               	movwf	(_dtoa$4899+1)& (0+255),b
 28238  006116  0E2D               	movlw	45
 28239  006118                     L53:
 28240  006118  6F12               	movwf	_dtoa$4899& (0+255),b
 28241                           
 28242                           ; BSR set to: 1
 28243  00611A  0E5B               	movlw	low _dbuf
 28244  00611C  2522               	addwf	dtoa@i& (0+255),w,b
 28245  00611E  6ED9               	movwf	fsr2l,c
 28246  006120  0E02               	movlw	high _dbuf
 28247  006122  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 28248  006124  6EDA               	movwf	fsr2h,c
 28249  006126  0060  F44B  FFDF   	movff	_dtoa$4899,indf2
 28250  00612C                     l16489:
 28251                           
 28252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 28253  00612C  0060  F400  F09D   	movff	dtoa@fp,pad@fp
 28254  006132  0060  F404  F09E   	movff	dtoa@fp+1,pad@fp+1
 28255  006138  0E5B               	movlw	low _dbuf
 28256  00613A  0101               	movlb	1	; () banked
 28257  00613C  2522               	addwf	dtoa@i& (0+255),w,b
 28258  00613E  0100               	movlb	0	; () banked
 28259  006140  6F9F               	movwf	pad@buf& (0+255),b
 28260  006142  0E02               	movlw	high _dbuf
 28261  006144  0101               	movlb	1	; () banked
 28262  006146  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 28263  006148  0100               	movlb	0	; () banked
 28264  00614A  6FA0               	movwf	(pad@buf+1)& (0+255),b
 28265  00614C  0060  F458  F0A1   	movff	dtoa@w,pad@p
 28266  006152  0060  F45C  F0A2   	movff	dtoa@w+1,pad@p+1
 28267  006158  EC20  F041         	call	_pad	;wreg free
 28268  00615C  0060  F274  F100   	movff	?_pad,?_dtoa
 28269  006162  0060  F278  F101   	movff	?_pad+1,?_dtoa+1
 28270                           
 28271                           ; BSR set to: 0
 28272  006168  0012               	return		;funcret
 28273  00616A                     __end_of_dtoa:
 28274                           	opt callstack 0
 28275                           
 28276 ;; *************** function _pad *****************
 28277 ;; Defined at:
 28278 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 28279 ;; Parameters:    Size  Location     Type
 28280 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
 28281 ;;		 -> sprintf@f(6), NULL(0), 
 28282 ;;  buf             2   63[BANK0 ] PTR unsigned char 
 28283 ;;		 -> dbuf(32), 
 28284 ;;  p               2   65[BANK0 ] int 
 28285 ;; Auto vars:     Size  Location     Type
 28286 ;;  w               2   70[BANK0 ] int 
 28287 ;;  i               2   68[BANK0 ] int 
 28288 ;; Return value:  Size  Location     Type
 28289 ;;                  2   61[BANK0 ] int 
 28290 ;; Registers used:
 28291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28292 ;; Tracked objects:
 28293 ;;		On entry : 3F/0
 28294 ;;		On exit  : 3F/0
 28295 ;;		Unchanged: 0/0
 28296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28300 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28301 ;;Total ram usage:       11 bytes
 28302 ;; Hardware stack levels used:    1
 28303 ;; Hardware stack levels required when called:   21
 28304 ;; This function calls:
 28305 ;;		_fputc
 28306 ;;		_fputs
 28307 ;;		_strlen
 28308 ;; This function is called by:
 28309 ;;		_dtoa
 28310 ;;		_xtoa
 28311 ;; This function uses a non-reentrant model
 28312 ;;
 28313                           
 28314                           	psect	text120
 28315  008240                     __ptext120:
 28316                           	opt callstack 0
 28317  008240                     _pad:
 28318                           	opt callstack 5
 28319                           
 28320                           ; BSR set to: 0
 28321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;incstack = 0
 28325  008240  A1B6               	btfss	_flags& (0+255),0,b
 28326  008242  D00E               	goto	l16267
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 28330  008244  0060  F27C  F096   	movff	pad@buf,fputs@s
 28331  00824A  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 28332  008250  0060  F274  F098   	movff	pad@fp,fputs@fp
 28333  008256  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 28334  00825C  EC30  F04C         	call	_fputs	;wreg free
 28335  008260                     l16267:
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 28339  008260  BFA2               	btfsc	(pad@p+1)& (0+255),7,b
 28340  008262  D007               	goto	l16271
 28341                           
 28342                           ; BSR set to: 0
 28343  008264  0060  F284  F0A6   	movff	pad@p,pad@w
 28344  00826A  0060  F288  F0A7   	movff	pad@p+1,pad@w+1
 28345  008270  D004               	goto	l3098
 28346  008272                     l16271:
 28347                           
 28348                           ; BSR set to: 0
 28349  008272  0E00               	movlw	0
 28350  008274  6FA7               	movwf	(pad@w+1)& (0+255),b
 28351  008276  0E00               	movlw	0
 28352  008278  6FA6               	movwf	pad@w& (0+255),b
 28353  00827A                     l3098:
 28354                           
 28355                           ; BSR set to: 0
 28356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 28357  00827A  0E00               	movlw	0
 28358  00827C  6FA5               	movwf	(pad@i+1)& (0+255),b
 28359  00827E  0E00               	movlw	0
 28360  008280  6FA4               	movwf	pad@i& (0+255),b
 28361                           
 28362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 28363  008282  D00F               	goto	l16277
 28364  008284                     l16273:
 28365                           
 28366                           ; BSR set to: 0
 28367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 28368  008284  0E00               	movlw	0
 28369  008286  6F8E               	movwf	(fputc@c+1)& (0+255),b
 28370  008288  0E20               	movlw	32
 28371  00828A  6F8D               	movwf	fputc@c& (0+255),b
 28372  00828C  0060  F274  F08F   	movff	pad@fp,fputc@fp
 28373  008292  0060  F278  F090   	movff	pad@fp+1,fputc@fp+1
 28374  008298  ECD2  F041         	call	_fputc	;wreg free
 28375                           
 28376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 28377  00829C  0100               	movlb	0	; () banked
 28378  00829E  4BA4               	infsnz	pad@i& (0+255),f,b
 28379  0082A0  2BA5               	incf	(pad@i+1)& (0+255),f,b
 28380  0082A2                     l16277:
 28381                           
 28382                           ; BSR set to: 0
 28383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 28384  0082A2  51A6               	movf	pad@w& (0+255),w,b
 28385  0082A4  5DA4               	subwf	pad@i& (0+255),w,b
 28386  0082A6  51A5               	movf	(pad@i+1)& (0+255),w,b
 28387  0082A8  0A80               	xorlw	128
 28388  0082AA  6FA3               	movwf	??_pad& (0+255),b
 28389  0082AC  51A7               	movf	(pad@w+1)& (0+255),w,b
 28390  0082AE  0A80               	xorlw	128
 28391  0082B0  59A3               	subwfb	??_pad& (0+255),w,b
 28392  0082B2  A0D8               	btfss	status,0,c
 28393  0082B4  D7E7               	goto	l16273
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 28397  0082B6  B1B6               	btfsc	_flags& (0+255),0,b
 28398  0082B8  D00E               	goto	l16281
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 28402  0082BA  0060  F27C  F096   	movff	pad@buf,fputs@s
 28403  0082C0  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 28404  0082C6  0060  F274  F098   	movff	pad@fp,fputs@fp
 28405  0082CC  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 28406  0082D2  EC30  F04C         	call	_fputs	;wreg free
 28407  0082D6                     l16281:
 28408                           
 28409                           ; BSR set to: 0
 28410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 28411  0082D6  0060  F27C  F08B   	movff	pad@buf,strlen@s
 28412  0082DC  0060  F280  F08C   	movff	pad@buf+1,strlen@s+1
 28413  0082E2  EC99  F04E         	call	_strlen	;wreg free
 28414  0082E6  51A6               	movf	pad@w& (0+255),w,b
 28415  0082E8  258B               	addwf	?_strlen& (0+255),w,b
 28416  0082EA  6F9D               	movwf	?_pad& (0+255),b
 28417  0082EC  51A7               	movf	(pad@w+1)& (0+255),w,b
 28418  0082EE  218C               	addwfc	(?_strlen+1)& (0+255),w,b
 28419  0082F0  6F9E               	movwf	(?_pad+1)& (0+255),b
 28420                           
 28421                           ; BSR set to: 0
 28422  0082F2  0012               	return		;funcret
 28423  0082F4                     __end_of_pad:
 28424                           	opt callstack 0
 28425                           
 28426 ;; *************** function _strlen *****************
 28427 ;; Defined at:
 28428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 28429 ;; Parameters:    Size  Location     Type
 28430 ;;  s               2   43[BANK0 ] PTR const unsigned char 
 28431 ;;		 -> dbuf(32), 
 28432 ;; Auto vars:     Size  Location     Type
 28433 ;;  a               2   45[BANK0 ] PTR const unsigned char 
 28434 ;;		 -> dbuf(32), 
 28435 ;; Return value:  Size  Location     Type
 28436 ;;                  2   43[BANK0 ] unsigned int 
 28437 ;; Registers used:
 28438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28439 ;; Tracked objects:
 28440 ;;		On entry : 3F/0
 28441 ;;		On exit  : 3F/0
 28442 ;;		Unchanged: 0/0
 28443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28447 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28448 ;;Total ram usage:        4 bytes
 28449 ;; Hardware stack levels used:    1
 28450 ;; Hardware stack levels required when called:   17
 28451 ;; This function calls:
 28452 ;;		Nothing
 28453 ;; This function is called by:
 28454 ;;		_pad
 28455 ;; This function uses a non-reentrant model
 28456 ;;
 28457                           
 28458                           	psect	text121
 28459  009D32                     __ptext121:
 28460                           	opt callstack 0
 28461  009D32                     _strlen:
 28462                           	opt callstack 8
 28463                           
 28464                           ; BSR set to: 0
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;incstack = 0
 28468  009D32  0060  F22C  F08D   	movff	strlen@s,strlen@a
 28469  009D38  0060  F230  F08E   	movff	strlen@s+1,strlen@a+1
 28470  009D3E  D002               	goto	l16239
 28471  009D40                     l16237:
 28472                           
 28473                           ; BSR set to: 0
 28474  009D40  4B8B               	infsnz	strlen@s& (0+255),f,b
 28475  009D42  2B8C               	incf	(strlen@s+1)& (0+255),f,b
 28476  009D44                     l16239:
 28477                           
 28478                           ; BSR set to: 0
 28479  009D44  0060  F22F  FFD9   	movff	strlen@s,fsr2l
 28480  009D4A  0060  F233  FFDA   	movff	strlen@s+1,fsr2h
 28481  009D50  50DF               	movf	indf2,w,c
 28482  009D52  A4D8               	btfss	status,2,c
 28483  009D54  D7F5               	goto	l16237
 28484                           
 28485                           ; BSR set to: 0
 28486  009D56  518D               	movf	strlen@a& (0+255),w,b
 28487  009D58  5D8B               	subwf	strlen@s& (0+255),w,b
 28488  009D5A  6F8B               	movwf	?_strlen& (0+255),b
 28489  009D5C  518E               	movf	(strlen@a+1)& (0+255),w,b
 28490  009D5E  598C               	subwfb	(strlen@s+1)& (0+255),w,b
 28491  009D60  6F8C               	movwf	(?_strlen+1)& (0+255),b
 28492                           
 28493                           ; BSR set to: 0
 28494  009D62  0012               	return		;funcret
 28495  009D64                     __end_of_strlen:
 28496                           	opt callstack 0
 28497                           
 28498 ;; *************** function _fputs *****************
 28499 ;; Defined at:
 28500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 28501 ;; Parameters:    Size  Location     Type
 28502 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 28503 ;;		 -> dbuf(32), 
 28504 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
 28505 ;;		 -> sprintf@f(6), NULL(0), 
 28506 ;; Auto vars:     Size  Location     Type
 28507 ;;  i               2   59[BANK0 ] int 
 28508 ;;  c               1   58[BANK0 ] unsigned char 
 28509 ;; Return value:  Size  Location     Type
 28510 ;;                  2   54[BANK0 ] int 
 28511 ;; Registers used:
 28512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28513 ;; Tracked objects:
 28514 ;;		On entry : 3F/0
 28515 ;;		On exit  : 3F/0
 28516 ;;		Unchanged: 0/0
 28517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28519 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28521 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28522 ;;Total ram usage:        7 bytes
 28523 ;; Hardware stack levels used:    1
 28524 ;; Hardware stack levels required when called:   20
 28525 ;; This function calls:
 28526 ;;		_fputc
 28527 ;; This function is called by:
 28528 ;;		_pad
 28529 ;; This function uses a non-reentrant model
 28530 ;;
 28531                           
 28532                           	psect	text122
 28533  009860                     __ptext122:
 28534                           	opt callstack 0
 28535  009860                     _fputs:
 28536                           	opt callstack 5
 28537                           
 28538                           ; BSR set to: 0
 28539                           
 28540                           ; BSR set to: 0
 28541                           ;incstack = 0
 28542  009860  0E00               	movlw	0
 28543  009862  6F9C               	movwf	(fputs@i+1)& (0+255),b
 28544  009864  0E00               	movlw	0
 28545  009866  6F9B               	movwf	fputs@i& (0+255),b
 28546  009868  D00F               	goto	l16233
 28547  00986A                     l16229:
 28548                           
 28549                           ; BSR set to: 0
 28550  00986A  0060  F268  F08D   	movff	fputs@c,fputc@c
 28551  009870  6B8E               	clrf	(fputc@c+1)& (0+255),b
 28552  009872  0060  F260  F08F   	movff	fputs@fp,fputc@fp
 28553  009878  0060  F264  F090   	movff	fputs@fp+1,fputc@fp+1
 28554  00987E  ECD2  F041         	call	_fputc	;wreg free
 28555  009882  0100               	movlb	0	; () banked
 28556  009884  4B9B               	infsnz	fputs@i& (0+255),f,b
 28557  009886  2B9C               	incf	(fputs@i+1)& (0+255),f,b
 28558  009888                     l16233:
 28559                           
 28560                           ; BSR set to: 0
 28561  009888  519B               	movf	fputs@i& (0+255),w,b
 28562  00988A  2596               	addwf	fputs@s& (0+255),w,b
 28563  00988C  6ED9               	movwf	fsr2l,c
 28564  00988E  519C               	movf	(fputs@i+1)& (0+255),w,b
 28565  009890  2197               	addwfc	(fputs@s+1)& (0+255),w,b
 28566  009892  6EDA               	movwf	fsr2h,c
 28567  009894  50DF               	movf	indf2,w,c
 28568  009896  6F9A               	movwf	fputs@c& (0+255),b
 28569  009898  519A               	movf	fputs@c& (0+255),w,b
 28570  00989A  B4D8               	btfsc	status,2,c
 28571  00989C  0012               	return	
 28572  00989E  D7E5               	goto	l16229
 28573  0098A0                     __end_of_fputs:
 28574                           	opt callstack 0
 28575                           
 28576 ;; *************** function _fputc *****************
 28577 ;; Defined at:
 28578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 28579 ;; Parameters:    Size  Location     Type
 28580 ;;  c               2   45[BANK0 ] int 
 28581 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
 28582 ;;		 -> sprintf@f(6), NULL(0), 
 28583 ;; Auto vars:     Size  Location     Type
 28584 ;;		None
 28585 ;; Return value:  Size  Location     Type
 28586 ;;                  2   45[BANK0 ] int 
 28587 ;; Registers used:
 28588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28589 ;; Tracked objects:
 28590 ;;		On entry : 3F/0
 28591 ;;		On exit  : 6/0
 28592 ;;		Unchanged: 0/0
 28593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28596 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28597 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28598 ;;Total ram usage:        9 bytes
 28599 ;; Hardware stack levels used:    1
 28600 ;; Hardware stack levels required when called:   19
 28601 ;; This function calls:
 28602 ;;		_putch
 28603 ;; This function is called by:
 28604 ;;		_pad
 28605 ;;		_vfpfcnvrt
 28606 ;;		_fputs
 28607 ;; This function uses a non-reentrant model
 28608 ;;
 28609                           
 28610                           	psect	text123
 28611  0083A4                     __ptext123:
 28612                           	opt callstack 0
 28613  0083A4                     _fputc:
 28614                           	opt callstack 5
 28615                           
 28616                           ; BSR set to: 0
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;incstack = 0
 28620  0083A4  518F               	movf	fputc@fp& (0+255),w,b
 28621  0083A6  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28622  0083A8  B4D8               	btfsc	status,2,c
 28623  0083AA  D004               	goto	u16030
 28624                           
 28625                           ; BSR set to: 0
 28626  0083AC  518F               	movf	fputc@fp& (0+255),w,b
 28627  0083AE  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28628  0083B0  A4D8               	btfss	status,2,c
 28629  0083B2  D004               	goto	l16213
 28630  0083B4                     u16030:
 28631                           
 28632                           ; BSR set to: 0
 28633  0083B4  518D               	movf	fputc@c& (0+255),w,b
 28634  0083B6  ECAE  F052         	call	_putch
 28635  0083BA  0012               	return	
 28636  0083BC                     l16213:
 28637                           
 28638                           ; BSR set to: 0
 28639  0083BC  EE20 F004          	lfsr	2,4
 28640  0083C0  518F               	movf	fputc@fp& (0+255),w,b
 28641  0083C2  26D9               	addwf	fsr2l,f,c
 28642  0083C4  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28643  0083C6  22DA               	addwfc	fsr2h,f,c
 28644  0083C8  50DE               	movf	postinc2,w,c
 28645  0083CA  10DE               	iorwf	postinc2,w,c
 28646  0083CC  B4D8               	btfsc	status,2,c
 28647  0083CE  D016               	goto	u16050
 28648                           
 28649                           ; BSR set to: 0
 28650  0083D0  EE20 F004          	lfsr	2,4
 28651  0083D4  518F               	movf	fputc@fp& (0+255),w,b
 28652  0083D6  26D9               	addwf	fsr2l,f,c
 28653  0083D8  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28654  0083DA  22DA               	addwfc	fsr2h,f,c
 28655  0083DC  EE10 F002          	lfsr	1,2
 28656  0083E0  518F               	movf	fputc@fp& (0+255),w,b
 28657  0083E2  26E1               	addwf	fsr1l,f,c
 28658  0083E4  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28659  0083E6  22E2               	addwfc	fsr1h,f,c
 28660  0083E8  50DE               	movf	postinc2,w,c
 28661  0083EA  5CE6               	subwf	postinc1,w,c
 28662  0083EC  50E6               	movf	postinc1,w,c
 28663  0083EE  0A80               	xorlw	128
 28664  0083F0  6F95               	movwf	(??_fputc+4)& (0+255),b
 28665  0083F2  50DE               	movf	postinc2,w,c
 28666  0083F4  0A80               	xorlw	128
 28667  0083F6  5995               	subwfb	(??_fputc+4)& (0+255),w,b
 28668  0083F8  B0D8               	btfsc	status,0,c
 28669  0083FA  0012               	return	
 28670  0083FC                     u16050:
 28671                           
 28672                           ; BSR set to: 0
 28673  0083FC  EE20 F002          	lfsr	2,2
 28674  008400  518F               	movf	fputc@fp& (0+255),w,b
 28675  008402  26D9               	addwf	fsr2l,f,c
 28676  008404  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28677  008406  22DA               	addwfc	fsr2h,f,c
 28678  008408  006F FF78  F091    	movff	postinc2,??_fputc
 28679  00840E  006F FF74  F092    	movff	postdec2,??_fputc+1
 28680  008414  0060  F23F  FFD9   	movff	fputc@fp,fsr2l
 28681  00841A  0060  F243  FFDA   	movff	fputc@fp+1,fsr2h
 28682  008420  006F FF78  F093    	movff	postinc2,??_fputc+2
 28683  008426  006F FF74  F094    	movff	postdec2,??_fputc+3
 28684  00842C  5191               	movf	??_fputc& (0+255),w,b
 28685  00842E  2593               	addwf	(??_fputc+2)& (0+255),w,b
 28686  008430  6ED9               	movwf	fsr2l,c
 28687  008432  5192               	movf	(??_fputc+1)& (0+255),w,b
 28688  008434  2194               	addwfc	(??_fputc+3)& (0+255),w,b
 28689  008436  6EDA               	movwf	fsr2h,c
 28690  008438  0060  F237  FFDF   	movff	fputc@c,indf2
 28691  00843E  EE20 F002          	lfsr	2,2
 28692  008442  518F               	movf	fputc@fp& (0+255),w,b
 28693  008444  26D9               	addwf	fsr2l,f,c
 28694  008446  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28695  008448  22DA               	addwfc	fsr2h,f,c
 28696  00844A  2ADE               	incf	postinc2,f,c
 28697  00844C  0E00               	movlw	0
 28698  00844E  22DD               	addwfc	postdec2,f,c
 28699  008450  0012               	return		;funcret
 28700  008452                     __end_of_fputc:
 28701                           	opt callstack 0
 28702                           
 28703 ;; *************** function _putch *****************
 28704 ;; Defined at:
 28705 ;;		line 38 in file "main.c"
 28706 ;; Parameters:    Size  Location     Type
 28707 ;;  byte            1    wreg     unsigned char 
 28708 ;; Auto vars:     Size  Location     Type
 28709 ;;  byte            1   44[BANK0 ] unsigned char 
 28710 ;; Return value:  Size  Location     Type
 28711 ;;                  1    wreg      void 
 28712 ;; Registers used:
 28713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28714 ;; Tracked objects:
 28715 ;;		On entry : 3F/0
 28716 ;;		On exit  : 3F/39
 28717 ;;		Unchanged: 0/0
 28718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28722 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28723 ;;Total ram usage:        1 bytes
 28724 ;; Hardware stack levels used:    1
 28725 ;; Hardware stack levels required when called:   18
 28726 ;; This function calls:
 28727 ;;		_UART1_Write
 28728 ;;		_UART1_is_tx_ready
 28729 ;; This function is called by:
 28730 ;;		_fputc
 28731 ;; This function uses a non-reentrant model
 28732 ;;
 28733                           
 28734                           	psect	text124
 28735  00A55C                     __ptext124:
 28736                           	opt callstack 0
 28737  00A55C                     _putch:
 28738                           	opt callstack 5
 28739                           
 28740                           ;incstack = 0
 28741                           ;putch@byte stored from wreg
 28742  00A55C  6F8C               	movwf	putch@byte& (0+255),b
 28743  00A55E                     
 28744                           ;main.c: 39:     while (!UART1_is_tx_ready());
 28745  00A55E  EC09  F053         	call	_UART1_is_tx_ready	;wreg free
 28746  00A562  0900               	iorlw	0
 28747  00A564  B4D8               	btfsc	status,2,c
 28748  00A566  D7FB               	goto	l16179
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;main.c: 40:     UART1_Write(byte);
 28752  00A568  518C               	movf	putch@byte& (0+255),w,b
 28753  00A56A  ECCE  F04B         	call	_UART1_Write
 28754                           
 28755                           ; BSR set to: 57
 28756  00A56E  0012               	return		;funcret
 28757  00A570                     __end_of_putch:
 28758                           	opt callstack 0
 28759                           
 28760 ;; *************** function _UART1_is_tx_ready *****************
 28761 ;; Defined at:
 28762 ;;		line 152 in file "mcc_generated_files/uart1.c"
 28763 ;; Parameters:    Size  Location     Type
 28764 ;;		None
 28765 ;; Auto vars:     Size  Location     Type
 28766 ;;		None
 28767 ;; Return value:  Size  Location     Type
 28768 ;;                  1    wreg      _Bool 
 28769 ;; Registers used:
 28770 ;;		wreg, status,2
 28771 ;; Tracked objects:
 28772 ;;		On entry : 0/0
 28773 ;;		On exit  : 3F/0
 28774 ;;		Unchanged: 0/0
 28775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28780 ;;Total ram usage:        0 bytes
 28781 ;; Hardware stack levels used:    1
 28782 ;; Hardware stack levels required when called:   17
 28783 ;; This function calls:
 28784 ;;		Nothing
 28785 ;; This function is called by:
 28786 ;;		_putch
 28787 ;; This function uses a non-reentrant model
 28788 ;;
 28789                           
 28790                           	psect	text125
 28791  00A612                     __ptext125:
 28792                           	opt callstack 0
 28793  00A612                     _UART1_is_tx_ready:
 28794                           	opt callstack 5
 28795                           
 28796                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 28797                           
 28798                           ; BSR set to: 57
 28799                           ;incstack = 0
 28800  00A612  0100               	movlb	0	; () banked
 28801  00A614  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28802  00A616  B4D8               	btfsc	status,2,c
 28803  00A618  D002               	goto	u15910
 28804  00A61A  0E01               	movlw	1
 28805  00A61C  0012               	return	
 28806  00A61E                     u15910:
 28807  00A61E  0E00               	movlw	0
 28808                           
 28809                           ; BSR set to: 0
 28810  00A620  0012               	return		;funcret
 28811  00A622                     __end_of_UART1_is_tx_ready:
 28812                           	opt callstack 0
 28813                           
 28814 ;; *************** function _UART1_Write *****************
 28815 ;; Defined at:
 28816 ;;		line 191 in file "mcc_generated_files/uart1.c"
 28817 ;; Parameters:    Size  Location     Type
 28818 ;;  txData          1    wreg     unsigned char 
 28819 ;; Auto vars:     Size  Location     Type
 28820 ;;  txData          1   43[BANK0 ] unsigned char 
 28821 ;; Return value:  Size  Location     Type
 28822 ;;                  1    wreg      void 
 28823 ;; Registers used:
 28824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28825 ;; Tracked objects:
 28826 ;;		On entry : 3F/0
 28827 ;;		On exit  : 3F/39
 28828 ;;		Unchanged: 0/0
 28829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28834 ;;Total ram usage:        1 bytes
 28835 ;; Hardware stack levels used:    1
 28836 ;; Hardware stack levels required when called:   17
 28837 ;; This function calls:
 28838 ;;		Nothing
 28839 ;; This function is called by:
 28840 ;;		_putch
 28841 ;; This function uses a non-reentrant model
 28842 ;;
 28843                           
 28844                           	psect	text126
 28845  00979C                     __ptext126:
 28846                           	opt callstack 0
 28847  00979C                     _UART1_Write:
 28848                           	opt callstack 5
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;incstack = 0
 28852                           ;UART1_Write@txData stored from wreg
 28853  00979C  6F8B               	movwf	UART1_Write@txData& (0+255),b
 28854  00979E                     
 28855                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28856                           
 28857                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28858  00979E  0100               	movlb	0	; () banked
 28859  0097A0  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28860  0097A2  B4D8               	btfsc	status,2,c
 28861  0097A4  D7FC               	goto	l16161
 28862                           
 28863                           ; BSR set to: 0
 28864                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 28865  0097A6  0139               	movlb	57	; () banked
 28866  0097A8  B993               	btfsc	147,4,b	;volatile
 28867  0097AA  D004               	goto	l456
 28868                           
 28869                           ; BSR set to: 57
 28870                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 28871  0097AC  0060  F22F  FDEA   	movff	UART1_Write@txData,15850	;volatile
 28872                           
 28873                           ;mcc_generated_files/uart1.c: 200:     }
 28874  0097B2  D012               	goto	l16177
 28875  0097B4                     l456:
 28876                           
 28877                           ; BSR set to: 57
 28878                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 28879  0097B4  9993               	bcf	147,4,b	;volatile
 28880                           
 28881                           ; BSR set to: 57
 28882                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 28883  0097B6  0E50               	movlw	low _uart1TxBuffer
 28884  0097B8  0100               	movlb	0	; () banked
 28885  0097BA  25D3               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 28886  0097BC  6ED9               	movwf	fsr2l,c
 28887  0097BE  6ADA               	clrf	fsr2h,c
 28888  0097C0  0E03               	movlw	high _uart1TxBuffer
 28889  0097C2  22DA               	addwfc	fsr2h,f,c
 28890  0097C4  0060  F22F  FFDF   	movff	UART1_Write@txData,indf2
 28891                           
 28892                           ; BSR set to: 0
 28893  0097CA  2BD3               	incf	_uart1TxHead& (0+255),f,b	;volatile
 28894                           
 28895                           ; BSR set to: 0
 28896                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 28897  0097CC  0E3F               	movlw	63
 28898  0097CE  65D3               	cpfsgt	_uart1TxHead& (0+255),b
 28899  0097D0  D002               	goto	l16175
 28900                           
 28901                           ; BSR set to: 0
 28902                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 28903  0097D2  0E00               	movlw	0
 28904  0097D4  6FD3               	movwf	_uart1TxHead& (0+255),b	;volatile
 28905  0097D6                     l16175:
 28906                           
 28907                           ; BSR set to: 0
 28908                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 28909  0097D6  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 28910  0097D8                     l16177:
 28911                           
 28912                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 28913  0097D8  0139               	movlb	57	; () banked
 28914  0097DA  8993               	bsf	147,4,b	;volatile
 28915                           
 28916                           ; BSR set to: 57
 28917  0097DC  0012               	return		;funcret
 28918  0097DE                     __end_of_UART1_Write:
 28919                           	opt callstack 0
 28920                           
 28921 ;; *************** function _abs *****************
 28922 ;; Defined at:
 28923 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 28924 ;; Parameters:    Size  Location     Type
 28925 ;;  a               2   61[BANK0 ] int 
 28926 ;; Auto vars:     Size  Location     Type
 28927 ;;		None
 28928 ;; Return value:  Size  Location     Type
 28929 ;;                  2   61[BANK0 ] int 
 28930 ;; Registers used:
 28931 ;;		wreg, status,2, status,0
 28932 ;; Tracked objects:
 28933 ;;		On entry : 3F/0
 28934 ;;		On exit  : 3F/0
 28935 ;;		Unchanged: 0/0
 28936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28940 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28941 ;;Total ram usage:        4 bytes
 28942 ;; Hardware stack levels used:    1
 28943 ;; Hardware stack levels required when called:   17
 28944 ;; This function calls:
 28945 ;;		Nothing
 28946 ;; This function is called by:
 28947 ;;		_dtoa
 28948 ;; This function uses a non-reentrant model
 28949 ;;
 28950                           
 28951                           	psect	text127
 28952  0098A0                     __ptext127:
 28953                           	opt callstack 0
 28954  0098A0                     _abs:
 28955                           	opt callstack 9
 28956                           
 28957                           ; BSR set to: 0
 28958                           
 28959                           ; BSR set to: 57
 28960                           ;incstack = 0
 28961  0098A0  BF9E               	btfsc	(abs@a+1)& (0+255),7,b
 28962  0098A2  D005               	goto	u16190
 28963  0098A4  519E               	movf	(abs@a+1)& (0+255),w,b
 28964  0098A6  E114               	bnz	l3876
 28965  0098A8  059D               	decf	abs@a& (0+255),w,b
 28966  0098AA  B0D8               	btfsc	status,0,c
 28967  0098AC  D011               	goto	l3876
 28968  0098AE                     u16190:
 28969                           
 28970                           ; BSR set to: 0
 28971  0098AE  0060  F274  F09F   	movff	abs@a,??_abs
 28972  0098B4  0060  F278  F0A0   	movff	abs@a+1,??_abs+1
 28973  0098BA  1F9F               	comf	??_abs& (0+255),f,b
 28974  0098BC  1FA0               	comf	(??_abs+1)& (0+255),f,b
 28975  0098BE  4B9F               	infsnz	??_abs& (0+255),f,b
 28976  0098C0  2BA0               	incf	(??_abs+1)& (0+255),f,b
 28977  0098C2  0060  F27C  F09D   	movff	??_abs,?_abs
 28978  0098C8  0060  F280  F09E   	movff	??_abs+1,?_abs+1
 28979  0098CE  0012               	return	
 28980  0098D0                     l3876:
 28981                           
 28982                           ; BSR set to: 0
 28983  0098D0  0060  F274  F09D   	movff	abs@a,?_abs
 28984  0098D6  0060  F278  F09E   	movff	abs@a+1,?_abs+1
 28985                           
 28986                           ; BSR set to: 0
 28987  0098DC  0012               	return		;funcret
 28988  0098DE                     __end_of_abs:
 28989                           	opt callstack 0
 28990                           
 28991 ;; *************** function ___aomod *****************
 28992 ;; Defined at:
 28993 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;  dividend        8   43[BANK0 ] long long 
 28996 ;;  divisor         8   51[BANK0 ] long long 
 28997 ;; Auto vars:     Size  Location     Type
 28998 ;;  sign            1   60[BANK0 ] unsigned char 
 28999 ;;  counter         1   59[BANK0 ] unsigned char 
 29000 ;; Return value:  Size  Location     Type
 29001 ;;                  8   43[BANK0 ] long long 
 29002 ;; Registers used:
 29003 ;;		wreg, status,2, status,0
 29004 ;; Tracked objects:
 29005 ;;		On entry : 3F/0
 29006 ;;		On exit  : 3F/0
 29007 ;;		Unchanged: 0/0
 29008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29009 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29012 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29013 ;;Total ram usage:       18 bytes
 29014 ;; Hardware stack levels used:    1
 29015 ;; Hardware stack levels required when called:   17
 29016 ;; This function calls:
 29017 ;;		Nothing
 29018 ;; This function is called by:
 29019 ;;		_dtoa
 29020 ;; This function uses a non-reentrant model
 29021 ;;
 29022                           
 29023                           	psect	text128
 29024  0076FC                     __ptext128:
 29025                           	opt callstack 0
 29026  0076FC                     ___aomod:
 29027                           	opt callstack 9
 29028                           
 29029                           ; BSR set to: 0
 29030                           
 29031                           ; BSR set to: 0
 29032                           ;incstack = 0
 29033  0076FC  0E00               	movlw	0
 29034  0076FE  6F9C               	movwf	___aomod@sign& (0+255),b
 29035                           
 29036                           ; BSR set to: 0
 29037  007700  AF92               	btfss	(___aomod@dividend+7)& (0+255),7,b
 29038  007702  D012               	goto	l16369
 29039                           
 29040                           ; BSR set to: 0
 29041  007704  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 29042  007706  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 29043  007708  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 29044  00770A  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 29045  00770C  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 29046  00770E  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 29047  007710  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 29048  007712  6D8B               	negf	___aomod@dividend& (0+255),b
 29049  007714  0E00               	movlw	0
 29050  007716  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 29051  007718  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 29052  00771A  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 29053  00771C  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 29054  00771E  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 29055  007720  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 29056  007722  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 29057                           
 29058                           ; BSR set to: 0
 29059  007724  0E01               	movlw	1
 29060  007726  6F9C               	movwf	___aomod@sign& (0+255),b
 29061  007728                     l16369:
 29062                           
 29063                           ; BSR set to: 0
 29064  007728  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 29065  00772A  D010               	goto	l16373
 29066                           
 29067                           ; BSR set to: 0
 29068  00772C  1F9A               	comf	(___aomod@divisor+7)& (0+255),f,b
 29069  00772E  1F99               	comf	(___aomod@divisor+6)& (0+255),f,b
 29070  007730  1F98               	comf	(___aomod@divisor+5)& (0+255),f,b
 29071  007732  1F97               	comf	(___aomod@divisor+4)& (0+255),f,b
 29072  007734  1F96               	comf	(___aomod@divisor+3)& (0+255),f,b
 29073  007736  1F95               	comf	(___aomod@divisor+2)& (0+255),f,b
 29074  007738  1F94               	comf	(___aomod@divisor+1)& (0+255),f,b
 29075  00773A  6D93               	negf	___aomod@divisor& (0+255),b
 29076  00773C  0E00               	movlw	0
 29077  00773E  2394               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 29078  007740  2395               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 29079  007742  2396               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 29080  007744  2397               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 29081  007746  2398               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 29082  007748  2399               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 29083  00774A  239A               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 29084  00774C                     l16373:
 29085                           
 29086                           ; BSR set to: 0
 29087  00774C  5193               	movf	___aomod@divisor& (0+255),w,b
 29088  00774E  1194               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 29089  007750  1195               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 29090  007752  1196               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 29091  007754  1197               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 29092  007756  1198               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 29093  007758  1199               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 29094  00775A  119A               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 29095  00775C  B4D8               	btfsc	status,2,c
 29096  00775E  D03C               	goto	l16389
 29097                           
 29098                           ; BSR set to: 0
 29099  007760  0E01               	movlw	1
 29100  007762  6F9B               	movwf	___aomod@counter& (0+255),b
 29101  007764  D00A               	goto	l16379
 29102  007766                     l16377:
 29103                           
 29104                           ; BSR set to: 0
 29105  007766  90D8               	bcf	status,0,c
 29106  007768  3793               	rlcf	___aomod@divisor& (0+255),f,b
 29107  00776A  3794               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 29108  00776C  3795               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 29109  00776E  3796               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 29110  007770  3797               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 29111  007772  3798               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 29112  007774  3799               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 29113  007776  379A               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 29114  007778  2B9B               	incf	___aomod@counter& (0+255),f,b
 29115  00777A                     l16379:
 29116                           
 29117                           ; BSR set to: 0
 29118  00777A  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 29119  00777C  D7F4               	goto	l16377
 29120  00777E                     u16390:
 29121                           
 29122                           ; BSR set to: 0
 29123  00777E  5193               	movf	___aomod@divisor& (0+255),w,b
 29124  007780  5D8B               	subwf	___aomod@dividend& (0+255),w,b
 29125  007782  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 29126  007784  598C               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 29127  007786  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 29128  007788  598D               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 29129  00778A  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 29130  00778C  598E               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 29131  00778E  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 29132  007790  598F               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 29133  007792  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 29134  007794  5990               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 29135  007796  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 29136  007798  5991               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 29137  00779A  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 29138  00779C  5992               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 29139  00779E  A0D8               	btfss	status,0,c
 29140  0077A0  D010               	goto	l16385
 29141                           
 29142                           ; BSR set to: 0
 29143  0077A2  5193               	movf	___aomod@divisor& (0+255),w,b
 29144  0077A4  5F8B               	subwf	___aomod@dividend& (0+255),f,b
 29145  0077A6  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 29146  0077A8  5B8C               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 29147  0077AA  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 29148  0077AC  5B8D               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 29149  0077AE  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 29150  0077B0  5B8E               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 29151  0077B2  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 29152  0077B4  5B8F               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 29153  0077B6  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 29154  0077B8  5B90               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 29155  0077BA  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 29156  0077BC  5B91               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 29157  0077BE  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 29158  0077C0  5B92               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 29159  0077C2                     l16385:
 29160                           
 29161                           ; BSR set to: 0
 29162  0077C2  90D8               	bcf	status,0,c
 29163  0077C4  339A               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 29164  0077C6  3399               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 29165  0077C8  3398               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 29166  0077CA  3397               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 29167  0077CC  3396               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 29168  0077CE  3395               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 29169  0077D0  3394               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 29170  0077D2  3393               	rrcf	___aomod@divisor& (0+255),f,b
 29171                           
 29172                           ; BSR set to: 0
 29173  0077D4  2F9B               	decfsz	___aomod@counter& (0+255),f,b
 29174  0077D6  D7D3               	goto	u16390
 29175  0077D8                     l16389:
 29176                           
 29177                           ; BSR set to: 0
 29178  0077D8  519C               	movf	___aomod@sign& (0+255),w,b
 29179  0077DA  B4D8               	btfsc	status,2,c
 29180  0077DC  D010               	goto	l16393
 29181                           
 29182                           ; BSR set to: 0
 29183  0077DE  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 29184  0077E0  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 29185  0077E2  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 29186  0077E4  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 29187  0077E6  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 29188  0077E8  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 29189  0077EA  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 29190  0077EC  6D8B               	negf	___aomod@dividend& (0+255),b
 29191  0077EE  0E00               	movlw	0
 29192  0077F0  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 29193  0077F2  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 29194  0077F4  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 29195  0077F6  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 29196  0077F8  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 29197  0077FA  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 29198  0077FC  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 29199  0077FE                     l16393:
 29200                           
 29201                           ; BSR set to: 0
 29202  0077FE  0060  F22C  F08B   	movff	___aomod@dividend,?___aomod
 29203  007804  0060  F230  F08C   	movff	___aomod@dividend+1,?___aomod+1
 29204  00780A  0060  F234  F08D   	movff	___aomod@dividend+2,?___aomod+2
 29205  007810  0060  F238  F08E   	movff	___aomod@dividend+3,?___aomod+3
 29206  007816  0060  F23C  F08F   	movff	___aomod@dividend+4,?___aomod+4
 29207  00781C  0060  F240  F090   	movff	___aomod@dividend+5,?___aomod+5
 29208  007822  0060  F244  F091   	movff	___aomod@dividend+6,?___aomod+6
 29209  007828  0060  F248  F092   	movff	___aomod@dividend+7,?___aomod+7
 29210                           
 29211                           ; BSR set to: 0
 29212  00782E  0012               	return		;funcret
 29213  007830                     __end_of___aomod:
 29214                           	opt callstack 0
 29215                           
 29216 ;; *************** function ___aodiv *****************
 29217 ;; Defined at:
 29218 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 29219 ;; Parameters:    Size  Location     Type
 29220 ;;  dividend        8   43[BANK0 ] long long 
 29221 ;;  divisor         8   51[BANK0 ] long long 
 29222 ;; Auto vars:     Size  Location     Type
 29223 ;;  quotient        8   61[BANK0 ] long long 
 29224 ;;  sign            1   60[BANK0 ] unsigned char 
 29225 ;;  counter         1   59[BANK0 ] unsigned char 
 29226 ;; Return value:  Size  Location     Type
 29227 ;;                  8   43[BANK0 ] long long 
 29228 ;; Registers used:
 29229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29230 ;; Tracked objects:
 29231 ;;		On entry : 3F/0
 29232 ;;		On exit  : 3F/0
 29233 ;;		Unchanged: 0/0
 29234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29235 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29236 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29238 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29239 ;;Total ram usage:       26 bytes
 29240 ;; Hardware stack levels used:    1
 29241 ;; Hardware stack levels required when called:   17
 29242 ;; This function calls:
 29243 ;;		Nothing
 29244 ;; This function is called by:
 29245 ;;		_dtoa
 29246 ;; This function uses a non-reentrant model
 29247 ;;
 29248                           
 29249                           	psect	text129
 29250  00744C                     __ptext129:
 29251                           	opt callstack 0
 29252  00744C                     ___aodiv:
 29253                           	opt callstack 9
 29254                           
 29255                           ; BSR set to: 0
 29256                           
 29257                           ; BSR set to: 0
 29258                           ;incstack = 0
 29259  00744C  0E00               	movlw	0
 29260  00744E  6F9C               	movwf	___aodiv@sign& (0+255),b
 29261                           
 29262                           ; BSR set to: 0
 29263  007450  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 29264  007452  D012               	goto	l16325
 29265                           
 29266                           ; BSR set to: 0
 29267  007454  1F9A               	comf	(___aodiv@divisor+7)& (0+255),f,b
 29268  007456  1F99               	comf	(___aodiv@divisor+6)& (0+255),f,b
 29269  007458  1F98               	comf	(___aodiv@divisor+5)& (0+255),f,b
 29270  00745A  1F97               	comf	(___aodiv@divisor+4)& (0+255),f,b
 29271  00745C  1F96               	comf	(___aodiv@divisor+3)& (0+255),f,b
 29272  00745E  1F95               	comf	(___aodiv@divisor+2)& (0+255),f,b
 29273  007460  1F94               	comf	(___aodiv@divisor+1)& (0+255),f,b
 29274  007462  6D93               	negf	___aodiv@divisor& (0+255),b
 29275  007464  0E00               	movlw	0
 29276  007466  2394               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 29277  007468  2395               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 29278  00746A  2396               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 29279  00746C  2397               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 29280  00746E  2398               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 29281  007470  2399               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 29282  007472  239A               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 29283                           
 29284                           ; BSR set to: 0
 29285  007474  0E01               	movlw	1
 29286  007476  6F9C               	movwf	___aodiv@sign& (0+255),b
 29287  007478                     l16325:
 29288                           
 29289                           ; BSR set to: 0
 29290  007478  AF92               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 29291  00747A  D012               	goto	l16331
 29292                           
 29293                           ; BSR set to: 0
 29294  00747C  1F92               	comf	(___aodiv@dividend+7)& (0+255),f,b
 29295  00747E  1F91               	comf	(___aodiv@dividend+6)& (0+255),f,b
 29296  007480  1F90               	comf	(___aodiv@dividend+5)& (0+255),f,b
 29297  007482  1F8F               	comf	(___aodiv@dividend+4)& (0+255),f,b
 29298  007484  1F8E               	comf	(___aodiv@dividend+3)& (0+255),f,b
 29299  007486  1F8D               	comf	(___aodiv@dividend+2)& (0+255),f,b
 29300  007488  1F8C               	comf	(___aodiv@dividend+1)& (0+255),f,b
 29301  00748A  6D8B               	negf	___aodiv@dividend& (0+255),b
 29302  00748C  0E00               	movlw	0
 29303  00748E  238C               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 29304  007490  238D               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 29305  007492  238E               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 29306  007494  238F               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 29307  007496  2390               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 29308  007498  2391               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 29309  00749A  2392               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 29310                           
 29311                           ; BSR set to: 0
 29312  00749C  0E01               	movlw	1
 29313  00749E  1B9C               	xorwf	___aodiv@sign& (0+255),f,b
 29314  0074A0                     l16331:
 29315                           
 29316                           ; BSR set to: 0
 29317  0074A0  EE20  F09D         	lfsr	2,___aodiv@quotient
 29318  0074A4  0E07               	movlw	7
 29319  0074A6                     u16311:
 29320  0074A6  6ADE               	clrf	postinc2,c
 29321  0074A8  06E8               	decf	wreg,f,c
 29322  0074AA  E2FD               	bc	u16311
 29323                           
 29324                           ; BSR set to: 0
 29325  0074AC  5193               	movf	___aodiv@divisor& (0+255),w,b
 29326  0074AE  1194               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 29327  0074B0  1195               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 29328  0074B2  1196               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 29329  0074B4  1197               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 29330  0074B6  1198               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 29331  0074B8  1199               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 29332  0074BA  119A               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 29333  0074BC  B4D8               	btfsc	status,2,c
 29334  0074BE  D046               	goto	l16353
 29335                           
 29336                           ; BSR set to: 0
 29337  0074C0  0E01               	movlw	1
 29338  0074C2  6F9B               	movwf	___aodiv@counter& (0+255),b
 29339  0074C4  D00A               	goto	l16339
 29340  0074C6                     l16337:
 29341                           
 29342                           ; BSR set to: 0
 29343  0074C6  90D8               	bcf	status,0,c
 29344  0074C8  3793               	rlcf	___aodiv@divisor& (0+255),f,b
 29345  0074CA  3794               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 29346  0074CC  3795               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 29347  0074CE  3796               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 29348  0074D0  3797               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 29349  0074D2  3798               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 29350  0074D4  3799               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 29351  0074D6  379A               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 29352  0074D8  2B9B               	incf	___aodiv@counter& (0+255),f,b
 29353  0074DA                     l16339:
 29354                           
 29355                           ; BSR set to: 0
 29356  0074DA  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 29357  0074DC  D7F4               	goto	l16337
 29358  0074DE                     u16330:
 29359                           
 29360                           ; BSR set to: 0
 29361  0074DE  90D8               	bcf	status,0,c
 29362  0074E0  379D               	rlcf	___aodiv@quotient& (0+255),f,b
 29363  0074E2  379E               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 29364  0074E4  379F               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 29365  0074E6  37A0               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 29366  0074E8  37A1               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 29367  0074EA  37A2               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 29368  0074EC  37A3               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 29369  0074EE  37A4               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 29370                           
 29371                           ; BSR set to: 0
 29372  0074F0  5193               	movf	___aodiv@divisor& (0+255),w,b
 29373  0074F2  5D8B               	subwf	___aodiv@dividend& (0+255),w,b
 29374  0074F4  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 29375  0074F6  598C               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 29376  0074F8  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 29377  0074FA  598D               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 29378  0074FC  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 29379  0074FE  598E               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 29380  007500  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 29381  007502  598F               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 29382  007504  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 29383  007506  5990               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 29384  007508  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 29385  00750A  5991               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 29386  00750C  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 29387  00750E  5992               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 29388  007510  A0D8               	btfss	status,0,c
 29389  007512  D011               	goto	l16349
 29390                           
 29391                           ; BSR set to: 0
 29392  007514  5193               	movf	___aodiv@divisor& (0+255),w,b
 29393  007516  5F8B               	subwf	___aodiv@dividend& (0+255),f,b
 29394  007518  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 29395  00751A  5B8C               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 29396  00751C  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 29397  00751E  5B8D               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 29398  007520  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 29399  007522  5B8E               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 29400  007524  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 29401  007526  5B8F               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 29402  007528  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 29403  00752A  5B90               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 29404  00752C  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 29405  00752E  5B91               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 29406  007530  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 29407  007532  5B92               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 29408                           
 29409                           ; BSR set to: 0
 29410  007534  819D               	bsf	___aodiv@quotient& (0+255),0,b
 29411  007536                     l16349:
 29412                           
 29413                           ; BSR set to: 0
 29414  007536  90D8               	bcf	status,0,c
 29415  007538  339A               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 29416  00753A  3399               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 29417  00753C  3398               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 29418  00753E  3397               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 29419  007540  3396               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 29420  007542  3395               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 29421  007544  3394               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 29422  007546  3393               	rrcf	___aodiv@divisor& (0+255),f,b
 29423                           
 29424                           ; BSR set to: 0
 29425  007548  2F9B               	decfsz	___aodiv@counter& (0+255),f,b
 29426  00754A  D7C9               	goto	u16330
 29427  00754C                     l16353:
 29428                           
 29429                           ; BSR set to: 0
 29430  00754C  519C               	movf	___aodiv@sign& (0+255),w,b
 29431  00754E  B4D8               	btfsc	status,2,c
 29432  007550  D010               	goto	l16357
 29433                           
 29434                           ; BSR set to: 0
 29435  007552  1FA4               	comf	(___aodiv@quotient+7)& (0+255),f,b
 29436  007554  1FA3               	comf	(___aodiv@quotient+6)& (0+255),f,b
 29437  007556  1FA2               	comf	(___aodiv@quotient+5)& (0+255),f,b
 29438  007558  1FA1               	comf	(___aodiv@quotient+4)& (0+255),f,b
 29439  00755A  1FA0               	comf	(___aodiv@quotient+3)& (0+255),f,b
 29440  00755C  1F9F               	comf	(___aodiv@quotient+2)& (0+255),f,b
 29441  00755E  1F9E               	comf	(___aodiv@quotient+1)& (0+255),f,b
 29442  007560  6D9D               	negf	___aodiv@quotient& (0+255),b
 29443  007562  0E00               	movlw	0
 29444  007564  239E               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 29445  007566  239F               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 29446  007568  23A0               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 29447  00756A  23A1               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 29448  00756C  23A2               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 29449  00756E  23A3               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 29450  007570  23A4               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 29451  007572                     l16357:
 29452                           
 29453                           ; BSR set to: 0
 29454  007572  0060  F274  F08B   	movff	___aodiv@quotient,?___aodiv
 29455  007578  0060  F278  F08C   	movff	___aodiv@quotient+1,?___aodiv+1
 29456  00757E  0060  F27C  F08D   	movff	___aodiv@quotient+2,?___aodiv+2
 29457  007584  0060  F280  F08E   	movff	___aodiv@quotient+3,?___aodiv+3
 29458  00758A  0060  F284  F08F   	movff	___aodiv@quotient+4,?___aodiv+4
 29459  007590  0060  F288  F090   	movff	___aodiv@quotient+5,?___aodiv+5
 29460  007596  0060  F28C  F091   	movff	___aodiv@quotient+6,?___aodiv+6
 29461  00759C  0060  F290  F092   	movff	___aodiv@quotient+7,?___aodiv+7
 29462                           
 29463                           ; BSR set to: 0
 29464  0075A2  0012               	return		;funcret
 29465  0075A4                     __end_of___aodiv:
 29466                           	opt callstack 0
 29467                           
 29468 ;; *************** function _atoi *****************
 29469 ;; Defined at:
 29470 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 29471 ;; Parameters:    Size  Location     Type
 29472 ;;  s               2   65[BANK0 ] PTR const unsigned char 
 29473 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 29474 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 29475 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 29476 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 29477 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 29478 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 29479 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 29480 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 29481 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 29482 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 29483 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 29484 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 29485 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 29486 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 29487 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 29488 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 29489 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 29490 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 29491 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 29492 ;;		 -> STR_1(27), 
 29493 ;; Auto vars:     Size  Location     Type
 29494 ;;  n               2    7[BANK1 ] int 
 29495 ;;  neg             2    0[BANK1 ] int 
 29496 ;; Return value:  Size  Location     Type
 29497 ;;                  2   65[BANK0 ] int 
 29498 ;; Registers used:
 29499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29500 ;; Tracked objects:
 29501 ;;		On entry : 3F/0
 29502 ;;		On exit  : 3E/0
 29503 ;;		Unchanged: 0/0
 29504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29506 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29508 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29509 ;;Total ram usage:       15 bytes
 29510 ;; Hardware stack levels used:    1
 29511 ;; Hardware stack levels required when called:   18
 29512 ;; This function calls:
 29513 ;;		___wmul
 29514 ;;		_isdigit
 29515 ;;		_isspace
 29516 ;; This function is called by:
 29517 ;;		_vfpfcnvrt
 29518 ;; This function uses a non-reentrant model
 29519 ;;
 29520                           
 29521                           	psect	text130
 29522  006FE8                     __ptext130:
 29523                           	opt callstack 0
 29524  006FE8                     _atoi:
 29525                           	opt callstack 9
 29526                           
 29527                           ; BSR set to: 0
 29528                           
 29529                           ; BSR set to: 0
 29530                           ;incstack = 0
 29531  006FE8  0E00               	movlw	0
 29532  006FEA  0101               	movlb	1	; () banked
 29533  006FEC  6F08               	movwf	(atoi@n+1)& (0+255),b
 29534  006FEE  0E00               	movlw	0
 29535  006FF0  6F07               	movwf	atoi@n& (0+255),b
 29536  006FF2  0E00               	movlw	0
 29537  006FF4  6F01               	movwf	(atoi@neg+1)& (0+255),b
 29538  006FF6  0E00               	movlw	0
 29539  006FF8  6F00               	movwf	atoi@neg& (0+255),b
 29540  006FFA  D003               	goto	l16563
 29541  006FFC                     l16561:
 29542                           
 29543                           ; BSR set to: 1
 29544  006FFC  0100               	movlb	0	; () banked
 29545  006FFE  4BA1               	infsnz	atoi@s& (0+255),f,b
 29546  007000  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 29547  007002                     l16563:
 29548  007002  0E01               	movlw	1
 29549  007004  0101               	movlb	1	; () banked
 29550  007006  6F06               	movwf	_atoi$5384& (0+255),b
 29551                           
 29552                           ; BSR set to: 1
 29553  007008  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29554  00700E  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29555  007014                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29556  007014  6AF8               	clrf	tblptru,c
 29557  007016                     	endif
 29558  007016                     	if	0	;tblptru may be non-zero
 29559  007016                     	endif
 29560  007016  0008               	tblrd		*
 29561  007018  50F5               	movf	tablat,w,c
 29562  00701A  0A20               	xorlw	32
 29563  00701C  B4D8               	btfsc	status,2,c
 29564  00701E  D01D               	goto	l16571
 29565                           
 29566                           ; BSR set to: 1
 29567  007020  0EF7               	movlw	247
 29568  007022  0100               	movlb	0	; () banked
 29569  007024  6FA3               	movwf	??_atoi& (0+255),b
 29570  007026  0EFF               	movlw	255
 29571  007028  6FA4               	movwf	(??_atoi+1)& (0+255),b
 29572  00702A  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29573  007030  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29574  007036                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29575  007036  6AF8               	clrf	tblptru,c
 29576  007038                     	endif
 29577  007038                     	if	0	;tblptru may be non-zero
 29578  007038                     	endif
 29579  007038  0008               	tblrd		*
 29580  00703A  50F5               	movf	tablat,w,c
 29581  00703C  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29582  00703E  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29583  007040  51A3               	movf	??_atoi& (0+255),w,b
 29584  007042  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29585  007044  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29586  007046  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29587  007048  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29588  00704A  E104               	bnz	u16810
 29589  00704C  0E05               	movlw	5
 29590  00704E  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29591  007050  A0D8               	btfss	status,0,c
 29592  007052  D003               	goto	l16571
 29593  007054                     u16810:
 29594                           
 29595                           ; BSR set to: 0
 29596  007054  0E00               	movlw	0
 29597  007056  0101               	movlb	1	; () banked
 29598  007058  6F06               	movwf	_atoi$5384& (0+255),b
 29599  00705A                     l16571:
 29600  00705A  0060  F418  F102   	movff	_atoi$5384,_atoi$5383
 29601  007060  0101               	movlb	1	; () banked
 29602  007062  6B03               	clrf	(_atoi$5383+1)& (0+255),b
 29603                           
 29604                           ; BSR set to: 1
 29605  007064  5102               	movf	_atoi$5383& (0+255),w,b
 29606  007066  1103               	iorwf	(_atoi$5383+1)& (0+255),w,b
 29607  007068  B4D8               	btfsc	status,2,c
 29608  00706A  D00A               	goto	l16581
 29609  00706C  D7C7               	goto	l16561
 29610  00706E                     l16577:
 29611                           
 29612                           ; BSR set to: 0
 29613  00706E  0E00               	movlw	0
 29614  007070  0101               	movlb	1	; () banked
 29615  007072  6F01               	movwf	(atoi@neg+1)& (0+255),b
 29616  007074  0E01               	movlw	1
 29617  007076  6F00               	movwf	atoi@neg& (0+255),b
 29618  007078                     l16579:
 29619  007078  0100               	movlb	0	; () banked
 29620  00707A  4BA1               	infsnz	atoi@s& (0+255),f,b
 29621  00707C  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 29622  00707E  D03B               	goto	l16587
 29623  007080                     l16581:
 29624                           
 29625                           ; BSR set to: 1
 29626  007080  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29627  007086  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29628  00708C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29629  00708C  6AF8               	clrf	tblptru,c
 29630  00708E                     	endif
 29631  00708E                     	if	0	;tblptru may be non-zero
 29632  00708E                     	endif
 29633  00708E  0008               	tblrd		*
 29634  007090  50F5               	movf	tablat,w,c
 29635  007092  0100               	movlb	0	; () banked
 29636  007094  6FA3               	movwf	??_atoi& (0+255),b
 29637  007096  6BA4               	clrf	(??_atoi+1)& (0+255),b
 29638                           
 29639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29640                           ; Switch size 1, requested type "simple"
 29641                           ; Number of cases is 1, Range of values is 0 to 0
 29642                           ; switch strategies available:
 29643                           ; Name         Instructions Cycles
 29644                           ; simple_byte            4     3 (average)
 29645                           ;	Chosen strategy is simple_byte
 29646  007098  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29647  00709A  0A00               	xorlw	0	; case 0
 29648  00709C  A4D8               	btfss	status,2,c
 29649  00709E  D02B               	goto	l16587
 29650                           
 29651                           ; BSR set to: 0
 29652                           ; Switch size 1, requested type "simple"
 29653                           ; Number of cases is 2, Range of values is 43 to 45
 29654                           ; switch strategies available:
 29655                           ; Name         Instructions Cycles
 29656                           ; simple_byte            7     4 (average)
 29657                           ;	Chosen strategy is simple_byte
 29658  0070A0  51A3               	movf	??_atoi& (0+255),w,b
 29659  0070A2  0A2B               	xorlw	43	; case 43
 29660  0070A4  B4D8               	btfsc	status,2,c
 29661  0070A6  D7E8               	goto	l16579
 29662  0070A8  0A06               	xorlw	6	; case 45
 29663  0070AA  B4D8               	btfsc	status,2,c
 29664  0070AC  D7E0               	goto	l16577
 29665  0070AE  D023               	goto	l16587
 29666  0070B0                     l16583:
 29667                           
 29668                           ; BSR set to: 1
 29669  0070B0  0060  F41C  F09B   	movff	atoi@n,___wmul@multiplier
 29670  0070B6  0060  F420  F09C   	movff	atoi@n+1,___wmul@multiplier+1
 29671  0070BC  0E00               	movlw	0
 29672  0070BE  0100               	movlb	0	; () banked
 29673  0070C0  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29674  0070C2  0E0A               	movlw	10
 29675  0070C4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 29676  0070C6  ECFC  F04E         	call	___wmul	;wreg free
 29677  0070CA  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29678  0070D0  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29679  0070D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29680  0070D6  6AF8               	clrf	tblptru,c
 29681  0070D8                     	endif
 29682  0070D8                     	if	0	;tblptru may be non-zero
 29683  0070D8                     	endif
 29684  0070D8  0008               	tblrd		*
 29685  0070DA  50F5               	movf	tablat,w,c
 29686  0070DC  5F9B               	subwf	?___wmul& (0+255),f,b
 29687  0070DE  0E00               	movlw	0
 29688  0070E0  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
 29689  0070E2  0E30               	movlw	48
 29690  0070E4  259B               	addwf	?___wmul& (0+255),w,b
 29691  0070E6  0101               	movlb	1	; () banked
 29692  0070E8  6F07               	movwf	atoi@n& (0+255),b
 29693  0070EA  0E00               	movlw	0
 29694  0070EC  0100               	movlb	0	; () banked
 29695  0070EE  219C               	addwfc	(?___wmul+1)& (0+255),w,b
 29696  0070F0  0101               	movlb	1	; () banked
 29697  0070F2  6F08               	movwf	(atoi@n+1)& (0+255),b
 29698  0070F4  D7C1               	goto	l16579
 29699  0070F6                     l16587:
 29700                           
 29701                           ; BSR set to: 0
 29702  0070F6  0ED0               	movlw	208
 29703  0070F8  6FA3               	movwf	??_atoi& (0+255),b
 29704  0070FA  0EFF               	movlw	255
 29705  0070FC  6FA4               	movwf	(??_atoi+1)& (0+255),b
 29706  0070FE  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29707  007104  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29708  00710A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29709  00710A  6AF8               	clrf	tblptru,c
 29710  00710C                     	endif
 29711  00710C                     	if	0	;tblptru may be non-zero
 29712  00710C                     	endif
 29713  00710C  0008               	tblrd		*
 29714  00710E  50F5               	movf	tablat,w,c
 29715  007110  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29716  007112  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29717  007114  51A3               	movf	??_atoi& (0+255),w,b
 29718  007116  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29719  007118  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29720  00711A  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29721  00711C  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29722  00711E  E106               	bnz	u16830
 29723  007120  0E0A               	movlw	10
 29724  007122  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29725  007124  B0D8               	btfsc	status,0,c
 29726  007126  D002               	goto	u16830
 29727  007128  0E01               	movlw	1
 29728  00712A  D001               	goto	u16840
 29729  00712C                     u16830:
 29730  00712C  0E00               	movlw	0
 29731  00712E                     u16840:
 29732  00712E  0101               	movlb	1	; () banked
 29733  007130  6F04               	movwf	_atoi$5385& (0+255),b
 29734  007132  6B05               	clrf	(_atoi$5385+1)& (0+255),b
 29735                           
 29736                           ; BSR set to: 1
 29737  007134  5104               	movf	_atoi$5385& (0+255),w,b
 29738  007136  1105               	iorwf	(_atoi$5385+1)& (0+255),w,b
 29739  007138  A4D8               	btfss	status,2,c
 29740  00713A  D7BA               	goto	l16583
 29741                           
 29742                           ; BSR set to: 1
 29743  00713C  5100               	movf	atoi@neg& (0+255),w,b
 29744  00713E  1101               	iorwf	(atoi@neg+1)& (0+255),w,b
 29745  007140  A4D8               	btfss	status,2,c
 29746  007142  D012               	goto	l3907
 29747                           
 29748                           ; BSR set to: 1
 29749  007144  0060  F41C  F0A3   	movff	atoi@n,??_atoi
 29750  00714A  0060  F420  F0A4   	movff	atoi@n+1,??_atoi+1
 29751  007150  0100               	movlb	0	; () banked
 29752  007152  1FA3               	comf	??_atoi& (0+255),f,b
 29753  007154  1FA4               	comf	(??_atoi+1)& (0+255),f,b
 29754  007156  4BA3               	infsnz	??_atoi& (0+255),f,b
 29755  007158  2BA4               	incf	(??_atoi+1)& (0+255),f,b
 29756  00715A  0060  F28C  F0A1   	movff	??_atoi,?_atoi
 29757  007160  0060  F290  F0A2   	movff	??_atoi+1,?_atoi+1
 29758  007166  0012               	return	
 29759  007168                     l3907:
 29760                           
 29761                           ; BSR set to: 1
 29762  007168  0060  F41C  F0A1   	movff	atoi@n,?_atoi
 29763  00716E  0060  F420  F0A2   	movff	atoi@n+1,?_atoi+1
 29764  007174  0012               	return		;funcret
 29765  007176                     __end_of_atoi:
 29766                           	opt callstack 0
 29767                           
 29768 ;; *************** function _isspace *****************
 29769 ;; Defined at:
 29770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 29771 ;; Parameters:    Size  Location     Type
 29772 ;;  c               2   43[BANK0 ] int 
 29773 ;; Auto vars:     Size  Location     Type
 29774 ;;		None
 29775 ;; Return value:  Size  Location     Type
 29776 ;;                  2   43[BANK0 ] int 
 29777 ;; Registers used:
 29778 ;;		wreg, status,2, status,0
 29779 ;; Tracked objects:
 29780 ;;		On entry : 0/0
 29781 ;;		On exit  : 3F/0
 29782 ;;		Unchanged: 0/0
 29783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29787 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29788 ;;Total ram usage:        7 bytes
 29789 ;; Hardware stack levels used:    1
 29790 ;; Hardware stack levels required when called:   17
 29791 ;; This function calls:
 29792 ;;		Nothing
 29793 ;; This function is called by:
 29794 ;;		_atoi
 29795 ;; This function uses a non-reentrant model
 29796 ;;
 29797                           
 29798                           	psect	text131
 29799  0096CE                     __ptext131:
 29800                           	opt callstack 0
 29801  0096CE                     _isspace:
 29802                           	opt callstack 9
 29803                           
 29804                           ;incstack = 0
 29805  0096CE  0E01               	movlw	1
 29806  0096D0  0100               	movlb	0	; () banked
 29807  0096D2  6F91               	movwf	_isspace$5410& (0+255),b
 29808                           
 29809                           ; BSR set to: 0
 29810  0096D4  0E20               	movlw	32
 29811  0096D6  198B               	xorwf	isspace@c& (0+255),w,b
 29812  0096D8  118C               	iorwf	(isspace@c+1)& (0+255),w,b
 29813  0096DA  B4D8               	btfsc	status,2,c
 29814  0096DC  D016               	goto	l16405
 29815                           
 29816                           ; BSR set to: 0
 29817  0096DE  0EF7               	movlw	247
 29818  0096E0  6F8D               	movwf	??_isspace& (0+255),b
 29819  0096E2  0EFF               	movlw	255
 29820  0096E4  6F8E               	movwf	(??_isspace+1)& (0+255),b
 29821  0096E6  0060  F22C  F08F   	movff	isspace@c,??_isspace+2
 29822  0096EC  0060  F230  F090   	movff	isspace@c+1,??_isspace+3
 29823  0096F2  518D               	movf	??_isspace& (0+255),w,b
 29824  0096F4  278F               	addwf	(??_isspace+2)& (0+255),f,b
 29825  0096F6  518E               	movf	(??_isspace+1)& (0+255),w,b
 29826  0096F8  2390               	addwfc	(??_isspace+3)& (0+255),f,b
 29827  0096FA  5190               	movf	(??_isspace+3)& (0+255),w,b
 29828  0096FC  E104               	bnz	u16430
 29829  0096FE  0E05               	movlw	5
 29830  009700  5D8F               	subwf	(??_isspace+2)& (0+255),w,b
 29831  009702  A0D8               	btfss	status,0,c
 29832  009704  D002               	goto	l16405
 29833  009706                     u16430:
 29834                           
 29835                           ; BSR set to: 0
 29836  009706  0E00               	movlw	0
 29837  009708  6F91               	movwf	_isspace$5410& (0+255),b
 29838  00970A                     l16405:
 29839                           
 29840                           ; BSR set to: 0
 29841  00970A  0060  F244  F08B   	movff	_isspace$5410,?_isspace
 29842  009710  6B8C               	clrf	(?_isspace+1)& (0+255),b
 29843                           
 29844                           ; BSR set to: 0
 29845  009712  0012               	return		;funcret
 29846  009714                     __end_of_isspace:
 29847                           	opt callstack 0
 29848                           
 29849 ;; *************** function _isdigit *****************
 29850 ;; Defined at:
 29851 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 29852 ;; Parameters:    Size  Location     Type
 29853 ;;  c               2   43[BANK0 ] int 
 29854 ;; Auto vars:     Size  Location     Type
 29855 ;;		None
 29856 ;; Return value:  Size  Location     Type
 29857 ;;                  2   43[BANK0 ] int 
 29858 ;; Registers used:
 29859 ;;		wreg, status,2, status,0
 29860 ;; Tracked objects:
 29861 ;;		On entry : 0/0
 29862 ;;		On exit  : 3F/0
 29863 ;;		Unchanged: 0/0
 29864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29868 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29869 ;;Total ram usage:        6 bytes
 29870 ;; Hardware stack levels used:    1
 29871 ;; Hardware stack levels required when called:   17
 29872 ;; This function calls:
 29873 ;;		Nothing
 29874 ;; This function is called by:
 29875 ;;		_vfpfcnvrt
 29876 ;;		_atoi
 29877 ;; This function uses a non-reentrant model
 29878 ;;
 29879                           
 29880                           	psect	text132
 29881  009B92                     __ptext132:
 29882                           	opt callstack 0
 29883  009B92                     _isdigit:
 29884                           	opt callstack 10
 29885                           
 29886                           ; BSR set to: 0
 29887                           ;incstack = 0
 29888  009B92  0ED0               	movlw	208
 29889  009B94  0100               	movlb	0	; () banked
 29890  009B96  6F8D               	movwf	??_isdigit& (0+255),b
 29891  009B98  0EFF               	movlw	255
 29892  009B9A  6F8E               	movwf	(??_isdigit+1)& (0+255),b
 29893  009B9C  0060  F22C  F08F   	movff	isdigit@c,??_isdigit+2
 29894  009BA2  0060  F230  F090   	movff	isdigit@c+1,??_isdigit+3
 29895  009BA8  518D               	movf	??_isdigit& (0+255),w,b
 29896  009BAA  278F               	addwf	(??_isdigit+2)& (0+255),f,b
 29897  009BAC  518E               	movf	(??_isdigit+1)& (0+255),w,b
 29898  009BAE  2390               	addwfc	(??_isdigit+3)& (0+255),f,b
 29899  009BB0  5190               	movf	(??_isdigit+3)& (0+255),w,b
 29900  009BB2  E106               	bnz	u16270
 29901  009BB4  0E0A               	movlw	10
 29902  009BB6  5D8F               	subwf	(??_isdigit+2)& (0+255),w,b
 29903  009BB8  B0D8               	btfsc	status,0,c
 29904  009BBA  D002               	goto	u16270
 29905  009BBC  0E01               	movlw	1
 29906  009BBE  D001               	goto	u16280
 29907  009BC0                     u16270:
 29908  009BC0  0E00               	movlw	0
 29909  009BC2                     u16280:
 29910  009BC2  6F8B               	movwf	?_isdigit& (0+255),b
 29911  009BC4  6B8C               	clrf	(?_isdigit+1)& (0+255),b
 29912                           
 29913                           ; BSR set to: 0
 29914  009BC6  0012               	return		;funcret
 29915  009BC8                     __end_of_isdigit:
 29916                           	opt callstack 0
 29917                           
 29918 ;; *************** function ___wmul *****************
 29919 ;; Defined at:
 29920 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 29921 ;; Parameters:    Size  Location     Type
 29922 ;;  multiplier      2   59[BANK0 ] unsigned int 
 29923 ;;  multiplicand    2   61[BANK0 ] unsigned int 
 29924 ;; Auto vars:     Size  Location     Type
 29925 ;;  product         2   63[BANK0 ] unsigned int 
 29926 ;; Return value:  Size  Location     Type
 29927 ;;                  2   59[BANK0 ] unsigned int 
 29928 ;; Registers used:
 29929 ;;		wreg, status,2, status,0, prodl, prodh
 29930 ;; Tracked objects:
 29931 ;;		On entry : 3C/0
 29932 ;;		On exit  : 3F/0
 29933 ;;		Unchanged: 0/0
 29934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29938 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29939 ;;Total ram usage:        6 bytes
 29940 ;; Hardware stack levels used:    1
 29941 ;; Hardware stack levels required when called:   17
 29942 ;; This function calls:
 29943 ;;		Nothing
 29944 ;; This function is called by:
 29945 ;;		_inspOSMeasure
 29946 ;;		_main
 29947 ;;		_screenMng
 29948 ;;		_atoi
 29949 ;; This function uses a non-reentrant model
 29950 ;;
 29951                           
 29952                           	psect	text133
 29953  009DF8                     __ptext133:
 29954                           	opt callstack 0
 29955  009DF8                     ___wmul:
 29956                           	opt callstack 9
 29957                           
 29958                           ; BSR set to: 0
 29959                           ;incstack = 0
 29960  009DF8  0100               	movlb	0	; () banked
 29961  009DFA  519B               	movf	___wmul@multiplier& (0+255),w,b
 29962  009DFC  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29963  009DFE  006F FFCC  F09F    	movff	prodl,___wmul@product
 29964  009E04  006F FFD0  F0A0    	movff	prodh,___wmul@product+1
 29965  009E0A  519B               	movf	___wmul@multiplier& (0+255),w,b
 29966  009E0C  039E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29967  009E0E  50F3               	movf	243,w,c
 29968  009E10  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29969  009E12  519C               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29970  009E14  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29971  009E16  50F3               	movf	243,w,c
 29972  009E18  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29973                           
 29974                           ; BSR set to: 0
 29975  009E1A  0060  F27C  F09B   	movff	___wmul@product,?___wmul
 29976  009E20  0060  F280  F09C   	movff	___wmul@product+1,?___wmul+1
 29977                           
 29978                           ; BSR set to: 0
 29979  009E26  0012               	return		;funcret
 29980  009E28                     __end_of___wmul:
 29981                           	opt callstack 0
 29982                           
 29983 ;; *************** function _I2C2_MasterSetCounter *****************
 29984 ;; Defined at:
 29985 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 29986 ;; Parameters:    Size  Location     Type
 29987 ;;  counter         1    wreg     unsigned char 
 29988 ;; Auto vars:     Size  Location     Type
 29989 ;;  counter         1   43[BANK0 ] unsigned char 
 29990 ;; Return value:  Size  Location     Type
 29991 ;;                  1    wreg      void 
 29992 ;; Registers used:
 29993 ;;		wreg
 29994 ;; Tracked objects:
 29995 ;;		On entry : 3F/2
 29996 ;;		On exit  : 0/0
 29997 ;;		Unchanged: 0/0
 29998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30003 ;;Total ram usage:        1 bytes
 30004 ;; Hardware stack levels used:    1
 30005 ;; Hardware stack levels required when called:   17
 30006 ;; This function calls:
 30007 ;;		Nothing
 30008 ;; This function is called by:
 30009 ;;		_I2C2_MasterOperation
 30010 ;;		_I2C2_DO_RX_EMPTY
 30011 ;; This function uses a non-reentrant model
 30012 ;;
 30013                           
 30014                           	psect	text134
 30015  00A772                     __ptext134:
 30016                           	opt callstack 0
 30017  00A772                     _I2C2_MasterSetCounter:
 30018                           	opt callstack 8
 30019                           
 30020                           ; BSR set to: 0
 30021                           ;incstack = 0
 30022                           ;I2C2_MasterSetCounter@counter stored from wreg
 30023  00A772  0100               	movlb	0	; () banked
 30024  00A774  6F8B               	movwf	I2C2_MasterSetCounter@counter& (0+255),b
 30025                           
 30026                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 30027  00A776  0060  F22F  FD56   	movff	I2C2_MasterSetCounter@counter,15702	;volatile
 30028  00A77C  0012               	return		;funcret
 30029  00A77E                     __end_of_I2C2_MasterSetCounter:
 30030                           	opt callstack 0
 30031                           
 30032 ;; *************** function _I2C2_MasterEnableRestart *****************
 30033 ;; Defined at:
 30034 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 30035 ;; Parameters:    Size  Location     Type
 30036 ;;		None
 30037 ;; Auto vars:     Size  Location     Type
 30038 ;;		None
 30039 ;; Return value:  Size  Location     Type
 30040 ;;                  1    wreg      void 
 30041 ;; Registers used:
 30042 ;;		None
 30043 ;; Tracked objects:
 30044 ;;		On entry : 3C/1
 30045 ;;		On exit  : 3F/3D
 30046 ;;		Unchanged: 0/0
 30047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30052 ;;Total ram usage:        0 bytes
 30053 ;; Hardware stack levels used:    1
 30054 ;; Hardware stack levels required when called:   17
 30055 ;; This function calls:
 30056 ;;		Nothing
 30057 ;; This function is called by:
 30058 ;;		_I2C2_DO_RX_EMPTY
 30059 ;; This function uses a non-reentrant model
 30060 ;;
 30061                           
 30062                           	psect	text135
 30063  00A836                     __ptext135:
 30064                           	opt callstack 0
 30065  00A836                     _I2C2_MasterEnableRestart:
 30066                           	opt callstack 6
 30067                           
 30068                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 30069                           
 30070                           ;incstack = 0
 30071  00A836  013D               	movlb	61	; () banked
 30072  00A838  8D5D               	bsf	93,6,b	;volatile
 30073                           
 30074                           ; BSR set to: 61
 30075  00A83A  0012               	return		;funcret
 30076  00A83C                     __end_of_I2C2_MasterEnableRestart:
 30077                           	opt callstack 0
 30078                           
 30079 ;; *************** function _I2C2_MasterDisableRestart *****************
 30080 ;; Defined at:
 30081 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 30082 ;; Parameters:    Size  Location     Type
 30083 ;;		None
 30084 ;; Auto vars:     Size  Location     Type
 30085 ;;		None
 30086 ;; Return value:  Size  Location     Type
 30087 ;;                  1    wreg      void 
 30088 ;; Registers used:
 30089 ;;		None
 30090 ;; Tracked objects:
 30091 ;;		On entry : 3F/2
 30092 ;;		On exit  : 3F/3D
 30093 ;;		Unchanged: 0/0
 30094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30099 ;;Total ram usage:        0 bytes
 30100 ;; Hardware stack levels used:    1
 30101 ;; Hardware stack levels required when called:   17
 30102 ;; This function calls:
 30103 ;;		Nothing
 30104 ;; This function is called by:
 30105 ;;		_I2C2_DO_RX_EMPTY
 30106 ;; This function uses a non-reentrant model
 30107 ;;
 30108                           
 30109                           	psect	text136
 30110  00A83C                     __ptext136:
 30111                           	opt callstack 0
 30112  00A83C                     _I2C2_MasterDisableRestart:
 30113                           	opt callstack 6
 30114                           
 30115                           ; BSR set to: 2
 30116                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 30117                           
 30118                           ; BSR set to: 61
 30119                           ;incstack = 0
 30120  00A83C  013D               	movlb	61	; () banked
 30121  00A83E  9D5D               	bcf	93,6,b	;volatile
 30122                           
 30123                           ; BSR set to: 61
 30124  00A840  0012               	return		;funcret
 30125  00A842                     __end_of_I2C2_MasterDisableRestart:
 30126                           	opt callstack 0
 30127                           
 30128 ;; *************** function _I2C2_MOpen *****************
 30129 ;; Defined at:
 30130 ;;		line 56 in file "i2c2_mux.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;		None
 30133 ;; Auto vars:     Size  Location     Type
 30134 ;;  trfRsp          1   52[BANK0 ] enum E16385
 30135 ;; Return value:  Size  Location     Type
 30136 ;;                  1    wreg      enum E16385
 30137 ;; Registers used:
 30138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30139 ;; Tracked objects:
 30140 ;;		On entry : 3F/2
 30141 ;;		On exit  : 3F/0
 30142 ;;		Unchanged: 0/0
 30143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30148 ;;Total ram usage:        1 bytes
 30149 ;; Hardware stack levels used:    1
 30150 ;; Hardware stack levels required when called:   19
 30151 ;; This function calls:
 30152 ;;		_I2C2_Open
 30153 ;;		_I2C2_SetAddressNackCallback
 30154 ;;		_I2C2_SetDataNackCallback
 30155 ;; This function is called by:
 30156 ;;		_MonitorMsgForcedSend
 30157 ;; This function uses a non-reentrant model
 30158 ;;
 30159                           
 30160                           	psect	text137
 30161  008E50                     __ptext137:
 30162                           	opt callstack 0
 30163  008E50                     _I2C2_MOpen:
 30164                           	opt callstack 7
 30165                           
 30166                           ; BSR set to: 2
 30167                           ;i2c2_mux.c: 57:     i2c2_error_t trfRsp;;i2c2_mux.c: 59:     trfRsp = I2C2_Open(0x50);
 30168                           
 30169                           ; BSR set to: 61
 30170                           ;incstack = 0
 30171  008E50  0E50               	movlw	80
 30172  008E52  EC25  F043         	call	_I2C2_Open
 30173  008E56  6F94               	movwf	I2C2_MOpen@trfRsp& (0+255),b
 30174                           
 30175                           ; BSR set to: 0
 30176                           ;i2c2_mux.c: 60:     if (trfRsp != I2C2_BUSY) {
 30177  008E58  0594               	decf	I2C2_MOpen@trfRsp& (0+255),w,b
 30178  008E5A  B4D8               	btfsc	status,2,c
 30179  008E5C  D029               	goto	l17685
 30180                           
 30181                           ; BSR set to: 0
 30182                           ;i2c2_mux.c: 61:         I2C2_SetAddressNackCallback(I2C2_NackCb,((void*)0));
 30183  008E5E  0E96               	movlw	low _I2C2_NackCb
 30184  008E60  6F90               	movwf	I2C2_SetAddressNackCallback@cb& (0+255),b
 30185  008E62  0E99               	movlw	high _I2C2_NackCb
 30186  008E64  6F91               	movwf	(I2C2_SetAddressNackCallback@cb+1)& (0+255),b
 30187  008E66  0E00               	movlw	0
 30188  008E68  6F92               	movwf	I2C2_SetAddressNackCallback@ptr& (0+255),b
 30189  008E6A  0E00               	movlw	0
 30190  008E6C  6F93               	movwf	(I2C2_SetAddressNackCallback@ptr+1)& (0+255),b
 30191  008E6E  ECE1  F051         	call	_I2C2_SetAddressNackCallback	;wreg free
 30192                           
 30193                           ;i2c2_mux.c: 62:         I2C2_SetDataNackCallback(I2C2_NackCb,((void*)0));
 30194  008E72  0E96               	movlw	low _I2C2_NackCb
 30195  008E74  6F90               	movwf	I2C2_SetDataNackCallback@cb& (0+255),b
 30196  008E76  0E99               	movlw	high _I2C2_NackCb
 30197  008E78  6F91               	movwf	(I2C2_SetDataNackCallback@cb+1)& (0+255),b
 30198  008E7A  0E00               	movlw	0
 30199  008E7C  6F92               	movwf	I2C2_SetDataNackCallback@ptr& (0+255),b
 30200  008E7E  0E00               	movlw	0
 30201  008E80  6F93               	movwf	(I2C2_SetDataNackCallback@ptr+1)& (0+255),b
 30202  008E82  ECD1  F051         	call	_I2C2_SetDataNackCallback	;wreg free
 30203                           
 30204                           ; BSR set to: 0
 30205                           ;i2c2_mux.c: 64:         lastI2C2MAckResponse = 1;
 30206  008E86  0E01               	movlw	1
 30207  008E88  6FBC               	movwf	_lastI2C2MAckResponse& (0+255),b
 30208                           
 30209                           ; BSR set to: 0
 30210                           ;i2c2_mux.c: 66:         if (currentTrfAddr == 0x50){
 30211  008E8A  0E50               	movlw	80
 30212  008E8C  0101               	movlb	1	; () banked
 30213  008E8E  19B7               	xorwf	_currentTrfAddr& (0+255),w,b
 30214  008E90  A4D8               	btfss	status,2,c
 30215  008E92  D004               	goto	l2700
 30216                           
 30217                           ; BSR set to: 1
 30218                           ;i2c2_mux.c: 67:             lastI2C2MTrfResponse = trfRsp;
 30219  008E94  0060  F250  F0BD   	movff	I2C2_MOpen@trfRsp,_lastI2C2MTrfResponse
 30220                           
 30221                           ;i2c2_mux.c: 68:         } else {
 30222  008E9A  D003               	goto	l17681
 30223  008E9C                     l2700:
 30224                           
 30225                           ; BSR set to: 1
 30226                           ;i2c2_mux.c: 69:             lastI2C2LTrfResponse = trfRsp;
 30227  008E9C  0060  F250  F254   	movff	I2C2_MOpen@trfRsp,_lastI2C2LTrfResponse
 30228  008EA2                     l17681:
 30229                           
 30230                           ; BSR set to: 1
 30231                           ;i2c2_mux.c: 71:         currentTrfAddr = 0x50;
 30232  008EA2  0E50               	movlw	80
 30233  008EA4  6FB7               	movwf	_currentTrfAddr& (0+255),b
 30234                           
 30235                           ;i2c2_mux.c: 72:         lastI2C2MAckResponse = 1;
 30236  008EA6  0E01               	movlw	1
 30237  008EA8  0100               	movlb	0	; () banked
 30238  008EAA  6FBC               	movwf	_lastI2C2MAckResponse& (0+255),b
 30239                           
 30240                           ;i2c2_mux.c: 74:         return lastI2C2MTrfResponse;
 30241  008EAC  51BD               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 30242  008EAE  0012               	return	
 30243  008EB0                     l17685:
 30244                           
 30245                           ; BSR set to: 0
 30246                           ;i2c2_mux.c: 76:     return I2C2_BUSY;
 30247  008EB0  0E01               	movlw	1
 30248                           
 30249                           ; BSR set to: 0
 30250  008EB2  0012               	return		;funcret
 30251  008EB4                     __end_of_I2C2_MOpen:
 30252                           	opt callstack 0
 30253                           
 30254 ;; *************** function _I2C2_SetDataNackCallback *****************
 30255 ;; Defined at:
 30256 ;;		line 319 in file "mcc_generated_files/i2c2_master.c"
 30257 ;; Parameters:    Size  Location     Type
 30258 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 30259 ;;		 -> I2C2_NackCb(1), 
 30260 ;;  ptr             2   50[BANK0 ] PTR void 
 30261 ;;		 -> NULL(0), 
 30262 ;; Auto vars:     Size  Location     Type
 30263 ;;		None
 30264 ;; Return value:  Size  Location     Type
 30265 ;;                  1    wreg      void 
 30266 ;; Registers used:
 30267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30268 ;; Tracked objects:
 30269 ;;		On entry : 3F/0
 30270 ;;		On exit  : 3F/0
 30271 ;;		Unchanged: 0/0
 30272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30277 ;;Total ram usage:        4 bytes
 30278 ;; Hardware stack levels used:    1
 30279 ;; Hardware stack levels required when called:   18
 30280 ;; This function calls:
 30281 ;;		_I2C2_SetCallback
 30282 ;; This function is called by:
 30283 ;;		_I2C2_MOpen
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text138
 30288  00A3A2                     __ptext138:
 30289                           	opt callstack 0
 30290  00A3A2                     _I2C2_SetDataNackCallback:
 30291                           	opt callstack 7
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;mcc_generated_files/i2c2_master.c: 319: void I2C2_SetDataNackCallback(i2c2_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c2_master.c: 320: {;mcc_generated_files/i2c2_master.
      +                          c: 321:     I2C2_SetCallback(I2C2_DATA_NACK, cb, ptr);
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;incstack = 0
 30298  00A3A2  0060  F240  F08B   	movff	I2C2_SetDataNackCallback@cb,I2C2_SetCallback@cb
 30299  00A3A8  0060  F244  F08C   	movff	I2C2_SetDataNackCallback@cb+1,I2C2_SetCallback@cb+1
 30300  00A3AE  0060  F248  F08D   	movff	I2C2_SetDataNackCallback@ptr,I2C2_SetCallback@ptr
 30301  00A3B4  0060  F24C  F08E   	movff	I2C2_SetDataNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 30302  00A3BA  0E03               	movlw	3
 30303  00A3BC  ECD7  F045         	call	_I2C2_SetCallback
 30304                           
 30305                           ; BSR set to: 0
 30306  00A3C0  0012               	return		;funcret
 30307  00A3C2                     __end_of_I2C2_SetDataNackCallback:
 30308                           	opt callstack 0
 30309                           
 30310 ;; *************** function _I2C2_SetAddressNackCallback *****************
 30311 ;; Defined at:
 30312 ;;		line 314 in file "mcc_generated_files/i2c2_master.c"
 30313 ;; Parameters:    Size  Location     Type
 30314 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 30315 ;;		 -> I2C2_NackCb(1), Absolute function(1), 
 30316 ;;  ptr             2   50[BANK0 ] PTR void 
 30317 ;;		 -> NULL(0), 
 30318 ;; Auto vars:     Size  Location     Type
 30319 ;;		None
 30320 ;; Return value:  Size  Location     Type
 30321 ;;                  1    wreg      void 
 30322 ;; Registers used:
 30323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30324 ;; Tracked objects:
 30325 ;;		On entry : 3F/0
 30326 ;;		On exit  : 3F/0
 30327 ;;		Unchanged: 0/0
 30328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30333 ;;Total ram usage:        4 bytes
 30334 ;; Hardware stack levels used:    1
 30335 ;; Hardware stack levels required when called:   18
 30336 ;; This function calls:
 30337 ;;		_I2C2_SetCallback
 30338 ;; This function is called by:
 30339 ;;		_I2C2_MOpen
 30340 ;; This function uses a non-reentrant model
 30341 ;;
 30342                           
 30343                           	psect	text139
 30344  00A3C2                     __ptext139:
 30345                           	opt callstack 0
 30346  00A3C2                     _I2C2_SetAddressNackCallback:
 30347                           	opt callstack 7
 30348                           
 30349                           ; BSR set to: 0
 30350                           ;mcc_generated_files/i2c2_master.c: 314: void I2C2_SetAddressNackCallback(i2c2_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c2_master.c: 315: {;mcc_generated_files/i2c2_mast
      +                          er.c: 316:     I2C2_SetCallback(I2C2_ADDR_NACK, cb, ptr);
 30351                           
 30352                           ; BSR set to: 0
 30353                           ;incstack = 0
 30354  00A3C2  0060  F240  F08B   	movff	I2C2_SetAddressNackCallback@cb,I2C2_SetCallback@cb
 30355  00A3C8  0060  F244  F08C   	movff	I2C2_SetAddressNackCallback@cb+1,I2C2_SetCallback@cb+1
 30356  00A3CE  0060  F248  F08D   	movff	I2C2_SetAddressNackCallback@ptr,I2C2_SetCallback@ptr
 30357  00A3D4  0060  F24C  F08E   	movff	I2C2_SetAddressNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 30358  00A3DA  0E02               	movlw	2
 30359  00A3DC  ECD7  F045         	call	_I2C2_SetCallback
 30360                           
 30361                           ; BSR set to: 0
 30362  00A3E0  0012               	return		;funcret
 30363  00A3E2                     __end_of_I2C2_SetAddressNackCallback:
 30364                           	opt callstack 0
 30365                           
 30366 ;; *************** function _I2C2_SetCallback *****************
 30367 ;; Defined at:
 30368 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 30369 ;; Parameters:    Size  Location     Type
 30370 ;;  idx             1    wreg     enum E16468
 30371 ;;  cb              2   43[BANK0 ] PTR FTN(PTR void ,)enum 
 30372 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 30373 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 30374 ;;  ptr             2   45[BANK0 ] PTR void 
 30375 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 30376 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 30377 ;; Auto vars:     Size  Location     Type
 30378 ;;  idx             1   47[BANK0 ] enum E16468
 30379 ;; Return value:  Size  Location     Type
 30380 ;;                  1    wreg      void 
 30381 ;; Registers used:
 30382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30383 ;; Tracked objects:
 30384 ;;		On entry : 3F/0
 30385 ;;		On exit  : 3F/0
 30386 ;;		Unchanged: 0/0
 30387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30391 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30392 ;;Total ram usage:        5 bytes
 30393 ;; Hardware stack levels used:    1
 30394 ;; Hardware stack levels required when called:   17
 30395 ;; This function calls:
 30396 ;;		Nothing
 30397 ;; This function is called by:
 30398 ;;		_I2C2_SetDataCompleteCallback
 30399 ;;		_I2C2_SetAddressNackCallback
 30400 ;;		_I2C2_SetDataNackCallback
 30401 ;; This function uses a non-reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text140
 30405  008BAE                     __ptext140:
 30406                           	opt callstack 0
 30407  008BAE                     _I2C2_SetCallback:
 30408                           	opt callstack 4
 30409                           
 30410                           ; BSR set to: 0
 30411                           ;incstack = 0
 30412                           ;I2C2_SetCallback@idx stored from wreg
 30413  008BAE  6F8F               	movwf	I2C2_SetCallback@idx& (0+255),b
 30414                           
 30415                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 30416  008BB0  0100               	movlb	0	; () banked
 30417  008BB2  518B               	movf	I2C2_SetCallback@cb& (0+255),w,b
 30418  008BB4  118C               	iorwf	(I2C2_SetCallback@cb+1)& (0+255),w,b
 30419  008BB6  B4D8               	btfsc	status,2,c
 30420  008BB8  D01D               	goto	l17033
 30421                           
 30422                           ; BSR set to: 0
 30423                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 30424  008BBA  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30425  008BBC  0D02               	mullw	2
 30426  008BBE  0E00               	movlw	low _I2C2_Status
 30427  008BC0  24F3               	addwf	243,w,c
 30428  008BC2  6ED9               	movwf	fsr2l,c
 30429  008BC4  0E02               	movlw	high _I2C2_Status
 30430  008BC6  20F4               	addwfc	prodh,w,c
 30431  008BC8  6EDA               	movwf	fsr2h,c
 30432  008BCA  0060  F22F  FFDE   	movff	I2C2_SetCallback@cb,postinc2
 30433  008BD0  0060  F233  FFDD   	movff	I2C2_SetCallback@cb+1,postdec2
 30434                           
 30435                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 30436  008BD6  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30437  008BD8  0D02               	mullw	2
 30438  008BDA  0E0C               	movlw	low (_I2C2_Status+12)
 30439  008BDC  24F3               	addwf	243,w,c
 30440  008BDE  6ED9               	movwf	fsr2l,c
 30441  008BE0  0E02               	movlw	high (_I2C2_Status+12)
 30442  008BE2  20F4               	addwfc	prodh,w,c
 30443  008BE4  6EDA               	movwf	fsr2h,c
 30444  008BE6  0060  F237  FFDE   	movff	I2C2_SetCallback@ptr,postinc2
 30445  008BEC  0060  F23B  FFDD   	movff	I2C2_SetCallback@ptr+1,postdec2
 30446                           
 30447                           ;mcc_generated_files/i2c2_master.c: 340:     }
 30448  008BF2  0012               	return	
 30449  008BF4                     l17033:
 30450                           
 30451                           ; BSR set to: 0
 30452                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 30453  008BF4  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30454  008BF6  0D02               	mullw	2
 30455  008BF8  0E00               	movlw	low _I2C2_Status
 30456  008BFA  24F3               	addwf	243,w,c
 30457  008BFC  6ED9               	movwf	fsr2l,c
 30458  008BFE  0E02               	movlw	high _I2C2_Status
 30459  008C00  20F4               	addwfc	prodh,w,c
 30460  008C02  6EDA               	movwf	fsr2h,c
 30461  008C04  0ECE               	movlw	low _I2C2_CallbackReturnStop
 30462  008C06  6EDE               	movwf	postinc2,c
 30463  008C08  0EA7               	movlw	high _I2C2_CallbackReturnStop
 30464  008C0A  6EDD               	movwf	postdec2,c
 30465                           
 30466                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 30467  008C0C  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 30468  008C0E  0D02               	mullw	2
 30469  008C10  0E0C               	movlw	low (_I2C2_Status+12)
 30470  008C12  24F3               	addwf	243,w,c
 30471  008C14  6ED9               	movwf	fsr2l,c
 30472  008C16  0E02               	movlw	high (_I2C2_Status+12)
 30473  008C18  20F4               	addwfc	prodh,w,c
 30474  008C1A  6EDA               	movwf	fsr2h,c
 30475  008C1C  0E00               	movlw	0
 30476  008C1E  6EDE               	movwf	postinc2,c
 30477  008C20  0E00               	movlw	0
 30478  008C22  6EDD               	movwf	postdec2,c
 30479                           
 30480                           ; BSR set to: 0
 30481  008C24  0012               	return		;funcret
 30482  008C26                     __end_of_I2C2_SetCallback:
 30483                           	opt callstack 0
 30484                           
 30485 ;; *************** function _I2C2_Open *****************
 30486 ;; Defined at:
 30487 ;;		line 204 in file "mcc_generated_files/i2c2_master.c"
 30488 ;; Parameters:    Size  Location     Type
 30489 ;;  address         1    wreg     unsigned char 
 30490 ;; Auto vars:     Size  Location     Type
 30491 ;;  address         1   45[BANK0 ] unsigned char 
 30492 ;;  returnValue     1   46[BANK0 ] enum E353
 30493 ;; Return value:  Size  Location     Type
 30494 ;;                  1    wreg      enum E353
 30495 ;; Registers used:
 30496 ;;		wreg, status,2, status,0, cstack
 30497 ;; Tracked objects:
 30498 ;;		On entry : 3F/2
 30499 ;;		On exit  : 3F/0
 30500 ;;		Unchanged: 0/0
 30501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30506 ;;Total ram usage:        2 bytes
 30507 ;; Hardware stack levels used:    1
 30508 ;; Hardware stack levels required when called:   18
 30509 ;; This function calls:
 30510 ;;		_I2C2_MasterClearIrq
 30511 ;;		_I2C2_MasterEnableIrq
 30512 ;;		_I2C2_MasterOpen
 30513 ;;		_I2C2_SetInterruptHandler
 30514 ;; This function is called by:
 30515 ;;		_I2C2_MOpen
 30516 ;; This function uses a non-reentrant model
 30517 ;;
 30518                           
 30519                           	psect	text141
 30520  00864A                     __ptext141:
 30521                           	opt callstack 0
 30522  00864A                     _I2C2_Open:
 30523                           	opt callstack 7
 30524                           
 30525                           ; BSR set to: 0
 30526                           ;incstack = 0
 30527                           ;I2C2_Open@address stored from wreg
 30528  00864A  0100               	movlb	0	; () banked
 30529  00864C  6F8D               	movwf	I2C2_Open@address& (0+255),b
 30530                           
 30531                           ;mcc_generated_files/i2c2_master.c: 204: i2c2_error_t I2C2_Open(i2c2_address_t address);
      +                          mcc_generated_files/i2c2_master.c: 205: {;mcc_generated_files/i2c2_master.c: 206:     i2
      +                          c2_error_t returnValue = I2C2_BUSY;
 30532  00864E  0E01               	movlw	1
 30533  008650  0100               	movlb	0	; () banked
 30534  008652  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;mcc_generated_files/i2c2_master.c: 208:     if(!I2C2_Status.inUse)
 30538  008654  0102               	movlb	2	; () banked
 30539  008656  B723               	btfsc	(_I2C2_Status+35)& (0+255),3,b
 30540  008658  D046               	goto	l17377
 30541                           
 30542                           ; BSR set to: 2
 30543                           ;mcc_generated_files/i2c2_master.c: 209:     {;mcc_generated_files/i2c2_master.c: 210:  
      +                                 I2C2_Status.address = address;
 30544  00865A  0060  F234  F21C   	movff	I2C2_Open@address,_I2C2_Status+28
 30545                           
 30546                           ; BSR set to: 2
 30547                           ;mcc_generated_files/i2c2_master.c: 211:         I2C2_Status.busy = 0;
 30548  008660  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 30549                           
 30550                           ; BSR set to: 2
 30551                           ;mcc_generated_files/i2c2_master.c: 212:         I2C2_Status.inUse = 1;
 30552  008662  8723               	bsf	(_I2C2_Status+35)& (0+255),3,b
 30553                           
 30554                           ; BSR set to: 2
 30555                           ;mcc_generated_files/i2c2_master.c: 213:         I2C2_Status.addressNackCheck = 0;
 30556  008664  0EFC               	movlw	-4
 30557  008666  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 30558                           
 30559                           ; BSR set to: 2
 30560                           ;mcc_generated_files/i2c2_master.c: 214:         I2C2_Status.state = I2C2_RESET;
 30561  008668  0E0F               	movlw	15
 30562  00866A  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 30563                           
 30564                           ; BSR set to: 2
 30565                           ;mcc_generated_files/i2c2_master.c: 215:         I2C2_Status.time_out_value = 500;
 30566  00866C  0E01               	movlw	1
 30567  00866E  6F1B               	movwf	(_I2C2_Status+27)& (0+255),b
 30568  008670  0EF4               	movlw	244
 30569  008672  6F1A               	movwf	(_I2C2_Status+26)& (0+255),b
 30570                           
 30571                           ; BSR set to: 2
 30572                           ;mcc_generated_files/i2c2_master.c: 216:         I2C2_Status.bufferFree = 1;
 30573  008674  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 30574                           
 30575                           ; BSR set to: 2
 30576                           ;mcc_generated_files/i2c2_master.c: 219:         I2C2_Status.callbackTable[I2C2_DATA_COM
      +                          PLETE]=I2C2_CallbackReturnStop;
 30577  008676  0ECE               	movlw	low _I2C2_CallbackReturnStop
 30578  008678  6F00               	movwf	_I2C2_Status& (0+255),b
 30579  00867A  0EA7               	movlw	high _I2C2_CallbackReturnStop
 30580  00867C  6F01               	movwf	(_I2C2_Status+1)& (0+255),b
 30581                           
 30582                           ; BSR set to: 2
 30583                           ;mcc_generated_files/i2c2_master.c: 220:         I2C2_Status.callbackPayload[I2C2_DATA_C
      +                          OMPLETE] = ((void*)0);
 30584  00867E  0E00               	movlw	0
 30585  008680  6F0C               	movwf	(_I2C2_Status+12)& (0+255),b
 30586  008682  0E00               	movlw	0
 30587  008684  6F0D               	movwf	(_I2C2_Status+13)& (0+255),b
 30588                           
 30589                           ; BSR set to: 2
 30590                           ;mcc_generated_files/i2c2_master.c: 221:         I2C2_Status.callbackTable[I2C2_WRITE_CO
      +                          LLISION]=I2C2_CallbackReturnStop;
 30591  008686  0ECE               	movlw	low _I2C2_CallbackReturnStop
 30592  008688  6F02               	movwf	(_I2C2_Status+2)& (0+255),b
 30593  00868A  0EA7               	movlw	high _I2C2_CallbackReturnStop
 30594  00868C  6F03               	movwf	(_I2C2_Status+3)& (0+255),b
 30595                           
 30596                           ; BSR set to: 2
 30597                           ;mcc_generated_files/i2c2_master.c: 222:         I2C2_Status.callbackPayload[I2C2_WRITE_
      +                          COLLISION] = ((void*)0);
 30598  00868E  0E00               	movlw	0
 30599  008690  6F0E               	movwf	(_I2C2_Status+14)& (0+255),b
 30600  008692  0E00               	movlw	0
 30601  008694  6F0F               	movwf	(_I2C2_Status+15)& (0+255),b
 30602                           
 30603                           ; BSR set to: 2
 30604                           ;mcc_generated_files/i2c2_master.c: 223:         I2C2_Status.callbackTable[I2C2_ADDR_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30605  008696  0ECE               	movlw	low _I2C2_CallbackReturnStop
 30606  008698  6F04               	movwf	(_I2C2_Status+4)& (0+255),b
 30607  00869A  0EA7               	movlw	high _I2C2_CallbackReturnStop
 30608  00869C  6F05               	movwf	(_I2C2_Status+5)& (0+255),b
 30609                           
 30610                           ; BSR set to: 2
 30611                           ;mcc_generated_files/i2c2_master.c: 224:         I2C2_Status.callbackPayload[I2C2_ADDR_N
      +                          ACK] = ((void*)0);
 30612  00869E  0E00               	movlw	0
 30613  0086A0  6F10               	movwf	(_I2C2_Status+16)& (0+255),b
 30614  0086A2  0E00               	movlw	0
 30615  0086A4  6F11               	movwf	(_I2C2_Status+17)& (0+255),b
 30616                           
 30617                           ; BSR set to: 2
 30618                           ;mcc_generated_files/i2c2_master.c: 225:         I2C2_Status.callbackTable[I2C2_DATA_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30619  0086A6  0ECE               	movlw	low _I2C2_CallbackReturnStop
 30620  0086A8  6F06               	movwf	(_I2C2_Status+6)& (0+255),b
 30621  0086AA  0EA7               	movlw	high _I2C2_CallbackReturnStop
 30622  0086AC  6F07               	movwf	(_I2C2_Status+7)& (0+255),b
 30623                           
 30624                           ; BSR set to: 2
 30625                           ;mcc_generated_files/i2c2_master.c: 226:         I2C2_Status.callbackPayload[I2C2_DATA_N
      +                          ACK] = ((void*)0);
 30626  0086AE  0E00               	movlw	0
 30627  0086B0  6F12               	movwf	(_I2C2_Status+18)& (0+255),b
 30628  0086B2  0E00               	movlw	0
 30629  0086B4  6F13               	movwf	(_I2C2_Status+19)& (0+255),b
 30630                           
 30631                           ; BSR set to: 2
 30632                           ;mcc_generated_files/i2c2_master.c: 227:         I2C2_Status.callbackTable[I2C2_TIMEOUT]
      +                          =I2C2_CallbackReturnReset;
 30633  0086B6  0EC4               	movlw	low _I2C2_CallbackReturnReset
 30634  0086B8  6F08               	movwf	(_I2C2_Status+8)& (0+255),b
 30635  0086BA  0EA7               	movlw	high _I2C2_CallbackReturnReset
 30636  0086BC  6F09               	movwf	(_I2C2_Status+9)& (0+255),b
 30637                           
 30638                           ; BSR set to: 2
 30639                           ;mcc_generated_files/i2c2_master.c: 228:         I2C2_Status.callbackPayload[I2C2_TIMEOU
      +                          T] = ((void*)0);
 30640  0086BE  0E00               	movlw	0
 30641  0086C0  6F14               	movwf	(_I2C2_Status+20)& (0+255),b
 30642  0086C2  0E00               	movlw	0
 30643  0086C4  6F15               	movwf	(_I2C2_Status+21)& (0+255),b
 30644                           
 30645                           ; BSR set to: 2
 30646                           ;mcc_generated_files/i2c2_master.c: 230:         I2C2_SetInterruptHandler(I2C2_MasterIsr
      +                          );
 30647  0086C6  0E48               	movlw	low _I2C2_MasterIsr
 30648  0086C8  0100               	movlb	0	; () banked
 30649  0086CA  6F8B               	movwf	I2C2_SetInterruptHandler@InterruptHandler& (0+255),b
 30650  0086CC  0EA8               	movlw	high _I2C2_MasterIsr
 30651  0086CE  6F8C               	movwf	(I2C2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30652  0086D0  EC70  F053         	call	_I2C2_SetInterruptHandler	;wreg free
 30653                           
 30654                           ; BSR set to: 0
 30655                           ;mcc_generated_files/i2c2_master.c: 231:         I2C2_MasterClearIrq();
 30656  0086D4  EC04  F054         	call	_I2C2_MasterClearIrq	;wreg free
 30657                           
 30658                           ; BSR set to: 61
 30659                           ;mcc_generated_files/i2c2_master.c: 232:         I2C2_MasterOpen();
 30660  0086D8  EC4B  F051         	call	_I2C2_MasterOpen	;wreg free
 30661                           
 30662                           ; BSR set to: 61
 30663                           ;mcc_generated_files/i2c2_master.c: 233:         I2C2_MasterEnableIrq();
 30664  0086DC  ECB8  F052         	call	_I2C2_MasterEnableIrq	;wreg free
 30665                           
 30666                           ; BSR set to: 61
 30667                           ;mcc_generated_files/i2c2_master.c: 234:         returnValue = I2C2_NOERR;
 30668  0086E0  0E00               	movlw	0
 30669  0086E2  0100               	movlb	0	; () banked
 30670  0086E4  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 30671  0086E6                     l17377:
 30672                           
 30673                           ;mcc_generated_files/i2c2_master.c: 236:     return returnValue;
 30674  0086E6  0100               	movlb	0	; () banked
 30675  0086E8  518E               	movf	I2C2_Open@returnValue& (0+255),w,b
 30676                           
 30677                           ; BSR set to: 0
 30678  0086EA  0012               	return		;funcret
 30679  0086EC                     __end_of_I2C2_Open:
 30680                           	opt callstack 0
 30681                           
 30682 ;; *************** function _I2C2_SetInterruptHandler *****************
 30683 ;; Defined at:
 30684 ;;		line 329 in file "mcc_generated_files/i2c2_master.c"
 30685 ;; Parameters:    Size  Location     Type
 30686 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 30687 ;;		 -> I2C2_MasterIsr(1), 
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;		None
 30690 ;; Return value:  Size  Location     Type
 30691 ;;                  1    wreg      void 
 30692 ;; Registers used:
 30693 ;;		wreg, status,2, status,0
 30694 ;; Tracked objects:
 30695 ;;		On entry : 3F/0
 30696 ;;		On exit  : 3F/0
 30697 ;;		Unchanged: 3F/0
 30698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30703 ;;Total ram usage:        2 bytes
 30704 ;; Hardware stack levels used:    1
 30705 ;; Hardware stack levels required when called:   17
 30706 ;; This function calls:
 30707 ;;		Nothing
 30708 ;; This function is called by:
 30709 ;;		_I2C2_Open
 30710 ;; This function uses a non-reentrant model
 30711 ;;
 30712                           
 30713                           	psect	text142
 30714  00A6E0                     __ptext142:
 30715                           	opt callstack 0
 30716  00A6E0                     _I2C2_SetInterruptHandler:
 30717                           	opt callstack 7
 30718                           
 30719                           ; BSR set to: 0
 30720                           ;mcc_generated_files/i2c2_master.c: 329: void I2C2_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c2_master.c: 330: {;mcc_generated_files/i2c2_maste
      +                          r.c: 331:     I2C2_InterruptHandler = InterruptHandler;
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;incstack = 0
 30724  00A6E0  0060  F22C  F0B8   	movff	I2C2_SetInterruptHandler@InterruptHandler,_I2C2_InterruptHandler
 30725  00A6E6  0060  F230  F0B9   	movff	I2C2_SetInterruptHandler@InterruptHandler+1,_I2C2_InterruptHandler+1
 30726                           
 30727                           ; BSR set to: 0
 30728  00A6EC  0012               	return		;funcret
 30729  00A6EE                     __end_of_I2C2_SetInterruptHandler:
 30730                           	opt callstack 0
 30731                           
 30732 ;; *************** function _I2C2_MasterOpen *****************
 30733 ;; Defined at:
 30734 ;;		line 633 in file "mcc_generated_files/i2c2_master.c"
 30735 ;; Parameters:    Size  Location     Type
 30736 ;;		None
 30737 ;; Auto vars:     Size  Location     Type
 30738 ;;		None
 30739 ;; Return value:  Size  Location     Type
 30740 ;;                  1    wreg      _Bool 
 30741 ;; Registers used:
 30742 ;;		wreg, status,2
 30743 ;; Tracked objects:
 30744 ;;		On entry : 3F/3D
 30745 ;;		On exit  : 3F/3D
 30746 ;;		Unchanged: 0/0
 30747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30752 ;;Total ram usage:        0 bytes
 30753 ;; Hardware stack levels used:    1
 30754 ;; Hardware stack levels required when called:   17
 30755 ;; This function calls:
 30756 ;;		Nothing
 30757 ;; This function is called by:
 30758 ;;		_I2C2_Open
 30759 ;; This function uses a non-reentrant model
 30760 ;;
 30761                           
 30762                           	psect	text143
 30763  00A296                     __ptext143:
 30764                           	opt callstack 0
 30765  00A296                     _I2C2_MasterOpen:
 30766                           	opt callstack 7
 30767                           
 30768                           ; BSR set to: 61
 30769                           ;mcc_generated_files/i2c2_master.c: 635:     if(!I2C2CON0bits.EN)
 30770                           
 30771                           ; BSR set to: 0
 30772                           ;incstack = 0
 30773  00A296  BF5D               	btfsc	93,7,b	;volatile
 30774  00A298  0012               	return	
 30775                           
 30776                           ; BSR set to: 61
 30777                           ;mcc_generated_files/i2c2_master.c: 636:     {;mcc_generated_files/i2c2_master.c: 638:  
      +                                 I2C2PIR = 0x00;
 30778  00A29A  0E00               	movlw	0
 30779  00A29C  6F63               	movwf	99,b	;volatile
 30780                           
 30781                           ;mcc_generated_files/i2c2_master.c: 640:         I2C2PIE = 0x00;
 30782  00A29E  0E00               	movlw	0
 30783  00A2A0  6F64               	movwf	100,b	;volatile
 30784                           
 30785                           ;mcc_generated_files/i2c2_master.c: 642:         I2C2ERR = 0x00;
 30786  00A2A2  0E00               	movlw	0
 30787  00A2A4  6F60               	movwf	96,b	;volatile
 30788                           
 30789                           ; BSR set to: 61
 30790                           ;mcc_generated_files/i2c2_master.c: 644:         I2C2CNT = 0xFF;
 30791  00A2A6  6956               	setf	86,b	;volatile
 30792                           
 30793                           ;mcc_generated_files/i2c2_master.c: 646:         RB1I2C = 0x51;
 30794  00A2A8  0E51               	movlw	81
 30795  00A2AA  013A               	movlb	58	; () banked
 30796  00A2AC  6F5A               	movwf	90,b	;volatile
 30797                           
 30798                           ;mcc_generated_files/i2c2_master.c: 648:         RB2I2C = 0x51;
 30799  00A2AE  0E51               	movlw	81
 30800  00A2B0  6F5B               	movwf	91,b	;volatile
 30801                           
 30802                           ; BSR set to: 58
 30803                           ;mcc_generated_files/i2c2_master.c: 650:         I2C2CON0bits.EN = 1;
 30804  00A2B2  013D               	movlb	61	; () banked
 30805  00A2B4  8F5D               	bsf	93,7,b	;volatile
 30806                           
 30807                           ; BSR set to: 61
 30808  00A2B6  0012               	return		;funcret
 30809  00A2B8                     __end_of_I2C2_MasterOpen:
 30810                           	opt callstack 0
 30811                           
 30812 ;; *************** function _I2C2_MasterEnableIrq *****************
 30813 ;; Defined at:
 30814 ;;		line 776 in file "mcc_generated_files/i2c2_master.c"
 30815 ;; Parameters:    Size  Location     Type
 30816 ;;		None
 30817 ;; Auto vars:     Size  Location     Type
 30818 ;;		None
 30819 ;; Return value:  Size  Location     Type
 30820 ;;                  1    wreg      void 
 30821 ;; Registers used:
 30822 ;;		None
 30823 ;; Tracked objects:
 30824 ;;		On entry : 3F/3D
 30825 ;;		On exit  : 3F/3D
 30826 ;;		Unchanged: 0/0
 30827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30832 ;;Total ram usage:        0 bytes
 30833 ;; Hardware stack levels used:    1
 30834 ;; Hardware stack levels required when called:   17
 30835 ;; This function calls:
 30836 ;;		Nothing
 30837 ;; This function is called by:
 30838 ;;		_I2C2_Open
 30839 ;; This function uses a non-reentrant model
 30840 ;;
 30841                           
 30842                           	psect	text144
 30843  00A570                     __ptext144:
 30844                           	opt callstack 0
 30845  00A570                     _I2C2_MasterEnableIrq:
 30846                           	opt callstack 7
 30847                           
 30848                           ; BSR set to: 61
 30849                           ;mcc_generated_files/i2c2_master.c: 778:     PIE6bits.I2C2IE = 1;
 30850                           
 30851                           ; BSR set to: 61
 30852                           ;incstack = 0
 30853  00A570  0139               	movlb	57	; () banked
 30854  00A572  8196               	bsf	150,0,b	;volatile
 30855                           
 30856                           ;mcc_generated_files/i2c2_master.c: 779:     PIE6bits.I2C2EIE = 1;
 30857  00A574  8396               	bsf	150,1,b	;volatile
 30858                           
 30859                           ;mcc_generated_files/i2c2_master.c: 780:     PIE5bits.I2C2RXIE = 1;
 30860  00A576  8D95               	bsf	149,6,b	;volatile
 30861                           
 30862                           ;mcc_generated_files/i2c2_master.c: 781:     PIE5bits.I2C2TXIE = 1;
 30863  00A578  8F95               	bsf	149,7,b	;volatile
 30864                           
 30865                           ;mcc_generated_files/i2c2_master.c: 783:     I2C2PIEbits.PCIE = 1;
 30866  00A57A  013D               	movlb	61	; () banked
 30867  00A57C  8564               	bsf	100,2,b	;volatile
 30868                           
 30869                           ;mcc_generated_files/i2c2_master.c: 784:     I2C2PIEbits.CNTIE = 1;
 30870  00A57E  8F64               	bsf	100,7,b	;volatile
 30871                           
 30872                           ;mcc_generated_files/i2c2_master.c: 785:     I2C2ERRbits.NACKIE = 1;
 30873  00A580  8160               	bsf	96,0,b	;volatile
 30874                           
 30875                           ; BSR set to: 61
 30876  00A582  0012               	return		;funcret
 30877  00A584                     __end_of_I2C2_MasterEnableIrq:
 30878                           	opt callstack 0
 30879                           
 30880 ;; *************** function _I2C2_MAck *****************
 30881 ;; Defined at:
 30882 ;;		line 48 in file "i2c2_mux.c"
 30883 ;; Parameters:    Size  Location     Type
 30884 ;;		None
 30885 ;; Auto vars:     Size  Location     Type
 30886 ;;		None
 30887 ;; Return value:  Size  Location     Type
 30888 ;;                  1    wreg      _Bool 
 30889 ;; Registers used:
 30890 ;;		wreg, status,2
 30891 ;; Tracked objects:
 30892 ;;		On entry : 3E/0
 30893 ;;		On exit  : 3F/0
 30894 ;;		Unchanged: 0/0
 30895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30900 ;;Total ram usage:        0 bytes
 30901 ;; Hardware stack levels used:    1
 30902 ;; Hardware stack levels required when called:   17
 30903 ;; This function calls:
 30904 ;;		Nothing
 30905 ;; This function is called by:
 30906 ;;		_MonitorMsgForcedSend
 30907 ;;		_MonitorMsgSendBlock
 30908 ;; This function uses a non-reentrant model
 30909 ;;
 30910                           
 30911                           	psect	text145
 30912  00A842                     __ptext145:
 30913                           	opt callstack 0
 30914  00A842                     _I2C2_MAck:
 30915                           	opt callstack 9
 30916                           
 30917                           ;i2c2_mux.c: 49:     return lastI2C2MAckResponse;
 30918                           
 30919                           ; BSR set to: 61
 30920                           ;incstack = 0
 30921  00A842  0100               	movlb	0	; () banked
 30922  00A844  51BC               	movf	_lastI2C2MAckResponse& (0+255),w,b
 30923                           
 30924                           ; BSR set to: 0
 30925  00A846  0012               	return		;funcret
 30926  00A848                     __end_of_I2C2_MAck:
 30927                           	opt callstack 0
 30928                           
 30929 ;; *************** function _MonitorMsgBusy *****************
 30930 ;; Defined at:
 30931 ;;		line 41 in file "monComm.c"
 30932 ;; Parameters:    Size  Location     Type
 30933 ;;		None
 30934 ;; Auto vars:     Size  Location     Type
 30935 ;;		None
 30936 ;; Return value:  Size  Location     Type
 30937 ;;                  1    wreg      _Bool 
 30938 ;; Registers used:
 30939 ;;		wreg, status,2, status,0, cstack
 30940 ;; Tracked objects:
 30941 ;;		On entry : 0/0
 30942 ;;		On exit  : 3F/0
 30943 ;;		Unchanged: 0/0
 30944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30949 ;;Total ram usage:        0 bytes
 30950 ;; Hardware stack levels used:    1
 30951 ;; Hardware stack levels required when called:   20
 30952 ;; This function calls:
 30953 ;;		_I2C2_MClose
 30954 ;; This function is called by:
 30955 ;;		_main
 30956 ;;		_MonitorMsgSendBlock
 30957 ;; This function uses a non-reentrant model
 30958 ;;
 30959                           
 30960                           	psect	text146
 30961  00A5E0                     __ptext146:
 30962                           	opt callstack 0
 30963  00A5E0                     _MonitorMsgBusy:
 30964                           	opt callstack 7
 30965                           
 30966                           ;monComm.c: 42:     return (I2C2_MClose() == I2C2_BUSY);
 30967                           
 30968                           ; BSR set to: 0
 30969                           ;incstack = 0
 30970  00A5E0  ECFF  F04F         	call	_I2C2_MClose	;wreg free
 30971  00A5E4  06E8               	decf	wreg,f,c
 30972  00A5E6  A4D8               	btfss	status,2,c
 30973  00A5E8  D002               	goto	u18190
 30974  00A5EA  0E01               	movlw	1
 30975  00A5EC  0012               	return	
 30976  00A5EE                     u18190:
 30977  00A5EE  0E00               	movlw	0
 30978                           
 30979                           ; BSR set to: 0
 30980  00A5F0  0012               	return		;funcret
 30981  00A5F2                     __end_of_MonitorMsgBusy:
 30982                           	opt callstack 0
 30983                           
 30984 ;; *************** function _I2C2_MClose *****************
 30985 ;; Defined at:
 30986 ;;		line 102 in file "i2c2_mux.c"
 30987 ;; Parameters:    Size  Location     Type
 30988 ;;		None
 30989 ;; Auto vars:     Size  Location     Type
 30990 ;;  trfRsp          1   44[BANK0 ] enum E16385
 30991 ;; Return value:  Size  Location     Type
 30992 ;;                  1    wreg      enum E16385
 30993 ;; Registers used:
 30994 ;;		wreg, status,2, status,0, cstack
 30995 ;; Tracked objects:
 30996 ;;		On entry : 0/0
 30997 ;;		On exit  : 3F/0
 30998 ;;		Unchanged: 0/0
 30999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31003 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31004 ;;Total ram usage:        1 bytes
 31005 ;; Hardware stack levels used:    1
 31006 ;; Hardware stack levels required when called:   19
 31007 ;; This function calls:
 31008 ;;		_I2C2_Close
 31009 ;; This function is called by:
 31010 ;;		_MonitorMsgBusy
 31011 ;;		_MonitorMsgForcedSend
 31012 ;; This function uses a non-reentrant model
 31013 ;;
 31014                           
 31015                           	psect	text147
 31016  009FFE                     __ptext147:
 31017                           	opt callstack 0
 31018  009FFE                     _I2C2_MClose:
 31019                           	opt callstack 7
 31020                           
 31021                           ;i2c2_mux.c: 103:     i2c2_error_t trfRsp;;i2c2_mux.c: 105:     trfRsp = I2C2_Close();
 31022                           
 31023                           ; BSR set to: 0
 31024                           ;incstack = 0
 31025  009FFE  EC6E  F050         	call	_I2C2_Close	;wreg free
 31026  00A002  6F8C               	movwf	I2C2_MClose@trfRsp& (0+255),b
 31027                           
 31028                           ; BSR set to: 0
 31029                           ;i2c2_mux.c: 106:     if (trfRsp != I2C2_BUSY) {
 31030  00A004  058C               	decf	I2C2_MClose@trfRsp& (0+255),w,b
 31031  00A006  B4D8               	btfsc	status,2,c
 31032  00A008  D00F               	goto	l17701
 31033                           
 31034                           ; BSR set to: 0
 31035                           ;i2c2_mux.c: 108:         if (currentTrfAddr == 0x50){
 31036  00A00A  0E50               	movlw	80
 31037  00A00C  0101               	movlb	1	; () banked
 31038  00A00E  19B7               	xorwf	_currentTrfAddr& (0+255),w,b
 31039  00A010  A4D8               	btfss	status,2,c
 31040  00A012  D004               	goto	l2712
 31041                           
 31042                           ; BSR set to: 1
 31043                           ;i2c2_mux.c: 109:             lastI2C2MTrfResponse = trfRsp;
 31044  00A014  0060  F230  F0BD   	movff	I2C2_MClose@trfRsp,_lastI2C2MTrfResponse
 31045                           
 31046                           ;i2c2_mux.c: 110:         } else {
 31047  00A01A  D003               	goto	l17697
 31048  00A01C                     l2712:
 31049                           
 31050                           ; BSR set to: 1
 31051                           ;i2c2_mux.c: 111:             lastI2C2LTrfResponse = trfRsp;
 31052  00A01C  0060  F230  F254   	movff	I2C2_MClose@trfRsp,_lastI2C2LTrfResponse
 31053  00A022                     l17697:
 31054                           
 31055                           ; BSR set to: 1
 31056                           ;i2c2_mux.c: 114:         return lastI2C2MTrfResponse;
 31057  00A022  0100               	movlb	0	; () banked
 31058  00A024  51BD               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 31059  00A026  0012               	return	
 31060  00A028                     l17701:
 31061                           
 31062                           ; BSR set to: 0
 31063                           ;i2c2_mux.c: 116:     return I2C2_BUSY;
 31064  00A028  0E01               	movlw	1
 31065                           
 31066                           ; BSR set to: 0
 31067  00A02A  0012               	return		;funcret
 31068  00A02C                     __end_of_I2C2_MClose:
 31069                           	opt callstack 0
 31070                           
 31071 ;; *************** function _I2C2_Close *****************
 31072 ;; Defined at:
 31073 ;;		line 239 in file "mcc_generated_files/i2c2_master.c"
 31074 ;; Parameters:    Size  Location     Type
 31075 ;;		None
 31076 ;; Auto vars:     Size  Location     Type
 31077 ;;  returnValue     1   43[BANK0 ] enum E353
 31078 ;; Return value:  Size  Location     Type
 31079 ;;                  1    wreg      enum E353
 31080 ;; Registers used:
 31081 ;;		wreg, status,2, cstack
 31082 ;; Tracked objects:
 31083 ;;		On entry : 0/0
 31084 ;;		On exit  : 3F/0
 31085 ;;		Unchanged: 0/0
 31086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31091 ;;Total ram usage:        1 bytes
 31092 ;; Hardware stack levels used:    1
 31093 ;; Hardware stack levels required when called:   18
 31094 ;; This function calls:
 31095 ;;		_I2C2_MasterClearIrq
 31096 ;;		_I2C2_MasterClose
 31097 ;;		_I2C2_MasterDisableIrq
 31098 ;; This function is called by:
 31099 ;;		_I2C2_MClose
 31100 ;; This function uses a non-reentrant model
 31101 ;;
 31102                           
 31103                           	psect	text148
 31104  00A0DC                     __ptext148:
 31105                           	opt callstack 0
 31106  00A0DC                     _I2C2_Close:
 31107                           	opt callstack 7
 31108                           
 31109                           ;mcc_generated_files/i2c2_master.c: 241:     i2c2_error_t returnValue = I2C2_BUSY;
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;incstack = 0
 31113  00A0DC  0E01               	movlw	1
 31114  00A0DE  0100               	movlb	0	; () banked
 31115  00A0E0  6F8B               	movwf	I2C2_Close@returnValue& (0+255),b
 31116                           
 31117                           ; BSR set to: 0
 31118                           ;mcc_generated_files/i2c2_master.c: 242:     if(!I2C2_Status.busy)
 31119  00A0E2  0102               	movlb	2	; () banked
 31120  00A0E4  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 31121  00A0E6  D00B               	goto	l17397
 31122                           
 31123                           ; BSR set to: 2
 31124                           ;mcc_generated_files/i2c2_master.c: 243:     {;mcc_generated_files/i2c2_master.c: 244:  
      +                                 I2C2_Status.inUse = 0;
 31125  00A0E8  9723               	bcf	(_I2C2_Status+35)& (0+255),3,b
 31126                           
 31127                           ;mcc_generated_files/i2c2_master.c: 245:         I2C2_Status.address = 0xff;
 31128  00A0EA  691C               	setf	(_I2C2_Status+28)& (0+255),b
 31129                           
 31130                           ; BSR set to: 2
 31131                           ;mcc_generated_files/i2c2_master.c: 246:         I2C2_MasterClearIrq();
 31132  00A0EC  EC04  F054         	call	_I2C2_MasterClearIrq	;wreg free
 31133                           
 31134                           ; BSR set to: 61
 31135                           ;mcc_generated_files/i2c2_master.c: 247:         I2C2_MasterDisableIrq();
 31136  00A0F0  EC11  F052         	call	_I2C2_MasterDisableIrq	;wreg free
 31137                           
 31138                           ; BSR set to: 61
 31139                           ;mcc_generated_files/i2c2_master.c: 248:         I2C2_MasterClose();
 31140  00A0F4  ECEC  F053         	call	_I2C2_MasterClose	;wreg free
 31141                           
 31142                           ; BSR set to: 61
 31143                           ;mcc_generated_files/i2c2_master.c: 249:         returnValue = I2C2_Status.error;
 31144  00A0F8  0060  F888  F08B   	movff	_I2C2_Status+34,I2C2_Close@returnValue
 31145  00A0FE                     l17397:
 31146                           
 31147                           ;mcc_generated_files/i2c2_master.c: 251:     return returnValue;
 31148  00A0FE  0100               	movlb	0	; () banked
 31149  00A100  518B               	movf	I2C2_Close@returnValue& (0+255),w,b
 31150                           
 31151                           ; BSR set to: 0
 31152  00A102  0012               	return		;funcret
 31153  00A104                     __end_of_I2C2_Close:
 31154                           	opt callstack 0
 31155                           
 31156 ;; *************** function _I2C2_MasterDisableIrq *****************
 31157 ;; Defined at:
 31158 ;;		line 793 in file "mcc_generated_files/i2c2_master.c"
 31159 ;; Parameters:    Size  Location     Type
 31160 ;;		None
 31161 ;; Auto vars:     Size  Location     Type
 31162 ;;		None
 31163 ;; Return value:  Size  Location     Type
 31164 ;;                  1    wreg      void 
 31165 ;; Registers used:
 31166 ;;		None
 31167 ;; Tracked objects:
 31168 ;;		On entry : 3F/3D
 31169 ;;		On exit  : 3F/3D
 31170 ;;		Unchanged: 0/0
 31171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31176 ;;Total ram usage:        0 bytes
 31177 ;; Hardware stack levels used:    1
 31178 ;; Hardware stack levels required when called:   17
 31179 ;; This function calls:
 31180 ;;		Nothing
 31181 ;; This function is called by:
 31182 ;;		_I2C2_Close
 31183 ;; This function uses a non-reentrant model
 31184 ;;
 31185                           
 31186                           	psect	text149
 31187  00A422                     __ptext149:
 31188                           	opt callstack 0
 31189  00A422                     _I2C2_MasterDisableIrq:
 31190                           	opt callstack 7
 31191                           
 31192                           ; BSR set to: 61
 31193                           ;mcc_generated_files/i2c2_master.c: 795:     PIE6bits.I2C2IE = 0;
 31194                           
 31195                           ; BSR set to: 0
 31196                           ;incstack = 0
 31197  00A422  0139               	movlb	57	; () banked
 31198  00A424  9196               	bcf	150,0,b	;volatile
 31199                           
 31200                           ;mcc_generated_files/i2c2_master.c: 796:     PIE6bits.I2C2EIE = 0;
 31201  00A426  9396               	bcf	150,1,b	;volatile
 31202                           
 31203                           ;mcc_generated_files/i2c2_master.c: 797:     PIE5bits.I2C2RXIE = 0;
 31204  00A428  9D95               	bcf	149,6,b	;volatile
 31205                           
 31206                           ;mcc_generated_files/i2c2_master.c: 798:     PIE5bits.I2C2TXIE = 0;
 31207  00A42A  9F95               	bcf	149,7,b	;volatile
 31208                           
 31209                           ;mcc_generated_files/i2c2_master.c: 799:     I2C2PIEbits.SCIE = 0;
 31210  00A42C  013D               	movlb	61	; () banked
 31211  00A42E  9164               	bcf	100,0,b	;volatile
 31212                           
 31213                           ;mcc_generated_files/i2c2_master.c: 800:     I2C2PIEbits.PCIE = 0;
 31214  00A430  9564               	bcf	100,2,b	;volatile
 31215                           
 31216                           ;mcc_generated_files/i2c2_master.c: 801:     I2C2PIEbits.CNTIE = 0;
 31217  00A432  9F64               	bcf	100,7,b	;volatile
 31218                           
 31219                           ;mcc_generated_files/i2c2_master.c: 802:     I2C2PIEbits.ACKTIE = 0;
 31220  00A434  9D64               	bcf	100,6,b	;volatile
 31221                           
 31222                           ;mcc_generated_files/i2c2_master.c: 803:     I2C2PIEbits.RSCIE = 0;
 31223  00A436  9364               	bcf	100,1,b	;volatile
 31224                           
 31225                           ;mcc_generated_files/i2c2_master.c: 804:     I2C2ERRbits.BCLIE = 0;
 31226  00A438  9360               	bcf	96,1,b	;volatile
 31227                           
 31228                           ;mcc_generated_files/i2c2_master.c: 805:     I2C2ERRbits.BTOIE = 0;
 31229  00A43A  9560               	bcf	96,2,b	;volatile
 31230                           
 31231                           ;mcc_generated_files/i2c2_master.c: 806:     I2C2ERRbits.NACKIE = 0;
 31232  00A43C  9160               	bcf	96,0,b	;volatile
 31233                           
 31234                           ; BSR set to: 61
 31235  00A43E  0012               	return		;funcret
 31236  00A440                     __end_of_I2C2_MasterDisableIrq:
 31237                           	opt callstack 0
 31238                           
 31239 ;; *************** function _I2C2_MasterClose *****************
 31240 ;; Defined at:
 31241 ;;		line 656 in file "mcc_generated_files/i2c2_master.c"
 31242 ;; Parameters:    Size  Location     Type
 31243 ;;		None
 31244 ;; Auto vars:     Size  Location     Type
 31245 ;;		None
 31246 ;; Return value:  Size  Location     Type
 31247 ;;                  1    wreg      void 
 31248 ;; Registers used:
 31249 ;;		wreg, status,2
 31250 ;; Tracked objects:
 31251 ;;		On entry : 3F/3D
 31252 ;;		On exit  : 3F/3D
 31253 ;;		Unchanged: 0/0
 31254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31259 ;;Total ram usage:        0 bytes
 31260 ;; Hardware stack levels used:    1
 31261 ;; Hardware stack levels required when called:   17
 31262 ;; This function calls:
 31263 ;;		Nothing
 31264 ;; This function is called by:
 31265 ;;		_I2C2_Close
 31266 ;; This function uses a non-reentrant model
 31267 ;;
 31268                           
 31269                           	psect	text150
 31270  00A7D8                     __ptext150:
 31271                           	opt callstack 0
 31272  00A7D8                     _I2C2_MasterClose:
 31273                           	opt callstack 7
 31274                           
 31275                           ; BSR set to: 61
 31276                           ;mcc_generated_files/i2c2_master.c: 659:     I2C2CON0bits.EN = 0;
 31277                           
 31278                           ; BSR set to: 61
 31279                           ;incstack = 0
 31280  00A7D8  9F5D               	bcf	93,7,b	;volatile
 31281                           
 31282                           ; BSR set to: 61
 31283                           ;mcc_generated_files/i2c2_master.c: 661:     I2C2PIR = 0x00;
 31284  00A7DA  0E00               	movlw	0
 31285  00A7DC  6F63               	movwf	99,b	;volatile
 31286                           
 31287                           ; BSR set to: 61
 31288                           ;mcc_generated_files/i2c2_master.c: 663:     I2C2STAT1bits.CLRBF = 1;
 31289  00A7DE  8562               	bsf	98,2,b	;volatile
 31290                           
 31291                           ; BSR set to: 61
 31292  00A7E0  0012               	return		;funcret
 31293  00A7E2                     __end_of_I2C2_MasterClose:
 31294                           	opt callstack 0
 31295                           
 31296 ;; *************** function _I2C2_MasterClearIrq *****************
 31297 ;; Defined at:
 31298 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;		None
 31301 ;; Auto vars:     Size  Location     Type
 31302 ;;		None
 31303 ;; Return value:  Size  Location     Type
 31304 ;;                  1    wreg      void 
 31305 ;; Registers used:
 31306 ;;		wreg, status,2
 31307 ;; Tracked objects:
 31308 ;;		On entry : 3D/0
 31309 ;;		On exit  : 3F/3D
 31310 ;;		Unchanged: 0/0
 31311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31316 ;;Total ram usage:        0 bytes
 31317 ;; Hardware stack levels used:    1
 31318 ;; Hardware stack levels required when called:   17
 31319 ;; This function calls:
 31320 ;;		Nothing
 31321 ;; This function is called by:
 31322 ;;		_I2C2_Open
 31323 ;;		_I2C2_Close
 31324 ;; This function uses a non-reentrant model
 31325 ;;
 31326                           
 31327                           	psect	text151
 31328  00A808                     __ptext151:
 31329                           	opt callstack 0
 31330  00A808                     _I2C2_MasterClearIrq:
 31331                           	opt callstack 7
 31332                           
 31333                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 31334                           
 31335                           ; BSR set to: 61
 31336                           ;incstack = 0
 31337  00A808  0E00               	movlw	0
 31338  00A80A  013D               	movlb	61	; () banked
 31339  00A80C  6F63               	movwf	99,b	;volatile
 31340                           
 31341                           ; BSR set to: 61
 31342  00A80E  0012               	return		;funcret
 31343  00A810                     __end_of_I2C2_MasterClearIrq:
 31344                           	opt callstack 0
 31345                           
 31346 ;; *************** function _INTERRUPT_InterruptManager *****************
 31347 ;; Defined at:
 31348 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 31349 ;; Parameters:    Size  Location     Type
 31350 ;;		None
 31351 ;; Auto vars:     Size  Location     Type
 31352 ;;		None
 31353 ;; Return value:  Size  Location     Type
 31354 ;;                  1    wreg      void 
 31355 ;; Registers used:
 31356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31357 ;; Tracked objects:
 31358 ;;		On entry : 0/0
 31359 ;;		On exit  : 0/0
 31360 ;;		Unchanged: 0/0
 31361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31366 ;;Total ram usage:        4 bytes
 31367 ;; Hardware stack levels used:    1
 31368 ;; Hardware stack levels required when called:   16
 31369 ;; This function calls:
 31370 ;;		Absolute function
 31371 ;;		_ADCC_ThresholdISR
 31372 ;;		_I2C2_MasterIsr
 31373 ;;		_TMR2_ISR
 31374 ;;		_TMR4_ISR
 31375 ;;		_TMR6_ISR
 31376 ;;		_UART1_Transmit_ISR
 31377 ;; This function is called by:
 31378 ;;		Interrupt level 2
 31379 ;; This function uses a non-reentrant model
 31380 ;;
 31381                           
 31382                           	psect	text152
 31383  0082F4                     __ptext152:
 31384                           	opt callstack 0
 31385  0082F4                     _INTERRUPT_InterruptManager:
 31386                           	opt callstack 0
 31387                           
 31388                           ; BSR set to: 61
 31389                           ;incstack = 0
 31390 ;; hardware stack exceeded
 31391  0082F4  006F FFD8  F087    	movff	tblptrl,??_INTERRUPT_InterruptManager
 31392  0082FA  006F FFDC  F088    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 31393  008300  006F FFE0  F089    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 31394  008306  006F FFD4  F08A    	movff	tablat,??_INTERRUPT_InterruptManager+3
 31395                           
 31396                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
 31397  00830C  0139               	movlb	57	; () banked
 31398  00830E  B993               	btfsc	147,4,b	;volatile
 31399                           
 31400                           ; BSR set to: 57
 31401  008310  A9A3               	btfss	163,4,b	;volatile
 31402  008312  D009               	goto	i2l334
 31403                           
 31404                           ; BSR set to: 57
 31405                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
 31406  008314  D801               	call	i2u2189_48
 31407  008316  D039               	goto	i2l347
 31408  008318                     i2u2189_48:
 31409  008318  0005               	push	
 31410  00831A  6EFA               	movwf	pclath,c
 31411  00831C  0102               	movlb	2	; () banked
 31412  00831E  51FC               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31413  008320  6EFD               	movwf	tosl,c
 31414  008322  51FD               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31415  008324  D00B               	goto	L54
 31416  008326                     i2l334:
 31417                           
 31418                           ; BSR set to: 57
 31419  008326  B396               	btfsc	150,1,b	;volatile
 31420                           
 31421                           ; BSR set to: 57
 31422  008328  A3A6               	btfss	166,1,b	;volatile
 31423  00832A  D00C               	goto	i2l336
 31424  00832C                     i2u2191_40:
 31425                           
 31426                           ; BSR set to: 57
 31427                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         I2C2_InterruptHandler();
 31428  00832C  D801               	call	i2u2192_48
 31429  00832E  D02D               	goto	i2l347
 31430  008330                     i2u2192_48:
 31431  008330  0005               	push	
 31432  008332  6EFA               	movwf	pclath,c
 31433  008334  0100               	movlb	0	; () banked
 31434  008336  51B8               	movf	_I2C2_InterruptHandler& (0+255),w,b
 31435  008338  6EFD               	movwf	tosl,c
 31436  00833A  51B9               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 31437  00833C                     L54:
 31438  00833C  6EFE               	movwf	tosh,c
 31439  00833E  6AFF               	clrf	tosu,c
 31440  008340  50FA               	movf	pclath,w,c
 31441  008342  0012               	return		;indir
 31442  008344                     i2l336:
 31443                           
 31444                           ; BSR set to: 57
 31445  008344  AD95               	btfss	149,6,b	;volatile
 31446  008346  D002               	goto	i2l338
 31447                           
 31448                           ; BSR set to: 57
 31449  008348  BDA5               	btfsc	165,6,b	;volatile
 31450  00834A  D7F0               	goto	i2u2191_40
 31451  00834C                     i2l338:
 31452                           
 31453                           ; BSR set to: 57
 31454  00834C  A196               	btfss	150,0,b	;volatile
 31455  00834E  D002               	goto	i2l340
 31456                           
 31457                           ; BSR set to: 57
 31458  008350  B1A6               	btfsc	166,0,b	;volatile
 31459  008352  D7EC               	goto	i2u2191_40
 31460  008354                     i2l340:
 31461                           
 31462                           ; BSR set to: 57
 31463  008354  AF95               	btfss	149,7,b	;volatile
 31464  008356  D002               	goto	i2l342
 31465                           
 31466                           ; BSR set to: 57
 31467  008358  BFA5               	btfsc	165,7,b	;volatile
 31468  00835A  D7E8               	goto	i2u2191_40
 31469  00835C                     i2l342:
 31470                           
 31471                           ; BSR set to: 57
 31472  00835C  B199               	btfsc	153,0,b	;volatile
 31473                           
 31474                           ; BSR set to: 57
 31475  00835E  A1A9               	btfss	169,0,b	;volatile
 31476  008360  D003               	goto	i2l344
 31477                           
 31478                           ; BSR set to: 57
 31479                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         TMR6_ISR();
 31480  008362  EC5C  F051         	call	_TMR6_ISR	;wreg free
 31481                           
 31482                           ;mcc_generated_files/interrupt_manager.c: 84:     }
 31483  008366  D011               	goto	i2l347
 31484  008368                     i2l344:
 31485                           
 31486                           ; BSR set to: 57
 31487  008368  B197               	btfsc	151,0,b	;volatile
 31488                           
 31489                           ; BSR set to: 57
 31490  00836A  A1A7               	btfss	167,0,b	;volatile
 31491  00836C  D003               	goto	i2l346
 31492                           
 31493                           ; BSR set to: 57
 31494                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 87:         TMR4_ISR();
 31495  00836E  EC6D  F051         	call	_TMR4_ISR	;wreg free
 31496                           
 31497                           ;mcc_generated_files/interrupt_manager.c: 88:     }
 31498  008372  D00B               	goto	i2l347
 31499  008374                     i2l346:
 31500                           
 31501                           ; BSR set to: 57
 31502  008374  B791               	btfsc	145,3,b	;volatile
 31503                           
 31504                           ; BSR set to: 57
 31505  008376  A7A1               	btfss	161,3,b	;volatile
 31506  008378  D003               	goto	i2l348
 31507                           
 31508                           ; BSR set to: 57
 31509                           ;mcc_generated_files/interrupt_manager.c: 90:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 91:         ADCC_ThresholdISR();
 31510  00837A  ECA0  F051         	call	_ADCC_ThresholdISR	;wreg free
 31511                           
 31512                           ;mcc_generated_files/interrupt_manager.c: 92:     }
 31513  00837E  D005               	goto	i2l347
 31514  008380                     i2l348:
 31515                           
 31516                           ; BSR set to: 57
 31517  008380  B594               	btfsc	148,2,b	;volatile
 31518                           
 31519                           ; BSR set to: 57
 31520  008382  A5A4               	btfss	164,2,b	;volatile
 31521  008384  D002               	goto	i2l347
 31522                           
 31523                           ; BSR set to: 57
 31524                           ;mcc_generated_files/interrupt_manager.c: 94:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 95:         TMR2_ISR();
 31525  008386  EC7E  F051         	call	_TMR2_ISR	;wreg free
 31526  00838A                     i2l347:
 31527                           
 31528                           ; BSR set to: 57
 31529  00838A  0060  F22B  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 31530  008390  0060  F227  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 31531  008396  0060  F223  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 31532  00839C  0060  F21F  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 31533  0083A2  0011               	retfie		f
 31534  0083A4                     __end_of_INTERRUPT_InterruptManager:
 31535                           	opt callstack 0
 31536                           
 31537 ;; *************** function _UART1_Transmit_ISR *****************
 31538 ;; Defined at:
 31539 ;;		line 217 in file "mcc_generated_files/uart1.c"
 31540 ;; Parameters:    Size  Location     Type
 31541 ;;		None
 31542 ;; Auto vars:     Size  Location     Type
 31543 ;;		None
 31544 ;; Return value:  Size  Location     Type
 31545 ;;                  1    wreg      void 
 31546 ;; Registers used:
 31547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31548 ;; Tracked objects:
 31549 ;;		On entry : 3F/2
 31550 ;;		On exit  : 6/0
 31551 ;;		Unchanged: 0/0
 31552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31557 ;;Total ram usage:        0 bytes
 31558 ;; Hardware stack levels used:    1
 31559 ;; This function calls:
 31560 ;;		Nothing
 31561 ;; This function is called by:
 31562 ;;		_UART1_Initialize
 31563 ;;		_INTERRUPT_InterruptManager
 31564 ;; This function uses a non-reentrant model
 31565 ;;
 31566                           
 31567                           	psect	text153
 31568  009D64                     __ptext153:
 31569                           	opt callstack 0
 31570  009D64                     _UART1_Transmit_ISR:
 31571                           	opt callstack 12
 31572                           
 31573                           ; BSR set to: 2
 31574                           ;mcc_generated_files/uart1.c: 220:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 31575                           
 31576                           ;incstack = 0
 31577  009D64  0E40               	movlw	64
 31578  009D66  0100               	movlb	0	; () banked
 31579  009D68  61D4               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 31580  009D6A  D012               	goto	i2l462
 31581                           
 31582                           ; BSR set to: 0
 31583                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 31584  009D6C  0E50               	movlw	low _uart1TxBuffer
 31585  009D6E  25D2               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 31586  009D70  6ED9               	movwf	fsr2l,c
 31587  009D72  6ADA               	clrf	fsr2h,c
 31588  009D74  0E03               	movlw	high _uart1TxBuffer
 31589  009D76  22DA               	addwfc	fsr2h,f,c
 31590  009D78  50DF               	movf	indf2,w,c
 31591  009D7A  013D               	movlb	61	; () banked
 31592  009D7C  6FEA               	movwf	234,b	;volatile
 31593                           
 31594                           ; BSR set to: 61
 31595  009D7E  0100               	movlb	0	; () banked
 31596  009D80  2BD2               	incf	_uart1TxTail& (0+255),f,b	;volatile
 31597                           
 31598                           ; BSR set to: 0
 31599                           ;mcc_generated_files/uart1.c: 223:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 31600  009D82  0E3F               	movlw	63
 31601  009D84  65D2               	cpfsgt	_uart1TxTail& (0+255),b
 31602  009D86  D002               	goto	i2l13517
 31603                           
 31604                           ; BSR set to: 0
 31605                           ;mcc_generated_files/uart1.c: 224:         {;mcc_generated_files/uart1.c: 225:          
      +                             uart1TxTail = 0;
 31606  009D88  0E00               	movlw	0
 31607  009D8A  6FD2               	movwf	_uart1TxTail& (0+255),b	;volatile
 31608  009D8C                     i2l13517:
 31609                           
 31610                           ; BSR set to: 0
 31611                           ;mcc_generated_files/uart1.c: 227:         uart1TxBufferRemaining++;
 31612  009D8C  2BD4               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 31613                           
 31614                           ;mcc_generated_files/uart1.c: 228:     }
 31615  009D8E  0012               	return	
 31616  009D90                     i2l462:
 31617                           
 31618                           ; BSR set to: 0
 31619                           ;mcc_generated_files/uart1.c: 230:     {;mcc_generated_files/uart1.c: 231:         PIE3b
      +                          its.U1TXIE = 0;
 31620  009D90  0139               	movlb	57	; () banked
 31621  009D92  9993               	bcf	147,4,b	;volatile
 31622  009D94  0012               	return		;funcret
 31623  009D96                     __end_of_UART1_Transmit_ISR:
 31624                           	opt callstack 0
 31625                           
 31626 ;; *************** function _TMR6_ISR *****************
 31627 ;; Defined at:
 31628 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 31629 ;; Parameters:    Size  Location     Type
 31630 ;;		None
 31631 ;; Auto vars:     Size  Location     Type
 31632 ;;		None
 31633 ;; Return value:  Size  Location     Type
 31634 ;;                  1    wreg      void 
 31635 ;; Registers used:
 31636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31637 ;; Tracked objects:
 31638 ;;		On entry : 3F/39
 31639 ;;		On exit  : 0/0
 31640 ;;		Unchanged: 0/0
 31641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31646 ;;Total ram usage:        0 bytes
 31647 ;; Hardware stack levels used:    1
 31648 ;; Hardware stack levels required when called:    2
 31649 ;; This function calls:
 31650 ;;		Absolute function
 31651 ;;		_TMR6_DefaultInterruptHandler
 31652 ;;		_lcdIrqHandler
 31653 ;; This function is called by:
 31654 ;;		_INTERRUPT_InterruptManager
 31655 ;; This function uses a non-reentrant model
 31656 ;;
 31657                           
 31658                           	psect	text154
 31659  00A2B8                     __ptext154:
 31660                           	opt callstack 0
 31661  00A2B8                     _TMR6_ISR:
 31662                           	opt callstack 10
 31663                           
 31664                           ; BSR set to: 57
 31665                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 31666                           
 31667                           ;incstack = 0
 31668  00A2B8  91A9               	bcf	169,0,b	;volatile
 31669                           
 31670                           ; BSR set to: 57
 31671                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 31672  00A2BA  0102               	movlb	2	; () banked
 31673  00A2BC  51F4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31674  00A2BE  11F5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31675  00A2C0  B4D8               	btfsc	status,2,c
 31676  00A2C2  0012               	return	
 31677                           
 31678                           ; BSR set to: 2
 31679                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 31680  00A2C4  D801               	call	i2u1262_48
 31681  00A2C6  0012               	return	
 31682  00A2C8                     i2u1262_48:
 31683  00A2C8  0005               	push	
 31684  00A2CA  6EFA               	movwf	pclath,c
 31685  00A2CC  51F4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31686  00A2CE  6EFD               	movwf	tosl,c
 31687  00A2D0  51F5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31688  00A2D2  6EFE               	movwf	tosh,c
 31689  00A2D4  6AFF               	clrf	tosu,c
 31690  00A2D6  50FA               	movf	pclath,w,c
 31691  00A2D8  0012               	return		;indir
 31692  00A2DA                     __end_of_TMR6_ISR:
 31693                           	opt callstack 0
 31694                           
 31695 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31696 ;; Defined at:
 31697 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31698 ;; Parameters:    Size  Location     Type
 31699 ;;		None
 31700 ;; Auto vars:     Size  Location     Type
 31701 ;;		None
 31702 ;; Return value:  Size  Location     Type
 31703 ;;                  1    wreg      void 
 31704 ;; Registers used:
 31705 ;;		None
 31706 ;; Tracked objects:
 31707 ;;		On entry : 3F/2
 31708 ;;		On exit  : 3F/2
 31709 ;;		Unchanged: 3F/0
 31710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31715 ;;Total ram usage:        0 bytes
 31716 ;; Hardware stack levels used:    1
 31717 ;; This function calls:
 31718 ;;		Nothing
 31719 ;; This function is called by:
 31720 ;;		_TMR6_Initialize
 31721 ;;		_TMR6_ISR
 31722 ;; This function uses a non-reentrant model
 31723 ;;
 31724                           
 31725                           	psect	text155
 31726  00A8B0                     __ptext155:
 31727                           	opt callstack 0
 31728  00A8B0                     _TMR6_DefaultInterruptHandler:
 31729                           	opt callstack 11
 31730                           
 31731                           ; BSR set to: 2
 31732                           
 31733                           ;incstack = 0
 31734  00A8B0  0012               	return		;funcret
 31735  00A8B2                     __end_of_TMR6_DefaultInterruptHandler:
 31736                           	opt callstack 0
 31737                           
 31738 ;; *************** function _lcdIrqHandler *****************
 31739 ;; Defined at:
 31740 ;;		line 32 in file "LiquidCrystal_I2C.c"
 31741 ;; Parameters:    Size  Location     Type
 31742 ;;		None
 31743 ;; Auto vars:     Size  Location     Type
 31744 ;;  byte            1    1[COMRAM] unsigned char 
 31745 ;; Return value:  Size  Location     Type
 31746 ;;                  1    wreg      void 
 31747 ;; Registers used:
 31748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31749 ;; Tracked objects:
 31750 ;;		On entry : 3F/2
 31751 ;;		On exit  : 3F/0
 31752 ;;		Unchanged: 0/0
 31753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31758 ;;Total ram usage:        2 bytes
 31759 ;; Hardware stack levels used:    1
 31760 ;; Hardware stack levels required when called:    1
 31761 ;; This function calls:
 31762 ;;		i2_TMR6_Start
 31763 ;; This function is called by:
 31764 ;;		_LcdI2CInit
 31765 ;;		_TMR6_ISR
 31766 ;; This function uses a non-reentrant model
 31767 ;;
 31768                           
 31769                           	psect	text156
 31770  007CB0                     __ptext156:
 31771                           	opt callstack 0
 31772  007CB0                     _lcdIrqHandler:
 31773                           	opt callstack 10
 31774                           
 31775                           ; BSR set to: 2
 31776                           ;LiquidCrystal_I2C.c: 33:     uint8_t byte;;LiquidCrystal_I2C.c: 34:     if (parBuffPtr 
      +                          < parBuffLen){
 31777                           
 31778                           ; BSR set to: 2
 31779                           ;incstack = 0
 31780  007CB0  0100               	movlb	0	; () banked
 31781  007CB2  51C7               	movf	_parBuffLen& (0+255),w,b	;volatile
 31782  007CB4  5DC8               	subwf	_parBuffPtr& (0+255),w,b	;volatile
 31783  007CB6  B0D8               	btfsc	status,0,c
 31784  007CB8  D067               	goto	i2l13141
 31785                           
 31786                           ; BSR set to: 0
 31787                           ;LiquidCrystal_I2C.c: 36:         LATAbits.LATA7=0;
 31788  007CBA  9EBA               	bcf	186,7,c	;volatile
 31789                           
 31790                           ; BSR set to: 0
 31791                           ;LiquidCrystal_I2C.c: 38:         byte = i2cBuff[parBuffPtr];
 31792  007CBC  0E00               	movlw	low _i2cBuff
 31793  007CBE  25C8               	addwf	_parBuffPtr& (0+255),w,b	;volatile
 31794  007CC0  6ED9               	movwf	fsr2l,c
 31795  007CC2  6ADA               	clrf	fsr2h,c
 31796  007CC4  0E03               	movlw	high _i2cBuff
 31797  007CC6  22DA               	addwfc	fsr2h,f,c
 31798  007CC8  50DF               	movf	indf2,w,c
 31799  007CCA  6E02               	movwf	lcdIrqHandler@byte^0,c
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;LiquidCrystal_I2C.c: 39:         LATAbits.LATA6=(byte&0x1)?1:0;
 31803  007CCC  A002               	btfss	lcdIrqHandler@byte^0,0,c
 31804  007CCE  D003               	goto	i2u1196_40
 31805  007CD0  6A01               	clrf	??_lcdIrqHandler^0,c
 31806  007CD2  2A01               	incf	??_lcdIrqHandler^0,f,c
 31807  007CD4  D001               	goto	i2u1197_48
 31808  007CD6                     i2u1196_40:
 31809  007CD6  6A01               	clrf	??_lcdIrqHandler^0,c
 31810  007CD8                     i2u1197_48:
 31811  007CD8  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31812  007CDA  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31813  007CDC  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31814  007CDE  50BA               	movf	186,w,c	;volatile
 31815  007CE0  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31816  007CE2  0BBF               	andlw	-65
 31817  007CE4  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31818  007CE6  6EBA               	movwf	186,c	;volatile
 31819                           
 31820                           ;LiquidCrystal_I2C.c: 41:         LATAbits.LATA7=(byte&0x4)?1:0;
 31821  007CE8  A402               	btfss	lcdIrqHandler@byte^0,2,c
 31822  007CEA  D003               	goto	i2u1198_40
 31823  007CEC  6A01               	clrf	??_lcdIrqHandler^0,c
 31824  007CEE  2A01               	incf	??_lcdIrqHandler^0,f,c
 31825  007CF0  D001               	goto	i2u1199_48
 31826  007CF2                     i2u1198_40:
 31827  007CF2  6A01               	clrf	??_lcdIrqHandler^0,c
 31828  007CF4                     i2u1199_48:
 31829  007CF4  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31830  007CF6  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31831  007CF8  50BA               	movf	186,w,c	;volatile
 31832  007CFA  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31833  007CFC  0B7F               	andlw	-129
 31834  007CFE  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31835  007D00  6EBA               	movwf	186,c	;volatile
 31836                           
 31837                           ;LiquidCrystal_I2C.c: 43:         LATAbits.LATA0=(byte&0x10)?1:0;
 31838  007D02  A802               	btfss	lcdIrqHandler@byte^0,4,c
 31839  007D04  D003               	goto	i2u1200_40
 31840  007D06  6A01               	clrf	??_lcdIrqHandler^0,c
 31841  007D08  2A01               	incf	??_lcdIrqHandler^0,f,c
 31842  007D0A  D001               	goto	i2u1201_48
 31843  007D0C                     i2u1200_40:
 31844  007D0C  6A01               	clrf	??_lcdIrqHandler^0,c
 31845  007D0E                     i2u1201_48:
 31846  007D0E  50BA               	movf	186,w,c	;volatile
 31847  007D10  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31848  007D12  0BFE               	andlw	-2
 31849  007D14  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31850  007D16  6EBA               	movwf	186,c	;volatile
 31851                           
 31852                           ;LiquidCrystal_I2C.c: 44:         LATAbits.LATA1=(byte&0x20)?1:0;
 31853  007D18  AA02               	btfss	lcdIrqHandler@byte^0,5,c
 31854  007D1A  D003               	goto	i2u1202_40
 31855  007D1C  6A01               	clrf	??_lcdIrqHandler^0,c
 31856  007D1E  2A01               	incf	??_lcdIrqHandler^0,f,c
 31857  007D20  D001               	goto	i2u1203_48
 31858  007D22                     i2u1202_40:
 31859  007D22  6A01               	clrf	??_lcdIrqHandler^0,c
 31860  007D24                     i2u1203_48:
 31861  007D24  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31862  007D26  50BA               	movf	186,w,c	;volatile
 31863  007D28  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31864  007D2A  0BFD               	andlw	-3
 31865  007D2C  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31866  007D2E  6EBA               	movwf	186,c	;volatile
 31867                           
 31868                           ;LiquidCrystal_I2C.c: 45:         LATAbits.LATA4=(byte&0x40)?1:0;
 31869  007D30  AC02               	btfss	lcdIrqHandler@byte^0,6,c
 31870  007D32  D003               	goto	i2u1204_40
 31871  007D34  6A01               	clrf	??_lcdIrqHandler^0,c
 31872  007D36  2A01               	incf	??_lcdIrqHandler^0,f,c
 31873  007D38  D001               	goto	i2u1205_48
 31874  007D3A                     i2u1204_40:
 31875  007D3A  6A01               	clrf	??_lcdIrqHandler^0,c
 31876  007D3C                     i2u1205_48:
 31877  007D3C  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31878  007D3E  50BA               	movf	186,w,c	;volatile
 31879  007D40  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31880  007D42  0BEF               	andlw	-17
 31881  007D44  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31882  007D46  6EBA               	movwf	186,c	;volatile
 31883                           
 31884                           ;LiquidCrystal_I2C.c: 46:         LATAbits.LATA5=(byte&0x80)?1:0;
 31885  007D48  AE02               	btfss	lcdIrqHandler@byte^0,7,c
 31886  007D4A  D003               	goto	i2u1206_40
 31887  007D4C  6A01               	clrf	??_lcdIrqHandler^0,c
 31888  007D4E  2A01               	incf	??_lcdIrqHandler^0,f,c
 31889  007D50  D001               	goto	i2u1207_48
 31890  007D52                     i2u1206_40:
 31891  007D52  6A01               	clrf	??_lcdIrqHandler^0,c
 31892  007D54                     i2u1207_48:
 31893  007D54  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31894  007D56  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31895  007D58  50BA               	movf	186,w,c	;volatile
 31896  007D5A  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31897  007D5C  0BDF               	andlw	-33
 31898  007D5E  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31899  007D60  6EBA               	movwf	186,c	;volatile
 31900                           
 31901                           ;LiquidCrystal_I2C.c: 48:         LATBbits.LATB5 = (byte&0x08)?1:0;
 31902  007D62  A602               	btfss	lcdIrqHandler@byte^0,3,c
 31903  007D64  D003               	goto	i2u1208_40
 31904  007D66  6A01               	clrf	??_lcdIrqHandler^0,c
 31905  007D68  2A01               	incf	??_lcdIrqHandler^0,f,c
 31906  007D6A  D001               	goto	i2u1209_48
 31907  007D6C                     i2u1208_40:
 31908  007D6C  6A01               	clrf	??_lcdIrqHandler^0,c
 31909  007D6E                     i2u1209_48:
 31910  007D6E  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31911  007D70  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31912  007D72  50BB               	movf	187,w,c	;volatile
 31913  007D74  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31914  007D76  0BDF               	andlw	-33
 31915  007D78  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31916  007D7A  6EBB               	movwf	187,c	;volatile
 31917                           
 31918                           ;LiquidCrystal_I2C.c: 49:         parBuffPtr++;
 31919  007D7C  0100               	movlb	0	; () banked
 31920  007D7E  2BC8               	incf	_parBuffPtr& (0+255),f,b	;volatile
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;LiquidCrystal_I2C.c: 51:         TMR6_Start();
 31924  007D80  EC45  F054         	call	i2_TMR6_Start	;wreg free
 31925                           
 31926                           ; BSR set to: 0
 31927                           ;LiquidCrystal_I2C.c: 53:         LATAbits.LATA7=0;
 31928  007D84  9EBA               	bcf	186,7,c	;volatile
 31929                           
 31930                           ;LiquidCrystal_I2C.c: 54:     } else {
 31931  007D86  0012               	return	
 31932  007D88                     i2l13141:
 31933                           
 31934                           ; BSR set to: 0
 31935                           ;LiquidCrystal_I2C.c: 55:         lcdBusy = 0;
 31936  007D88  0E00               	movlw	0
 31937  007D8A  6FC6               	movwf	_lcdBusy& (0+255),b	;volatile
 31938                           
 31939                           ; BSR set to: 0
 31940  007D8C  0012               	return		;funcret
 31941  007D8E                     __end_of_lcdIrqHandler:
 31942                           	opt callstack 0
 31943                           
 31944 ;; *************** function i2_TMR6_Start *****************
 31945 ;; Defined at:
 31946 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 31947 ;; Parameters:    Size  Location     Type
 31948 ;;		None
 31949 ;; Auto vars:     Size  Location     Type
 31950 ;;		None
 31951 ;; Return value:  Size  Location     Type
 31952 ;;                  1    wreg      void 
 31953 ;; Registers used:
 31954 ;;		None
 31955 ;; Tracked objects:
 31956 ;;		On entry : 3F/0
 31957 ;;		On exit  : 3F/0
 31958 ;;		Unchanged: 3F/0
 31959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31964 ;;Total ram usage:        0 bytes
 31965 ;; Hardware stack levels used:    1
 31966 ;; This function calls:
 31967 ;;		Nothing
 31968 ;; This function is called by:
 31969 ;;		_lcdIrqHandler
 31970 ;; This function uses a non-reentrant model
 31971 ;;
 31972                           
 31973                           	psect	text157
 31974  00A88A                     __ptext157:
 31975                           	opt callstack 0
 31976  00A88A                     i2_TMR6_Start:
 31977                           	opt callstack 10
 31978                           
 31979                           ; BSR set to: 0
 31980                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 31981                           
 31982                           ; BSR set to: 0
 31983                           ;incstack = 0
 31984  00A88A  8E94               	bsf	148,7,c	;volatile
 31985                           
 31986                           ; BSR set to: 0
 31987  00A88C  0012               	return		;funcret
 31988  00A88E                     __end_ofi2_TMR6_Start:
 31989                           	opt callstack 0
 31990                           
 31991 ;; *************** function _TMR4_ISR *****************
 31992 ;; Defined at:
 31993 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 31994 ;; Parameters:    Size  Location     Type
 31995 ;;		None
 31996 ;; Auto vars:     Size  Location     Type
 31997 ;;		None
 31998 ;; Return value:  Size  Location     Type
 31999 ;;                  1    wreg      void 
 32000 ;; Registers used:
 32001 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32002 ;; Tracked objects:
 32003 ;;		On entry : 3F/39
 32004 ;;		On exit  : 0/0
 32005 ;;		Unchanged: 0/0
 32006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32011 ;;Total ram usage:        0 bytes
 32012 ;; Hardware stack levels used:    1
 32013 ;; Hardware stack levels required when called:    1
 32014 ;; This function calls:
 32015 ;;		Absolute function
 32016 ;;		_SV2DelayOpen
 32017 ;;		_TMR4_DefaultInterruptHandler
 32018 ;; This function is called by:
 32019 ;;		_INTERRUPT_InterruptManager
 32020 ;; This function uses a non-reentrant model
 32021 ;;
 32022                           
 32023                           	psect	text158
 32024  00A2DA                     __ptext158:
 32025                           	opt callstack 0
 32026  00A2DA                     _TMR4_ISR:
 32027                           	opt callstack 11
 32028                           
 32029                           ; BSR set to: 57
 32030                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 32031                           
 32032                           ; BSR set to: 0
 32033                           ;incstack = 0
 32034  00A2DA  91A7               	bcf	167,0,b	;volatile
 32035                           
 32036                           ; BSR set to: 57
 32037                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 32038  00A2DC  0102               	movlb	2	; () banked
 32039  00A2DE  51F6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 32040  00A2E0  11F7               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 32041  00A2E2  B4D8               	btfsc	status,2,c
 32042  00A2E4  0012               	return	
 32043                           
 32044                           ; BSR set to: 2
 32045                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 32046  00A2E6  D801               	call	i2u1264_48
 32047  00A2E8  0012               	return	
 32048  00A2EA                     i2u1264_48:
 32049  00A2EA  0005               	push	
 32050  00A2EC  6EFA               	movwf	pclath,c
 32051  00A2EE  51F6               	movf	_TMR4_InterruptHandler& (0+255),w,b
 32052  00A2F0  6EFD               	movwf	tosl,c
 32053  00A2F2  51F7               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 32054  00A2F4  6EFE               	movwf	tosh,c
 32055  00A2F6  6AFF               	clrf	tosu,c
 32056  00A2F8  50FA               	movf	pclath,w,c
 32057  00A2FA  0012               	return		;indir
 32058  00A2FC                     __end_of_TMR4_ISR:
 32059                           	opt callstack 0
 32060                           
 32061 ;; *************** function _SV2DelayOpen *****************
 32062 ;; Defined at:
 32063 ;;		line 182 in file "main.c"
 32064 ;; Parameters:    Size  Location     Type
 32065 ;;		None
 32066 ;; Auto vars:     Size  Location     Type
 32067 ;;		None
 32068 ;; Return value:  Size  Location     Type
 32069 ;;                  1    wreg      void 
 32070 ;; Registers used:
 32071 ;;		wreg, status,2
 32072 ;; Tracked objects:
 32073 ;;		On entry : 3F/2
 32074 ;;		On exit  : 3F/1
 32075 ;;		Unchanged: 0/0
 32076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32081 ;;Total ram usage:        0 bytes
 32082 ;; Hardware stack levels used:    1
 32083 ;; This function calls:
 32084 ;;		Nothing
 32085 ;; This function is called by:
 32086 ;;		_main
 32087 ;;		_TMR4_ISR
 32088 ;; This function uses a non-reentrant model
 32089 ;;
 32090                           
 32091                           	psect	text159
 32092  00A6EE                     __ptext159:
 32093                           	opt callstack 0
 32094  00A6EE                     _SV2DelayOpen:
 32095                           	opt callstack 11
 32096                           
 32097                           ; BSR set to: 2
 32098                           ;main.c: 183:     if (initInspSubState) {
 32099                           
 32100                           ;incstack = 0
 32101  00A6EE  0101               	movlb	1	; () banked
 32102  00A6F0  51BE               	movf	_initInspSubState& (0+255),w,b
 32103  00A6F2  B4D8               	btfsc	status,2,c
 32104  00A6F4  0012               	return	
 32105                           
 32106                           ; BSR set to: 1
 32107                           ;main.c: 184:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
 32108  00A6F6  94BA               	bcf	186,2,c	;volatile
 32109  00A6F8  86BC               	bsf	188,3,c	;volatile
 32110                           
 32111                           ; BSR set to: 1
 32112  00A6FA  0012               	return		;funcret
 32113  00A6FC                     __end_of_SV2DelayOpen:
 32114                           	opt callstack 0
 32115                           
 32116 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 32117 ;; Defined at:
 32118 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 32119 ;; Parameters:    Size  Location     Type
 32120 ;;		None
 32121 ;; Auto vars:     Size  Location     Type
 32122 ;;		None
 32123 ;; Return value:  Size  Location     Type
 32124 ;;                  1    wreg      void 
 32125 ;; Registers used:
 32126 ;;		None
 32127 ;; Tracked objects:
 32128 ;;		On entry : 3F/2
 32129 ;;		On exit  : 3F/2
 32130 ;;		Unchanged: 3F/0
 32131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32136 ;;Total ram usage:        0 bytes
 32137 ;; Hardware stack levels used:    1
 32138 ;; This function calls:
 32139 ;;		Nothing
 32140 ;; This function is called by:
 32141 ;;		_TMR4_Initialize
 32142 ;;		_TMR4_ISR
 32143 ;; This function uses a non-reentrant model
 32144 ;;
 32145                           
 32146                           	psect	text160
 32147  00A8B2                     __ptext160:
 32148                           	opt callstack 0
 32149  00A8B2                     _TMR4_DefaultInterruptHandler:
 32150                           	opt callstack 11
 32151                           
 32152                           ; BSR set to: 2
 32153                           
 32154                           ; BSR set to: 1
 32155                           ;incstack = 0
 32156  00A8B2  0012               	return		;funcret
 32157  00A8B4                     __end_of_TMR4_DefaultInterruptHandler:
 32158                           	opt callstack 0
 32159                           
 32160 ;; *************** function _TMR2_ISR *****************
 32161 ;; Defined at:
 32162 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 32163 ;; Parameters:    Size  Location     Type
 32164 ;;		None
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;		None
 32167 ;; Return value:  Size  Location     Type
 32168 ;;                  1    wreg      void 
 32169 ;; Registers used:
 32170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32171 ;; Tracked objects:
 32172 ;;		On entry : 3F/39
 32173 ;;		On exit  : 0/0
 32174 ;;		Unchanged: 0/0
 32175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32180 ;;Total ram usage:        0 bytes
 32181 ;; Hardware stack levels used:    1
 32182 ;; Hardware stack levels required when called:   11
 32183 ;; This function calls:
 32184 ;;		Absolute function
 32185 ;;		_TMR2_DefaultInterruptHandler
 32186 ;;		_vMeasureIsr
 32187 ;; This function is called by:
 32188 ;;		_INTERRUPT_InterruptManager
 32189 ;; This function uses a non-reentrant model
 32190 ;;
 32191                           
 32192                           	psect	text161
 32193  00A2FC                     __ptext161:
 32194                           	opt callstack 0
 32195  00A2FC                     _TMR2_ISR:
 32196                           	opt callstack 1
 32197                           
 32198                           ; BSR set to: 57
 32199                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 32200                           
 32201                           ; BSR set to: 2
 32202                           ;incstack = 0
 32203  00A2FC  95A4               	bcf	164,2,b	;volatile
 32204                           
 32205                           ; BSR set to: 57
 32206                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 32207  00A2FE  0102               	movlb	2	; () banked
 32208  00A300  51F8               	movf	_TMR2_InterruptHandler& (0+255),w,b
 32209  00A302  11F9               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 32210  00A304  B4D8               	btfsc	status,2,c
 32211  00A306  0012               	return	
 32212                           
 32213                           ; BSR set to: 2
 32214                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 32215  00A308  D801               	call	i2u2024_48
 32216  00A30A  0012               	return	
 32217  00A30C                     i2u2024_48:
 32218  00A30C  0005               	push	
 32219  00A30E  6EFA               	movwf	pclath,c
 32220  00A310  51F8               	movf	_TMR2_InterruptHandler& (0+255),w,b
 32221  00A312  6EFD               	movwf	tosl,c
 32222  00A314  51F9               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 32223  00A316  6EFE               	movwf	tosh,c
 32224  00A318  6AFF               	clrf	tosu,c
 32225  00A31A  50FA               	movf	pclath,w,c
 32226  00A31C  0012               	return		;indir
 32227  00A31E                     __end_of_TMR2_ISR:
 32228                           	opt callstack 0
 32229                           
 32230 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 32231 ;; Defined at:
 32232 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 32233 ;; Parameters:    Size  Location     Type
 32234 ;;		None
 32235 ;; Auto vars:     Size  Location     Type
 32236 ;;		None
 32237 ;; Return value:  Size  Location     Type
 32238 ;;                  1    wreg      void 
 32239 ;; Registers used:
 32240 ;;		None
 32241 ;; Tracked objects:
 32242 ;;		On entry : 3F/2
 32243 ;;		On exit  : 3F/2
 32244 ;;		Unchanged: 3F/0
 32245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32250 ;;Total ram usage:        0 bytes
 32251 ;; Hardware stack levels used:    1
 32252 ;; This function calls:
 32253 ;;		Nothing
 32254 ;; This function is called by:
 32255 ;;		_TMR2_Initialize
 32256 ;;		_TMR2_ISR
 32257 ;; This function uses a non-reentrant model
 32258 ;;
 32259                           
 32260                           	psect	text162
 32261  00A8B4                     __ptext162:
 32262                           	opt callstack 0
 32263  00A8B4                     _TMR2_DefaultInterruptHandler:
 32264                           	opt callstack 11
 32265                           
 32266                           ; BSR set to: 2
 32267                           
 32268                           ;incstack = 0
 32269  00A8B4  0012               	return		;funcret
 32270  00A8B6                     __end_of_TMR2_DefaultInterruptHandler:
 32271                           	opt callstack 0
 32272                           
 32273 ;; *************** function _vMeasureIsr *****************
 32274 ;; Defined at:
 32275 ;;		line 29 in file "vMeasure.c"
 32276 ;; Parameters:    Size  Location     Type
 32277 ;;		None
 32278 ;; Auto vars:     Size  Location     Type
 32279 ;;  instP           2   37[BANK0 ] short 
 32280 ;;  v2              2   35[BANK0 ] unsigned short 
 32281 ;;  v1              2   33[BANK0 ] unsigned short 
 32282 ;; Return value:  Size  Location     Type
 32283 ;;                  1    wreg      void 
 32284 ;; Registers used:
 32285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32286 ;; Tracked objects:
 32287 ;;		On entry : 3F/2
 32288 ;;		On exit  : 4/0
 32289 ;;		Unchanged: 0/0
 32290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32292 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32294 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32295 ;;Total ram usage:        8 bytes
 32296 ;; Hardware stack levels used:    1
 32297 ;; Hardware stack levels required when called:   10
 32298 ;; This function calls:
 32299 ;;		_isqrt
 32300 ;;		i2_aCaptGetResult
 32301 ;; This function is called by:
 32302 ;;		_vMeasureInit
 32303 ;;		_TMR2_ISR
 32304 ;; This function uses a non-reentrant model
 32305 ;;
 32306                           
 32307                           	psect	text163
 32308  0086EC                     __ptext163:
 32309                           	opt callstack 0
 32310  0086EC                     _vMeasureIsr:
 32311                           	opt callstack 1
 32312                           
 32313                           ; BSR set to: 2
 32314                           ;vMeasure.c: 30:     int16_t instP;;vMeasure.c: 31:     uint16_t v1, v2;;vMeasure.c: 32:
      +                               if (aCaptGetResult(VolPSensor, &instP)) {
 32315                           
 32316                           ; BSR set to: 2
 32317                           ;incstack = 0
 32318  0086EC  0E85               	movlw	low vMeasureIsr@instP
 32319  0086EE  0100               	movlb	0	; () banked
 32320  0086F0  6F7F               	movwf	i2aCaptGetResult@outVal& (0+255),b
 32321  0086F2  6B80               	clrf	(i2aCaptGetResult@outVal+1)& (0+255),b
 32322  0086F4  0E01               	movlw	1
 32323  0086F6  ECA4  F034         	call	i2_aCaptGetResult
 32324  0086FA  0900               	iorlw	0
 32325  0086FC  B4D8               	btfsc	status,2,c
 32326  0086FE  0012               	return	
 32327                           
 32328                           ;vMeasure.c: 33:         if (instP > 0) {
 32329  008700  0100               	movlb	0	; () banked
 32330  008702  BF86               	btfsc	(vMeasureIsr@instP+1)& (0+255),7,b
 32331  008704  D029               	goto	i2l19015
 32332  008706  5186               	movf	(vMeasureIsr@instP+1)& (0+255),w,b
 32333  008708  E103               	bnz	i2u1982_40
 32334  00870A  0585               	decf	vMeasureIsr@instP& (0+255),w,b
 32335  00870C  A0D8               	btfss	status,0,c
 32336  00870E  D024               	goto	i2l19015
 32337  008710                     i2u1982_40:
 32338                           
 32339                           ; BSR set to: 0
 32340                           ;vMeasure.c: 34:             v1 = instP << 4;
 32341  008710  0060  F214  F05E   	movff	vMeasureIsr@instP,??_vMeasureIsr
 32342  008716  0060  F218  F05F   	movff	vMeasureIsr@instP+1,??_vMeasureIsr+1
 32343  00871C  3A5E               	swapf	??_vMeasureIsr^0,f,c
 32344  00871E  3A5F               	swapf	(??_vMeasureIsr+1)^0,f,c
 32345  008720  0EF0               	movlw	240
 32346  008722  165F               	andwf	(??_vMeasureIsr+1)^0,f,c
 32347  008724  505E               	movf	??_vMeasureIsr^0,w,c
 32348  008726  0B0F               	andlw	15
 32349  008728  125F               	iorwf	(??_vMeasureIsr+1)^0,f,c
 32350  00872A  0EF0               	movlw	240
 32351  00872C  165E               	andwf	??_vMeasureIsr^0,f,c
 32352  00872E  0060  F178  F081   	movff	??_vMeasureIsr,vMeasureIsr@v1
 32353  008734  0060  F17C  F082   	movff	??_vMeasureIsr+1,vMeasureIsr@v1+1
 32354                           
 32355                           ; BSR set to: 0
 32356                           ;vMeasure.c: 35:             v2 = isqrt(v1);
 32357  00873A  0060  F204  F001   	movff	vMeasureIsr@v1,isqrt@x
 32358  008740  0060  F208  F002   	movff	vMeasureIsr@v1+1,isqrt@x+1
 32359  008746  EC80  F042         	call	_isqrt	;wreg free
 32360  00874A  0060  F004  F083   	movff	?_isqrt,vMeasureIsr@v2
 32361  008750  0060  F008  F084   	movff	?_isqrt+1,vMeasureIsr@v2+1
 32362                           
 32363                           ;vMeasure.c: 36:         } else {
 32364  008756  D004               	goto	i2l19017
 32365  008758                     i2l19015:
 32366                           
 32367                           ; BSR set to: 0
 32368                           ;vMeasure.c: 38:             v2 = 0;
 32369  008758  0E00               	movlw	0
 32370  00875A  6F84               	movwf	(vMeasureIsr@v2+1)& (0+255),b
 32371  00875C  0E00               	movlw	0
 32372  00875E  6F83               	movwf	vMeasureIsr@v2& (0+255),b
 32373  008760                     i2l19017:
 32374                           
 32375                           ; BSR set to: 0
 32376                           ;vMeasure.c: 40:         if (v2 > 20) {
 32377  008760  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 32378  008762  E104               	bnz	i2u1983_40
 32379  008764  0E15               	movlw	21
 32380  008766  5D83               	subwf	vMeasureIsr@v2& (0+255),w,b
 32381  008768  A0D8               	btfss	status,0,c
 32382  00876A  0012               	return	
 32383  00876C                     i2u1983_40:
 32384                           
 32385                           ; BSR set to: 0
 32386                           ;vMeasure.c: 41:             volume = volume + v2;
 32387  00876C  5183               	movf	vMeasureIsr@v2& (0+255),w,b
 32388  00876E  0102               	movlb	2	; () banked
 32389  008770  252B               	addwf	_volume& (0+255),w,b
 32390  008772  6F2B               	movwf	_volume& (0+255),b
 32391  008774  0100               	movlb	0	; () banked
 32392  008776  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 32393  008778  0102               	movlb	2	; () banked
 32394  00877A  212C               	addwfc	(_volume+1)& (0+255),w,b
 32395  00877C  6F2C               	movwf	(_volume+1)& (0+255),b
 32396  00877E  0E00               	movlw	0
 32397  008780  212D               	addwfc	(_volume+2)& (0+255),w,b
 32398  008782  6F2D               	movwf	(_volume+2)& (0+255),b
 32399  008784  0E00               	movlw	0
 32400  008786  212E               	addwfc	(_volume+3)& (0+255),w,b
 32401  008788  6F2E               	movwf	(_volume+3)& (0+255),b
 32402  00878A  0012               	return		;funcret
 32403  00878C                     __end_of_vMeasureIsr:
 32404                           	opt callstack 0
 32405                           
 32406 ;; *************** function i2_aCaptGetResult *****************
 32407 ;; Defined at:
 32408 ;;		line 177 in file "aCapture.c"
 32409 ;; Parameters:    Size  Location     Type
 32410 ;;  sel             1    wreg     enum E16104
 32411 ;;  outVal          2   31[BANK0 ] PTR short 
 32412 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 32413 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), main@pAux_3859(2), bdP2(2), 
 32414 ;;		 -> bdP1(2), main@pAux(2), pAvgShort(2), main@tmpVal(2), 
 32415 ;;		 -> pAvgUShort(2), pInst(2), 
 32416 ;; Auto vars:     Size  Location     Type
 32417 ;;  sel             1   88[COMRAM] enum E16104
 32418 ;;  aCaptGetResu    4   89[COMRAM] unsigned long 
 32419 ;;  aCaptGetResu    1   87[COMRAM] unsigned char 
 32420 ;; Return value:  Size  Location     Type
 32421 ;;                  1    wreg      _Bool 
 32422 ;; Registers used:
 32423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32424 ;; Tracked objects:
 32425 ;;		On entry : 3F/0
 32426 ;;		On exit  : 4/0
 32427 ;;		Unchanged: 0/0
 32428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32430 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32432 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32433 ;;Total ram usage:       12 bytes
 32434 ;; Hardware stack levels used:    1
 32435 ;; Hardware stack levels required when called:    9
 32436 ;; This function calls:
 32437 ;;		i2_printf
 32438 ;; This function is called by:
 32439 ;;		_vMeasureIsr
 32440 ;; This function uses a non-reentrant model
 32441 ;;
 32442                           
 32443                           	psect	text164
 32444  006948                     __ptext164:
 32445                           	opt callstack 0
 32446  006948                     i2_aCaptGetResult:
 32447                           	opt callstack 1
 32448                           
 32449                           ;incstack = 0
 32450                           ;i2aCaptGetResult@sel stored from wreg
 32451  006948  6E59               	movwf	i2aCaptGetResult@sel^0,c
 32452                           
 32453                           ;aCapture.c: 178:     uint32_t lclRaw;;aCapture.c: 179:     uint8_t lclValid;;aCapture.c
      +                          : 182:     PIE1bits.ADTIE = 0;
 32454  00694A  0139               	movlb	57	; () banked
 32455  00694C  9791               	bcf	145,3,b	;volatile
 32456                           
 32457                           ; BSR set to: 57
 32458                           ;aCapture.c: 183:     lclRaw=resultTbl[sel];
 32459  00694E  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32460  006950  0D04               	mullw	4
 32461  006952  0E7B               	movlw	low _resultTbl
 32462  006954  24F3               	addwf	243,w,c
 32463  006956  6ED9               	movwf	fsr2l,c
 32464  006958  0E02               	movlw	high _resultTbl
 32465  00695A  20F4               	addwfc	prodh,w,c
 32466  00695C  6EDA               	movwf	fsr2h,c
 32467  00695E  006F FF78  F05A    	movff	postinc2,i2aCaptGetResult@lclRaw
 32468  006964  006F FF78  F05B    	movff	postinc2,i2aCaptGetResult@lclRaw+1
 32469  00696A  006F FF78  F05C    	movff	postinc2,i2aCaptGetResult@lclRaw+2
 32470  006970  006F FF78  F05D    	movff	postinc2,i2aCaptGetResult@lclRaw+3
 32471                           
 32472                           ; BSR set to: 57
 32473                           ;aCapture.c: 184:     lclValid=resultTblVal[sel];
 32474  006976  0E24               	movlw	low _resultTblVal
 32475  006978  2459               	addwf	i2aCaptGetResult@sel^0,w,c
 32476  00697A  6ED9               	movwf	fsr2l,c
 32477  00697C  6ADA               	clrf	fsr2h,c
 32478  00697E  0E02               	movlw	high _resultTblVal
 32479  006980  22DA               	addwfc	fsr2h,f,c
 32480  006982  50DF               	movf	indf2,w,c
 32481  006984  6E58               	movwf	i2aCaptGetResult@lclValid^0,c
 32482                           
 32483                           ; BSR set to: 57
 32484                           ;aCapture.c: 185:     PIE1bits.ADTIE = 1;
 32485  006986  8791               	bsf	145,3,b	;volatile
 32486                           
 32487                           ; BSR set to: 57
 32488                           ;aCapture.c: 187:     if (lclValid == 0) {
 32489  006988  5058               	movf	i2aCaptGetResult@lclValid^0,w,c
 32490  00698A  A4D8               	btfss	status,2,c
 32491  00698C  D066               	goto	i2l18405
 32492                           
 32493                           ; BSR set to: 57
 32494                           ;aCapture.c: 188:         return 0;
 32495  00698E  0E00               	movlw	0
 32496  006990  0012               	return	
 32497  006992                     i2l18395:
 32498                           
 32499                           ; BSR set to: 57
 32500                           ;aCapture.c: 195:             lclRaw=lclRaw>>9;
 32501  006992  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32502  006998  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32503  00699E  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32504  0069A4  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32505  0069AA  0E0A               	movlw	10
 32506  0069AC  D005               	goto	i2u1904_40
 32507  0069AE                     i2u1904_45:
 32508  0069AE  90D8               	bcf	status,0,c
 32509  0069B0  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32510  0069B2  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32511  0069B4  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32512  0069B6  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32513  0069B8                     i2u1904_40:
 32514  0069B8  2EE8               	decfsz	wreg,f,c
 32515  0069BA  D7F9               	goto	i2u1904_45
 32516  0069BC  D041               	goto	L57
 32517  0069BE                     i2l18397:
 32518                           
 32519                           ; BSR set to: 57
 32520                           ;aCapture.c: 198:             lclRaw=lclRaw>>6;
 32521  0069BE  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32522  0069C4  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32523  0069CA  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32524  0069D0  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32525  0069D6  0E07               	movlw	7
 32526  0069D8  D005               	goto	i2u1905_40
 32527  0069DA                     i2u1905_45:
 32528  0069DA  90D8               	bcf	status,0,c
 32529  0069DC  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32530  0069DE  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32531  0069E0  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32532  0069E2  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32533  0069E4                     i2u1905_40:
 32534  0069E4  2EE8               	decfsz	wreg,f,c
 32535  0069E6  D7F9               	goto	i2u1905_45
 32536  0069E8  D02B               	goto	L57
 32537  0069EA                     i2l18399:
 32538                           
 32539                           ; BSR set to: 57
 32540                           ;aCapture.c: 201:             lclRaw=lclRaw>>4;
 32541  0069EA  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32542  0069F0  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32543  0069F6  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32544  0069FC  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32545  006A02  0E05               	movlw	5
 32546  006A04  D005               	goto	i2u1906_40
 32547  006A06                     i2u1906_45:
 32548  006A06  90D8               	bcf	status,0,c
 32549  006A08  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32550  006A0A  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32551  006A0C  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32552  006A0E  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32553  006A10                     i2u1906_40:
 32554  006A10  2EE8               	decfsz	wreg,f,c
 32555  006A12  D7F9               	goto	i2u1906_45
 32556  006A14  D015               	goto	L57
 32557  006A16                     i2l18401:
 32558                           
 32559                           ; BSR set to: 57
 32560                           ;aCapture.c: 204:             lclRaw=lclRaw>>2;
 32561  006A16  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32562  006A1C  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32563  006A22  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 32564  006A28  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 32565  006A2E  0E03               	movlw	3
 32566  006A30  D005               	goto	i2u1907_40
 32567  006A32                     i2u1907_45:
 32568  006A32  90D8               	bcf	status,0,c
 32569  006A34  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 32570  006A36  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 32571  006A38  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 32572  006A3A  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 32573  006A3C                     i2u1907_40:
 32574  006A3C  2EE8               	decfsz	wreg,f,c
 32575  006A3E  D7F9               	goto	i2u1907_45
 32576  006A40                     L57:
 32577  006A40  0060  F150  F05A   	movff	??i2_aCaptGetResult,i2aCaptGetResult@lclRaw
 32578  006A46  0060  F154  F05B   	movff	??i2_aCaptGetResult+1,i2aCaptGetResult@lclRaw+1
 32579  006A4C  0060  F158  F05C   	movff	??i2_aCaptGetResult+2,i2aCaptGetResult@lclRaw+2
 32580  006A52  0060  F15C  F05D   	movff	??i2_aCaptGetResult+3,i2aCaptGetResult@lclRaw+3
 32581                           
 32582                           ;aCapture.c: 205:             break;
 32583  006A58  D09E               	goto	i2l18435
 32584  006A5A                     i2l18405:
 32585                           
 32586                           ; BSR set to: 57
 32587  006A5A  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32588  006A5C  6E54               	movwf	??i2_aCaptGetResult^0,c
 32589  006A5E  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32590                           
 32591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32592                           ; Switch size 1, requested type "simple"
 32593                           ; Number of cases is 1, Range of values is 0 to 0
 32594                           ; switch strategies available:
 32595                           ; Name         Instructions Cycles
 32596                           ; simple_byte            4     3 (average)
 32597                           ;	Chosen strategy is simple_byte
 32598  006A60  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32599  006A62  0A00               	xorlw	0	; case 0
 32600  006A64  A4D8               	btfss	status,2,c
 32601  006A66  D097               	goto	i2l18435
 32602                           
 32603                           ; BSR set to: 57
 32604                           ; Switch size 1, requested type "simple"
 32605                           ; Number of cases is 4, Range of values is 3 to 6
 32606                           ; switch strategies available:
 32607                           ; Name         Instructions Cycles
 32608                           ; simple_byte           13     7 (average)
 32609                           ;	Chosen strategy is simple_byte
 32610  006A68  5054               	movf	??i2_aCaptGetResult^0,w,c
 32611  006A6A  0A03               	xorlw	3	; case 3
 32612  006A6C  B4D8               	btfsc	status,2,c
 32613  006A6E  D7D3               	goto	i2l18401
 32614  006A70  0A07               	xorlw	7	; case 4
 32615  006A72  B4D8               	btfsc	status,2,c
 32616  006A74  D7BA               	goto	i2l18399
 32617  006A76  0A01               	xorlw	1	; case 5
 32618  006A78  B4D8               	btfsc	status,2,c
 32619  006A7A  D7A1               	goto	i2l18397
 32620  006A7C  0A03               	xorlw	3	; case 6
 32621  006A7E  B4D8               	btfsc	status,2,c
 32622  006A80  D788               	goto	i2l18395
 32623  006A82  D089               	goto	i2l18435
 32624  006A84                     i2l1998:
 32625                           
 32626                           ; BSR set to: 57
 32627                           ;aCapture.c: 217:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 32628                           
 32629                           ; BSR set to: 57
 32630  006A84  0060  F7C4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32631  006A8A  0060  F7C8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32632  006A90  0E00               	movlw	0
 32633  006A92  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32634  006A94  0EFF               	movlw	255
 32635  006A96  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32636  006A98  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32637  006A9A  5054               	movf	??i2_aCaptGetResult^0,w,c
 32638  006A9C  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32639  006A9E  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32640  006AA0  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32641  006AA2  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32642  006AA4  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32643  006AA6  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32644  006AA8  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32645  006AAA  B0D8               	btfsc	status,0,c
 32646  006AAC  D022               	goto	i2l18413
 32647                           
 32648                           ; BSR set to: 57
 32649  006AAE  0060  F7C4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32650  006AB4  0060  F7C8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32651  006ABA  0E00               	movlw	0
 32652  006ABC  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32653  006ABE  0EFF               	movlw	255
 32654  006AC0  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32655  006AC2  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32656  006AC4  505A               	movf	i2aCaptGetResult@lclRaw^0,w,c
 32657  006AC6  5C54               	subwf	??i2_aCaptGetResult^0,w,c
 32658  006AC8  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32659  006ACA  505B               	movf	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32660  006ACC  5855               	subwfb	(??i2_aCaptGetResult+1)^0,w,c
 32661  006ACE  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32662  006AD0  505C               	movf	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32663  006AD2  5856               	subwfb	(??i2_aCaptGetResult+2)^0,w,c
 32664  006AD4  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32665  006AD6  505D               	movf	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32666  006AD8  5857               	subwfb	(??i2_aCaptGetResult+3)^0,w,c
 32667  006ADA  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32668                           
 32669                           ; BSR set to: 57
 32670                           ;aCapture.c: 218:                 *outVal = - (lclRaw/1);
 32671  006ADC  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32672  006AE2  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32673  006AE8  1E54               	comf	??i2_aCaptGetResult^0,f,c
 32674  006AEA  1E55               	comf	(??i2_aCaptGetResult+1)^0,f,c
 32675  006AEC  4A54               	infsnz	??i2_aCaptGetResult^0,f,c
 32676  006AEE  2A55               	incf	(??i2_aCaptGetResult+1)^0,f,c
 32677  006AF0  D036               	goto	L59
 32678  006AF2                     i2l18413:
 32679                           
 32680                           ; BSR set to: 57
 32681                           ;aCapture.c: 220:                 lclRaw = lclRaw - mainPSensCal;
 32682  006AF2  0060  F7C4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32683  006AF8  0060  F7C8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32684  006AFE  0E00               	movlw	0
 32685  006B00  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32686  006B02  0EFF               	movlw	255
 32687  006B04  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32688  006B06  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32689  006B08  5054               	movf	??i2_aCaptGetResult^0,w,c
 32690  006B0A  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32691  006B0C  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32692  006B0E  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32693  006B10  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32694  006B12  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32695  006B14  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32696  006B16  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32697  006B18  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32698  006B1A  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32699  006B1C  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32700  006B1E  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32701                           
 32702                           ; BSR set to: 57
 32703                           ;aCapture.c: 221:                 *outVal=(lclRaw/1);
 32704  006B20  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32705  006B26  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32706  006B2C  0060  F16B  FFDE   	movff	i2aCaptGetResult@lclRaw,postinc2
 32707  006B32  0060  F16F  FFDD   	movff	i2aCaptGetResult@lclRaw+1,postdec2
 32708  006B38                     i2l18417:
 32709                           
 32710                           ;aCapture.c: 223:             return 1;
 32711  006B38  0E01               	movlw	1
 32712  006B3A  0012               	return	
 32713  006B3C                     i2l18421:
 32714                           
 32715                           ; BSR set to: 57
 32716                           ;aCapture.c: 225:             *outVal = (lclRaw - auxPSensCal)/1;
 32717  006B3C  0102               	movlb	2	; () banked
 32718  006B3E  51F2               	movf	_auxPSensCal& (0+255),w,b
 32719  006B40  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32720  006B42  6E54               	movwf	??i2_aCaptGetResult^0,c
 32721  006B44  51F3               	movf	(_auxPSensCal+1)& (0+255),w,b
 32722  006B46  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32723  006B48  6E55               	movwf	(??i2_aCaptGetResult+1)^0,c
 32724  006B4A  D009               	goto	L59
 32725  006B4C                     i2l18427:
 32726                           
 32727                           ; BSR set to: 57
 32728                           ;aCapture.c: 228:             *outVal = lclRaw<<1;
 32729  006B4C  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32730  006B52  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32731  006B58  90D8               	bcf	status,0,c
 32732  006B5A  3654               	rlcf	??i2_aCaptGetResult^0,f,c
 32733  006B5C  3655               	rlcf	(??i2_aCaptGetResult+1)^0,f,c
 32734  006B5E                     L59:
 32735  006B5E  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32736  006B64  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32737  006B6A  0060  F153  FFDE   	movff	??i2_aCaptGetResult,postinc2
 32738  006B70  0060  F157  FFDD   	movff	??i2_aCaptGetResult+1,postdec2
 32739  006B76  D7E0               	goto	i2l18417
 32740  006B78                     i2l2004:
 32741                           
 32742                           ; BSR set to: 57
 32743                           ;aCapture.c: 232:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 32744  006B78  94BA               	bcf	186,2,c	;volatile
 32745  006B7A  96BC               	bcf	188,3,c	;volatile
 32746  006B7C  96BA               	bcf	186,3,c	;volatile
 32747                           
 32748                           ; BSR set to: 57
 32749  006B7E  0EBE               	movlw	low STR_28
 32750  006B80  0100               	movlb	0	; () banked
 32751  006B82  6F7B               	movwf	i2printf@fmt& (0+255),b
 32752  006B84  0EFF               	movlw	high STR_28
 32753  006B86  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 32754  006B88  0E00               	movlw	0
 32755  006B8A  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 32756  006B8C  0E68               	movlw	104
 32757  006B8E  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 32758  006B90  ECE1  F050         	call	i2_printf	;wreg free
 32759                           
 32760                           ;aCapture.c: 233:     }
 32761  006B94  0012               	return	
 32762  006B96                     i2l18435:
 32763                           
 32764                           ; BSR set to: 57
 32765  006B96  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32766  006B98  6E54               	movwf	??i2_aCaptGetResult^0,c
 32767  006B9A  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32768                           
 32769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32770                           ; Switch size 1, requested type "simple"
 32771                           ; Number of cases is 1, Range of values is 0 to 0
 32772                           ; switch strategies available:
 32773                           ; Name         Instructions Cycles
 32774                           ; simple_byte            4     3 (average)
 32775                           ;	Chosen strategy is simple_byte
 32776  006B9C  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32777  006B9E  0A00               	xorlw	0	; case 0
 32778  006BA0  A4D8               	btfss	status,2,c
 32779  006BA2  D7EA               	goto	i2l2004
 32780                           
 32781                           ; BSR set to: 57
 32782                           ; Switch size 1, requested type "simple"
 32783                           ; Number of cases is 7, Range of values is 0 to 6
 32784                           ; switch strategies available:
 32785                           ; Name         Instructions Cycles
 32786                           ; simple_byte           22    12 (average)
 32787                           ;	Chosen strategy is simple_byte
 32788  006BA4  5054               	movf	??i2_aCaptGetResult^0,w,c
 32789  006BA6  0A00               	xorlw	0	; case 0
 32790  006BA8  B4D8               	btfsc	status,2,c
 32791  006BAA  D76C               	goto	i2l1998
 32792  006BAC  0A01               	xorlw	1	; case 1
 32793  006BAE  B4D8               	btfsc	status,2,c
 32794  006BB0  D7C5               	goto	i2l18421
 32795  006BB2  0A03               	xorlw	3	; case 2
 32796  006BB4  B4D8               	btfsc	status,2,c
 32797  006BB6  D7CA               	goto	i2l18427
 32798  006BB8  0A01               	xorlw	1	; case 3
 32799  006BBA  B4D8               	btfsc	status,2,c
 32800  006BBC  D763               	goto	i2l1998
 32801  006BBE  0A07               	xorlw	7	; case 4
 32802  006BC0  B4D8               	btfsc	status,2,c
 32803  006BC2  D760               	goto	i2l1998
 32804  006BC4  0A01               	xorlw	1	; case 5
 32805  006BC6  B4D8               	btfsc	status,2,c
 32806  006BC8  D75D               	goto	i2l1998
 32807  006BCA  0A03               	xorlw	3	; case 6
 32808  006BCC  B4D8               	btfsc	status,2,c
 32809  006BCE  D75A               	goto	i2l1998
 32810  006BD0  D7D3               	goto	i2l2004
 32811  006BD2                     __end_ofi2_aCaptGetResult:
 32812                           	opt callstack 0
 32813                           
 32814 ;; *************** function _isqrt *****************
 32815 ;; Defined at:
 32816 ;;		line 21 in file "cmath.c"
 32817 ;; Parameters:    Size  Location     Type
 32818 ;;  x               2    0[COMRAM] unsigned short 
 32819 ;; Auto vars:     Size  Location     Type
 32820 ;;  one             2    8[COMRAM] unsigned short 
 32821 ;;  res             2    6[COMRAM] unsigned short 
 32822 ;;  op              2    4[COMRAM] unsigned short 
 32823 ;; Return value:  Size  Location     Type
 32824 ;;                  2    0[COMRAM] unsigned short 
 32825 ;; Registers used:
 32826 ;;		wreg, status,2, status,0
 32827 ;; Tracked objects:
 32828 ;;		On entry : 3F/0
 32829 ;;		On exit  : 3F/0
 32830 ;;		Unchanged: 3F/0
 32831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32833 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32835 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32836 ;;Total ram usage:       10 bytes
 32837 ;; Hardware stack levels used:    1
 32838 ;; This function calls:
 32839 ;;		Nothing
 32840 ;; This function is called by:
 32841 ;;		_vMeasureIsr
 32842 ;; This function uses a non-reentrant model
 32843 ;;
 32844                           
 32845                           	psect	text165
 32846  008500                     __ptext165:
 32847                           	opt callstack 0
 32848  008500                     _isqrt:
 32849                           	opt callstack 10
 32850                           
 32851                           ; BSR set to: 0
 32852                           ;cmath.c: 21: uint16_t isqrt(uint16_t x);cmath.c: 22: {;cmath.c: 23:     uint16_t op, re
      +                          s, one;;cmath.c: 25:     op = x;
 32853                           
 32854                           ;incstack = 0
 32855  008500  0060  F004  F005   	movff	isqrt@x,isqrt@op
 32856  008506  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 32857                           
 32858                           ; BSR set to: 0
 32859                           ;cmath.c: 26:     res = 0;
 32860  00850C  0E00               	movlw	0
 32861  00850E  6E08               	movwf	(isqrt@res+1)^0,c
 32862  008510  0E00               	movlw	0
 32863  008512  6E07               	movwf	isqrt@res^0,c
 32864                           
 32865                           ;cmath.c: 29:     one = 1 << 14;
 32866  008514  0E40               	movlw	64
 32867  008516  6E0A               	movwf	(isqrt@one+1)^0,c
 32868  008518  0E00               	movlw	0
 32869  00851A  6E09               	movwf	isqrt@one^0,c
 32870                           
 32871                           ;cmath.c: 30:     while (one > op) one >>= 2;
 32872  00851C  D006               	goto	i2l12391
 32873  00851E                     i2l12389:
 32874                           
 32875                           ; BSR set to: 0
 32876  00851E  90D8               	bcf	status,0,c
 32877  008520  320A               	rrcf	(isqrt@one+1)^0,f,c
 32878  008522  3209               	rrcf	isqrt@one^0,f,c
 32879  008524  90D8               	bcf	status,0,c
 32880  008526  320A               	rrcf	(isqrt@one+1)^0,f,c
 32881  008528  3209               	rrcf	isqrt@one^0,f,c
 32882  00852A                     i2l12391:
 32883                           
 32884                           ; BSR set to: 0
 32885  00852A  5009               	movf	isqrt@one^0,w,c
 32886  00852C  5C05               	subwf	isqrt@op^0,w,c
 32887  00852E  500A               	movf	(isqrt@one+1)^0,w,c
 32888  008530  5806               	subwfb	(isqrt@op+1)^0,w,c
 32889  008532  B0D8               	btfsc	status,0,c
 32890  008534  D02D               	goto	i2l3031
 32891  008536  D7F3               	goto	i2l12389
 32892  008538                     i2l12393:
 32893                           
 32894                           ; BSR set to: 0
 32895                           ;cmath.c: 33:         if (op >= res + one) {
 32896  008538  5009               	movf	isqrt@one^0,w,c
 32897  00853A  2407               	addwf	isqrt@res^0,w,c
 32898  00853C  6E03               	movwf	??_isqrt^0,c
 32899  00853E  500A               	movf	(isqrt@one+1)^0,w,c
 32900  008540  2008               	addwfc	(isqrt@res+1)^0,w,c
 32901  008542  6E04               	movwf	(??_isqrt+1)^0,c
 32902  008544  5003               	movf	??_isqrt^0,w,c
 32903  008546  5C05               	subwf	isqrt@op^0,w,c
 32904  008548  5004               	movf	(??_isqrt+1)^0,w,c
 32905  00854A  5806               	subwfb	(isqrt@op+1)^0,w,c
 32906  00854C  A0D8               	btfss	status,0,c
 32907  00854E  D017               	goto	i2l12397
 32908                           
 32909                           ; BSR set to: 0
 32910                           ;cmath.c: 34:             op -= res + one;
 32911  008550  5009               	movf	isqrt@one^0,w,c
 32912  008552  2407               	addwf	isqrt@res^0,w,c
 32913  008554  6E03               	movwf	??_isqrt^0,c
 32914  008556  500A               	movf	(isqrt@one+1)^0,w,c
 32915  008558  2008               	addwfc	(isqrt@res+1)^0,w,c
 32916  00855A  6E04               	movwf	(??_isqrt+1)^0,c
 32917  00855C  5003               	movf	??_isqrt^0,w,c
 32918  00855E  5E05               	subwf	isqrt@op^0,f,c
 32919  008560  5004               	movf	(??_isqrt+1)^0,w,c
 32920  008562  5A06               	subwfb	(isqrt@op+1)^0,f,c
 32921                           
 32922                           ;cmath.c: 35:             res += one << 1;
 32923  008564  0060  F024  F003   	movff	isqrt@one,??_isqrt
 32924  00856A  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 32925  008570  90D8               	bcf	status,0,c
 32926  008572  3603               	rlcf	??_isqrt^0,f,c
 32927  008574  3604               	rlcf	(??_isqrt+1)^0,f,c
 32928  008576  5003               	movf	??_isqrt^0,w,c
 32929  008578  2607               	addwf	isqrt@res^0,f,c
 32930  00857A  5004               	movf	(??_isqrt+1)^0,w,c
 32931  00857C  2208               	addwfc	(isqrt@res+1)^0,f,c
 32932  00857E                     i2l12397:
 32933                           
 32934                           ; BSR set to: 0
 32935                           ;cmath.c: 37:         res >>= 1;
 32936  00857E  90D8               	bcf	status,0,c
 32937  008580  3208               	rrcf	(isqrt@res+1)^0,f,c
 32938  008582  3207               	rrcf	isqrt@res^0,f,c
 32939                           
 32940                           ; BSR set to: 0
 32941                           ;cmath.c: 38:         one >>= 2;
 32942  008584  90D8               	bcf	status,0,c
 32943  008586  320A               	rrcf	(isqrt@one+1)^0,f,c
 32944  008588  3209               	rrcf	isqrt@one^0,f,c
 32945  00858A  90D8               	bcf	status,0,c
 32946  00858C  320A               	rrcf	(isqrt@one+1)^0,f,c
 32947  00858E  3209               	rrcf	isqrt@one^0,f,c
 32948  008590                     i2l3031:
 32949                           
 32950                           ; BSR set to: 0
 32951                           ;cmath.c: 32:     while (one != 0) {
 32952  008590  5009               	movf	isqrt@one^0,w,c
 32953  008592  100A               	iorwf	(isqrt@one+1)^0,w,c
 32954  008594  A4D8               	btfss	status,2,c
 32955  008596  D7D0               	goto	i2l12393
 32956                           
 32957                           ; BSR set to: 0
 32958                           ;cmath.c: 40:     return res;
 32959  008598  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 32960  00859E  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 32961                           
 32962                           ; BSR set to: 0
 32963  0085A4  0012               	return		;funcret
 32964  0085A6                     __end_of_isqrt:
 32965                           	opt callstack 0
 32966                           
 32967 ;; *************** function _I2C2_MasterIsr *****************
 32968 ;; Defined at:
 32969 ;;		line 348 in file "mcc_generated_files/i2c2_master.c"
 32970 ;; Parameters:    Size  Location     Type
 32971 ;;		None
 32972 ;; Auto vars:     Size  Location     Type
 32973 ;;		None
 32974 ;; Return value:  Size  Location     Type
 32975 ;;                  1    wreg      void 
 32976 ;; Registers used:
 32977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32978 ;; Tracked objects:
 32979 ;;		On entry : 3F/0
 32980 ;;		On exit  : 3F/2
 32981 ;;		Unchanged: 0/0
 32982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32987 ;;Total ram usage:        0 bytes
 32988 ;; Hardware stack levels used:    1
 32989 ;; Hardware stack levels required when called:   15
 32990 ;; This function calls:
 32991 ;;		_I2C2_MasterFsm
 32992 ;; This function is called by:
 32993 ;;		_I2C2_Open
 32994 ;;		_INTERRUPT_InterruptManager
 32995 ;; This function uses a non-reentrant model
 32996 ;;
 32997                           
 32998                           	psect	text166
 32999  00A848                     __ptext166:
 33000                           	opt callstack 0
 33001  00A848                     _I2C2_MasterIsr:
 33002                           	opt callstack 0
 33003                           
 33004                           ; BSR set to: 0
 33005                           ;mcc_generated_files/i2c2_master.c: 350:     I2C2_MasterFsm();
 33006                           
 33007                           ; BSR set to: 0
 33008                           ;incstack = 0
 33009 ;; hardware stack exceeded
 33010  00A848  EC5A  F047         	call	_I2C2_MasterFsm	;wreg free
 33011                           
 33012                           ; BSR set to: 2
 33013  00A84C  0012               	return		;funcret
 33014  00A84E                     __end_of_I2C2_MasterIsr:
 33015                           	opt callstack 0
 33016                           
 33017 ;; *************** function _I2C2_MasterFsm *****************
 33018 ;; Defined at:
 33019 ;;		line 353 in file "mcc_generated_files/i2c2_master.c"
 33020 ;; Parameters:    Size  Location     Type
 33021 ;;		None
 33022 ;; Auto vars:     Size  Location     Type
 33023 ;;		None
 33024 ;; Return value:  Size  Location     Type
 33025 ;;                  1    wreg      void 
 33026 ;; Registers used:
 33027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33028 ;; Tracked objects:
 33029 ;;		On entry : 3F/0
 33030 ;;		On exit  : 3F/2
 33031 ;;		Unchanged: 0/0
 33032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33037 ;;Total ram usage:        2 bytes
 33038 ;; Hardware stack levels used:    1
 33039 ;; Hardware stack levels required when called:   14
 33040 ;; This function calls:
 33041 ;;		_I2C2_ClearInterruptFlags
 33042 ;;		_I2C2_DO_ADDRESS_NACK
 33043 ;;		_I2C2_DO_BUS_COLLISION
 33044 ;;		_I2C2_DO_BUS_ERROR
 33045 ;;		_I2C2_DO_IDLE
 33046 ;;		_I2C2_DO_RESET
 33047 ;;		_I2C2_DO_RX
 33048 ;;		_I2C2_DO_RX_ACK
 33049 ;;		_I2C2_DO_RX_NACK_RESTART
 33050 ;;		_I2C2_DO_RX_NACK_STOP
 33051 ;;		_I2C2_DO_SEND_RESTART
 33052 ;;		_I2C2_DO_SEND_RESTART_READ
 33053 ;;		_I2C2_DO_SEND_RESTART_WRITE
 33054 ;;		_I2C2_DO_SEND_STOP
 33055 ;;		_I2C2_DO_TX
 33056 ;;		_I2C2_DO_TX_ACK
 33057 ;;		_I2C2_DO_TX_EMPTY
 33058 ;;		_I2C2_MasterIsNack
 33059 ;;		i2_I2C2_DO_RX_EMPTY
 33060 ;;		i2_I2C2_DO_SEND_ADR_READ
 33061 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 33062 ;; This function is called by:
 33063 ;;		_I2C2_MasterIsr
 33064 ;; This function uses a non-reentrant model
 33065 ;;
 33066                           
 33067                           	psect	text167
 33068  008EB4                     __ptext167:
 33069                           	opt callstack 0
 33070  008EB4                     _I2C2_MasterFsm:
 33071                           	opt callstack 0
 33072                           
 33073                           ; BSR set to: 0
 33074                           ;mcc_generated_files/i2c2_master.c: 355:     I2C2_ClearInterruptFlags();
 33075                           
 33076                           ; BSR set to: 2
 33077                           ;incstack = 0
 33078 ;; hardware stack exceeded
 33079  008EB4  EC74  F04F         	call	_I2C2_ClearInterruptFlags	;wreg free
 33080                           
 33081                           ; BSR set to: 61
 33082                           ;mcc_generated_files/i2c2_master.c: 357:     if(I2C2_Status.addressNackCheck && I2C2_Mas
      +                          terIsNack())
 33083  008EB8  0102               	movlb	2	; () banked
 33084  008EBA  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33085  008EBC  0B03               	andlw	3
 33086  008EBE  0900               	iorlw	0
 33087  008EC0  B4D8               	btfsc	status,2,c
 33088  008EC2  D008               	goto	i2l18601
 33089                           
 33090                           ; BSR set to: 2
 33091  008EC4  EC8C  F053         	call	_I2C2_MasterIsNack	;wreg free
 33092  008EC8  0900               	iorlw	0
 33093  008ECA  B4D8               	btfsc	status,2,c
 33094  008ECC  D003               	goto	i2l18601
 33095                           
 33096                           ; BSR set to: 61
 33097                           ;mcc_generated_files/i2c2_master.c: 358:     {;mcc_generated_files/i2c2_master.c: 359:  
      +                                 I2C2_Status.state = I2C2_ADDRESS_NACK;
 33098  008ECE  0E10               	movlw	16
 33099  008ED0  0102               	movlb	2	; () banked
 33100  008ED2  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 33101  008ED4                     i2l18601:
 33102                           
 33103                           ;mcc_generated_files/i2c2_master.c: 361:     I2C2_Status.state = fsmStateTable[I2C2_Stat
      +                          us.state]();
 33104  008ED4  0102               	movlb	2	; () banked
 33105  008ED6  5121               	movf	(_I2C2_Status+33)& (0+255),w,b
 33106  008ED8  0D02               	mullw	2
 33107  008EDA  0E51               	movlw	low _fsmStateTable
 33108  008EDC  24F3               	addwf	243,w,c
 33109  008EDE  6EF6               	movwf	tblptrl,c
 33110  008EE0  0EFA               	movlw	high _fsmStateTable
 33111  008EE2  20F4               	addwfc	244,w,c
 33112  008EE4  6EF7               	movwf	tblptrh,c
 33113  008EE6                     	if	1	;There are 3 active tblptr bytes
 33114  008EE6  6AF8               	clrf	tblptru,c
 33115  008EE8  0E00               	movlw	low (__mediumconst shr (0+16))
 33116  008EEA  22F8               	addwfc	tblptru,f,c
 33117  008EEC                     	endif
 33118  008EEC  0009               	tblrd		*+
 33119  008EEE  006F FFD4  F00D    	movff	tablat,??_I2C2_MasterFsm
 33120  008EF4  0009               	tblrd		*+
 33121  008EF6  006F FFD4  F00E    	movff	tablat,??_I2C2_MasterFsm+1
 33122  008EFC  D801               	call	i2u1911_48
 33123  008EFE  D009               	goto	i2u1911_49
 33124  008F00                     i2u1911_48:
 33125  008F00  0005               	push	
 33126  008F02  6EFA               	movwf	pclath,c
 33127  008F04  500D               	movf	??_I2C2_MasterFsm^0,w,c
 33128  008F06  6EFD               	movwf	tosl,c
 33129  008F08  500E               	movf	(??_I2C2_MasterFsm+1)^0,w,c
 33130  008F0A  6EFE               	movwf	tosh,c
 33131  008F0C  6AFF               	clrf	tosu,c
 33132  008F0E  50FA               	movf	pclath,w,c
 33133  008F10  0012               	return		;indir
 33134  008F12                     i2u1911_49:
 33135  008F12  0102               	movlb	2	; () banked
 33136  008F14  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 33137                           
 33138                           ; BSR set to: 2
 33139  008F16  0012               	return		;funcret
 33140  008F18                     __end_of_I2C2_MasterFsm:
 33141                           	opt callstack 0
 33142                           
 33143 ;; *************** function i2_I2C2_DO_RX_EMPTY *****************
 33144 ;; Defined at:
 33145 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 33146 ;; Parameters:    Size  Location     Type
 33147 ;;		None
 33148 ;; Auto vars:     Size  Location     Type
 33149 ;;		None
 33150 ;; Return value:  Size  Location     Type
 33151 ;;                  1    wreg      enum E16447
 33152 ;; Registers used:
 33153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33154 ;; Tracked objects:
 33155 ;;		On entry : 3F/2
 33156 ;;		On exit  : 0/0
 33157 ;;		Unchanged: 0/0
 33158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33163 ;;Total ram usage:        2 bytes
 33164 ;; Hardware stack levels used:    1
 33165 ;; Hardware stack levels required when called:   10
 33166 ;; This function calls:
 33167 ;;		Absolute function
 33168 ;;		i2_I2C2_CallbackReturnReset
 33169 ;;		i2_I2C2_CallbackReturnStop
 33170 ;;		i2_I2C2_MasterDisableRestart
 33171 ;;		i2_I2C2_MasterEnableRestart
 33172 ;;		i2_I2C2_MasterSetCounter
 33173 ;;		i2_I2C2_NackCb
 33174 ;;		i2_rd1RegCompleteHandler
 33175 ;;		i2_rd2RegCompleteHandler
 33176 ;;		i2_rdBlkRegCompleteHandler
 33177 ;;		i2_wr1RegCompleteHandler
 33178 ;;		i2_wr2RegCompleteHandler
 33179 ;; This function is called by:
 33180 ;;		_I2C2_DO_RX
 33181 ;;		i2_I2C2_DO_SEND_ADR_READ
 33182 ;; This function uses a non-reentrant model
 33183 ;;
 33184                           
 33185                           	psect	text168
 33186  008B34                     __ptext168:
 33187                           	opt callstack 0
 33188  008B34                     i2_I2C2_DO_RX_EMPTY:
 33189                           	opt callstack 0
 33190                           
 33191                           ; BSR set to: 2
 33192                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 33193                           
 33194                           ; BSR set to: 2
 33195                           ;incstack = 0
 33196 ;; hardware stack exceeded
 33197  008B34  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 33198                           
 33199                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 33200  008B36  D016               	goto	i2l17525
 33201  008B38                     i2l17497:
 33202                           
 33203                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 33204  008B38  EC33  F054         	call	i2_I2C2_MasterEnableRestart	;wreg free
 33205                           
 33206                           ; BSR set to: 61
 33207                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 33208  008B3C  0E08               	movlw	8
 33209  008B3E  0012               	return	
 33210  008B40                     i2l17503:
 33211                           
 33212                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 33213  008B40  EC33  F054         	call	i2_I2C2_MasterEnableRestart	;wreg free
 33214                           
 33215                           ; BSR set to: 61
 33216                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 33217  008B44  0E07               	movlw	7
 33218  008B46  0012               	return	
 33219  008B48                     i2l17509:
 33220                           
 33221                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 33222  008B48  0102               	movlb	2	; () banked
 33223  008B4A  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 33224  008B4C  ECF6  F053         	call	i2_I2C2_MasterSetCounter
 33225                           
 33226                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 33227  008B50  0E04               	movlw	4
 33228  008B52  0012               	return	
 33229  008B54                     i2l17515:
 33230                           
 33231                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 33232  008B54  0E07               	movlw	7
 33233  008B56  0102               	movlb	2	; () banked
 33234  008B58  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 33235  008B5A  A4D8               	btfss	status,2,c
 33236                           
 33237                           ; BSR set to: 2
 33238                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 33239  008B5C  EC36  F054         	call	i2_I2C2_MasterDisableRestart	;wreg free
 33240                           
 33241                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 33242  008B60  0E0F               	movlw	15
 33243  008B62  0012               	return	
 33244  008B64                     i2l17525:
 33245                           
 33246                           ; BSR set to: 2
 33247  008B64  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 33248  008B6A  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 33249  008B70  D801               	call	i2u1802_48
 33250  008B72  D009               	goto	i2u1802_49
 33251  008B74                     i2u1802_48:
 33252  008B74  0005               	push	
 33253  008B76  6EFA               	movwf	pclath,c
 33254  008B78  5100               	movf	_I2C2_Status& (0+255),w,b
 33255  008B7A  6EFD               	movwf	tosl,c
 33256  008B7C  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 33257  008B7E  6EFE               	movwf	tosh,c
 33258  008B80  6AFF               	clrf	tosu,c
 33259  008B82  50FA               	movf	pclath,w,c
 33260  008B84  0012               	return		;indir
 33261  008B86                     i2u1802_49:
 33262  008B86  6E07               	movwf	??i2_I2C2_DO_RX_EMPTY^0,c
 33263  008B88  6A08               	clrf	(??i2_I2C2_DO_RX_EMPTY+1)^0,c
 33264                           
 33265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33266                           ; Switch size 1, requested type "simple"
 33267                           ; Number of cases is 1, Range of values is 0 to 0
 33268                           ; switch strategies available:
 33269                           ; Name         Instructions Cycles
 33270                           ; simple_byte            4     3 (average)
 33271                           ;	Chosen strategy is simple_byte
 33272  008B8A  5008               	movf	(??i2_I2C2_DO_RX_EMPTY+1)^0,w,c
 33273  008B8C  0A00               	xorlw	0	; case 0
 33274  008B8E  A4D8               	btfss	status,2,c
 33275  008B90  D7E1               	goto	i2l17515
 33276                           
 33277                           ; Switch size 1, requested type "simple"
 33278                           ; Number of cases is 4, Range of values is 1 to 4
 33279                           ; switch strategies available:
 33280                           ; Name         Instructions Cycles
 33281                           ; simple_byte           13     7 (average)
 33282                           ;	Chosen strategy is simple_byte
 33283  008B92  5007               	movf	??i2_I2C2_DO_RX_EMPTY^0,w,c
 33284  008B94  0A01               	xorlw	1	; case 1
 33285  008B96  B4D8               	btfsc	status,2,c
 33286  008B98  D7DD               	goto	i2l17515
 33287  008B9A  0A03               	xorlw	3	; case 2
 33288  008B9C  B4D8               	btfsc	status,2,c
 33289  008B9E  D7D0               	goto	i2l17503
 33290  008BA0  0A01               	xorlw	1	; case 3
 33291  008BA2  B4D8               	btfsc	status,2,c
 33292  008BA4  D7C9               	goto	i2l17497
 33293  008BA6  0A07               	xorlw	7	; case 4
 33294  008BA8  B4D8               	btfsc	status,2,c
 33295  008BAA  D7CE               	goto	i2l17509
 33296  008BAC  D7D3               	goto	i2l17515
 33297  008BAE                     __end_ofi2_I2C2_DO_RX_EMPTY:
 33298                           	opt callstack 0
 33299                           
 33300 ;; *************** function i2_I2C2_DO_SEND_ADR_READ *****************
 33301 ;; Defined at:
 33302 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 33303 ;; Parameters:    Size  Location     Type
 33304 ;;		None
 33305 ;; Auto vars:     Size  Location     Type
 33306 ;;		None
 33307 ;; Return value:  Size  Location     Type
 33308 ;;                  1    wreg      enum E16447
 33309 ;; Registers used:
 33310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33311 ;; Tracked objects:
 33312 ;;		On entry : 0/2
 33313 ;;		On exit  : 0/0
 33314 ;;		Unchanged: 0/0
 33315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33320 ;;Total ram usage:        0 bytes
 33321 ;; Hardware stack levels used:    1
 33322 ;; Hardware stack levels required when called:   11
 33323 ;; This function calls:
 33324 ;;		i2_I2C2_DO_RX_EMPTY
 33325 ;;		i2_I2C2_MasterSendTxData
 33326 ;; This function is called by:
 33327 ;;		_I2C2_DO_SEND_RESTART_READ
 33328 ;; This function uses a non-reentrant model
 33329 ;;
 33330                           
 33331                           	psect	text169
 33332  00A31E                     __ptext169:
 33333                           	opt callstack 0
 33334  00A31E                     i2_I2C2_DO_SEND_ADR_READ:
 33335                           	opt callstack 0
 33336                           
 33337                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 33338                           
 33339                           ;incstack = 0
 33340 ;; hardware stack exceeded
 33341  00A31E  0102               	movlb	2	; () banked
 33342  00A320  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33343  00A322  0BFC               	andlw	-4
 33344  00A324  0902               	iorlw	2
 33345  00A326  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 33346                           
 33347                           ; BSR set to: 2
 33348                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 33349  00A328  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 33350  00A32A  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 33351  00A32C  B4D8               	btfsc	status,2,c
 33352                           
 33353                           ; BSR set to: 2
 33354                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 33355  00A32E  EC9A  F045         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 33356                           
 33357                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 33358  00A332  80D8               	bsf	status,0,c
 33359  00A334  0102               	movlb	2	; () banked
 33360  00A336  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 33361  00A338  ECF1  F053         	call	i2_I2C2_MasterSendTxData
 33362                           
 33363                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 33364  00A33C  0E04               	movlw	4
 33365  00A33E  0012               	return		;funcret
 33366  00A340                     __end_ofi2_I2C2_DO_SEND_ADR_READ:
 33367                           	opt callstack 0
 33368                           
 33369 ;; *************** function _I2C2_DO_BUS_ERROR *****************
 33370 ;; Defined at:
 33371 ;;		line 597 in file "mcc_generated_files/i2c2_master.c"
 33372 ;; Parameters:    Size  Location     Type
 33373 ;;		None
 33374 ;; Auto vars:     Size  Location     Type
 33375 ;;		None
 33376 ;; Return value:  Size  Location     Type
 33377 ;;                  1    wreg      enum E16447
 33378 ;; Registers used:
 33379 ;;		wreg, status,2, cstack
 33380 ;; Tracked objects:
 33381 ;;		On entry : 3F/2
 33382 ;;		On exit  : 3F/2
 33383 ;;		Unchanged: 0/0
 33384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33389 ;;Total ram usage:        0 bytes
 33390 ;; Hardware stack levels used:    1
 33391 ;; Hardware stack levels required when called:    1
 33392 ;; This function calls:
 33393 ;;		_I2C2_MasterResetBus
 33394 ;; This function is called by:
 33395 ;;		_I2C2_MasterFsm
 33396 ;; This function uses a non-reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text170
 33400  00A622                     __ptext170:
 33401                           	opt callstack 0
 33402  00A622                     _I2C2_DO_BUS_ERROR:
 33403                           	opt callstack 9
 33404                           
 33405                           ; BSR set to: 2
 33406                           ;mcc_generated_files/i2c2_master.c: 599:     I2C2_MasterResetBus();
 33407                           
 33408                           ;incstack = 0
 33409  00A622  ECFB  F053         	call	_I2C2_MasterResetBus	;wreg free
 33410                           
 33411                           ; BSR set to: 61
 33412                           ;mcc_generated_files/i2c2_master.c: 600:     I2C2_Status.busy = 0;
 33413  00A626  0102               	movlb	2	; () banked
 33414  00A628  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33415                           
 33416                           ; BSR set to: 2
 33417                           ;mcc_generated_files/i2c2_master.c: 601:     I2C2_Status.error = I2C2_FAIL;
 33418  00A62A  0E02               	movlw	2
 33419  00A62C  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33420                           
 33421                           ; BSR set to: 2
 33422                           ;mcc_generated_files/i2c2_master.c: 602:     return I2C2_RESET;
 33423  00A62E  0E0F               	movlw	15
 33424                           
 33425                           ; BSR set to: 2
 33426  00A630  0012               	return		;funcret
 33427  00A632                     __end_of_I2C2_DO_BUS_ERROR:
 33428                           	opt callstack 0
 33429                           
 33430 ;; *************** function _I2C2_DO_BUS_COLLISION *****************
 33431 ;; Defined at:
 33432 ;;		line 581 in file "mcc_generated_files/i2c2_master.c"
 33433 ;; Parameters:    Size  Location     Type
 33434 ;;		None
 33435 ;; Auto vars:     Size  Location     Type
 33436 ;;		None
 33437 ;; Return value:  Size  Location     Type
 33438 ;;                  1    wreg      enum E16447
 33439 ;; Registers used:
 33440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33441 ;; Tracked objects:
 33442 ;;		On entry : 3F/2
 33443 ;;		On exit  : 0/0
 33444 ;;		Unchanged: 0/0
 33445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33450 ;;Total ram usage:        2 bytes
 33451 ;; Hardware stack levels used:    1
 33452 ;; Hardware stack levels required when called:   13
 33453 ;; This function calls:
 33454 ;;		Absolute function
 33455 ;;		_I2C2_DO_RESET
 33456 ;;		_I2C2_DO_SEND_RESTART_READ
 33457 ;;		_I2C2_DO_SEND_RESTART_WRITE
 33458 ;;		i2_I2C2_CallbackReturnReset
 33459 ;;		i2_I2C2_CallbackReturnStop
 33460 ;;		i2_I2C2_MasterClearIrq
 33461 ;;		i2_I2C2_NackCb
 33462 ;;		i2_rd1RegCompleteHandler
 33463 ;;		i2_rd2RegCompleteHandler
 33464 ;;		i2_rdBlkRegCompleteHandler
 33465 ;;		i2_wr1RegCompleteHandler
 33466 ;;		i2_wr2RegCompleteHandler
 33467 ;; This function is called by:
 33468 ;;		_I2C2_MasterFsm
 33469 ;; This function uses a non-reentrant model
 33470 ;;
 33471                           
 33472                           	psect	text171
 33473  0090F8                     __ptext171:
 33474                           	opt callstack 0
 33475  0090F8                     _I2C2_DO_BUS_COLLISION:
 33476                           	opt callstack 0
 33477                           
 33478                           ; BSR set to: 2
 33479                           ;mcc_generated_files/i2c2_master.c: 584:     I2C2_MasterClearIrq();
 33480                           
 33481                           ; BSR set to: 2
 33482                           ;incstack = 0
 33483 ;; hardware stack exceeded
 33484  0090F8  EC14  F054         	call	i2_I2C2_MasterClearIrq	;wreg free
 33485                           
 33486                           ; BSR set to: 61
 33487                           ;mcc_generated_files/i2c2_master.c: 586:     I2C2_Status.error = I2C2_FAIL;
 33488  0090FC  0E02               	movlw	2
 33489  0090FE  0102               	movlb	2	; () banked
 33490  009100  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33491                           
 33492                           ;mcc_generated_files/i2c2_master.c: 587:     switch (I2C2_Status.callbackTable[I2C2_WRIT
      +                          E_COLLISION](I2C2_Status.callbackPayload[I2C2_WRITE_COLLISION])) {
 33493  009102  D009               	goto	i2l18055
 33494  009104                     i2l18041:
 33495                           
 33496                           ;mcc_generated_files/i2c2_master.c: 589:         return I2C2_DO_SEND_RESTART_READ();
 33497  009104  EC85  F053         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 33498  009108  0012               	return	
 33499  00910A                     i2l18045:
 33500                           
 33501                           ;mcc_generated_files/i2c2_master.c: 591:         return I2C2_DO_SEND_RESTART_WRITE();
 33502  00910A  EC49  F054         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 33503  00910E  0012               	return	
 33504  009110                     i2l18049:
 33505                           
 33506                           ;mcc_generated_files/i2c2_master.c: 593:         return I2C2_DO_RESET();
 33507  009110  EC19  F053         	call	_I2C2_DO_RESET	;wreg free
 33508  009114  0012               	return	
 33509  009116                     i2l18055:
 33510                           
 33511                           ; BSR set to: 2
 33512  009116  0060  F838  F005   	movff	_I2C2_Status+14,i2rd1RegCompleteHandler@ptr
 33513  00911C  0060  F83C  F006   	movff	_I2C2_Status+15,i2rd1RegCompleteHandler@ptr+1
 33514  009122  D801               	call	i2u1860_48
 33515  009124  D009               	goto	i2u1860_49
 33516  009126                     i2u1860_48:
 33517  009126  0005               	push	
 33518  009128  6EFA               	movwf	pclath,c
 33519  00912A  5102               	movf	(_I2C2_Status+2)& (0+255),w,b
 33520  00912C  6EFD               	movwf	tosl,c
 33521  00912E  5103               	movf	(_I2C2_Status+3)& (0+255),w,b
 33522  009130  6EFE               	movwf	tosh,c
 33523  009132  6AFF               	clrf	tosu,c
 33524  009134  50FA               	movf	pclath,w,c
 33525  009136  0012               	return		;indir
 33526  009138                     i2u1860_49:
 33527  009138  6E07               	movwf	??_I2C2_DO_BUS_COLLISION^0,c
 33528  00913A  6A08               	clrf	(??_I2C2_DO_BUS_COLLISION+1)^0,c
 33529                           
 33530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33531                           ; Switch size 1, requested type "simple"
 33532                           ; Number of cases is 1, Range of values is 0 to 0
 33533                           ; switch strategies available:
 33534                           ; Name         Instructions Cycles
 33535                           ; simple_byte            4     3 (average)
 33536                           ;	Chosen strategy is simple_byte
 33537  00913C  5008               	movf	(??_I2C2_DO_BUS_COLLISION+1)^0,w,c
 33538  00913E  0A00               	xorlw	0	; case 0
 33539  009140  A4D8               	btfss	status,2,c
 33540  009142  D7E6               	goto	i2l18049
 33541                           
 33542                           ; Switch size 1, requested type "simple"
 33543                           ; Number of cases is 2, Range of values is 2 to 3
 33544                           ; switch strategies available:
 33545                           ; Name         Instructions Cycles
 33546                           ; simple_byte            7     4 (average)
 33547                           ;	Chosen strategy is simple_byte
 33548  009144  5007               	movf	??_I2C2_DO_BUS_COLLISION^0,w,c
 33549  009146  0A02               	xorlw	2	; case 2
 33550  009148  B4D8               	btfsc	status,2,c
 33551  00914A  D7DC               	goto	i2l18041
 33552  00914C  0A01               	xorlw	1	; case 3
 33553  00914E  B4D8               	btfsc	status,2,c
 33554  009150  D7DC               	goto	i2l18045
 33555  009152  D7DE               	goto	i2l18049
 33556  009154                     __end_of_I2C2_DO_BUS_COLLISION:
 33557                           	opt callstack 0
 33558                           
 33559 ;; *************** function _I2C2_DO_ADDRESS_NACK *****************
 33560 ;; Defined at:
 33561 ;;		line 566 in file "mcc_generated_files/i2c2_master.c"
 33562 ;; Parameters:    Size  Location     Type
 33563 ;;		None
 33564 ;; Auto vars:     Size  Location     Type
 33565 ;;		None
 33566 ;; Return value:  Size  Location     Type
 33567 ;;                  1    wreg      enum E16447
 33568 ;; Registers used:
 33569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33570 ;; Tracked objects:
 33571 ;;		On entry : 3F/2
 33572 ;;		On exit  : 0/0
 33573 ;;		Unchanged: 0/0
 33574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33579 ;;Total ram usage:        2 bytes
 33580 ;; Hardware stack levels used:    1
 33581 ;; Hardware stack levels required when called:   10
 33582 ;; This function calls:
 33583 ;;		Absolute function
 33584 ;;		_I2C2_DO_SEND_RESTART
 33585 ;;		i2_I2C2_CallbackReturnReset
 33586 ;;		i2_I2C2_CallbackReturnStop
 33587 ;;		i2_I2C2_NackCb
 33588 ;;		i2_rd1RegCompleteHandler
 33589 ;;		i2_rd2RegCompleteHandler
 33590 ;;		i2_rdBlkRegCompleteHandler
 33591 ;;		i2_wr1RegCompleteHandler
 33592 ;;		i2_wr2RegCompleteHandler
 33593 ;; This function is called by:
 33594 ;;		_I2C2_MasterFsm
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text172
 33599  009414                     __ptext172:
 33600                           	opt callstack 0
 33601  009414                     _I2C2_DO_ADDRESS_NACK:
 33602                           	opt callstack 0
 33603                           
 33604                           ; BSR set to: 2
 33605                           ;mcc_generated_files/i2c2_master.c: 568:     I2C2_Status.addressNackCheck = 0;
 33606                           
 33607                           ;incstack = 0
 33608  009414  0EFC               	movlw	-4
 33609  009416  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 33610                           
 33611                           ;mcc_generated_files/i2c2_master.c: 569:     I2C2_Status.error = I2C2_FAIL;
 33612  009418  0E02               	movlw	2
 33613  00941A  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33614                           
 33615                           ; BSR set to: 2
 33616                           ;mcc_generated_files/i2c2_master.c: 570:     I2C2_Status.busy = 0;
 33617  00941C  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33618                           
 33619                           ;mcc_generated_files/i2c2_master.c: 571:     switch(I2C2_Status.callbackTable[I2C2_ADDR_
      +                          NACK](I2C2_Status.callbackPayload[I2C2_ADDR_NACK]))
 33620  00941E  D005               	goto	i2l18029
 33621  009420                     i2l18019:
 33622                           
 33623                           ;mcc_generated_files/i2c2_master.c: 575:             return I2C2_DO_SEND_RESTART();
 33624  009420  EC47  F054         	call	_I2C2_DO_SEND_RESTART	;wreg free
 33625  009424  0012               	return	
 33626  009426                     i2l18023:
 33627                           
 33628                           ;mcc_generated_files/i2c2_master.c: 577:             return I2C2_RESET;
 33629  009426  0E0F               	movlw	15
 33630  009428  0012               	return	
 33631  00942A                     i2l18029:
 33632                           
 33633                           ; BSR set to: 2
 33634  00942A  0060  F840  F005   	movff	_I2C2_Status+16,i2rd1RegCompleteHandler@ptr
 33635  009430  0060  F844  F006   	movff	_I2C2_Status+17,i2rd1RegCompleteHandler@ptr+1
 33636  009436  D801               	call	i2u1859_48
 33637  009438  D009               	goto	i2u1859_49
 33638  00943A                     i2u1859_48:
 33639  00943A  0005               	push	
 33640  00943C  6EFA               	movwf	pclath,c
 33641  00943E  5104               	movf	(_I2C2_Status+4)& (0+255),w,b
 33642  009440  6EFD               	movwf	tosl,c
 33643  009442  5105               	movf	(_I2C2_Status+5)& (0+255),w,b
 33644  009444  6EFE               	movwf	tosh,c
 33645  009446  6AFF               	clrf	tosu,c
 33646  009448  50FA               	movf	pclath,w,c
 33647  00944A  0012               	return		;indir
 33648  00944C                     i2u1859_49:
 33649  00944C  6E07               	movwf	??_I2C2_DO_ADDRESS_NACK^0,c
 33650  00944E  6A08               	clrf	(??_I2C2_DO_ADDRESS_NACK+1)^0,c
 33651                           
 33652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33653                           ; Switch size 1, requested type "simple"
 33654                           ; Number of cases is 1, Range of values is 0 to 0
 33655                           ; switch strategies available:
 33656                           ; Name         Instructions Cycles
 33657                           ; simple_byte            4     3 (average)
 33658                           ;	Chosen strategy is simple_byte
 33659  009450  5008               	movf	(??_I2C2_DO_ADDRESS_NACK+1)^0,w,c
 33660  009452  0A00               	xorlw	0	; case 0
 33661  009454  A4D8               	btfss	status,2,c
 33662  009456  D7E7               	goto	i2l18023
 33663                           
 33664                           ; Switch size 1, requested type "simple"
 33665                           ; Number of cases is 2, Range of values is 2 to 3
 33666                           ; switch strategies available:
 33667                           ; Name         Instructions Cycles
 33668                           ; simple_byte            7     4 (average)
 33669                           ;	Chosen strategy is simple_byte
 33670  009458  5007               	movf	??_I2C2_DO_ADDRESS_NACK^0,w,c
 33671  00945A  0A02               	xorlw	2	; case 2
 33672  00945C  B4D8               	btfsc	status,2,c
 33673  00945E  D7E0               	goto	i2l18019
 33674  009460  0A01               	xorlw	1	; case 3
 33675  009462  B4D8               	btfsc	status,2,c
 33676  009464  D7DD               	goto	i2l18019
 33677  009466  D7DF               	goto	i2l18023
 33678  009468                     __end_of_I2C2_DO_ADDRESS_NACK:
 33679                           	opt callstack 0
 33680                           
 33681 ;; *************** function _I2C2_DO_RESET *****************
 33682 ;; Defined at:
 33683 ;;		line 559 in file "mcc_generated_files/i2c2_master.c"
 33684 ;; Parameters:    Size  Location     Type
 33685 ;;		None
 33686 ;; Auto vars:     Size  Location     Type
 33687 ;;		None
 33688 ;; Return value:  Size  Location     Type
 33689 ;;                  1    wreg      enum E16447
 33690 ;; Registers used:
 33691 ;;		wreg, status,2, cstack
 33692 ;; Tracked objects:
 33693 ;;		On entry : 0/2
 33694 ;;		On exit  : 3F/2
 33695 ;;		Unchanged: 0/0
 33696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33701 ;;Total ram usage:        0 bytes
 33702 ;; Hardware stack levels used:    1
 33703 ;; Hardware stack levels required when called:    1
 33704 ;; This function calls:
 33705 ;;		_I2C2_MasterResetBus
 33706 ;; This function is called by:
 33707 ;;		_I2C2_DO_BUS_COLLISION
 33708 ;;		_I2C2_MasterFsm
 33709 ;; This function uses a non-reentrant model
 33710 ;;
 33711                           
 33712                           	psect	text173
 33713  00A632                     __ptext173:
 33714                           	opt callstack 0
 33715  00A632                     _I2C2_DO_RESET:
 33716                           	opt callstack 9
 33717                           
 33718                           ;mcc_generated_files/i2c2_master.c: 561:     I2C2_MasterResetBus();
 33719                           
 33720                           ;incstack = 0
 33721  00A632  ECFB  F053         	call	_I2C2_MasterResetBus	;wreg free
 33722                           
 33723                           ; BSR set to: 61
 33724                           ;mcc_generated_files/i2c2_master.c: 562:     I2C2_Status.busy = 0;
 33725  00A636  0102               	movlb	2	; () banked
 33726  00A638  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33727                           
 33728                           ; BSR set to: 2
 33729                           ;mcc_generated_files/i2c2_master.c: 563:     I2C2_Status.error = I2C2_NOERR;
 33730  00A63A  0E00               	movlw	0
 33731  00A63C  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33732                           
 33733                           ; BSR set to: 2
 33734                           ;mcc_generated_files/i2c2_master.c: 564:     return I2C2_RESET;
 33735  00A63E  0E0F               	movlw	15
 33736                           
 33737                           ; BSR set to: 2
 33738  00A640  0012               	return		;funcret
 33739  00A642                     __end_of_I2C2_DO_RESET:
 33740                           	opt callstack 0
 33741                           
 33742 ;; *************** function _I2C2_DO_RX_NACK_RESTART *****************
 33743 ;; Defined at:
 33744 ;;		line 553 in file "mcc_generated_files/i2c2_master.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;		None
 33747 ;; Auto vars:     Size  Location     Type
 33748 ;;		None
 33749 ;; Return value:  Size  Location     Type
 33750 ;;                  1    wreg      enum E16447
 33751 ;; Registers used:
 33752 ;;		wreg, cstack
 33753 ;; Tracked objects:
 33754 ;;		On entry : 3F/2
 33755 ;;		On exit  : 3F/3D
 33756 ;;		Unchanged: 0/0
 33757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33762 ;;Total ram usage:        0 bytes
 33763 ;; Hardware stack levels used:    1
 33764 ;; Hardware stack levels required when called:    1
 33765 ;; This function calls:
 33766 ;;		_I2C2_MasterSendNack
 33767 ;; This function is called by:
 33768 ;;		_I2C2_MasterFsm
 33769 ;; This function uses a non-reentrant model
 33770 ;;
 33771                           
 33772                           	psect	text174
 33773  00A810                     __ptext174:
 33774                           	opt callstack 0
 33775  00A810                     _I2C2_DO_RX_NACK_RESTART:
 33776                           	opt callstack 9
 33777                           
 33778                           ; BSR set to: 2
 33779                           ;mcc_generated_files/i2c2_master.c: 555:     I2C2_MasterSendNack();
 33780                           
 33781                           ; BSR set to: 2
 33782                           ;incstack = 0
 33783  00A810  EC2A  F054         	call	_I2C2_MasterSendNack	;wreg free
 33784                           
 33785                           ; BSR set to: 61
 33786                           ;mcc_generated_files/i2c2_master.c: 556:     return I2C2_SEND_RESTART;
 33787  00A814  0E09               	movlw	9
 33788                           
 33789                           ; BSR set to: 61
 33790  00A816  0012               	return		;funcret
 33791  00A818                     __end_of_I2C2_DO_RX_NACK_RESTART:
 33792                           	opt callstack 0
 33793                           
 33794 ;; *************** function _I2C2_DO_RX_NACK_STOP *****************
 33795 ;; Defined at:
 33796 ;;		line 546 in file "mcc_generated_files/i2c2_master.c"
 33797 ;; Parameters:    Size  Location     Type
 33798 ;;		None
 33799 ;; Auto vars:     Size  Location     Type
 33800 ;;		None
 33801 ;; Return value:  Size  Location     Type
 33802 ;;                  1    wreg      enum E16447
 33803 ;; Registers used:
 33804 ;;		wreg, status,2, cstack
 33805 ;; Tracked objects:
 33806 ;;		On entry : 3F/2
 33807 ;;		On exit  : 3F/2
 33808 ;;		Unchanged: 0/0
 33809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33814 ;;Total ram usage:        0 bytes
 33815 ;; Hardware stack levels used:    1
 33816 ;; Hardware stack levels required when called:    1
 33817 ;; This function calls:
 33818 ;;		_I2C2_DO_IDLE
 33819 ;;		_I2C2_MasterSendNack
 33820 ;;		_I2C2_MasterStop
 33821 ;; This function is called by:
 33822 ;;		_I2C2_MasterFsm
 33823 ;; This function uses a non-reentrant model
 33824 ;;
 33825                           
 33826                           	psect	text175
 33827  00A6FC                     __ptext175:
 33828                           	opt callstack 0
 33829  00A6FC                     _I2C2_DO_RX_NACK_STOP:
 33830                           	opt callstack 9
 33831                           
 33832                           ; BSR set to: 2
 33833                           ;mcc_generated_files/i2c2_master.c: 548:     I2C2_MasterSendNack();
 33834                           
 33835                           ; BSR set to: 61
 33836                           ;incstack = 0
 33837  00A6FC  EC2A  F054         	call	_I2C2_MasterSendNack	;wreg free
 33838                           
 33839                           ;mcc_generated_files/i2c2_master.c: 549:     I2C2_MasterStop();
 33840  00A700  EC27  F054         	call	_I2C2_MasterStop	;wreg free
 33841                           
 33842                           ; BSR set to: 61
 33843                           ;mcc_generated_files/i2c2_master.c: 550:     return I2C2_DO_IDLE();
 33844  00A704  ECBF  F053         	call	_I2C2_DO_IDLE	;wreg free
 33845                           
 33846                           ; BSR set to: 2
 33847  00A708  0012               	return		;funcret
 33848  00A70A                     __end_of_I2C2_DO_RX_NACK_STOP:
 33849                           	opt callstack 0
 33850                           
 33851 ;; *************** function _I2C2_DO_TX_ACK *****************
 33852 ;; Defined at:
 33853 ;;		line 540 in file "mcc_generated_files/i2c2_master.c"
 33854 ;; Parameters:    Size  Location     Type
 33855 ;;		None
 33856 ;; Auto vars:     Size  Location     Type
 33857 ;;		None
 33858 ;; Return value:  Size  Location     Type
 33859 ;;                  1    wreg      enum E16447
 33860 ;; Registers used:
 33861 ;;		wreg, cstack
 33862 ;; Tracked objects:
 33863 ;;		On entry : 3F/2
 33864 ;;		On exit  : 3F/3D
 33865 ;;		Unchanged: 0/0
 33866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33871 ;;Total ram usage:        0 bytes
 33872 ;; Hardware stack levels used:    1
 33873 ;; Hardware stack levels required when called:    1
 33874 ;; This function calls:
 33875 ;;		_I2C2_MasterSendAck
 33876 ;; This function is called by:
 33877 ;;		_I2C2_MasterFsm
 33878 ;; This function uses a non-reentrant model
 33879 ;;
 33880                           
 33881                           	psect	text176
 33882  00A818                     __ptext176:
 33883                           	opt callstack 0
 33884  00A818                     _I2C2_DO_TX_ACK:
 33885                           	opt callstack 9
 33886                           
 33887                           ; BSR set to: 2
 33888                           ;mcc_generated_files/i2c2_master.c: 542:     I2C2_MasterSendAck();
 33889                           
 33890                           ; BSR set to: 2
 33891                           ;incstack = 0
 33892  00A818  EC2D  F054         	call	_I2C2_MasterSendAck	;wreg free
 33893                           
 33894                           ; BSR set to: 61
 33895                           ;mcc_generated_files/i2c2_master.c: 543:     return I2C2_TX;
 33896  00A81C  0E03               	movlw	3
 33897                           
 33898                           ; BSR set to: 61
 33899  00A81E  0012               	return		;funcret
 33900  00A820                     __end_of_I2C2_DO_TX_ACK:
 33901                           	opt callstack 0
 33902                           
 33903 ;; *************** function _I2C2_DO_RX_ACK *****************
 33904 ;; Defined at:
 33905 ;;		line 534 in file "mcc_generated_files/i2c2_master.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;		None
 33908 ;; Auto vars:     Size  Location     Type
 33909 ;;		None
 33910 ;; Return value:  Size  Location     Type
 33911 ;;                  1    wreg      enum E16447
 33912 ;; Registers used:
 33913 ;;		wreg, cstack
 33914 ;; Tracked objects:
 33915 ;;		On entry : 3F/2
 33916 ;;		On exit  : 3F/3D
 33917 ;;		Unchanged: 0/0
 33918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33923 ;;Total ram usage:        0 bytes
 33924 ;; Hardware stack levels used:    1
 33925 ;; Hardware stack levels required when called:    1
 33926 ;; This function calls:
 33927 ;;		_I2C2_MasterSendAck
 33928 ;; This function is called by:
 33929 ;;		_I2C2_MasterFsm
 33930 ;; This function uses a non-reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text177
 33934  00A820                     __ptext177:
 33935                           	opt callstack 0
 33936  00A820                     _I2C2_DO_RX_ACK:
 33937                           	opt callstack 9
 33938                           
 33939                           ; BSR set to: 2
 33940                           ;mcc_generated_files/i2c2_master.c: 536:     I2C2_MasterSendAck();
 33941                           
 33942                           ; BSR set to: 61
 33943                           ;incstack = 0
 33944  00A820  EC2D  F054         	call	_I2C2_MasterSendAck	;wreg free
 33945                           
 33946                           ; BSR set to: 61
 33947                           ;mcc_generated_files/i2c2_master.c: 537:     return I2C2_RX;
 33948  00A824  0E04               	movlw	4
 33949                           
 33950                           ; BSR set to: 61
 33951  00A826  0012               	return		;funcret
 33952  00A828                     __end_of_I2C2_DO_RX_ACK:
 33953                           	opt callstack 0
 33954                           
 33955 ;; *************** function _I2C2_DO_SEND_STOP *****************
 33956 ;; Defined at:
 33957 ;;		line 523 in file "mcc_generated_files/i2c2_master.c"
 33958 ;; Parameters:    Size  Location     Type
 33959 ;;		None
 33960 ;; Auto vars:     Size  Location     Type
 33961 ;;		None
 33962 ;; Return value:  Size  Location     Type
 33963 ;;                  1    wreg      enum E16447
 33964 ;; Registers used:
 33965 ;;		wreg, status,2, cstack
 33966 ;; Tracked objects:
 33967 ;;		On entry : 3F/2
 33968 ;;		On exit  : 0/0
 33969 ;;		Unchanged: 0/0
 33970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33975 ;;Total ram usage:        0 bytes
 33976 ;; Hardware stack levels used:    1
 33977 ;; Hardware stack levels required when called:    1
 33978 ;; This function calls:
 33979 ;;		_I2C2_MasterGetCounter
 33980 ;;		_I2C2_MasterStop
 33981 ;;		i2_I2C2_MasterSendTxData
 33982 ;;		i2_I2C2_MasterSetCounter
 33983 ;; This function is called by:
 33984 ;;		_I2C2_MasterFsm
 33985 ;; This function uses a non-reentrant model
 33986 ;;
 33987                           
 33988                           	psect	text178
 33989  00A440                     __ptext178:
 33990                           	opt callstack 0
 33991  00A440                     _I2C2_DO_SEND_STOP:
 33992                           	opt callstack 9
 33993                           
 33994                           ; BSR set to: 2
 33995                           ;mcc_generated_files/i2c2_master.c: 525:     I2C2_MasterStop();
 33996                           
 33997                           ; BSR set to: 61
 33998                           ;incstack = 0
 33999  00A440  EC27  F054         	call	_I2C2_MasterStop	;wreg free
 34000                           
 34001                           ; BSR set to: 61
 34002                           ;mcc_generated_files/i2c2_master.c: 526:     if(I2C2_MasterGetCounter())
 34003  00A444  EC4B  F054         	call	_I2C2_MasterGetCounter	;wreg free
 34004  00A448  0900               	iorlw	0
 34005  00A44A  B4D8               	btfsc	status,2,c
 34006  00A44C  D006               	goto	i2l12127
 34007                           
 34008                           ; BSR set to: 61
 34009                           ;mcc_generated_files/i2c2_master.c: 527:     {;mcc_generated_files/i2c2_master.c: 528:  
      +                                 I2C2_MasterSetCounter(0);
 34010  00A44E  0E00               	movlw	0
 34011  00A450  ECF6  F053         	call	i2_I2C2_MasterSetCounter
 34012                           
 34013                           ;mcc_generated_files/i2c2_master.c: 529:         I2C2_MasterSendTxData(0);
 34014  00A454  0E00               	movlw	0
 34015  00A456  ECF1  F053         	call	i2_I2C2_MasterSendTxData
 34016  00A45A                     i2l12127:
 34017                           
 34018                           ;mcc_generated_files/i2c2_master.c: 531:     return I2C2_IDLE;
 34019  00A45A  0E00               	movlw	0
 34020  00A45C  0012               	return		;funcret
 34021  00A45E                     __end_of_I2C2_DO_SEND_STOP:
 34022                           	opt callstack 0
 34023                           
 34024 ;; *************** function _I2C2_DO_SEND_RESTART *****************
 34025 ;; Defined at:
 34026 ;;		line 518 in file "mcc_generated_files/i2c2_master.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;		None
 34029 ;; Auto vars:     Size  Location     Type
 34030 ;;		None
 34031 ;; Return value:  Size  Location     Type
 34032 ;;                  1    wreg      enum E16447
 34033 ;; Registers used:
 34034 ;;		wreg
 34035 ;; Tracked objects:
 34036 ;;		On entry : 0/2
 34037 ;;		On exit  : 0/0
 34038 ;;		Unchanged: 0/0
 34039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34044 ;;Total ram usage:        0 bytes
 34045 ;; Hardware stack levels used:    1
 34046 ;; This function calls:
 34047 ;;		Nothing
 34048 ;; This function is called by:
 34049 ;;		_I2C2_DO_ADDRESS_NACK
 34050 ;;		_I2C2_MasterFsm
 34051 ;; This function uses a non-reentrant model
 34052 ;;
 34053                           
 34054                           	psect	text179
 34055  00A88E                     __ptext179:
 34056                           	opt callstack 0
 34057  00A88E                     _I2C2_DO_SEND_RESTART:
 34058                           	opt callstack 10
 34059                           
 34060                           ;mcc_generated_files/i2c2_master.c: 520:     return I2C2_SEND_ADR_READ;
 34061                           
 34062                           ;incstack = 0
 34063  00A88E  0E01               	movlw	1
 34064  00A890  0012               	return		;funcret
 34065  00A892                     __end_of_I2C2_DO_SEND_RESTART:
 34066                           	opt callstack 0
 34067                           
 34068 ;; *************** function _I2C2_DO_SEND_RESTART_WRITE *****************
 34069 ;; Defined at:
 34070 ;;		line 512 in file "mcc_generated_files/i2c2_master.c"
 34071 ;; Parameters:    Size  Location     Type
 34072 ;;		None
 34073 ;; Auto vars:     Size  Location     Type
 34074 ;;		None
 34075 ;; Return value:  Size  Location     Type
 34076 ;;                  1    wreg      enum E16447
 34077 ;; Registers used:
 34078 ;;		wreg
 34079 ;; Tracked objects:
 34080 ;;		On entry : 0/2
 34081 ;;		On exit  : 0/0
 34082 ;;		Unchanged: 0/0
 34083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34088 ;;Total ram usage:        0 bytes
 34089 ;; Hardware stack levels used:    1
 34090 ;; This function calls:
 34091 ;;		Nothing
 34092 ;; This function is called by:
 34093 ;;		_I2C2_DO_TX
 34094 ;;		_I2C2_DO_BUS_COLLISION
 34095 ;;		_I2C2_MasterFsm
 34096 ;; This function uses a non-reentrant model
 34097 ;;
 34098                           
 34099                           	psect	text180
 34100  00A892                     __ptext180:
 34101                           	opt callstack 0
 34102  00A892                     _I2C2_DO_SEND_RESTART_WRITE:
 34103                           	opt callstack 9
 34104                           
 34105                           ;mcc_generated_files/i2c2_master.c: 514:     return I2C2_SEND_ADR_WRITE;
 34106                           
 34107                           ;incstack = 0
 34108  00A892  0E02               	movlw	2
 34109  00A894  0012               	return		;funcret
 34110  00A896                     __end_of_I2C2_DO_SEND_RESTART_WRITE:
 34111                           	opt callstack 0
 34112                           
 34113 ;; *************** function _I2C2_DO_SEND_RESTART_READ *****************
 34114 ;; Defined at:
 34115 ;;		line 506 in file "mcc_generated_files/i2c2_master.c"
 34116 ;; Parameters:    Size  Location     Type
 34117 ;;		None
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;		None
 34120 ;; Return value:  Size  Location     Type
 34121 ;;                  1    wreg      enum E16447
 34122 ;; Registers used:
 34123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34124 ;; Tracked objects:
 34125 ;;		On entry : 0/2
 34126 ;;		On exit  : 0/0
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34133 ;;Total ram usage:        0 bytes
 34134 ;; Hardware stack levels used:    1
 34135 ;; Hardware stack levels required when called:   12
 34136 ;; This function calls:
 34137 ;;		i2_I2C2_DO_SEND_ADR_READ
 34138 ;;		i2_I2C2_MasterSetCounter
 34139 ;; This function is called by:
 34140 ;;		_I2C2_DO_TX
 34141 ;;		_I2C2_DO_BUS_COLLISION
 34142 ;;		_I2C2_MasterFsm
 34143 ;; This function uses a non-reentrant model
 34144 ;;
 34145                           
 34146                           	psect	text181
 34147  00A70A                     __ptext181:
 34148                           	opt callstack 0
 34149  00A70A                     _I2C2_DO_SEND_RESTART_READ:
 34150                           	opt callstack 0
 34151                           
 34152                           ;mcc_generated_files/i2c2_master.c: 508:     I2C2_MasterSetCounter(I2C2_Status.data_leng
      +                          th);
 34153                           
 34154                           ;incstack = 0
 34155 ;; hardware stack exceeded
 34156  00A70A  0102               	movlb	2	; () banked
 34157  00A70C  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34158  00A70E  ECF6  F053         	call	i2_I2C2_MasterSetCounter
 34159                           
 34160                           ;mcc_generated_files/i2c2_master.c: 509:     return I2C2_DO_SEND_ADR_READ();
 34161  00A712  EC8F  F051         	call	i2_I2C2_DO_SEND_ADR_READ	;wreg free
 34162  00A716  0012               	return		;funcret
 34163  00A718                     __end_of_I2C2_DO_SEND_RESTART_READ:
 34164                           	opt callstack 0
 34165                           
 34166 ;; *************** function _I2C2_DO_TX_EMPTY *****************
 34167 ;; Defined at:
 34168 ;;		line 462 in file "mcc_generated_files/i2c2_master.c"
 34169 ;; Parameters:    Size  Location     Type
 34170 ;;		None
 34171 ;; Auto vars:     Size  Location     Type
 34172 ;;		None
 34173 ;; Return value:  Size  Location     Type
 34174 ;;                  1    wreg      enum E16447
 34175 ;; Registers used:
 34176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34177 ;; Tracked objects:
 34178 ;;		On entry : 3F/2
 34179 ;;		On exit  : 0/0
 34180 ;;		Unchanged: 0/0
 34181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34186 ;;Total ram usage:        2 bytes
 34187 ;; Hardware stack levels used:    1
 34188 ;; Hardware stack levels required when called:   10
 34189 ;; This function calls:
 34190 ;;		Absolute function
 34191 ;;		i2_I2C2_CallbackReturnReset
 34192 ;;		i2_I2C2_CallbackReturnStop
 34193 ;;		i2_I2C2_MasterDisableRestart
 34194 ;;		i2_I2C2_MasterEnableRestart
 34195 ;;		i2_I2C2_MasterSetCounter
 34196 ;;		i2_I2C2_NackCb
 34197 ;;		i2_rd1RegCompleteHandler
 34198 ;;		i2_rd2RegCompleteHandler
 34199 ;;		i2_rdBlkRegCompleteHandler
 34200 ;;		i2_wr1RegCompleteHandler
 34201 ;;		i2_wr2RegCompleteHandler
 34202 ;; This function is called by:
 34203 ;;		_I2C2_DO_TX
 34204 ;;		_I2C2_MasterFsm
 34205 ;; This function uses a non-reentrant model
 34206 ;;
 34207                           
 34208                           	psect	text182
 34209  008F18                     __ptext182:
 34210                           	opt callstack 0
 34211  008F18                     _I2C2_DO_TX_EMPTY:
 34212                           	opt callstack 0
 34213                           
 34214                           ; BSR set to: 2
 34215                           ;mcc_generated_files/i2c2_master.c: 464:     I2C2_Status.bufferFree = 1;
 34216                           
 34217                           ;incstack = 0
 34218  008F18  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 34219                           
 34220                           ;mcc_generated_files/i2c2_master.c: 465:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 34221  008F1A  D00E               	goto	i2l17745
 34222  008F1C                     i2l17725:
 34223                           
 34224                           ;mcc_generated_files/i2c2_master.c: 468:             I2C2_MasterEnableRestart();
 34225  008F1C  EC33  F054         	call	i2_I2C2_MasterEnableRestart	;wreg free
 34226                           
 34227                           ; BSR set to: 61
 34228                           ;mcc_generated_files/i2c2_master.c: 469:             return I2C2_SEND_RESTART_READ;
 34229  008F20  0E07               	movlw	7
 34230  008F22  0012               	return	
 34231  008F24                     i2l17731:
 34232                           
 34233                           ;mcc_generated_files/i2c2_master.c: 472:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 34234  008F24  0102               	movlb	2	; () banked
 34235  008F26  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 34236  008F28  ECF6  F053         	call	i2_I2C2_MasterSetCounter
 34237                           
 34238                           ;mcc_generated_files/i2c2_master.c: 473:             return I2C2_TX;
 34239  008F2C  0E03               	movlw	3
 34240  008F2E  0012               	return	
 34241  008F30                     i2l17737:
 34242                           
 34243                           ;mcc_generated_files/i2c2_master.c: 476:             I2C2_MasterDisableRestart();
 34244  008F30  EC36  F054         	call	i2_I2C2_MasterDisableRestart	;wreg free
 34245                           
 34246                           ; BSR set to: 61
 34247                           ;mcc_generated_files/i2c2_master.c: 477:             return I2C2_SEND_STOP;
 34248  008F34  0E0A               	movlw	10
 34249  008F36  0012               	return	
 34250  008F38                     i2l17745:
 34251                           
 34252                           ; BSR set to: 2
 34253  008F38  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 34254  008F3E  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 34255  008F44  D801               	call	i2u1817_48
 34256  008F46  D009               	goto	i2u1817_49
 34257  008F48                     i2u1817_48:
 34258  008F48  0005               	push	
 34259  008F4A  6EFA               	movwf	pclath,c
 34260  008F4C  5100               	movf	_I2C2_Status& (0+255),w,b
 34261  008F4E  6EFD               	movwf	tosl,c
 34262  008F50  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 34263  008F52  6EFE               	movwf	tosh,c
 34264  008F54  6AFF               	clrf	tosu,c
 34265  008F56  50FA               	movf	pclath,w,c
 34266  008F58  0012               	return		;indir
 34267  008F5A                     i2u1817_49:
 34268  008F5A  6E07               	movwf	??_I2C2_DO_TX_EMPTY^0,c
 34269  008F5C  6A08               	clrf	(??_I2C2_DO_TX_EMPTY+1)^0,c
 34270                           
 34271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34272                           ; Switch size 1, requested type "simple"
 34273                           ; Number of cases is 1, Range of values is 0 to 0
 34274                           ; switch strategies available:
 34275                           ; Name         Instructions Cycles
 34276                           ; simple_byte            4     3 (average)
 34277                           ;	Chosen strategy is simple_byte
 34278  008F5E  5008               	movf	(??_I2C2_DO_TX_EMPTY+1)^0,w,c
 34279  008F60  0A00               	xorlw	0	; case 0
 34280  008F62  A4D8               	btfss	status,2,c
 34281  008F64  D7E5               	goto	i2l17737
 34282                           
 34283                           ; Switch size 1, requested type "simple"
 34284                           ; Number of cases is 3, Range of values is 1 to 4
 34285                           ; switch strategies available:
 34286                           ; Name         Instructions Cycles
 34287                           ; simple_byte           10     6 (average)
 34288                           ;	Chosen strategy is simple_byte
 34289  008F66  5007               	movf	??_I2C2_DO_TX_EMPTY^0,w,c
 34290  008F68  0A01               	xorlw	1	; case 1
 34291  008F6A  B4D8               	btfsc	status,2,c
 34292  008F6C  D7E1               	goto	i2l17737
 34293  008F6E  0A03               	xorlw	3	; case 2
 34294  008F70  B4D8               	btfsc	status,2,c
 34295  008F72  D7D4               	goto	i2l17725
 34296  008F74  0A06               	xorlw	6	; case 4
 34297  008F76  B4D8               	btfsc	status,2,c
 34298  008F78  D7D5               	goto	i2l17731
 34299  008F7A  D7DA               	goto	i2l17737
 34300  008F7C                     __end_of_I2C2_DO_TX_EMPTY:
 34301                           	opt callstack 0
 34302                           
 34303 ;; *************** function _I2C2_DO_RX *****************
 34304 ;; Defined at:
 34305 ;;		line 438 in file "mcc_generated_files/i2c2_master.c"
 34306 ;; Parameters:    Size  Location     Type
 34307 ;;		None
 34308 ;; Auto vars:     Size  Location     Type
 34309 ;;  retFsmState     1    2[COMRAM] enum E16447
 34310 ;; Return value:  Size  Location     Type
 34311 ;;                  1    wreg      enum E16447
 34312 ;; Registers used:
 34313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34314 ;; Tracked objects:
 34315 ;;		On entry : 3F/2
 34316 ;;		On exit  : 0/0
 34317 ;;		Unchanged: 0/0
 34318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34323 ;;Total ram usage:        3 bytes
 34324 ;; Hardware stack levels used:    1
 34325 ;; Hardware stack levels required when called:   11
 34326 ;; This function calls:
 34327 ;;		_I2C2_MasterGetRxData
 34328 ;;		_I2C2_MasterIsRxBufFull
 34329 ;;		i2_I2C2_DO_RX_EMPTY
 34330 ;; This function is called by:
 34331 ;;		_I2C2_MasterFsm
 34332 ;; This function uses a non-reentrant model
 34333 ;;
 34334                           
 34335                           	psect	text183
 34336  008AB8                     __ptext183:
 34337                           	opt callstack 0
 34338  008AB8                     _I2C2_DO_RX:
 34339                           	opt callstack 0
 34340                           
 34341                           ; BSR set to: 2
 34342                           ;mcc_generated_files/i2c2_master.c: 440:     if(!I2C2_MasterIsRxBufFull())
 34343                           
 34344                           ;incstack = 0
 34345 ;; hardware stack exceeded
 34346  008AB8  EC93  F053         	call	_I2C2_MasterIsRxBufFull	;wreg free
 34347  008ABC  0900               	iorlw	0
 34348  008ABE  A4D8               	btfss	status,2,c
 34349  008AC0  D002               	goto	i2l17991
 34350  008AC2                     i2u1856_40:
 34351                           
 34352                           ;mcc_generated_files/i2c2_master.c: 441:     {;mcc_generated_files/i2c2_master.c: 442:  
      +                                 return I2C2_RX;
 34353  008AC2  0E04               	movlw	4
 34354  008AC4  0012               	return	
 34355  008AC6                     i2l17991:
 34356                           
 34357                           ; BSR set to: 61
 34358                           ;mcc_generated_files/i2c2_master.c: 444:     if(I2C2_Status.addressNackCheck)
 34359  008AC6  0102               	movlb	2	; () banked
 34360  008AC8  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34361  008ACA  0B03               	andlw	3
 34362  008ACC  0900               	iorlw	0
 34363  008ACE  B4D8               	btfsc	status,2,c
 34364  008AD0  D00C               	goto	i2l1080
 34365                           
 34366                           ; BSR set to: 2
 34367                           ;mcc_generated_files/i2c2_master.c: 445:     {;mcc_generated_files/i2c2_master.c: 446:  
      +                                 I2C2_Status.addressNackCheck--;
 34368  008AD2  0E01               	movlw	1
 34369  008AD4  6E01               	movwf	??_I2C2_DO_RX^0,c
 34370  008AD6  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34371  008AD8  0B03               	andlw	3
 34372  008ADA  6E02               	movwf	(??_I2C2_DO_RX+1)^0,c
 34373  008ADC  5001               	movf	??_I2C2_DO_RX^0,w,c
 34374  008ADE  5E02               	subwf	(??_I2C2_DO_RX+1)^0,f,c
 34375  008AE0  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34376  008AE2  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 34377  008AE4  0BFC               	andlw	-4
 34378  008AE6  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 34379  008AE8  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34380  008AEA                     i2l1080:
 34381                           
 34382                           ; BSR set to: 2
 34383                           ;mcc_generated_files/i2c2_master.c: 449:     if(--I2C2_Status.data_length)
 34384  008AEA  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 34385  008AEC  A0D8               	btfss	status,0,c
 34386  008AEE  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 34387  008AF0  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34388  008AF2  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 34389  008AF4  B4D8               	btfsc	status,2,c
 34390  008AF6  D00D               	goto	i2l18005
 34391                           
 34392                           ; BSR set to: 2
 34393                           ;mcc_generated_files/i2c2_master.c: 450:     {;mcc_generated_files/i2c2_master.c: 451:  
      +                                 *I2C2_Status.data_ptr++ = I2C2_MasterGetRxData();
 34394  008AF8  EC30  F054         	call	_I2C2_MasterGetRxData	;wreg free
 34395  008AFC  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34396  008B02  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34397  008B08  6EDF               	movwf	indf2,c
 34398                           
 34399                           ; BSR set to: 61
 34400  008B0A  0102               	movlb	2	; () banked
 34401  008B0C  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34402  008B0E  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34403  008B10  D7D8               	goto	i2u1856_40
 34404  008B12                     i2l18005:
 34405                           
 34406                           ; BSR set to: 2
 34407                           ;mcc_generated_files/i2c2_master.c: 455:     {;mcc_generated_files/i2c2_master.c: 456:  
      +                                 i2c2_fsm_states_t retFsmState = I2C2_DO_RX_EMPTY();
 34408  008B12  EC9A  F045         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 34409  008B16  6E03               	movwf	I2C2_DO_RX@retFsmState^0,c
 34410                           
 34411                           ;mcc_generated_files/i2c2_master.c: 457:         *I2C2_Status.data_ptr++ = I2C2_MasterGe
      +                          tRxData();
 34412  008B18  EC30  F054         	call	_I2C2_MasterGetRxData	;wreg free
 34413  008B1C  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34414  008B22  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34415  008B28  6EDF               	movwf	indf2,c
 34416                           
 34417                           ; BSR set to: 61
 34418  008B2A  0102               	movlb	2	; () banked
 34419  008B2C  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34420  008B2E  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34421                           
 34422                           ; BSR set to: 2
 34423                           ;mcc_generated_files/i2c2_master.c: 458:         return retFsmState;
 34424  008B30  5003               	movf	I2C2_DO_RX@retFsmState^0,w,c
 34425  008B32  0012               	return		;funcret
 34426  008B34                     __end_of_I2C2_DO_RX:
 34427                           	opt callstack 0
 34428                           
 34429 ;; *************** function _I2C2_DO_TX *****************
 34430 ;; Defined at:
 34431 ;;		line 405 in file "mcc_generated_files/i2c2_master.c"
 34432 ;; Parameters:    Size  Location     Type
 34433 ;;		None
 34434 ;; Auto vars:     Size  Location     Type
 34435 ;;  retFsmState     1    9[COMRAM] enum E16447
 34436 ;;  dataTx          1    8[COMRAM] unsigned char 
 34437 ;; Return value:  Size  Location     Type
 34438 ;;                  1    wreg      enum E16447
 34439 ;; Registers used:
 34440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34441 ;; Tracked objects:
 34442 ;;		On entry : 3F/2
 34443 ;;		On exit  : 0/0
 34444 ;;		Unchanged: 0/0
 34445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34447 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34450 ;;Total ram usage:        6 bytes
 34451 ;; Hardware stack levels used:    1
 34452 ;; Hardware stack levels required when called:   13
 34453 ;; This function calls:
 34454 ;;		Absolute function
 34455 ;;		_I2C2_DO_SEND_RESTART_READ
 34456 ;;		_I2C2_DO_SEND_RESTART_WRITE
 34457 ;;		_I2C2_DO_TX_EMPTY
 34458 ;;		_I2C2_MasterIsNack
 34459 ;;		_I2C2_MasterIsTxBufEmpty
 34460 ;;		i2_I2C2_CallbackReturnReset
 34461 ;;		i2_I2C2_CallbackReturnStop
 34462 ;;		i2_I2C2_MasterSendTxData
 34463 ;;		i2_I2C2_NackCb
 34464 ;;		i2_rd1RegCompleteHandler
 34465 ;;		i2_rd2RegCompleteHandler
 34466 ;;		i2_rdBlkRegCompleteHandler
 34467 ;;		i2_wr1RegCompleteHandler
 34468 ;;		i2_wr2RegCompleteHandler
 34469 ;; This function is called by:
 34470 ;;		_I2C2_MasterFsm
 34471 ;; This function uses a non-reentrant model
 34472 ;;
 34473                           
 34474                           	psect	text184
 34475  007D8E                     __ptext184:
 34476                           	opt callstack 0
 34477  007D8E                     _I2C2_DO_TX:
 34478                           	opt callstack 0
 34479                           
 34480                           ; BSR set to: 2
 34481                           ;mcc_generated_files/i2c2_master.c: 407:     if(I2C2_MasterIsNack())
 34482                           
 34483                           ;incstack = 0
 34484 ;; hardware stack exceeded
 34485  007D8E  EC8C  F053         	call	_I2C2_MasterIsNack	;wreg free
 34486  007D92  0900               	iorlw	0
 34487  007D94  A4D8               	btfss	status,2,c
 34488  007D96  D009               	goto	i2l17947
 34489  007D98  D02C               	goto	i2l17949
 34490  007D9A                     i2l17933:
 34491                           
 34492                           ;mcc_generated_files/i2c2_master.c: 412:                 return I2C2_DO_SEND_RESTART_REA
      +                          D();
 34493  007D9A  EC85  F053         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 34494  007D9E  0012               	return	
 34495  007DA0                     i2l17937:
 34496                           
 34497                           ;mcc_generated_files/i2c2_master.c: 414:                   return I2C2_DO_SEND_RESTART_W
      +                          RITE();
 34498  007DA0  EC49  F054         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 34499  007DA4  0012               	return	
 34500  007DA6                     i2l17941:
 34501                           
 34502                           ;mcc_generated_files/i2c2_master.c: 418:                 return I2C2_IDLE;
 34503  007DA6  0E00               	movlw	0
 34504  007DA8  0012               	return	
 34505  007DAA                     i2l17947:
 34506                           
 34507                           ; BSR set to: 61
 34508  007DAA  0060  F848  F005   	movff	_I2C2_Status+18,i2rd1RegCompleteHandler@ptr
 34509  007DB0  0060  F84C  F006   	movff	_I2C2_Status+19,i2rd1RegCompleteHandler@ptr+1
 34510  007DB6  D801               	call	i2u1852_48
 34511  007DB8  D00A               	goto	i2u1852_49
 34512  007DBA                     i2u1852_48:
 34513  007DBA  0005               	push	
 34514  007DBC  6EFA               	movwf	pclath,c
 34515  007DBE  0102               	movlb	2	; () banked
 34516  007DC0  5106               	movf	(_I2C2_Status+6)& (0+255),w,b
 34517  007DC2  6EFD               	movwf	tosl,c
 34518  007DC4  5107               	movf	(_I2C2_Status+7)& (0+255),w,b
 34519  007DC6  6EFE               	movwf	tosh,c
 34520  007DC8  6AFF               	clrf	tosu,c
 34521  007DCA  50FA               	movf	pclath,w,c
 34522  007DCC  0012               	return		;indir
 34523  007DCE                     i2u1852_49:
 34524  007DCE  6E07               	movwf	??_I2C2_DO_TX^0,c
 34525  007DD0  6A08               	clrf	(??_I2C2_DO_TX+1)^0,c
 34526                           
 34527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34528                           ; Switch size 1, requested type "simple"
 34529                           ; Number of cases is 1, Range of values is 0 to 0
 34530                           ; switch strategies available:
 34531                           ; Name         Instructions Cycles
 34532                           ; simple_byte            4     3 (average)
 34533                           ;	Chosen strategy is simple_byte
 34534  007DD2  5008               	movf	(??_I2C2_DO_TX+1)^0,w,c
 34535  007DD4  0A00               	xorlw	0	; case 0
 34536  007DD6  A4D8               	btfss	status,2,c
 34537  007DD8  D7E6               	goto	i2l17941
 34538                           
 34539                           ; Switch size 1, requested type "simple"
 34540                           ; Number of cases is 4, Range of values is 1 to 4
 34541                           ; switch strategies available:
 34542                           ; Name         Instructions Cycles
 34543                           ; simple_byte           13     7 (average)
 34544                           ;	Chosen strategy is simple_byte
 34545  007DDA  5007               	movf	??_I2C2_DO_TX^0,w,c
 34546  007DDC  0A01               	xorlw	1	; case 1
 34547  007DDE  B4D8               	btfsc	status,2,c
 34548  007DE0  D7E2               	goto	i2l17941
 34549  007DE2  0A03               	xorlw	3	; case 2
 34550  007DE4  B4D8               	btfsc	status,2,c
 34551  007DE6  D7D9               	goto	i2l17933
 34552  007DE8  0A01               	xorlw	1	; case 3
 34553  007DEA  B4D8               	btfsc	status,2,c
 34554  007DEC  D7D9               	goto	i2l17937
 34555  007DEE  0A07               	xorlw	7	; case 4
 34556  007DF0  D7DA               	goto	i2l17941
 34557  007DF2                     i2l17949:
 34558                           
 34559                           ; BSR set to: 61
 34560  007DF2  ECC5  F053         	call	_I2C2_MasterIsTxBufEmpty	;wreg free
 34561  007DF6  0900               	iorlw	0
 34562  007DF8  B4D8               	btfsc	status,2,c
 34563  007DFA  D036               	goto	i2l17975
 34564                           
 34565                           ; BSR set to: 61
 34566                           ;mcc_generated_files/i2c2_master.c: 422:     {;mcc_generated_files/i2c2_master.c: 423:  
      +                                 if(I2C2_Status.addressNackCheck)
 34567  007DFC  0102               	movlb	2	; () banked
 34568  007DFE  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34569  007E00  0B03               	andlw	3
 34570  007E02  0900               	iorlw	0
 34571  007E04  B4D8               	btfsc	status,2,c
 34572  007E06  D00C               	goto	i2l17955
 34573                           
 34574                           ; BSR set to: 2
 34575                           ;mcc_generated_files/i2c2_master.c: 424:         {;mcc_generated_files/i2c2_master.c: 42
      +                          5:             I2C2_Status.addressNackCheck--;
 34576  007E08  0E01               	movlw	1
 34577  007E0A  6E07               	movwf	??_I2C2_DO_TX^0,c
 34578  007E0C  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34579  007E0E  0B03               	andlw	3
 34580  007E10  6E08               	movwf	(??_I2C2_DO_TX+1)^0,c
 34581  007E12  5007               	movf	??_I2C2_DO_TX^0,w,c
 34582  007E14  5E08               	subwf	(??_I2C2_DO_TX+1)^0,f,c
 34583  007E16  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34584  007E18  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34585  007E1A  0BFC               	andlw	-4
 34586  007E1C  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34587  007E1E  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34588  007E20                     i2l17955:
 34589                           
 34590                           ; BSR set to: 2
 34591                           ;mcc_generated_files/i2c2_master.c: 427:         uint8_t dataTx = *I2C2_Status.data_ptr+
      +                          +;
 34592  007E20  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34593  007E26  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34594  007E2C  50DF               	movf	indf2,w,c
 34595  007E2E  6E09               	movwf	I2C2_DO_TX@dataTx^0,c
 34596                           
 34597                           ; BSR set to: 2
 34598  007E30  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34599  007E32  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34600                           
 34601                           ; BSR set to: 2
 34602                           ;mcc_generated_files/i2c2_master.c: 428:         i2c2_fsm_states_t retFsmState = (--I2C2
      +                          _Status.data_length)?I2C2_TX:I2C2_DO_TX_EMPTY();
 34603  007E34  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 34604  007E36  A0D8               	btfss	status,0,c
 34605  007E38  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 34606  007E3A  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34607  007E3C  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 34608  007E3E  A4D8               	btfss	status,2,c
 34609  007E40  D007               	goto	i2l17963
 34610                           
 34611                           ; BSR set to: 2
 34612  007E42  EC8C  F047         	call	_I2C2_DO_TX_EMPTY	;wreg free
 34613  007E46  6E07               	movwf	??_I2C2_DO_TX^0,c
 34614  007E48  5007               	movf	??_I2C2_DO_TX^0,w,c
 34615  007E4A  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34616  007E4C  6A0C               	clrf	(_I2C2_DO_TX$2655+1)^0,c
 34617  007E4E  D004               	goto	i2l17965
 34618  007E50                     i2l17963:
 34619                           
 34620                           ; BSR set to: 2
 34621  007E50  0E00               	movlw	0
 34622  007E52  6E0C               	movwf	(_I2C2_DO_TX$2655+1)^0,c
 34623  007E54  0E03               	movlw	3
 34624  007E56  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34625  007E58                     i2l17965:
 34626  007E58  0060  F02C  F00A   	movff	_I2C2_DO_TX$2655,I2C2_DO_TX@retFsmState
 34627                           
 34628                           ;mcc_generated_files/i2c2_master.c: 429:         I2C2_MasterSendTxData(dataTx);
 34629  007E5E  5009               	movf	I2C2_DO_TX@dataTx^0,w,c
 34630  007E60  ECF1  F053         	call	i2_I2C2_MasterSendTxData
 34631                           
 34632                           ;mcc_generated_files/i2c2_master.c: 430:         return retFsmState;
 34633  007E64  500A               	movf	I2C2_DO_TX@retFsmState^0,w,c
 34634  007E66  0012               	return	
 34635  007E68                     i2l17975:
 34636                           
 34637                           ; BSR set to: 61
 34638                           ;mcc_generated_files/i2c2_master.c: 433:     {;mcc_generated_files/i2c2_master.c: 434:  
      +                                 return I2C2_TX;
 34639  007E68  0E03               	movlw	3
 34640  007E6A  0012               	return		;funcret
 34641  007E6C                     __end_of_I2C2_DO_TX:
 34642                           	opt callstack 0
 34643                           
 34644 ;; *************** function _I2C2_DO_IDLE *****************
 34645 ;; Defined at:
 34646 ;;		line 380 in file "mcc_generated_files/i2c2_master.c"
 34647 ;; Parameters:    Size  Location     Type
 34648 ;;		None
 34649 ;; Auto vars:     Size  Location     Type
 34650 ;;		None
 34651 ;; Return value:  Size  Location     Type
 34652 ;;                  1    wreg      enum E16447
 34653 ;; Registers used:
 34654 ;;		wreg, status,2
 34655 ;; Tracked objects:
 34656 ;;		On entry : 0/2
 34657 ;;		On exit  : 3F/2
 34658 ;;		Unchanged: 0/0
 34659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34664 ;;Total ram usage:        0 bytes
 34665 ;; Hardware stack levels used:    1
 34666 ;; This function calls:
 34667 ;;		Nothing
 34668 ;; This function is called by:
 34669 ;;		_I2C2_DO_RX_NACK_STOP
 34670 ;;		_I2C2_MasterFsm
 34671 ;; This function uses a non-reentrant model
 34672 ;;
 34673                           
 34674                           	psect	text185
 34675  00A77E                     __ptext185:
 34676                           	opt callstack 0
 34677  00A77E                     _I2C2_DO_IDLE:
 34678                           	opt callstack 9
 34679                           
 34680                           ;mcc_generated_files/i2c2_master.c: 382:     I2C2_Status.busy = 0;
 34681                           
 34682                           ;incstack = 0
 34683  00A77E  0102               	movlb	2	; () banked
 34684  00A780  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 34685                           
 34686                           ; BSR set to: 2
 34687                           ;mcc_generated_files/i2c2_master.c: 383:     I2C2_Status.error = I2C2_NOERR;
 34688  00A782  0E00               	movlw	0
 34689  00A784  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 34690                           
 34691                           ; BSR set to: 2
 34692                           ;mcc_generated_files/i2c2_master.c: 384:     return I2C2_RESET;
 34693  00A786  0E0F               	movlw	15
 34694                           
 34695                           ; BSR set to: 2
 34696  00A788  0012               	return		;funcret
 34697  00A78A                     __end_of_I2C2_DO_IDLE:
 34698                           	opt callstack 0
 34699                           
 34700 ;; *************** function i2_I2C2_DO_SEND_ADR_WRITE *****************
 34701 ;; Defined at:
 34702 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 34703 ;; Parameters:    Size  Location     Type
 34704 ;;		None
 34705 ;; Auto vars:     Size  Location     Type
 34706 ;;		None
 34707 ;; Return value:  Size  Location     Type
 34708 ;;                  1    wreg      enum E16447
 34709 ;; Registers used:
 34710 ;;		wreg, status,2, status,0, cstack
 34711 ;; Tracked objects:
 34712 ;;		On entry : 0/0
 34713 ;;		On exit  : 0/0
 34714 ;;		Unchanged: 0/0
 34715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34720 ;;Total ram usage:        0 bytes
 34721 ;; Hardware stack levels used:    1
 34722 ;; Hardware stack levels required when called:    1
 34723 ;; This function calls:
 34724 ;;		i2_I2C2_MasterSendTxData
 34725 ;; This function is called by:
 34726 ;; This function uses a non-reentrant model
 34727 ;;
 34728                           
 34729                           	psect	text186
 34730  00A506                     __ptext186:
 34731                           	opt callstack 0
 34732  00A506                     i2_I2C2_DO_SEND_ADR_WRITE:
 34733                           	opt callstack 9
 34734                           
 34735                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 34736                           
 34737                           ; BSR set to: 2
 34738                           ;incstack = 0
 34739  00A506  0102               	movlb	2	; () banked
 34740  00A508  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34741  00A50A  0BFC               	andlw	-4
 34742  00A50C  0902               	iorlw	2
 34743  00A50E  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34744                           
 34745                           ; BSR set to: 2
 34746                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 34747  00A510  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 34748  00A512  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 34749  00A514  ECF1  F053         	call	i2_I2C2_MasterSendTxData
 34750                           
 34751                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 34752  00A518  0E03               	movlw	3
 34753  00A51A  0012               	return		;funcret
 34754  00A51C                     __end_ofi2_I2C2_DO_SEND_ADR_WRITE:
 34755                           	opt callstack 0
 34756                           
 34757 ;; *************** function _I2C2_MasterIsTxBufEmpty *****************
 34758 ;; Defined at:
 34759 ;;		line 741 in file "mcc_generated_files/i2c2_master.c"
 34760 ;; Parameters:    Size  Location     Type
 34761 ;;		None
 34762 ;; Auto vars:     Size  Location     Type
 34763 ;;		None
 34764 ;; Return value:  Size  Location     Type
 34765 ;;                  1    wreg      _Bool 
 34766 ;; Registers used:
 34767 ;;		wreg
 34768 ;; Tracked objects:
 34769 ;;		On entry : 3F/3D
 34770 ;;		On exit  : 3F/3D
 34771 ;;		Unchanged: 0/0
 34772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34777 ;;Total ram usage:        0 bytes
 34778 ;; Hardware stack levels used:    1
 34779 ;; This function calls:
 34780 ;;		Nothing
 34781 ;; This function is called by:
 34782 ;;		_I2C2_DO_TX
 34783 ;; This function uses a non-reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text187
 34787  00A78A                     __ptext187:
 34788                           	opt callstack 0
 34789  00A78A                     _I2C2_MasterIsTxBufEmpty:
 34790                           	opt callstack 9
 34791                           
 34792                           ; BSR set to: 61
 34793                           ;mcc_generated_files/i2c2_master.c: 743:     return I2C2STAT1bits.TXBE;
 34794                           
 34795                           ;incstack = 0
 34796  00A78A  AB62               	btfss	98,5,b	;volatile
 34797  00A78C  D002               	goto	i2u1028_40
 34798  00A78E  0E01               	movlw	1
 34799  00A790  0012               	return	
 34800  00A792                     i2u1028_40:
 34801  00A792  0E00               	movlw	0
 34802                           
 34803                           ; BSR set to: 61
 34804  00A794  0012               	return		;funcret
 34805  00A796                     __end_of_I2C2_MasterIsTxBufEmpty:
 34806                           	opt callstack 0
 34807                           
 34808 ;; *************** function _I2C2_MasterIsNack *****************
 34809 ;; Defined at:
 34810 ;;		line 714 in file "mcc_generated_files/i2c2_master.c"
 34811 ;; Parameters:    Size  Location     Type
 34812 ;;		None
 34813 ;; Auto vars:     Size  Location     Type
 34814 ;;		None
 34815 ;; Return value:  Size  Location     Type
 34816 ;;                  1    wreg      _Bool 
 34817 ;; Registers used:
 34818 ;;		wreg
 34819 ;; Tracked objects:
 34820 ;;		On entry : 3F/2
 34821 ;;		On exit  : 3F/3D
 34822 ;;		Unchanged: 0/0
 34823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34828 ;;Total ram usage:        0 bytes
 34829 ;; Hardware stack levels used:    1
 34830 ;; This function calls:
 34831 ;;		Nothing
 34832 ;; This function is called by:
 34833 ;;		_I2C2_MasterFsm
 34834 ;;		_I2C2_DO_TX
 34835 ;; This function uses a non-reentrant model
 34836 ;;
 34837                           
 34838                           	psect	text188
 34839  00A718                     __ptext188:
 34840                           	opt callstack 0
 34841  00A718                     _I2C2_MasterIsNack:
 34842                           	opt callstack 10
 34843                           
 34844                           ; BSR set to: 2
 34845                           ;mcc_generated_files/i2c2_master.c: 716:     return I2C2CON1bits.ACKSTAT;
 34846                           
 34847                           ; BSR set to: 61
 34848                           ;incstack = 0
 34849  00A718  013D               	movlb	61	; () banked
 34850  00A71A  AB5E               	btfss	94,5,b	;volatile
 34851  00A71C  D002               	goto	i2u1024_40
 34852  00A71E  0E01               	movlw	1
 34853  00A720  0012               	return	
 34854  00A722                     i2u1024_40:
 34855  00A722  0E00               	movlw	0
 34856                           
 34857                           ; BSR set to: 61
 34858  00A724  0012               	return		;funcret
 34859  00A726                     __end_of_I2C2_MasterIsNack:
 34860                           	opt callstack 0
 34861                           
 34862 ;; *************** function _I2C2_MasterGetCounter *****************
 34863 ;; Defined at:
 34864 ;;		line 676 in file "mcc_generated_files/i2c2_master.c"
 34865 ;; Parameters:    Size  Location     Type
 34866 ;;		None
 34867 ;; Auto vars:     Size  Location     Type
 34868 ;;		None
 34869 ;; Return value:  Size  Location     Type
 34870 ;;                  1    wreg      unsigned char 
 34871 ;; Registers used:
 34872 ;;		wreg, status,2
 34873 ;; Tracked objects:
 34874 ;;		On entry : 3F/3D
 34875 ;;		On exit  : 3F/3D
 34876 ;;		Unchanged: 0/0
 34877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34882 ;;Total ram usage:        0 bytes
 34883 ;; Hardware stack levels used:    1
 34884 ;; This function calls:
 34885 ;;		Nothing
 34886 ;; This function is called by:
 34887 ;;		_I2C2_DO_SEND_STOP
 34888 ;; This function uses a non-reentrant model
 34889 ;;
 34890                           
 34891                           	psect	text189
 34892  00A896                     __ptext189:
 34893                           	opt callstack 0
 34894  00A896                     _I2C2_MasterGetCounter:
 34895                           	opt callstack 9
 34896                           
 34897                           ; BSR set to: 61
 34898                           ;mcc_generated_files/i2c2_master.c: 678:     return I2C2CNT;
 34899                           
 34900                           ; BSR set to: 61
 34901                           ;incstack = 0
 34902  00A896  5156               	movf	86,w,b	;volatile
 34903                           
 34904                           ; BSR set to: 61
 34905  00A898  0012               	return		;funcret
 34906  00A89A                     __end_of_I2C2_MasterGetCounter:
 34907                           	opt callstack 0
 34908                           
 34909 ;; *************** function _I2C2_MasterStop *****************
 34910 ;; Defined at:
 34911 ;;		line 708 in file "mcc_generated_files/i2c2_master.c"
 34912 ;; Parameters:    Size  Location     Type
 34913 ;;		None
 34914 ;; Auto vars:     Size  Location     Type
 34915 ;;		None
 34916 ;; Return value:  Size  Location     Type
 34917 ;;                  1    wreg      void 
 34918 ;; Registers used:
 34919 ;;		None
 34920 ;; Tracked objects:
 34921 ;;		On entry : 0/2
 34922 ;;		On exit  : 3F/3D
 34923 ;;		Unchanged: 0/0
 34924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34929 ;;Total ram usage:        0 bytes
 34930 ;; Hardware stack levels used:    1
 34931 ;; This function calls:
 34932 ;;		Nothing
 34933 ;; This function is called by:
 34934 ;;		_I2C2_DO_SEND_STOP
 34935 ;;		_I2C2_DO_RX_NACK_STOP
 34936 ;; This function uses a non-reentrant model
 34937 ;;
 34938                           
 34939                           	psect	text190
 34940  00A84E                     __ptext190:
 34941                           	opt callstack 0
 34942  00A84E                     _I2C2_MasterStop:
 34943                           	opt callstack 9
 34944                           
 34945                           ;mcc_generated_files/i2c2_master.c: 711:     I2C2CON0bits.S = 0;
 34946                           
 34947                           ; BSR set to: 61
 34948                           ;incstack = 0
 34949  00A84E  013D               	movlb	61	; () banked
 34950  00A850  9B5D               	bcf	93,5,b	;volatile
 34951                           
 34952                           ; BSR set to: 61
 34953  00A852  0012               	return		;funcret
 34954  00A854                     __end_of_I2C2_MasterStop:
 34955                           	opt callstack 0
 34956                           
 34957 ;; *************** function _I2C2_MasterSendNack *****************
 34958 ;; Defined at:
 34959 ;;		line 724 in file "mcc_generated_files/i2c2_master.c"
 34960 ;; Parameters:    Size  Location     Type
 34961 ;;		None
 34962 ;; Auto vars:     Size  Location     Type
 34963 ;;		None
 34964 ;; Return value:  Size  Location     Type
 34965 ;;                  1    wreg      void 
 34966 ;; Registers used:
 34967 ;;		None
 34968 ;; Tracked objects:
 34969 ;;		On entry : 3F/2
 34970 ;;		On exit  : 3F/3D
 34971 ;;		Unchanged: 0/0
 34972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34977 ;;Total ram usage:        0 bytes
 34978 ;; Hardware stack levels used:    1
 34979 ;; This function calls:
 34980 ;;		Nothing
 34981 ;; This function is called by:
 34982 ;;		_I2C2_DO_RX_NACK_STOP
 34983 ;;		_I2C2_DO_RX_NACK_RESTART
 34984 ;; This function uses a non-reentrant model
 34985 ;;
 34986                           
 34987                           	psect	text191
 34988  00A854                     __ptext191:
 34989                           	opt callstack 0
 34990  00A854                     _I2C2_MasterSendNack:
 34991                           	opt callstack 9
 34992                           
 34993                           ; BSR set to: 2
 34994                           ;mcc_generated_files/i2c2_master.c: 726:     I2C2CON1bits.ACKDT = 1;
 34995                           
 34996                           ; BSR set to: 61
 34997                           ;incstack = 0
 34998  00A854  013D               	movlb	61	; () banked
 34999  00A856  8D5E               	bsf	94,6,b	;volatile
 35000                           
 35001                           ; BSR set to: 61
 35002  00A858  0012               	return		;funcret
 35003  00A85A                     __end_of_I2C2_MasterSendNack:
 35004                           	opt callstack 0
 35005                           
 35006 ;; *************** function _I2C2_MasterSendAck *****************
 35007 ;; Defined at:
 35008 ;;		line 719 in file "mcc_generated_files/i2c2_master.c"
 35009 ;; Parameters:    Size  Location     Type
 35010 ;;		None
 35011 ;; Auto vars:     Size  Location     Type
 35012 ;;		None
 35013 ;; Return value:  Size  Location     Type
 35014 ;;                  1    wreg      void 
 35015 ;; Registers used:
 35016 ;;		None
 35017 ;; Tracked objects:
 35018 ;;		On entry : 3F/2
 35019 ;;		On exit  : 3F/3D
 35020 ;;		Unchanged: 0/0
 35021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35026 ;;Total ram usage:        0 bytes
 35027 ;; Hardware stack levels used:    1
 35028 ;; This function calls:
 35029 ;;		Nothing
 35030 ;; This function is called by:
 35031 ;;		_I2C2_DO_RX_ACK
 35032 ;;		_I2C2_DO_TX_ACK
 35033 ;; This function uses a non-reentrant model
 35034 ;;
 35035                           
 35036                           	psect	text192
 35037  00A85A                     __ptext192:
 35038                           	opt callstack 0
 35039  00A85A                     _I2C2_MasterSendAck:
 35040                           	opt callstack 9
 35041                           
 35042                           ; BSR set to: 2
 35043                           ;mcc_generated_files/i2c2_master.c: 721:     I2C2CON1bits.ACKDT = 0;
 35044                           
 35045                           ; BSR set to: 61
 35046                           ;incstack = 0
 35047  00A85A  013D               	movlb	61	; () banked
 35048  00A85C  9D5E               	bcf	94,6,b	;volatile
 35049                           
 35050                           ; BSR set to: 61
 35051  00A85E  0012               	return		;funcret
 35052  00A860                     __end_of_I2C2_MasterSendAck:
 35053                           	opt callstack 0
 35054                           
 35055 ;; *************** function _I2C2_MasterIsRxBufFull *****************
 35056 ;; Defined at:
 35057 ;;		line 736 in file "mcc_generated_files/i2c2_master.c"
 35058 ;; Parameters:    Size  Location     Type
 35059 ;;		None
 35060 ;; Auto vars:     Size  Location     Type
 35061 ;;		None
 35062 ;; Return value:  Size  Location     Type
 35063 ;;                  1    wreg      _Bool 
 35064 ;; Registers used:
 35065 ;;		wreg
 35066 ;; Tracked objects:
 35067 ;;		On entry : 3F/2
 35068 ;;		On exit  : 3F/3D
 35069 ;;		Unchanged: 0/0
 35070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35075 ;;Total ram usage:        0 bytes
 35076 ;; Hardware stack levels used:    1
 35077 ;; This function calls:
 35078 ;;		Nothing
 35079 ;; This function is called by:
 35080 ;;		_I2C2_DO_RX
 35081 ;; This function uses a non-reentrant model
 35082 ;;
 35083                           
 35084                           	psect	text193
 35085  00A726                     __ptext193:
 35086                           	opt callstack 0
 35087  00A726                     _I2C2_MasterIsRxBufFull:
 35088                           	opt callstack 9
 35089                           
 35090                           ; BSR set to: 2
 35091                           ;mcc_generated_files/i2c2_master.c: 738:     return I2C2STAT1bits.RXBF;
 35092                           
 35093                           ; BSR set to: 61
 35094                           ;incstack = 0
 35095  00A726  013D               	movlb	61	; () banked
 35096  00A728  A162               	btfss	98,0,b	;volatile
 35097  00A72A  D002               	goto	i2u1030_40
 35098  00A72C  0E01               	movlw	1
 35099  00A72E  0012               	return	
 35100  00A730                     i2u1030_40:
 35101  00A730  0E00               	movlw	0
 35102                           
 35103                           ; BSR set to: 61
 35104  00A732  0012               	return		;funcret
 35105  00A734                     __end_of_I2C2_MasterIsRxBufFull:
 35106                           	opt callstack 0
 35107                           
 35108 ;; *************** function _I2C2_MasterGetRxData *****************
 35109 ;; Defined at:
 35110 ;;		line 666 in file "mcc_generated_files/i2c2_master.c"
 35111 ;; Parameters:    Size  Location     Type
 35112 ;;		None
 35113 ;; Auto vars:     Size  Location     Type
 35114 ;;		None
 35115 ;; Return value:  Size  Location     Type
 35116 ;;                  1    wreg      unsigned char 
 35117 ;; Registers used:
 35118 ;;		wreg, status,2
 35119 ;; Tracked objects:
 35120 ;;		On entry : 0/2
 35121 ;;		On exit  : 3F/3D
 35122 ;;		Unchanged: 0/0
 35123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35128 ;;Total ram usage:        0 bytes
 35129 ;; Hardware stack levels used:    1
 35130 ;; This function calls:
 35131 ;;		Nothing
 35132 ;; This function is called by:
 35133 ;;		_I2C2_DO_RX
 35134 ;; This function uses a non-reentrant model
 35135 ;;
 35136                           
 35137                           	psect	text194
 35138  00A860                     __ptext194:
 35139                           	opt callstack 0
 35140  00A860                     _I2C2_MasterGetRxData:
 35141                           	opt callstack 9
 35142                           
 35143                           ;mcc_generated_files/i2c2_master.c: 668:     return I2C2RXB;
 35144                           
 35145                           ; BSR set to: 61
 35146                           ;incstack = 0
 35147  00A860  013D               	movlb	61	; () banked
 35148  00A862  5154               	movf	84,w,b	;volatile
 35149                           
 35150                           ; BSR set to: 61
 35151  00A864  0012               	return		;funcret
 35152  00A866                     __end_of_I2C2_MasterGetRxData:
 35153                           	opt callstack 0
 35154                           
 35155 ;; *************** function i2_I2C2_MasterClearIrq *****************
 35156 ;; Defined at:
 35157 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 35158 ;; Parameters:    Size  Location     Type
 35159 ;;		None
 35160 ;; Auto vars:     Size  Location     Type
 35161 ;;		None
 35162 ;; Return value:  Size  Location     Type
 35163 ;;                  1    wreg      void 
 35164 ;; Registers used:
 35165 ;;		wreg, status,2
 35166 ;; Tracked objects:
 35167 ;;		On entry : 3F/2
 35168 ;;		On exit  : 3F/3D
 35169 ;;		Unchanged: 0/0
 35170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35175 ;;Total ram usage:        0 bytes
 35176 ;; Hardware stack levels used:    1
 35177 ;; This function calls:
 35178 ;;		Nothing
 35179 ;; This function is called by:
 35180 ;;		_I2C2_DO_BUS_COLLISION
 35181 ;; This function uses a non-reentrant model
 35182 ;;
 35183                           
 35184                           	psect	text195
 35185  00A828                     __ptext195:
 35186                           	opt callstack 0
 35187  00A828                     i2_I2C2_MasterClearIrq:
 35188                           	opt callstack 9
 35189                           
 35190                           ; BSR set to: 2
 35191                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 35192                           
 35193                           ; BSR set to: 61
 35194                           ;incstack = 0
 35195  00A828  0E00               	movlw	0
 35196  00A82A  013D               	movlb	61	; () banked
 35197  00A82C  6F63               	movwf	99,b	;volatile
 35198                           
 35199                           ; BSR set to: 61
 35200  00A82E  0012               	return		;funcret
 35201  00A830                     __end_ofi2_I2C2_MasterClearIrq:
 35202                           	opt callstack 0
 35203                           
 35204 ;; *************** function i2_I2C2_MasterSendTxData *****************
 35205 ;; Defined at:
 35206 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 35207 ;; Parameters:    Size  Location     Type
 35208 ;;  data            1    wreg     unsigned char 
 35209 ;; Auto vars:     Size  Location     Type
 35210 ;;  data            1    0[COMRAM] unsigned char 
 35211 ;; Return value:  Size  Location     Type
 35212 ;;                  1    wreg      void 
 35213 ;; Registers used:
 35214 ;;		wreg
 35215 ;; Tracked objects:
 35216 ;;		On entry : 0/2
 35217 ;;		On exit  : 0/0
 35218 ;;		Unchanged: 0/0
 35219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35224 ;;Total ram usage:        1 bytes
 35225 ;; Hardware stack levels used:    1
 35226 ;; This function calls:
 35227 ;;		Nothing
 35228 ;; This function is called by:
 35229 ;;		_I2C2_DO_TX
 35230 ;;		_I2C2_DO_SEND_STOP
 35231 ;;		i2_I2C2_DO_SEND_ADR_READ
 35232 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 35233 ;; This function uses a non-reentrant model
 35234 ;;
 35235                           
 35236                           	psect	text196
 35237  00A7E2                     __ptext196:
 35238                           	opt callstack 0
 35239  00A7E2                     i2_I2C2_MasterSendTxData:
 35240                           	opt callstack 9
 35241                           
 35242                           ; BSR set to: 61
 35243                           ;incstack = 0
 35244                           ;i2I2C2_MasterSendTxData@data stored from wreg
 35245  00A7E2  6E01               	movwf	i2I2C2_MasterSendTxData@data^0,c
 35246                           
 35247                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 35248  00A7E4  0060  F007  FD55   	movff	i2I2C2_MasterSendTxData@data,15701	;volatile
 35249  00A7EA  0012               	return		;funcret
 35250  00A7EC                     __end_ofi2_I2C2_MasterSendTxData:
 35251                           	opt callstack 0
 35252                           
 35253 ;; *************** function i2_I2C2_MasterSetCounter *****************
 35254 ;; Defined at:
 35255 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 35256 ;; Parameters:    Size  Location     Type
 35257 ;;  counter         1    wreg     unsigned char 
 35258 ;; Auto vars:     Size  Location     Type
 35259 ;;  counter         1    0[COMRAM] unsigned char 
 35260 ;; Return value:  Size  Location     Type
 35261 ;;                  1    wreg      void 
 35262 ;; Registers used:
 35263 ;;		wreg
 35264 ;; Tracked objects:
 35265 ;;		On entry : 0/2
 35266 ;;		On exit  : 0/0
 35267 ;;		Unchanged: 0/0
 35268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35273 ;;Total ram usage:        1 bytes
 35274 ;; Hardware stack levels used:    1
 35275 ;; This function calls:
 35276 ;;		Nothing
 35277 ;; This function is called by:
 35278 ;;		_I2C2_DO_TX_EMPTY
 35279 ;;		_I2C2_DO_SEND_RESTART_READ
 35280 ;;		_I2C2_DO_SEND_STOP
 35281 ;;		i2_I2C2_DO_RX_EMPTY
 35282 ;; This function uses a non-reentrant model
 35283 ;;
 35284                           
 35285                           	psect	text197
 35286  00A7EC                     __ptext197:
 35287                           	opt callstack 0
 35288  00A7EC                     i2_I2C2_MasterSetCounter:
 35289                           	opt callstack 8
 35290                           
 35291                           ;incstack = 0
 35292                           ;i2I2C2_MasterSetCounter@counter stored from wreg
 35293  00A7EC  6E01               	movwf	i2I2C2_MasterSetCounter@counter^0,c
 35294                           
 35295                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 35296  00A7EE  0060  F007  FD56   	movff	i2I2C2_MasterSetCounter@counter,15702	;volatile
 35297  00A7F4  0012               	return		;funcret
 35298  00A7F6                     __end_ofi2_I2C2_MasterSetCounter:
 35299                           	opt callstack 0
 35300                           
 35301 ;; *************** function i2_I2C2_MasterEnableRestart *****************
 35302 ;; Defined at:
 35303 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;		None
 35306 ;; Auto vars:     Size  Location     Type
 35307 ;;		None
 35308 ;; Return value:  Size  Location     Type
 35309 ;;                  1    wreg      void 
 35310 ;; Registers used:
 35311 ;;		None
 35312 ;; Tracked objects:
 35313 ;;		On entry : 0/2
 35314 ;;		On exit  : 3F/3D
 35315 ;;		Unchanged: 0/0
 35316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35321 ;;Total ram usage:        0 bytes
 35322 ;; Hardware stack levels used:    1
 35323 ;; This function calls:
 35324 ;;		Nothing
 35325 ;; This function is called by:
 35326 ;;		_I2C2_DO_TX_EMPTY
 35327 ;;		i2_I2C2_DO_RX_EMPTY
 35328 ;; This function uses a non-reentrant model
 35329 ;;
 35330                           
 35331                           	psect	text198
 35332  00A866                     __ptext198:
 35333                           	opt callstack 0
 35334  00A866                     i2_I2C2_MasterEnableRestart:
 35335                           	opt callstack 8
 35336                           
 35337                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 35338                           
 35339                           ;incstack = 0
 35340  00A866  013D               	movlb	61	; () banked
 35341  00A868  8D5D               	bsf	93,6,b	;volatile
 35342                           
 35343                           ; BSR set to: 61
 35344  00A86A  0012               	return		;funcret
 35345  00A86C                     __end_ofi2_I2C2_MasterEnableRestart:
 35346                           	opt callstack 0
 35347                           
 35348 ;; *************** function i2_I2C2_MasterDisableRestart *****************
 35349 ;; Defined at:
 35350 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 35351 ;; Parameters:    Size  Location     Type
 35352 ;;		None
 35353 ;; Auto vars:     Size  Location     Type
 35354 ;;		None
 35355 ;; Return value:  Size  Location     Type
 35356 ;;                  1    wreg      void 
 35357 ;; Registers used:
 35358 ;;		None
 35359 ;; Tracked objects:
 35360 ;;		On entry : 0/2
 35361 ;;		On exit  : 3F/3D
 35362 ;;		Unchanged: 0/0
 35363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35368 ;;Total ram usage:        0 bytes
 35369 ;; Hardware stack levels used:    1
 35370 ;; This function calls:
 35371 ;;		Nothing
 35372 ;; This function is called by:
 35373 ;;		_I2C2_DO_TX_EMPTY
 35374 ;;		i2_I2C2_DO_RX_EMPTY
 35375 ;; This function uses a non-reentrant model
 35376 ;;
 35377                           
 35378                           	psect	text199
 35379  00A86C                     __ptext199:
 35380                           	opt callstack 0
 35381  00A86C                     i2_I2C2_MasterDisableRestart:
 35382                           	opt callstack 8
 35383                           
 35384                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 35385                           
 35386                           ; BSR set to: 61
 35387                           ;incstack = 0
 35388  00A86C  013D               	movlb	61	; () banked
 35389  00A86E  9D5D               	bcf	93,6,b	;volatile
 35390                           
 35391                           ; BSR set to: 61
 35392  00A870  0012               	return		;funcret
 35393  00A872                     __end_ofi2_I2C2_MasterDisableRestart:
 35394                           	opt callstack 0
 35395                           
 35396 ;; *************** function _I2C2_MasterResetBus *****************
 35397 ;; Defined at:
 35398 ;;		line 686 in file "mcc_generated_files/i2c2_master.c"
 35399 ;; Parameters:    Size  Location     Type
 35400 ;;		None
 35401 ;; Auto vars:     Size  Location     Type
 35402 ;;		None
 35403 ;; Return value:  Size  Location     Type
 35404 ;;                  1    wreg      void 
 35405 ;; Registers used:
 35406 ;;		None
 35407 ;; Tracked objects:
 35408 ;;		On entry : 0/2
 35409 ;;		On exit  : 3F/3D
 35410 ;;		Unchanged: 0/0
 35411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35416 ;;Total ram usage:        0 bytes
 35417 ;; Hardware stack levels used:    1
 35418 ;; This function calls:
 35419 ;;		Nothing
 35420 ;; This function is called by:
 35421 ;;		_I2C2_DO_RESET
 35422 ;;		_I2C2_DO_BUS_ERROR
 35423 ;; This function uses a non-reentrant model
 35424 ;;
 35425                           
 35426                           	psect	text200
 35427  00A7F6                     __ptext200:
 35428                           	opt callstack 0
 35429  00A7F6                     _I2C2_MasterResetBus:
 35430                           	opt callstack 9
 35431                           
 35432                           ;mcc_generated_files/i2c2_master.c: 689:     I2C2CON0bits.EN = 0;
 35433                           
 35434                           ; BSR set to: 61
 35435                           ;incstack = 0
 35436  00A7F6  013D               	movlb	61	; () banked
 35437  00A7F8  9F5D               	bcf	93,7,b	;volatile
 35438                           
 35439                           ;mcc_generated_files/i2c2_master.c: 691:     I2C2STAT1bits.CLRBF = 1;
 35440  00A7FA  8562               	bsf	98,2,b	;volatile
 35441                           
 35442                           ;mcc_generated_files/i2c2_master.c: 693:     I2C2CON0bits.EN = 1;
 35443  00A7FC  8F5D               	bsf	93,7,b	;volatile
 35444                           
 35445                           ; BSR set to: 61
 35446  00A7FE  0012               	return		;funcret
 35447  00A800                     __end_of_I2C2_MasterResetBus:
 35448                           	opt callstack 0
 35449                           
 35450 ;; *************** function i2_I2C2_NackCb *****************
 35451 ;; Defined at:
 35452 ;;		line 30 in file "i2c2_mux.c"
 35453 ;; Parameters:    Size  Location     Type
 35454 ;;  ptr             2    4[COMRAM] PTR void 
 35455 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35456 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35457 ;; Auto vars:     Size  Location     Type
 35458 ;;		None
 35459 ;; Return value:  Size  Location     Type
 35460 ;;                  1    wreg      enum E16390
 35461 ;; Registers used:
 35462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35463 ;; Tracked objects:
 35464 ;;		On entry : 3F/2
 35465 ;;		On exit  : 3D/0
 35466 ;;		Unchanged: 0/0
 35467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35472 ;;Total ram usage:        2 bytes
 35473 ;; Hardware stack levels used:    1
 35474 ;; Hardware stack levels required when called:    9
 35475 ;; This function calls:
 35476 ;;		i2_I2C2_CallbackReturnStop
 35477 ;;		i2_printf
 35478 ;; This function is called by:
 35479 ;;		_I2C2_DO_RX_EMPTY
 35480 ;;		i2_I2C2_DO_RX_EMPTY
 35481 ;;		_I2C2_DO_TX_EMPTY
 35482 ;;		_I2C2_DO_TX
 35483 ;;		_I2C2_DO_ADDRESS_NACK
 35484 ;;		_I2C2_DO_BUS_COLLISION
 35485 ;; This function uses a non-reentrant model
 35486 ;;
 35487                           
 35488                           	psect	text201
 35489  009BFC                     __ptext201:
 35490                           	opt callstack 0
 35491  009BFC                     i2_I2C2_NackCb:
 35492                           	opt callstack 0
 35493                           
 35494                           ; BSR set to: 2
 35495                           ;i2c2_mux.c: 31:     printf ("I2C2 E\n");
 35496                           
 35497                           ; BSR set to: 61
 35498                           ;incstack = 0
 35499 ;; hardware stack exceeded
 35500  009BFC  0ED7               	movlw	low STR_61
 35501  009BFE  0100               	movlb	0	; () banked
 35502  009C00  6F7B               	movwf	i2printf@fmt& (0+255),b
 35503  009C02  0EFF               	movlw	high STR_61
 35504  009C04  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 35505  009C06  ECE1  F050         	call	i2_printf	;wreg free
 35506                           
 35507                           ; BSR set to: 2
 35508                           ;i2c2_mux.c: 32:     if (currentTrfAddr == 0x50) {
 35509  009C0A  0E50               	movlw	80
 35510  009C0C  0101               	movlb	1	; () banked
 35511  009C0E  19B7               	xorwf	_currentTrfAddr& (0+255),w,b
 35512  009C10  A4D8               	btfss	status,2,c
 35513  009C12  D004               	goto	i2l17323
 35514                           
 35515                           ; BSR set to: 1
 35516                           ;i2c2_mux.c: 33:         lastI2C2MAckResponse = 0;
 35517  009C14  0E00               	movlw	0
 35518  009C16  0100               	movlb	0	; () banked
 35519  009C18  6FBC               	movwf	_lastI2C2MAckResponse& (0+255),b
 35520                           
 35521                           ;i2c2_mux.c: 34:     } else {
 35522  009C1A  D003               	goto	i2l17325
 35523  009C1C                     i2l17323:
 35524                           
 35525                           ; BSR set to: 1
 35526                           ;i2c2_mux.c: 35:         lastI2C2LAckResponse = 0;
 35527  009C1C  0E00               	movlw	0
 35528  009C1E  0102               	movlb	2	; () banked
 35529  009C20  6F53               	movwf	_lastI2C2LAckResponse& (0+255),b
 35530  009C22                     i2l17325:
 35531                           
 35532                           ;i2c2_mux.c: 37:     return I2C2_CallbackReturnStop(((void*)0));
 35533  009C22  0E00               	movlw	0
 35534  009C24  6E05               	movwf	i2I2C2_CallbackReturnStop@funPtr^0,c
 35535  009C26  0E00               	movlw	0
 35536  009C28  6E06               	movwf	(i2I2C2_CallbackReturnStop@funPtr+1)^0,c
 35537  009C2A  EC4F  F054         	call	i2_I2C2_CallbackReturnStop	;wreg free
 35538  009C2E  0012               	return		;funcret
 35539  009C30                     __end_ofi2_I2C2_NackCb:
 35540                           	opt callstack 0
 35541                           
 35542 ;; *************** function i2_I2C2_CallbackReturnReset *****************
 35543 ;; Defined at:
 35544 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 35545 ;; Parameters:    Size  Location     Type
 35546 ;;  funPtr          2    4[COMRAM] PTR void 
 35547 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35548 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35549 ;; Auto vars:     Size  Location     Type
 35550 ;;		None
 35551 ;; Return value:  Size  Location     Type
 35552 ;;                  1    wreg      enum E358
 35553 ;; Registers used:
 35554 ;;		wreg
 35555 ;; Tracked objects:
 35556 ;;		On entry : 3F/2
 35557 ;;		On exit  : 3F/2
 35558 ;;		Unchanged: 3F/0
 35559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35564 ;;Total ram usage:        2 bytes
 35565 ;; Hardware stack levels used:    1
 35566 ;; This function calls:
 35567 ;;		Nothing
 35568 ;; This function is called by:
 35569 ;;		_I2C2_DO_RX_EMPTY
 35570 ;;		i2_I2C2_DO_RX_EMPTY
 35571 ;;		_I2C2_DO_TX_EMPTY
 35572 ;;		_I2C2_DO_TX
 35573 ;;		_I2C2_DO_ADDRESS_NACK
 35574 ;;		_I2C2_DO_BUS_COLLISION
 35575 ;; This function uses a non-reentrant model
 35576 ;;
 35577                           
 35578                           	psect	text202
 35579  00A89A                     __ptext202:
 35580                           	opt callstack 0
 35581  00A89A                     i2_I2C2_CallbackReturnReset:
 35582                           	opt callstack 8
 35583                           
 35584                           ; BSR set to: 2
 35585                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 35586                           
 35587                           ;incstack = 0
 35588  00A89A  0E05               	movlw	5
 35589                           
 35590                           ; BSR set to: 2
 35591  00A89C  0012               	return		;funcret
 35592  00A89E                     __end_ofi2_I2C2_CallbackReturnReset:
 35593                           	opt callstack 0
 35594                           
 35595 ;; *************** function i2_I2C2_CallbackReturnStop *****************
 35596 ;; Defined at:
 35597 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 35598 ;; Parameters:    Size  Location     Type
 35599 ;;  funPtr          2    4[COMRAM] PTR void 
 35600 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35601 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35602 ;; Auto vars:     Size  Location     Type
 35603 ;;		None
 35604 ;; Return value:  Size  Location     Type
 35605 ;;                  1    wreg      enum E358
 35606 ;; Registers used:
 35607 ;;		wreg
 35608 ;; Tracked objects:
 35609 ;;		On entry : 3D/2
 35610 ;;		On exit  : 3D/0
 35611 ;;		Unchanged: 3D/0
 35612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35617 ;;Total ram usage:        2 bytes
 35618 ;; Hardware stack levels used:    1
 35619 ;; This function calls:
 35620 ;;		Nothing
 35621 ;; This function is called by:
 35622 ;;		i2_I2C2_SetCallback
 35623 ;;		i2_I2C2_NackCb
 35624 ;;		_I2C2_DO_RX_EMPTY
 35625 ;;		i2_I2C2_DO_RX_EMPTY
 35626 ;;		_I2C2_DO_TX_EMPTY
 35627 ;;		_I2C2_DO_TX
 35628 ;;		_I2C2_DO_ADDRESS_NACK
 35629 ;;		_I2C2_DO_BUS_COLLISION
 35630 ;; This function uses a non-reentrant model
 35631 ;;
 35632                           
 35633                           	psect	text203
 35634  00A89E                     __ptext203:
 35635                           	opt callstack 0
 35636  00A89E                     i2_I2C2_CallbackReturnStop:
 35637                           	opt callstack 7
 35638                           
 35639                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 35640                           
 35641                           ; BSR set to: 2
 35642                           ;incstack = 0
 35643  00A89E  0E01               	movlw	1
 35644  00A8A0  0012               	return		;funcret
 35645  00A8A2                     __end_ofi2_I2C2_CallbackReturnStop:
 35646                           	opt callstack 0
 35647                           
 35648 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 35649 ;; Defined at:
 35650 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35651 ;; Parameters:    Size  Location     Type
 35652 ;;  ptr             2    4[COMRAM] PTR void 
 35653 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35654 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35655 ;; Auto vars:     Size  Location     Type
 35656 ;;		None
 35657 ;; Return value:  Size  Location     Type
 35658 ;;                  1    wreg      enum E358
 35659 ;; Registers used:
 35660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35661 ;; Tracked objects:
 35662 ;;		On entry : 3F/2
 35663 ;;		On exit  : 0/0
 35664 ;;		Unchanged: 0/0
 35665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35670 ;;Total ram usage:        2 bytes
 35671 ;; Hardware stack levels used:    1
 35672 ;; Hardware stack levels required when called:    2
 35673 ;; This function calls:
 35674 ;;		i2_I2C2_SetBuffer
 35675 ;;		i2_I2C2_SetDataCompleteCallback
 35676 ;; This function is called by:
 35677 ;;		_I2C2_DO_RX_EMPTY
 35678 ;;		i2_I2C2_DO_RX_EMPTY
 35679 ;;		_I2C2_DO_TX_EMPTY
 35680 ;;		_I2C2_DO_TX
 35681 ;;		_I2C2_DO_ADDRESS_NACK
 35682 ;;		_I2C2_DO_BUS_COLLISION
 35683 ;; This function uses a non-reentrant model
 35684 ;;
 35685                           
 35686                           	psect	text204
 35687  00955E                     __ptext204:
 35688                           	opt callstack 0
 35689  00955E                     i2_rdBlkRegCompleteHandler:
 35690                           	opt callstack 6
 35691                           
 35692                           ; BSR set to: 2
 35693                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 35694                           
 35695                           ;incstack = 0
 35696  00955E  EE20 F002          	lfsr	2,2
 35697  009562  5005               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 35698  009564  26D9               	addwf	fsr2l,f,c
 35699  009566  5006               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 35700  009568  22DA               	addwfc	fsr2h,f,c
 35701  00956A  006F FF78  F001    	movff	postinc2,i2I2C2_SetBuffer@buffer
 35702  009570  006F FF74  F002    	movff	postdec2,i2I2C2_SetBuffer@buffer+1
 35703  009576  0060  F017  FFD9   	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 35704  00957C  0060  F01B  FFDA   	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 35705  009582  006F FF78  F003    	movff	postinc2,i2I2C2_SetBuffer@bufferSize
 35706  009588  006F FF74  F004    	movff	postdec2,i2I2C2_SetBuffer@bufferSize+1
 35707  00958E  EC01  F052         	call	i2_I2C2_SetBuffer	;wreg free
 35708                           
 35709                           ; BSR set to: 2
 35710                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35711  009592  0E00               	movlw	0
 35712  009594  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35713  009596  0E00               	movlw	0
 35714  009598  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35715  00959A  0E00               	movlw	0
 35716  00959C  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35717  00959E  0E00               	movlw	0
 35718  0095A0  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35719  0095A2  ECF1  F051         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35720                           
 35721                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 35722  0095A6  0E02               	movlw	2
 35723  0095A8  0012               	return		;funcret
 35724  0095AA                     __end_ofi2_rdBlkRegCompleteHandler:
 35725                           	opt callstack 0
 35726                           
 35727 ;; *************** function i2_wr1RegCompleteHandler *****************
 35728 ;; Defined at:
 35729 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35730 ;; Parameters:    Size  Location     Type
 35731 ;;  ptr             2    4[COMRAM] PTR void 
 35732 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35733 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35734 ;; Auto vars:     Size  Location     Type
 35735 ;;		None
 35736 ;; Return value:  Size  Location     Type
 35737 ;;                  1    wreg      enum E358
 35738 ;; Registers used:
 35739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35740 ;; Tracked objects:
 35741 ;;		On entry : 3F/2
 35742 ;;		On exit  : 0/0
 35743 ;;		Unchanged: 0/0
 35744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35749 ;;Total ram usage:        2 bytes
 35750 ;; Hardware stack levels used:    1
 35751 ;; Hardware stack levels required when called:    2
 35752 ;; This function calls:
 35753 ;;		i2_I2C2_SetBuffer
 35754 ;;		i2_I2C2_SetDataCompleteCallback
 35755 ;; This function is called by:
 35756 ;;		_I2C2_DO_RX_EMPTY
 35757 ;;		i2_I2C2_DO_RX_EMPTY
 35758 ;;		_I2C2_DO_TX_EMPTY
 35759 ;;		_I2C2_DO_TX
 35760 ;;		_I2C2_DO_ADDRESS_NACK
 35761 ;;		_I2C2_DO_BUS_COLLISION
 35762 ;; This function uses a non-reentrant model
 35763 ;;
 35764                           
 35765                           	psect	text205
 35766  009E28                     __ptext205:
 35767                           	opt callstack 0
 35768  009E28                     i2_wr1RegCompleteHandler:
 35769                           	opt callstack 6
 35770                           
 35771                           ; BSR set to: 2
 35772                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 35773                           
 35774                           ;incstack = 0
 35775  009E28  0060  F014  F001   	movff	i2wr1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35776  009E2E  0060  F018  F002   	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35777  009E34  0E00               	movlw	0
 35778  009E36  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35779  009E38  0E01               	movlw	1
 35780  009E3A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35781  009E3C  EC01  F052         	call	i2_I2C2_SetBuffer	;wreg free
 35782                           
 35783                           ; BSR set to: 2
 35784                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35785  009E40  0E00               	movlw	0
 35786  009E42  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35787  009E44  0E00               	movlw	0
 35788  009E46  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35789  009E48  0E00               	movlw	0
 35790  009E4A  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35791  009E4C  0E00               	movlw	0
 35792  009E4E  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35793  009E50  ECF1  F051         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35794                           
 35795                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 35796  009E54  0E04               	movlw	4
 35797  009E56  0012               	return		;funcret
 35798  009E58                     __end_ofi2_wr1RegCompleteHandler:
 35799                           	opt callstack 0
 35800                           
 35801 ;; *************** function i2_rd2RegCompleteHandler *****************
 35802 ;; Defined at:
 35803 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35804 ;; Parameters:    Size  Location     Type
 35805 ;;  ptr             2    4[COMRAM] PTR void 
 35806 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35807 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35808 ;; Auto vars:     Size  Location     Type
 35809 ;;		None
 35810 ;; Return value:  Size  Location     Type
 35811 ;;                  1    wreg      enum E358
 35812 ;; Registers used:
 35813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35814 ;; Tracked objects:
 35815 ;;		On entry : 3F/2
 35816 ;;		On exit  : 0/0
 35817 ;;		Unchanged: 0/0
 35818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35823 ;;Total ram usage:        2 bytes
 35824 ;; Hardware stack levels used:    1
 35825 ;; Hardware stack levels required when called:    2
 35826 ;; This function calls:
 35827 ;;		i2_I2C2_SetBuffer
 35828 ;;		i2_I2C2_SetDataCompleteCallback
 35829 ;; This function is called by:
 35830 ;;		_I2C2_DO_RX_EMPTY
 35831 ;;		i2_I2C2_DO_RX_EMPTY
 35832 ;;		_I2C2_DO_TX_EMPTY
 35833 ;;		_I2C2_DO_TX
 35834 ;;		_I2C2_DO_ADDRESS_NACK
 35835 ;;		_I2C2_DO_BUS_COLLISION
 35836 ;; This function uses a non-reentrant model
 35837 ;;
 35838                           
 35839                           	psect	text206
 35840  009E58                     __ptext206:
 35841                           	opt callstack 0
 35842  009E58                     i2_rd2RegCompleteHandler:
 35843                           	opt callstack 6
 35844                           
 35845                           ; BSR set to: 2
 35846                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 35847                           
 35848                           ;incstack = 0
 35849  009E58  0060  F014  F001   	movff	i2rd2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35850  009E5E  0060  F018  F002   	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35851  009E64  0E00               	movlw	0
 35852  009E66  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35853  009E68  0E02               	movlw	2
 35854  009E6A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35855  009E6C  EC01  F052         	call	i2_I2C2_SetBuffer	;wreg free
 35856                           
 35857                           ; BSR set to: 2
 35858                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35859  009E70  0E00               	movlw	0
 35860  009E72  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35861  009E74  0E00               	movlw	0
 35862  009E76  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35863  009E78  0E00               	movlw	0
 35864  009E7A  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35865  009E7C  0E00               	movlw	0
 35866  009E7E  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35867  009E80  ECF1  F051         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35868                           
 35869                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 35870  009E84  0E02               	movlw	2
 35871  009E86  0012               	return		;funcret
 35872  009E88                     __end_ofi2_rd2RegCompleteHandler:
 35873                           	opt callstack 0
 35874                           
 35875 ;; *************** function i2_rd1RegCompleteHandler *****************
 35876 ;; Defined at:
 35877 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35878 ;; Parameters:    Size  Location     Type
 35879 ;;  ptr             2    4[COMRAM] PTR void 
 35880 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35881 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35882 ;; Auto vars:     Size  Location     Type
 35883 ;;		None
 35884 ;; Return value:  Size  Location     Type
 35885 ;;                  1    wreg      enum E358
 35886 ;; Registers used:
 35887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35888 ;; Tracked objects:
 35889 ;;		On entry : 3F/2
 35890 ;;		On exit  : 0/0
 35891 ;;		Unchanged: 0/0
 35892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35897 ;;Total ram usage:        2 bytes
 35898 ;; Hardware stack levels used:    1
 35899 ;; Hardware stack levels required when called:    2
 35900 ;; This function calls:
 35901 ;;		i2_I2C2_SetBuffer
 35902 ;;		i2_I2C2_SetDataCompleteCallback
 35903 ;; This function is called by:
 35904 ;;		_I2C2_DO_RX_EMPTY
 35905 ;;		i2_I2C2_DO_RX_EMPTY
 35906 ;;		_I2C2_DO_TX_EMPTY
 35907 ;;		_I2C2_DO_TX
 35908 ;;		_I2C2_DO_ADDRESS_NACK
 35909 ;;		_I2C2_DO_BUS_COLLISION
 35910 ;; This function uses a non-reentrant model
 35911 ;;
 35912                           
 35913                           	psect	text207
 35914  009E88                     __ptext207:
 35915                           	opt callstack 0
 35916  009E88                     i2_rd1RegCompleteHandler:
 35917                           	opt callstack 6
 35918                           
 35919                           ; BSR set to: 2
 35920                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 35921                           
 35922                           ;incstack = 0
 35923  009E88  0060  F014  F001   	movff	i2rd1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35924  009E8E  0060  F018  F002   	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35925  009E94  0E00               	movlw	0
 35926  009E96  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35927  009E98  0E01               	movlw	1
 35928  009E9A  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35929  009E9C  EC01  F052         	call	i2_I2C2_SetBuffer	;wreg free
 35930                           
 35931                           ; BSR set to: 2
 35932                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35933  009EA0  0E00               	movlw	0
 35934  009EA2  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35935  009EA4  0E00               	movlw	0
 35936  009EA6  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35937  009EA8  0E00               	movlw	0
 35938  009EAA  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35939  009EAC  0E00               	movlw	0
 35940  009EAE  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35941  009EB0  ECF1  F051         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35942                           
 35943                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 35944  009EB4  0E02               	movlw	2
 35945  009EB6  0012               	return		;funcret
 35946  009EB8                     __end_ofi2_rd1RegCompleteHandler:
 35947                           	opt callstack 0
 35948                           
 35949 ;; *************** function i2_wr2RegCompleteHandler *****************
 35950 ;; Defined at:
 35951 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35952 ;; Parameters:    Size  Location     Type
 35953 ;;  ptr             2    4[COMRAM] PTR void 
 35954 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35955 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35956 ;; Auto vars:     Size  Location     Type
 35957 ;;		None
 35958 ;; Return value:  Size  Location     Type
 35959 ;;                  1    wreg      enum E358
 35960 ;; Registers used:
 35961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35962 ;; Tracked objects:
 35963 ;;		On entry : 3F/2
 35964 ;;		On exit  : 0/0
 35965 ;;		Unchanged: 0/0
 35966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35971 ;;Total ram usage:        2 bytes
 35972 ;; Hardware stack levels used:    1
 35973 ;; Hardware stack levels required when called:    2
 35974 ;; This function calls:
 35975 ;;		i2_I2C2_SetBuffer
 35976 ;;		i2_I2C2_SetDataCompleteCallback
 35977 ;; This function is called by:
 35978 ;;		_I2C2_DO_RX_EMPTY
 35979 ;;		i2_I2C2_DO_RX_EMPTY
 35980 ;;		_I2C2_DO_TX_EMPTY
 35981 ;;		_I2C2_DO_TX
 35982 ;;		_I2C2_DO_ADDRESS_NACK
 35983 ;;		_I2C2_DO_BUS_COLLISION
 35984 ;; This function uses a non-reentrant model
 35985 ;;
 35986                           
 35987                           	psect	text208
 35988  009EB8                     __ptext208:
 35989                           	opt callstack 0
 35990  009EB8                     i2_wr2RegCompleteHandler:
 35991                           	opt callstack 6
 35992                           
 35993                           ; BSR set to: 2
 35994                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 35995                           
 35996                           ;incstack = 0
 35997  009EB8  0060  F014  F001   	movff	i2wr2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35998  009EBE  0060  F018  F002   	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35999  009EC4  0E00               	movlw	0
 36000  009EC6  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 36001  009EC8  0E02               	movlw	2
 36002  009ECA  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 36003  009ECC  EC01  F052         	call	i2_I2C2_SetBuffer	;wreg free
 36004                           
 36005                           ; BSR set to: 2
 36006                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 36007  009ED0  0E00               	movlw	0
 36008  009ED2  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 36009  009ED4  0E00               	movlw	0
 36010  009ED6  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 36011  009ED8  0E00               	movlw	0
 36012  009EDA  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 36013  009EDC  0E00               	movlw	0
 36014  009EDE  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 36015  009EE0  ECF1  F051         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 36016                           
 36017                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 36018  009EE4  0E04               	movlw	4
 36019  009EE6  0012               	return		;funcret
 36020  009EE8                     __end_ofi2_wr2RegCompleteHandler:
 36021                           	opt callstack 0
 36022                           
 36023 ;; *************** function i2_I2C2_SetDataCompleteCallback *****************
 36024 ;; Defined at:
 36025 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 36026 ;; Parameters:    Size  Location     Type
 36027 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 36028 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 36029 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 36030 ;;  ptr             2    7[COMRAM] PTR void 
 36031 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 36032 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 36033 ;; Auto vars:     Size  Location     Type
 36034 ;;		None
 36035 ;; Return value:  Size  Location     Type
 36036 ;;                  1    wreg      void 
 36037 ;; Registers used:
 36038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36039 ;; Tracked objects:
 36040 ;;		On entry : 3F/2
 36041 ;;		On exit  : 0/0
 36042 ;;		Unchanged: 0/0
 36043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36048 ;;Total ram usage:        4 bytes
 36049 ;; Hardware stack levels used:    1
 36050 ;; Hardware stack levels required when called:    1
 36051 ;; This function calls:
 36052 ;;		i2_I2C2_SetCallback
 36053 ;; This function is called by:
 36054 ;;		i2_rd1RegCompleteHandler
 36055 ;;		i2_rd2RegCompleteHandler
 36056 ;;		i2_wr1RegCompleteHandler
 36057 ;;		i2_wr2RegCompleteHandler
 36058 ;;		i2_rdBlkRegCompleteHandler
 36059 ;; This function uses a non-reentrant model
 36060 ;;
 36061                           
 36062                           	psect	text209
 36063  00A3E2                     __ptext209:
 36064                           	opt callstack 0
 36065  00A3E2                     i2_I2C2_SetDataCompleteCallback:
 36066                           	opt callstack 6
 36067                           
 36068                           ; BSR set to: 2
 36069                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 36070                           
 36071                           ;incstack = 0
 36072  00A3E2  0060  F018  F001   	movff	i2I2C2_SetDataCompleteCallback@cb,i2I2C2_SetCallback@cb
 36073  00A3E8  0060  F01C  F002   	movff	i2I2C2_SetDataCompleteCallback@cb+1,i2I2C2_SetCallback@cb+1
 36074  00A3EE  0060  F020  F003   	movff	i2I2C2_SetDataCompleteCallback@ptr,i2I2C2_SetCallback@ptr
 36075  00A3F4  0060  F024  F004   	movff	i2I2C2_SetDataCompleteCallback@ptr+1,i2I2C2_SetCallback@ptr+1
 36076  00A3FA  0E00               	movlw	0
 36077  00A3FC  EC13  F046         	call	i2_I2C2_SetCallback
 36078  00A400  0012               	return		;funcret
 36079  00A402                     __end_ofi2_I2C2_SetDataCompleteCallback:
 36080                           	opt callstack 0
 36081                           
 36082 ;; *************** function i2_I2C2_SetCallback *****************
 36083 ;; Defined at:
 36084 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 36085 ;; Parameters:    Size  Location     Type
 36086 ;;  idx             1    wreg     enum E16468
 36087 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 36088 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 36089 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 36090 ;;  ptr             2    2[COMRAM] PTR void 
 36091 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 36092 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 36093 ;; Auto vars:     Size  Location     Type
 36094 ;;  idx             1    4[COMRAM] enum E16468
 36095 ;; Return value:  Size  Location     Type
 36096 ;;                  1    wreg      void 
 36097 ;; Registers used:
 36098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36099 ;; Tracked objects:
 36100 ;;		On entry : 3F/2
 36101 ;;		On exit  : 0/0
 36102 ;;		Unchanged: 0/0
 36103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36108 ;;Total ram usage:        5 bytes
 36109 ;; Hardware stack levels used:    1
 36110 ;; This function calls:
 36111 ;;		Nothing
 36112 ;; This function is called by:
 36113 ;;		i2_I2C2_SetDataCompleteCallback
 36114 ;; This function uses a non-reentrant model
 36115 ;;
 36116                           
 36117                           	psect	text210
 36118  008C26                     __ptext210:
 36119                           	opt callstack 0
 36120  008C26                     i2_I2C2_SetCallback:
 36121                           	opt callstack 6
 36122                           
 36123                           ;incstack = 0
 36124                           ;i2I2C2_SetCallback@idx stored from wreg
 36125  008C26  6E05               	movwf	i2I2C2_SetCallback@idx^0,c
 36126                           
 36127                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 36128  008C28  5001               	movf	i2I2C2_SetCallback@cb^0,w,c
 36129  008C2A  1002               	iorwf	(i2I2C2_SetCallback@cb+1)^0,w,c
 36130  008C2C  B4D8               	btfsc	status,2,c
 36131  008C2E  D01D               	goto	i2l11119
 36132                           
 36133                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 36134  008C30  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 36135  008C32  0D02               	mullw	2
 36136  008C34  0E00               	movlw	low _I2C2_Status
 36137  008C36  24F3               	addwf	243,w,c
 36138  008C38  6ED9               	movwf	fsr2l,c
 36139  008C3A  0E02               	movlw	high _I2C2_Status
 36140  008C3C  20F4               	addwfc	prodh,w,c
 36141  008C3E  6EDA               	movwf	fsr2h,c
 36142  008C40  0060  F007  FFDE   	movff	i2I2C2_SetCallback@cb,postinc2
 36143  008C46  0060  F00B  FFDD   	movff	i2I2C2_SetCallback@cb+1,postdec2
 36144                           
 36145                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 36146  008C4C  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 36147  008C4E  0D02               	mullw	2
 36148  008C50  0E0C               	movlw	low (_I2C2_Status+12)
 36149  008C52  24F3               	addwf	243,w,c
 36150  008C54  6ED9               	movwf	fsr2l,c
 36151  008C56  0E02               	movlw	high (_I2C2_Status+12)
 36152  008C58  20F4               	addwfc	prodh,w,c
 36153  008C5A  6EDA               	movwf	fsr2h,c
 36154  008C5C  0060  F00F  FFDE   	movff	i2I2C2_SetCallback@ptr,postinc2
 36155  008C62  0060  F013  FFDD   	movff	i2I2C2_SetCallback@ptr+1,postdec2
 36156                           
 36157                           ;mcc_generated_files/i2c2_master.c: 340:     }
 36158  008C68  0012               	return	
 36159  008C6A                     i2l11119:
 36160                           
 36161                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 36162  008C6A  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 36163  008C6C  0D02               	mullw	2
 36164  008C6E  0E00               	movlw	low _I2C2_Status
 36165  008C70  24F3               	addwf	243,w,c
 36166  008C72  6ED9               	movwf	fsr2l,c
 36167  008C74  0E02               	movlw	high _I2C2_Status
 36168  008C76  20F4               	addwfc	prodh,w,c
 36169  008C78  6EDA               	movwf	fsr2h,c
 36170  008C7A  0E9E               	movlw	low i2_I2C2_CallbackReturnStop
 36171  008C7C  6EDE               	movwf	postinc2,c
 36172  008C7E  0EA8               	movlw	high i2_I2C2_CallbackReturnStop
 36173  008C80  6EDD               	movwf	postdec2,c
 36174                           
 36175                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 36176  008C82  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 36177  008C84  0D02               	mullw	2
 36178  008C86  0E0C               	movlw	low (_I2C2_Status+12)
 36179  008C88  24F3               	addwf	243,w,c
 36180  008C8A  6ED9               	movwf	fsr2l,c
 36181  008C8C  0E02               	movlw	high (_I2C2_Status+12)
 36182  008C8E  20F4               	addwfc	prodh,w,c
 36183  008C90  6EDA               	movwf	fsr2h,c
 36184  008C92  0E00               	movlw	0
 36185  008C94  6EDE               	movwf	postinc2,c
 36186  008C96  0E00               	movlw	0
 36187  008C98  6EDD               	movwf	postdec2,c
 36188  008C9A  0012               	return		;funcret
 36189  008C9C                     __end_ofi2_I2C2_SetCallback:
 36190                           	opt callstack 0
 36191                           
 36192 ;; *************** function i2_I2C2_SetBuffer *****************
 36193 ;; Defined at:
 36194 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 36195 ;; Parameters:    Size  Location     Type
 36196 ;;  buffer          2    0[COMRAM] PTR void 
 36197 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 36198 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 36199 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 36200 ;;  bufferSize      2    2[COMRAM] unsigned int 
 36201 ;; Auto vars:     Size  Location     Type
 36202 ;;		None
 36203 ;; Return value:  Size  Location     Type
 36204 ;;                  1    wreg      void 
 36205 ;; Registers used:
 36206 ;;		wreg, status,2, status,0
 36207 ;; Tracked objects:
 36208 ;;		On entry : 3F/2
 36209 ;;		On exit  : 3F/2
 36210 ;;		Unchanged: 0/0
 36211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36216 ;;Total ram usage:        4 bytes
 36217 ;; Hardware stack levels used:    1
 36218 ;; This function calls:
 36219 ;;		Nothing
 36220 ;; This function is called by:
 36221 ;;		i2_rd1RegCompleteHandler
 36222 ;;		i2_rd2RegCompleteHandler
 36223 ;;		i2_wr1RegCompleteHandler
 36224 ;;		i2_wr2RegCompleteHandler
 36225 ;;		i2_rdBlkRegCompleteHandler
 36226 ;; This function uses a non-reentrant model
 36227 ;;
 36228                           
 36229                           	psect	text211
 36230  00A402                     __ptext211:
 36231                           	opt callstack 0
 36232  00A402                     i2_I2C2_SetBuffer:
 36233                           	opt callstack 7
 36234                           
 36235                           ; BSR set to: 2
 36236                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 36237                           
 36238                           ;incstack = 0
 36239  00A402  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 36240  00A404  0012               	return	
 36241                           
 36242                           ; BSR set to: 2
 36243                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 36244  00A406  0060  F004  F21D   	movff	i2I2C2_SetBuffer@buffer,_I2C2_Status+29
 36245  00A40C  0060  F008  F21E   	movff	i2I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 36246                           
 36247                           ; BSR set to: 2
 36248                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 36249  00A412  0060  F00C  F21F   	movff	i2I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 36250  00A418  0060  F010  F220   	movff	i2I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 36251                           
 36252                           ; BSR set to: 2
 36253                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 36254  00A41E  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 36255                           
 36256                           ; BSR set to: 2
 36257  00A420  0012               	return		;funcret
 36258  00A422                     __end_ofi2_I2C2_SetBuffer:
 36259                           	opt callstack 0
 36260                           
 36261 ;; *************** function _I2C2_ClearInterruptFlags *****************
 36262 ;; Defined at:
 36263 ;;		line 364 in file "mcc_generated_files/i2c2_master.c"
 36264 ;; Parameters:    Size  Location     Type
 36265 ;;		None
 36266 ;; Auto vars:     Size  Location     Type
 36267 ;;		None
 36268 ;; Return value:  Size  Location     Type
 36269 ;;                  1    wreg      void 
 36270 ;; Registers used:
 36271 ;;		wreg, status,2, cstack
 36272 ;; Tracked objects:
 36273 ;;		On entry : 3F/0
 36274 ;;		On exit  : 3F/3D
 36275 ;;		Unchanged: 0/0
 36276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36281 ;;Total ram usage:        0 bytes
 36282 ;; Hardware stack levels used:    1
 36283 ;; Hardware stack levels required when called:    1
 36284 ;; This function calls:
 36285 ;;		_I2C2_MasterClearCountFlag
 36286 ;;		_I2C2_MasterClearNackFlag
 36287 ;;		_I2C2_MasterClearStopFlag
 36288 ;;		_I2C2_MasterIsCountFlagSet
 36289 ;;		_I2C2_MasterIsNackFlagSet
 36290 ;;		_I2C2_MasterIsStopFlagSet
 36291 ;; This function is called by:
 36292 ;;		_I2C2_MasterFsm
 36293 ;; This function uses a non-reentrant model
 36294 ;;
 36295                           
 36296                           	psect	text212
 36297  009EE8                     __ptext212:
 36298                           	opt callstack 0
 36299  009EE8                     _I2C2_ClearInterruptFlags:
 36300                           	opt callstack 9
 36301                           
 36302                           ; BSR set to: 0
 36303                           ;mcc_generated_files/i2c2_master.c: 366:     if(I2C2_MasterIsCountFlagSet())
 36304                           
 36305                           ; BSR set to: 2
 36306                           ;incstack = 0
 36307  009EE8  EC9A  F053         	call	_I2C2_MasterIsCountFlagSet	;wreg free
 36308  009EEC  0900               	iorlw	0
 36309  009EEE  B4D8               	btfsc	status,2,c
 36310  009EF0  D003               	goto	i2l12027
 36311                           
 36312                           ; BSR set to: 61
 36313                           ;mcc_generated_files/i2c2_master.c: 367:     {;mcc_generated_files/i2c2_master.c: 368:  
      +                                 I2C2_MasterClearCountFlag();
 36314  009EF2  EC55  F054         	call	_I2C2_MasterClearCountFlag	;wreg free
 36315                           
 36316                           ;mcc_generated_files/i2c2_master.c: 369:     }
 36317  009EF6  0012               	return	
 36318  009EF8                     i2l12027:
 36319                           
 36320                           ; BSR set to: 61
 36321  009EF8  ECCB  F053         	call	_I2C2_MasterIsStopFlagSet	;wreg free
 36322  009EFC  0900               	iorlw	0
 36323  009EFE  B4D8               	btfsc	status,2,c
 36324  009F00  D003               	goto	i2l12031
 36325                           
 36326                           ; BSR set to: 61
 36327                           ;mcc_generated_files/i2c2_master.c: 371:     {;mcc_generated_files/i2c2_master.c: 372:  
      +                                 I2C2_MasterClearStopFlag();
 36328  009F02  EC51  F054         	call	_I2C2_MasterClearStopFlag	;wreg free
 36329                           
 36330                           ;mcc_generated_files/i2c2_master.c: 373:     }
 36331  009F06  0012               	return	
 36332  009F08                     i2l12031:
 36333                           
 36334                           ; BSR set to: 61
 36335  009F08  ECD1  F053         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 36336  009F0C  0900               	iorlw	0
 36337  009F0E  B4D8               	btfsc	status,2,c
 36338  009F10  0012               	return	
 36339                           
 36340                           ; BSR set to: 61
 36341                           ;mcc_generated_files/i2c2_master.c: 375:     {;mcc_generated_files/i2c2_master.c: 376:  
      +                                 I2C2_MasterClearNackFlag();
 36342  009F12  EC53  F054         	call	_I2C2_MasterClearNackFlag	;wreg free
 36343                           
 36344                           ; BSR set to: 61
 36345  009F16  0012               	return		;funcret
 36346  009F18                     __end_of_I2C2_ClearInterruptFlags:
 36347                           	opt callstack 0
 36348                           
 36349 ;; *************** function _I2C2_MasterIsStopFlagSet *****************
 36350 ;; Defined at:
 36351 ;;		line 746 in file "mcc_generated_files/i2c2_master.c"
 36352 ;; Parameters:    Size  Location     Type
 36353 ;;		None
 36354 ;; Auto vars:     Size  Location     Type
 36355 ;;		None
 36356 ;; Return value:  Size  Location     Type
 36357 ;;                  1    wreg      _Bool 
 36358 ;; Registers used:
 36359 ;;		wreg
 36360 ;; Tracked objects:
 36361 ;;		On entry : 3F/3D
 36362 ;;		On exit  : 3F/3D
 36363 ;;		Unchanged: 0/0
 36364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36369 ;;Total ram usage:        0 bytes
 36370 ;; Hardware stack levels used:    1
 36371 ;; This function calls:
 36372 ;;		Nothing
 36373 ;; This function is called by:
 36374 ;;		_I2C2_ClearInterruptFlags
 36375 ;; This function uses a non-reentrant model
 36376 ;;
 36377                           
 36378                           	psect	text213
 36379  00A796                     __ptext213:
 36380                           	opt callstack 0
 36381  00A796                     _I2C2_MasterIsStopFlagSet:
 36382                           	opt callstack 9
 36383                           
 36384                           ; BSR set to: 61
 36385                           ;mcc_generated_files/i2c2_master.c: 748:     return I2C2PIRbits.PCIF;
 36386                           
 36387                           ; BSR set to: 61
 36388                           ;incstack = 0
 36389  00A796  A563               	btfss	99,2,b	;volatile
 36390  00A798  D002               	goto	i2u1026_40
 36391  00A79A  0E01               	movlw	1
 36392  00A79C  0012               	return	
 36393  00A79E                     i2u1026_40:
 36394  00A79E  0E00               	movlw	0
 36395                           
 36396                           ; BSR set to: 61
 36397  00A7A0  0012               	return		;funcret
 36398  00A7A2                     __end_of_I2C2_MasterIsStopFlagSet:
 36399                           	opt callstack 0
 36400                           
 36401 ;; *************** function _I2C2_MasterIsNackFlagSet *****************
 36402 ;; Defined at:
 36403 ;;		line 756 in file "mcc_generated_files/i2c2_master.c"
 36404 ;; Parameters:    Size  Location     Type
 36405 ;;		None
 36406 ;; Auto vars:     Size  Location     Type
 36407 ;;		None
 36408 ;; Return value:  Size  Location     Type
 36409 ;;                  1    wreg      _Bool 
 36410 ;; Registers used:
 36411 ;;		wreg
 36412 ;; Tracked objects:
 36413 ;;		On entry : 3F/3D
 36414 ;;		On exit  : 3F/3D
 36415 ;;		Unchanged: 0/0
 36416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36421 ;;Total ram usage:        0 bytes
 36422 ;; Hardware stack levels used:    1
 36423 ;; This function calls:
 36424 ;;		Nothing
 36425 ;; This function is called by:
 36426 ;;		_I2C2_ClearInterruptFlags
 36427 ;; This function uses a non-reentrant model
 36428 ;;
 36429                           
 36430                           	psect	text214
 36431  00A7A2                     __ptext214:
 36432                           	opt callstack 0
 36433  00A7A2                     _I2C2_MasterIsNackFlagSet:
 36434                           	opt callstack 9
 36435                           
 36436                           ; BSR set to: 61
 36437                           ;mcc_generated_files/i2c2_master.c: 758:     return I2C2ERRbits.NACKIF;
 36438                           
 36439                           ; BSR set to: 61
 36440                           ;incstack = 0
 36441  00A7A2  A960               	btfss	96,4,b	;volatile
 36442  00A7A4  D002               	goto	i2u1027_40
 36443  00A7A6  0E01               	movlw	1
 36444  00A7A8  0012               	return	
 36445  00A7AA                     i2u1027_40:
 36446  00A7AA  0E00               	movlw	0
 36447                           
 36448                           ; BSR set to: 61
 36449  00A7AC  0012               	return		;funcret
 36450  00A7AE                     __end_of_I2C2_MasterIsNackFlagSet:
 36451                           	opt callstack 0
 36452                           
 36453 ;; *************** function _I2C2_MasterIsCountFlagSet *****************
 36454 ;; Defined at:
 36455 ;;		line 751 in file "mcc_generated_files/i2c2_master.c"
 36456 ;; Parameters:    Size  Location     Type
 36457 ;;		None
 36458 ;; Auto vars:     Size  Location     Type
 36459 ;;		None
 36460 ;; Return value:  Size  Location     Type
 36461 ;;                  1    wreg      _Bool 
 36462 ;; Registers used:
 36463 ;;		wreg
 36464 ;; Tracked objects:
 36465 ;;		On entry : 3F/0
 36466 ;;		On exit  : 3F/3D
 36467 ;;		Unchanged: 0/0
 36468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36473 ;;Total ram usage:        0 bytes
 36474 ;; Hardware stack levels used:    1
 36475 ;; This function calls:
 36476 ;;		Nothing
 36477 ;; This function is called by:
 36478 ;;		_I2C2_ClearInterruptFlags
 36479 ;; This function uses a non-reentrant model
 36480 ;;
 36481                           
 36482                           	psect	text215
 36483  00A734                     __ptext215:
 36484                           	opt callstack 0
 36485  00A734                     _I2C2_MasterIsCountFlagSet:
 36486                           	opt callstack 9
 36487                           
 36488                           ; BSR set to: 0
 36489                           ;mcc_generated_files/i2c2_master.c: 753:     return I2C2PIRbits.CNTIF;
 36490                           
 36491                           ; BSR set to: 61
 36492                           ;incstack = 0
 36493  00A734  013D               	movlb	61	; () banked
 36494  00A736  AF63               	btfss	99,7,b	;volatile
 36495  00A738  D002               	goto	i2u1025_40
 36496  00A73A  0E01               	movlw	1
 36497  00A73C  0012               	return	
 36498  00A73E                     i2u1025_40:
 36499  00A73E  0E00               	movlw	0
 36500                           
 36501                           ; BSR set to: 61
 36502  00A740  0012               	return		;funcret
 36503  00A742                     __end_of_I2C2_MasterIsCountFlagSet:
 36504                           	opt callstack 0
 36505                           
 36506 ;; *************** function _I2C2_MasterClearStopFlag *****************
 36507 ;; Defined at:
 36508 ;;		line 761 in file "mcc_generated_files/i2c2_master.c"
 36509 ;; Parameters:    Size  Location     Type
 36510 ;;		None
 36511 ;; Auto vars:     Size  Location     Type
 36512 ;;		None
 36513 ;; Return value:  Size  Location     Type
 36514 ;;                  1    wreg      void 
 36515 ;; Registers used:
 36516 ;;		None
 36517 ;; Tracked objects:
 36518 ;;		On entry : 3F/3D
 36519 ;;		On exit  : 3F/3D
 36520 ;;		Unchanged: 0/0
 36521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36526 ;;Total ram usage:        0 bytes
 36527 ;; Hardware stack levels used:    1
 36528 ;; This function calls:
 36529 ;;		Nothing
 36530 ;; This function is called by:
 36531 ;;		_I2C2_ClearInterruptFlags
 36532 ;; This function uses a non-reentrant model
 36533 ;;
 36534                           
 36535                           	psect	text216
 36536  00A8A2                     __ptext216:
 36537                           	opt callstack 0
 36538  00A8A2                     _I2C2_MasterClearStopFlag:
 36539                           	opt callstack 9
 36540                           
 36541                           ; BSR set to: 61
 36542                           ;mcc_generated_files/i2c2_master.c: 763:     I2C2PIRbits.PCIF = 0;
 36543                           
 36544                           ; BSR set to: 61
 36545                           ;incstack = 0
 36546  00A8A2  9563               	bcf	99,2,b	;volatile
 36547                           
 36548                           ; BSR set to: 61
 36549  00A8A4  0012               	return		;funcret
 36550  00A8A6                     __end_of_I2C2_MasterClearStopFlag:
 36551                           	opt callstack 0
 36552                           
 36553 ;; *************** function _I2C2_MasterClearNackFlag *****************
 36554 ;; Defined at:
 36555 ;;		line 771 in file "mcc_generated_files/i2c2_master.c"
 36556 ;; Parameters:    Size  Location     Type
 36557 ;;		None
 36558 ;; Auto vars:     Size  Location     Type
 36559 ;;		None
 36560 ;; Return value:  Size  Location     Type
 36561 ;;                  1    wreg      void 
 36562 ;; Registers used:
 36563 ;;		None
 36564 ;; Tracked objects:
 36565 ;;		On entry : 3F/3D
 36566 ;;		On exit  : 3F/3D
 36567 ;;		Unchanged: 0/0
 36568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36573 ;;Total ram usage:        0 bytes
 36574 ;; Hardware stack levels used:    1
 36575 ;; This function calls:
 36576 ;;		Nothing
 36577 ;; This function is called by:
 36578 ;;		_I2C2_ClearInterruptFlags
 36579 ;; This function uses a non-reentrant model
 36580 ;;
 36581                           
 36582                           	psect	text217
 36583  00A8A6                     __ptext217:
 36584                           	opt callstack 0
 36585  00A8A6                     _I2C2_MasterClearNackFlag:
 36586                           	opt callstack 9
 36587                           
 36588                           ; BSR set to: 61
 36589                           ;mcc_generated_files/i2c2_master.c: 773:     I2C2ERRbits.NACKIF = 0;
 36590                           
 36591                           ; BSR set to: 61
 36592                           ;incstack = 0
 36593  00A8A6  9960               	bcf	96,4,b	;volatile
 36594                           
 36595                           ; BSR set to: 61
 36596  00A8A8  0012               	return		;funcret
 36597  00A8AA                     __end_of_I2C2_MasterClearNackFlag:
 36598                           	opt callstack 0
 36599                           
 36600 ;; *************** function _I2C2_MasterClearCountFlag *****************
 36601 ;; Defined at:
 36602 ;;		line 766 in file "mcc_generated_files/i2c2_master.c"
 36603 ;; Parameters:    Size  Location     Type
 36604 ;;		None
 36605 ;; Auto vars:     Size  Location     Type
 36606 ;;		None
 36607 ;; Return value:  Size  Location     Type
 36608 ;;                  1    wreg      void 
 36609 ;; Registers used:
 36610 ;;		None
 36611 ;; Tracked objects:
 36612 ;;		On entry : 3F/3D
 36613 ;;		On exit  : 3F/3D
 36614 ;;		Unchanged: 0/0
 36615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36620 ;;Total ram usage:        0 bytes
 36621 ;; Hardware stack levels used:    1
 36622 ;; This function calls:
 36623 ;;		Nothing
 36624 ;; This function is called by:
 36625 ;;		_I2C2_ClearInterruptFlags
 36626 ;; This function uses a non-reentrant model
 36627 ;;
 36628                           
 36629                           	psect	text218
 36630  00A8AA                     __ptext218:
 36631                           	opt callstack 0
 36632  00A8AA                     _I2C2_MasterClearCountFlag:
 36633                           	opt callstack 9
 36634                           
 36635                           ; BSR set to: 61
 36636                           ;mcc_generated_files/i2c2_master.c: 768:     I2C2PIRbits.CNTIF = 0;
 36637                           
 36638                           ; BSR set to: 61
 36639                           ;incstack = 0
 36640  00A8AA  9F63               	bcf	99,7,b	;volatile
 36641                           
 36642                           ; BSR set to: 61
 36643  00A8AC  0012               	return		;funcret
 36644  00A8AE                     __end_of_I2C2_MasterClearCountFlag:
 36645                           	opt callstack 0
 36646                           
 36647 ;; *************** function _ADCC_ThresholdISR *****************
 36648 ;; Defined at:
 36649 ;;		line 307 in file "mcc_generated_files/adcc.c"
 36650 ;; Parameters:    Size  Location     Type
 36651 ;;		None
 36652 ;; Auto vars:     Size  Location     Type
 36653 ;;		None
 36654 ;; Return value:  Size  Location     Type
 36655 ;;                  1    wreg      void 
 36656 ;; Registers used:
 36657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36658 ;; Tracked objects:
 36659 ;;		On entry : 3F/39
 36660 ;;		On exit  : 0/0
 36661 ;;		Unchanged: 0/0
 36662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36667 ;;Total ram usage:        0 bytes
 36668 ;; Hardware stack levels used:    1
 36669 ;; Hardware stack levels required when called:   11
 36670 ;; This function calls:
 36671 ;;		Absolute function
 36672 ;;		_ADCC_DefaultInterruptHandler
 36673 ;;		_adcCaptureIsr
 36674 ;; This function is called by:
 36675 ;;		_INTERRUPT_InterruptManager
 36676 ;; This function uses a non-reentrant model
 36677 ;;
 36678                           
 36679                           	psect	text219
 36680  00A340                     __ptext219:
 36681                           	opt callstack 0
 36682  00A340                     _ADCC_ThresholdISR:
 36683                           	opt callstack 1
 36684                           
 36685                           ; BSR set to: 57
 36686                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 36687                           
 36688                           ; BSR set to: 61
 36689                           ;incstack = 0
 36690  00A340  97A1               	bcf	161,3,b	;volatile
 36691                           
 36692                           ; BSR set to: 57
 36693                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 36694  00A342  0102               	movlb	2	; () banked
 36695  00A344  51FE               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36696  00A346  11FF               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36697  00A348  B4D8               	btfsc	status,2,c
 36698  00A34A  0012               	return	
 36699                           
 36700                           ; BSR set to: 2
 36701                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 36702  00A34C  D801               	call	i2u2022_48
 36703  00A34E  0012               	return	
 36704  00A350                     i2u2022_48:
 36705  00A350  0005               	push	
 36706  00A352  6EFA               	movwf	pclath,c
 36707  00A354  51FE               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36708  00A356  6EFD               	movwf	tosl,c
 36709  00A358  51FF               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36710  00A35A  6EFE               	movwf	tosh,c
 36711  00A35C  6AFF               	clrf	tosu,c
 36712  00A35E  50FA               	movf	pclath,w,c
 36713  00A360  0012               	return		;indir
 36714  00A362                     __end_of_ADCC_ThresholdISR:
 36715                           	opt callstack 0
 36716                           
 36717 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36718 ;; Defined at:
 36719 ;;		line 319 in file "mcc_generated_files/adcc.c"
 36720 ;; Parameters:    Size  Location     Type
 36721 ;;		None
 36722 ;; Auto vars:     Size  Location     Type
 36723 ;;		None
 36724 ;; Return value:  Size  Location     Type
 36725 ;;                  1    wreg      void 
 36726 ;; Registers used:
 36727 ;;		None
 36728 ;; Tracked objects:
 36729 ;;		On entry : 3F/2
 36730 ;;		On exit  : 3F/2
 36731 ;;		Unchanged: 3F/0
 36732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36737 ;;Total ram usage:        0 bytes
 36738 ;; Hardware stack levels used:    1
 36739 ;; This function calls:
 36740 ;;		Nothing
 36741 ;; This function is called by:
 36742 ;;		_ADCC_Initialize
 36743 ;;		_ADCC_ThresholdISR
 36744 ;; This function uses a non-reentrant model
 36745 ;;
 36746                           
 36747                           	psect	text220
 36748  00A8B6                     __ptext220:
 36749                           	opt callstack 0
 36750  00A8B6                     _ADCC_DefaultInterruptHandler:
 36751                           	opt callstack 11
 36752                           
 36753                           ; BSR set to: 2
 36754                           
 36755                           ;incstack = 0
 36756  00A8B6  0012               	return		;funcret
 36757  00A8B8                     __end_of_ADCC_DefaultInterruptHandler:
 36758                           	opt callstack 0
 36759                           
 36760 ;; *************** function _adcCaptureIsr *****************
 36761 ;; Defined at:
 36762 ;;		line 61 in file "aCapture.c"
 36763 ;; Parameters:    Size  Location     Type
 36764 ;;		None
 36765 ;; Auto vars:     Size  Location     Type
 36766 ;;  adcData         4   31[BANK0 ] unsigned long 
 36767 ;;  adcSel          1   35[BANK0 ] enum E16104
 36768 ;; Return value:  Size  Location     Type
 36769 ;;                  1    wreg      void 
 36770 ;; Registers used:
 36771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36772 ;; Tracked objects:
 36773 ;;		On entry : 3F/2
 36774 ;;		On exit  : 3D/0
 36775 ;;		Unchanged: 0/0
 36776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36778 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36779 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36780 ;;      Totals:         8       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36781 ;;Total ram usage:       13 bytes
 36782 ;; Hardware stack levels used:    1
 36783 ;; Hardware stack levels required when called:   10
 36784 ;; This function calls:
 36785 ;;		_ADCC_GetFilterValue
 36786 ;;		i2_ADCC_StartConversion
 36787 ;;		i2___lmul
 36788 ;;		i2_adcGetCh
 36789 ;;		i2_printf
 36790 ;; This function is called by:
 36791 ;;		_aCaptureInit
 36792 ;;		_ADCC_ThresholdISR
 36793 ;; This function uses a non-reentrant model
 36794 ;;
 36795                           
 36796                           	psect	text221
 36797  005B60                     __ptext221:
 36798                           	opt callstack 0
 36799  005B60                     _adcCaptureIsr:
 36800                           	opt callstack 1
 36801                           
 36802                           ; BSR set to: 2
 36803                           ;aCapture.c: 64:     uint32_t adcData;;aCapture.c: 65:     aSrcTyp adcSel;;aCapture.c: 6
      +                          7:     adcData = ADCC_GetFilterValue();
 36804                           
 36805                           ; BSR set to: 2
 36806                           ;incstack = 0
 36807  005B60  EC8E  F052         	call	_ADCC_GetFilterValue	;wreg free
 36808  005B64  0060  F004  F07F   	movff	?_ADCC_GetFilterValue,adcCaptureIsr@adcData
 36809  005B6A  0060  F008  F080   	movff	?_ADCC_GetFilterValue+1,adcCaptureIsr@adcData+1
 36810  005B70  0100               	movlb	0	; () banked
 36811  005B72  6B81               	clrf	(adcCaptureIsr@adcData+2)& (0+255),b
 36812  005B74  6B82               	clrf	(adcCaptureIsr@adcData+3)& (0+255),b
 36813                           
 36814                           ; BSR set to: 0
 36815                           ;aCapture.c: 69:     adcSel=curASrc;
 36816  005B76  0060  F344  F083   	movff	_curASrc,adcCaptureIsr@adcSel
 36817                           
 36818                           ; BSR set to: 0
 36819                           ;aCapture.c: 72:     curASrc++;
 36820  005B7C  2BD1               	incf	_curASrc& (0+255),f,b
 36821                           
 36822                           ; BSR set to: 0
 36823                           ;aCapture.c: 73:     if (curASrc==3){
 36824  005B7E  0E03               	movlw	3
 36825  005B80  19D1               	xorwf	_curASrc& (0+255),w,b
 36826  005B82  A4D8               	btfss	status,2,c
 36827  005B84  D002               	goto	i2l18893
 36828                           
 36829                           ; BSR set to: 0
 36830                           ;aCapture.c: 74:         curASrc=0;
 36831  005B86  0E00               	movlw	0
 36832  005B88  6FD1               	movwf	_curASrc& (0+255),b
 36833  005B8A                     i2l18893:
 36834                           
 36835                           ; BSR set to: 0
 36836                           ;aCapture.c: 76:     if (curASrc <= VolPSensor ){
 36837  005B8A  0E02               	movlw	2
 36838  005B8C  61D1               	cpfslt	_curASrc& (0+255),b
 36839  005B8E  D004               	goto	i2l1947
 36840                           
 36841                           ; BSR set to: 0
 36842                           ;aCapture.c: 77:         ADCON0bits.ADON = 0;
 36843  005B90  013E               	movlb	62	; () banked
 36844  005B92  9FF8               	bcf	248,7,b	;volatile
 36845                           
 36846                           ; BSR set to: 62
 36847                           ;aCapture.c: 79:         ADREF = 0x00;
 36848  005B94  0E00               	movlw	0
 36849  005B96  D003               	goto	L60
 36850  005B98                     i2l1947:
 36851                           
 36852                           ; BSR set to: 0
 36853                           ;aCapture.c: 81:         ADCON0bits.ADON = 0;
 36854  005B98  013E               	movlb	62	; () banked
 36855  005B9A  9FF8               	bcf	248,7,b	;volatile
 36856                           
 36857                           ; BSR set to: 62
 36858                           ;aCapture.c: 83:         ADREF = 0x03;
 36859  005B9C  0E03               	movlw	3
 36860  005B9E                     L60:
 36861  005B9E  6FFD               	movwf	253,b	;volatile
 36862                           
 36863                           ; BSR set to: 62
 36864                           ;aCapture.c: 85:     ADCC_StartConversion(adcGetCh(curASrc));
 36865  005BA0  0100               	movlb	0	; () banked
 36866  005BA2  51D1               	movf	_curASrc& (0+255),w,b
 36867  005BA4  EC34  F04A         	call	i2_adcGetCh
 36868  005BA8  EC29  F053         	call	i2_ADCC_StartConversion
 36869                           
 36870                           ; BSR set to: 62
 36871                           ;aCapture.c: 88:     if (adcSel<3){
 36872  005BAC  0E03               	movlw	3
 36873  005BAE  0100               	movlb	0	; () banked
 36874  005BB0  6183               	cpfslt	adcCaptureIsr@adcSel& (0+255),b
 36875  005BB2  D164               	goto	i2l1949
 36876                           
 36877                           ; BSR set to: 0
 36878                           ;aCapture.c: 89:         resultTbl[adcSel]=adcData;
 36879  005BB4  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36880  005BB6  0D04               	mullw	4
 36881  005BB8  0E7B               	movlw	low _resultTbl
 36882  005BBA  24F3               	addwf	243,w,c
 36883  005BBC  6ED9               	movwf	fsr2l,c
 36884  005BBE  0E02               	movlw	high _resultTbl
 36885  005BC0  20F4               	addwfc	prodh,w,c
 36886  005BC2  6EDA               	movwf	fsr2h,c
 36887  005BC4  0060  F1FF  FFDE   	movff	adcCaptureIsr@adcData,postinc2
 36888  005BCA  0060  F203  FFDE   	movff	adcCaptureIsr@adcData+1,postinc2
 36889  005BD0  0060  F207  FFDE   	movff	adcCaptureIsr@adcData+2,postinc2
 36890  005BD6  0060  F20B  FFDE   	movff	adcCaptureIsr@adcData+3,postinc2
 36891                           
 36892                           ; BSR set to: 0
 36893                           ;aCapture.c: 91:         resultTblVal[adcSel]++;
 36894  005BDC  0E24               	movlw	low _resultTblVal
 36895  005BDE  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36896  005BE0  6ED9               	movwf	fsr2l,c
 36897  005BE2  6ADA               	clrf	fsr2h,c
 36898  005BE4  0E02               	movlw	high _resultTblVal
 36899  005BE6  22DA               	addwfc	fsr2h,f,c
 36900  005BE8  2ADF               	incf	indf2,f,c
 36901                           
 36902                           ; BSR set to: 0
 36903                           ;aCapture.c: 92:         if (resultTblVal[adcSel]==0){
 36904  005BEA  0E24               	movlw	low _resultTblVal
 36905  005BEC  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36906  005BEE  6ED9               	movwf	fsr2l,c
 36907  005BF0  6ADA               	clrf	fsr2h,c
 36908  005BF2  0E02               	movlw	high _resultTblVal
 36909  005BF4  22DA               	addwfc	fsr2h,f,c
 36910  005BF6  50DF               	movf	indf2,w,c
 36911  005BF8  A4D8               	btfss	status,2,c
 36912  005BFA  D008               	goto	i2l18913
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;aCapture.c: 93:             resultTblVal[adcSel]=1;
 36916  005BFC  0E24               	movlw	low _resultTblVal
 36917  005BFE  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36918  005C00  6ED9               	movwf	fsr2l,c
 36919  005C02  6ADA               	clrf	fsr2h,c
 36920  005C04  0E02               	movlw	high _resultTblVal
 36921  005C06  22DA               	addwfc	fsr2h,f,c
 36922  005C08  0E01               	movlw	1
 36923  005C0A  6EDF               	movwf	indf2,c
 36924  005C0C                     i2l18913:
 36925                           
 36926                           ; BSR set to: 0
 36927                           ;aCapture.c: 96:         if (adcSel == MainPSensor) {
 36928  005C0C  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36929  005C0E  A4D8               	btfss	status,2,c
 36930  005C10  0012               	return	
 36931                           
 36932                           ; BSR set to: 0
 36933                           ;aCapture.c: 99:             resultTbl[Flt0PSensor]=(3*resultTbl[Flt0PSensor]+(adcData<<
      +                          2))>>2;
 36934  005C12  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36935  005C18  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36936  005C1E  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36937  005C24  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36938  005C2A  0E02               	movlw	2
 36939  005C2C                     i2u1964_45:
 36940  005C2C  90D8               	bcf	status,0,c
 36941  005C2E  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36942  005C30  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36943  005C32  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36944  005C34  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36945  005C36  2EE8               	decfsz	wreg,f,c
 36946  005C38  D7F9               	goto	i2u1964_45
 36947  005C3A  0060  FA1C  F001   	movff	_resultTbl+12,i2___lmul@multiplier
 36948  005C40  0060  FA20  F002   	movff	_resultTbl+13,i2___lmul@multiplier+1
 36949  005C46  0060  FA24  F003   	movff	_resultTbl+14,i2___lmul@multiplier+2
 36950  005C4C  0060  FA28  F004   	movff	_resultTbl+15,i2___lmul@multiplier+3
 36951  005C52  0E03               	movlw	3
 36952  005C54  6E05               	movwf	i2___lmul@multiplicand^0,c
 36953  005C56  0E00               	movlw	0
 36954  005C58  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36955  005C5A  0E00               	movlw	0
 36956  005C5C  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36957  005C5E  0E00               	movlw	0
 36958  005C60  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36959  005C62  EC4D  F048         	call	i2___lmul	;wreg free
 36960  005C66  5057               	movf	??_adcCaptureIsr^0,w,c
 36961  005C68  2401               	addwf	?i2___lmul^0,w,c
 36962  005C6A  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36963  005C6C  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36964  005C6E  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36965  005C70  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36966  005C72  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36967  005C74  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36968  005C76  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36969  005C78  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36970  005C7A  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36971  005C7C  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36972  005C7E  0E03               	movlw	3
 36973  005C80  D005               	goto	i2u1965_40
 36974  005C82                     i2u1965_45:
 36975  005C82  90D8               	bcf	status,0,c
 36976  005C84  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36977  005C86  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36978  005C88  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36979  005C8A  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36980  005C8C                     i2u1965_40:
 36981  005C8C  2EE8               	decfsz	wreg,f,c
 36982  005C8E  D7F9               	goto	i2u1965_45
 36983  005C90  0060  F16C  F287   	movff	??_adcCaptureIsr+4,_resultTbl+12
 36984  005C96  0060  F170  F288   	movff	??_adcCaptureIsr+5,_resultTbl+13
 36985  005C9C  0060  F174  F289   	movff	??_adcCaptureIsr+6,_resultTbl+14
 36986  005CA2  0060  F178  F28A   	movff	??_adcCaptureIsr+7,_resultTbl+15
 36987                           
 36988                           ;aCapture.c: 101:             resultTbl[Flt1PSensor]=(15*resultTbl[Flt1PSensor]+(adcData
      +                          <<4))>>4;
 36989  005CA8  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36990  005CAE  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36991  005CB4  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36992  005CBA  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36993  005CC0  0E04               	movlw	4
 36994  005CC2                     i2u1966_45:
 36995  005CC2  90D8               	bcf	status,0,c
 36996  005CC4  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36997  005CC6  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36998  005CC8  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36999  005CCA  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 37000  005CCC  2EE8               	decfsz	wreg,f,c
 37001  005CCE  D7F9               	goto	i2u1966_45
 37002  005CD0  0060  FA2C  F001   	movff	_resultTbl+16,i2___lmul@multiplier
 37003  005CD6  0060  FA30  F002   	movff	_resultTbl+17,i2___lmul@multiplier+1
 37004  005CDC  0060  FA34  F003   	movff	_resultTbl+18,i2___lmul@multiplier+2
 37005  005CE2  0060  FA38  F004   	movff	_resultTbl+19,i2___lmul@multiplier+3
 37006  005CE8  0E0F               	movlw	15
 37007  005CEA  6E05               	movwf	i2___lmul@multiplicand^0,c
 37008  005CEC  0E00               	movlw	0
 37009  005CEE  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37010  005CF0  0E00               	movlw	0
 37011  005CF2  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37012  005CF4  0E00               	movlw	0
 37013  005CF6  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37014  005CF8  EC4D  F048         	call	i2___lmul	;wreg free
 37015  005CFC  5057               	movf	??_adcCaptureIsr^0,w,c
 37016  005CFE  2401               	addwf	?i2___lmul^0,w,c
 37017  005D00  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 37018  005D02  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 37019  005D04  2002               	addwfc	(?i2___lmul+1)^0,w,c
 37020  005D06  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 37021  005D08  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 37022  005D0A  2003               	addwfc	(?i2___lmul+2)^0,w,c
 37023  005D0C  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 37024  005D0E  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 37025  005D10  2004               	addwfc	(?i2___lmul+3)^0,w,c
 37026  005D12  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 37027  005D14  0E05               	movlw	5
 37028  005D16  D005               	goto	i2u1967_40
 37029  005D18                     i2u1967_45:
 37030  005D18  90D8               	bcf	status,0,c
 37031  005D1A  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 37032  005D1C  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 37033  005D1E  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 37034  005D20  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 37035  005D22                     i2u1967_40:
 37036  005D22  2EE8               	decfsz	wreg,f,c
 37037  005D24  D7F9               	goto	i2u1967_45
 37038  005D26  0060  F16C  F28B   	movff	??_adcCaptureIsr+4,_resultTbl+16
 37039  005D2C  0060  F170  F28C   	movff	??_adcCaptureIsr+5,_resultTbl+17
 37040  005D32  0060  F174  F28D   	movff	??_adcCaptureIsr+6,_resultTbl+18
 37041  005D38  0060  F178  F28E   	movff	??_adcCaptureIsr+7,_resultTbl+19
 37042                           
 37043                           ;aCapture.c: 103:             resultTbl[Flt2PSensor]=(63*resultTbl[Flt2PSensor]+(adcData
      +                          <<6))>>6;
 37044  005D3E  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 37045  005D44  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 37046  005D4A  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 37047  005D50  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 37048  005D56  0E06               	movlw	6
 37049  005D58                     i2u1968_45:
 37050  005D58  90D8               	bcf	status,0,c
 37051  005D5A  3657               	rlcf	??_adcCaptureIsr^0,f,c
 37052  005D5C  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 37053  005D5E  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 37054  005D60  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 37055  005D62  2EE8               	decfsz	wreg,f,c
 37056  005D64  D7F9               	goto	i2u1968_45
 37057  005D66  0060  FA3C  F001   	movff	_resultTbl+20,i2___lmul@multiplier
 37058  005D6C  0060  FA40  F002   	movff	_resultTbl+21,i2___lmul@multiplier+1
 37059  005D72  0060  FA44  F003   	movff	_resultTbl+22,i2___lmul@multiplier+2
 37060  005D78  0060  FA48  F004   	movff	_resultTbl+23,i2___lmul@multiplier+3
 37061  005D7E  0E3F               	movlw	63
 37062  005D80  6E05               	movwf	i2___lmul@multiplicand^0,c
 37063  005D82  0E00               	movlw	0
 37064  005D84  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37065  005D86  0E00               	movlw	0
 37066  005D88  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37067  005D8A  0E00               	movlw	0
 37068  005D8C  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37069  005D8E  EC4D  F048         	call	i2___lmul	;wreg free
 37070  005D92  5057               	movf	??_adcCaptureIsr^0,w,c
 37071  005D94  2401               	addwf	?i2___lmul^0,w,c
 37072  005D96  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 37073  005D98  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 37074  005D9A  2002               	addwfc	(?i2___lmul+1)^0,w,c
 37075  005D9C  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 37076  005D9E  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 37077  005DA0  2003               	addwfc	(?i2___lmul+2)^0,w,c
 37078  005DA2  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 37079  005DA4  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 37080  005DA6  2004               	addwfc	(?i2___lmul+3)^0,w,c
 37081  005DA8  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 37082  005DAA  0E07               	movlw	7
 37083  005DAC  D005               	goto	i2u1969_40
 37084  005DAE                     i2u1969_45:
 37085  005DAE  90D8               	bcf	status,0,c
 37086  005DB0  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 37087  005DB2  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 37088  005DB4  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 37089  005DB6  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 37090  005DB8                     i2u1969_40:
 37091  005DB8  2EE8               	decfsz	wreg,f,c
 37092  005DBA  D7F9               	goto	i2u1969_45
 37093  005DBC  0060  F16C  F28F   	movff	??_adcCaptureIsr+4,_resultTbl+20
 37094  005DC2  0060  F170  F290   	movff	??_adcCaptureIsr+5,_resultTbl+21
 37095  005DC8  0060  F174  F291   	movff	??_adcCaptureIsr+6,_resultTbl+22
 37096  005DCE  0060  F178  F292   	movff	??_adcCaptureIsr+7,_resultTbl+23
 37097                           
 37098                           ;aCapture.c: 105:             resultTbl[Flt3PSensor]=(511*resultTbl[Flt3PSensor]+(adcDat
      +                          a<<9))>>9;
 37099  005DD4  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 37100  005DDA  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 37101  005DE0  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 37102  005DE6  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 37103  005DEC  0E09               	movlw	9
 37104  005DEE                     i2u1970_45:
 37105  005DEE  90D8               	bcf	status,0,c
 37106  005DF0  3657               	rlcf	??_adcCaptureIsr^0,f,c
 37107  005DF2  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 37108  005DF4  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 37109  005DF6  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 37110  005DF8  2EE8               	decfsz	wreg,f,c
 37111  005DFA  D7F9               	goto	i2u1970_45
 37112  005DFC  0060  FA4C  F001   	movff	_resultTbl+24,i2___lmul@multiplier
 37113  005E02  0060  FA50  F002   	movff	_resultTbl+25,i2___lmul@multiplier+1
 37114  005E08  0060  FA54  F003   	movff	_resultTbl+26,i2___lmul@multiplier+2
 37115  005E0E  0060  FA58  F004   	movff	_resultTbl+27,i2___lmul@multiplier+3
 37116  005E14  0EFF               	movlw	255
 37117  005E16  6E05               	movwf	i2___lmul@multiplicand^0,c
 37118  005E18  0E01               	movlw	1
 37119  005E1A  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37120  005E1C  0E00               	movlw	0
 37121  005E1E  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37122  005E20  0E00               	movlw	0
 37123  005E22  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37124  005E24  EC4D  F048         	call	i2___lmul	;wreg free
 37125  005E28  5057               	movf	??_adcCaptureIsr^0,w,c
 37126  005E2A  2401               	addwf	?i2___lmul^0,w,c
 37127  005E2C  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 37128  005E2E  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 37129  005E30  2002               	addwfc	(?i2___lmul+1)^0,w,c
 37130  005E32  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 37131  005E34  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 37132  005E36  2003               	addwfc	(?i2___lmul+2)^0,w,c
 37133  005E38  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 37134  005E3A  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 37135  005E3C  2004               	addwfc	(?i2___lmul+3)^0,w,c
 37136  005E3E  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 37137  005E40  0E0A               	movlw	10
 37138  005E42  D005               	goto	i2u1971_40
 37139  005E44                     i2u1971_45:
 37140  005E44  90D8               	bcf	status,0,c
 37141  005E46  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 37142  005E48  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 37143  005E4A  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 37144  005E4C  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 37145  005E4E                     i2u1971_40:
 37146  005E4E  2EE8               	decfsz	wreg,f,c
 37147  005E50  D7F9               	goto	i2u1971_45
 37148  005E52  0060  F16C  F293   	movff	??_adcCaptureIsr+4,_resultTbl+24
 37149  005E58  0060  F170  F294   	movff	??_adcCaptureIsr+5,_resultTbl+25
 37150  005E5E  0060  F174  F295   	movff	??_adcCaptureIsr+6,_resultTbl+26
 37151  005E64  0060  F178  F296   	movff	??_adcCaptureIsr+7,_resultTbl+27
 37152                           
 37153                           ; BSR set to: 0
 37154                           ;aCapture.c: 107:             resultTblVal[Flt0PSensor]=resultTblVal[MainPSensor];
 37155  005E6A  C224  F227         	movff	_resultTblVal,_resultTblVal+3
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;aCapture.c: 108:             resultTblVal[Flt1PSensor]=resultTblVal[MainPSensor];
 37159  005E6E  C224  F228         	movff	_resultTblVal,_resultTblVal+4
 37160                           
 37161                           ; BSR set to: 0
 37162                           ;aCapture.c: 109:             resultTblVal[Flt2PSensor]=resultTblVal[MainPSensor];
 37163  005E72  C224  F229         	movff	_resultTblVal,_resultTblVal+5
 37164                           
 37165                           ; BSR set to: 0
 37166                           ;aCapture.c: 110:             resultTblVal[Flt3PSensor]=resultTblVal[MainPSensor];
 37167  005E76  C224  F22A         	movff	_resultTblVal,_resultTblVal+6
 37168  005E7A  0012               	return	
 37169  005E7C                     i2l1949:
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;aCapture.c: 114:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",101);
 37173  005E7C  94BA               	bcf	186,2,c	;volatile
 37174  005E7E  96BC               	bcf	188,3,c	;volatile
 37175  005E80  96BA               	bcf	186,3,c	;volatile
 37176                           
 37177                           ; BSR set to: 0
 37178  005E82  0EBE               	movlw	low STR_28
 37179  005E84  6F7B               	movwf	i2printf@fmt& (0+255),b
 37180  005E86  0EFF               	movlw	high STR_28
 37181  005E88  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 37182  005E8A  0E00               	movlw	0
 37183  005E8C  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 37184  005E8E  0E65               	movlw	101
 37185  005E90  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 37186  005E92  ECE1  F050         	call	i2_printf	;wreg free
 37187  005E96  0012               	return		;funcret
 37188  005E98                     __end_of_adcCaptureIsr:
 37189                           	opt callstack 0
 37190                           
 37191 ;; *************** function i2_adcGetCh *****************
 37192 ;; Defined at:
 37193 ;;		line 43 in file "aCapture.c"
 37194 ;; Parameters:    Size  Location     Type
 37195 ;;  sel             1    wreg     enum E16104
 37196 ;; Auto vars:     Size  Location     Type
 37197 ;;  sel             1   85[COMRAM] enum E16104
 37198 ;; Return value:  Size  Location     Type
 37199 ;;                  1    wreg      enum E16053
 37200 ;; Registers used:
 37201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37202 ;; Tracked objects:
 37203 ;;		On entry : 3F/0
 37204 ;;		On exit  : 0/0
 37205 ;;		Unchanged: 0/0
 37206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37211 ;;Total ram usage:        3 bytes
 37212 ;; Hardware stack levels used:    1
 37213 ;; Hardware stack levels required when called:    9
 37214 ;; This function calls:
 37215 ;;		i2_printf
 37216 ;; This function is called by:
 37217 ;;		_adcCaptureIsr
 37218 ;; This function uses a non-reentrant model
 37219 ;;
 37220                           
 37221                           	psect	text222
 37222  009468                     __ptext222:
 37223                           	opt callstack 0
 37224  009468                     i2_adcGetCh:
 37225                           	opt callstack 1
 37226                           
 37227                           ;incstack = 0
 37228                           ;i2adcGetCh@sel stored from wreg
 37229  009468  6E56               	movwf	i2adcGetCh@sel^0,c
 37230                           
 37231                           ;aCapture.c: 44:     switch (sel){
 37232  00946A  D016               	goto	i2l18371
 37233  00946C                     i2l18345:
 37234                           
 37235                           ;aCapture.c: 46:             return channel_ANE1;
 37236  00946C  0E21               	movlw	33
 37237  00946E  0012               	return	
 37238  009470                     i2l18351:
 37239                           
 37240                           ;aCapture.c: 49:             return channel_ANE2;
 37241  009470  0E22               	movlw	34
 37242  009472  0012               	return	
 37243  009474                     i2l18357:
 37244                           
 37245                           ;aCapture.c: 52:             return channel_ANE0;
 37246  009474  0E20               	movlw	32
 37247  009476  0012               	return	
 37248  009478                     i2l1943:
 37249                           
 37250                           ;aCapture.c: 56:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 37251  009478  94BA               	bcf	186,2,c	;volatile
 37252  00947A  96BC               	bcf	188,3,c	;volatile
 37253  00947C  96BA               	bcf	186,3,c	;volatile
 37254  00947E  0EBE               	movlw	low STR_28
 37255  009480  0100               	movlb	0	; () banked
 37256  009482  6F7B               	movwf	i2printf@fmt& (0+255),b
 37257  009484  0EFF               	movlw	high STR_28
 37258  009486  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 37259  009488  0E00               	movlw	0
 37260  00948A  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 37261  00948C  0E64               	movlw	100
 37262  00948E  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 37263  009490  ECE1  F050         	call	i2_printf	;wreg free
 37264                           
 37265                           ; BSR set to: 2
 37266                           ;aCapture.c: 57:            return -1;
 37267  009494  0EFF               	movlw	255
 37268  009496  0012               	return	
 37269  009498                     i2l18371:
 37270  009498  5056               	movf	i2adcGetCh@sel^0,w,c
 37271  00949A  6E54               	movwf	??i2_adcGetCh^0,c
 37272  00949C  6A55               	clrf	(??i2_adcGetCh+1)^0,c
 37273                           
 37274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37275                           ; Switch size 1, requested type "simple"
 37276                           ; Number of cases is 1, Range of values is 0 to 0
 37277                           ; switch strategies available:
 37278                           ; Name         Instructions Cycles
 37279                           ; simple_byte            4     3 (average)
 37280                           ;	Chosen strategy is simple_byte
 37281  00949E  5055               	movf	(??i2_adcGetCh+1)^0,w,c
 37282  0094A0  0A00               	xorlw	0	; case 0
 37283  0094A2  A4D8               	btfss	status,2,c
 37284  0094A4  D7E9               	goto	i2l1943
 37285                           
 37286                           ; Switch size 1, requested type "simple"
 37287                           ; Number of cases is 3, Range of values is 0 to 2
 37288                           ; switch strategies available:
 37289                           ; Name         Instructions Cycles
 37290                           ; simple_byte           10     6 (average)
 37291                           ;	Chosen strategy is simple_byte
 37292  0094A6  5054               	movf	??i2_adcGetCh^0,w,c
 37293  0094A8  0A00               	xorlw	0	; case 0
 37294  0094AA  B4D8               	btfsc	status,2,c
 37295  0094AC  D7DF               	goto	i2l18345
 37296  0094AE  0A01               	xorlw	1	; case 1
 37297  0094B0  B4D8               	btfsc	status,2,c
 37298  0094B2  D7DE               	goto	i2l18351
 37299  0094B4  0A03               	xorlw	3	; case 2
 37300  0094B6  B4D8               	btfsc	status,2,c
 37301  0094B8  D7DD               	goto	i2l18357
 37302  0094BA  D7DE               	goto	i2l1943
 37303  0094BC                     __end_ofi2_adcGetCh:
 37304                           	opt callstack 0
 37305                           
 37306 ;; *************** function i2_printf *****************
 37307 ;; Defined at:
 37308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 37309 ;; Parameters:    Size  Location     Type
 37310 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 37311 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 37312 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 37313 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 37314 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 37315 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 37316 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 37317 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(42), 
 37318 ;;		 -> STR_26(20), STR_25(36), STR_24(47), STR_23(20), 
 37319 ;;		 -> STR_22(34), STR_21(5), STR_19(16), STR_18(14), 
 37320 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 37321 ;;		 -> STR_13(47), STR_12(12), STR_11(12), STR_10(55), 
 37322 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 37323 ;; Auto vars:     Size  Location     Type
 37324 ;;  printf          2   81[COMRAM] PTR void [1]
 37325 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 37326 ;;  printf          2    0        int 
 37327 ;; Return value:  Size  Location     Type
 37328 ;;                  2   27[BANK0 ] int 
 37329 ;; Registers used:
 37330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37331 ;; Tracked objects:
 37332 ;;		On entry : 3F/0
 37333 ;;		On exit  : 3F/2
 37334 ;;		Unchanged: 0/0
 37335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37337 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37339 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37340 ;;Total ram usage:        8 bytes
 37341 ;; Hardware stack levels used:    1
 37342 ;; Hardware stack levels required when called:    8
 37343 ;; This function calls:
 37344 ;;		i2_vfprintf
 37345 ;; This function is called by:
 37346 ;;		_adcCaptureIsr
 37347 ;;		i2_adcGetCh
 37348 ;;		i2_aCaptGetResult
 37349 ;;		i2_I2C2_NackCb
 37350 ;; This function uses a non-reentrant model
 37351 ;;
 37352                           
 37353                           	psect	text223
 37354  00A1C2                     __ptext223:
 37355                           	opt callstack 0
 37356  00A1C2                     i2_printf:
 37357                           	opt callstack 1
 37358                           
 37359                           ; BSR set to: 0
 37360                           
 37361                           ;incstack = 0
 37362  00A1C2  0E7D               	movlw	low (?i2_printf+2)
 37363  00A1C4  6E52               	movwf	i2printf@ap^0,c
 37364  00A1C6  6A53               	clrf	(i2printf@ap+1)^0,c
 37365                           
 37366                           ; BSR set to: 0
 37367  00A1C8  0E00               	movlw	0
 37368  00A1CA  6F75               	movwf	i2vfprintf@fp& (0+255),b
 37369  00A1CC  0E00               	movlw	0
 37370  00A1CE  6F76               	movwf	(i2vfprintf@fp+1)& (0+255),b
 37371  00A1D0  0060  F1EC  F077   	movff	i2printf@fmt,i2vfprintf@fmt
 37372  00A1D6  0060  F1F0  F078   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 37373  00A1DC  0E52               	movlw	low i2printf@ap
 37374  00A1DE  6F79               	movwf	i2vfprintf@ap& (0+255),b
 37375  00A1E0  6B7A               	clrf	(i2vfprintf@ap+1)& (0+255),b
 37376  00A1E2  ECF4  F046         	call	i2_vfprintf	;wreg free
 37377                           
 37378                           ; BSR set to: 2
 37379  00A1E6  0012               	return		;funcret
 37380  00A1E8                     __end_ofi2_printf:
 37381                           	opt callstack 0
 37382                           
 37383 ;; *************** function i2_vfprintf *****************
 37384 ;; Defined at:
 37385 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 37386 ;; Parameters:    Size  Location     Type
 37387 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
 37388 ;;		 -> sprintf@f(6), NULL(0), 
 37389 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 37390 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 37391 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 37392 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 37393 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 37394 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 37395 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 37396 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 37397 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 37398 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 37399 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 37400 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 37401 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 37402 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 37403 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 37404 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 37405 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 37406 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 37407 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 37408 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 37409 ;;		 -> STR_1(27), 
 37410 ;;  ap              2   25[BANK0 ] PTR PTR void 
 37411 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 37412 ;; Auto vars:     Size  Location     Type
 37413 ;;  vfprintf        2   77[COMRAM] PTR unsigned char 
 37414 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 37415 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 37416 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 37417 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 37418 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 37419 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 37420 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 37421 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 37422 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 37423 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 37424 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 37425 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 37426 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 37427 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 37428 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 37429 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 37430 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 37431 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 37432 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 37433 ;;		 -> STR_1(27), 
 37434 ;; Return value:  Size  Location     Type
 37435 ;;                  2   21[BANK0 ] int 
 37436 ;; Registers used:
 37437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37438 ;; Tracked objects:
 37439 ;;		On entry : 3F/0
 37440 ;;		On exit  : 3F/2
 37441 ;;		Unchanged: 0/0
 37442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37446 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37447 ;;Total ram usage:        8 bytes
 37448 ;; Hardware stack levels used:    1
 37449 ;; Hardware stack levels required when called:    7
 37450 ;; This function calls:
 37451 ;;		i2_vfpfcnvrt
 37452 ;; This function is called by:
 37453 ;;		i2_printf
 37454 ;; This function uses a non-reentrant model
 37455 ;;
 37456                           
 37457                           	psect	text224
 37458  008DE8                     __ptext224:
 37459                           	opt callstack 0
 37460  008DE8                     i2_vfprintf:
 37461                           	opt callstack 1
 37462                           
 37463                           ; BSR set to: 0
 37464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 37465                           
 37466                           ; BSR set to: 2
 37467                           ;incstack = 0
 37468  008DE8  0060  F1DC  F04E   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 37469  008DEE  0060  F1E0  F04F   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 37470                           
 37471                           ; BSR set to: 0
 37472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 37473  008DF4  0E00               	movlw	0
 37474  008DF6  0102               	movlb	2	; () banked
 37475  008DF8  6F33               	movwf	(_nout+1)& (0+255),b
 37476  008DFA  0E00               	movlw	0
 37477  008DFC  6F32               	movwf	_nout& (0+255),b
 37478                           
 37479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 37480  008DFE  D015               	goto	i2l17181
 37481  008E00                     i2l17179:
 37482                           
 37483                           ; BSR set to: 2
 37484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 37485  008E00  0060  F1D4  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 37486  008E06  0060  F1D8  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 37487  008E0C  0E4E               	movlw	low i2vfprintf@cfmt
 37488  008E0E  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 37489  008E10  0060  F1E4  F048   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 37490  008E16  0060  F1E8  F049   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 37491  008E1C  EC35  F026         	call	i2_vfpfcnvrt	;wreg free
 37492  008E20  5045               	movf	?i2_vfpfcnvrt^0,w,c
 37493  008E22  0102               	movlb	2	; () banked
 37494  008E24  2732               	addwf	_nout& (0+255),f,b
 37495  008E26  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 37496  008E28  2333               	addwfc	(_nout+1)& (0+255),f,b
 37497  008E2A                     i2l17181:
 37498                           
 37499                           ; BSR set to: 2
 37500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 37501  008E2A  0060  F13B  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 37502  008E30  0060  F13F  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 37503  008E36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37504  008E36  6AF8               	clrf	tblptru,c
 37505  008E38                     	endif
 37506  008E38                     	if	0	;tblptru may be non-zero
 37507  008E38                     	endif
 37508  008E38  0008               	tblrd		*
 37509  008E3A  50F5               	movf	tablat,w,c
 37510  008E3C  0900               	iorlw	0
 37511  008E3E  A4D8               	btfss	status,2,c
 37512  008E40  D7DF               	goto	i2l17179
 37513                           
 37514                           ; BSR set to: 2
 37515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 37516  008E42  0060  F8C8  F075   	movff	_nout,?i2_vfprintf
 37517  008E48  0060  F8CC  F076   	movff	_nout+1,?i2_vfprintf+1
 37518                           
 37519                           ; BSR set to: 2
 37520  008E4E  0012               	return		;funcret
 37521  008E50                     __end_ofi2_vfprintf:
 37522                           	opt callstack 0
 37523                           
 37524 ;; *************** function i2_vfpfcnvrt *****************
 37525 ;; Defined at:
 37526 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 37527 ;; Parameters:    Size  Location     Type
 37528 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 37529 ;;		 -> sprintf@f(6), NULL(0), 
 37530 ;;  fmt             1   70[COMRAM] PTR PTR unsigned char 
 37531 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 37532 ;;  ap              2   71[COMRAM] PTR PTR void 
 37533 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 37534 ;; Auto vars:     Size  Location     Type
 37535 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 37536 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 37537 ;;  vfpfcnvrt       4    0        long long 
 37538 ;;  vfpfcnvrt       3    0        PTR void 
 37539 ;;  vfpfcnvrt       3    0        unsigned char [3]
 37540 ;;  vfpfcnvrt       3    0        PTR unsigned char 
 37541 ;;  vfpfcnvrt       2   17[BANK0 ] int 
 37542 ;;  vfpfcnvrt       2    0        int 
 37543 ;;  vfpfcnvrt       1   16[BANK0 ] unsigned char 
 37544 ;; Return value:  Size  Location     Type
 37545 ;;                  2   68[COMRAM] int 
 37546 ;; Registers used:
 37547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37548 ;; Tracked objects:
 37549 ;;		On entry : 3D/2
 37550 ;;		On exit  : 0/0
 37551 ;;		Unchanged: 0/0
 37552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37553 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37554 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37555 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37556 ;;      Totals:         9      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37557 ;;Total ram usage:       30 bytes
 37558 ;; Hardware stack levels used:    1
 37559 ;; Hardware stack levels required when called:    6
 37560 ;; This function calls:
 37561 ;;		i2_atoi
 37562 ;;		i2_dtoa
 37563 ;;		i2_fputc
 37564 ;;		i2_isdigit
 37565 ;;		i2_xtoa
 37566 ;; This function is called by:
 37567 ;;		i2_vfprintf
 37568 ;; This function uses a non-reentrant model
 37569 ;;
 37570                           
 37571                           	psect	text225
 37572  004C6A                     __ptext225:
 37573                           	opt callstack 0
 37574  004C6A                     i2_vfpfcnvrt:
 37575                           	opt callstack 1
 37576                           
 37577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 37578                           
 37579                           ; BSR set to: 2
 37580                           ;incstack = 0
 37581  004C6A  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37582  004C6C  6ED9               	movwf	fsr2l,c
 37583  004C6E  6ADA               	clrf	fsr2h,c
 37584  004C70  006F FF7B FFF6     	movff	postinc2,tblptrl
 37585  004C76  006F FF77 FFF7     	movff	postdec2,tblptrh
 37586  004C7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37587  004C7C  6AF8               	clrf	tblptru,c
 37588  004C7E                     	endif
 37589  004C7E                     	if	0	;tblptru may be non-zero
 37590  004C7E                     	endif
 37591  004C7E  0008               	tblrd		*
 37592  004C80  50F5               	movf	tablat,w,c
 37593  004C82  0A25               	xorlw	37
 37594  004C84  A4D8               	btfss	status,2,c
 37595  004C86  D1EF               	goto	i2l17141
 37596                           
 37597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 37598  004C88  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37599  004C8A  6ED9               	movwf	fsr2l,c
 37600  004C8C  6ADA               	clrf	fsr2h,c
 37601  004C8E  2ADE               	incf	postinc2,f,c
 37602  004C90  0E00               	movlw	0
 37603  004C92  22DD               	addwfc	postdec2,f,c
 37604                           
 37605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 37606  004C94  0E00               	movlw	0
 37607  004C96  0100               	movlb	0	; () banked
 37608  004C98  6FB3               	movwf	(_width+1)& (0+255),b
 37609  004C9A  0E00               	movlw	0
 37610  004C9C  6FB2               	movwf	_width& (0+255),b
 37611  004C9E  C0B2  F0B6         	movff	_width,_flags
 37612  004CA2  C0B3  F0B7         	movff	_width+1,_flags+1
 37613                           
 37614                           ; BSR set to: 0
 37615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 37616  004CA6  69B4               	setf	_prec& (0+255),b
 37617  004CA8  69B5               	setf	(_prec+1)& (0+255),b
 37618                           
 37619                           ; BSR set to: 0
 37620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 37621  004CAA  0E00               	movlw	0
 37622  004CAC  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37623  004CAE  0E00               	movlw	0
 37624  004CB0  D013               	goto	L61
 37625  004CB2                     i2l17053:
 37626                           
 37627                           ; BSR set to: 0
 37628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 37629  004CB2  81B6               	bsf	_flags& (0+255),0,b
 37630  004CB4                     i2l17055:
 37631                           
 37632                           ; BSR set to: 0
 37633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 37634  004CB4  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37635  004CB6  6ED9               	movwf	fsr2l,c
 37636  004CB8  6ADA               	clrf	fsr2h,c
 37637  004CBA  2ADE               	incf	postinc2,f,c
 37638  004CBC  0E00               	movlw	0
 37639  004CBE  22DD               	addwfc	postdec2,f,c
 37640                           
 37641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 37642  004CC0  D030               	goto	i2l17079
 37643  004CC2                     i2l17057:
 37644                           
 37645                           ; BSR set to: 0
 37646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 37647  004CC2  83B6               	bsf	_flags& (0+255),1,b
 37648  004CC4  D7F7               	goto	i2l17055
 37649  004CC6                     i2l17061:
 37650                           
 37651                           ; BSR set to: 0
 37652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 37653  004CC6  85B6               	bsf	_flags& (0+255),2,b
 37654  004CC8  D7F5               	goto	i2l17055
 37655  004CCA                     i2l17065:
 37656                           
 37657                           ; BSR set to: 0
 37658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 37659  004CCA  87B6               	bsf	_flags& (0+255),3,b
 37660  004CCC  D7F3               	goto	i2l17055
 37661  004CCE                     i2l17069:
 37662                           
 37663                           ; BSR set to: 0
 37664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 37665  004CCE  89B6               	bsf	_flags& (0+255),4,b
 37666  004CD0  D7F1               	goto	i2l17055
 37667  004CD2                     i2l17073:
 37668                           
 37669                           ; BSR set to: 0
 37670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 37671  004CD2  0E00               	movlw	0
 37672  004CD4  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37673  004CD6  0E01               	movlw	1
 37674  004CD8                     L61:
 37675  004CD8  6F71               	movwf	i2vfpfcnvrt@done& (0+255),b
 37676                           
 37677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 37678  004CDA  D023               	goto	i2l17079
 37679  004CDC                     i2l17077:
 37680                           
 37681                           ; BSR set to: 0
 37682  004CDC  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37683  004CDE  6ED9               	movwf	fsr2l,c
 37684  004CE0  6ADA               	clrf	fsr2h,c
 37685  004CE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 37686  004CE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 37687  004CEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37688  004CEE  6AF8               	clrf	tblptru,c
 37689  004CF0                     	endif
 37690  004CF0                     	if	0	;tblptru may be non-zero
 37691  004CF0                     	endif
 37692  004CF0  0008               	tblrd		*
 37693  004CF2  50F5               	movf	tablat,w,c
 37694  004CF4  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37695  004CF6  6A4B               	clrf	(??i2_vfpfcnvrt+1)^0,c
 37696                           
 37697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37698                           ; Switch size 1, requested type "simple"
 37699                           ; Number of cases is 1, Range of values is 0 to 0
 37700                           ; switch strategies available:
 37701                           ; Name         Instructions Cycles
 37702                           ; simple_byte            4     3 (average)
 37703                           ;	Chosen strategy is simple_byte
 37704  004CF8  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37705  004CFA  0A00               	xorlw	0	; case 0
 37706  004CFC  A4D8               	btfss	status,2,c
 37707  004CFE  D7E9               	goto	i2l17073
 37708                           
 37709                           ; BSR set to: 0
 37710                           ; Switch size 1, requested type "simple"
 37711                           ; Number of cases is 5, Range of values is 32 to 48
 37712                           ; switch strategies available:
 37713                           ; Name         Instructions Cycles
 37714                           ; simple_byte           16     9 (average)
 37715                           ;	Chosen strategy is simple_byte
 37716  004D00  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37717  004D02  0A20               	xorlw	32	; case 32
 37718  004D04  B4D8               	btfsc	status,2,c
 37719  004D06  D7E1               	goto	i2l17065
 37720  004D08  0A03               	xorlw	3	; case 35
 37721  004D0A  B4D8               	btfsc	status,2,c
 37722  004D0C  D7E0               	goto	i2l17069
 37723  004D0E  0A08               	xorlw	8	; case 43
 37724  004D10  B4D8               	btfsc	status,2,c
 37725  004D12  D7D9               	goto	i2l17061
 37726  004D14  0A06               	xorlw	6	; case 45
 37727  004D16  B4D8               	btfsc	status,2,c
 37728  004D18  D7CC               	goto	i2l17053
 37729  004D1A  0A1D               	xorlw	29	; case 48
 37730  004D1C  B4D8               	btfsc	status,2,c
 37731  004D1E  D7D1               	goto	i2l17057
 37732  004D20  D7D8               	goto	i2l17073
 37733  004D22                     i2l17079:
 37734                           
 37735                           ; BSR set to: 0
 37736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 37737  004D22  5171               	movf	i2vfpfcnvrt@done& (0+255),w,b
 37738  004D24  1172               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 37739  004D26  B4D8               	btfsc	status,2,c
 37740  004D28  D7D9               	goto	i2l17077
 37741                           
 37742                           ; BSR set to: 0
 37743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 37744  004D2A  B1B6               	btfsc	_flags& (0+255),0,b
 37745                           
 37746                           ; BSR set to: 0
 37747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 37748  004D2C  93B6               	bcf	_flags& (0+255),1,b
 37749                           
 37750                           ; BSR set to: 0
 37751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 37752  004D2E  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37753  004D30  6ED9               	movwf	fsr2l,c
 37754  004D32  6ADA               	clrf	fsr2h,c
 37755  004D34  006F FF7B FFF6     	movff	postinc2,tblptrl
 37756  004D3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 37757  004D40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37758  004D40  6AF8               	clrf	tblptru,c
 37759  004D42                     	endif
 37760  004D42                     	if	0	;tblptru may be non-zero
 37761  004D42                     	endif
 37762  004D42  0008               	tblrd		*
 37763  004D44  50F5               	movf	tablat,w,c
 37764  004D46  0A2A               	xorlw	42
 37765  004D48  A4D8               	btfss	status,2,c
 37766  004D4A  D02A               	goto	i2l17091
 37767                           
 37768                           ; BSR set to: 0
 37769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 37770  004D4C  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37771  004D4E  6ED9               	movwf	fsr2l,c
 37772  004D50  6ADA               	clrf	fsr2h,c
 37773  004D52  2ADE               	incf	postinc2,f,c
 37774  004D54  0E00               	movlw	0
 37775  004D56  22DD               	addwfc	postdec2,f,c
 37776                           
 37777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 37778  004D58  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37779  004D5E  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37780  004D64  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37781  004D6A  0E02               	movlw	2
 37782  004D6C  26DE               	addwf	postinc2,f,c
 37783  004D6E  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37784  004D74  0E00               	movlw	0
 37785  004D76  22DD               	addwfc	postdec2,f,c
 37786  004D78  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37787  004D7E  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37788  004D84  006F FF78  F0B2    	movff	postinc2,_width
 37789  004D8A  006F FF74  F0B3    	movff	postdec2,_width+1
 37790                           
 37791                           ; BSR set to: 0
 37792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 37793  004D90  AFB3               	btfss	(_width+1)& (0+255),7,b
 37794  004D92  D044               	goto	i2u1777_40
 37795                           
 37796                           ; BSR set to: 0
 37797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 37798  004D94  81B6               	bsf	_flags& (0+255),0,b
 37799                           
 37800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 37801  004D96  6DB2               	negf	_width& (0+255),b
 37802  004D98  1FB3               	comf	(_width+1)& (0+255),f,b
 37803  004D9A  B0D8               	btfsc	status,0,c
 37804  004D9C  2BB3               	incf	(_width+1)& (0+255),f,b
 37805  004D9E  D03E               	goto	i2u1777_40
 37806  004DA0                     i2l17091:
 37807                           
 37808                           ; BSR set to: 0
 37809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 37810  004DA0  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37811  004DA2  6ED9               	movwf	fsr2l,c
 37812  004DA4  6ADA               	clrf	fsr2h,c
 37813  004DA6  006F FF78  F008    	movff	postinc2,i2atoi@s
 37814  004DAC  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 37815  004DB2  ECBB  F038         	call	i2_atoi	;wreg free
 37816  004DB6  0060  F020  F0B2   	movff	?i2_atoi,_width
 37817  004DBC  0060  F024  F0B3   	movff	?i2_atoi+1,_width+1
 37818                           
 37819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 37820  004DC2  D006               	goto	i2l17095
 37821  004DC4                     i2l17093:
 37822                           
 37823                           ; BSR set to: 0
 37824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 37825  004DC4  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37826  004DC6  6ED9               	movwf	fsr2l,c
 37827  004DC8  6ADA               	clrf	fsr2h,c
 37828  004DCA  2ADE               	incf	postinc2,f,c
 37829  004DCC  0E00               	movlw	0
 37830  004DCE  22DD               	addwfc	postdec2,f,c
 37831  004DD0                     i2l17095:
 37832  004DD0  0ED0               	movlw	208
 37833  004DD2  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37834  004DD4  0EFF               	movlw	255
 37835  004DD6  6E4B               	movwf	(??i2_vfpfcnvrt+1)^0,c
 37836  004DD8  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37837  004DDA  6ED9               	movwf	fsr2l,c
 37838  004DDC  6ADA               	clrf	fsr2h,c
 37839  004DDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 37840  004DE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 37841  004DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37842  004DEA  6AF8               	clrf	tblptru,c
 37843  004DEC                     	endif
 37844  004DEC                     	if	0	;tblptru may be non-zero
 37845  004DEC                     	endif
 37846  004DEC  0008               	tblrd		*
 37847  004DEE  50F5               	movf	tablat,w,c
 37848  004DF0  6E4C               	movwf	(??i2_vfpfcnvrt+2)^0,c
 37849  004DF2  6A4D               	clrf	(??i2_vfpfcnvrt+3)^0,c
 37850  004DF4  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37851  004DF6  264C               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 37852  004DF8  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37853  004DFA  224D               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 37854  004DFC  504D               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 37855  004DFE  E106               	bnz	i2u1775_40
 37856  004E00  0E0A               	movlw	10
 37857  004E02  5C4C               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 37858  004E04  B0D8               	btfsc	status,0,c
 37859  004E06  D002               	goto	i2u1775_40
 37860  004E08  0E01               	movlw	1
 37861  004E0A  D001               	goto	i2u1776_40
 37862  004E0C                     i2u1775_40:
 37863  004E0C  0E00               	movlw	0
 37864  004E0E                     i2u1776_40:
 37865  004E0E  0100               	movlb	0	; () banked
 37866  004E10  6F73               	movwf	i2_vfpfcnvrt$4925& (0+255),b
 37867  004E12  6B74               	clrf	(i2_vfpfcnvrt$4925+1)& (0+255),b
 37868                           
 37869                           ; BSR set to: 0
 37870  004E14  5173               	movf	i2_vfpfcnvrt$4925& (0+255),w,b
 37871  004E16  1174               	iorwf	(i2_vfpfcnvrt$4925+1)& (0+255),w,b
 37872  004E18  A4D8               	btfss	status,2,c
 37873  004E1A  D7D4               	goto	i2l17093
 37874  004E1C                     i2u1777_40:
 37875                           
 37876                           ; BSR set to: 0
 37877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 37878  004E1C  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37879  004E1E  6ED9               	movwf	fsr2l,c
 37880  004E20  6ADA               	clrf	fsr2h,c
 37881  004E22  006F FF7B FFF6     	movff	postinc2,tblptrl
 37882  004E28  006F FF77 FFF7     	movff	postdec2,tblptrh
 37883  004E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37884  004E2E  6AF8               	clrf	tblptru,c
 37885  004E30                     	endif
 37886  004E30                     	if	0	;tblptru may be non-zero
 37887  004E30                     	endif
 37888  004E30  0008               	tblrd		*
 37889  004E32  50F5               	movf	tablat,w,c
 37890  004E34  0A64               	xorlw	100
 37891  004E36  B4D8               	btfsc	status,2,c
 37892  004E38  D00F               	goto	i2u1779_40
 37893                           
 37894                           ; BSR set to: 0
 37895  004E3A  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37896  004E3C  6ED9               	movwf	fsr2l,c
 37897  004E3E  6ADA               	clrf	fsr2h,c
 37898  004E40  006F FF7B FFF6     	movff	postinc2,tblptrl
 37899  004E46  006F FF77 FFF7     	movff	postdec2,tblptrh
 37900  004E4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37901  004E4C  6AF8               	clrf	tblptru,c
 37902  004E4E                     	endif
 37903  004E4E                     	if	0	;tblptru may be non-zero
 37904  004E4E                     	endif
 37905  004E4E  0008               	tblrd		*
 37906  004E50  50F5               	movf	tablat,w,c
 37907  004E52  0A69               	xorlw	105
 37908  004E54  A4D8               	btfss	status,2,c
 37909  004E56  D052               	goto	i2l17111
 37910  004E58                     i2u1779_40:
 37911                           
 37912                           ; BSR set to: 0
 37913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 37914  004E58  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37915  004E5A  6ED9               	movwf	fsr2l,c
 37916  004E5C  6ADA               	clrf	fsr2h,c
 37917  004E5E  2ADE               	incf	postinc2,f,c
 37918  004E60  0E00               	movlw	0
 37919  004E62  22DD               	addwfc	postdec2,f,c
 37920                           
 37921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 37922  004E64  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37923  004E6A  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37924  004E70  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37925  004E76  0E02               	movlw	2
 37926  004E78  26DE               	addwf	postinc2,f,c
 37927  004E7A  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37928  004E80  0E00               	movlw	0
 37929  004E82  22DD               	addwfc	postdec2,f,c
 37930  004E84  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37931  004E8A  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37932  004E90  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 37933  004E96  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 37934  004E9C  0E00               	movlw	0
 37935  004E9E  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 37936  004EA0  0EFF               	movlw	-1
 37937  004EA2  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 37938  004EA4  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 37939  004EA6  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 37940  004EA8  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 37941  004EAA  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 37942  004EAC  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 37943                           
 37944                           ; BSR set to: 0
 37945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 37946  004EAE  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 37947  004EB4  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 37948  004EBA  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 37949  004EC0  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 37950  004EC6  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 37951  004ECC  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 37952  004ED2  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 37953  004ED8  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 37954  004EDE  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 37955  004EE4  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 37956  004EEA  ECB5  F030         	call	i2_dtoa	;wreg free
 37957  004EEE  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 37958  004EF4  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 37959  004EFA  0012               	return	
 37960  004EFC                     i2l17111:
 37961                           
 37962                           ; BSR set to: 0
 37963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 37964  004EFC  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37965  004EFE  6ED9               	movwf	fsr2l,c
 37966  004F00  6ADA               	clrf	fsr2h,c
 37967  004F02  006F FF7B FFF6     	movff	postinc2,tblptrl
 37968  004F08  006F FF77 FFF7     	movff	postdec2,tblptrh
 37969  004F0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37970  004F0E  6AF8               	clrf	tblptru,c
 37971  004F10                     	endif
 37972  004F10                     	if	0	;tblptru may be non-zero
 37973  004F10                     	endif
 37974  004F10  0008               	tblrd		*
 37975  004F12  50F5               	movf	tablat,w,c
 37976  004F14  0A78               	xorlw	120
 37977  004F16  B4D8               	btfsc	status,2,c
 37978  004F18  D00F               	goto	i2u1781_40
 37979                           
 37980                           ; BSR set to: 0
 37981  004F1A  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37982  004F1C  6ED9               	movwf	fsr2l,c
 37983  004F1E  6ADA               	clrf	fsr2h,c
 37984  004F20  006F FF7B FFF6     	movff	postinc2,tblptrl
 37985  004F26  006F FF77 FFF7     	movff	postdec2,tblptrh
 37986  004F2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37987  004F2C  6AF8               	clrf	tblptru,c
 37988  004F2E                     	endif
 37989  004F2E                     	if	0	;tblptru may be non-zero
 37990  004F2E                     	endif
 37991  004F2E  0008               	tblrd		*
 37992  004F30  50F5               	movf	tablat,w,c
 37993  004F32  0A58               	xorlw	88
 37994  004F34  A4D8               	btfss	status,2,c
 37995  004F36  D066               	goto	i2l17125
 37996  004F38                     i2u1781_40:
 37997                           
 37998                           ; BSR set to: 0
 37999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 38000  004F38  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38001  004F3A  6ED9               	movwf	fsr2l,c
 38002  004F3C  6ADA               	clrf	fsr2h,c
 38003  004F3E  006F FF7B FFF6     	movff	postinc2,tblptrl
 38004  004F44  006F FF77 FFF7     	movff	postdec2,tblptrh
 38005  004F4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38006  004F4A  6AF8               	clrf	tblptru,c
 38007  004F4C                     	endif
 38008  004F4C                     	if	0	;tblptru may be non-zero
 38009  004F4C                     	endif
 38010  004F4C  0008               	tblrd		*
 38011  004F4E  006F FFD4  F070    	movff	tablat,i2vfpfcnvrt@c
 38012                           
 38013                           ; BSR set to: 0
 38014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 38015  004F54  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38016  004F56  6ED9               	movwf	fsr2l,c
 38017  004F58  6ADA               	clrf	fsr2h,c
 38018  004F5A  2ADE               	incf	postinc2,f,c
 38019  004F5C  0E00               	movlw	0
 38020  004F5E  22DD               	addwfc	postdec2,f,c
 38021                           
 38022                           ; BSR set to: 0
 38023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 38024  004F60  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 38025  004F66  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 38026  004F6C  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 38027  004F72  0E02               	movlw	2
 38028  004F74  26DE               	addwf	postinc2,f,c
 38029  004F76  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 38030  004F7C  0E00               	movlw	0
 38031  004F7E  22DD               	addwfc	postdec2,f,c
 38032  004F80  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 38033  004F86  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 38034  004F8C  006F FF78  F04C    	movff	postinc2,??i2_vfpfcnvrt+2
 38035  004F92  006F FF74  F04D    	movff	postdec2,??i2_vfpfcnvrt+3
 38036  004F98  0060  F130  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 38037  004F9E  0060  F134  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 38038  004FA4  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 38039  004FA6  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 38040  004FA8  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 38041  004FAA  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 38042  004FAC  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 38043  004FAE  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 38044                           
 38045                           ; BSR set to: 0
 38046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 38047  004FB0  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 38048  004FB6  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 38049  004FBC  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 38050  004FC2  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 38051  004FC8  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 38052  004FCE  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 38053  004FD4  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 38054  004FDA  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 38055  004FE0  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 38056  004FE6  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 38057  004FEC  0060  F1C0  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 38058  004FF2  ECE9  F035         	call	i2_xtoa	;wreg free
 38059  004FF6  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 38060  004FFC  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 38061  005002  0012               	return	
 38062  005004                     i2l17125:
 38063                           
 38064                           ; BSR set to: 0
 38065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 38066  005004  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38067  005006  6ED9               	movwf	fsr2l,c
 38068  005008  6ADA               	clrf	fsr2h,c
 38069  00500A  006F FF7B FFF6     	movff	postinc2,tblptrl
 38070  005010  006F FF77 FFF7     	movff	postdec2,tblptrh
 38071  005016                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38072  005016  6AF8               	clrf	tblptru,c
 38073  005018                     	endif
 38074  005018                     	if	0	;tblptru may be non-zero
 38075  005018                     	endif
 38076  005018  0008               	tblrd		*
 38077  00501A  50F5               	movf	tablat,w,c
 38078  00501C  0A25               	xorlw	37
 38079  00501E  A4D8               	btfss	status,2,c
 38080  005020  D017               	goto	i2l17135
 38081                           
 38082                           ; BSR set to: 0
 38083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 38084  005022  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38085  005024  6ED9               	movwf	fsr2l,c
 38086  005026  6ADA               	clrf	fsr2h,c
 38087  005028  2ADE               	incf	postinc2,f,c
 38088  00502A  0E00               	movlw	0
 38089  00502C  22DD               	addwfc	postdec2,f,c
 38090                           
 38091                           ; BSR set to: 0
 38092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 38093  00502E  0E00               	movlw	0
 38094  005030  6E04               	movwf	(i2fputc@c+1)^0,c
 38095  005032  0E25               	movlw	37
 38096  005034  6E03               	movwf	i2fputc@c^0,c
 38097  005036  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 38098  00503C  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 38099  005042  EC29  F042         	call	i2_fputc	;wreg free
 38100  005046                     i2l17131:
 38101                           
 38102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 38103  005046  0E00               	movlw	0
 38104  005048  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 38105  00504A  0E01               	movlw	1
 38106  00504C  6E45               	movwf	?i2_vfpfcnvrt^0,c
 38107  00504E  0012               	return	
 38108  005050                     i2l17135:
 38109                           
 38110                           ; BSR set to: 0
 38111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 38112  005050  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38113  005052  6ED9               	movwf	fsr2l,c
 38114  005054  6ADA               	clrf	fsr2h,c
 38115  005056  2ADE               	incf	postinc2,f,c
 38116  005058  0E00               	movlw	0
 38117  00505A  22DD               	addwfc	postdec2,f,c
 38118                           
 38119                           ; BSR set to: 0
 38120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 38121  00505C  0E00               	movlw	0
 38122  00505E  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 38123  005060  0E00               	movlw	0
 38124  005062  6E45               	movwf	?i2_vfpfcnvrt^0,c
 38125  005064  0012               	return	
 38126  005066                     i2l17141:
 38127                           
 38128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 38129  005066  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38130  005068  6ED9               	movwf	fsr2l,c
 38131  00506A  6ADA               	clrf	fsr2h,c
 38132  00506C  006F FF7B FFF6     	movff	postinc2,tblptrl
 38133  005072  006F FF77 FFF7     	movff	postdec2,tblptrh
 38134  005078                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38135  005078  6AF8               	clrf	tblptru,c
 38136  00507A                     	endif
 38137  00507A                     	if	0	;tblptru may be non-zero
 38138  00507A                     	endif
 38139  00507A  0008               	tblrd		*
 38140  00507C  50F5               	movf	tablat,w,c
 38141  00507E  6E03               	movwf	i2fputc@c^0,c
 38142  005080  6A04               	clrf	(i2fputc@c+1)^0,c
 38143  005082  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 38144  005088  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 38145  00508E  EC29  F042         	call	i2_fputc	;wreg free
 38146                           
 38147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 38148  005092  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 38149  005094  6ED9               	movwf	fsr2l,c
 38150  005096  6ADA               	clrf	fsr2h,c
 38151  005098  2ADE               	incf	postinc2,f,c
 38152  00509A  0E00               	movlw	0
 38153  00509C  22DD               	addwfc	postdec2,f,c
 38154  00509E  D7D3               	goto	i2l17131
 38155  0050A0                     __end_ofi2_vfpfcnvrt:
 38156                           	opt callstack 0
 38157                           
 38158 ;; *************** function i2_xtoa *****************
 38159 ;; Defined at:
 38160 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 38161 ;; Parameters:    Size  Location     Type
 38162 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 38163 ;;		 -> sprintf@f(6), NULL(0), 
 38164 ;;  d               8   31[COMRAM] unsigned long long 
 38165 ;;  x               1   39[COMRAM] unsigned char 
 38166 ;; Auto vars:     Size  Location     Type
 38167 ;;  xtoa            8   56[COMRAM] unsigned long long 
 38168 ;;  xtoa            2   66[COMRAM] int 
 38169 ;;  xtoa            2   64[COMRAM] int 
 38170 ;;  xtoa            2   54[COMRAM] int 
 38171 ;;  xtoa            2   52[COMRAM] int 
 38172 ;; Return value:  Size  Location     Type
 38173 ;;                  2   29[COMRAM] int 
 38174 ;; Registers used:
 38175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38176 ;; Tracked objects:
 38177 ;;		On entry : 3F/0
 38178 ;;		On exit  : 0/0
 38179 ;;		Unchanged: 0/0
 38180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38181 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38184 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38185 ;;Total ram usage:       39 bytes
 38186 ;; Hardware stack levels used:    1
 38187 ;; Hardware stack levels required when called:    5
 38188 ;; This function calls:
 38189 ;;		i2_isalpha
 38190 ;;		i2_isupper
 38191 ;;		i2_pad
 38192 ;;		i2_toupper
 38193 ;; This function is called by:
 38194 ;;		i2_vfpfcnvrt
 38195 ;; This function uses a non-reentrant model
 38196 ;;
 38197                           
 38198                           	psect	text226
 38199  006BD2                     __ptext226:
 38200                           	opt callstack 0
 38201  006BD2                     i2_xtoa:
 38202                           	opt callstack 1
 38203                           
 38204                           ; BSR set to: 0
 38205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 38206                           
 38207                           ;incstack = 0
 38208  006BD2  AFB5               	btfss	(_prec+1)& (0+255),7,b
 38209                           
 38210                           ; BSR set to: 0
 38211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 38212  006BD4  93B6               	bcf	_flags& (0+255),1,b
 38213                           
 38214                           ; BSR set to: 0
 38215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 38216  006BD6  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 38217  006BD8  D005               	goto	i2u1745_40
 38218  006BDA  51B5               	movf	(_prec+1)& (0+255),w,b
 38219  006BDC  E108               	bnz	i2l3134
 38220  006BDE  05B4               	decf	_prec& (0+255),w,b
 38221  006BE0  B0D8               	btfsc	status,0,c
 38222  006BE2  D005               	goto	i2l3134
 38223  006BE4                     i2u1745_40:
 38224                           
 38225                           ; BSR set to: 0
 38226  006BE4  0E00               	movlw	0
 38227  006BE6  6E36               	movwf	(i2xtoa@p+1)^0,c
 38228  006BE8  0E01               	movlw	1
 38229  006BEA  6E35               	movwf	i2xtoa@p^0,c
 38230  006BEC  D006               	goto	i2l3136
 38231  006BEE                     i2l3134:
 38232                           
 38233                           ; BSR set to: 0
 38234  006BEE  0060  F2D0  F035   	movff	_prec,i2xtoa@p
 38235  006BF4  0060  F2D4  F036   	movff	_prec+1,i2xtoa@p+1
 38236  006BFA                     i2l3136:
 38237                           
 38238                           ; BSR set to: 0
 38239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 38240  006BFA  0060  F2C8  F037   	movff	_width,i2xtoa@w
 38241  006C00  0060  F2CC  F038   	movff	_width+1,i2xtoa@w+1
 38242                           
 38243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 38244  006C06  A9B6               	btfss	_flags& (0+255),4,b
 38245  006C08  D004               	goto	i2l16929
 38246                           
 38247                           ; BSR set to: 0
 38248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 38249  006C0A  0EFE               	movlw	254
 38250  006C0C  2637               	addwf	i2xtoa@w^0,f,c
 38251  006C0E  0EFF               	movlw	255
 38252  006C10  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 38253  006C12                     i2l16929:
 38254                           
 38255                           ; BSR set to: 0
 38256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 38257  006C12  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 38258  006C18  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 38259  006C1E  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 38260  006C24  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 38261  006C2A  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 38262  006C30  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 38263  006C36  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 38264  006C3C  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 38265                           
 38266                           ; BSR set to: 0
 38267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 38268  006C42  0E00               	movlw	0
 38269  006C44  6E42               	movwf	(i2xtoa@i+1)^0,c
 38270  006C46  0E1F               	movlw	31
 38271  006C48  6E41               	movwf	i2xtoa@i^0,c
 38272                           
 38273                           ; BSR set to: 0
 38274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 38275  006C4A  0E00               	movlw	0
 38276  006C4C  0102               	movlb	2	; () banked
 38277  006C4E  6F7A               	movwf	(_dbuf+31)& (0+255),b
 38278                           
 38279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38280  006C50  D0A8               	goto	i2l16965
 38281  006C52                     i2l16935:
 38282                           
 38283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 38284  006C52  0641               	decf	i2xtoa@i^0,f,c
 38285  006C54  A0D8               	btfss	status,0,c
 38286  006C56  0642               	decf	(i2xtoa@i+1)^0,f,c
 38287                           
 38288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 38289  006C58  0E0F               	movlw	15
 38290  006C5A  1439               	andwf	i2xtoa@n^0,w,c
 38291  006C5C  6E43               	movwf	i2xtoa@c^0,c
 38292  006C5E  6A44               	clrf	(i2xtoa@c+1)^0,c
 38293                           
 38294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 38295  006C60  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 38296  006C62  D008               	goto	i2l16943
 38297  006C64  5044               	movf	(i2xtoa@c+1)^0,w,c
 38298  006C66  E104               	bnz	i2u1747_40
 38299  006C68  0E0A               	movlw	10
 38300  006C6A  5C43               	subwf	i2xtoa@c^0,w,c
 38301  006C6C  A0D8               	btfss	status,0,c
 38302  006C6E  D002               	goto	i2l16943
 38303  006C70                     i2u1747_40:
 38304  006C70  0E57               	movlw	87
 38305  006C72  D001               	goto	L62
 38306  006C74                     i2l16943:
 38307  006C74  0E30               	movlw	48
 38308  006C76                     L62:
 38309  006C76  2443               	addwf	i2xtoa@c^0,w,c
 38310  006C78  6E43               	movwf	i2xtoa@c^0,c
 38311  006C7A  0E00               	movlw	0
 38312  006C7C  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 38313  006C7E  6E44               	movwf	(i2xtoa@c+1)^0,c
 38314                           
 38315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 38316  006C80  0EBF               	movlw	191
 38317  006C82  6E29               	movwf	??i2_xtoa^0,c
 38318  006C84  0EFF               	movlw	255
 38319  006C86  6E2A               	movwf	(??i2_xtoa+1)^0,c
 38320  006C88  5028               	movf	i2xtoa@x^0,w,c
 38321  006C8A  6E2B               	movwf	(??i2_xtoa+2)^0,c
 38322  006C8C  6A2C               	clrf	(??i2_xtoa+3)^0,c
 38323  006C8E  5029               	movf	??i2_xtoa^0,w,c
 38324  006C90  262B               	addwf	(??i2_xtoa+2)^0,f,c
 38325  006C92  502A               	movf	(??i2_xtoa+1)^0,w,c
 38326  006C94  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 38327  006C96  502C               	movf	(??i2_xtoa+3)^0,w,c
 38328  006C98  E106               	bnz	i2u1748_40
 38329  006C9A  0E1A               	movlw	26
 38330  006C9C  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 38331  006C9E  B0D8               	btfsc	status,0,c
 38332  006CA0  D002               	goto	i2u1748_40
 38333  006CA2  0E01               	movlw	1
 38334  006CA4  D001               	goto	i2u1749_40
 38335  006CA6                     i2u1748_40:
 38336  006CA6  0E00               	movlw	0
 38337  006CA8                     i2u1749_40:
 38338  006CA8  6E31               	movwf	i2_xtoa$4910^0,c
 38339  006CAA  6A32               	clrf	(i2_xtoa$4910+1)^0,c
 38340  006CAC  5031               	movf	i2_xtoa$4910^0,w,c
 38341  006CAE  1032               	iorwf	(i2_xtoa$4910+1)^0,w,c
 38342  006CB0  B4D8               	btfsc	status,2,c
 38343  006CB2  D02B               	goto	i2l16957
 38344  006CB4  0E9F               	movlw	159
 38345  006CB6  6E29               	movwf	??i2_xtoa^0,c
 38346  006CB8  0EFF               	movlw	255
 38347  006CBA  6E2A               	movwf	(??i2_xtoa+1)^0,c
 38348  006CBC  0E20               	movlw	32
 38349  006CBE  1043               	iorwf	i2xtoa@c^0,w,c
 38350  006CC0  6E2B               	movwf	(??i2_xtoa+2)^0,c
 38351  006CC2  0E00               	movlw	0
 38352  006CC4  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 38353  006CC6  6E2C               	movwf	(??i2_xtoa+3)^0,c
 38354  006CC8  5029               	movf	??i2_xtoa^0,w,c
 38355  006CCA  262B               	addwf	(??i2_xtoa+2)^0,f,c
 38356  006CCC  502A               	movf	(??i2_xtoa+1)^0,w,c
 38357  006CCE  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 38358  006CD0  502C               	movf	(??i2_xtoa+3)^0,w,c
 38359  006CD2  E106               	bnz	i2u1751_40
 38360  006CD4  0E1A               	movlw	26
 38361  006CD6  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 38362  006CD8  B0D8               	btfsc	status,0,c
 38363  006CDA  D002               	goto	i2u1751_40
 38364  006CDC  0E01               	movlw	1
 38365  006CDE  D001               	goto	i2u1752_40
 38366  006CE0                     i2u1751_40:
 38367  006CE0  0E00               	movlw	0
 38368  006CE2                     i2u1752_40:
 38369  006CE2  6E33               	movwf	i2_xtoa$4911^0,c
 38370  006CE4  6A34               	clrf	(i2_xtoa$4911+1)^0,c
 38371  006CE6  5033               	movf	i2_xtoa$4911^0,w,c
 38372  006CE8  1034               	iorwf	(i2_xtoa$4911+1)^0,w,c
 38373  006CEA  B4D8               	btfsc	status,2,c
 38374  006CEC  D00E               	goto	i2l16957
 38375                           
 38376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 38377  006CEE  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 38378  006CF4  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 38379  006CFA  EC5E  F04A         	call	i2_toupper	;wreg free
 38380  006CFE  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 38381  006D04  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 38382  006D0A                     i2l16957:
 38383                           
 38384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 38385  006D0A  0E5B               	movlw	low _dbuf
 38386  006D0C  2441               	addwf	i2xtoa@i^0,w,c
 38387  006D0E  6ED9               	movwf	fsr2l,c
 38388  006D10  0E02               	movlw	high _dbuf
 38389  006D12  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38390  006D14  6EDA               	movwf	fsr2h,c
 38391  006D16  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 38392                           
 38393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 38394  006D1C  0635               	decf	i2xtoa@p^0,f,c
 38395  006D1E  A0D8               	btfss	status,0,c
 38396  006D20  0636               	decf	(i2xtoa@p+1)^0,f,c
 38397                           
 38398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 38399  006D22  0637               	decf	i2xtoa@w^0,f,c
 38400  006D24  A0D8               	btfss	status,0,c
 38401  006D26  0638               	decf	(i2xtoa@w+1)^0,f,c
 38402                           
 38403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 38404  006D28  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 38405  006D2E  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 38406  006D34  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 38407  006D3A  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 38408  006D40  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 38409  006D46  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 38410  006D4C  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 38411  006D52  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 38412  006D58  0E05               	movlw	5
 38413  006D5A  D009               	goto	i2u1754_40
 38414  006D5C                     i2u1754_45:
 38415  006D5C  90D8               	bcf	status,0,c
 38416  006D5E  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 38417  006D60  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 38418  006D62  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 38419  006D64  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 38420  006D66  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 38421  006D68  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 38422  006D6A  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 38423  006D6C  3229               	rrcf	??i2_xtoa^0,f,c
 38424  006D6E                     i2u1754_40:
 38425  006D6E  2EE8               	decfsz	wreg,f,c
 38426  006D70  D7F5               	goto	i2u1754_45
 38427  006D72  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 38428  006D78  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 38429  006D7E  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 38430  006D84  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 38431  006D8A  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 38432  006D90  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 38433  006D96  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 38434  006D9C  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 38435  006DA2                     i2l16965:
 38436                           
 38437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38438  006DA2  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 38439  006DA4  D021               	goto	i2u1759_40
 38440  006DA6  5042               	movf	(i2xtoa@i+1)^0,w,c
 38441  006DA8  E104               	bnz	i2u1755_40
 38442  006DAA  0E02               	movlw	2
 38443  006DAC  5C41               	subwf	i2xtoa@i^0,w,c
 38444  006DAE  A0D8               	btfss	status,0,c
 38445  006DB0  D01B               	goto	i2u1759_40
 38446  006DB2                     i2u1755_40:
 38447  006DB2  5039               	movf	i2xtoa@n^0,w,c
 38448  006DB4  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 38449  006DB6  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 38450  006DB8  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 38451  006DBA  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 38452  006DBC  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 38453  006DBE  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 38454  006DC0  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 38455  006DC2  A4D8               	btfss	status,2,c
 38456  006DC4  D746               	goto	i2l16935
 38457  006DC6  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 38458  006DC8  D005               	goto	i2u1757_40
 38459  006DCA  5036               	movf	(i2xtoa@p+1)^0,w,c
 38460  006DCC  E102               	bnz	i2u1757_41
 38461  006DCE  0435               	decf	i2xtoa@p^0,w,c
 38462  006DD0  B0D8               	btfsc	status,0,c
 38463  006DD2                     i2u1757_41:
 38464  006DD2  D73F               	goto	i2l16935
 38465  006DD4                     i2u1757_40:
 38466  006DD4  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 38467  006DD6  D008               	goto	i2u1759_40
 38468  006DD8  5038               	movf	(i2xtoa@w+1)^0,w,c
 38469  006DDA  E103               	bnz	i2u1758_40
 38470  006DDC  0437               	decf	i2xtoa@w^0,w,c
 38471  006DDE  A0D8               	btfss	status,0,c
 38472  006DE0  D003               	goto	i2u1759_40
 38473  006DE2                     i2u1758_40:
 38474  006DE2  0100               	movlb	0	; () banked
 38475  006DE4  B3B6               	btfsc	_flags& (0+255),1,b
 38476  006DE6  D735               	goto	i2l16935
 38477  006DE8                     i2u1759_40:
 38478                           
 38479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 38480  006DE8  0100               	movlb	0	; () banked
 38481  006DEA  A9B6               	btfss	_flags& (0+255),4,b
 38482  006DEC  D017               	goto	i2l16981
 38483                           
 38484                           ; BSR set to: 0
 38485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 38486  006DEE  0641               	decf	i2xtoa@i^0,f,c
 38487  006DF0  A0D8               	btfss	status,0,c
 38488  006DF2  0642               	decf	(i2xtoa@i+1)^0,f,c
 38489                           
 38490                           ; BSR set to: 0
 38491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 38492  006DF4  0E5B               	movlw	low _dbuf
 38493  006DF6  2441               	addwf	i2xtoa@i^0,w,c
 38494  006DF8  6ED9               	movwf	fsr2l,c
 38495  006DFA  0E02               	movlw	high _dbuf
 38496  006DFC  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38497  006DFE  6EDA               	movwf	fsr2h,c
 38498  006E00  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 38499                           
 38500                           ; BSR set to: 0
 38501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 38502  006E06  0641               	decf	i2xtoa@i^0,f,c
 38503  006E08  A0D8               	btfss	status,0,c
 38504  006E0A  0642               	decf	(i2xtoa@i+1)^0,f,c
 38505                           
 38506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 38507  006E0C  0E5B               	movlw	low _dbuf
 38508  006E0E  2441               	addwf	i2xtoa@i^0,w,c
 38509  006E10  6ED9               	movwf	fsr2l,c
 38510  006E12  0E02               	movlw	high _dbuf
 38511  006E14  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38512  006E16  6EDA               	movwf	fsr2h,c
 38513  006E18  0E30               	movlw	48
 38514  006E1A  6EDF               	movwf	indf2,c
 38515  006E1C                     i2l16981:
 38516                           
 38517                           ; BSR set to: 0
 38518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 38519  006E1C  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 38520  006E22  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 38521  006E28  0E5B               	movlw	low _dbuf
 38522  006E2A  2441               	addwf	i2xtoa@i^0,w,c
 38523  006E2C  6E15               	movwf	i2pad@buf^0,c
 38524  006E2E  0E02               	movlw	high _dbuf
 38525  006E30  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 38526  006E32  6E16               	movwf	(i2pad@buf+1)^0,c
 38527  006E34  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 38528  006E3A  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 38529  006E40  ECC5  F040         	call	i2_pad	;wreg free
 38530  006E44  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 38531  006E4A  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 38532  006E50  0012               	return		;funcret
 38533  006E52                     __end_ofi2_xtoa:
 38534                           	opt callstack 0
 38535                           
 38536 ;; *************** function i2_toupper *****************
 38537 ;; Defined at:
 38538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 38539 ;; Parameters:    Size  Location     Type
 38540 ;;  c               2    6[COMRAM] int 
 38541 ;; Auto vars:     Size  Location     Type
 38542 ;;		None
 38543 ;; Return value:  Size  Location     Type
 38544 ;;                  2    6[COMRAM] int 
 38545 ;; Registers used:
 38546 ;;		wreg, status,2, status,0
 38547 ;; Tracked objects:
 38548 ;;		On entry : 0/2
 38549 ;;		On exit  : 0/0
 38550 ;;		Unchanged: 0/0
 38551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38555 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38556 ;;Total ram usage:        8 bytes
 38557 ;; Hardware stack levels used:    1
 38558 ;; Hardware stack levels required when called:    1
 38559 ;; This function calls:
 38560 ;;		i2_islower
 38561 ;; This function is called by:
 38562 ;;		i2_xtoa
 38563 ;; This function uses a non-reentrant model
 38564 ;;
 38565                           
 38566                           	psect	text227
 38567  0094BC                     __ptext227:
 38568                           	opt callstack 0
 38569  0094BC                     i2_toupper:
 38570                           	opt callstack 4
 38571                           
 38572                           ;incstack = 0
 38573  0094BC  0E9F               	movlw	159
 38574  0094BE  6E09               	movwf	??i2_toupper^0,c
 38575  0094C0  0EFF               	movlw	255
 38576  0094C2  6E0A               	movwf	(??i2_toupper+1)^0,c
 38577  0094C4  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 38578  0094CA  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 38579  0094D0  5009               	movf	??i2_toupper^0,w,c
 38580  0094D2  260B               	addwf	(??i2_toupper+2)^0,f,c
 38581  0094D4  500A               	movf	(??i2_toupper+1)^0,w,c
 38582  0094D6  220C               	addwfc	(??i2_toupper+3)^0,f,c
 38583  0094D8  500C               	movf	(??i2_toupper+3)^0,w,c
 38584  0094DA  E106               	bnz	i2u1713_40
 38585  0094DC  0E1A               	movlw	26
 38586  0094DE  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 38587  0094E0  B0D8               	btfsc	status,0,c
 38588  0094E2  D002               	goto	i2u1713_40
 38589  0094E4  0E01               	movlw	1
 38590  0094E6  D001               	goto	i2u1714_40
 38591  0094E8                     i2u1713_40:
 38592  0094E8  0E00               	movlw	0
 38593  0094EA                     i2u1714_40:
 38594  0094EA  6E0D               	movwf	i2_toupper$5491^0,c
 38595  0094EC  6A0E               	clrf	(i2_toupper$5491+1)^0,c
 38596  0094EE  500D               	movf	i2_toupper$5491^0,w,c
 38597  0094F0  100E               	iorwf	(i2_toupper$5491+1)^0,w,c
 38598  0094F2  B4D8               	btfsc	status,2,c
 38599  0094F4  D005               	goto	i2l3981
 38600  0094F6  0E5F               	movlw	95
 38601  0094F8  1407               	andwf	i2toupper@c^0,w,c
 38602  0094FA  6E07               	movwf	?i2_toupper^0,c
 38603  0094FC  6A08               	clrf	(?i2_toupper+1)^0,c
 38604  0094FE  0012               	return	
 38605  009500                     i2l3981:
 38606  009500  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 38607  009506  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 38608  00950C  0012               	return		;funcret
 38609  00950E                     __end_ofi2_toupper:
 38610                           	opt callstack 0
 38611                           
 38612 ;; *************** function i2_islower *****************
 38613 ;; Defined at:
 38614 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 38615 ;; Parameters:    Size  Location     Type
 38616 ;;  c               2    0[COMRAM] int 
 38617 ;; Auto vars:     Size  Location     Type
 38618 ;;		None
 38619 ;; Return value:  Size  Location     Type
 38620 ;;                  2    0[COMRAM] int 
 38621 ;; Registers used:
 38622 ;;		wreg, status,2, status,0
 38623 ;; Tracked objects:
 38624 ;;		On entry : 0/0
 38625 ;;		On exit  : 0/0
 38626 ;;		Unchanged: 0/0
 38627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38632 ;;Total ram usage:        6 bytes
 38633 ;; Hardware stack levels used:    1
 38634 ;; This function calls:
 38635 ;;		Nothing
 38636 ;; This function is called by:
 38637 ;;		i2_toupper
 38638 ;; This function uses a non-reentrant model
 38639 ;;
 38640                           
 38641                           	psect	text228
 38642  009C30                     __ptext228:
 38643                           	opt callstack 0
 38644  009C30                     i2_islower:
 38645                           	opt callstack 4
 38646                           
 38647                           ;incstack = 0
 38648  009C30  0E9F               	movlw	159
 38649  009C32  6E03               	movwf	??i2_islower^0,c
 38650  009C34  0EFF               	movlw	255
 38651  009C36  6E04               	movwf	(??i2_islower+1)^0,c
 38652  009C38  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 38653  009C3E  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 38654  009C44  5003               	movf	??i2_islower^0,w,c
 38655  009C46  2605               	addwf	(??i2_islower+2)^0,f,c
 38656  009C48  5004               	movf	(??i2_islower+1)^0,w,c
 38657  009C4A  2206               	addwfc	(??i2_islower+3)^0,f,c
 38658  009C4C  5006               	movf	(??i2_islower+3)^0,w,c
 38659  009C4E  E106               	bnz	i2u1646_40
 38660  009C50  0E1A               	movlw	26
 38661  009C52  5C05               	subwf	(??i2_islower+2)^0,w,c
 38662  009C54  B0D8               	btfsc	status,0,c
 38663  009C56  D002               	goto	i2u1646_40
 38664  009C58  0E01               	movlw	1
 38665  009C5A  D001               	goto	i2u1647_40
 38666  009C5C                     i2u1646_40:
 38667  009C5C  0E00               	movlw	0
 38668  009C5E                     i2u1647_40:
 38669  009C5E  6E01               	movwf	?i2_islower^0,c
 38670  009C60  6A02               	clrf	(?i2_islower+1)^0,c
 38671  009C62  0012               	return		;funcret
 38672  009C64                     __end_ofi2_islower:
 38673                           	opt callstack 0
 38674                           
 38675 ;; *************** function i2_isupper *****************
 38676 ;; Defined at:
 38677 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 38678 ;; Parameters:    Size  Location     Type
 38679 ;;  c               2    0[COMRAM] int 
 38680 ;; Auto vars:     Size  Location     Type
 38681 ;;		None
 38682 ;; Return value:  Size  Location     Type
 38683 ;;                  2    0[COMRAM] int 
 38684 ;; Registers used:
 38685 ;;		wreg, status,2, status,0
 38686 ;; Tracked objects:
 38687 ;;		On entry : 0/0
 38688 ;;		On exit  : 0/0
 38689 ;;		Unchanged: 0/0
 38690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38693 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38695 ;;Total ram usage:        6 bytes
 38696 ;; Hardware stack levels used:    1
 38697 ;; This function calls:
 38698 ;;		Nothing
 38699 ;; This function is called by:
 38700 ;;		i2_xtoa
 38701 ;; This function uses a non-reentrant model
 38702 ;;
 38703                           
 38704                           	psect	text229
 38705  009C64                     __ptext229:
 38706                           	opt callstack 0
 38707  009C64                     i2_isupper:
 38708                           	opt callstack 5
 38709                           
 38710                           ;incstack = 0
 38711  009C64  0EBF               	movlw	191
 38712  009C66  6E03               	movwf	??i2_isupper^0,c
 38713  009C68  0EFF               	movlw	255
 38714  009C6A  6E04               	movwf	(??i2_isupper+1)^0,c
 38715  009C6C  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 38716  009C72  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 38717  009C78  5003               	movf	??i2_isupper^0,w,c
 38718  009C7A  2605               	addwf	(??i2_isupper+2)^0,f,c
 38719  009C7C  5004               	movf	(??i2_isupper+1)^0,w,c
 38720  009C7E  2206               	addwfc	(??i2_isupper+3)^0,f,c
 38721  009C80  5006               	movf	(??i2_isupper+3)^0,w,c
 38722  009C82  E106               	bnz	i2u1711_40
 38723  009C84  0E1A               	movlw	26
 38724  009C86  5C05               	subwf	(??i2_isupper+2)^0,w,c
 38725  009C88  B0D8               	btfsc	status,0,c
 38726  009C8A  D002               	goto	i2u1711_40
 38727  009C8C  0E01               	movlw	1
 38728  009C8E  D001               	goto	i2u1712_40
 38729  009C90                     i2u1711_40:
 38730  009C90  0E00               	movlw	0
 38731  009C92                     i2u1712_40:
 38732  009C92  6E01               	movwf	?i2_isupper^0,c
 38733  009C94  6A02               	clrf	(?i2_isupper+1)^0,c
 38734  009C96  0012               	return		;funcret
 38735  009C98                     __end_ofi2_isupper:
 38736                           	opt callstack 0
 38737                           
 38738 ;; *************** function i2_isalpha *****************
 38739 ;; Defined at:
 38740 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 38741 ;; Parameters:    Size  Location     Type
 38742 ;;  c               2    0[COMRAM] int 
 38743 ;; Auto vars:     Size  Location     Type
 38744 ;;		None
 38745 ;; Return value:  Size  Location     Type
 38746 ;;                  2    0[COMRAM] int 
 38747 ;; Registers used:
 38748 ;;		wreg, status,2, status,0
 38749 ;; Tracked objects:
 38750 ;;		On entry : 0/0
 38751 ;;		On exit  : 0/0
 38752 ;;		Unchanged: 0/0
 38753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38756 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38758 ;;Total ram usage:        6 bytes
 38759 ;; Hardware stack levels used:    1
 38760 ;; This function calls:
 38761 ;;		Nothing
 38762 ;; This function is called by:
 38763 ;;		i2_xtoa
 38764 ;; This function uses a non-reentrant model
 38765 ;;
 38766                           
 38767                           	psect	text230
 38768  009C98                     __ptext230:
 38769                           	opt callstack 0
 38770  009C98                     i2_isalpha:
 38771                           	opt callstack 5
 38772                           
 38773                           ;incstack = 0
 38774  009C98  0E9F               	movlw	159
 38775  009C9A  6E03               	movwf	??i2_isalpha^0,c
 38776  009C9C  0EFF               	movlw	255
 38777  009C9E  6E04               	movwf	(??i2_isalpha+1)^0,c
 38778  009CA0  0E20               	movlw	32
 38779  009CA2  1001               	iorwf	i2isalpha@c^0,w,c
 38780  009CA4  6E05               	movwf	(??i2_isalpha+2)^0,c
 38781  009CA6  0E00               	movlw	0
 38782  009CA8  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 38783  009CAA  6E06               	movwf	(??i2_isalpha+3)^0,c
 38784  009CAC  5003               	movf	??i2_isalpha^0,w,c
 38785  009CAE  2605               	addwf	(??i2_isalpha+2)^0,f,c
 38786  009CB0  5004               	movf	(??i2_isalpha+1)^0,w,c
 38787  009CB2  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 38788  009CB4  5006               	movf	(??i2_isalpha+3)^0,w,c
 38789  009CB6  E106               	bnz	i2u1705_40
 38790  009CB8  0E1A               	movlw	26
 38791  009CBA  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 38792  009CBC  B0D8               	btfsc	status,0,c
 38793  009CBE  D002               	goto	i2u1705_40
 38794  009CC0  0E01               	movlw	1
 38795  009CC2  D001               	goto	i2u1706_40
 38796  009CC4                     i2u1705_40:
 38797  009CC4  0E00               	movlw	0
 38798  009CC6                     i2u1706_40:
 38799  009CC6  6E01               	movwf	?i2_isalpha^0,c
 38800  009CC8  6A02               	clrf	(?i2_isalpha+1)^0,c
 38801  009CCA  0012               	return		;funcret
 38802  009CCC                     __end_ofi2_isalpha:
 38803                           	opt callstack 0
 38804                           
 38805 ;; *************** function i2_dtoa *****************
 38806 ;; Defined at:
 38807 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 38808 ;; Parameters:    Size  Location     Type
 38809 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 38810 ;;		 -> sprintf@f(6), NULL(0), 
 38811 ;;  d               8   31[COMRAM] long long 
 38812 ;; Auto vars:     Size  Location     Type
 38813 ;;  dtoa            8   55[COMRAM] long long 
 38814 ;;  dtoa            2   63[COMRAM] int 
 38815 ;;  dtoa            2   53[COMRAM] int 
 38816 ;;  dtoa            2   51[COMRAM] int 
 38817 ;;  dtoa            2   49[COMRAM] int 
 38818 ;; Return value:  Size  Location     Type
 38819 ;;                  2   29[COMRAM] int 
 38820 ;; Registers used:
 38821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38822 ;; Tracked objects:
 38823 ;;		On entry : 3F/0
 38824 ;;		On exit  : 0/0
 38825 ;;		Unchanged: 0/0
 38826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38827 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38828 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38829 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38830 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38831 ;;Total ram usage:       36 bytes
 38832 ;; Hardware stack levels used:    1
 38833 ;; Hardware stack levels required when called:    5
 38834 ;; This function calls:
 38835 ;;		i2___aodiv
 38836 ;;		i2___aomod
 38837 ;;		i2_abs
 38838 ;;		i2_pad
 38839 ;; This function is called by:
 38840 ;;		i2_vfpfcnvrt
 38841 ;; This function uses a non-reentrant model
 38842 ;;
 38843                           
 38844                           	psect	text231
 38845  00616A                     __ptext231:
 38846                           	opt callstack 0
 38847  00616A                     i2_dtoa:
 38848                           	opt callstack 1
 38849                           
 38850                           ; BSR set to: 0
 38851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 38852                           
 38853                           ;incstack = 0
 38854  00616A  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 38855  006170  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 38856  006176  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 38857  00617C  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 38858  006182  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 38859  006188  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 38860  00618E  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 38861  006194  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 38862                           
 38863                           ; BSR set to: 0
 38864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 38865  00619A  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 38866  00619C  D002               	goto	i2u1729_40
 38867  00619E  0E01               	movlw	1
 38868  0061A0  D001               	goto	i2u1730_40
 38869  0061A2                     i2u1729_40:
 38870  0061A2  0E00               	movlw	0
 38871  0061A4                     i2u1730_40:
 38872  0061A4  6E36               	movwf	i2dtoa@s^0,c
 38873  0061A6  6A37               	clrf	(i2dtoa@s+1)^0,c
 38874                           
 38875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 38876  0061A8  5036               	movf	i2dtoa@s^0,w,c
 38877  0061AA  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38878  0061AC  B4D8               	btfsc	status,2,c
 38879  0061AE  D010               	goto	i2l16863
 38880                           
 38881                           ; BSR set to: 0
 38882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 38883  0061B0  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 38884  0061B2  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 38885  0061B4  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 38886  0061B6  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 38887  0061B8  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 38888  0061BA  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 38889  0061BC  1E39               	comf	(i2dtoa@n+1)^0,f,c
 38890  0061BE  6C38               	negf	i2dtoa@n^0,c
 38891  0061C0  0E00               	movlw	0
 38892  0061C2  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 38893  0061C4  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 38894  0061C6  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 38895  0061C8  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 38896  0061CA  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 38897  0061CC  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 38898  0061CE  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 38899  0061D0                     i2l16863:
 38900                           
 38901                           ; BSR set to: 0
 38902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 38903  0061D0  AFB5               	btfss	(_prec+1)& (0+255),7,b
 38904                           
 38905                           ; BSR set to: 0
 38906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 38907  0061D2  93B6               	bcf	_flags& (0+255),1,b
 38908                           
 38909                           ; BSR set to: 0
 38910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 38911  0061D4  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 38912  0061D6  D005               	goto	i2u1733_40
 38913  0061D8  51B5               	movf	(_prec+1)& (0+255),w,b
 38914  0061DA  E108               	bnz	i2l3109
 38915  0061DC  05B4               	decf	_prec& (0+255),w,b
 38916  0061DE  B0D8               	btfsc	status,0,c
 38917  0061E0  D005               	goto	i2l3109
 38918  0061E2                     i2u1733_40:
 38919                           
 38920                           ; BSR set to: 0
 38921  0061E2  0E00               	movlw	0
 38922  0061E4  6E33               	movwf	(i2dtoa@p+1)^0,c
 38923  0061E6  0E01               	movlw	1
 38924  0061E8  6E32               	movwf	i2dtoa@p^0,c
 38925  0061EA  D006               	goto	i2l3111
 38926  0061EC                     i2l3109:
 38927                           
 38928                           ; BSR set to: 0
 38929  0061EC  0060  F2D0  F032   	movff	_prec,i2dtoa@p
 38930  0061F2  0060  F2D4  F033   	movff	_prec+1,i2dtoa@p+1
 38931  0061F8                     i2l3111:
 38932                           
 38933                           ; BSR set to: 0
 38934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 38935  0061F8  0060  F2C8  F034   	movff	_width,i2dtoa@w
 38936  0061FE  0060  F2CC  F035   	movff	_width+1,i2dtoa@w+1
 38937                           
 38938                           ; BSR set to: 0
 38939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 38940  006204  5036               	movf	i2dtoa@s^0,w,c
 38941  006206  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38942  006208  A4D8               	btfss	status,2,c
 38943  00620A  D002               	goto	i2u1735_40
 38944                           
 38945                           ; BSR set to: 0
 38946  00620C  A5B6               	btfss	_flags& (0+255),2,b
 38947  00620E  D003               	goto	i2l16877
 38948  006210                     i2u1735_40:
 38949                           
 38950                           ; BSR set to: 0
 38951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 38952  006210  0634               	decf	i2dtoa@w^0,f,c
 38953  006212  A0D8               	btfss	status,0,c
 38954  006214  0635               	decf	(i2dtoa@w+1)^0,f,c
 38955  006216                     i2l16877:
 38956                           
 38957                           ; BSR set to: 0
 38958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 38959  006216  0E00               	movlw	0
 38960  006218  6E41               	movwf	(i2dtoa@i+1)^0,c
 38961  00621A  0E1F               	movlw	31
 38962  00621C  6E40               	movwf	i2dtoa@i^0,c
 38963                           
 38964                           ; BSR set to: 0
 38965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 38966  00621E  0E00               	movlw	0
 38967  006220  0102               	movlb	2	; () banked
 38968  006222  6F7A               	movwf	(_dbuf+31)& (0+255),b
 38969                           
 38970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38971  006224  D09E               	goto	i2l16891
 38972  006226                     i2l16881:
 38973                           
 38974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 38975  006226  0640               	decf	i2dtoa@i^0,f,c
 38976  006228  A0D8               	btfss	status,0,c
 38977  00622A  0641               	decf	(i2dtoa@i+1)^0,f,c
 38978                           
 38979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 38980  00622C  0E5B               	movlw	low _dbuf
 38981  00622E  2440               	addwf	i2dtoa@i^0,w,c
 38982  006230  6ED9               	movwf	fsr2l,c
 38983  006232  0E02               	movlw	high _dbuf
 38984  006234  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38985  006236  6EDA               	movwf	fsr2h,c
 38986  006238  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 38987  00623E  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 38988  006244  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 38989  00624A  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 38990  006250  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 38991  006256  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 38992  00625C  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 38993  006262  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 38994  006268  0E0A               	movlw	10
 38995  00626A  6E09               	movwf	i2___aomod@divisor^0,c
 38996  00626C  0E00               	movlw	0
 38997  00626E  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 38998  006270  0E00               	movlw	0
 38999  006272  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 39000  006274  0E00               	movlw	0
 39001  006276  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 39002  006278  0E00               	movlw	0
 39003  00627A  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 39004  00627C  0E00               	movlw	0
 39005  00627E  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 39006  006280  0E00               	movlw	0
 39007  006282  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 39008  006284  0E00               	movlw	0
 39009  006286  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 39010  006288  EC18  F03C         	call	i2___aomod	;wreg free
 39011  00628C  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 39012  006292  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 39013  006298  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 39014  00629E  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 39015  0062A4  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 39016  0062AA  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 39017  0062B0  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 39018  0062B6  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 39019  0062BC  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 39020  0062C2  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 39021  0062C8  EC8E  F04C         	call	i2_abs	;wreg free
 39022  0062CC  5013               	movf	?i2_abs^0,w,c
 39023  0062CE  0F30               	addlw	48
 39024  0062D0  6EDF               	movwf	indf2,c
 39025                           
 39026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 39027  0062D2  0632               	decf	i2dtoa@p^0,f,c
 39028  0062D4  A0D8               	btfss	status,0,c
 39029  0062D6  0633               	decf	(i2dtoa@p+1)^0,f,c
 39030                           
 39031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 39032  0062D8  0634               	decf	i2dtoa@w^0,f,c
 39033  0062DA  A0D8               	btfss	status,0,c
 39034  0062DC  0635               	decf	(i2dtoa@w+1)^0,f,c
 39035                           
 39036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 39037  0062DE  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 39038  0062E4  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 39039  0062EA  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 39040  0062F0  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 39041  0062F6  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 39042  0062FC  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 39043  006302  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 39044  006308  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 39045  00630E  0E0A               	movlw	10
 39046  006310  6E09               	movwf	i2___aodiv@divisor^0,c
 39047  006312  0E00               	movlw	0
 39048  006314  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 39049  006316  0E00               	movlw	0
 39050  006318  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 39051  00631A  0E00               	movlw	0
 39052  00631C  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 39053  00631E  0E00               	movlw	0
 39054  006320  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 39055  006322  0E00               	movlw	0
 39056  006324  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 39057  006326  0E00               	movlw	0
 39058  006328  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 39059  00632A  0E00               	movlw	0
 39060  00632C  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 39061  00632E  ECD2  F03A         	call	i2___aodiv	;wreg free
 39062  006332  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 39063  006338  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 39064  00633E  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 39065  006344  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 39066  00634A  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 39067  006350  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 39068  006356  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 39069  00635C  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 39070  006362                     i2l16891:
 39071                           
 39072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 39073  006362  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 39074  006364  D020               	goto	i2u1740_40
 39075  006366  5041               	movf	(i2dtoa@i+1)^0,w,c
 39076  006368  E103               	bnz	i2u1736_40
 39077  00636A  0440               	decf	i2dtoa@i^0,w,c
 39078  00636C  A0D8               	btfss	status,0,c
 39079  00636E  D01B               	goto	i2u1740_40
 39080  006370                     i2u1736_40:
 39081  006370  5038               	movf	i2dtoa@n^0,w,c
 39082  006372  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 39083  006374  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 39084  006376  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 39085  006378  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 39086  00637A  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 39087  00637C  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 39088  00637E  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 39089  006380  A4D8               	btfss	status,2,c
 39090  006382  D751               	goto	i2l16881
 39091  006384  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 39092  006386  D005               	goto	i2u1738_40
 39093  006388  5033               	movf	(i2dtoa@p+1)^0,w,c
 39094  00638A  E102               	bnz	i2u1738_41
 39095  00638C  0432               	decf	i2dtoa@p^0,w,c
 39096  00638E  B0D8               	btfsc	status,0,c
 39097  006390                     i2u1738_41:
 39098  006390  D74A               	goto	i2l16881
 39099  006392                     i2u1738_40:
 39100  006392  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 39101  006394  D008               	goto	i2u1740_40
 39102  006396  5035               	movf	(i2dtoa@w+1)^0,w,c
 39103  006398  E103               	bnz	i2u1739_40
 39104  00639A  0434               	decf	i2dtoa@w^0,w,c
 39105  00639C  A0D8               	btfss	status,0,c
 39106  00639E  D003               	goto	i2u1740_40
 39107  0063A0                     i2u1739_40:
 39108  0063A0  0100               	movlb	0	; () banked
 39109  0063A2  B3B6               	btfsc	_flags& (0+255),1,b
 39110  0063A4  D740               	goto	i2l16881
 39111  0063A6                     i2u1740_40:
 39112                           
 39113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 39114  0063A6  5036               	movf	i2dtoa@s^0,w,c
 39115  0063A8  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 39116  0063AA  A4D8               	btfss	status,2,c
 39117  0063AC  D003               	goto	i2u1742_40
 39118  0063AE  0100               	movlb	0	; () banked
 39119  0063B0  A5B6               	btfss	_flags& (0+255),2,b
 39120  0063B2  D018               	goto	i2l16915
 39121  0063B4                     i2u1742_40:
 39122                           
 39123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 39124  0063B4  0640               	decf	i2dtoa@i^0,f,c
 39125  0063B6  A0D8               	btfss	status,0,c
 39126  0063B8  0641               	decf	(i2dtoa@i+1)^0,f,c
 39127                           
 39128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 39129  0063BA  5036               	movf	i2dtoa@s^0,w,c
 39130  0063BC  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 39131  0063BE  A4D8               	btfss	status,2,c
 39132  0063C0  D004               	goto	i2l16911
 39133  0063C2  0E00               	movlw	0
 39134  0063C4  6E31               	movwf	(i2_dtoa$4899+1)^0,c
 39135  0063C6  0E2B               	movlw	43
 39136  0063C8  D003               	goto	L63
 39137  0063CA                     i2l16911:
 39138  0063CA  0E00               	movlw	0
 39139  0063CC  6E31               	movwf	(i2_dtoa$4899+1)^0,c
 39140  0063CE  0E2D               	movlw	45
 39141  0063D0                     L63:
 39142  0063D0  6E30               	movwf	i2_dtoa$4899^0,c
 39143  0063D2  0E5B               	movlw	low _dbuf
 39144  0063D4  2440               	addwf	i2dtoa@i^0,w,c
 39145  0063D6  6ED9               	movwf	fsr2l,c
 39146  0063D8  0E02               	movlw	high _dbuf
 39147  0063DA  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 39148  0063DC  6EDA               	movwf	fsr2h,c
 39149  0063DE  0060  F0C3  FFDF   	movff	i2_dtoa$4899,indf2
 39150  0063E4                     i2l16915:
 39151                           
 39152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 39153  0063E4  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 39154  0063EA  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 39155  0063F0  0E5B               	movlw	low _dbuf
 39156  0063F2  2440               	addwf	i2dtoa@i^0,w,c
 39157  0063F4  6E15               	movwf	i2pad@buf^0,c
 39158  0063F6  0E02               	movlw	high _dbuf
 39159  0063F8  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 39160  0063FA  6E16               	movwf	(i2pad@buf+1)^0,c
 39161  0063FC  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 39162  006402  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 39163  006408  ECC5  F040         	call	i2_pad	;wreg free
 39164  00640C  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 39165  006412  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 39166  006418  0012               	return		;funcret
 39167  00641A                     __end_ofi2_dtoa:
 39168                           	opt callstack 0
 39169                           
 39170 ;; *************** function i2_pad *****************
 39171 ;; Defined at:
 39172 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 39173 ;; Parameters:    Size  Location     Type
 39174 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 39175 ;;		 -> sprintf@f(6), NULL(0), 
 39176 ;;  buf             2   20[COMRAM] PTR unsigned char 
 39177 ;;		 -> dbuf(32), 
 39178 ;;  p               2   22[COMRAM] int 
 39179 ;; Auto vars:     Size  Location     Type
 39180 ;;  pad             2   27[COMRAM] int 
 39181 ;;  pad             2   25[COMRAM] int 
 39182 ;; Return value:  Size  Location     Type
 39183 ;;                  2   18[COMRAM] int 
 39184 ;; Registers used:
 39185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39186 ;; Tracked objects:
 39187 ;;		On entry : 0/0
 39188 ;;		On exit  : 0/0
 39189 ;;		Unchanged: 0/0
 39190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39191 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39194 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39195 ;;Total ram usage:       11 bytes
 39196 ;; Hardware stack levels used:    1
 39197 ;; Hardware stack levels required when called:    4
 39198 ;; This function calls:
 39199 ;;		i2_fputc
 39200 ;;		i2_fputs
 39201 ;;		i2_strlen
 39202 ;; This function is called by:
 39203 ;;		i2_dtoa
 39204 ;;		i2_xtoa
 39205 ;; This function uses a non-reentrant model
 39206 ;;
 39207                           
 39208                           	psect	text232
 39209  00818A                     __ptext232:
 39210                           	opt callstack 0
 39211  00818A                     i2_pad:
 39212                           	opt callstack 1
 39213                           
 39214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 39215                           
 39216                           ;incstack = 0
 39217  00818A  0100               	movlb	0	; () banked
 39218  00818C  A1B6               	btfss	_flags& (0+255),0,b
 39219  00818E  D00E               	goto	i2l16605
 39220                           
 39221                           ; BSR set to: 0
 39222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 39223  008190  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 39224  008196  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 39225  00819C  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 39226  0081A2  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 39227  0081A8  EC6F  F04C         	call	i2_fputs	;wreg free
 39228  0081AC                     i2l16605:
 39229                           
 39230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 39231  0081AC  BE18               	btfsc	(i2pad@p+1)^0,7,c
 39232  0081AE  D007               	goto	i2l16609
 39233  0081B0  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 39234  0081B6  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 39235  0081BC  D004               	goto	i2l3098
 39236  0081BE                     i2l16609:
 39237  0081BE  0E00               	movlw	0
 39238  0081C0  6E1D               	movwf	(i2pad@w+1)^0,c
 39239  0081C2  0E00               	movlw	0
 39240  0081C4  6E1C               	movwf	i2pad@w^0,c
 39241  0081C6                     i2l3098:
 39242                           
 39243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 39244  0081C6  0E00               	movlw	0
 39245  0081C8  6E1B               	movwf	(i2pad@i+1)^0,c
 39246  0081CA  0E00               	movlw	0
 39247  0081CC  6E1A               	movwf	i2pad@i^0,c
 39248                           
 39249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 39250  0081CE  D00E               	goto	i2l16615
 39251  0081D0                     i2l16611:
 39252                           
 39253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 39254  0081D0  0E00               	movlw	0
 39255  0081D2  6E04               	movwf	(i2fputc@c+1)^0,c
 39256  0081D4  0E20               	movlw	32
 39257  0081D6  6E03               	movwf	i2fputc@c^0,c
 39258  0081D8  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 39259  0081DE  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 39260  0081E4  EC29  F042         	call	i2_fputc	;wreg free
 39261                           
 39262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 39263  0081E8  4A1A               	infsnz	i2pad@i^0,f,c
 39264  0081EA  2A1B               	incf	(i2pad@i+1)^0,f,c
 39265  0081EC                     i2l16615:
 39266                           
 39267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 39268  0081EC  501C               	movf	i2pad@w^0,w,c
 39269  0081EE  5C1A               	subwf	i2pad@i^0,w,c
 39270  0081F0  501B               	movf	(i2pad@i+1)^0,w,c
 39271  0081F2  0A80               	xorlw	128
 39272  0081F4  6E19               	movwf	??i2_pad^0,c
 39273  0081F6  501D               	movf	(i2pad@w+1)^0,w,c
 39274  0081F8  0A80               	xorlw	128
 39275  0081FA  5819               	subwfb	??i2_pad^0,w,c
 39276  0081FC  A0D8               	btfss	status,0,c
 39277  0081FE  D7E8               	goto	i2l16611
 39278                           
 39279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 39280  008200  0100               	movlb	0	; () banked
 39281  008202  B1B6               	btfsc	_flags& (0+255),0,b
 39282  008204  D00E               	goto	i2l16619
 39283                           
 39284                           ; BSR set to: 0
 39285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 39286  008206  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 39287  00820C  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 39288  008212  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 39289  008218  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 39290  00821E  EC6F  F04C         	call	i2_fputs	;wreg free
 39291  008222                     i2l16619:
 39292                           
 39293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 39294  008222  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 39295  008228  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 39296  00822E  ECCB  F04E         	call	i2_strlen	;wreg free
 39297  008232  501C               	movf	i2pad@w^0,w,c
 39298  008234  2401               	addwf	?i2_strlen^0,w,c
 39299  008236  6E13               	movwf	?i2_pad^0,c
 39300  008238  501D               	movf	(i2pad@w+1)^0,w,c
 39301  00823A  2002               	addwfc	(?i2_strlen+1)^0,w,c
 39302  00823C  6E14               	movwf	(?i2_pad+1)^0,c
 39303  00823E  0012               	return		;funcret
 39304  008240                     __end_ofi2_pad:
 39305                           	opt callstack 0
 39306                           
 39307 ;; *************** function i2_strlen *****************
 39308 ;; Defined at:
 39309 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 39310 ;; Parameters:    Size  Location     Type
 39311 ;;  s               2    0[COMRAM] PTR const unsigned char 
 39312 ;;		 -> dbuf(32), 
 39313 ;; Auto vars:     Size  Location     Type
 39314 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 39315 ;;		 -> dbuf(32), 
 39316 ;; Return value:  Size  Location     Type
 39317 ;;                  2    0[COMRAM] unsigned int 
 39318 ;; Registers used:
 39319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39320 ;; Tracked objects:
 39321 ;;		On entry : 0/0
 39322 ;;		On exit  : 0/0
 39323 ;;		Unchanged: 0/0
 39324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39329 ;;Total ram usage:        4 bytes
 39330 ;; Hardware stack levels used:    1
 39331 ;; This function calls:
 39332 ;;		Nothing
 39333 ;; This function is called by:
 39334 ;;		i2_pad
 39335 ;; This function uses a non-reentrant model
 39336 ;;
 39337                           
 39338                           	psect	text233
 39339  009D96                     __ptext233:
 39340                           	opt callstack 0
 39341  009D96                     i2_strlen:
 39342                           	opt callstack 4
 39343                           
 39344                           ;incstack = 0
 39345  009D96  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 39346  009D9C  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 39347  009DA2  D002               	goto	i2l16421
 39348  009DA4                     i2l16419:
 39349  009DA4  4A01               	infsnz	i2strlen@s^0,f,c
 39350  009DA6  2A02               	incf	(i2strlen@s+1)^0,f,c
 39351  009DA8                     i2l16421:
 39352  009DA8  0060  F007  FFD9   	movff	i2strlen@s,fsr2l
 39353  009DAE  0060  F00B  FFDA   	movff	i2strlen@s+1,fsr2h
 39354  009DB4  50DF               	movf	indf2,w,c
 39355  009DB6  A4D8               	btfss	status,2,c
 39356  009DB8  D7F5               	goto	i2l16419
 39357  009DBA  5003               	movf	i2strlen@a^0,w,c
 39358  009DBC  5C01               	subwf	i2strlen@s^0,w,c
 39359  009DBE  6E01               	movwf	?i2_strlen^0,c
 39360  009DC0  5004               	movf	(i2strlen@a+1)^0,w,c
 39361  009DC2  5802               	subwfb	(i2strlen@s+1)^0,w,c
 39362  009DC4  6E02               	movwf	(?i2_strlen+1)^0,c
 39363  009DC6  0012               	return		;funcret
 39364  009DC8                     __end_ofi2_strlen:
 39365                           	opt callstack 0
 39366                           
 39367 ;; *************** function i2_fputs *****************
 39368 ;; Defined at:
 39369 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 39370 ;; Parameters:    Size  Location     Type
 39371 ;;  s               2   11[COMRAM] PTR const unsigned char 
 39372 ;;		 -> dbuf(32), 
 39373 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 39374 ;;		 -> sprintf@f(6), NULL(0), 
 39375 ;; Auto vars:     Size  Location     Type
 39376 ;;  fputs           2   16[COMRAM] int 
 39377 ;;  fputs           1   15[COMRAM] unsigned char 
 39378 ;; Return value:  Size  Location     Type
 39379 ;;                  2   11[COMRAM] int 
 39380 ;; Registers used:
 39381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39382 ;; Tracked objects:
 39383 ;;		On entry : 3F/0
 39384 ;;		On exit  : 0/0
 39385 ;;		Unchanged: 0/0
 39386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39388 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39390 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39391 ;;Total ram usage:        7 bytes
 39392 ;; Hardware stack levels used:    1
 39393 ;; Hardware stack levels required when called:    3
 39394 ;; This function calls:
 39395 ;;		i2_fputc
 39396 ;; This function is called by:
 39397 ;;		i2_pad
 39398 ;; This function uses a non-reentrant model
 39399 ;;
 39400                           
 39401                           	psect	text234
 39402  0098DE                     __ptext234:
 39403                           	opt callstack 0
 39404  0098DE                     i2_fputs:
 39405                           	opt callstack 1
 39406                           
 39407                           ; BSR set to: 0
 39408                           
 39409                           ;incstack = 0
 39410  0098DE  0E00               	movlw	0
 39411  0098E0  6E12               	movwf	(i2fputs@i+1)^0,c
 39412  0098E2  0E00               	movlw	0
 39413  0098E4  6E11               	movwf	i2fputs@i^0,c
 39414  0098E6  D00E               	goto	i2l16415
 39415  0098E8                     i2l16411:
 39416  0098E8  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 39417  0098EE  6A04               	clrf	(i2fputc@c+1)^0,c
 39418  0098F0  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 39419  0098F6  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 39420  0098FC  EC29  F042         	call	i2_fputc	;wreg free
 39421  009900  4A11               	infsnz	i2fputs@i^0,f,c
 39422  009902  2A12               	incf	(i2fputs@i+1)^0,f,c
 39423  009904                     i2l16415:
 39424  009904  5011               	movf	i2fputs@i^0,w,c
 39425  009906  240C               	addwf	i2fputs@s^0,w,c
 39426  009908  6ED9               	movwf	fsr2l,c
 39427  00990A  5012               	movf	(i2fputs@i+1)^0,w,c
 39428  00990C  200D               	addwfc	(i2fputs@s+1)^0,w,c
 39429  00990E  6EDA               	movwf	fsr2h,c
 39430  009910  50DF               	movf	indf2,w,c
 39431  009912  6E10               	movwf	i2fputs@c^0,c
 39432  009914  5010               	movf	i2fputs@c^0,w,c
 39433  009916  B4D8               	btfsc	status,2,c
 39434  009918  0012               	return	
 39435  00991A  D7E6               	goto	i2l16411
 39436  00991C                     __end_ofi2_fputs:
 39437                           	opt callstack 0
 39438                           
 39439 ;; *************** function i2_fputc *****************
 39440 ;; Defined at:
 39441 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 39442 ;; Parameters:    Size  Location     Type
 39443 ;;  c               2    2[COMRAM] int 
 39444 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 39445 ;;		 -> sprintf@f(6), NULL(0), 
 39446 ;; Auto vars:     Size  Location     Type
 39447 ;;		None
 39448 ;; Return value:  Size  Location     Type
 39449 ;;                  2    2[COMRAM] int 
 39450 ;; Registers used:
 39451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39452 ;; Tracked objects:
 39453 ;;		On entry : 0/0
 39454 ;;		On exit  : 0/0
 39455 ;;		Unchanged: 0/0
 39456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39459 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39460 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39461 ;;Total ram usage:        9 bytes
 39462 ;; Hardware stack levels used:    1
 39463 ;; Hardware stack levels required when called:    2
 39464 ;; This function calls:
 39465 ;;		i2_putch
 39466 ;; This function is called by:
 39467 ;;		i2_pad
 39468 ;;		i2_vfpfcnvrt
 39469 ;;		i2_fputs
 39470 ;; This function uses a non-reentrant model
 39471 ;;
 39472                           
 39473                           	psect	text235
 39474  008452                     __ptext235:
 39475                           	opt callstack 0
 39476  008452                     i2_fputc:
 39477                           	opt callstack 1
 39478                           
 39479                           ;incstack = 0
 39480  008452  5005               	movf	i2fputc@fp^0,w,c
 39481  008454  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 39482  008456  B4D8               	btfsc	status,2,c
 39483  008458  D004               	goto	i2u1612_40
 39484  00845A  5005               	movf	i2fputc@fp^0,w,c
 39485  00845C  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 39486  00845E  A4D8               	btfss	status,2,c
 39487  008460  D004               	goto	i2l16255
 39488  008462                     i2u1612_40:
 39489  008462  5003               	movf	i2fputc@c^0,w,c
 39490  008464  ECC2  F052         	call	i2_putch
 39491  008468  0012               	return	
 39492  00846A                     i2l16255:
 39493  00846A  EE20 F004          	lfsr	2,4
 39494  00846E  5005               	movf	i2fputc@fp^0,w,c
 39495  008470  26D9               	addwf	fsr2l,f,c
 39496  008472  5006               	movf	(i2fputc@fp+1)^0,w,c
 39497  008474  22DA               	addwfc	fsr2h,f,c
 39498  008476  50DE               	movf	postinc2,w,c
 39499  008478  10DE               	iorwf	postinc2,w,c
 39500  00847A  B4D8               	btfsc	status,2,c
 39501  00847C  D016               	goto	i2u1614_40
 39502  00847E  EE20 F004          	lfsr	2,4
 39503  008482  5005               	movf	i2fputc@fp^0,w,c
 39504  008484  26D9               	addwf	fsr2l,f,c
 39505  008486  5006               	movf	(i2fputc@fp+1)^0,w,c
 39506  008488  22DA               	addwfc	fsr2h,f,c
 39507  00848A  EE10 F002          	lfsr	1,2
 39508  00848E  5005               	movf	i2fputc@fp^0,w,c
 39509  008490  26E1               	addwf	fsr1l,f,c
 39510  008492  5006               	movf	(i2fputc@fp+1)^0,w,c
 39511  008494  22E2               	addwfc	fsr1h,f,c
 39512  008496  50DE               	movf	postinc2,w,c
 39513  008498  5CE6               	subwf	postinc1,w,c
 39514  00849A  50E6               	movf	postinc1,w,c
 39515  00849C  0A80               	xorlw	128
 39516  00849E  6E0B               	movwf	(??i2_fputc+4)^0,c
 39517  0084A0  50DE               	movf	postinc2,w,c
 39518  0084A2  0A80               	xorlw	128
 39519  0084A4  580B               	subwfb	(??i2_fputc+4)^0,w,c
 39520  0084A6  B0D8               	btfsc	status,0,c
 39521  0084A8  0012               	return	
 39522  0084AA                     i2u1614_40:
 39523  0084AA  EE20 F002          	lfsr	2,2
 39524  0084AE  5005               	movf	i2fputc@fp^0,w,c
 39525  0084B0  26D9               	addwf	fsr2l,f,c
 39526  0084B2  5006               	movf	(i2fputc@fp+1)^0,w,c
 39527  0084B4  22DA               	addwfc	fsr2h,f,c
 39528  0084B6  006F FF78  F007    	movff	postinc2,??i2_fputc
 39529  0084BC  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 39530  0084C2  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 39531  0084C8  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 39532  0084CE  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 39533  0084D4  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 39534  0084DA  5007               	movf	??i2_fputc^0,w,c
 39535  0084DC  2409               	addwf	(??i2_fputc+2)^0,w,c
 39536  0084DE  6ED9               	movwf	fsr2l,c
 39537  0084E0  5008               	movf	(??i2_fputc+1)^0,w,c
 39538  0084E2  200A               	addwfc	(??i2_fputc+3)^0,w,c
 39539  0084E4  6EDA               	movwf	fsr2h,c
 39540  0084E6  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 39541  0084EC  EE20 F002          	lfsr	2,2
 39542  0084F0  5005               	movf	i2fputc@fp^0,w,c
 39543  0084F2  26D9               	addwf	fsr2l,f,c
 39544  0084F4  5006               	movf	(i2fputc@fp+1)^0,w,c
 39545  0084F6  22DA               	addwfc	fsr2h,f,c
 39546  0084F8  2ADE               	incf	postinc2,f,c
 39547  0084FA  0E00               	movlw	0
 39548  0084FC  22DD               	addwfc	postdec2,f,c
 39549  0084FE  0012               	return		;funcret
 39550  008500                     __end_ofi2_fputc:
 39551                           	opt callstack 0
 39552                           
 39553 ;; *************** function i2_putch *****************
 39554 ;; Defined at:
 39555 ;;		line 38 in file "main.c"
 39556 ;; Parameters:    Size  Location     Type
 39557 ;;  byte            1    wreg     unsigned char 
 39558 ;; Auto vars:     Size  Location     Type
 39559 ;;  byte            1    1[COMRAM] unsigned char 
 39560 ;; Return value:  Size  Location     Type
 39561 ;;                  1    wreg      void 
 39562 ;; Registers used:
 39563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39564 ;; Tracked objects:
 39565 ;;		On entry : 0/0
 39566 ;;		On exit  : 3F/39
 39567 ;;		Unchanged: 0/0
 39568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39573 ;;Total ram usage:        1 bytes
 39574 ;; Hardware stack levels used:    1
 39575 ;; Hardware stack levels required when called:    1
 39576 ;; This function calls:
 39577 ;;		i2_UART1_Write
 39578 ;;		i2_UART1_is_tx_ready
 39579 ;; This function is called by:
 39580 ;;		i2_fputc
 39581 ;; This function uses a non-reentrant model
 39582 ;;
 39583                           
 39584                           	psect	text236
 39585  00A584                     __ptext236:
 39586                           	opt callstack 0
 39587  00A584                     i2_putch:
 39588                           	opt callstack 1
 39589                           
 39590                           ;incstack = 0
 39591                           ;i2putch@byte stored from wreg
 39592  00A584  6E02               	movwf	i2putch@byte^0,c
 39593  00A586                     
 39594                           ;main.c: 39:     while (!UART1_is_tx_ready());
 39595  00A586  EC21  F053         	call	i2_UART1_is_tx_ready	;wreg free
 39596  00A58A  0900               	iorlw	0
 39597  00A58C  B4D8               	btfsc	status,2,c
 39598  00A58E  D7FB               	goto	i2l16221
 39599                           
 39600                           ; BSR set to: 0
 39601                           ;main.c: 40:     UART1_Write(byte);
 39602  00A590  5002               	movf	i2putch@byte^0,w,c
 39603  00A592  ECEF  F04B         	call	i2_UART1_Write
 39604                           
 39605                           ; BSR set to: 57
 39606  00A596  0012               	return		;funcret
 39607  00A598                     __end_ofi2_putch:
 39608                           	opt callstack 0
 39609                           
 39610 ;; *************** function i2_UART1_is_tx_ready *****************
 39611 ;; Defined at:
 39612 ;;		line 152 in file "mcc_generated_files/uart1.c"
 39613 ;; Parameters:    Size  Location     Type
 39614 ;;		None
 39615 ;; Auto vars:     Size  Location     Type
 39616 ;;		None
 39617 ;; Return value:  Size  Location     Type
 39618 ;;                  1    wreg      _Bool 
 39619 ;; Registers used:
 39620 ;;		wreg, status,2
 39621 ;; Tracked objects:
 39622 ;;		On entry : 0/0
 39623 ;;		On exit  : 3F/0
 39624 ;;		Unchanged: 0/0
 39625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39630 ;;Total ram usage:        0 bytes
 39631 ;; Hardware stack levels used:    1
 39632 ;; This function calls:
 39633 ;;		Nothing
 39634 ;; This function is called by:
 39635 ;;		i2_putch
 39636 ;; This function uses a non-reentrant model
 39637 ;;
 39638                           
 39639                           	psect	text237
 39640  00A642                     __ptext237:
 39641                           	opt callstack 0
 39642  00A642                     i2_UART1_is_tx_ready:
 39643                           	opt callstack 1
 39644                           
 39645                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 39646                           
 39647                           ; BSR set to: 57
 39648                           ;incstack = 0
 39649  00A642  0100               	movlb	0	; () banked
 39650  00A644  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39651  00A646  B4D8               	btfsc	status,2,c
 39652  00A648  D002               	goto	i2u1597_40
 39653  00A64A  0E01               	movlw	1
 39654  00A64C  0012               	return	
 39655  00A64E                     i2u1597_40:
 39656  00A64E  0E00               	movlw	0
 39657                           
 39658                           ; BSR set to: 0
 39659  00A650  0012               	return		;funcret
 39660  00A652                     __end_ofi2_UART1_is_tx_ready:
 39661                           	opt callstack 0
 39662                           
 39663 ;; *************** function i2_UART1_Write *****************
 39664 ;; Defined at:
 39665 ;;		line 191 in file "mcc_generated_files/uart1.c"
 39666 ;; Parameters:    Size  Location     Type
 39667 ;;  txData          1    wreg     unsigned char 
 39668 ;; Auto vars:     Size  Location     Type
 39669 ;;  txData          1    0[COMRAM] unsigned char 
 39670 ;; Return value:  Size  Location     Type
 39671 ;;                  1    wreg      void 
 39672 ;; Registers used:
 39673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39674 ;; Tracked objects:
 39675 ;;		On entry : 3F/0
 39676 ;;		On exit  : 3F/39
 39677 ;;		Unchanged: 0/0
 39678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39683 ;;Total ram usage:        1 bytes
 39684 ;; Hardware stack levels used:    1
 39685 ;; This function calls:
 39686 ;;		Nothing
 39687 ;; This function is called by:
 39688 ;;		i2_putch
 39689 ;; This function uses a non-reentrant model
 39690 ;;
 39691                           
 39692                           	psect	text238
 39693  0097DE                     __ptext238:
 39694                           	opt callstack 0
 39695  0097DE                     i2_UART1_Write:
 39696                           	opt callstack 1
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;incstack = 0
 39700                           ;i2UART1_Write@txData stored from wreg
 39701  0097DE  6E01               	movwf	i2UART1_Write@txData^0,c
 39702  0097E0                     
 39703                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39704                           
 39705                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39706  0097E0  0100               	movlb	0	; () banked
 39707  0097E2  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39708  0097E4  B4D8               	btfsc	status,2,c
 39709  0097E6  D7FC               	goto	i2l16189
 39710                           
 39711                           ; BSR set to: 0
 39712                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 39713  0097E8  0139               	movlb	57	; () banked
 39714  0097EA  B993               	btfsc	147,4,b	;volatile
 39715  0097EC  D004               	goto	i2l456
 39716                           
 39717                           ; BSR set to: 57
 39718                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 39719  0097EE  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 39720                           
 39721                           ;mcc_generated_files/uart1.c: 200:     }
 39722  0097F4  D012               	goto	i2l16205
 39723  0097F6                     i2l456:
 39724                           
 39725                           ; BSR set to: 57
 39726                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 39727  0097F6  9993               	bcf	147,4,b	;volatile
 39728                           
 39729                           ; BSR set to: 57
 39730                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 39731  0097F8  0E50               	movlw	low _uart1TxBuffer
 39732  0097FA  0100               	movlb	0	; () banked
 39733  0097FC  25D3               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 39734  0097FE  6ED9               	movwf	fsr2l,c
 39735  009800  6ADA               	clrf	fsr2h,c
 39736  009802  0E03               	movlw	high _uart1TxBuffer
 39737  009804  22DA               	addwfc	fsr2h,f,c
 39738  009806  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 39739                           
 39740                           ; BSR set to: 0
 39741  00980C  2BD3               	incf	_uart1TxHead& (0+255),f,b	;volatile
 39742                           
 39743                           ; BSR set to: 0
 39744                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 39745  00980E  0E3F               	movlw	63
 39746  009810  65D3               	cpfsgt	_uart1TxHead& (0+255),b
 39747  009812  D002               	goto	i2l16203
 39748                           
 39749                           ; BSR set to: 0
 39750                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 39751  009814  0E00               	movlw	0
 39752  009816  6FD3               	movwf	_uart1TxHead& (0+255),b	;volatile
 39753  009818                     i2l16203:
 39754                           
 39755                           ; BSR set to: 0
 39756                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 39757  009818  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 39758  00981A                     i2l16205:
 39759                           
 39760                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 39761  00981A  0139               	movlb	57	; () banked
 39762  00981C  8993               	bsf	147,4,b	;volatile
 39763                           
 39764                           ; BSR set to: 57
 39765  00981E  0012               	return		;funcret
 39766  009820                     __end_ofi2_UART1_Write:
 39767                           	opt callstack 0
 39768                           
 39769 ;; *************** function i2_abs *****************
 39770 ;; Defined at:
 39771 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 39772 ;; Parameters:    Size  Location     Type
 39773 ;;  a               2   18[COMRAM] int 
 39774 ;; Auto vars:     Size  Location     Type
 39775 ;;		None
 39776 ;; Return value:  Size  Location     Type
 39777 ;;                  2   18[COMRAM] int 
 39778 ;; Registers used:
 39779 ;;		wreg, status,2, status,0
 39780 ;; Tracked objects:
 39781 ;;		On entry : 0/2
 39782 ;;		On exit  : 0/0
 39783 ;;		Unchanged: 0/0
 39784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39789 ;;Total ram usage:        4 bytes
 39790 ;; Hardware stack levels used:    1
 39791 ;; This function calls:
 39792 ;;		Nothing
 39793 ;; This function is called by:
 39794 ;;		i2_dtoa
 39795 ;; This function uses a non-reentrant model
 39796 ;;
 39797                           
 39798                           	psect	text239
 39799  00991C                     __ptext239:
 39800                           	opt callstack 0
 39801  00991C                     i2_abs:
 39802                           	opt callstack 5
 39803                           
 39804                           ; BSR set to: 57
 39805                           ;incstack = 0
 39806  00991C  BE14               	btfsc	(i2abs@a+1)^0,7,c
 39807  00991E  D005               	goto	i2u1704_40
 39808  009920  5014               	movf	(i2abs@a+1)^0,w,c
 39809  009922  E114               	bnz	i2l3876
 39810  009924  0413               	decf	i2abs@a^0,w,c
 39811  009926  B0D8               	btfsc	status,0,c
 39812  009928  D011               	goto	i2l3876
 39813  00992A                     i2u1704_40:
 39814  00992A  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 39815  009930  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 39816  009936  1E15               	comf	??i2_abs^0,f,c
 39817  009938  1E16               	comf	(??i2_abs+1)^0,f,c
 39818  00993A  4A15               	infsnz	??i2_abs^0,f,c
 39819  00993C  2A16               	incf	(??i2_abs+1)^0,f,c
 39820  00993E  0060  F054  F013   	movff	??i2_abs,?i2_abs
 39821  009944  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 39822  00994A  0012               	return	
 39823  00994C                     i2l3876:
 39824  00994C  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 39825  009952  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 39826  009958  0012               	return		;funcret
 39827  00995A                     __end_ofi2_abs:
 39828                           	opt callstack 0
 39829                           
 39830 ;; *************** function i2___aomod *****************
 39831 ;; Defined at:
 39832 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 39833 ;; Parameters:    Size  Location     Type
 39834 ;;  dividend        8    0[COMRAM] long long 
 39835 ;;  divisor         8    8[COMRAM] long long 
 39836 ;; Auto vars:     Size  Location     Type
 39837 ;;  __aomod         1   17[COMRAM] unsigned char 
 39838 ;;  __aomod         1   16[COMRAM] unsigned char 
 39839 ;; Return value:  Size  Location     Type
 39840 ;;                  8    0[COMRAM] long long 
 39841 ;; Registers used:
 39842 ;;		wreg, status,2, status,0
 39843 ;; Tracked objects:
 39844 ;;		On entry : 0/2
 39845 ;;		On exit  : 0/0
 39846 ;;		Unchanged: 0/0
 39847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39848 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39851 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39852 ;;Total ram usage:       18 bytes
 39853 ;; Hardware stack levels used:    1
 39854 ;; This function calls:
 39855 ;;		Nothing
 39856 ;; This function is called by:
 39857 ;;		i2_dtoa
 39858 ;; This function uses a non-reentrant model
 39859 ;;
 39860                           
 39861                           	psect	text240
 39862  007830                     __ptext240:
 39863                           	opt callstack 0
 39864  007830                     i2___aomod:
 39865                           	opt callstack 5
 39866                           
 39867                           ;incstack = 0
 39868  007830  0E00               	movlw	0
 39869  007832  6E12               	movwf	i2___aomod@sign^0,c
 39870  007834  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 39871  007836  D012               	goto	i2l16681
 39872  007838  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39873  00783A  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39874  00783C  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39875  00783E  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39876  007840  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39877  007842  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39878  007844  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39879  007846  6C01               	negf	i2___aomod@dividend^0,c
 39880  007848  0E00               	movlw	0
 39881  00784A  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39882  00784C  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39883  00784E  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 39884  007850  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 39885  007852  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 39886  007854  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 39887  007856  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 39888  007858  0E01               	movlw	1
 39889  00785A  6E12               	movwf	i2___aomod@sign^0,c
 39890  00785C                     i2l16681:
 39891  00785C  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39892  00785E  D010               	goto	i2l16685
 39893  007860  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 39894  007862  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 39895  007864  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 39896  007866  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 39897  007868  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 39898  00786A  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 39899  00786C  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 39900  00786E  6C09               	negf	i2___aomod@divisor^0,c
 39901  007870  0E00               	movlw	0
 39902  007872  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 39903  007874  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 39904  007876  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 39905  007878  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 39906  00787A  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 39907  00787C  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 39908  00787E  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 39909  007880                     i2l16685:
 39910  007880  5009               	movf	i2___aomod@divisor^0,w,c
 39911  007882  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 39912  007884  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 39913  007886  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 39914  007888  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 39915  00788A  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 39916  00788C  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 39917  00788E  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 39918  007890  B4D8               	btfsc	status,2,c
 39919  007892  D03C               	goto	i2l16701
 39920  007894  0E01               	movlw	1
 39921  007896  6E11               	movwf	i2___aomod@counter^0,c
 39922  007898  D00A               	goto	i2l16691
 39923  00789A                     i2l16689:
 39924  00789A  90D8               	bcf	status,0,c
 39925  00789C  3609               	rlcf	i2___aomod@divisor^0,f,c
 39926  00789E  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 39927  0078A0  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 39928  0078A2  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 39929  0078A4  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 39930  0078A6  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 39931  0078A8  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 39932  0078AA  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 39933  0078AC  2A11               	incf	i2___aomod@counter^0,f,c
 39934  0078AE                     i2l16691:
 39935  0078AE  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39936  0078B0  D7F4               	goto	i2l16689
 39937  0078B2                     i2u1701_40:
 39938  0078B2  5009               	movf	i2___aomod@divisor^0,w,c
 39939  0078B4  5C01               	subwf	i2___aomod@dividend^0,w,c
 39940  0078B6  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39941  0078B8  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 39942  0078BA  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39943  0078BC  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 39944  0078BE  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39945  0078C0  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 39946  0078C2  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39947  0078C4  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 39948  0078C6  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39949  0078C8  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 39950  0078CA  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39951  0078CC  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 39952  0078CE  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39953  0078D0  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 39954  0078D2  A0D8               	btfss	status,0,c
 39955  0078D4  D010               	goto	i2l16697
 39956  0078D6  5009               	movf	i2___aomod@divisor^0,w,c
 39957  0078D8  5E01               	subwf	i2___aomod@dividend^0,f,c
 39958  0078DA  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39959  0078DC  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 39960  0078DE  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39961  0078E0  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 39962  0078E2  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39963  0078E4  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 39964  0078E6  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39965  0078E8  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 39966  0078EA  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39967  0078EC  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 39968  0078EE  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39969  0078F0  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 39970  0078F2  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39971  0078F4  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 39972  0078F6                     i2l16697:
 39973  0078F6  90D8               	bcf	status,0,c
 39974  0078F8  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 39975  0078FA  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 39976  0078FC  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 39977  0078FE  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 39978  007900  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 39979  007902  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 39980  007904  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 39981  007906  3209               	rrcf	i2___aomod@divisor^0,f,c
 39982  007908  2E11               	decfsz	i2___aomod@counter^0,f,c
 39983  00790A  D7D3               	goto	i2u1701_40
 39984  00790C                     i2l16701:
 39985  00790C  5012               	movf	i2___aomod@sign^0,w,c
 39986  00790E  B4D8               	btfsc	status,2,c
 39987  007910  D010               	goto	i2l16705
 39988  007912  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39989  007914  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39990  007916  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39991  007918  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39992  00791A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39993  00791C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39994  00791E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39995  007920  6C01               	negf	i2___aomod@dividend^0,c
 39996  007922  0E00               	movlw	0
 39997  007924  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39998  007926  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39999  007928  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 40000  00792A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 40001  00792C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 40002  00792E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 40003  007930  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 40004  007932                     i2l16705:
 40005  007932  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 40006  007938  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 40007  00793E  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 40008  007944  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 40009  00794A  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 40010  007950  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 40011  007956  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 40012  00795C  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 40013  007962  0012               	return		;funcret
 40014  007964                     __end_ofi2___aomod:
 40015                           	opt callstack 0
 40016                           
 40017 ;; *************** function i2___aodiv *****************
 40018 ;; Defined at:
 40019 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 40020 ;; Parameters:    Size  Location     Type
 40021 ;;  dividend        8    0[COMRAM] long long 
 40022 ;;  divisor         8    8[COMRAM] long long 
 40023 ;; Auto vars:     Size  Location     Type
 40024 ;;  __aodiv         8   18[COMRAM] long long 
 40025 ;;  __aodiv         1   17[COMRAM] unsigned char 
 40026 ;;  __aodiv         1   16[COMRAM] unsigned char 
 40027 ;; Return value:  Size  Location     Type
 40028 ;;                  8    0[COMRAM] long long 
 40029 ;; Registers used:
 40030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40031 ;; Tracked objects:
 40032 ;;		On entry : 0/2
 40033 ;;		On exit  : 0/0
 40034 ;;		Unchanged: 0/0
 40035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40036 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40037 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40039 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40040 ;;Total ram usage:       26 bytes
 40041 ;; Hardware stack levels used:    1
 40042 ;; This function calls:
 40043 ;;		Nothing
 40044 ;; This function is called by:
 40045 ;;		i2_dtoa
 40046 ;; This function uses a non-reentrant model
 40047 ;;
 40048                           
 40049                           	psect	text241
 40050  0075A4                     __ptext241:
 40051                           	opt callstack 0
 40052  0075A4                     i2___aodiv:
 40053                           	opt callstack 5
 40054                           
 40055                           ;incstack = 0
 40056  0075A4  0E00               	movlw	0
 40057  0075A6  6E12               	movwf	i2___aodiv@sign^0,c
 40058  0075A8  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 40059  0075AA  D012               	goto	i2l16637
 40060  0075AC  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 40061  0075AE  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 40062  0075B0  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 40063  0075B2  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 40064  0075B4  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 40065  0075B6  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 40066  0075B8  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 40067  0075BA  6C09               	negf	i2___aodiv@divisor^0,c
 40068  0075BC  0E00               	movlw	0
 40069  0075BE  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 40070  0075C0  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 40071  0075C2  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 40072  0075C4  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 40073  0075C6  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 40074  0075C8  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 40075  0075CA  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 40076  0075CC  0E01               	movlw	1
 40077  0075CE  6E12               	movwf	i2___aodiv@sign^0,c
 40078  0075D0                     i2l16637:
 40079  0075D0  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 40080  0075D2  D012               	goto	i2l16643
 40081  0075D4  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 40082  0075D6  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 40083  0075D8  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 40084  0075DA  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 40085  0075DC  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 40086  0075DE  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 40087  0075E0  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 40088  0075E2  6C01               	negf	i2___aodiv@dividend^0,c
 40089  0075E4  0E00               	movlw	0
 40090  0075E6  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 40091  0075E8  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 40092  0075EA  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 40093  0075EC  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 40094  0075EE  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 40095  0075F0  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 40096  0075F2  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 40097  0075F4  0E01               	movlw	1
 40098  0075F6  1A12               	xorwf	i2___aodiv@sign^0,f,c
 40099  0075F8                     i2l16643:
 40100  0075F8  EE20  F013         	lfsr	2,i2___aodiv@quotient
 40101  0075FC  0E07               	movlw	7
 40102  0075FE                     i2u1693_41:
 40103  0075FE  6ADE               	clrf	postinc2,c
 40104  007600  06E8               	decf	wreg,f,c
 40105  007602  E2FD               	bc	i2u1693_41
 40106  007604  5009               	movf	i2___aodiv@divisor^0,w,c
 40107  007606  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 40108  007608  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 40109  00760A  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 40110  00760C  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 40111  00760E  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 40112  007610  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 40113  007612  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 40114  007614  B4D8               	btfsc	status,2,c
 40115  007616  D046               	goto	i2l16665
 40116  007618  0E01               	movlw	1
 40117  00761A  6E11               	movwf	i2___aodiv@counter^0,c
 40118  00761C  D00A               	goto	i2l16651
 40119  00761E                     i2l16649:
 40120  00761E  90D8               	bcf	status,0,c
 40121  007620  3609               	rlcf	i2___aodiv@divisor^0,f,c
 40122  007622  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 40123  007624  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 40124  007626  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 40125  007628  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 40126  00762A  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 40127  00762C  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 40128  00762E  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 40129  007630  2A11               	incf	i2___aodiv@counter^0,f,c
 40130  007632                     i2l16651:
 40131  007632  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 40132  007634  D7F4               	goto	i2l16649
 40133  007636                     i2u1695_40:
 40134  007636  90D8               	bcf	status,0,c
 40135  007638  3613               	rlcf	i2___aodiv@quotient^0,f,c
 40136  00763A  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 40137  00763C  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 40138  00763E  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 40139  007640  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 40140  007642  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 40141  007644  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 40142  007646  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 40143  007648  5009               	movf	i2___aodiv@divisor^0,w,c
 40144  00764A  5C01               	subwf	i2___aodiv@dividend^0,w,c
 40145  00764C  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 40146  00764E  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 40147  007650  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 40148  007652  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 40149  007654  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 40150  007656  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 40151  007658  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 40152  00765A  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 40153  00765C  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 40154  00765E  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 40155  007660  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 40156  007662  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 40157  007664  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 40158  007666  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 40159  007668  A0D8               	btfss	status,0,c
 40160  00766A  D011               	goto	i2l16661
 40161  00766C  5009               	movf	i2___aodiv@divisor^0,w,c
 40162  00766E  5E01               	subwf	i2___aodiv@dividend^0,f,c
 40163  007670  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 40164  007672  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 40165  007674  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 40166  007676  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 40167  007678  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 40168  00767A  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 40169  00767C  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 40170  00767E  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 40171  007680  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 40172  007682  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 40173  007684  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 40174  007686  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 40175  007688  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 40176  00768A  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 40177  00768C  8013               	bsf	i2___aodiv@quotient^0,0,c
 40178  00768E                     i2l16661:
 40179  00768E  90D8               	bcf	status,0,c
 40180  007690  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 40181  007692  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 40182  007694  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 40183  007696  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 40184  007698  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 40185  00769A  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 40186  00769C  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 40187  00769E  3209               	rrcf	i2___aodiv@divisor^0,f,c
 40188  0076A0  2E11               	decfsz	i2___aodiv@counter^0,f,c
 40189  0076A2  D7C9               	goto	i2u1695_40
 40190  0076A4                     i2l16665:
 40191  0076A4  5012               	movf	i2___aodiv@sign^0,w,c
 40192  0076A6  B4D8               	btfsc	status,2,c
 40193  0076A8  D010               	goto	i2l16669
 40194  0076AA  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 40195  0076AC  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 40196  0076AE  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 40197  0076B0  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 40198  0076B2  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 40199  0076B4  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 40200  0076B6  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 40201  0076B8  6C13               	negf	i2___aodiv@quotient^0,c
 40202  0076BA  0E00               	movlw	0
 40203  0076BC  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 40204  0076BE  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 40205  0076C0  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 40206  0076C2  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 40207  0076C4  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 40208  0076C6  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 40209  0076C8  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 40210  0076CA                     i2l16669:
 40211  0076CA  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 40212  0076D0  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 40213  0076D6  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 40214  0076DC  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 40215  0076E2  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 40216  0076E8  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 40217  0076EE  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 40218  0076F4  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 40219  0076FA  0012               	return		;funcret
 40220  0076FC                     __end_ofi2___aodiv:
 40221                           	opt callstack 0
 40222                           
 40223 ;; *************** function i2_atoi *****************
 40224 ;; Defined at:
 40225 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 40226 ;; Parameters:    Size  Location     Type
 40227 ;;  s               2    7[COMRAM] PTR const unsigned char 
 40228 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 40229 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 40230 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 40231 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 40232 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 40233 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 40234 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 40235 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 40236 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 40237 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 40238 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 40239 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 40240 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 40241 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 40242 ;;		 -> STR_27(42), STR_26(20), STR_25(36), STR_24(47), 
 40243 ;;		 -> STR_23(20), STR_22(34), STR_21(5), STR_20(6), 
 40244 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 40245 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(12), 
 40246 ;;		 -> STR_11(12), STR_10(55), STR_4(20), STR_3(11), 
 40247 ;;		 -> STR_1(27), 
 40248 ;; Auto vars:     Size  Location     Type
 40249 ;;  atoi            2   20[COMRAM] int 
 40250 ;;  atoi            2   13[COMRAM] int 
 40251 ;; Return value:  Size  Location     Type
 40252 ;;                  2    7[COMRAM] int 
 40253 ;; Registers used:
 40254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40255 ;; Tracked objects:
 40256 ;;		On entry : 3F/0
 40257 ;;		On exit  : 0/0
 40258 ;;		Unchanged: 0/0
 40259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40261 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40263 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40264 ;;Total ram usage:       15 bytes
 40265 ;; Hardware stack levels used:    1
 40266 ;; Hardware stack levels required when called:    1
 40267 ;; This function calls:
 40268 ;;		i2___wmul
 40269 ;;		i2_isdigit
 40270 ;;		i2_isspace
 40271 ;; This function is called by:
 40272 ;;		i2_vfpfcnvrt
 40273 ;; This function uses a non-reentrant model
 40274 ;;
 40275                           
 40276                           	psect	text242
 40277  007176                     __ptext242:
 40278                           	opt callstack 0
 40279  007176                     i2_atoi:
 40280                           	opt callstack 5
 40281                           
 40282                           ; BSR set to: 0
 40283                           
 40284                           ;incstack = 0
 40285  007176  0E00               	movlw	0
 40286  007178  6E16               	movwf	(i2atoi@n+1)^0,c
 40287  00717A  0E00               	movlw	0
 40288  00717C  6E15               	movwf	i2atoi@n^0,c
 40289  00717E  0E00               	movlw	0
 40290  007180  6E0F               	movwf	(i2atoi@neg+1)^0,c
 40291  007182  0E00               	movlw	0
 40292  007184  6E0E               	movwf	i2atoi@neg^0,c
 40293  007186  D002               	goto	i2l16989
 40294  007188                     i2l16987:
 40295                           
 40296                           ; BSR set to: 0
 40297  007188  4A08               	infsnz	i2atoi@s^0,f,c
 40298  00718A  2A09               	incf	(i2atoi@s+1)^0,f,c
 40299  00718C                     i2l16989:
 40300                           
 40301                           ; BSR set to: 0
 40302  00718C  0E01               	movlw	1
 40303  00718E  6E14               	movwf	i2_atoi$5384^0,c
 40304                           
 40305                           ; BSR set to: 0
 40306  007190  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40307  007196  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40308  00719C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40309  00719C  6AF8               	clrf	tblptru,c
 40310  00719E                     	endif
 40311  00719E                     	if	0	;tblptru may be non-zero
 40312  00719E                     	endif
 40313  00719E  0008               	tblrd		*
 40314  0071A0  50F5               	movf	tablat,w,c
 40315  0071A2  0A20               	xorlw	32
 40316  0071A4  B4D8               	btfsc	status,2,c
 40317  0071A6  D01B               	goto	i2l16997
 40318                           
 40319                           ; BSR set to: 0
 40320  0071A8  0EF7               	movlw	247
 40321  0071AA  6E0A               	movwf	??i2_atoi^0,c
 40322  0071AC  0EFF               	movlw	255
 40323  0071AE  6E0B               	movwf	(??i2_atoi+1)^0,c
 40324  0071B0  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40325  0071B6  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40326  0071BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40327  0071BC  6AF8               	clrf	tblptru,c
 40328  0071BE                     	endif
 40329  0071BE                     	if	0	;tblptru may be non-zero
 40330  0071BE                     	endif
 40331  0071BE  0008               	tblrd		*
 40332  0071C0  50F5               	movf	tablat,w,c
 40333  0071C2  6E0C               	movwf	(??i2_atoi+2)^0,c
 40334  0071C4  6A0D               	clrf	(??i2_atoi+3)^0,c
 40335  0071C6  500A               	movf	??i2_atoi^0,w,c
 40336  0071C8  260C               	addwf	(??i2_atoi+2)^0,f,c
 40337  0071CA  500B               	movf	(??i2_atoi+1)^0,w,c
 40338  0071CC  220D               	addwfc	(??i2_atoi+3)^0,f,c
 40339  0071CE  500D               	movf	(??i2_atoi+3)^0,w,c
 40340  0071D0  E104               	bnz	i2u1762_40
 40341  0071D2  0E05               	movlw	5
 40342  0071D4  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 40343  0071D6  A0D8               	btfss	status,0,c
 40344  0071D8  D002               	goto	i2l16997
 40345  0071DA                     i2u1762_40:
 40346                           
 40347                           ; BSR set to: 0
 40348  0071DA  0E00               	movlw	0
 40349  0071DC  6E14               	movwf	i2_atoi$5384^0,c
 40350  0071DE                     i2l16997:
 40351                           
 40352                           ; BSR set to: 0
 40353  0071DE  0060  F050  F010   	movff	i2_atoi$5384,i2_atoi$5383
 40354  0071E4  6A11               	clrf	(i2_atoi$5383+1)^0,c
 40355                           
 40356                           ; BSR set to: 0
 40357  0071E6  5010               	movf	i2_atoi$5383^0,w,c
 40358  0071E8  1011               	iorwf	(i2_atoi$5383+1)^0,w,c
 40359  0071EA  B4D8               	btfsc	status,2,c
 40360  0071EC  D008               	goto	i2l17007
 40361  0071EE  D7CC               	goto	i2l16987
 40362  0071F0                     i2l17003:
 40363                           
 40364                           ; BSR set to: 0
 40365  0071F0  0E00               	movlw	0
 40366  0071F2  6E0F               	movwf	(i2atoi@neg+1)^0,c
 40367  0071F4  0E01               	movlw	1
 40368  0071F6  6E0E               	movwf	i2atoi@neg^0,c
 40369  0071F8                     i2l17005:
 40370  0071F8  4A08               	infsnz	i2atoi@s^0,f,c
 40371  0071FA  2A09               	incf	(i2atoi@s+1)^0,f,c
 40372  0071FC  D036               	goto	i2l17013
 40373  0071FE                     i2l17007:
 40374                           
 40375                           ; BSR set to: 0
 40376  0071FE  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40377  007204  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40378  00720A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40379  00720A  6AF8               	clrf	tblptru,c
 40380  00720C                     	endif
 40381  00720C                     	if	0	;tblptru may be non-zero
 40382  00720C                     	endif
 40383  00720C  0008               	tblrd		*
 40384  00720E  50F5               	movf	tablat,w,c
 40385  007210  6E0A               	movwf	??i2_atoi^0,c
 40386  007212  6A0B               	clrf	(??i2_atoi+1)^0,c
 40387                           
 40388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40389                           ; Switch size 1, requested type "simple"
 40390                           ; Number of cases is 1, Range of values is 0 to 0
 40391                           ; switch strategies available:
 40392                           ; Name         Instructions Cycles
 40393                           ; simple_byte            4     3 (average)
 40394                           ;	Chosen strategy is simple_byte
 40395  007214  500B               	movf	(??i2_atoi+1)^0,w,c
 40396  007216  0A00               	xorlw	0	; case 0
 40397  007218  A4D8               	btfss	status,2,c
 40398  00721A  D027               	goto	i2l17013
 40399                           
 40400                           ; BSR set to: 0
 40401                           ; Switch size 1, requested type "simple"
 40402                           ; Number of cases is 2, Range of values is 43 to 45
 40403                           ; switch strategies available:
 40404                           ; Name         Instructions Cycles
 40405                           ; simple_byte            7     4 (average)
 40406                           ;	Chosen strategy is simple_byte
 40407  00721C  500A               	movf	??i2_atoi^0,w,c
 40408  00721E  0A2B               	xorlw	43	; case 43
 40409  007220  B4D8               	btfsc	status,2,c
 40410  007222  D7EA               	goto	i2l17005
 40411  007224  0A06               	xorlw	6	; case 45
 40412  007226  B4D8               	btfsc	status,2,c
 40413  007228  D7E3               	goto	i2l17003
 40414  00722A  D01F               	goto	i2l17013
 40415  00722C                     i2l17009:
 40416  00722C  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 40417  007232  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 40418  007238  0E00               	movlw	0
 40419  00723A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 40420  00723C  0E0A               	movlw	10
 40421  00723E  6E03               	movwf	i2___wmul@multiplicand^0,c
 40422  007240  EC16  F050         	call	i2___wmul	;wreg free
 40423  007244  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40424  00724A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40425  007250                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40426  007250  6AF8               	clrf	tblptru,c
 40427  007252                     	endif
 40428  007252                     	if	0	;tblptru may be non-zero
 40429  007252                     	endif
 40430  007252  0008               	tblrd		*
 40431  007254  50F5               	movf	tablat,w,c
 40432  007256  5E01               	subwf	?i2___wmul^0,f,c
 40433  007258  0E00               	movlw	0
 40434  00725A  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 40435  00725C  0E30               	movlw	48
 40436  00725E  2401               	addwf	?i2___wmul^0,w,c
 40437  007260  6E15               	movwf	i2atoi@n^0,c
 40438  007262  0E00               	movlw	0
 40439  007264  2002               	addwfc	(?i2___wmul+1)^0,w,c
 40440  007266  6E16               	movwf	(i2atoi@n+1)^0,c
 40441  007268  D7C7               	goto	i2l17005
 40442  00726A                     i2l17013:
 40443  00726A  0ED0               	movlw	208
 40444  00726C  6E0A               	movwf	??i2_atoi^0,c
 40445  00726E  0EFF               	movlw	255
 40446  007270  6E0B               	movwf	(??i2_atoi+1)^0,c
 40447  007272  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 40448  007278  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 40449  00727E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40450  00727E  6AF8               	clrf	tblptru,c
 40451  007280                     	endif
 40452  007280                     	if	0	;tblptru may be non-zero
 40453  007280                     	endif
 40454  007280  0008               	tblrd		*
 40455  007282  50F5               	movf	tablat,w,c
 40456  007284  6E0C               	movwf	(??i2_atoi+2)^0,c
 40457  007286  6A0D               	clrf	(??i2_atoi+3)^0,c
 40458  007288  500A               	movf	??i2_atoi^0,w,c
 40459  00728A  260C               	addwf	(??i2_atoi+2)^0,f,c
 40460  00728C  500B               	movf	(??i2_atoi+1)^0,w,c
 40461  00728E  220D               	addwfc	(??i2_atoi+3)^0,f,c
 40462  007290  500D               	movf	(??i2_atoi+3)^0,w,c
 40463  007292  E106               	bnz	i2u1764_40
 40464  007294  0E0A               	movlw	10
 40465  007296  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 40466  007298  B0D8               	btfsc	status,0,c
 40467  00729A  D002               	goto	i2u1764_40
 40468  00729C  0E01               	movlw	1
 40469  00729E  D001               	goto	i2u1765_40
 40470  0072A0                     i2u1764_40:
 40471  0072A0  0E00               	movlw	0
 40472  0072A2                     i2u1765_40:
 40473  0072A2  6E12               	movwf	i2_atoi$5385^0,c
 40474  0072A4  6A13               	clrf	(i2_atoi$5385+1)^0,c
 40475  0072A6  5012               	movf	i2_atoi$5385^0,w,c
 40476  0072A8  1013               	iorwf	(i2_atoi$5385+1)^0,w,c
 40477  0072AA  A4D8               	btfss	status,2,c
 40478  0072AC  D7BF               	goto	i2l17009
 40479  0072AE  500E               	movf	i2atoi@neg^0,w,c
 40480  0072B0  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 40481  0072B2  A4D8               	btfss	status,2,c
 40482  0072B4  D011               	goto	i2l3907
 40483  0072B6  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 40484  0072BC  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 40485  0072C2  1E0A               	comf	??i2_atoi^0,f,c
 40486  0072C4  1E0B               	comf	(??i2_atoi+1)^0,f,c
 40487  0072C6  4A0A               	infsnz	??i2_atoi^0,f,c
 40488  0072C8  2A0B               	incf	(??i2_atoi+1)^0,f,c
 40489  0072CA  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 40490  0072D0  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 40491  0072D6  0012               	return	
 40492  0072D8                     i2l3907:
 40493  0072D8  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 40494  0072DE  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 40495  0072E4  0012               	return		;funcret
 40496  0072E6                     __end_ofi2_atoi:
 40497                           	opt callstack 0
 40498                           
 40499 ;; *************** function i2_isspace *****************
 40500 ;; Defined at:
 40501 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 40502 ;; Parameters:    Size  Location     Type
 40503 ;;  c               2    0[COMRAM] int 
 40504 ;; Auto vars:     Size  Location     Type
 40505 ;;		None
 40506 ;; Return value:  Size  Location     Type
 40507 ;;                  2    0[COMRAM] int 
 40508 ;; Registers used:
 40509 ;;		wreg, status,2, status,0
 40510 ;; Tracked objects:
 40511 ;;		On entry : 0/0
 40512 ;;		On exit  : 0/0
 40513 ;;		Unchanged: 0/0
 40514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40519 ;;Total ram usage:        7 bytes
 40520 ;; Hardware stack levels used:    1
 40521 ;; This function calls:
 40522 ;;		Nothing
 40523 ;; This function is called by:
 40524 ;;		i2_atoi
 40525 ;; This function uses a non-reentrant model
 40526 ;;
 40527                           
 40528                           	psect	text243
 40529  009758                     __ptext243:
 40530                           	opt callstack 0
 40531  009758                     i2_isspace:
 40532                           	opt callstack 5
 40533                           
 40534                           ;incstack = 0
 40535  009758  0E01               	movlw	1
 40536  00975A  6E07               	movwf	i2_isspace$5410^0,c
 40537  00975C  0E20               	movlw	32
 40538  00975E  1801               	xorwf	i2isspace@c^0,w,c
 40539  009760  1002               	iorwf	(i2isspace@c+1)^0,w,c
 40540  009762  B4D8               	btfsc	status,2,c
 40541  009764  D016               	goto	i2l16729
 40542  009766  0EF7               	movlw	247
 40543  009768  6E03               	movwf	??i2_isspace^0,c
 40544  00976A  0EFF               	movlw	255
 40545  00976C  6E04               	movwf	(??i2_isspace+1)^0,c
 40546  00976E  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 40547  009774  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 40548  00977A  5003               	movf	??i2_isspace^0,w,c
 40549  00977C  2605               	addwf	(??i2_isspace+2)^0,f,c
 40550  00977E  5004               	movf	(??i2_isspace+1)^0,w,c
 40551  009780  2206               	addwfc	(??i2_isspace+3)^0,f,c
 40552  009782  5006               	movf	(??i2_isspace+3)^0,w,c
 40553  009784  E104               	bnz	i2u1710_40
 40554  009786  0E05               	movlw	5
 40555  009788  5C05               	subwf	(??i2_isspace+2)^0,w,c
 40556  00978A  A0D8               	btfss	status,0,c
 40557  00978C  D002               	goto	i2l16729
 40558  00978E                     i2u1710_40:
 40559  00978E  0E00               	movlw	0
 40560  009790  6E07               	movwf	i2_isspace$5410^0,c
 40561  009792                     i2l16729:
 40562  009792  0060  F01C  F001   	movff	i2_isspace$5410,?i2_isspace
 40563  009798  6A02               	clrf	(?i2_isspace+1)^0,c
 40564  00979A  0012               	return		;funcret
 40565  00979C                     __end_ofi2_isspace:
 40566                           	opt callstack 0
 40567                           
 40568 ;; *************** function i2_isdigit *****************
 40569 ;; Defined at:
 40570 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 40571 ;; Parameters:    Size  Location     Type
 40572 ;;  c               2    0[COMRAM] int 
 40573 ;; Auto vars:     Size  Location     Type
 40574 ;;		None
 40575 ;; Return value:  Size  Location     Type
 40576 ;;                  2    0[COMRAM] int 
 40577 ;; Registers used:
 40578 ;;		wreg, status,2, status,0
 40579 ;; Tracked objects:
 40580 ;;		On entry : 0/0
 40581 ;;		On exit  : 0/0
 40582 ;;		Unchanged: 0/0
 40583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40588 ;;Total ram usage:        6 bytes
 40589 ;; Hardware stack levels used:    1
 40590 ;; This function calls:
 40591 ;;		Nothing
 40592 ;; This function is called by:
 40593 ;;		i2_vfpfcnvrt
 40594 ;;		i2_atoi
 40595 ;; This function uses a non-reentrant model
 40596 ;;
 40597                           
 40598                           	psect	text244
 40599  009CCC                     __ptext244:
 40600                           	opt callstack 0
 40601  009CCC                     i2_isdigit:
 40602                           	opt callstack 6
 40603                           
 40604                           ;incstack = 0
 40605  009CCC  0ED0               	movlw	208
 40606  009CCE  6E03               	movwf	??i2_isdigit^0,c
 40607  009CD0  0EFF               	movlw	255
 40608  009CD2  6E04               	movwf	(??i2_isdigit+1)^0,c
 40609  009CD4  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 40610  009CDA  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 40611  009CE0  5003               	movf	??i2_isdigit^0,w,c
 40612  009CE2  2605               	addwf	(??i2_isdigit+2)^0,f,c
 40613  009CE4  5004               	movf	(??i2_isdigit+1)^0,w,c
 40614  009CE6  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 40615  009CE8  5006               	movf	(??i2_isdigit+3)^0,w,c
 40616  009CEA  E106               	bnz	i2u1707_40
 40617  009CEC  0E0A               	movlw	10
 40618  009CEE  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 40619  009CF0  B0D8               	btfsc	status,0,c
 40620  009CF2  D002               	goto	i2u1707_40
 40621  009CF4  0E01               	movlw	1
 40622  009CF6  D001               	goto	i2u1708_40
 40623  009CF8                     i2u1707_40:
 40624  009CF8  0E00               	movlw	0
 40625  009CFA                     i2u1708_40:
 40626  009CFA  6E01               	movwf	?i2_isdigit^0,c
 40627  009CFC  6A02               	clrf	(?i2_isdigit+1)^0,c
 40628  009CFE  0012               	return		;funcret
 40629  009D00                     __end_ofi2_isdigit:
 40630                           	opt callstack 0
 40631                           
 40632 ;; *************** function i2___wmul *****************
 40633 ;; Defined at:
 40634 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 40635 ;; Parameters:    Size  Location     Type
 40636 ;;  multiplier      2    0[COMRAM] unsigned int 
 40637 ;;  multiplicand    2    2[COMRAM] unsigned int 
 40638 ;; Auto vars:     Size  Location     Type
 40639 ;;  __wmul          2    4[COMRAM] unsigned int 
 40640 ;; Return value:  Size  Location     Type
 40641 ;;                  2    0[COMRAM] unsigned int 
 40642 ;; Registers used:
 40643 ;;		wreg, status,2, status,0, prodl, prodh
 40644 ;; Tracked objects:
 40645 ;;		On entry : 0/0
 40646 ;;		On exit  : 0/0
 40647 ;;		Unchanged: 0/0
 40648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40653 ;;Total ram usage:        6 bytes
 40654 ;; Hardware stack levels used:    1
 40655 ;; This function calls:
 40656 ;;		Nothing
 40657 ;; This function is called by:
 40658 ;;		i2_atoi
 40659 ;; This function uses a non-reentrant model
 40660 ;;
 40661                           
 40662                           	psect	text245
 40663  00A02C                     __ptext245:
 40664                           	opt callstack 0
 40665  00A02C                     i2___wmul:
 40666                           	opt callstack 5
 40667                           
 40668                           ;incstack = 0
 40669  00A02C  5001               	movf	i2___wmul@multiplier^0,w,c
 40670  00A02E  0203               	mulwf	i2___wmul@multiplicand^0,c
 40671  00A030  006F FFCC  F005    	movff	prodl,i2___wmul@product
 40672  00A036  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 40673  00A03C  5001               	movf	i2___wmul@multiplier^0,w,c
 40674  00A03E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 40675  00A040  50F3               	movf	243,w,c
 40676  00A042  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40677  00A044  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 40678  00A046  0203               	mulwf	i2___wmul@multiplicand^0,c
 40679  00A048  50F3               	movf	243,w,c
 40680  00A04A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40681  00A04C  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 40682  00A052  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 40683  00A058  0012               	return		;funcret
 40684  00A05A                     __end_ofi2___wmul:
 40685                           	opt callstack 0
 40686                           
 40687 ;; *************** function i2___lmul *****************
 40688 ;; Defined at:
 40689 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 40690 ;; Parameters:    Size  Location     Type
 40691 ;;  multiplier      4    0[COMRAM] unsigned long 
 40692 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40693 ;; Auto vars:     Size  Location     Type
 40694 ;;  __lmul          4    8[COMRAM] unsigned long 
 40695 ;; Return value:  Size  Location     Type
 40696 ;;                  4    0[COMRAM] unsigned long 
 40697 ;; Registers used:
 40698 ;;		wreg, status,2, status,0
 40699 ;; Tracked objects:
 40700 ;;		On entry : 3F/0
 40701 ;;		On exit  : 3F/0
 40702 ;;		Unchanged: 3F/0
 40703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40705 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40707 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40708 ;;Total ram usage:       12 bytes
 40709 ;; Hardware stack levels used:    1
 40710 ;; This function calls:
 40711 ;;		Nothing
 40712 ;; This function is called by:
 40713 ;;		_adcCaptureIsr
 40714 ;; This function uses a non-reentrant model
 40715 ;;
 40716                           
 40717                           	psect	text246
 40718  00909A                     __ptext246:
 40719                           	opt callstack 0
 40720  00909A                     i2___lmul:
 40721                           	opt callstack 10
 40722                           
 40723                           ; BSR set to: 0
 40724                           
 40725                           ;incstack = 0
 40726  00909A  0E00               	movlw	0
 40727  00909C  6E09               	movwf	i2___lmul@product^0,c
 40728  00909E  0E00               	movlw	0
 40729  0090A0  6E0A               	movwf	(i2___lmul@product+1)^0,c
 40730  0090A2  0E00               	movlw	0
 40731  0090A4  6E0B               	movwf	(i2___lmul@product+2)^0,c
 40732  0090A6  0E00               	movlw	0
 40733  0090A8  6E0C               	movwf	(i2___lmul@product+3)^0,c
 40734  0090AA                     i2l12633:
 40735                           
 40736                           ; BSR set to: 0
 40737  0090AA  A001               	btfss	i2___lmul@multiplier^0,0,c
 40738  0090AC  D008               	goto	i2l12637
 40739                           
 40740                           ; BSR set to: 0
 40741  0090AE  5005               	movf	i2___lmul@multiplicand^0,w,c
 40742  0090B0  2609               	addwf	i2___lmul@product^0,f,c
 40743  0090B2  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 40744  0090B4  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 40745  0090B6  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 40746  0090B8  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 40747  0090BA  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 40748  0090BC  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 40749  0090BE                     i2l12637:
 40750                           
 40751                           ; BSR set to: 0
 40752  0090BE  90D8               	bcf	status,0,c
 40753  0090C0  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 40754  0090C2  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 40755  0090C4  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 40756  0090C6  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 40757                           
 40758                           ; BSR set to: 0
 40759  0090C8  90D8               	bcf	status,0,c
 40760  0090CA  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 40761  0090CC  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 40762  0090CE  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 40763  0090D0  3201               	rrcf	i2___lmul@multiplier^0,f,c
 40764  0090D2  5001               	movf	i2___lmul@multiplier^0,w,c
 40765  0090D4  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 40766  0090D6  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 40767  0090D8  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 40768  0090DA  A4D8               	btfss	status,2,c
 40769  0090DC  D7E6               	goto	i2l12633
 40770                           
 40771                           ; BSR set to: 0
 40772  0090DE  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 40773  0090E4  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 40774  0090EA  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 40775  0090F0  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 40776                           
 40777                           ; BSR set to: 0
 40778  0090F6  0012               	return		;funcret
 40779  0090F8                     __end_ofi2___lmul:
 40780                           	opt callstack 0
 40781                           
 40782 ;; *************** function i2_ADCC_StartConversion *****************
 40783 ;; Defined at:
 40784 ;;		line 120 in file "mcc_generated_files/adcc.c"
 40785 ;; Parameters:    Size  Location     Type
 40786 ;;  channel         1    wreg     enum E16053
 40787 ;; Auto vars:     Size  Location     Type
 40788 ;;  channel         1    0[COMRAM] enum E16053
 40789 ;; Return value:  Size  Location     Type
 40790 ;;                  1    wreg      void 
 40791 ;; Registers used:
 40792 ;;		wreg
 40793 ;; Tracked objects:
 40794 ;;		On entry : 0/0
 40795 ;;		On exit  : 3F/3E
 40796 ;;		Unchanged: 0/0
 40797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40802 ;;Total ram usage:        1 bytes
 40803 ;; Hardware stack levels used:    1
 40804 ;; This function calls:
 40805 ;;		Nothing
 40806 ;; This function is called by:
 40807 ;;		_adcCaptureIsr
 40808 ;; This function uses a non-reentrant model
 40809 ;;
 40810                           
 40811                           	psect	text247
 40812  00A652                     __ptext247:
 40813                           	opt callstack 0
 40814  00A652                     i2_ADCC_StartConversion:
 40815                           	opt callstack 10
 40816                           
 40817                           ; BSR set to: 0
 40818                           ;incstack = 0
 40819                           ;i2ADCC_StartConversion@channel stored from wreg
 40820  00A652  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 40821                           
 40822                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 40823  00A654  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 40824                           
 40825                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 40826  00A65A  013E               	movlb	62	; () banked
 40827  00A65C  8FF8               	bsf	248,7,b	;volatile
 40828                           
 40829                           ; BSR set to: 62
 40830                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 40831  00A65E  81F8               	bsf	248,0,b	;volatile
 40832                           
 40833                           ; BSR set to: 62
 40834  00A660  0012               	return		;funcret
 40835  00A662                     __end_ofi2_ADCC_StartConversion:
 40836                           	opt callstack 0
 40837                           
 40838 ;; *************** function _ADCC_GetFilterValue *****************
 40839 ;; Defined at:
 40840 ;;		line 231 in file "mcc_generated_files/adcc.c"
 40841 ;; Parameters:    Size  Location     Type
 40842 ;;		None
 40843 ;; Auto vars:     Size  Location     Type
 40844 ;;		None
 40845 ;; Return value:  Size  Location     Type
 40846 ;;                  2    0[COMRAM] unsigned short 
 40847 ;; Registers used:
 40848 ;;		wreg, status,2, status,0
 40849 ;; Tracked objects:
 40850 ;;		On entry : 3F/2
 40851 ;;		On exit  : 3F/3E
 40852 ;;		Unchanged: 0/0
 40853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40858 ;;Total ram usage:        4 bytes
 40859 ;; Hardware stack levels used:    1
 40860 ;; This function calls:
 40861 ;;		Nothing
 40862 ;; This function is called by:
 40863 ;;		_adcCaptureIsr
 40864 ;; This function uses a non-reentrant model
 40865 ;;
 40866                           
 40867                           	psect	text248
 40868  00A51C                     __ptext248:
 40869                           	opt callstack 0
 40870  00A51C                     _ADCC_GetFilterValue:
 40871                           	opt callstack 10
 40872                           
 40873                           ; BSR set to: 2
 40874                           ;mcc_generated_files/adcc.c: 234:     return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 40875                           
 40876                           ; BSR set to: 62
 40877                           ;incstack = 0
 40878  00A51C  013E               	movlb	62	; () banked
 40879  00A51E  51E7               	movf	231,w,b	;volatile
 40880  00A520  6E04               	movwf	(??_ADCC_GetFilterValue+1)^0,c
 40881  00A522  6A03               	clrf	??_ADCC_GetFilterValue^0,c
 40882  00A524  51E6               	movf	230,w,b	;volatile
 40883  00A526  2403               	addwf	??_ADCC_GetFilterValue^0,w,c
 40884  00A528  6E01               	movwf	?_ADCC_GetFilterValue^0,c
 40885  00A52A  0E00               	movlw	0
 40886  00A52C  2004               	addwfc	(??_ADCC_GetFilterValue+1)^0,w,c
 40887  00A52E  6E02               	movwf	(?_ADCC_GetFilterValue+1)^0,c
 40888                           
 40889                           ; BSR set to: 62
 40890  00A530  0012               	return		;funcret
 40891  00A532                     __end_of_ADCC_GetFilterValue:
 40892                           	opt callstack 0
 40893                           
 40894                           ;
 40895                           ; Interrupt Vector Table @ 0x8
 40896                           ;
 40897                           
 40898                           	psect	ivt0x8
 40899  000008                     __pivt0x8:
 40900                           	opt callstack 0
 40901  000008                     ivt0x8_base:
 40902                           	opt callstack 0
 40903                           
 40904                           ; high-priority vector
 40905  000008  EF7A  F041         	goto	_INTERRUPT_InterruptManager
 40906  000018                     	org	16
 40907                           
 40908                           ; low-priority vector
 40909  000018  00FF               	reset	
 40910                           
 40911                           	psect	text249
 40912  000000                     __ptext249:
 40913                           	opt callstack 0
 40914                           
 40915                           	psect	rparam
 40916  0000                     tosu	equ	0x3FFF
 40917                           tosh	equ	0x3FFE
 40918                           tosl	equ	0x3FFD
 40919                           stkptr	equ	0x3FFC
 40920                           pclatu	equ	0x3FFB
 40921                           pclath	equ	0x3FFA
 40922                           pcl	equ	0x3FF9
 40923                           tblptru	equ	0x3FF8
 40924                           tblptrh	equ	0x3FF7
 40925                           tblptrl	equ	0x3FF6
 40926                           tablat	equ	0x3FF5
 40927                           prodh	equ	0x3FF4
 40928                           prodl	equ	0x3FF3
 40929                           indf0	equ	0x3FEF
 40930                           postinc0	equ	0x3FEE
 40931                           postdec0	equ	0x3FED
 40932                           preinc0	equ	0x3FEC
 40933                           plusw0	equ	0x3FEB
 40934                           fsr0h	equ	0x3FEA
 40935                           fsr0l	equ	0x3FE9
 40936                           wreg	equ	0x3FE8
 40937                           indf1	equ	0x3FE7
 40938                           postinc1	equ	0x3FE6
 40939                           postdec1	equ	0x3FE5
 40940                           preinc1	equ	0x3FE4
 40941                           plusw1	equ	0x3FE3
 40942                           fsr1h	equ	0x3FE2
 40943                           fsr1l	equ	0x3FE1
 40944                           bsr	equ	0x3FE0
 40945                           indf2	equ	0x3FDF
 40946                           postinc2	equ	0x3FDE
 40947                           postdec2	equ	0x3FDD
 40948                           preinc2	equ	0x3FDC
 40949                           plusw2	equ	0x3FDB
 40950                           fsr2h	equ	0x3FDA
 40951                           fsr2l	equ	0x3FD9
 40952                           status	equ	0x3FD8


Data Sizes:
    Strings     1415
    Constant    38
    Data        32
    BSS         496
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     79     117
    BANK1           256    149     252
    BANK2           256      0     256
    BANK3           256     57     207
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_DO_TX$6114$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6120$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6126$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6131	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6126	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX_EMPTY$6125	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6120	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX$6119	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX$6114	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_MasterFsm$6113	const PTR FTN()enum E16447 size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    I2C2_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_NackCb@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$0$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_104(CODE[10]), STR_101(CODE[10]), STR_100(CODE[8]), STR_97(CODE[10]), 
		 -> STR_96(CODE[8]), STR_93(CODE[10]), STR_92(CODE[6]), STR_90(CODE[7]), 
		 -> STR_85(CODE[27]), STR_84(CODE[9]), STR_82(CODE[10]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_63(CODE[9]), STR_62(CODE[9]), STR_61(CODE[8]), 
		 -> STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[9]), 
		 -> STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[42]), 
		 -> STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[47]), STR_23(CODE[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[5]), STR_19(CODE[16]), STR_18(CODE[14]), 
		 -> STR_17(CODE[33]), STR_16(CODE[20]), STR_15(CODE[74]), STR_14(CODE[40]), 
		 -> STR_13(CODE[47]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[55]), 
		 -> STR_4(CODE[20]), STR_3(CODE[11]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_87(CODE[17]), STR_75(CODE[18]), 
		 -> STR_64(CODE[19]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_20(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5423_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[42]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[47]), 
		 -> STR_23(CODE[20]), STR_22(CODE[34]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[42]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[47]), 
		 -> STR_23(CODE[20]), STR_22(CODE[34]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[42]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[47]), 
		 -> STR_23(CODE[20]), STR_22(CODE[34]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printstrblock@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[19]), STR_2(CODE[17]), 

    printstr@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), 
		 -> STR_35(CODE[17]), lcdBtnRRow(BANK2[10]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[19]), STR_2(CODE[17]), 

    timeElapsedR@prevTime	PTR unsigned short  size(2) Largest target is 2
		 -> monTstamp(BANK2[2]), SelfTest@tstamp(BANK3[2]), flowChk@tstamp(BANK1[2]), pressureSensorChk@tstamp(BANK1[2]), 
		 -> main@printTime(BANK3[2]), rCycleTime(BANK1[2]), 

    aCaptGetResult@outVal	PTR short  size(2) Largest target is 2
		 -> MonitorMsgForcedSend@vddVal(BANK1[2]), SelfTest@vddVal(BANK3[2]), flowChk@aPVal(BANK1[2]), pressureSensorChk@aPVal(BANK1[2]), 
		 -> pressureSensorChk@mPVal(BANK1[2]), vMeasureIsr@instP(BANK0[2]), main@pAux_3859(BANK3[2]), bdP2(BANK2[2]), 
		 -> bdP1(BANK1[2]), main@pAux(BANK3[2]), pAvgShort(BANK1[2]), main@tmpVal(BANK3[2]), 
		 -> pAvgUShort(BANK1[2]), pInst(BANK1[2]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), 

    I2C2_SetDataNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetDataNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), 

    I2C2_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), 

    I2C2_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_I2C2_NackCb(), i2_I2C2_CallbackReturnReset(), i2_I2C2_CallbackReturnStop(), 
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E16447[19] size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR6_ISR->_lcdIrqHandler
    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _I2C2_MasterIsr->_I2C2_MasterFsm
    _I2C2_MasterFsm->_I2C2_DO_TX
    _I2C2_DO_TX->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX->i2_I2C2_NackCb
    _I2C2_DO_TX->i2_rd1RegCompleteHandler
    _I2C2_DO_TX->i2_rd2RegCompleteHandler
    _I2C2_DO_TX->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX->i2_wr1RegCompleteHandler
    _I2C2_DO_TX->i2_wr2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX_EMPTY->i2_I2C2_NackCb
    _I2C2_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSendTxData
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSetCounter
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnReset
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnStop
    _I2C2_DO_BUS_COLLISION->i2_I2C2_NackCb
    _I2C2_DO_BUS_COLLISION->i2_rd1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rd2RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rdBlkRegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_RESTART_READ->i2_I2C2_MasterSetCounter
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnReset
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnStop
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_NackCb
    i2_I2C2_DO_RX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnReset
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnStop
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_NackCb
    _I2C2_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_wr1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rdBlkRegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_I2C2_SetDataCompleteCallback->i2_I2C2_SetCallback
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_adcGetCh
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_abs->i2___aomod
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _main->___fltol
    _vMeasureInit->_TMR2_SetInterruptHandler
    _screenInit->_LcdI2CInit
    _blink->_command
    _LcdI2CInit->_timeDelayMs
    _home->_timeDelayMs
    _display->_command
    _clear->_timeDelayMs
    ___fltol->___fladd
    ___fladd->___xxtofl
    _keyReadEC->_timeDiff
    _timeDiff->_timeGet
    _vMeasureGet->___lldiv
    ___lldiv->___lmul
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _timeElapsedR->_TMR1_ReadTimer
    _timeDelayMs->_timeElapsed
    _timeElapsed->_TMR1_ReadTimer
    _noBacklight->_expanderWriteBlock
    _backlight->_expanderWriteBlock
    _expanderWriteBlock->_send4bits
    _setCursor->_command
    _command->_send
    _send->_send4bits
    _printstrblock->_printstr
    _keyRead->_keyPeek
    _keyPeek->_digitalReadC
    _keyPeek->_digitalReadD
    _timeGet->_TMR1_ReadTimer
    _sprintf->_vfprintf
    _bRateGet->___awdiv
    _I2C2_DO_SEND_ADR_WRITE->_I2C2_MasterSendTxData
    _wr2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _I2C2_SetDataCompleteCallback->_I2C2_SetCallback
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_timeDiff
    _I2C2_MOpen->_I2C2_SetAddressNackCallback
    _I2C2_MOpen->_I2C2_SetDataNackCallback
    _I2C2_SetDataNackCallback->_I2C2_SetCallback
    _I2C2_SetAddressNackCallback->_I2C2_SetCallback
    _I2C2_Open->_I2C2_SetInterruptHandler
    _MonitorMsgBusy->_I2C2_MClose
    _I2C2_MClose->_I2C2_Close

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_printf
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _main->_SelfTest
    _inspOSMeasure->_printf
    _aCaptureInit->_adcGetCh
    _adcGetCh->_printf
    _SelfTest->_pressureSensorChk
    _pressureSensorChk->_aCaptGetResult
    _aCaptureOffSet->_printf
    _aCaptRstFlt->_printf
    _flowChk->_MonitorMsgSendBlock
    _aCaptureOffGet->_printf
    _MonitorMsgSend->_MonitorMsgForcedSend
    _MenuMng->_printf
    _CtrlPowerOff->_MonitorMsgSendBlock
    _screenMng->_sprintf
    _MonitorMsgSendBlock->_MonitorMsgForcedSend
    _MonitorMsgForcedSend->_aCaptGetResult
    _sprintf->_vfprintf
    _aCaptGetResult->_printf
    _I2C2_DO_SEND_ADR_READ->_I2C2_DO_RX_EMPTY
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnReset
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnStop
    _I2C2_DO_RX_EMPTY->_I2C2_NackCb
    _I2C2_DO_RX_EMPTY->_rd1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rd2RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr2RegCompleteHandler
    _I2C2_NackCb->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_SelfTest

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0 1581217
                                             15 BANK3     42    42      0
                       _CtrlPowerOff
                       _I2C2_MuxInit
                            _MenuMng
                    _MonitorErrorClr
                    _MonitorErrorSet
                        _MonitorInit
                     _MonitorMsgBusy
                     _MonitorMsgSend
                _MonitorMsgSendBlock
                  _SYSTEM_Initialize
                           _SelfTest
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                            ___fladd
                            ___fltol
                            ___ltdiv
                            ___lwdiv
                             ___tmul
                             ___wmul
                           ___xxtofl
                     _aCaptGetResult
                        _aCaptRstFlt
                       _aCaptureInit
                           _bRateGet
                          _bRateInit
                          _bRateUpdt
                      _inspOSMeasure
                            _keyPeek
                            _keyRead
                          _keyReadEC
                        _keyReadInit
                             _printf
                      _printstrblock
                         _screenInit
                          _screenMng
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                           _timeDiff
                        _timeElapsed
                       _timeElapsedR
                            _timeGet
                           _timeInit
                        _vMeasureGet
                       _vMeasureInit
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureInit                                         0     0      0     211
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timeInit                                             0     0      0       0
                    _TMR0_StartTimer
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _screenInit                                           0     0      0   48788
                         _LcdI2CInit
                              _blink
                              _clear
                      _printstrblock
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (2) _blink                                                0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _LcdI2CInit                                           3     1      2   25100
                                             63 BANK0      3     1      2
           _TMR6_SetInterruptHandler
                              _clear
                            _command
                            _display
                 _expanderWriteBlock
                               _home
                          _send4bits
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0    7327
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _display                                              0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0    7327
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _inspOSMeasure                                       13    13      0   48095
                                             96 BANK1     13    13      0
                             ___lmul
                            ___ltdiv
                             ___tmul
                             ___wmul
                             _printf
                        _vMeasureGet
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             10     4      6     961
                                             43 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _bRateUpdt                                            4     4      0      31
                                             43 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _bRateInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aCaptureInit                                         2     2      0   29657
                                             99 BANK1      2     2      0
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                           _adcGetCh
 ---------------------------------------------------------------------------------
 (2) _adcGetCh                                             3     3      0   29316
                                             96 BANK1      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             73 BANK0      6     2      4
                                              0 BANK1      4     4      0
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    3582
                                             57 BANK0     16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelfTest                                            27    27      0  711410
                                            145 BANK1      4     4      0
                                              0 BANK3     15    15      0
                _MonitorMsgSendBlock
                     _aCaptGetResult
                     _aCaptureOffSet
                            _flowChk
                            _keyPeek
                          _keyReadEC
                        _keyReadInit
                  _pressureSensorChk
                             _printf
                      _printstrblock
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (2) _pressureSensorChk                                   37    35      2  171998
                                            108 BANK1     37    35      2
                             ___lmul
                     _aCaptGetResult
                        _aCaptRstFlt
                     _aCaptureOffSet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffSet                                       3     1      2   29769
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _aCaptRstFlt                                          5     5      0   29440
                                             96 BANK1      5     5      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _keyReadInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyReadEC                                            3     3      0    4954
                                             59 BANK0      3     3      0
                            _keyPeek
                           _timeDiff
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeDiff                                             6     2      4    4332
                                             53 BANK0      6     2      4
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (2) _flowChk                                             18    18      0  267805
                                            115 BANK1     18    18      0
                _MonitorMsgSendBlock
                             ___flge
                            ___lldiv
                             ___lmul
                           ___xxtofl
                     _aCaptGetResult
                     _aCaptureOffGet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
                        _vMeasureGet
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureRst                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vMeasureGet                                          6     4      2     635
                                             68 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             55 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffGet                                       3     1      2   29347
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                             43 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1616
                                             43 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                             57 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1328
                    _ADCC_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     484
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             43 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorMsgSend                                       1     1      0  126431
                                            114 BANK1      1     1      0
               _MonitorMsgForcedSend
                       _timeElapsedR
 ---------------------------------------------------------------------------------
 (1) _timeElapsedR                                        10     6      4    1914
                                             51 BANK0     10     6      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuMng                                             23    23      0   35059
                                             96 BANK1     23    23      0
                            ___awdiv
                            ___lwdiv
                            _keyRead
                             _printf
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _I2C2_MuxInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CtrlPowerOff                                         0     0      0  224209
                _MonitorMsgSendBlock
                       _PrintStrBusy
                            _keyRead
                             _printf
                      _printstrblock
                          _screenMng
                       _setBacklight
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _timeDelayMs                                          4     2      2    6249
                                             59 BANK0      4     2      2
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeElapsed                                          8     4      4    2572
                                             51 BANK0      8     4      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _setBacklight                                         1     1      0    1619
                                             48 BANK0      1     1      0
                          _backlight
                        _noBacklight
 ---------------------------------------------------------------------------------
 (2) _noBacklight                                          0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (2) _backlight                                            0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (3) _expanderWriteBlock                                   1     1      0     794
                                             47 BANK0      1     1      0
                          _send4bits
 ---------------------------------------------------------------------------------
 (1) _screenMng                                            4     4      0   52920
                                             92 BANK1      4     4      0
                       _PrintStrBusy
                            ___lwdiv
                             ___tmul
                             ___wmul
                           _printstr
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setCursor                                           10     9      1    5351
                                             50 BANK0     10     9      1
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0    1078
                                             49 BANK0      1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 2     1      1    1047
                                             47 BANK0      2     1      1
                          _send4bits
 ---------------------------------------------------------------------------------
 (4) _send4bits                                            4     3      1     763
                                             43 BANK0      4     3      1
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6    6976
                                             43 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1141
                                             43 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printstrblock                                        2     0      2    3683
                                             47 BANK0      2     0      2
                       _PrintStrBusy
                           _printstr
 ---------------------------------------------------------------------------------
 (2) _printstr                                             4     2      2     592
                                             43 BANK0      4     2      2
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (5) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PrintStrBusy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyRead                                              5     5      0     452
                                             48 BANK0      5     5      0
                            _keyPeek
 ---------------------------------------------------------------------------------
 (2) _keyPeek                                              2     2      0     322
                                             46 BANK0      2     2      0
                       _digitalReadC
                       _digitalReadD
 ---------------------------------------------------------------------------------
 (3) _digitalReadD                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _digitalReadC                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _MonitorMsgSendBlock                                  1     1      0  124650
                                            114 BANK1      1     1      0
                          _I2C2_MAck
                     _MonitorMsgBusy
               _MonitorMsgForcedSend
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgForcedSend                                 6     6      0  124486
                                            108 BANK1      6     6      0
                          _I2C2_MAck
                        _I2C2_MClose
                         _I2C2_MOpen
               _I2C2_MasterOperation
                     _I2C2_SetBuffer
                    _MonitorErrorClr
                    _MonitorErrorSet
                     _aCaptGetResult
                           _bRateGet
                            _sprintf
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeGet                                              2     0      2     102
                                             51 BANK0      2     0      2
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     6      2     102
                                             43 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   30736
                                             70 BANK1     22    10     12
                            ___lldiv (ARG)
                             ___lmul (ARG)
                            ___lwdiv (ARG)
                             ___tmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _bRateGet                                             0     0      0     985
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     985
                                             43 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _aCaptGetResult                                      12    10      2   31874
                                             96 BANK1     12    10      2
                             _printf
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorSet                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorClr                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterOperation                                 2     2      0   54133
                                            100 BANK1      2     2      0
              _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_SEND_ADR_WRITE
              _I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_READ                                0     0      0   54003
                   _I2C2_DO_RX_EMPTY
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterSendTxData                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_DO_RX_EMPTY                                     2     2      0   53972
                                             98 BANK1      2     2      0
                   Absolute function *
           _I2C2_CallbackReturnReset *
            _I2C2_CallbackReturnStop *
          _I2C2_MasterDisableRestart
           _I2C2_MasterEnableRestart
              _I2C2_MasterSetCounter
                        _I2C2_NackCb *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4883
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4887
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C2_SetDataCompleteCallback                         4     0      4    2699
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C2_SetBuffer                                       4     0      4    2122
                                             43 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C2_NackCb                                          2     0      2   29525
                                             96 BANK1      2     0      2
            _I2C2_CallbackReturnStop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26     4     22   29285
                                             70 BANK1     26     4     22
                             ___tmul (ARG)
                           _bRateGet (ARG)
                            _keyPeek (ARG)
                           _timeDiff (ARG)
                            _timeGet (ARG)
                        _vMeasureGet (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24979
                                             77 BANK0      2     2      0
                                             64 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    40      5   24047
                                             72 BANK0      5     0      5
                                             39 BANK1     25    25      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5903
                                              0 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             49 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6139
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3873
                                             61 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             43 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1630
                                             54 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1130
                                             45 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             44 BANK0      1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (9) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             61 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             43 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             43 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    9125
                                             65 BANK0      6     4      2
                                              0 BANK1      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             43 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    8022
                                             59 BANK0      6     2      4
                           _timeDiff (ARG)
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C2_CallbackReturnStop                              2     0      2      90
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterSetCounter                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterDisableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_CallbackReturnReset                             2     0      2       0
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MOpen                                           1     1      0    3963
                                             52 BANK0      1     1      0
                          _I2C2_Open
        _I2C2_SetAddressNackCallback
           _I2C2_SetDataNackCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetDataNackCallback                             4     0      4    1419
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetAddressNackCallback                          4     0      4    2259
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C2_SetCallback                                    5     1      4    1037
                                             43 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C2_Open                                            2     2      0     189
                                             45 BANK0      2     2      0
                _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
                    _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (7) _I2C2_SetInterruptHandler                             2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgBusy                                       0     0      0     133
                        _I2C2_MClose
 ---------------------------------------------------------------------------------
 (5) _I2C2_MClose                                          1     1      0     133
                                             44 BANK0      1     1      0
                         _I2C2_Close
 ---------------------------------------------------------------------------------
 (6) _I2C2_Close                                           1     1      0      37
                                             43 BANK0      1     1      0
                _I2C2_MasterClearIrq
                   _I2C2_MasterClose
              _I2C2_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INTERRUPT_InterruptManager                          4     4      0  215737
                                             39 BANK0      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                     _I2C2_MasterIsr *
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR6_ISR                                            0     0      0     155
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                      _lcdIrqHandler *
 ---------------------------------------------------------------------------------
 (20) _lcdIrqHandler                                       2     2      0     155
                                              0 COMRAM     2     2      0
                       i2_TMR6_Start
 ---------------------------------------------------------------------------------
 (21) i2_TMR6_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
                       _SV2DelayOpen *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _SV2DelayOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR2_ISR                                            0     0      0   13026
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                        _vMeasureIsr *
 ---------------------------------------------------------------------------------
 (20) _vMeasureIsr                                         8     8      0   13026
                                             93 COMRAM     2     2      0
                                             33 BANK0      6     6      0
                              _isqrt
                   i2_aCaptGetResult
 ---------------------------------------------------------------------------------
 (21) i2_aCaptGetResult                                   12    10      2   12454
                                             83 COMRAM    10    10      0
                                             31 BANK0      2     0      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (20) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _I2C2_MasterIsr                                      0     0      0  178306
                     _I2C2_MasterFsm
 ---------------------------------------------------------------------------------
 (20) _I2C2_MasterFsm                                      2     2      0  178306
                                             12 COMRAM     2     2      0
           _I2C2_ClearInterruptFlags
               _I2C2_DO_ADDRESS_NACK *
              _I2C2_DO_BUS_COLLISION *
                  _I2C2_DO_BUS_ERROR *
                       _I2C2_DO_IDLE *
                      _I2C2_DO_RESET *
                         _I2C2_DO_RX *
                     _I2C2_DO_RX_ACK *
            _I2C2_DO_RX_NACK_RESTART *
               _I2C2_DO_RX_NACK_STOP *
               _I2C2_DO_SEND_RESTART *
          _I2C2_DO_SEND_RESTART_READ *
         _I2C2_DO_SEND_RESTART_WRITE *
                  _I2C2_DO_SEND_STOP *
                         _I2C2_DO_TX *
                     _I2C2_DO_TX_ACK *
                   _I2C2_DO_TX_EMPTY *
                  _I2C2_MasterIsNack
                 i2_I2C2_DO_RX_EMPTY *
            i2_I2C2_DO_SEND_ADR_READ *
           i2_I2C2_DO_SEND_ADR_WRITE *
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_WRITE                            0     0      0      22
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX                                          6     6      0   48692
                                              6 COMRAM     6     6      0
                   Absolute function *
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
                   _I2C2_DO_TX_EMPTY
                  _I2C2_MasterIsNack
            _I2C2_MasterIsTxBufEmpty
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
            i2_I2C2_MasterSendTxData
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_EMPTY                                    2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_STOP                                   0     0      0      44
              _I2C2_MasterGetCounter
                    _I2C2_MasterStop
            i2_I2C2_MasterSendTxData
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_STOP                                0     0      0       0
                       _I2C2_DO_IDLE
                _I2C2_MasterSendNack
                    _I2C2_MasterStop
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C2_MasterSendNack
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX                                          3     3      0   16215
                                              0 COMRAM     3     3      0
               _I2C2_MasterGetRxData
             _I2C2_MasterIsRxBufFull
                 i2_I2C2_DO_RX_EMPTY
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_ERROR                                   0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_COLLISION                               2     2      0   32384
                                              6 COMRAM     2     2      0
                   Absolute function *
                      _I2C2_DO_RESET
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
              i2_I2C2_MasterClearIrq
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_READ                           0     0      0   16225
            i2_I2C2_DO_SEND_ADR_READ
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_READ                             0     0      0   16203
                 i2_I2C2_DO_RX_EMPTY
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterSendTxData                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_DO_RX_EMPTY                                  2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterSetCounter                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterEnableRestart                          0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterDisableRestart                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RESET                                       0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_ADDRESS_NACK                                2     2      0   16159
                                              6 COMRAM     2     2      0
                   Absolute function *
               _I2C2_DO_SEND_RESTART
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_wr2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_wr1RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rdBlkRegCompleteHandler                           2     0      2     858
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd1RegCompleteHandler                             2     0      2     966
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetDataCompleteCallback                      4     0      4     510
                                              5 COMRAM     4     0      4
                 i2_I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (25) i2_I2C2_SetCallback                                  5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetBuffer                                    4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_NackCb                                       2     0      2   11801
                                              4 COMRAM     2     0      2
          i2_I2C2_CallbackReturnStop
                           i2_printf
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_CallbackReturnStop                           2     0      2      26
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_CallbackReturnReset                          2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_RESTART                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_ClearInterruptFlags                            0     0      0       0
          _I2C2_MasterClearCountFlag
           _I2C2_MasterClearNackFlag
           _I2C2_MasterClearStopFlag
          _I2C2_MasterIsCountFlagSet
           _I2C2_MasterIsNackFlagSet
           _I2C2_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_ThresholdISR                                   0     0      0   24250
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                      _adcCaptureIsr *
 ---------------------------------------------------------------------------------
 (20) _adcCaptureIsr                                      13    13      0   24250
                                             86 COMRAM     8     8      0
                                             31 BANK0      5     5      0
                _ADCC_GetFilterValue
             i2_ADCC_StartConversion
                           i2___lmul
                         i2_adcGetCh
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) i2_adcGetCh                                          3     3      0   11806
                                             83 COMRAM     3     3      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (22) i2_printf                                            8     4      4   11775
                                             79 COMRAM     4     4      0
                                             27 BANK0      4     0      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (23) i2_vfprintf                                          8     2      6   11542
                                             77 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (24) i2_vfpfcnvrt                                        45    40      5   11162
                                             68 COMRAM     9     4      5
                                              0 BANK0     21    21      0
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (25) i2_xtoa                                             39    28     11    3753
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (26) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (27) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (25) i2_dtoa                                             36    26     10    4269
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (26) i2_pad                                              11     5      6    2388
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (27) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (27) i2_fputs                                             7     3      4     970
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (28) i2_fputc                                             9     5      4     690
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (29) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
                i2_UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (30) i2_UART1_is_tx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (30) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (26) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (26) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (26) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (25) i2_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (26) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (25) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (21) i2___lmul                                           12     4      8     300
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (21) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (21) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 30
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtrlPowerOff
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _PrintStrBusy
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _screenMng
       _PrintStrBusy
       ___lwdiv
       ___tmul
       ___wmul
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
       _printstr
         _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _I2C2_MuxInit
   _MenuMng
     ___awdiv
     ___lwdiv
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _MonitorErrorClr
   _MonitorErrorSet
   _MonitorInit
   _MonitorMsgBusy
     _I2C2_MClose
       _I2C2_Close
         _I2C2_MasterClearIrq
         _I2C2_MasterClose
         _I2C2_MasterDisableIrq
   _MonitorMsgSend
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
   _MonitorMsgSendBlock
     _I2C2_MAck
     _MonitorMsgBusy
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetTxInterruptHandler
   _SelfTest
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _aCaptGetResult
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _aCaptureOffSet
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _flowChk
       _MonitorMsgSendBlock
         _I2C2_MAck
         _MonitorMsgBusy
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
         _MonitorMsgForcedSend
           _I2C2_MAck
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
           _I2C2_MOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
             _I2C2_SetAddressNackCallback
               _I2C2_SetCallback
             _I2C2_SetDataNackCallback
               _I2C2_SetCallback
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _I2C2_NackCb *
                   _I2C2_CallbackReturnStop
                   _printf
                     ___tmul (ARG)
                     _bRateGet (ARG)
                       ___awdiv
                     _keyPeek (ARG)
                       _digitalReadC
                       _digitalReadD
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                     _vMeasureGet (ARG)
                       ___lldiv
                         ___lmul (ARG)
                     _vfprintf (ARG)
                       _vfpfcnvrt
                         _atoi
                           ___wmul
                             _timeDiff (ARG)
                               _timeGet (ARG)
                                 _TMR1_ReadTimer
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _isdigit
                           _isspace
                         _dtoa
                           ___aodiv
                           ___aomod
                           _abs
                             ___aomod (ARG)
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _isdigit
                         _xtoa
                           _isalpha
                           _isupper
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                           _toupper
                             _islower
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
           _I2C2_SetBuffer
           _MonitorErrorClr
           _MonitorErrorSet
           _aCaptGetResult
             _printf
               ___tmul (ARG)
               _bRateGet (ARG)
                 ___awdiv
               _keyPeek (ARG)
                 _digitalReadC
                 _digitalReadD
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
               _vMeasureGet (ARG)
                 ___lldiv
                   ___lmul (ARG)
               _vfprintf (ARG)
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _isdigit
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                     _toupper
                       _islower
           _bRateGet
             ___awdiv
           _sprintf
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwdiv (ARG)
             ___tmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
           _timeGet
             _TMR1_ReadTimer
       ___flge
         ___xxtofl (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___xxtofl
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffGet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
       _vMeasureGet
         ___lldiv
           ___lmul (ARG)
       _vMeasureRst
     _keyPeek
       _digitalReadC
       _digitalReadD
     _keyReadEC
       _keyPeek
         _digitalReadC
         _digitalReadD
       _timeDiff
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _keyReadInit
     _pressureSensorChk
       ___lmul
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptRstFlt
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffSet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _TMR4_SetInterruptHandler
   _TMR4_Start
   ___fladd
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___ltdiv
   ___lwdiv
   ___tmul
   ___wmul
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
   ___xxtofl
   _aCaptGetResult
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptRstFlt
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptureInit
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
     _adcGetCh
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
   _bRateGet
     ___awdiv
   _bRateInit
   _bRateUpdt
   _inspOSMeasure
     ___lmul
     ___ltdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _vMeasureGet
       ___lldiv
         ___lmul (ARG)
   _keyPeek
     _digitalReadC
     _digitalReadD
   _keyRead
     _keyPeek
       _digitalReadC
       _digitalReadD
   _keyReadEC
     _keyPeek
       _digitalReadC
       _digitalReadD
     _timeDiff
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _keyReadInit
   _printf
     ___tmul (ARG)
     _bRateGet (ARG)
       ___awdiv
     _keyPeek (ARG)
       _digitalReadC
       _digitalReadD
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
     _vMeasureGet (ARG)
       ___lldiv
         ___lmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _printstrblock
     _PrintStrBusy
     _printstr
       _TMR6_Start
   _screenInit
     _LcdI2CInit
       _TMR6_SetInterruptHandler
       _clear
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _command
         _send
           _send4bits
             _TMR6_Start
       _display
         _command
           _send
             _send4bits
               _TMR6_Start
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
       _home
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _send4bits
         _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _blink
       _command
         _send
           _send4bits
             _TMR6_Start
     _clear
       _command
         _send
           _send4bits
             _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _screenMng
     _PrintStrBusy
     ___lwdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printstr
       _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _setBacklight
     _backlight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
     _noBacklight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
   _setCursor
     _command
       _send
         _send4bits
           _TMR6_Start
   _sprintf
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___lwdiv (ARG)
     ___tmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _timeDelayMs
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _timeDiff
     _timeGet (ARG)
       _TMR1_ReadTimer
   _timeElapsed
     _TMR1_ReadTimer
   _timeElapsedR
     _TMR1_ReadTimer
   _timeGet
     _TMR1_ReadTimer
   _timeInit
     _TMR0_StartTimer
     _TMR1_StartTimer
   _vMeasureGet
     ___lldiv
       ___lmul (ARG)
   _vMeasureInit
     _TMR2_SetInterruptHandler
     _TMR2_Start
   _vMeasureRst

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcCaptureIsr *
       _ADCC_GetFilterValue
       i2_ADCC_StartConversion
       i2___lmul
       i2_adcGetCh
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
                 i2_UART1_is_tx_ready
             i2_isdigit
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_MasterIsr *
     _I2C2_MasterFsm
       _I2C2_ClearInterruptFlags
         _I2C2_MasterClearCountFlag
         _I2C2_MasterClearNackFlag
         _I2C2_MasterClearStopFlag
         _I2C2_MasterIsCountFlagSet
         _I2C2_MasterIsNackFlagSet
         _I2C2_MasterIsStopFlagSet
       _I2C2_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_COLLISION *
         Absolute function(Fake) *
         _I2C2_DO_RESET *
           _I2C2_MasterResetBus
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterClearIrq *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_ERROR *
         _I2C2_MasterResetBus
       _I2C2_DO_IDLE *
       _I2C2_DO_RESET *
         _I2C2_MasterResetBus
       _I2C2_DO_RX *
         _I2C2_MasterGetRxData
         _I2C2_MasterIsRxBufFull
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
       _I2C2_DO_RX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_RX_NACK_RESTART *
         _I2C2_MasterSendNack
       _I2C2_DO_RX_NACK_STOP *
         _I2C2_DO_IDLE
         _I2C2_MasterSendNack
         _I2C2_MasterStop
       _I2C2_DO_SEND_RESTART *
       _I2C2_DO_SEND_RESTART_READ *
         i2_I2C2_DO_SEND_ADR_READ
           i2_I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             i2_I2C2_CallbackReturnReset *
             i2_I2C2_CallbackReturnStop *
             i2_I2C2_MasterDisableRestart *
             i2_I2C2_MasterEnableRestart *
             i2_I2C2_MasterSetCounter *
             i2_I2C2_NackCb *
               i2_I2C2_CallbackReturnStop
               i2_printf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_isdigit
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2_rd1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rd2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rdBlkRegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
           i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_SEND_RESTART_WRITE *
       _I2C2_DO_SEND_STOP *
         _I2C2_MasterGetCounter
         _I2C2_MasterStop
         i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_TX *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         _I2C2_DO_TX_EMPTY *
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         _I2C2_MasterIsNack *
         _I2C2_MasterIsTxBufEmpty *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterSendTxData *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_TX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_TX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_MasterIsNack *
       i2_I2C2_DO_RX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       i2_I2C2_DO_SEND_ADR_READ *
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         i2_I2C2_MasterSendTxData
       i2_I2C2_DO_SEND_ADR_WRITE *
         i2_I2C2_MasterSendTxData
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _vMeasureIsr *
       _isqrt
       i2_aCaptGetResult
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR4_ISR *
     Absolute function(Fake) *
     _SV2DelayOpen *
     _TMR4_DefaultInterruptHandler *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _lcdIrqHandler *
       i2_TMR6_Start
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     39      CF      11       80.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     95      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      75       5       73.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39F      32        0.0%
DATA                 0      0     39F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 09 09:43:08 2020

                                ?_vMeasureGet 00A4                                  ?_vMeasureIsr 0001  
                                ?_vMeasureRst 0001              __end_of_TMR2_SetInterruptHandler A6D2  
                               ?_vMeasureInit 0001                            _I2C2_MasterSendAck A85A  
                       _I2C2_DO_BUS_COLLISION 90F8                       _I2C2_MasterIsTxBufEmpty A78A  
                                 __CFG_CP$OFF 000000                                    i2_adcGetCh 9468  
                                          _IP 01F7                                ?_adcCaptureIsr 0001  
                                ___awdiv@sign 0090                        __end_of_FVR_Initialize A808  
                         ___wmul@multiplicand 009D                           _I2C2_MasterSendNack A854  
                        _I2C2_DO_ADDRESS_NACK 9414                                  _chHighVAlarm 00C0  
                       __end_ofi2_UART1_Write 9820                 I2C2_SetAddressNackCallback@cb 0090  
                        ?_I2C2_MasterClearIrq 0001                                   __CFG_LVP$ON 000000  
                    __end_of_I2C2_SetCallback 8C26                           _I2C2_MasterResetBus A7F6  
                               ?_CtrlPowerOff 0001                                           l456 97B4  
                                         _BPM 01F8                           ?_I2C2_MasterSendAck 0001  
                          i2___aodiv@quotient 0013                    pressureSensorChk@mPValMean 0185  
                             _timer1ReloadVal 03C9                                           _abs 98A0  
                                         _pad 8240                                    _LcdI2CInit 7964  
            __end_ofi2_I2C2_DO_SEND_ADR_WRITE A51C                       __size_of_PMD_Initialize 0024  
                             _TMR2_Initialize 9F74                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                    ?i2_rd1RegCompleteHandler 0005                           __end_ofi2_vfpfcnvrt 50A0  
                    _I2C2_ClearInterruptFlags 9EE8             __end_of_I2C2_MasterIsCountFlagSet A742  
                                _rSV2ValveCRT 019F                                  _rSV2ValveORT 01A1  
                   ??_I2C2_DO_RX_NACK_RESTART 0001                            _UART1_Transmit_ISR 9D64  
                               __CFG_BBEN$OFF 000000                      ?i2_wr1RegCompleteHandler 0005  
          __size_of_I2C2_DO_SEND_RESTART_READ 000E                                  _rSV3ValveORT 019D  
            __end_of_I2C2_CallbackReturnReset A7CE                    ?_I2C2_DO_SEND_RESTART_READ 0001  
                                __CFG_ZCD$OFF 000000                           MonitorErrorClr@flag 008B  
                                ___fltol@exp1 00AE                             ?i2_I2C2_SetBuffer 0001  
                                ?_keyReadInit 0001                                          ?_abs 009D  
                                        l2004 68F0                       ??_rd2RegCompleteHandler 0094  
                                        l3002 6F34                                          l3003 6F3A  
                                        l3111 5F2A                                          l2090 8906  
                                        l3109 5F1E                                          l3134 643A  
                                        l3136 6446                                          l2433 2C90  
                                        l2099 96C8                                          l2515 3054  
                                        l2435 2CA4                                          l2700 8E9C  
                                        l3228 87FC                                          l1807 13CC  
                                        l1743 0344                                          l2712 A01C  
                                        l1744 0476                                          l3098 827A  
                                        l1755 0826                          _ADCC_StartConversion A598  
                                        l1943 9326                                          l1688 529C  
                                        l1881 2468                                          l3466 7F00  
                                        l2842 5534                                          l3730 597C  
                                        l1971 9622                                          l1963 95D8  
                                        l2819 437C                                          l3731 595A  
                                        l1779 0D52                                          l2844 5540  
                                        l2845 554C                                          l1981 7B5E  
                                        l1885 29B0                                          l1789 10DE  
                     ?_I2C2_DO_SEND_ADR_WRITE 0001                                          ?_pad 009D  
                                        l3672 8CEC                                          l1977 7BA6  
                                        l2882 3F16                                          l3746 5A4E  
                                        l3907 7168                                          l3755 5AB6  
                                        l3667 8CF8                                          l3692 9306  
                                        l2868 3D98                                          l3756 5AB2  
                                        l1998 67F6                                          l3863 73BC  
                                        l3856 7336                                          l2994 6E9C  
                                        l3876 98D0                                          l3981 9406  
                                        STR_1 FC91                                          STR_2 FED8  
                                        STR_3 FF78                                          STR_4 FCFD  
                                        STR_5 FD5D                                          STR_6 FEE9  
                                        STR_7 FED8                                          STR_8 FED8  
                                        STR_9 FED8                          _I2C2_MasterOperation 9714  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _T6PR 003F93  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PEEP 01F6  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                     I2C2_MasterSendTxData@data 008B  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                          ?_I2C2_MasterSendNack 0001  
                       ?_I2C2_MasterEnableIrq 0001                __size_of_I2C2_DO_SEND_ADR_READ 0026  
                     ??_wr2RegCompleteHandler 0094                                          _MaxP 01FB  
                                        _MaxV 01FA                         ?_I2C2_MasterGetRxData 0001  
               __end_of_I2C2_DO_SEND_ADR_READ A1C2                                          _bdP1 01E5  
                                        _bdP2 02DB                                 __CFG_FCMEN$ON 000000  
                          ??i2_I2C2_SetBuffer 0005                           ?_UART1_Transmit_ISR 0001  
                                        _chIP 00C4                                ?_printstrblock 008F  
                                        _pAdj 01A7                                          abs@a 009D  
                                        _vAdj 0242                                          _dbuf 025B  
                        ?_I2C2_MasterResetBus 0001                    pressureSensorChk@chkResult 017C  
                                        _atoi 6FE8                                          _main 001E  
                                        _dtoa 5E98                                          _home A4C4  
                                        _send A12A                                          _prec 00B4  
                             _TMR0_StartTimer A87A                                          _nout 0232  
                                        pad@i 00A4                                          pad@p 00A1  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 00A6  
                                        fsr2l 003FD9                          ??_I2C2_MasterSendAck 0001  
                                 main@tmpUVal 03BB                                          _xtoa 641A  
                                 main@tmpVal2 03BF                         ??_MonitorMsgSendBlock 00AF  
                                 i2_atoi$5383 0010                                   i2_atoi$5384 0014  
                   __size_of_I2C2_DO_RX_EMPTY 0082                                   i2_atoi$5385 0012  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 001A                                _MonitorMsgBusy A5E0  
                              _MonitorMsgSend A0B2                               __end_ofi2_fputc 8500  
           __size_of_I2C2_SetDataNackCallback 0020                                 i2_I2C2_NackCb 9BFC  
                       _I2C2_NackCb$intlevel0 999C                               __end_ofi2_fputs 991C  
                   __size_of_I2C2_DO_TX_EMPTY 0064                 ??_UART1_SetTxInterruptHandler 008D  
                   ?_I2C2_SetDataNackCallback 0090                               __end_ofi2_putch A598  
                            ??_I2C2_MasterFsm 000D                                 __CFG_CSWEN$ON 000000  
                  i2rd1RegCompleteHandler@ptr 0005                              ??_I2C2_MasterIsr 000F  
                       _lastI2CMonTrfResponse 0252              __size_ofi2_I2C2_MasterSetCounter 000A  
                      ??_MonitorMsgForcedSend 016C                    ??_TMR4_SetInterruptHandler 008D  
                       _I2C2_MasterSetCounter A772                                   i2_dtoa$4899 0030  
                        aCaptGetResult@lclRaw 0168                           MonitorErrorSet@flag 008B  
                                ___param_bank 000000              __size_ofi2_I2C2_MasterSendTxData 000A  
                  ??_I2C2_MasterIsNackFlagSet 0001                                ??_vMeasureInit 008D  
                       _I2C2_MasterSendTxData A766                                  command@value 0091  
            __size_of_rdBlkRegCompleteHandler 0056                               __end_of_MenuMng 345E  
                        aCaptGetResult@outVal 0160                                         ??_abs 009F  
                                       ??_pad 00A3                    __size_of_UART1_is_tx_ready 0010  
                                  i2_vfprintf 8DE8                       __end_of_TMR0_Initialize A506  
                            ??_I2C2_SetBuffer 008F                   ??_I2C2_MasterDisableRestart 008B  
                                  _HighVAlarm 01F9                         ?_I2C2_DO_ADDRESS_NACK 0001  
                             ?_FVR_Initialize 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                             __end_of_I2C2_MAck A848  
               __end_of_OSCILLATOR_Initialize A4AC                         ??_I2C2_MasterClearIrq 008B  
                 ?_I2C2_DO_SEND_RESTART_WRITE 0001                                         l20001 3012  
                                       l20003 301A                                         l20023 30AA  
                                       l20015 3072                                         l20007 3034  
                                       l20105 3350                                         l20113 3366  
                                       l20033 3108                                         l20115 33AA  
                                       l20107 3358                                         l20035 3110  
                                       l20027 30CA                                         l20019 308A  
                                       l20123 33C8                                         l21011 1B56  
                                       l20045 3164                                         l20037 311E  
                                       l20053 317A                                         l20125 341C  
                                       l20301 59D8                                         l20213 588C  
                                       l21005 1B06                                         l20063 31F6  
                                       l20055 31BE                                         l20047 316C  
                                       l20039 3126                                         l20127 3428  
                                       l20311 5A3E                                         l21111 1F74  
                                       l21015 1B62                                ??_CtrlPowerOff 00AF  
                                       l20225 58B0                                         l20217 5890  
                                       l20401 7FB0                                         l20161 8048  
                                       l21105 1F66                                         l20083 3260  
                                       l20075 3226                                         l20067 320A  
                                       l20059 31D6                                         l20411 7FC8  
                                       l21211 24D0                                         l21115 1F84  
                                       l21043 1D60                                         l20093 32DC  
                                       l20413 7FD4                                         l20405 7FC0  
                                       l20165 8060                                         l21205 2474  
                                       l21133 2002                                         l21117 1F8A  
                                       l20095 32E4                                         l20087 327E  
                                       l20079 3240                                         l20319 5A72  
                                       l20335 5A92                                         l20255 590A  
                                       l20175 80AE                                         l21143 205C  
                                       l21127 1FC4                                         l21071 1E6E  
                                       l21063 1E32                                         l20329 5A88  
                                       l20193 5848                                         l20169 808C  
                                       l21217 261C                                         l21081 1EF8  
                                       l20521 00FE                                         l20505 00BC  
                                       l20099 32F2                                         l20363 5B32  
                                       l20355 5B0C                                         l20291 59C2  
                                       l20283 59A0                                         l20267 5968  
                                       l20419 7FF0                                         l21235 27C4  
                                       l20611 047E                                         l20293 59C6  
                                       l20269 596C                                         l20189 5844  
                                       l21253 2886                                         l21173 2270  
                                       l21157 218E                                         l21077 1E84  
                                       l20701 08D0                                         l20621 0540  
                                       l20509 00CA                                         l20367 5B3A  
                                       l21247 2836                                         l21175 2278  
                                       l20631 065E                                         l20535 0144  
                                       l20369 5B3C                                         l20385 7F5A  
                                       l20713 0916                                         l20625 05E4  
                                       l20633 0666                                         l21273 2B30  
                                       l21187 236A                                         l20715 091A  
                                       l20627 05F6                                         l20571 01D0  
                                       l20491 006E                                         l21269 29B8  
                                       l20813 0EC8                                         l20653 07C8  
                                       l20581 02B8                                         l20557 019E  
                                       l20911 1556                                         l20903 140E  
                                       l20831 0FE6                                         l20823 0F5C  
                                       l20743 09EE                                         l20719 0924  
                                       l20567 01C0                                         l20921 163C  
                                       l20841 107E                                         l20833 104E  
                                       l20809 0EA4                                         l20745 09F4  
                                       l20681 0870                                         l20593 032A  
                                       l20489 006A                                         l20907 148E  
                                       l20595 0330                                         l16213 83BC  
                                       l20925 1650                                         l20917 1626  
                                       l20837 1066                                         l20685 0880  
                                       l20669 0844                                         l20943 1858  
                                       l20775 0CBA                                         l20927 17C6  
                                       l20687 0886                                         l17033 8BF4  
                                       l16161 979E                                         l16233 9888  
                                       l17041 8DC2                                         l20961 196C  
                                       l20945 185E                                         l16331 74A0  
                                       l20971 19AE                                         l20891 138A  
                                       l20795 0D84                                         l16405 970A  
                                       l16325 7478                                         l16229 986A  
                                       l16237 9D40                                         l20789 0D56  
                                       l16175 97D6                                         l16239 9D44  
                                       l16271 8272                                         l16503 6462  
                                       l17039 8D92                                         l18111 8FFE  
                                       l20895 13B0                                         l16337 74C6  
                                       l16353 754C                                         l16177 97D8  
                                       l16281 82D6                                         l16273 8284  
                                       l17241 99C2                                         l17305 8A6C  
                                       l18121 900E                                         l18105 8FE2  
                                       l19001 7A80                                         l20985 1A1C  
                                       l20977 19E4                                         l16339 74DA  
                                       l16179 A55E                                         l16267 8260  
                                       l16451 5F4E                                         l16531 655E  
                                       l20899 13D4                                         l16357 7572  
                                       l16349 7536                                         l16373 774C  
                                       l16277 82A2                                         l16437 5EFE  
                                       l16517 64C8                                         l16509 64A4  
                                       l18205 960E                                         l20997 1A98  
                                       l16455 5F60                                         l17239 99BC  
                                       l18127 902C                                         l18311 7372  
                                       l18303 734E                                         l19103 476A  
                                       l19031 42A4                                         l16561 6FFC  
                                       l16393 77FE                                         l16385 77C2  
                                       l16377 7766                                         l16369 7728  
                                       l16465 60A4                                         l17601 68AA  
                                       l18153 8FC0                                         l18321 73E2  
                                       l18313 737E                                         l19041 439E  
                                       l19025 426C                                         l16571 705A  
                                       l16563 7002                                         l16379 777A  
                                       l16555 6676                                         l16539 65F8  
                                       l17283 8A48                                         l17611 68C4  
                                       l18235 964A                                         l17435 9222  
                                       l18323 73EE                                         l18315 73A4  
                                       l18163 9D24                                         l18171 7A8E  
                                       l19115 47FA                                         l19051 43F6  
                                       l19035 42C4                                         l17701 A028  
                                       l16581 7080                                         l16389 77D8  
                                       l16485 6112                                         l17277 8A40  
                                       l17605 68AE                                         l18093 A18C  
                                       l18085 A16A                                         l17437 922E  
                                       l18077 997E                                         l18261 7ED4  
                                       l18245 904C                                         l18309 736C  
                                       l19205 5708                                         l18173 7AB8  
                                       l18181 7B7A                                         l19053 44AE  
                                       l16583 70B0                                         l16815 4AC0  
                                       l17295 8A5C                                         l17551 9752  
                                       l17471 8962                                         l18087 A17A  
                                       l18239 965A                                         l17447 9258  
                                       l18271 7F38                                         l18175 7AE2  
                                       l19119 480C                                         l19047 43D6  
                                       l19063 44CE                                         l19311 50A2  
                                       l17377 86E6                                         l16577 706E  
                                       l16489 612C                                         l16761 486C  
                                       l17289 8A50                                         l17473 896A  
                                       l17465 894C                                         l18281 92D4  
                                       l18265 7EEA                                         l18257 7EA0  
                                       l18249 9060                                         l19209 571C  
                                       l19153 555A                                         l18177 7B0C  
                                       l18193 95C4                                         l19313 50A6  
                                       l19321 50E0                                         l16587 70F6  
                                       l16579 7078                                         l16835 4C0C  
                                       l17547 9748                                         l17619 690C  
                                       l17491 89A2                                         l17483 898A  
                                       l17459 893C                                         l18283 92DC  
                                       l19411 8624                                         l18339 7432  
                                       l19227 57E6                                         l19171 55E0  
                                       l19155 557E                                         l19315 50AA  
                                       l17397 A0FE                                         l16829 4BCA  
                                       l16781 488E                                         l16773 487E  
                                       l16765 4872                                         l16757 485A  
                                       l16845 4C2E                                         l17581 6730  
                                       l18293 92FC                                         l18621 350E  
                                       l17645 9DF4                                         l17901 87AE  
                                       l19237 5814                                         l19165 55AE  
                                       l19093 46FE                                         l19253 8CB8  
                                       l19333 5190                                         l19317 50AE  
                                       l16839 4C18                                         l16759 485E  
                                       l16783 48D8                                         l17583 675C  
                                       l17487 8994                                         l17815 6E94  
                                       l18631 35AE                                         l18623 3524  
                                       l17903 87BA                                         l19191 567C  
                                       l19175 5600                                         l19255 8CC2  
                                       l19327 5140                                         l19319 50B4  
                                       l17681 8EA2                                         l16777 4884  
                                       l16769 4878                                         l17585 6788  
                                       l17841 6F24                                         l18721 39F6  
                                       l18713 39BA                                         l17913 87EE  
                                       l19425 951C                                         l19353 52FC  
                                       l16795 495A                                         l17579 6704  
                                       l17835 6EFA                                         l17827 6EC2  
                                       l18707 3958                                         l18651 3702  
                                       l18643 3678                                         l18619 34D0  
                                       l19099 471E                                         l19347 525A  
                                       l17685 8EB0                                         l16797 497E  
                                       l17597 6864                                         l17589 67CC  
                                       l17861 6F6A                                         l18733 3A50  
                                       l18725 3A14                                         l18717 39D8  
                                       l18661 378A                                         l18637 35F6  
                                       l18629 356C                                         l17757 9BD8  
                                       l19605 3F1A                                         l19541 3CFE  
                                       l19365 53F4                                         l16799 498C  
                                       l17855 6F5A                                         l17839 6F1E  
                                       l18751 3AD6                                         l18639 3638  
                                       l19623 3F84                                         l19607 3F36  
                                       l17697 A022                                         l17873 6F90  
                                       l17849 6F4A                                         l17777 7BBE  
                                       l18761 3B1C                                         l18753 3AE4  
                                       l18737 3A8E                                         l18729 3A32  
                                       l18745 3ABE                                         l18665 37CC  
                                       l18657 376C                                         l18649 36C0  
                                       l18673 3880                                         l18681 38AA  
                                       l19801 2C46                                         l18825 88C4  
                                       l19553 3D6E                                         l19561 3DBA  
                                       l19369 540C                                         l17867 6F7A  
                                       l17795 7CA6                                         l17779 7BC8  
                                       l18763 3B2A                                         l18755 3AF2  
                                       l18739 3AA2                                         l18843 8924  
                                       l19715 4176                                         l19547 3D30  
                                       l17885 6FBC                                         l17789 7C62  
                                       l18765 3B38                                         l18757 3B00  
                                       l18669 3858                                         l18781 A4BE  
                                       l19397 85E2                                         l19821 2CB4  
                                       l19733 41D4                                         l19653 4042  
                                       l19629 3FB6                                         l18861 9322  
                                       l17879 6FA6                                         l18791 969A  
                                       l18759 3B0E                                         l18695 38DE  
                                       l19911 2DD2                                         l19903 2DB4  
                                       l19815 2C9A                                         l18839 891E  
                                       l19743 4222                                         l19487 3BD6  
                                       l18855 931E                                 ___fltol@sign1 00AD  
                                       l18769 3B46                                         l19921 2E2E  
                                       l19809 2C64                                         l19681 40CC  
                                       l19649 4026                                         l19569 3DE4  
                                       l19497 3BF6                                         l18849 931A  
                                       l18961 79E6                                         l19923 2E3C  
                                       l19659 4068                                         l19587 3EAC  
                                       l18875 9344                                         l18955 79C8  
                                       l19941 2ED0                                         l19845 2CEA  
                                       l19837 2CDA                                         l19829 2CC6  
                                       l19589 3EB4                                         l18973 7A22  
                                       l19951 2F44                                         l19935 2EB2  
                                       l19919 2E26                                         l19927 2E44  
                                       l19783 2BC6                                         l19767 2B76  
                                       l19599 3F0C                                         l18991 7A64  
                                       l18967 7A04                                         l19953 2F52  
                                       l19937 2EBA                                         l19873 2D6E  
                                       l19865 2D5E                                         l19857 2D52  
                                       l19971 2FA2                                         l19963 2F92  
                                       l19955 2F5A                                         l19939 2EC8  
                                       l19795 2C20                                         l19699 4120  
                                       l18987 7A58                                         l18979 7A3C  
                                       l19949 2F3C                                         l19789 2BE4  
                                       l18997 7A74                                         l19895 2DA0  
                                       l19887 2D90                                         l19879 2D82  
                                       l19799 2C34                                         l19995 2FE2  
                                       l19987 2FC8                                         l19979 2FB6  
                                       l19999 2FFA                               __end_of___aodiv 75A4  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
        __end_of_I2C2_SetDataCompleteCallback A3A2         __size_of_I2C2_SetDataCompleteCallback 0020  
            ??i2_I2C2_SetDataCompleteCallback 000A               ?i2_I2C2_SetDataCompleteCallback 0006  
                                       ?_atoi 00A1                  _I2C2_SetDataCompleteCallback A382  
                             __end_of___fladd 5B60                                         ?_main 0001  
                                       ?_dtoa 0100                                         _ADCLK 003EFF  
                             __end_of___aomod 7830                                         ?_home 0001  
                           __end_of_I2C2_Open 86EC                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 89B0  
                                       ?_send 008F                                         STR_10 FAC1  
                                       STR_11 FF56                                         STR_20 FFF3  
                                       STR_12 FF4A                                         STR_21 FFF9  
                                       STR_13 FAF8                                         STR_30 FFBE  
                                       STR_22 FC17                                         STR_14 FB80  
                                       STR_31 FFBE                                         STR_23 FCC1  
                                       STR_15 FA77                                         STR_40 FCAC  
                                       STR_32 FFBE                                         STR_16 FCD5  
                                       STR_24 FB27                                         STR_33 FFBE  
                                       STR_41 FD4A                                         STR_17 FC39  
                                       STR_25 FBF3                                 __CFG_WDTE$OFF 000000  
                                       STR_42 FCAC                                         STR_34 FFB5  
                                       STR_50 FF32                                         STR_18 FF18  
                                       STR_26 FCE9                                         STR_43 FD4A  
                                       STR_19 FEFA                                         STR_35 FEC7  
                                       STR_51 FD37                                         STR_27 FB56  
                                       STR_44 FCAC                                         STR_28 FFBE  
                                       STR_52 FF97                                         STR_60 FF6D  
                                       STR_36 FEA5                                         STR_53 FF97  
                                       STR_45 FCAC                                         STR_29 FFBE  
                                       STR_61 FFD7                                         STR_37 FCAC  
                                       STR_62 FFBE                                         STR_46 FD4A  
                                       STR_70 FF8D                                         STR_54 FF62  
                                       STR_38 FD4A                                         STR_63 FFBE  
                                       STR_47 FD4A                                         STR_55 FFAB  
                                       STR_71 FF0A                                         STR_39 FEB6  
                                       STR_72 FF8D                                         STR_56 FFA1  
                                       STR_48 FE94                                         STR_80 FE50  
                                       STR_64 FD24                                         _ADRPT 003EEC  
                                       STR_73 FF0A                                         STR_57 FF3E  
                                       STR_49 FE83                                         STR_81 FDC8  
                                       STR_65 FBA8                                         STR_82 FF8D  
                                       STR_90 FFE6                                         STR_58 FF26  
                                       STR_74 FDFB                                         STR_66 FBCE  
                                       STR_59 FF97                                         STR_83 FF0A  
                                       STR_91 FE61                                         STR_75 FD94  
                                       STR_67 FC5A                                         STR_84 FFBE  
                                       STR_92 FFED                                         STR_76 FDEA  
                                       STR_68 FD11                                         STR_77 FDFB  
                                       STR_93 FF8D                                         STR_69 FD70  
                                       STR_85 FC76                                         STR_86 FE1D  
                                       STR_94 FE0C                                         STR_78 FDA6  
                                       STR_87 FE72                                         STR_79 FDD9  
                                       STR_95 FD82                                         STR_88 FE1D  
                                       STR_96 FFCF                                         STR_97 FF8D  
                                       STR_89 FDB7                                         STR_98 FE0C  
                                       STR_99 FE3F                               __end_of___fltol 800A  
                             _TMR1_StartTimer A876                               aCaptureInit@idx 0163  
                             __end_of___lldiv 8816                                         u20000 46BE  
                                       u20010 46D2                                         u20020 46E8  
                                       u20030 46FE                                         _T1CLK 003FB5  
                                       u21000 2E94                                         u20040 4786  
                                       u20050 47A2                                         u21020 2F1E  
                                       u20060 47B6                               ___awdiv@divisor 008D  
                                       u21110 304C                                         u20070 47CE  
                                       ?_xtoa 0100                                         u21200 3156  
                                       u20080 47E6                                         u20400 3C64  
                                       u20320 53CA                                         _T1CON 003FB2  
                                       u21130 306C                                         u20090 47FA  
                                       _U1P1H 003DED                                         u20340 5404  
                                       _U1P2H 003DEF                                         u21301 32A4  
                                       u20325 53C0                                         u21310 32CE  
                                       u21230 3202                                         u21150 30A2  
                                       u20190 8CC6                                         u20270 51B2  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u21160 30C2                                         u20280 51C0  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       u21321 3318                                         u21330 3342  
                                       u21090 3012                                         u20530 3FB2  
                                       u20370 9540                                         u20290 51FE  
                                       u23010 1A90                                         u22210 04FA  
                                       _U1P3L 003DF0                                         u21180 30FA  
                                       u20540 3FB4                                         u20460 3DDE  
                                       u21500 592E                                         u23100 1D7A  
                                       u20470 3E48                                         u20390 3C1C  
                                       u21510 593E                                         u22150 01DA  
                                       u21271 323E                                         u20295 51F6  
                                       u22215 04F0                                         u20480 3E58  
                                       u21520 5940                                         u23120 1DE4  
                                       u21281 3256                                         u20490 3ED8  
                                       u22410 0B6C                                         u22250 0602  
                                       u22170 028C                                         u22090 00DC  
                                       u16100 9B20                                         u21700 5AAC  
                                       u22260 0626                                         u22245 05AA  
                                       u16030 83B4                                         u20750 2BDE  
                                       u21550 5984                                         u23230 2054  
                                       u22270 077C                                         u16200 9B54  
                                       u20760 2C18                                         u21800 7F48  
                                       u23320 22DA                                         u23160 1EB2  
                                       u23080 1C7A                                         u22440 0D32  
                                       u22280 07E2                                         _T4CON 003FA0  
                                       u22265 061E                                         u16050 83FC  
                                       u16210 9B56                                         u21810 7F82  
                                       u22370 0982                                         u16220 9B8A  
                                       _T2HLT 003FAD                                         u16230 9B8C  
                                       u20950 2DCC                                         u23350 2444  
                                       u23270 2204                                         u22710 134E  
                                       u16311 74A6                                         u21815 7F76  
                                       u16240 93EE                                         u21760 5B18  
                                       u21680 5A96                                         u23360 24C8  
                                       u23168 1EB6                                         u22545 103E  
                                       u16330 74DE                                         u16090 9B1E  
                                       u16250 93F0                                         u17210 49CE  
                                       u20970 2E18                                         u21850 7FDA  
                                       u23290 2294                                         u22650 1258  
                             __end_of___ltdiv 8D0C                                         u17220 49D0  
                                       u23380 2678                                         u22900 188A  
                                       u22820 1564                                         u22740 1380  
                                       u16270 9BC0                                         u16430 9706  
                                       u16190 98AE                                         u17230 49DC  
                                       u22830 1576                                         u22670 1296  
                                       u22815 1534                                         u22575 10C4  
                                       u16280 9BC2                                         u16520 5F12  
                                       u22840 1616                                         _T6CON 003F94  
                                       u22585 1124                                         u16610 60FA  
                                       u17250 4A1A                                         u23298 2298  
                                       u22930 18D0                                         u22690 1308  
                                       u16540 5F46                                         u16700 6534  
                                       u18060 672A                                         u18220 9FCC  
                                       u22908 188E                                         _T4HLT 003FA1  
                                       u22845 160E                                         u16390 777E  
                                       u15910 A61E                                         u16550 60B4  
                                       u16710 6536                                         u17270 4AFC  
                                       u18070 6756                                         u18214 9FB8  
                                       u18310 7C8C                                __CFG_DEBUG$OFF 000000  
                                       u18215 9FB4                                         u16480 5ED0  
                                       u16640 642E                                         u18080 6782  
                                       u18320 7C92                                         u22880 17EC  
                                       u18065 6720                                         u16810 7054  
                                       u16570 60D6                                         u16490 5ED2  
                                       u16730 65C4                                         u18090 67AE  
                                       u18250 9FFA                                         u16571 60D4  
                                       u18075 674C                                         u22795 147E  
                                       u16580 60E4                                         u16740 660A  
                                       u16660 64C4                                         u18244 9FE6  
                                       u19300 381A                                         u18085 6778  
                                       u18245 9FE2                                         u18317 7C7E  
                                       u18190 A5EE                                         u16830 712C  
                                       u16590 60EA                                         u16670 64FA  
                                       u16735 65B2                                         u18095 67A4  
                                       u16840 712E                                         u16760 662C  
                                       u16680 64FC                                         u18280 7C00  
                                       u19320 38A2                                         u19160 348C  
                                       u16761 662A                                         u19305 3810  
                                       u16770 663A                                         u18290 7C42  
                             __end_of___lwdiv 9314                                         u18611 9966  
                                       u16780 6640                                         _T6HLT 003F95  
                                       u18390 6F16                                         u18287 7BF2  
                                       u18297 7C34                    _ADCC_ADTI_InterruptHandler 02FE  
                                       u18490 87BE                                         u18910 92E0  
                                       u19550 8910                                         u18735 7AA8  
                                       u19560 8912                                         u18745 7AD2  
                                       u19490 9696                                         u18755 7AFC  
                                       u17980 896E                                         _T2TMR 003FAA  
                                       u18765 7B26                                         u17888 8A7C  
                                       _U1UIR 003DF8                                         u17889 8A8E  
                                       _T2RST 003FAF                                         u19925 4408  
                                       u18990 73F8                                         u19935 4480  
                                       u19936 4486                                         u19937 4494  
                                       _U1TXB 003DEA                                         u19955 450C  
                                       u19875 42D6                                         u19980 468C  
                                       u19956 4512                                         _T4TMR 003F9E  
                                       u19965 4556                                         u19957 4520  
                                       u19885 434E                                         u19990 46A8  
                                       u19966 455C                                         u19886 4354  
                                       u19967 456A                                         u19887 4362  
                                       _T4RST 003FA3                                         i2l340 8354  
                                       i2l342 835C                                         i2l334 8326  
                                       i2l344 8368                                         i2l336 8344  
                                       i2l346 8374                                         i2l338 834C  
                                       i2l347 838A                                         i2l348 8380  
                                       _T6TMR 003F92                                         i2l462 9D90  
                                       i2l456 97F6                                         _T6RST 003F97  
                             ___awdiv@counter 008F                                         _OSCEN 0039DD  
                       _rValveActuationTstamp 01A5                                  vfpfcnvrt@fmt 00AA  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 0133  
                                       _TMR1H 003FB1                                         _TMR0L 003FB6  
                                       _TMR1L 003FB0                                         _PORTC 003FCC  
                                       _PORTD 003FCD                  ?_I2C2_SetAddressNackCallback 0090  
                      ?_I2C2_MasterGetCounter 0001                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                 ??_aCaptRstFlt 0160  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         i2_abs 991C  
                                       i2_pad 818A                               _TMR4_Initialize 9F46  
                    ?i2_I2C2_DO_SEND_ADR_READ 0001                           ___lmul@multiplicand 008F  
                                       __Addr 0259             __size_of_TMR6_SetInterruptHandler 000E  
                                       _chBPM 00C5                     ?_TMR6_SetInterruptHandler 008B  
                             __end_of_command A612                              __end_of_TMR2_ISR A31E  
                               __CFG_WRTB$OFF 000000                        ?_I2C2_MasterDisableIrq 0001  
                             __end_of_display A74E                                 __CFG_WRTC$OFF 000000  
                            __end_of_TMR4_ISR A2FC                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR6_ISR A2DA                               __end_of_flowChk 5818  
                                       __cols 0258                __end_of_I2C2_DO_SEND_ADR_WRITE A494  
                                  i2isalpha@c 0001                                         _pCtrl 01E3  
                     __size_of_aCaptGetResult 0294                               __end_of_keyPeek 903C  
                                  i2isdigit@c 0001                               __end_of_keyRead 96CE  
                                       _clear A4DA                                         _pInst 01EB  
                                       _blink A662                      ?_I2C2_CallbackReturnStop 0160  
                                       _flags 00B6                         pressureSensorChk@time 016C  
                                       _tInsp 0240                                         __rows 0257  
                                 ?_TMR2_Start 0001                                         _intIP 01B5  
                                       _keysC 02ED                                         _keysD 02E7  
                       ?_ADCC_StartConversion 0001                                         _fputc 83A4  
                             __end_of_isalpha 9B92                                         _fputs 9860  
                             __end_of_isdigit 9BC8                                   ?_TMR4_Start 0001  
                  pressureSensorChk@offsetCal 0179                                         _lungC 01DB  
                                       _lungR 02D5                                         _isqrt 8500  
                       ?_I2C2_MasterOperation 0001                            __CFG_MCLRE$EXTMCLR 000000  
                                       atoi@n 0107                                         pad@fp 009D  
                                       atoi@s 00A1                                         _width 00B2  
                                       _putch A55C                                   ?_TMR6_Start 0001  
                       I2C2_Close@returnValue 008B                               _I2C2_DO_TX$2655 000B  
                                       dtoa@d 0102                                         dtoa@i 0122  
                                       dtoa@n 011A                                         dtoa@p 0114  
                                       dtoa@s 0118                                         dtoa@w 0116  
                                 keyReadEC@ch 009D             __end_of_I2C2_DO_SEND_RESTART_READ A718  
                             __end_of_islower 9B26                               __end_of_isspace 9714  
                       ??_I2C2_MasterSendNack 0001                                SelfTest@initOk 039E  
                     __end_of_TMR1_Initialize 9860                               __end_of_isupper 9B5C  
                             __end_of_timeGet A5BC                                         pclath 003FFA  
                                       tablat 003FF5                                SelfTest@vddVal 039C  
                            __end_ofi2___lmul 90F8                          _I2C2_DO_RX_NACK_STOP A6FC  
                       ??_I2C2_MasterResetBus 0001                              __end_ofi2___wmul A05A  
                                       plusw1 003FE3                                         plusw2 003FDB  
                             _MonitorErrorClr A5CE                               _MonitorErrorSet A5BC  
                __size_of_ADCC_GetFilterValue 0016                                    i2islower@c 0001  
                      __end_of_MonitorMsgBusy A5F2                                         status 003FD8  
                                  i2isspace@c 0001                        __end_of_MonitorMsgSend A0DC  
                              SelfTest@tstamp 0396                               __end_of_sprintf 92BC  
                                       xtoa@c 0125                                         xtoa@d 0102  
                                       xtoa@i 0123                                         xtoa@n 011B  
                                       xtoa@p 0117                             timeElapsed@intDur 0099  
                                       xtoa@w 0119                                         xtoa@x 010A  
                                ??_I2C2_DO_RX 0001                                  ??_I2C2_DO_TX 0007  
                             __end_of_toupper 9414              _UART1_DefaultFramingErrorHandler 000000  
                          __size_ofi2___aodiv 0158                                ?i2_I2C2_NackCb 0005  
                          __size_ofi2___aomod 0134                                 main@pAux_3859 03C5  
                                ??_I2C2_MOpen 0094                                    i2isupper@c 0001  
                                ??_I2C2_Close 008B                              __end_ofi2_printf A1E8  
                        __end_of_digitalReadC 9FFE                          __end_of_digitalReadD 9FD0  
                    _I2C2_MasterIsStopFlagSet A796                ??_TMR6_DefaultInterruptHandler 0001  
                                _toupper$5491 0097                              __end_ofi2_strlen 9DC8  
                           ??_I2C2_MasterOpen 008B                                 _fsmStateTable FA51  
                   ??_I2C2_MasterIsTxBufEmpty 0001                             ??_I2C2_MasterStop 0001  
                           ??_I2C2_Initialize 008B                               __initialization 89B0  
                           aCaptGetResult@sel 0167                                 send4bits@mode 008B  
                      ?_I2C2_DO_BUS_COLLISION 0001                            i2_I2C2_SetCallback 8C26  
                                __end_of_atoi 7176                                  __end_of_main 2B44  
                                __end_of_dtoa 616A                               ??_adcCaptureIsr 0057  
                                __end_of_home A4DA                              i2_aCaptGetResult 6948  
                                __end_of_send A150                                    i2printf@ap 0052  
                                __end_of_xtoa 66B4                            _expanderWriteBlock A5F2  
                               i2adcGetCh@sel 0056                                __CFG_SAFEN$OFF 000000  
                                 ?i2_adcGetCh 0001                            __size_ofi2_isalpha 0034  
                     __end_of_TMR2_Initialize 9FA2           __end_of_I2C2_SetAddressNackCallback A3E2  
                 _I2C2_SetAddressNackCallback A3C2                            __size_ofi2_isdigit 0034  
                 ?_INTERRUPT_InterruptManager 0001                                  flowChk@aPVal 0183  
                                 i2_vfpfcnvrt 4C6A                                  ?_UART1_Write 0001  
                          __size_ofi2_islower 0034                            __size_ofi2_isspace 0044  
                               i2vfpfcnvrt@ap 0048                                 i2vfpfcnvrt@fp 0045  
             __end_ofi2_rd1RegCompleteHandler 9EB8                                 i2vfpfcnvrt@ll 0060  
                                 i2_xtoa$4910 0031                                   i2_xtoa$4911 0033  
                          __size_ofi2_isupper 0034                           ?i2_I2C2_SetCallback 0001  
                              _keyReadEC$4081 009C                                        ??_atoi 00A3  
                    _TMR2_SetInterruptHandler A6C4                                        ??_main 039F  
                                      ??_dtoa 010A                                        ??_home 009F  
                                      ??_send 0090                              __end_of_SelfTest 4232  
                              __CFG_PR1WAY$ON 000000                 i2ADCC_StartConversion@channel 0001  
                                      ??_xtoa 010B                              main@pInspOSScale 03C1  
                               __activetblptr 000003                          _rVLowActuationTstamp 023C  
             __end_ofi2_wr1RegCompleteHandler 9E58                                 ?_aCaptureInit 0001  
                         ?_expanderWriteBlock 0001          __size_of_UART1_SetTxInterruptHandler 000E  
                                 ?_LcdI2CInit 009F                                        ?i2_abs 0013  
                          __size_ofi2_toupper 0052                                        ?i2_pad 0013  
                  i2wr1RegCompleteHandler@ptr 0005                             lcdIrqHandler@byte 0002  
                            __end_of_bRateGet A274                            __end_of_I2C2_DO_RX 8B34  
                          __end_of_I2C2_DO_TX 7E6C                               _TMR6_Initialize 9F18  
                            _UART1_Initialize 8816                                    i2toupper@c 0007  
                               vMeasureIsr@v1 0081                                 vMeasureIsr@v2 0083  
               ??_I2C2_SetAddressNackCallback 0094                            __end_of_I2C2_MOpen 8EB4  
                     ??i2_I2C2_MasterClearIrq 0001                            __end_of_I2C2_Close A104  
                                      ?_clear 0001                                        ?_blink 0001  
                            __end_of_adcGetCh 936A                       __end_of_TMR0_StartTimer A87E  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 008D  
                                      _ADLTHH 003EDF                                        STR_100 FFC7  
                                      _ADLTHL 003EDE                                        STR_101 FF8D  
                                      STR_102 FE0C                                        ?_fputs 0096  
                                      STR_103 FE2E                                        STR_104 FF83  
                                      STR_105 FFDF                                        STR_106 FEE2  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        ?_isqrt 0001  
                           I2C2_MClose@trfRsp 008C                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 008B                                        _ADUTHL 003EE0  
                    i2_I2C2_DO_SEND_ADR_WRITE A506                        ??_I2C2_MasterEnableIrq 008B  
                ?i2_I2C2_MasterDisableRestart 0001                     _I2C2_MasterDisableRestart A83C  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _T0CON0 003FB8                                        _T0CON1 003FB9  
                             ??_printstrblock 0091                                        _RB1I2C 003A5A  
                      ??_I2C2_MasterGetRxData 0001                                        _T1GATE 003FB4  
                                      _RB2I2C 003A5B                                        _T1GCON 003FB3  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                         __end_of_aCaptRstFlt 7BAC                                        _RB1PPS 003A09  
             _I2C2_DO_SEND_ADR_READ$intlevel0 A1A2                           i2UART1_Write@txData 0001  
                                      _RB2PPS 003A0A                         ?_I2C2_DO_RX_NACK_STOP 0001  
                                      _RC1PPS 003A11                                 ??_MonitorInit 008B  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                  __displaymode 00CB  
                                      i2l2004 6B78                                        i2l1080 8AEA  
                                      i2l3111 61F8                                        i2l3031 8590  
                              __CFG_WDTCCS$SC 000000                                        i2l3109 61EC  
                                      i2l3134 6BEE                                        i2l3136 6BFA  
                                      i2l3098 81C6                                        i2l1943 9478  
                                      i2l1947 5B98                                        i2l1949 5E7C  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i2l3907 72D8                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l1998 6A84                                        i2l3876 994C  
                                      i2l3981 9500                                        _FVRCON 003EC1  
                                   ??i2_fputc 0007                                     ??i2_fputs 0010  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 013C  
                        ??i2_I2C2_SetCallback 0005                               flowChk@aPValMax 017E  
                             flowChk@aPValMin 017A                                     ??i2_putch 0002  
                            i2___lmul@product 0009                   ?i2_I2C2_CallbackReturnReset 0005  
                    _I2C2_CallbackReturnReset A7C4                             _pressureSensorChk 4232  
                       _UART1_SetErrorHandler A69A                               ?_MonitorMsgBusy 0001  
                                      _BdTrig 01F5                               ?_MonitorMsgSend 0001  
                              i2___aodiv@sign 0012                                   INTSTAT_ADDR 0000D3  
                            __end_of___xxtofl 744C                                        i2abs@a 0013  
                        ??_expanderWriteBlock 008F                                  ?_timeDelayMs 009B  
                                      i2_atoi 7176                                        i2_dtoa 616A  
                                      i2pad@i 001A                                        i2pad@p 0017  
                   pressureSensorChk@aPValMax 0181                                        i2pad@w 001C  
                   pressureSensorChk@aPValMin 0183                                     ??_MenuMng 0160  
                                      i2_xtoa 6BD2                                  ?_timeElapsed 0093  
                          ?_pressureSensorChk 016C                        ?_I2C2_MasterSetCounter 0001  
                      __size_of_inspOSMeasure 0418                          __size_of_noBacklight 000C  
                                      _eBRate 00BB                        ?_I2C2_MasterSendTxData 0001  
                        _rVMedActuationTstamp 01A3                                __CFG_XINST$OFF 000000  
                        _effectiveFlowRateInv 01CD                        pressureSensorChk@aPVal 018F  
                                      _chPEEP 00C2                                  vfprintf@cfmt 00AD  
                                      ___flge 7E6C                        pressureSensorChk@mPVal 018D  
                              i2___aomod@sign 0012                          I2C2_SetBuffer@buffer 008B  
                                      _chMaxP 00C3                                        _chMaxV 00BF  
           __size_of_I2C2_MasterClearNackFlag 0004                                        ___lmul 903C  
                     __end_of_TMR1_StartTimer A87A                             _ADCC_ThresholdISR A340  
                                   ??___aodiv 009B                                        ___tmul 963E  
                               i2vfprintf@fmt 0077                                     ??___fladd 00A1  
                   ?_I2C2_MasterClearNackFlag 0001                                     ??___aomod 009B  
                                      ___wmul 9DF8                                     ??___awdiv 008F  
                                      _pExpOS 01DD                                __CFG_STVREN$ON 000000  
                                   ??___fltol 0100                                     ??___lldiv 009F  
                      ??_I2C2_DO_ADDRESS_NACK 0007                                     ??___ltdiv 0091  
                         MonitorMsgSend@state 0172                                     ??___lwdiv 008F  
                         __size_of_TMR2_Start 0004                           ??_pressureSensorChk 016E  
                                 ?i2_vfprintf 0075                            keyReadEC@longPress 009B  
                        __size_of_vMeasureGet 005A                           __size_of_TMR4_Start 0004  
                        __size_of_vMeasureIsr 00A0                          __size_of_vMeasureRst 001C  
                            ?_TMR0_Initialize 0001                            ?_ADCC_ThresholdISR 0001  
                     __end_of_TMR4_Initialize 9F74                           __size_of_TMR6_Start 0004  
                                      clear_0 89FA                                        clear_1 8A06  
                                      clear_2 8A12                                        clear_3 8A1E  
                            ___awdiv@quotient 0091               __end_ofi2_I2C2_DO_SEND_ADR_READ A340  
                   pressureSensorChk@mPValMax 017D                     pressureSensorChk@mPValMin 017F  
                                      _printf A086                                        pad@buf 009F  
                              ??_aCaptureInit 00AF                                        dtoa@fp 0100  
                                   ??_command 0091                                        _strlen 9D32  
                                      _volume 022B                                     ??_display 0092  
                                   ??_flowChk 0173                                     ??_keyPeek 008E  
                                   ??_keyRead 0090                               _ADCC_Initialize 8D0C  
        __end_of_TMR4_DefaultInterruptHandler A8B4         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler A8B2               __end_of_I2C2_CallbackReturnStop A7D8  
                                      fputc@c 008D                                _PMD_Initialize A20C  
                          __size_of_bRateInit 0024                              __end_of_timeDiff 9D32  
                                      fputs@c 009A                                        fputs@i 009B  
                           __end_ofi2___aodiv 76FC                                        fputs@s 0096  
                                   ??_isalpha 008D                                     ??_isdigit 008D  
                           __end_ofi2___aomod 7964                              __end_of_timeInit A7C4  
                          __size_of_bRateUpdt 00C8                                 main@printTime 03B8  
                 ??_I2C2_MasterIsCountFlagSet 0001                           ??_ADCC_ThresholdISR 005F  
                                      isqrt@x 0001                                     ??_islower 008D  
                                __mediumconst FA50                                     ??_isspace 008D  
                                      tblptrh 003FF7                                     ??_isupper 008D  
                                      tblptrl 003FF6                                     ??_timeGet 0095  
                                      tblptru 003FF8                        ??_ADCC_StartConversion 008B  
                     __end_of_MonitorErrorClr A5E0                              __end_of_printstr 7CB0  
                     __end_of_MonitorErrorSet A5CE                            timeElapsedR@intDur 0099  
                      ??_I2C2_MasterOperation 00AF              i2I2C2_CallbackReturnReset@funPtr 0005  
              I2C2_CallbackReturnReset@funPtr 0160                            i2___aomod@dividend 0001  
                            __end_of_vfprintf 8DE8                          __end_of_vMeasureInit A12A  
    TMR6_SetInterruptHandler@InterruptHandler 008B      TMR4_SetInterruptHandler@InterruptHandler 008B  
    I2C2_SetInterruptHandler@InterruptHandler 008B      TMR2_SetInterruptHandler@InterruptHandler 008B  
 UART1_SetTxInterruptHandler@InterruptHandler 008B  ADCC_SetADTIInterruptHandler@InterruptHandler 008B  
        __end_of_UART1_SetOverrunErrorHandler A68C         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler A67E                     _UART1_DefaultErrorHandler 000000  
                                   ??_sprintf 00AF                               flowChk@maxFlowL 0178  
                             _pValveActuation 01E1                                        xtoa@fp 0100  
                                   ??_toupper 0093             __size_of_I2C2_MasterClearStopFlag 0004  
                               main@tstScreen 03B2                            timeElapsed@intTime 0097  
                             flowChk@minFlowL 0180                     ?_I2C2_MasterClearStopFlag 0001  
               __size_of_INTERRUPT_Initialize 0004                     __end_of_pressureSensorChk 4812  
               __size_of_I2C2_DO_SEND_RESTART 0004                                    ___flge@ff1 0099  
                                  ___flge@ff2 009D                              ?_TMR1_Initialize 0001  
                                ___xxtofl@arg 0095                             __end_ofi2_isalpha 9CCC  
                           __end_ofi2_isdigit 9D00                                  ___xxtofl@exp 0094  
                           _SYSTEM_Initialize 9ABA                                  ___xxtofl@val 008B  
                         __size_ofi2_adcGetCh 0054                                 ??_I2C2_MClose 008C  
               ??i2_I2C2_MasterDisableRestart 0001                                    __accesstop 0060  
                     __end_of__initialization 8A30                                 ?_setBacklight 0001  
                             ??i2_I2C2_NackCb 0007                             __end_ofi2_islower 9C64  
                        __size_of_keyReadInit 0014                             __end_ofi2_isspace 979C  
                     ?_I2C2_MasterIsRxBufFull 0001                             ?_I2C2_MasterClose 0001  
                           __end_ofi2_isupper 9C98                                _screenMng$6112 015E  
                        __end_of_CtrlPowerOff 864A                                 ??_I2C2_NackCb 00AF  
                          ?_SYSTEM_Initialize 0001                              I2C2_MOpen@trfRsp 0094  
                            _I2C2_DO_RX_EMPTY 8A36                                 ___rparam_used 000001  
           _rdBlkRegCompleteHandler$intlevel0 9370                                    ___fltol@f1 00A9  
                          __size_of_backlight 000C                      I2C2_SetBuffer@bufferSize 008D  
                     i2_I2C2_MasterSetCounter A7EC                            ??_I2C2_MasterClose 008B  
                            _I2C2_DO_TX_EMPTY 8F18                       i2_I2C2_MasterSendTxData A7E2  
                           __end_ofi2_toupper 950E                                   SelfTest@idx 0392  
                   __end_of_ADCC_ThresholdISR A362                                 __end_ofi2_abs 995A  
                         __end_of_MonitorInit A8B0                           __size_of_LcdI2CInit 0124  
                               __end_ofi2_pad 8240                    ?i2_rdBlkRegCompleteHandler 0005  
                     _rdBlkRegCompleteHandler 936A                          _lastI2C2LTrfResponse 0254  
                              __pcstackCOMRAM 0001                                send4bits@value 008C  
                      aCaptGetResult@lclValid 0166                                  __pidataBANK1 A7AE  
                                __pidataBANK2 A532                           ??_SYSTEM_Initialize 008D  
                               __end_of_clear A4F0                                     ?_TMR2_ISR 0001  
                               __end_of_blink A670                         __end_of_lcdIrqHandler 7D8E  
                                   ?_TMR4_ISR 0001                                     ?_TMR6_ISR 0001  
                               __end_of_fputc 8452                                 __end_of_fputs 98A0  
                  ??_I2C2_ClearInterruptFlags 0001                                 __end_of_isqrt 85A6  
                              aCaptRstFlt@sel 0164                                 __end_of_putch A570  
                                 i2printf@fmt 007B                              ?_TMR2_Initialize 0001  
                     __end_of_TMR6_Initialize 9F46                        __end_of_PMD_Initialize A230  
                                  _pAvgUShort 01E7                                    _chVentMode 0255  
                                   ?i2___lmul 0001                                     ?i2___wmul 0001  
                           ?_I2C2_SetCallback 008B                  ??i2_I2C2_MasterEnableRestart 0001  
                  I2C2_SetDataNackCallback@cb 0090                                 _inspOSMeasure 50A0  
                                     ??i2_abs 0015                                   i2putch@byte 0002  
                                     ??i2_pad 0019                                   _aCaptRstFlt 7A88  
                     __size_of_TMR1_ReadTimer 002C                     _UART1_FramingErrorHandler 02FA  
                          ??_I2C2_SetCallback 008F                 ?_TMR4_DefaultInterruptHandler 0001  
                        _lastI2C2MTrfResponse 00BD                                _aCaptGetResult 66B4  
                              i2vfpfcnvrt@fmt 0047                                     ?i2_printf 007B  
                              i2vfpfcnvrt@llu 0068                   ADCC_StartConversion@channel 008B  
                              timeDiff@intDur 0099                       __size_of_aCaptureOffGet 004A  
                            timeDelayMs@delms 009B              __end_of_I2C2_SetDataNackCallback A3C2  
                                     ??_clear 009F                                     ?i2_strlen 0001  
                                     ??_blink 0092                       __size_of_aCaptureOffSet 004A  
                            ?_TMR0_StartTimer 0001                        ??_I2C2_DO_RX_NACK_STOP 0001  
                                     ??_fputc 0091                     __end_of_SYSTEM_Initialize 9AF0  
                                     ??_fputs 009A                                       ??_isqrt 0003  
                       __end_of_I2C2_DO_RESET A642                   ??_I2C2_DO_SEND_RESTART_READ 0002  
                             __CFG_IVT1WAY$ON 000000                                       ??_putch 008C  
                       _I2C2_InterruptHandler 00B8                                timeDiff@startT 0095  
                               ?i2_TMR6_Start 0001                                 flowChk@initOk 0182  
                          __size_of_keyReadEC 0088                                    __pbssBANK0 00AF  
                                  __pbssBANK1 0195                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                __end_of_I2C2_MasterIsRxBufFull A734  
               ?_UART1_SetOverrunErrorHandler 008B                                ??_setBacklight 0090  
                      ?_UART1_SetErrorHandler 008B                    __end_ofi2_I2C2_DO_RX_EMPTY 8BAE  
                       __size_of_digitalReadC 002E                         __size_of_digitalReadD 002E  
              __size_of_rd2RegCompleteHandler 003A             __size_of_I2C2_SetInterruptHandler 000E  
                         __size_ofi2_vfprintf 0068                 __end_of_rd2RegCompleteHandler 9A46  
                   ?_I2C2_SetInterruptHandler 008B                               __CFG_MVECEN$OFF 000000  
                               flowChk@tstamp 017C                __size_of_wr2RegCompleteHandler 003A  
               __end_of_wr2RegCompleteHandler 9ABA                                       ?i2_atoi 0008  
                                     ?i2_dtoa 001E                         _TMR4_InterruptHandler 02F6  
            __size_ofi2_rd1RegCompleteHandler 0030                         _rd1RegCompleteHandler 9A46  
                                  _rCycleTime 01CB                                       ?i2_xtoa 001E  
                                     IVTBASEH 003FD6                     _I2C2_MasterIsCountFlagSet A734  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                   ?_SelfTest 0001                             __end_of_bRateInit A20C  
                           __end_of_bRateUpdt 80D2                          i2I2C2_SetCallback@cb 0001  
            __size_ofi2_wr1RegCompleteHandler 0030                         _wr1RegCompleteHandler 99D2  
                            ??_FVR_Initialize 008B               _rd1RegCompleteHandler$intlevel0 9A4C  
             _wr1RegCompleteHandler$intlevel0 99D8                              vMeasureIsr@instP 0085  
                          __size_of_send4bits 005A                             aCaptureOffGet@sel 0162  
                    rd1RegCompleteHandler@ptr 0160                           __end_of_I2C2_MClose A02C  
           __end_ofi2_rdBlkRegCompleteHandler 95AA                                     ?_bRateGet 0001  
                                     ?___flge 0099                                    _lcdBtnRRow 02C9  
                                     ?___lmul 008B           __size_ofi2_I2C2_MasterEnableRestart 0006  
                   __size_ofi2_I2C2_SetBuffer 0020                                       _I2C2CLK 003D65  
                                     ?___tmul 008B                                       _I2C2CNT 003D56  
                                     _I2C2ERR 003D60                                       ?___wmul 009B  
                                     _I2C2PIE 003D64                                       _I2C2PIR 003D63  
                         __end_of_I2C2_NackCb 99D2                              ?_TMR1_StartTimer 0001  
                                     _I2C2RXB 003D54                                       _I2C2TXB 003D55  
                             __CFG_PPS1WAY$ON 000000              __end_of_TMR6_SetInterruptHandler A6B6  
                                  ??_TMR2_ISR 0060                                i2_toupper$5491 000D  
                                  ??_TMR4_ISR 0001                       __end_of_ADCC_Initialize 8D7A  
                                  ??_TMR6_ISR 0003                            __size_of_setCursor 003C  
                                   ?_adcGetCh 0001          __size_ofi2_I2C2_MasterDisableRestart 0006  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                          __size_of_screenMng 0726                             aCaptureOffSet@sel 0162  
                              ___lmul@product 0093          __end_of_ADCC_SetADTIInterruptHandler A6E0  
       __size_of_ADCC_SetADTIInterruptHandler 000E                  _ADCC_SetADTIInterruptHandler A6D2  
                     ??_I2C2_MasterGetCounter 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                __size_ofi2_UART1_is_tx_ready 0010                                       ?_printf 0146  
                             ?_PMD_Initialize 0001                           _ADCC_GetFilterValue A51C  
                                  _lcdPrintBR 01C5                                    _lcdPrintTR 01C6  
                                     ?_strlen 008B                                    ??i2___lmul 0009  
                                  ??i2___wmul 0005                                       _U1ERRIE 003DFA  
                              ?_inspOSMeasure 0001                                       _U1ERRIR 003DF9  
                     ??_I2C2_MasterDisableIrq 008B                                       _T4INPPS 003ACB  
                                     _T6INPPS 003ACC                                       i2l12031 9F08  
                                     i2l11119 8C6A                           __CFG_PWRTS$PWRT_OFF 000000  
                                     i2l12027 9EF8                              main@vInspOSScale 03B6  
                                     i2l12127 A45A                                       i2l13141 7D88  
                                     i2l12391 852A                                       i2l12633 90AA  
                                     i2l12393 8538                        __end_of_aCaptGetResult 6948  
                                     i2l12637 90BE                                       i2l12397 857E  
                                     i2l12389 851E                                       i2l13517 9D8C  
                        __size_of_UART1_Write 0042                                       i2l17003 71F0  
                                     i2l16203 9818                                       i2l17013 726A  
                                     i2l17005 71F8                                       i2l16205 981A  
                                     i2l16221 A586                                       i2l17007 71FE  
                                     i2l17111 4EFC                                       i2l17009 722C  
                                     i2l16411 98E8                                       i2l17131 5046  
                                     i2l16421 9DA8                                       i2l17125 5004  
                                     i2l17061 4CC6                                       i2l17053 4CB2  
                                     i2l17141 5066                                       i2l18005 8B12  
                                     i2l16255 846A                                       i2l16415 9904  
                                     i2l17135 5050                                       i2l17055 4CB4  
                                     i2l18023 9426                                       i2l17073 4CD2  
                                     i2l17065 4CCA                                       i2l17057 4CC2  
                                     i2l18041 9104                                       i2l16419 9DA4  
                                     i2l16611 81D0                                       i2l17091 4DA0  
                                     i2l17323 9C1C                                       i2l18019 9420  
                                     i2l16701 790C                                       i2l16189 97E0  
                                     i2l16605 81AC                                       i2l17093 4DC4  
                                     i2l17077 4CDC                                       i2l17069 4CCE  
                                     i2l17181 8E2A                                       i2l17325 9C22  
                                     i2l18029 942A                                       i2l18045 910A  
                                     i2l16615 81EC                                       i2l17095 4DD0  
                                     i2l17079 4D22                                       i2l18055 9116  
                                     i2l17503 8B40                                       i2l19015 8758  
                                     i2l16705 7932                                       i2l16609 81BE  
                                     i2l18049 9110                                       i2l18401 6A16  
                                     i2l19017 8760                                       i2l16651 7632  
                                     i2l16643 75F8                                       i2l16619 8222  
                                     i2l17179 8E00                                       i2l17515 8B54  
                                     i2l16661 768E                                       i2l16637 75D0  
                                     i2l17509 8B48                                       i2l17525 8B64  
                                     i2l18421 6B3C                                       i2l18413 6AF2  
                                     i2l18405 6A5A                                       i2l16911 63CA  
                                     i2l18351 9470                                       i2l16729 9792  
                                     i2l16649 761E                                       i2l16665 76A4  
                                     i2l16681 785C                                       i2l18345 946C  
                                     i2l18601 8ED4                                       i2l18417 6B38  
                                     i2l16691 78AE                                       i2l16915 63E4  
                                     i2l18371 9498                                       i2l17731 8F24  
                                     i2l18427 6B4C                                       i2l18435 6B96  
                                     i2l16669 76CA                                       i2l16685 7880  
                                     i2l18357 9474                                       i2l17725 8F1C  
                                     i2l16863 61D0                                       i2l16943 6C74  
                                     i2l16935 6C52                                       i2l16697 78F6  
                                     i2l16689 789A                                       i2l16881 6226  
                                     i2l16929 6C12                                       i2l17737 8F30  
                                     i2l17745 8F38                                       i2l17497 8B38  
                                     i2l16891 6362                                       i2l18395 6992  
                                     i2l16877 6216                                       i2l16981 6E1C  
                                     i2l16957 6D0A                                       i2l16965 6DA2  
                                     i2l17941 7DA6                                       i2l17933 7D9A  
                                     i2l18397 69BE                                       i2l18399 69EA  
                                     i2l18913 5C0C                                       i2l17937 7DA0  
                                     i2l16987 7188                                       i2l17963 7E50  
                                     i2l17955 7E20                                       i2l17947 7DAA  
                                     i2l16997 71DE                                       i2l16989 718C  
                                     i2l17965 7E58                                       i2l17949 7DF2  
                                     i2l17975 7E68                                       i2l17991 8AC6  
                                     i2l18893 5B8A                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 008B                             __end_of_backlight A766  
                                   _I2C2_MAck A842                                    _pQuantaExp 01CF  
                    ?i2_rd2RegCompleteHandler 0005                                  _digitalReadC 9FD0  
                                _digitalReadD 9FA2             __size_of_I2C2_MasterEnableRestart 0006  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                   _I2C2_Open 864A                            __size_of_vfpfcnvrt 0458  
                   ?_I2C2_MasterEnableRestart 0001                       __size_of_I2C2_DO_RX_ACK 0008  
                     __size_of_I2C2_DO_TX_ACK 0008                              flowChk@aPValMean 0176  
                                  ??i2_printf 0050                                       _OSCTUNE 0039DE  
                            ?_MonitorErrorClr 0001                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                      ?i2_wr2RegCompleteHandler 0005  
                                     _SLRCONE 003A83                              ?_MonitorErrorSet 0001  
                                  ??i2_strlen 0003                                  ??_TMR2_Start 008B  
                          _inspOSMeasure$6108 0164                      __end_ofi2_aCaptGetResult 6BD2  
                                     _OSCheck 01BB                                  ??_TMR4_Start 008B  
                              ??i2_TMR6_Start 0001                    ??_I2C2_MasterIsStopFlagSet 0001  
                                ??_TMR6_Start 008B                   __end_of_MonitorMsgSendBlock A19C  
                             _I2C2_MasterOpen A296                                 ?_SV2DelayOpen 0001  
                             _I2C2_MasterStop A84E                               _I2C2_Initialize A230  
                  __size_of_pressureSensorChk 05E0                                       i2_fputc 8452  
                                     i2_fputs 98DE                                   _MonitorInit A8AE  
                        ?_ADCC_GetFilterValue 0001                     ??i2_I2C2_MasterSetCounter 0001  
                                     i2atoi@n 0015                                       i2pad@fp 0013  
                                     i2atoi@s 0008                                       i2_putch A584  
                                     i2dtoa@d 0020                                       i2dtoa@i 0040  
                                     i2dtoa@n 0038                                       i2dtoa@p 0032  
                                     i2dtoa@s 0036                                       i2dtoa@w 0034  
                   ??i2_I2C2_MasterSendTxData 0001                                       _i2cBuff 0300  
                               ?_timeElapsedR 0093                     ??_rdBlkRegCompleteHandler 0094  
                      __size_ofi2_UART1_Write 0042                          __end_of_aCaptureInit 955E  
                 __size_of_I2C2_MasterSendAck 0006                       ??_I2C2_DO_BUS_COLLISION 0007  
            __size_ofi2_I2C2_DO_SEND_ADR_READ 0022                                    _parBuffLen 00C7  
                       _I2C2_DO_SEND_ADR_READ A19C                                       _MenuMng 2B44  
                             __size_ofi2_atoi 0170                                    _parBuffPtr 00C8  
                             __size_ofi2_dtoa 02B0                                    ??_SelfTest 0191  
                                  _ctrlStatus 01C0                               __size_ofi2_xtoa 0280  
                                     i2xtoa@c 0043                                       i2xtoa@d 0020  
                                     i2xtoa@i 0041                                       i2xtoa@n 0039  
                                     i2xtoa@p 0035                                       i2xtoa@w 0037  
                                     i2xtoa@x 0028                                       __Hparam 0000  
                  __size_of_ADCC_ThresholdISR 0022                                       __Lparam 0000  
                    __end_of_UART1_Initialize 88A0                                     ?_timeDiff 0095  
            __size_of_I2C2_CallbackReturnStop 000A                    ??_TMR2_SetInterruptHandler 008D  
                        __size_of_timeDelayMs 0034                                     ?_timeInit 0001  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                    i2rd2RegCompleteHandler@ptr 0005  
                 __end_of_I2C2_MasterClearIrq A810                                    ??_bRateGet 0093  
                        __size_of_timeElapsed 0030                                 ?_PrintStrBusy 0001  
                             __size_of___flge 00D0                                       ___aodiv 744C  
                   _I2C2_DO_SEND_RESTART_READ A70A                                       ___fladd 5818  
                                     ___aomod 76FC                      ??i2_ADCC_StartConversion 0001  
                                     ___awdiv 8928                               __size_of___lmul 005E  
                                   ?_printstr 008B                                       ___fltol 7F3C  
               __size_of_MonitorMsgForcedSend 0196                               __size_of___tmul 004A  
                                     ___lldiv 878C                               __size_of___wmul 0030  
                                     ___ltdiv 8C9C                                       ___lwdiv 92BC  
                                ??i2_adcGetCh 0054                           setBacklight@new_val 0090  
                                  ??_adcGetCh 0160                                     ?_vfprintf 0140  
                              i2vfprintf@cfmt 004E                             __end_of_keyReadEC 8928  
                          __end_of_TMR2_Start A876                                  ?i2_vfpfcnvrt 0045  
                                     _sBreath 01C1                                       __pcinit 89B0  
                                     _pInspOS 02D7                            __end_of_TMR4_Start A882  
                            ?_TMR6_Initialize 0001                                       __ramtop 1000  
                                  _menuStatus 01B8                      TMR1_ReadTimer@readValLow 0092  
                 __size_of_UART1_Transmit_ISR 0032                                       _lcdBusy 00C6  
                          __end_of_TMR6_Start A88A                                    _menuTstamp 0238  
                                     _curASrc 00D1                                       __ptext0 001E  
                                     __ptext1 A104                                       __ptext2 A872  
                                     __ptext3 A7BA                                       __ptext4 A876  
                                     __ptext5 A87A                                       __ptext6 9154  
                                     __ptext7 A662                                       __ptext8 7964  
                                     __ptext9 A4C4                                 ?_I2C2_DO_IDLE 0001  
          __size_of_I2C2_MasterClearCountFlag 0004                               __size_of_printf 002C  
                                     _command A602                                       _intPEEP 01B3  
                                     _display A742                      ?_I2C2_DO_RX_NACK_RESTART 0001  
                                     _vInspOS 01D5                    ??i2_I2C2_DO_SEND_ADR_WRITE 0001  
               ?_ADCC_SetADTIInterruptHandler 008B                                       _flowChk 54B8  
                             __CFG_WRTAPP$OFF 000000                     TMR1_ReadTimer@readValHigh 0091  
                  ?_I2C2_MasterClearCountFlag 0001                               __size_of_strlen 0032  
                                     _keyPeek 8FDC                                       _keyRead 9688  
                                   _T1CONbits 003FB2                       pressureSensorChk@tstamp 017A  
                                     _intMaxP 01EF                                       _intMaxV 01ED  
                       __size_of_vMeasureInit 0026                         _OSCILLATOR_Initialize A494  
                                ??_LcdI2CInit 00A1                                     _T2CONbits 003FAC  
                                __size_of_abs 003E                                       _lastkey 00D0  
                       inspOSMeasure@setScale 016A                                       _menuVal 0197  
                                __size_of_pad 00B4                                       _vQuanta 01A9  
                                     _isalpha 9B5C                               ?_aCaptGetResult 0160  
                                     _isdigit 9B92                                    ??___xxtofl 008F  
                                  ?_I2C2_MAck 0001                                   _I2C2ERRbits 003D60  
                                   _T4CONbits 003FA0                   __end_of_I2C2_MasterSendNack A85A  
                             _ctrlErrorStatus 01C3                                       _islower 9AF0  
                    ??_PIN_MANAGER_Initialize 008B             __size_of_TMR4_SetInterruptHandler 000E  
                                     _isspace 96CE                               __CFG_WRTSAF$OFF 000000  
                    wr1RegCompleteHandler@ptr 0160                    ??_I2C2_CallbackReturnReset 0094  
                                  ?_I2C2_Open 0001                     ?_TMR4_SetInterruptHandler 008B  
           __size_of_I2C2_MasterIsNackFlagSet 000C                                       _isupper 9B26  
                                     _timeGet A5AA                                   _I2C2PIEbits 003D64  
                             __displaycontrol 00CC                     ?_I2C2_MasterIsNackFlagSet 0001  
                                   _T6CONbits 003F94                   __end_of_I2C2_MasterResetBus A800  
                           __end_of_send4bits 9262                                    _vddValMean 0195  
                                 _I2C2PIRbits 003D63                                       atoi@neg 0100  
                            ??_MonitorMsgBusy 008D                              ??_MonitorMsgSend 00AF  
                              ??_SV2DelayOpen 0001                                   _QuantaCheck 01BA  
                           _I2C2_DO_BUS_ERROR A622                    __size_of_SYSTEM_Initialize 0036  
                       __size_of_CtrlPowerOff 00A4                                       _sprintf 9262  
             i2I2C2_CallbackReturnStop@funPtr 0005                 I2C2_CallbackReturnStop@funPtr 0160  
                MonitorMsgForcedSend@trfError 016D                                       _toupper 93C0  
              __size_ofi2_I2C2_MasterClearIrq 0008                          end_of_initialization 8A30  
                           __end_of_setCursor 9996                 __end_ofi2_I2C2_MasterClearIrq A830  
                        adcCaptureIsr@adcData 007F                  i2rdBlkRegCompleteHandler@ptr 0005  
            __end_of_I2C2_MasterClearNackFlag A8AA                ??_TMR4_DefaultInterruptHandler 0001  
                          ?_I2C2_DO_BUS_ERROR 0001                         ??_ADCC_GetFilterValue 0003  
                           __end_of_screenMng 3B84                       ??_I2C2_MasterSetCounter 008B  
                              ??_timeElapsedR 0097                                       fputc@fp 008F  
                    _I2C2_SetDataNackCallback A3A2                                   _I2C2_MClose 9FFE  
                     ??_I2C2_MasterSendTxData 008B                            __end_ofi2_adcGetCh 94BC  
         __end_of_UART1_SetTxInterruptHandler A67E                   _UART1_SetTxInterruptHandler A670  
                                     fputs@fp 0098                           i2___wmul@multiplier 0001  
                      ?_rd1RegCompleteHandler 0160                                 keyPeek@n_4076 008F  
                                  _screenInit 9154                                     i2u1030_40 A730  
                                   i2u1024_40 A722                                     i2u1200_40 7D0C  
                                   i2u1025_40 A73E                                     i2u1026_40 A79E  
                                   i2u1202_40 7D22                                     i2u1201_48 7D0E  
                                   i2u1027_40 A7AA                                     i2u1028_40 A792  
                                   i2u1204_40 7D3A                                     i2u1203_48 7D24  
                                   i2u1206_40 7D52                                     i2u1205_48 7D3C  
                                   i2u2022_48 A350                                     i2u1208_40 7D6C  
                                   i2u1207_48 7D54                                     i2u2024_48 A30C  
                                   i2u1209_48 7D6E                                   _I2C2_NackCb 9996  
                                   i2u1262_48 A2C8                                     i2u1264_48 A2EA  
                                   i2u1612_40 8462                                     i2u1196_40 7CD6  
                                   i2u1701_40 78B2                                     i2u1710_40 978E  
                                   i2u1614_40 84AA                                     i2u1198_40 7CF2  
                                   i2u1197_48 7CD8                                     i2u1711_40 9C90  
                                   i2u2191_40 832C                                     i2u1704_40 992A  
                                   i2u1712_40 9C92                                     i2u1199_48 7CF4  
                                   i2u1705_40 9CC4                                     i2u1713_40 94E8  
                                   i2u2192_48 8330                                     i2u1730_40 61A4  
                                   i2u1706_40 9CC6                                     i2u1714_40 94EA  
                                   i2u1707_40 9CF8                                     i2u1802_48 8B74  
                                   i2u1802_49 8B86                                     i2u1708_40 9CFA  
                                   i2u1740_40 63A6                                     i2u1733_40 61E2  
                      ?_wr1RegCompleteHandler 0160                                     i2u1742_40 63B4  
                                   i2u1646_40 9C5C                                     i2u2189_48 8318  
                                   i2u1735_40 6210                                     i2u1647_40 9C5E  
                                   i2u1751_40 6CE0                                     i2u1736_40 6370  
                                   i2u1752_40 6CE2                                     i2u1911_48 8F00  
                                   i2u1904_40 69B8                                     i2u1911_49 8F12  
                                   i2u1904_45 69AE                                     i2u1729_40 61A2  
                                   i2u1745_40 6BE4                                     i2u1905_40 69E4  
                                   i2u1905_45 69DA                                     i2u1762_40 71DA  
                                   i2u1738_40 6392                                     i2u1754_40 6D6E  
                                   i2u1817_48 8F48                                     i2u1906_40 6A10  
                                   i2u1738_41 6390                                     i2u1817_49 8F5A  
                                   i2u1754_45 6D5C                                     i2u1906_45 6A06  
                                   i2u1739_40 63A0                                     i2u1755_40 6DB2  
                                   i2u1747_40 6C70                                     i2u1907_40 6A3C  
                                   i2u1907_45 6A32                                     i2u1764_40 72A0  
                                   i2u1748_40 6CA6                                       isqrt@op 0005  
                                   i2u1765_40 72A2                                     i2u1597_40 A64E  
                                   i2u1757_40 6DD4                                     i2u1749_40 6CA8  
                                   i2u1781_40 4F38                                     i2u1852_48 7DBA  
                                   i2u1860_48 9126                                 ?_I2C2_MuxInit 0001  
                                   i2u1693_41 75FE                                     i2u1757_41 6DD2  
                                   i2u1852_49 7DCE                                     i2u1860_49 9138  
                                   i2u1758_40 6DE2                ??_UART1_SetOverrunErrorHandler 008D  
                                   i2u1695_40 7636                                     i2u1759_40 6DE8  
                                   i2u1775_40 4E0C                                     i2u1776_40 4E0E  
                                   i2u1856_40 8AC2                                     i2u1777_40 4E1C  
                                   i2u1970_45 5DEE                               ___lldiv@divisor 009B  
                                   i2u1779_40 4E58                                     i2u1971_40 5E4E  
                                   i2u1971_45 5E44                                     i2u1859_48 943A  
                            ___ltdiv@dividend 008B                                     i2u1859_49 944C  
                                   i2u1964_45 5C2C                                     i2u1965_40 5C8C  
                                   i2u1965_45 5C82                                     i2u1982_40 8710  
                                   i2u1966_45 5CC2                                     i2u1967_40 5D22  
                                   i2u1983_40 876C                                     i2u1967_45 5D18  
                                   i2u1968_45 5D58                                     i2u1969_40 5DB8  
                                   i2u1969_45 5DAE                                    _monitorMsg 02BF  
                             ___lldiv@counter 00A3                           ??_I2C2_DO_BUS_ERROR 0001  
                                  ??_timeDiff 0099                             _I2C2_DO_SEND_STOP A440  
                                  ??_timeInit 008B                                   _I2C2_Status 0200  
                              ??_PrintStrBusy 008B                             __end_of_vfpfcnvrt 4C6A  
                          __end_of_LcdI2CInit 7A88                                       postdec1 003FE5  
                                     postdec2 003FDD                           timeElapsedR@intTime 009B  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                            ?_I2C2_DO_SEND_STOP 0001  
                          LcdI2CInit@lcd_Addr 00A1                           i2___lmul@multiplier 0001  
                                  ??_printstr 008D                                  _vMeasureInit A104  
                            ?_ADCC_Initialize 0001                                  ??i2_vfprintf 004E  
                                  ??_vfprintf 00AD                         __end_of_adcCaptureIsr 5E98  
                                   _EDuration 024A                             UART1_Write@txData 008B  
                          LcdI2CInit@lcd_cols 009F                         __CFG_WDTCPS$WDTCPS_31 000000  
                                     strlen@a 008D                                       strlen@s 008B  
                          LcdI2CInit@lcd_rows 00A0                               ??_inspOSMeasure 0160  
                              ??_I2C2_DO_IDLE 0001                                    _pressMills 023A  
                        __end_of_setBacklight A4C4               __end_ofi2_rd2RegCompleteHandler 9E88  
            __end_of_I2C2_MasterClearStopFlag A8A6                                  _mainPSensCal 01F1  
                        I2C2_Open@returnValue 008E            __end_ofi2_I2C2_MasterEnableRestart A86C  
                  i2_I2C2_MasterEnableRestart A866                           timeElapsed@duration 0095  
             __end_of_rdBlkRegCompleteHandler 93C0                      _TMR6_SetInterruptHandler A6A8  
                               i2_UART1_Write 97DE                           ??_I2C2_DO_SEND_STOP 0002  
                                _CtrlPowerOff 85A6               __end_ofi2_wr2RegCompleteHandler 9EE8  
                     __size_of_I2C2_MasterFsm 0064                       __size_of_I2C2_MasterIsr 0006  
                              printstrblock@c 008F                      __end_of_I2C2_DO_RX_EMPTY 8AB8  
                           i2___aodiv@divisor 0009                                   ___fladd@grs 00A8  
                     __end_of_I2C2_MasterOpen A2B8             __end_of_I2C2_MasterClearCountFlag A8AE  
                     __end_of_I2C2_MasterStop A854                       __end_of_I2C2_Initialize A252  
                              _TMR1_ReadTimer A05A                             i2___aodiv@counter 0011  
                                   _IDuration 024C                      __end_of_I2C2_DO_TX_EMPTY 8F7C  
                               ___xxtofl@sign 0093                     __end_of_I2C2_DO_BUS_ERROR A632  
                  i2wr2RegCompleteHandler@ptr 0005                             _I2C2_MasterIsNack A718  
                              _aCaptureOffGet 95F4                              ___ltdiv@quotient 0091  
                              _aCaptureOffSet 95AA                       __size_of_I2C2_SetBuffer 0022  
                         timeElapsed@prevTime 0093                                     i2___aodiv 75A4  
                                _intEDuration 024E                                     i2___aomod 7830  
                          ?_I2C2_MasterIsNack 0001              _I2C2_DO_SEND_ADR_WRITE$intlevel0 A480  
                            __CFG_FEXTOSC$OFF 000000                   i2I2C2_MasterSendTxData@data 0001  
                               ??_noBacklight 0090                         __end_of_printstrblock A176  
               __size_of_I2C2_MasterEnableIrq 0014                 __size_of_I2C2_MasterGetRxData 0006  
                          __end_ofi2_vfprintf 8E50                   __size_ofi2_I2C2_SetCallback 0076  
                     i2_rd1RegCompleteHandler 9E88                        ?_I2C2_DO_SEND_ADR_READ 0001  
                  rdBlkRegCompleteHandler@ptr 0160                      ?_I2C2_MasterIsTxBufEmpty 0001  
                         ??_I2C2_MasterIsNack 0001                                    main@keyTmp 03BA  
                                _intIDuration 01B1                                ??_I2C2_MuxInit 008B  
                   __end_of_I2C2_DO_SEND_STOP A45E                                  SelfTest@cIdx 0394  
                 __size_of_expanderWriteBlock 0010                       i2_wr1RegCompleteHandler 9E28  
                                   i2_isalpha 9C98                                     i2_isdigit 9CCC  
                                  main@tmpVal 03C7                                __end_ofi2_atoi 72E6  
                              __end_ofi2_dtoa 641A                                     i2_islower 9C30  
                                   i2_isspace 9758                                  _MenuMng$4370 016A  
                                _MenuMng$4371 016C                                  _MenuMng$4372 016E  
                                _MenuMng$4373 0170                                  _MenuMng$4374 0172  
                                _MenuMng$4375 0174                                  _MenuMng$4367 0164  
                                _MenuMng$4368 0166                                  _MenuMng$4369 0168  
                              __end_ofi2_xtoa 6E52                                     i2_isupper 9C64  
                               ??_vMeasureGet 00A6                   ??i2_rdBlkRegCompleteHandler 0003  
                               ??_vMeasureIsr 005E                                 ??_vMeasureRst 008B  
              i2I2C2_MasterSetCounter@counter 0001                                     i2atoi@neg 000E  
                                 adcGetCh@sel 0162                              i2_I2C2_SetBuffer A402  
                __end_of_INTERRUPT_Initialize A886               __end_of_I2C2_DO_RX_NACK_RESTART A818  
        __end_of_TMR2_DefaultInterruptHandler A8B6         __size_of_TMR2_DefaultInterruptHandler 0002  
                _TMR2_DefaultInterruptHandler A8B4                  __end_of_I2C2_DO_SEND_RESTART A892  
             __size_ofi2_ADCC_StartConversion 0010                ??_ADCC_DefaultInterruptHandler 0001  
                                   i2_toupper 94BC                                __end_of___flge 7F3C  
                        __end_ofi2_TMR6_Start A88E                      I2C2_MasterOperation@read 0164  
                              __end_of___lmul 909A                                   _chLowVAlarm 00C1  
                              __end_of___tmul 9688                                   vfpfcnvrt@ap 00AB  
                                 vfpfcnvrt@fp 00A8                                   vfpfcnvrt@ll 012B  
                              __end_of___wmul 9E28                 __size_of_I2C2_DO_ADDRESS_NACK 0054  
                   __size_of_I2C2_MasterClose 000A                             __size_of_TMR2_ISR 0022  
                           __size_of_TMR4_ISR 0022                                     i2fputc@fp 0005  
                           __size_of_TMR6_ISR 0022                                ?i2_UART1_Write 0001  
                      ?_OSCILLATOR_Initialize 0001                                     i2fputs@fp 000E  
                      __end_of_TMR1_ReadTimer A086                      ??_I2C2_DO_SEND_ADR_WRITE 008C  
                                 printstr@idx 008E                     __end_of_I2C2_MasterIsNack A726  
            __end_of_I2C2_SetInterruptHandler A6EE                              i2___wmul@product 0005  
                              __end_of_printf A0B2                                    keyRead@tmp 0092  
                      __end_of_aCaptureOffGet 963E                        __end_of_aCaptureOffSet 95F4  
                              __end_of_strlen 9D64                                   ??_I2C2_MAck 008B  
                                ?_aCaptRstFlt 0001                           start_initialization 89B0  
                              _I2C2_DO_RX_ACK A820                             __size_ofi2___lmul 005E  
                              _I2C2_DO_TX_ACK A818                            bRateUpdt@triggered 008E  
                                 ??_I2C2_Open 008D                             __size_ofi2___wmul 002E  
                            _rValveDelayStart 019B                      __size_of_TMR0_Initialize 0016  
                                send4bits@idx 008D               __size_of_PIN_MANAGER_Initialize 00B8  
                                 __end_of_abs 98DE                                   __end_of_pad 82F4  
               ?_I2C2_SetDataCompleteCallback 0090                       ??_UART1_SetErrorHandler 008D  
                                _lastCycleVol 0248                                    ?i2___aodiv 0001  
                                  ?i2___aomod 0001                                 ??_keyReadInit 008B  
                                i2vfpfcnvrt@c 0070                 __size_of_ADCC_StartConversion 0012  
                       __size_of_aCaptureInit 0050                                    ivt0x8_base 0008  
                                   _LowVAlarm 01F3                 __size_of_I2C2_MasterOperation 0044  
                           __size_ofi2_printf 0026                             __size_ofi2_strlen 0032  
                                   i2strlen@a 0003                                     i2strlen@s 0001  
                         i2_UART1_is_tx_ready A642                       i2_I2C2_DO_SEND_ADR_READ A31E  
                 I2C2_SetDataNackCallback@ptr 0092                     __size_of_I2C2_SetCallback 0078  
                               _uart1TxBuffer 0350                                   ?_screenInit 0001  
                                    ??i2_atoi 000A                                      ??i2_dtoa 0028  
          __size_ofi2_I2C2_CallbackReturnStop 0004                         __end_ofi2_I2C2_NackCb 9C30  
                                    ??i2_xtoa 0029                      _I2C2_MasterClearNackFlag A8A6  
                                  ?i2_isalpha 0001                    ?i2_I2C2_CallbackReturnStop 0005  
                     _I2C2_CallbackReturnStop A7CE                                    ?i2_isdigit 0001  
                                  ?i2_islower 0001                                    ?i2_isspace 0001  
                            __CFG_LPBOREN$OFF 000000                                    ?i2_isupper 0001  
                    __size_of_TMR1_Initialize 0040                                   vfprintf@fmt 0142  
                             setCursor@F16920 02DF                           __end_of_noBacklight A75A  
                                i2vfprintf@ap 0079                               i2vfpfcnvrt@done 0071  
                                i2vfprintf@fp 0075                                      ??___flge 00A1  
                           __size_of_SelfTest 06AE                              ??_PMD_Initialize 008B  
                                    ??___lmul 0093                                      ??___tmul 0091  
                                    ??___wmul 009F              __end_of_I2C2_MasterEnableRestart A83C  
                                   _bRateHist 022F                                     _bRateInit A1E8  
                          i2_I2C2_DO_RX_EMPTY 8B34                                     _bRateUpdt 800A  
                                  ?i2_toupper 0007                          __end_of_SV2DelayOpen A6FC  
                                 __pdataBANK1 01F1                                   __pdataBANK2 02DF  
                              _currentTrfAddr 01B7                             __size_of_bRateGet 0022  
               ?_TMR2_DefaultInterruptHandler 0001                          ?i2_UART1_is_tx_ready 0001  
                                    ??_printf 00AF                                ___tmul@product 0091  
                         __end_of_vMeasureGet 9208                           __end_of_vMeasureIsr 878C  
                           timeDelayMs@tstamp 009D                             i2___aomod@divisor 0009  
                         __end_of_vMeasureRst A47A                             __size_of_adcGetCh 0056  
                ??_I2C2_DO_SEND_RESTART_WRITE 0001                                flowChk@flowVal 0175  
                                    ??_strlen 008D                               ?_TMR1_ReadTimer 008B  
                        __end_of_timeElapsedR 8FDC                __size_of_I2C2_MasterGetCounter 0004  
                           i2___aomod@counter 0011                    _I2C2_DO_RX_EMPTY$intlevel0 8A3C  
                      __end_of_I2C2_DO_RX_ACK A828                                     ___fladd@a 009D  
                                   ___fladd@b 0099                 __end_of_I2C2_MasterGetCounter A89A  
                         ?i2_I2C2_DO_RX_EMPTY 0001                        __end_of_I2C2_DO_TX_ACK A820  
                        __size_ofi2_vfpfcnvrt 0436                                  _aCaptureInit 950E  
                             ?_aCaptureOffGet 0160                               ?_aCaptureOffSet 0160  
                            ?_I2C2_MasterOpen 0001                              ?_I2C2_MasterStop 0001  
                            ?_I2C2_Initialize 0001                         _rVHighActuationTstamp 023E  
              __size_of_I2C2_MasterDisableIrq 001E                I2C2_SetAddressNackCallback@ptr 0092  
                   i2_rdBlkRegCompleteHandler 955E                    __size_of_I2C2_DO_BUS_ERROR 0010  
               __end_of_I2C2_MasterDisableIrq A440                            _UART1_ErrorHandler 03CB  
                    MonitorMsgSendBlock@state 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                      _I2C2_MasterClearStopFlag A8A2  
                               __pcstackBANK3 0390                              ___aodiv@dividend 008B  
                    __size_of_TMR2_Initialize 002E                             __size_of___xxtofl 0166  
                        __end_of_PrintStrBusy A836                                   _pPeepActual 01AD  
         __end_ofi2_I2C2_MasterDisableRestart A872                   i2_I2C2_MasterDisableRestart A86C  
                      i2_ADCC_StartConversion A652               __end_of_I2C2_MasterIsTxBufEmpty A796  
                                   _backlight A75A             __size_of_I2C2_ClearInterruptFlags 0030  
                           ?i2_aCaptGetResult 007F                     ??i2_rd1RegCompleteHandler 0003  
                   ?_I2C2_ClearInterruptFlags 0001                                   _pInspOSVSet 0244  
                                   _pAvgShort 01E9                        __size_of_lcdIrqHandler 00DE  
                                ?_MonitorInit 0001                 __size_of_I2C2_DO_RX_NACK_STOP 000E  
                                    ?i2_fputc 0003                               vMeasureGet@rawV 00A6  
                                    ?i2_fputs 000C                     ??i2_wr1RegCompleteHandler 0003  
                          ??i2_aCaptGetResult 0054                                      ?i2_putch 0001  
                        __end_of_I2C2_DO_IDLE A78A                          ??i2_I2C2_DO_RX_EMPTY 0007  
                  __size_of_I2C2_DO_SEND_STOP 001E                                     _atoi$5383 0102  
                                   _atoi$5384 0106                                     _atoi$5385 0104  
                       _TMR6_InterruptHandler 02F4                                     __pnvBANK0 00D4  
                                   __pnvBANK2 02F4                                     __pnvBANK3 03C9  
            __size_ofi2_rd2RegCompleteHandler 0030                           __end_of_keyReadInit A55C  
                    i2aCaptGetResult@lclValid 0058                                      ?_MenuMng 0001  
                       _rd2RegCompleteHandler 9A0C                      __size_of_TMR0_StartTimer 0004  
                       i2I2C2_SetCallback@idx 0005                         __end_of_fsmStateTable FA77  
                       i2I2C2_SetCallback@ptr 0003                                     _pInspVSet 01D3  
           _I2C2_CallbackReturnStop$intlevel0 A7D4                __size_of_I2C2_DO_BUS_COLLISION 005C  
                                   _main$6110 03B3                                     _main$6111 03BD  
                                   _main$6109 03AA                                     _main$3850 03AE  
                                   _main$3851 03B0              __size_ofi2_wr2RegCompleteHandler 0030  
           __end_ofi2_I2C2_CallbackReturnStop A8A2                              ___lwdiv@dividend 008B  
                      _PIN_MANAGER_Initialize 80D2                        i2aCaptGetResult@lclRaw 005A  
                  MonitorMsgForcedSend@vddVal 0170                 __end_of_I2C2_DO_BUS_COLLISION 9154  
                       _wr2RegCompleteHandler 9A80                                     _dtoa$4899 0112  
                  MonitorMsgForcedSend@trfAck 016F                                     _pPlatInsp 01DF  
         __size_of_I2C2_DO_SEND_RESTART_WRITE 0004                             ?_UART1_Initialize 0001  
                                   _lcdBtnRow 0297                      rd2RegCompleteHandler@ptr 0160  
          _I2C2_CallbackReturnReset$intlevel0 A7CA          __end_of_UART1_SetFramingErrorHandler A69A  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler A68C  
                       __size_of_setBacklight 0018                                 __pmediumconst FA50  
                      i2aCaptGetResult@outVal 007F                                      ?___aodiv 008B  
                                    ?___fladd 0099                                      ?___aomod 008B  
            __end_of_TMR4_SetInterruptHandler A6C4                                    ?_bRateInit 0001  
                                    ?___awdiv 008B                                     __ptext100 8A36  
                                   __ptext101 9996                                     __ptext110 A274  
                                   __ptext102 A7C4                              ___aodiv@quotient 009D  
                                   __ptext111 A086                                     __ptext103 A7CE  
                                   __ptext200 A7F6                                     __ptext120 8240  
                                   __ptext112 8D7A                                     __ptext104 936A  
                                   __ptext201 9BFC                                     __ptext121 9D32  
                                   __ptext113 4812                                     __ptext105 99D2  
                                   __ptext210 8C26                                     __ptext202 A89A  
                                   __ptext130 6FE8                                     __ptext122 9860  
                                   __ptext114 641A                                     __ptext106 9A0C  
                                   __ptext211 A402                                     __ptext203 A89E  
                                   __ptext131 96CE                                     __ptext123 83A4  
                                   __ptext115 93C0                                     __ptext107 9A46  
                                   __ptext220 A8B6                                     __ptext212 9EE8  
                                   __ptext204 955E                                     __ptext140 8BAE  
                                   __ptext132 9B92                                     __ptext124 A55C  
                                   __ptext116 9AF0                                     __ptext108 9A80  
                                   __ptext221 5B60                                     __ptext213 A796  
                                   __ptext205 9E28                                     __ptext141 864A  
                                   __ptext133 9DF8                                     __ptext125 A612  
                                   __ptext117 9B26                                     __ptext109 A382  
                                   __ptext230 9C98                                     __ptext222 9468  
                                   __ptext214 A7A2                                     __ptext206 9E58  
                                   __ptext150 A7D8                                     __ptext142 A6E0  
                                   __ptext134 A772                                     __ptext126 979C  
                                   __ptext118 9B5C                                     __ptext231 616A  
                                   __ptext223 A1C2                                     __ptext215 A734  
                                   __ptext207 9E88                                     __ptext151 A808  
                                   __ptext143 A296                                     __ptext135 A836  
                                   __ptext127 98A0                                     __ptext119 5E98  
                                   __ptext240 7830                                     __ptext232 818A  
                                   __ptext224 8DE8                                     __ptext216 A8A2  
                                   __ptext208 9EB8                                     __ptext160 A8B2  
                                   __ptext152 82F4                                     __ptext144 A570  
                                   __ptext136 A83C                                     __ptext128 76FC  
                                   __ptext241 75A4                                     __ptext233 9D96  
                                   __ptext225 4C6A                                     __ptext217 A8A6  
                                   __ptext209 A3E2                                     __ptext161 A2FC  
                                   __ptext153 9D64                                     __ptext145 A842  
                                   __ptext137 8E50                                     __ptext129 744C  
                                   __ptext242 7176                                     __ptext234 98DE  
                                   __ptext226 6BD2                                     __ptext218 A8AA  
                                   __ptext170 A622                                     __ptext162 A8B4  
                                   __ptext154 A2B8                                     __ptext146 A5E0  
                                   __ptext138 A3A2                                     __ptext243 9758  
                                   __ptext235 8452                                     __ptext227 94BC  
                                   __ptext219 A340                                     __ptext171 90F8  
                                   __ptext163 86EC                                     __ptext155 A8B0  
                                   __ptext147 9FFE                                     __ptext139 A3C2  
                                   __ptext244 9CCC                                     __ptext236 A584  
                                   __ptext228 9C30                                     __ptext180 A892  
                                   __ptext172 9414                                     __ptext164 6948  
                                   __ptext156 7CB0                                     __ptext148 A0DC  
                                   __ptext245 A02C                                     __ptext237 A642  
                                   __ptext229 9C64                                     __ptext181 A70A  
                                   __ptext173 A632                                     __ptext165 8500  
                                   __ptext157 A88A                                     __ptext149 A422  
                                   __ptext246 909A                                     __ptext238 97DE  
                                   __ptext190 A84E                                     __ptext182 8F18  
                                   __ptext174 A810                                     __ptext166 A848  
                                   __ptext158 A2DA                                     __ptext247 A652  
                                   __ptext239 991C                                     __ptext191 A854  
                                   __ptext183 8AB8                                     __ptext175 A6FC  
                                   __ptext167 8EB4                                     __ptext159 A6EE  
                                   __ptext248 A51C                                     __ptext192 A85A  
                                   __ptext184 7D8E                                     __ptext176 A818  
                                   __ptext168 8B34                                     __ptext249 0000  
                                   __ptext193 A726                                     __ptext185 A77E  
                                   __ptext177 A820                                     __ptext169 A31E  
                                   __ptext194 A860                                     __ptext186 A506  
                                   __ptext178 A440                                     __ptext195 A828  
                                   __ptext187 A78A                                     __ptext179 A88E  
                                   __ptext196 A7E2                                     __ptext188 A718  
                                   __ptext197 A7EC                                     __ptext189 A896  
                                   __ptext198 A866                                     __ptext199 A86C  
                                    ?___fltol 00A9              __end_of_I2C2_MasterIsNackFlagSet A7AE  
                                    ?___lldiv 0097                                    ?_bRateUpdt 0001  
                           __size_of_timeDiff 0032                                      ?___ltdiv 008B  
                           __size_of_timeInit 000A                                      ?___lwdiv 008B  
                          ??_UART1_Initialize 008D                                     __numlines 00CA  
                                    _I2C2CON0 003D5D                                      _I2C2CON1 003D5E  
                                    _I2C2CON2 003D5F                                     _lcdTopRow 02AB  
                             ??i2_UART1_Write 0001                              ??_aCaptGetResult 0162  
                            I2C2_DO_TX@dataTx 0009                        __size_of_I2C2_DO_RESET 0010  
                       ??i2_UART1_is_tx_ready 0001                              _uart1RxLastError 025A  
                               ??_UART1_Write 008B                  ??_INTERRUPT_InterruptManager 0087  
                           __size_of_printstr 0104                             __size_of_vfprintf 006E  
                                    ?_command 0001                                _I2C2_MasterFsm 8EB4  
                              _I2C2_MasterIsr A848                                      ?_display 0001  
                                    ?_flowChk 0001                               ?_I2C2_DO_RX_ACK 0001  
                                    ?_keyPeek 0001                                      ?_keyRead 0001  
             __size_of_I2C2_DO_SEND_ADR_WRITE 001A                    __size_of_I2C2_MasterIsNack 000E  
                      __CFG_BBSIZE$BBSIZE_512 000000                                     _intBdTrig 0250  
                             ?_I2C2_DO_TX_ACK 0001                   ??_I2C2_MasterClearCountFlag 0001  
                                   _keyFilter 00CE                           __size_of_screenInit 005A  
                                   _keyReadEC 88A0                      __size_of_TMR1_StartTimer 0004  
            _UART1_DefaultOverrunErrorHandler 000000                                      ?_isalpha 008B  
                        __end_of_I2C2_MuxInit A382                                      ?_isdigit 008B  
                            i2I2C2_NackCb@ptr 0005                                __size_ofi2_abs 003E  
                              __size_ofi2_pad 00B6                                      ?_islower 008B  
                                    ?_isspace 008B                    ??_I2C2_SetDataNackCallback 0094  
                                    ?_isupper 008B                                      ?_timeGet 0093  
                              _I2C2_SetBuffer A274                      __size_of_TMR4_Initialize 002E  
                       I2C2_DO_RX@retFsmState 0003                  __end_of_MonitorMsgForcedSend 6FE8  
                                   _lastkeyEC 00CF                              ___lwdiv@quotient 0090  
                    _I2C2_SetInterruptHandler A6E0                                __size_of_clear 0016  
                                 ??i2___aodiv 0011                                   _lcdPrintBRR 01C4  
                              __size_of_blink 000E                                  setCursor@col 009B  
                                 ??i2___aomod 0011                                  setCursor@row 0092  
                                    ?_sprintf 0146                                __size_of_fputc 00AE  
                                  ?_backlight 0001                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0040                       ??_rd1RegCompleteHandler 0094  
                                    ?_toupper 0091                     ??i2_I2C2_DO_SEND_ADR_READ 0001  
                              __size_of_isqrt 00A6                                      _T4CLKCON 003FA2  
                              __size_of_putch 0014                          _INTERRUPT_Initialize A882  
                                    _T6CLKCON 003F96                          _I2C2_DO_SEND_RESTART A88E  
                                  _I2C2SDAPPS 003AE4                    __end_of_I2C2_MasterSendAck A860  
                                   _send4bits 9208                                    _I2C2SCLPPS 003AE3  
                     ??_wr1RegCompleteHandler 0094              __size_of_I2C2_DO_RX_NACK_RESTART 0008  
                        inspOSMeasure@tmpUVal 0168                     ??_I2C2_CallbackReturnStop 0094  
              ??_I2C2_SetDataCompleteCallback 0094                             ??_TMR0_Initialize 008B  
                                ?_I2C2_MClose 0001               I2C2_MasterOperation@returnValue 0165  
                                _setBacklight A4AC                                ___wmul@product 009F  
                                 _noBacklight A74E                                     _monTstamp 02D3  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 008B  
                                    _LATBbits 003FBB                                      _LATCbits 003FBC  
                                    _LATDbits 003FBD                                 ??_timeDelayMs 009D  
                                 _auxPSensCal 02F2                  ??i2_I2C2_CallbackReturnReset 0005  
                    __size_of_MonitorErrorClr 0012                                    _I2C2_DO_RX 8AB8  
                         adcCaptureIsr@adcSel 0083                                    _I2C2_DO_TX 7D8E  
              __size_of_I2C2_MasterSetCounter 000C                                  ?_I2C2_NackCb 0160  
                                   _setCursor 995A                      __size_of_MonitorErrorSet 0012  
               __end_of_I2C2_MasterSetCounter A77E                                      _PIE1bits 003991  
              __size_of_I2C2_MasterSendTxData 000C                                 ??_timeElapsed 0097  
                                 _pQuantaInsp 01D1                                      _PIE3bits 003993  
                                    _PIE4bits 003994                                      _PIE5bits 003995  
                                 ??i2_isalpha 0003                                      _PIE6bits 003996  
                                 ??i2_isdigit 0003                                      _PIE7bits 003997  
               __end_of_I2C2_MasterSendTxData A772                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                                    _I2C2_MOpen 8E50  
                                   _screenMng 345E                  __size_of_MonitorMsgSendBlock 0026  
                                  _I2C2_Close A0DC                         __size_ofi2_TMR6_Start 0004  
                                 ??i2_islower 0003                                   ??i2_isspace 0003  
         __size_of_INTERRUPT_InterruptManager 00B0                              i2_vfpfcnvrt$4925 0073  
                             ___ltdiv@divisor 008E                                      _PIR1bits 0039A1  
                                 ??i2_isupper 0003                                      _PIR3bits 0039A3  
                                    _PIR4bits 0039A4                                      _PIR5bits 0039A5  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR9bits 0039A9                               ___ltdiv@counter 0094  
                  ??_TMR6_SetInterruptHandler 008D                                   _vMeasureGet 91AE  
                                 _vMeasureIsr 86EC                                   _vMeasureRst A45E  
           __size_of_I2C2_MasterIsStopFlagSet 000C                                     _resultTbl 027B  
                               _I2C2STAT1bits 003D62                                      _TMR2_ISR A2FC  
                   ?_I2C2_MasterIsStopFlagSet 0001                                      _TMR4_ISR A2DA  
                  __end_of_UART1_Transmit_ISR 9D96                                      _TMR6_ISR A2B8  
                                 ??i2_toupper 0009                 ?_UART1_SetFramingErrorHandler 008B  
                               _lcdIrqHandler 7CB0                        __end_of_I2C2_MasterFsm 8F18  
                      __end_of_I2C2_MasterIsr A84E                                     _vfpfcnvrt 4812  
                            _I2C2_MasterClose A7D8                                     _xtoa$4910 0113  
                                   _xtoa$4911 0115                             ??_TMR1_Initialize 008B  
                                  _ADCON0bits 003EF8                             ___wmul@multiplier 009B  
                 ?i2_I2C2_MasterEnableRestart 0001                      _I2C2_MasterEnableRestart A836  
                __size_of_I2C2_MasterClearIrq 0008                                      i2___lmul 909A  
                                    i2___wmul A02C                              I2C2_Open@address 008D  
                     __size_of_FVR_Initialize 0008                        __end_of_I2C2_SetBuffer A296  
                                  ?_keyReadEC 0001                             ?_I2C2_DO_RX_EMPTY 0001  
                    ??_I2C2_MasterIsRxBufFull 0001                ??_TMR2_DefaultInterruptHandler 0001  
           __size_of_TMR2_SetInterruptHandler 000E                           ___tmul@multiplicand 008E  
                   ?_TMR2_SetInterruptHandler 008B                             ?_I2C2_DO_TX_EMPTY 0001  
                 __end_of_ADCC_GetFilterValue A532                           __end_of_UART1_Write 97DE  
                    wr2RegCompleteHandler@ptr 0160                                      i2_printf A1C2  
                                    i2pad@buf 0015                                  _isspace$5410 0091  
         __size_ofi2_I2C2_CallbackReturnReset 0004                          aCaptureOffSet@offVal 0160  
                          ??_I2C2_DO_RX_EMPTY 0162                      __size_of_TMR6_Initialize 002E  
                                    i2dtoa@fp 001E                                      i2_strlen 9D96  
                        __size_of_aCaptRstFlt 0124                      ?i2_I2C2_MasterSetCounter 0001  
                    __end_ofi2_I2C2_SetBuffer A422                                    vfpfcnvrt@c 013B  
                          ??_I2C2_DO_TX_EMPTY 0007                      ?i2_I2C2_MasterSendTxData 0001  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 008B  
                     ??_I2C2_DO_SEND_ADR_READ 00AF                                     copy_data0 89C4  
                                   copy_data1 89E6                                      i2fputc@c 0003  
                       ?_INTERRUPT_Initialize 0001                                   _keyReadInit A548  
                                    i2fputs@c 0010                      ?_rdBlkRegCompleteHandler 0160  
                                    i2fputs@i 0011                                      i2fputs@s 000C  
                       ?_I2C2_DO_SEND_RESTART 0001                                     keyRead@ch 0094  
                                i2_TMR6_Start A88A                                 _I2C2_DO_RESET A632  
                                  ?_send4bits 008B                  __size_of_I2C2_MasterSendNack 0006  
                      _uart1TxBufferRemaining 00D4                             ??_TMR2_Initialize 008D  
           __size_ofi2_I2C2_DO_SEND_ADR_WRITE 0016                         i2_I2C2_MasterClearIrq A828  
                            _I2C2_SetCallback 8BAE                              __size_ofi2_fputc 00AE  
                            __size_ofi2_fputs 003E                        ?_rd2RegCompleteHandler 0160  
                __size_of_I2C2_MasterResetBus 000A                     ?i2_I2C2_DO_SEND_ADR_WRITE 0001  
                      _I2C2_DO_SEND_ADR_WRITE A47A                     _I2C2_MasterClearCountFlag A8AA  
                            __size_ofi2_putch 0014                                    ?_setCursor 0092  
      __end_ofi2_I2C2_SetDataCompleteCallback A402       __size_ofi2_I2C2_SetDataCompleteCallback 0020  
              i2_I2C2_SetDataCompleteCallback A3E2                                      i2xtoa@fp 001E  
                      ?_wr2RegCompleteHandler 0160                                      _SelfTest 3B84  
                                  ?_screenMng 0001                         __size_of_SV2DelayOpen 000E  
             _wr2RegCompleteHandler$intlevel0 9A86               _rd2RegCompleteHandler$intlevel0 9A12  
                                    __Hrparam 0000             __size_of_I2C2_CallbackReturnReset 000A  
                            __size_of_MenuMng 091A                     ?_I2C2_CallbackReturnReset 0160  
                                  vfprintf@ap 0144                                      __Lrparam 0000  
                                  vfprintf@fp 0140                        i2I2C2_SetBuffer@buffer 0001  
                          __CFG_BOREN$SBORDIS 000000                         TMR1_ReadTimer@readVal 008F  
                      expanderWriteBlock@data 008F                                      _bRateGet A252  
                                    _bRateCnt 00BA                                      _VentMode 01F4  
                                    _bRatePtr 00AF                                   ??_bRateInit 008B  
                         __end_of_timeDelayMs 9BFC                         __size_of_timeElapsedR 0060  
          __size_of_I2C2_MasterDisableRestart 0006                                   ??_bRateUpdt 008B  
                              ?_lcdIrqHandler 0001                                      _chBdTrig 0256  
                     ??_OSCILLATOR_Initialize 008B                             ??_TMR0_StartTimer 008B  
                            __size_of___aodiv 0158                    ?_I2C2_MasterDisableRestart 0001  
                         __end_of_timeElapsed 9DF8                              __size_of___fladd 0348  
                                    _adcGetCh 9314                              __size_of___aomod 0134  
                            __size_of___awdiv 0088                              __size_of___fltol 00CE  
                       i2___wmul@multiplicand 0003                              __size_of___lldiv 008A  
                __end_of_I2C2_MasterEnableIrq A584                               ?_I2C2_MasterFsm 0001  
                             ?_I2C2_MasterIsr 0001                                    ?_vfpfcnvrt 00A8  
                            __size_of___ltdiv 0070                  __end_of_I2C2_MasterGetRxData A866  
                            __size_of___lwdiv 0058              __size_of_I2C2_MasterIsTxBufEmpty 000C  
          __end_of_I2C2_DO_SEND_RESTART_WRITE A896                    _I2C2_DO_SEND_RESTART_WRITE A892  
                                 _intVentMode 01C2                               ___aodiv@divisor 0093  
                             ___aodiv@counter 009B                      _TMR4_SetInterruptHandler A6B6  
                    _I2C2_MasterIsNackFlagSet A7A2                         __end_of_inspOSMeasure 54B8  
                       __size_of_PrintStrBusy 0006                                  timeDiff@endT 0097  
                            __size_of_command 0010                              __size_of_display 000C  
                                  sprintf@fmt 0148                               ?_I2C2_SetBuffer 008B  
                            __size_of_flowChk 0360                                      ___xxtofl 72E6  
                            __size_of_keyPeek 0060                              __size_of_keyRead 0046  
                                  _T0CON0bits 003FB8                      __size_of_ADCC_Initialize 006E  
                                    _pInspOS2 01D7                                      _pInspOS3 01D9  
                                    _pPeepErr 01C9                  I2C2_MasterSetCounter@counter 008B  
                                    _pPeepOsc 01C7                                     send@value 0090  
                            __size_of_isalpha 0036                              __size_of_isdigit 0036  
                                    __pivt0x8 0008                               ___lwdiv@divisor 008D  
                                    _pPlatMax 01AF                           i2aCaptGetResult@sel 0059  
                                    _pPlatExp 02D9                                      _lcdBlink 00BE  
                   MonitorMsgForcedSend@state 016E                                  _I2C2CON0bits 003D5D  
                            __size_of_islower 0036                                  _I2C2CON1bits 003D5E  
                            __size_of_isspace 0046                               ___lwdiv@counter 008F  
                                    __ptext10 A742                                      __ptext11 A4DA  
                                    __ptext20 5818                                      __ptext12 50A0  
                                    __ptext21 A87E                                      __ptext13 8C9C  
                                    __ptext30 A45E                                      __ptext22 3B84  
                                    __ptext14 800A                                      __ptext31 91AE  
                                    __ptext23 4232                                      __ptext15 A1E8  
                                    __ptext40 A67E                                      __ptext32 878C  
                                    __ptext24 95AA                                      __ptext16 950E  
                                    __ptext41 A68C                                      __ptext33 95F4  
                                    __ptext25 7A88                                      __ptext17 9314  
                                    __ptext50 A4F0                                      __ptext42 A69A  
                                    __ptext34 72E6                                      __ptext26 A548  
                                    __ptext18 A598                                      __ptext51 A20C  
                                    __ptext43 9F18                                      __ptext35 903C  
                                    __ptext27 88A0                                      __ptext19 7F3C  
                                    __ptext60 8F7C                                      __ptext52 80D2  
                                    __ptext44 A6A8                                      __ptext36 7E6C  
                                    __ptext28 9D00                                      __ptext61 A8AE  
                                    __ptext53 A494                                      __ptext45 9F46  
                                    __ptext37 9ABA                                      __ptext29 54B8  
                                    __ptext70 A5F2                                      __ptext62 2B44  
                                    __ptext54 A882                                      __ptext46 A6B6  
                                    __ptext38 8816                                      __ptext71 345E  
                                    __ptext63 A362                                      __ptext55 A230  
                                    __ptext47 9F74                                      __ptext39 A670  
                                    __ptext80 A886                                      __ptext72 995A  
                                    __ptext64 85A6                                      __ptext56 A800  
                                    __ptext48 A6C4                                      __ptext81 A830  
                                    __ptext73 A602                                      __ptext65 9BC8  
                                    __ptext57 8D0C                                      __ptext49 9820  
                                    __ptext90 9262                                      __ptext82 9688  
                                    __ptext74 A12A                                      __ptext66 9DC8  
                                    __ptext58 A6D2                                      __ptext91 A252  
                                    __ptext83 8FDC                                      __ptext75 9208  
                                    __ptext67 A4AC                                      __ptext59 A0B2  
                                    __ptext92 8928                                      __ptext84 9FA2  
                                    __ptext76 963E                                      __ptext68 A74E  
                                    __ptext93 66B4                                      __ptext85 9FD0  
                                    __ptext77 92BC                                      __ptext69 A75A  
                                    __ptext94 A5BC                                      __ptext86 A176  
                                    __ptext78 A150                                      __ptext95 A5CE  
                                    __ptext87 6E52                                      __ptext79 7BAC  
                                    __ptext96 9714                                      __ptext88 A5AA  
                                    __ptext97 A47A                                      __ptext89 A05A  
                                    __ptext98 A19C                                      __ptext99 A766  
                            __size_of_isupper 0036                              __size_of_timeGet 0012  
                       __size_of_I2C2_DO_IDLE 000C                          _lastI2C2LAckResponse 0253  
                  ??_I2C2_MasterClearNackFlag 0001                                   ??_backlight 0090  
                              ?_I2C2_DO_RESET 0001                                      _rTimeTmp 0199  
              __size_of_UART1_SetErrorHandler 000E                    __end_ofi2_I2C2_SetCallback 8C9C  
                           ??_TMR1_StartTimer 008B                 __end_of_UART1_SetErrorHandler A6A8  
                            __size_of_sprintf 005A                                  _SV2DelayOpen A6EE  
                            _initInspSubState 01BE                  __end_of_I2C2_DO_ADDRESS_NACK 9468  
                            __size_of_toupper 0054                                      _vPlateau 0246  
                  __end_of_expanderWriteBlock A602                        __size_of_adcCaptureIsr 0338  
        __size_of_I2C2_SetAddressNackCallback 0020            __size_ofi2_rdBlkRegCompleteHandler 004C  
                           ??_TMR4_Initialize 008D                       i2_rd2RegCompleteHandler 9E58  
                               __size_of_atoi 018E                                 __size_of_main 2B26  
                               __size_of_dtoa 02D2                                  ??_screenInit 00A2  
                           SelfTest@lcdBLight 0391                                 __size_of_home 0016  
                               __size_of_send 0026                                   ?_I2C2_DO_RX 0001  
                                 ?_I2C2_DO_TX 0001                                 __size_of_xtoa 029A  
                                _timeElapsedR 8F7C                          __size_of_MonitorInit 0002  
                              I2C2_NackCb@ptr 0160                           inspOSMeasure@tmpVal 016B  
                     i2_wr2RegCompleteHandler 9EB8                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 ?_I2C2_MOpen 0001                                   ?_I2C2_Close 0001  
                 ??i2_I2C2_CallbackReturnStop 0003                           I2C2_SetCallback@idx 008F  
                     __size_of_MonitorMsgBusy 0012                       __size_of_MonitorMsgSend 002A  
                         I2C2_SetCallback@ptr 008D                                      _timeDiff 9D00  
                             _vValveActuation 01AB                                      _timeInit A7BA  
                   _UART1_OverrunErrorHandler 03CD  UART1_SetOverrunErrorHandler@interruptHandler 008B  
                __end_of_ADCC_StartConversion A5AA                              ??_TMR1_ReadTimer 008D  
                __end_of_I2C2_MasterOperation 9758                          _lastI2C2MAckResponse 00BC  
                                _PrintStrBusy A830                             ??_MonitorErrorClr 008B  
                           ??_MonitorErrorSet 008B                                      _printstr 7BAC  
                        _MonitorMsgForcedSend 6E52                              __displayfunction 00CD  
                                    _vfprintf 8D7A            __end_of_INTERRUPT_InterruptManager 83A4  
                  _INTERRUPT_InterruptManager 82F4                    ??_I2C2_MasterClearStopFlag 0001  
                            ??_aCaptureOffGet 00AF                                      main@pAux 03C3  
                                   printf@fmt 0146                         __size_of_I2C2_MuxInit 0020  
                            ??_aCaptureOffSet 00AF             __end_of_I2C2_MasterDisableRestart A842  
            __end_of_I2C2_ClearInterruptFlags 9F18                                   _UART1_Write 979C  
                           _UART1_is_tx_ready A612                              ___aomod@dividend 008B  
                                _I2C2_DO_IDLE A77E                                     printstr@c 008B  
                      __size_of_printstrblock 0026                                      keyPeek@n 008E  
                             _initExpSubState 01BF                ??_UART1_SetFramingErrorHandler 008D  
             __end_ofi2_I2C2_MasterSetCounter A7F6                                   ??_keyReadEC 009B  
                                   putch@byte 008C                            ?_UART1_is_tx_ready 0001  
                              _vfpfcnvrt$4925 013E               __end_ofi2_I2C2_MasterSendTxData A7EC  
                     ?i2_ADCC_StartConversion 0001                                 ?_digitalReadC 0001  
                               ?_digitalReadD 0001                         i2___lmul@multiplicand 0005  
                          __end_of_screenInit 91AE                                   _uart1TxHead 00D3  
                                 _uart1TxTail 00D2               __size_of_I2C2_MasterIsRxBufFull 000E  
                                    isalpha@c 008B                                      isdigit@c 008B  
                      ??_INTERRUPT_Initialize 008B                               digitalReadC@pin 008D  
                             digitalReadD@pin 008D                        ??_I2C2_DO_SEND_RESTART 0001  
        __end_of_TMR6_DefaultInterruptHandler A8B2         __size_of_TMR6_DefaultInterruptHandler 0002  
                _TMR6_DefaultInterruptHandler A8B0                           ??_UART1_is_tx_ready 008B  
                     _I2C2_DO_RX_NACK_RESTART A810          __end_of_ADCC_DefaultInterruptHandler A8B8  
       __size_of_ADCC_DefaultInterruptHandler 0002                  _ADCC_DefaultInterruptHandler A8B6  
                                    intlevel2 0000                             SelfTest@vddValMax 0398  
                           SelfTest@vddValMin 039A                                     sprintf@ap 0154  
                      ?i2_I2C2_MasterClearIrq 0001                                   ??_send4bits 008C  
                                    send@mode 008F            __end_ofi2_I2C2_CallbackReturnReset A89E  
                  i2_I2C2_CallbackReturnReset A89A                                  _resultTblVal 0224  
                                    islower@c 008B                                      isspace@c 008B  
                            ___lldiv@dividend 0097                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 008D                                      isqrt@one 0009  
                                    isqrt@res 0007                                   ??_setCursor 0093  
                           __CFG_CLKOUTEN$OFF 000000                                   _timeDelayMs 9BC8  
                                    isupper@c 008B                                   ??_screenMng 015C  
                        __size_of_I2C2_MClose 002E                                   _timeElapsed 9DC8  
                                _I2C2_MuxInit A362                            I2C2_SetCallback@cb 008B  
                        __size_of_I2C2_NackCb 003C                               ??_lcdIrqHandler 0001  
                               _sv2DelayCheck 01BD                         ?_MonitorMsgForcedSend 0001  
                   __size_ofi2_aCaptGetResult 028A                                      printf@ap 015E  
                           ___tmul@multiplier 008B                              ??_I2C2_DO_RX_ACK 0001  
                             MenuMng@keyPress 0176  UART1_SetFramingErrorHandler@interruptHandler 008B  
                            ??_I2C2_DO_TX_ACK 0001                     __end_of_UART1_is_tx_ready A622  
                __end_of_I2C2_DO_RX_NACK_STOP A70A                               ___aomod@divisor 0093  
                               ??i2_vfpfcnvrt 004A                          timeElapsedR@duration 0095  
                                 ??_vfpfcnvrt 0127                               ___aomod@counter 009B  
                               _freeFlowRateF 02DD                                 _freeFlowRateL 0234  
                               _freeFlowRateM 0236                                 _adcCaptureIsr 5B60  
                  ??_I2C2_SetInterruptHandler 008D                                 _sv3DelayCheck 01BC  
                           SelfTest@tstScreen 0390                                _FVR_Initialize A800  
              __end_ofi2_ADCC_StartConversion A662                                      sprintf@f 0156  
                                    sprintf@s 0146            __size_of_I2C2_MasterIsCountFlagSet 000E  
                              ??_digitalReadC 008B                                ??_digitalReadD 008B  
                   i2_I2C2_CallbackReturnStop A89E                              ___lldiv@quotient 009F  
                         __size_of_I2C2_DO_RX 007C                           __size_of_I2C2_DO_TX 00DE  
                  ?_I2C2_MasterIsCountFlagSet 0001                           _MonitorMsgSendBlock A176  
                             _TMR0_Initialize A4F0                          timeElapsedR@prevTime 0093  
           i2I2C2_SetDataCompleteCallback@ptr 0008               I2C2_SetDataCompleteCallback@ptr 0092  
                      __size_ofi2_I2C2_NackCb 0034                                      toupper@c 0091  
                         __size_of_I2C2_MOpen 0064                     __size_of_UART1_Initialize 008A  
                       _I2C2_MasterGetCounter A896                           __size_of_I2C2_Close 0028  
                             ??_I2C2_DO_RESET 0001                      _UART1_TxInterruptHandler 02FC  
                                  _TMR2_Start A872                         _I2C2_MasterDisableIrq A422  
                        setCursor@row_offsets 0093                                 ___fladd@signs 00A5  
                  pressureSensorChk@aPValMean 0189                         I2C2_DO_TX@retFsmState 000A  
                                  _TMR4_Start A87E                     ??i2_rd2RegCompleteHandler 0003  
                                  _TMR6_Start A886                                i2_isspace$5410 0007  
                                ___aodiv@sign 009C                ??_ADCC_SetADTIInterruptHandler 008D  
              __end_of_PIN_MANAGER_Initialize 818A                             ??_ADCC_Initialize 008D  
            i2I2C2_SetDataCompleteCallback@cb 0006                I2C2_SetDataCompleteCallback@cb 0090  
                          __size_of_I2C2_MAck 0006              __end_of_I2C2_MasterIsStopFlagSet A7A2  
                    __size_of_I2C2_MasterOpen 0022                 ?_TMR6_DefaultInterruptHandler 0001  
              __size_of_rd1RegCompleteHandler 003A                     ??i2_wr2RegCompleteHandler 0003  
                    __size_of_I2C2_MasterStop 0006                      __size_of_I2C2_Initialize 0022  
                          i2___aodiv@dividend 0001                 __end_of_rd1RegCompleteHandler 9A80  
                    __end_of_I2C2_MasterClose A7E2                          _I2C2_MasterEnableIrq A570  
                          __size_of_I2C2_Open 00A2                                  ___fladd@aexp 00A6  
                                ___fladd@bexp 00A7                 ?_ADCC_DefaultInterruptHandler 0001  
                        _I2C2_MasterGetRxData A860                                    _OSCheckInt 01B9  
                                ?_noBacklight 0001                           _I2C2_MasterClearIrq A808  
                               _printstrblock A150                __size_of_wr1RegCompleteHandler 003A  
               __end_of_wr1RegCompleteHandler 9A0C                  ?_UART1_SetTxInterruptHandler 008B  
                       _TMR2_InterruptHandler 02F8                   __size_ofi2_I2C2_DO_RX_EMPTY 007A  
                  i2I2C2_SetBuffer@bufferSize 0003                          ?_MonitorMsgSendBlock 0001  
                                ___aomod@sign 009C                               _TMR1_Initialize 9820  
                      _I2C2_MasterIsRxBufFull A726                                 __backlightval 00C9  
                 __end_ofi2_UART1_is_tx_ready A652                    ??_I2C2_MasterEnableRestart 008B  
