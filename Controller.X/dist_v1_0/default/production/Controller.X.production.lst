

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 19 10:35:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,inline
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,inline
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1,inline
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1,inline
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1,inline
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,inline
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,inline
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1,inline
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1,inline
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1,inline
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1,inline
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1,inline
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1,inline
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1,inline
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1,inline
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1,inline
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1,inline
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1,inline
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1,inline
   239                           	psect	text217,global,reloc=2,class=CODE,delta=1,inline
   240                           	psect	text218,global,reloc=2,class=CODE,delta=1,inline
   241                           	psect	text219,global,reloc=2,class=CODE,delta=1
   242                           	psect	text220,global,reloc=2,class=CODE,delta=1
   243                           	psect	text221,global,reloc=2,class=CODE,delta=1
   244                           	psect	text222,global,reloc=2,class=CODE,delta=1
   245                           	psect	text223,global,reloc=2,class=CODE,delta=1
   246                           	psect	text224,global,reloc=2,class=CODE,delta=1
   247                           	psect	text225,global,reloc=2,class=CODE,delta=1
   248                           	psect	text226,global,reloc=2,class=CODE,delta=1
   249                           	psect	text227,global,reloc=2,class=CODE,delta=1
   250                           	psect	text228,global,reloc=2,class=CODE,delta=1
   251                           	psect	text229,global,reloc=2,class=CODE,delta=1
   252                           	psect	text230,global,reloc=2,class=CODE,delta=1
   253                           	psect	text231,global,reloc=2,class=CODE,delta=1
   254                           	psect	text232,global,reloc=2,class=CODE,delta=1
   255                           	psect	text233,global,reloc=2,class=CODE,delta=1
   256                           	psect	text234,global,reloc=2,class=CODE,delta=1
   257                           	psect	text235,global,reloc=2,class=CODE,delta=1
   258                           	psect	text236,global,reloc=2,class=CODE,delta=1
   259                           	psect	text237,global,reloc=2,class=CODE,delta=1
   260                           	psect	text238,global,reloc=2,class=CODE,delta=1
   261                           	psect	text239,global,reloc=2,class=CODE,delta=1
   262                           	psect	text240,global,reloc=2,class=CODE,delta=1
   263                           	psect	text241,global,reloc=2,class=CODE,delta=1
   264                           	psect	text242,global,reloc=2,class=CODE,delta=1
   265                           	psect	text243,global,reloc=2,class=CODE,delta=1
   266                           	psect	text244,global,reloc=2,class=CODE,delta=1
   267                           	psect	text245,global,reloc=2,class=CODE,delta=1
   268                           	psect	text246,global,reloc=2,class=CODE,delta=1
   269                           	psect	text247,global,reloc=2,class=CODE,delta=1
   270                           	psect	text248,global,reloc=2,class=CODE,delta=1
   271                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   272                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   273                           	psect	text249,global,reloc=2,class=CODE,delta=1
   274                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   275  0000                     
   276                           ; Version 2.10
   277                           ; Generated 31/07/2019 GMT
   278                           ; 
   279                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   280                           ; All rights reserved.
   281                           ; 
   282                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   283                           ; 
   284                           ; Redistribution and use in source and binary forms, with or without modification, are
   285                           ; permitted provided that the following conditions are met:
   286                           ; 
   287                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   288                           ;        conditions and the following disclaimer.
   289                           ; 
   290                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   291                           ;        of conditions and the following disclaimer in the documentation and/or other
   292                           ;        materials provided with the distribution.
   293                           ; 
   294                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   295                           ;        software without specific prior written permission.
   296                           ; 
   297                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   298                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   299                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   300                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   301                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   302                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   303                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   304                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   305                           ; 
   306                           ; 
   307                           ; Code-generator required, PIC18F46K42 Definitions
   308                           ; 
   309                           ; SFR Addresses
   310  0000                     
   311 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   312  0000                     
   313 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   314  0000                     
   315 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   316  0000                     
   317                           	psect	idataBANK1
   318  00A3F8                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for _mainPSensCal
   322  00A3F8  00A4               	dw	164
   323                           
   324                           ;initializer for _LowVAlarm
   325  00A3FA  22                 	db	34
   326                           
   327                           ;initializer for _VentMode
   328  00A3FB  01                 	db	1
   329                           
   330                           ;initializer for _BdTrig
   331  00A3FC  02                 	db	2
   332                           
   333                           ;initializer for _PEEP
   334  00A3FD  0F                 	db	15
   335                           
   336                           ;initializer for _IP
   337  00A3FE  1E                 	db	30
   338                           
   339                           ;initializer for _BPM
   340  00A3FF  14                 	db	20
   341                           
   342                           ;initializer for _HighVAlarm
   343  00A400  2E                 	db	46
   344                           
   345                           ;initializer for _MaxV
   346  00A401  28                 	db	40
   347                           
   348                           ;initializer for _MaxP
   349  00A402  28                 	db	40
   350                           
   351                           	psect	idataBANK2
   352  00A17C                     __pidataBANK2:
   353                           	opt callstack 0
   354                           
   355                           ;initializer for setCursor@F16920
   356  00A17C  0000               	dw	0
   357  00A17E  0040               	dw	64
   358  00A180  0014               	dw	20
   359  00A182  0054               	dw	84
   360                           
   361                           ;initializer for _keysD
   362  00A184  01                 	db	1
   363  00A185  02                 	db	2
   364  00A186  03                 	db	3
   365  00A187  04                 	db	4
   366  00A188  05                 	db	5
   367  00A189  07                 	db	7
   368                           
   369                           ;initializer for _keysC
   370  00A18A  04                 	db	4
   371  00A18B  05                 	db	5
   372  00A18C  06                 	db	6
   373  00A18D  07                 	db	7
   374  00A18E  02                 	db	2
   375                           
   376                           ;initializer for _auxPSensCal
   377  00A18F  03C2               	dw	962
   378                           
   379                           	psect	mediumconst
   380  00FA6E                     __pmediumconst:
   381                           	opt callstack 0
   382  00FA6E  00                 	db	0
   383  00FA6F                     _fsmStateTable:
   384                           	opt callstack 0
   385  00FA6F  C8                 	db	low _I2C2_DO_IDLE
   386  00FA70  A3                 	db	high _I2C2_DO_IDLE
   387  00FA71  E6                 	db	low _I2C2_DO_SEND_ADR_READ
   388  00FA72  9D                 	db	high _I2C2_DO_SEND_ADR_READ
   389  00FA73  C4                 	db	low _I2C2_DO_SEND_ADR_WRITE
   390  00FA74  A0                 	db	high _I2C2_DO_SEND_ADR_WRITE
   391  00FA75  DE                 	db	low _I2C2_DO_TX
   392  00FA76  79                 	db	high _I2C2_DO_TX
   393  00FA77  06                 	db	low _I2C2_DO_RX
   394  00FA78  87                 	db	high _I2C2_DO_RX
   395  00FA79  66                 	db	low _I2C2_DO_TX_EMPTY
   396  00FA7A  8B                 	db	high _I2C2_DO_TX_EMPTY
   397  00FA7B  84                 	db	low _I2C2_DO_RX_EMPTY
   398  00FA7C  86                 	db	high _I2C2_DO_RX_EMPTY
   399  00FA7D  54                 	db	low _I2C2_DO_SEND_RESTART_READ
   400  00FA7E  A3                 	db	high _I2C2_DO_SEND_RESTART_READ
   401  00FA7F  DC                 	db	low _I2C2_DO_SEND_RESTART_WRITE
   402  00FA80  A4                 	db	high _I2C2_DO_SEND_RESTART_WRITE
   403  00FA81  D8                 	db	low _I2C2_DO_SEND_RESTART
   404  00FA82  A4                 	db	high _I2C2_DO_SEND_RESTART
   405  00FA83  8A                 	db	low _I2C2_DO_SEND_STOP
   406  00FA84  A0                 	db	high _I2C2_DO_SEND_STOP
   407  00FA85  6A                 	db	low _I2C2_DO_RX_ACK
   408  00FA86  A4                 	db	high _I2C2_DO_RX_ACK
   409  00FA87  62                 	db	low _I2C2_DO_TX_ACK
   410  00FA88  A4                 	db	high _I2C2_DO_TX_ACK
   411  00FA89  46                 	db	low _I2C2_DO_RX_NACK_STOP
   412  00FA8A  A3                 	db	high _I2C2_DO_RX_NACK_STOP
   413  00FA8B  5A                 	db	low _I2C2_DO_RX_NACK_RESTART
   414  00FA8C  A4                 	db	high _I2C2_DO_RX_NACK_RESTART
   415  00FA8D  7C                 	db	low _I2C2_DO_RESET
   416  00FA8E  A2                 	db	high _I2C2_DO_RESET
   417  00FA8F  62                 	db	low _I2C2_DO_ADDRESS_NACK
   418  00FA90  90                 	db	high _I2C2_DO_ADDRESS_NACK
   419  00FA91  46                 	db	low _I2C2_DO_BUS_COLLISION
   420  00FA92  8D                 	db	high _I2C2_DO_BUS_COLLISION
   421  00FA93  6C                 	db	low _I2C2_DO_BUS_ERROR
   422  00FA94  A2                 	db	high _I2C2_DO_BUS_ERROR
   423  00FA95                     __end_of_fsmStateTable:
   424                           	opt callstack 0
   425  00FA95                     STR_15:
   426                           
   427                           ; BSR set to: 2
   428  00FA95  50                 	db	80	;'P'
   429  00FA96  49                 	db	73	;'I'
   430  00FA97  2D                 	db	45
   431  00FA98  45                 	db	69	;'E'
   432  00FA99  4E                 	db	78	;'N'
   433  00FA9A  44                 	db	68	;'D'
   434  00FA9B  20                 	db	32
   435  00FA9C  54                 	db	84	;'T'
   436  00FA9D  20                 	db	32
   437  00FA9E  25                 	db	37
   438  00FA9F  64                 	db	100	;'d'
   439  00FAA0  20                 	db	32
   440  00FAA1  2D                 	db	45
   441  00FAA2  20                 	db	32
   442  00FAA3  50                 	db	80	;'P'
   443  00FAA4  69                 	db	105	;'i'
   444  00FAA5  20                 	db	32
   445  00FAA6  25                 	db	37
   446  00FAA7  64                 	db	100	;'d'
   447  00FAA8  20                 	db	32
   448  00FAA9  50                 	db	80	;'P'
   449  00FAAA  63                 	db	99	;'c'
   450  00FAAB  20                 	db	32
   451  00FAAC  25                 	db	37
   452  00FAAD  64                 	db	100	;'d'
   453  00FAAE  20                 	db	32
   454  00FAAF  56                 	db	86	;'V'
   455  00FAB0  6F                 	db	111	;'o'
   456  00FAB1  6C                 	db	108	;'l'
   457  00FAB2  20                 	db	32
   458  00FAB3  25                 	db	37
   459  00FAB4  64                 	db	100	;'d'
   460  00FAB5  20                 	db	32
   461  00FAB6  50                 	db	80	;'P'
   462  00FAB7  4D                 	db	77	;'M'
   463  00FAB8  61                 	db	97	;'a'
   464  00FAB9  78                 	db	120	;'x'
   465  00FABA  20                 	db	32
   466  00FABB  25                 	db	37
   467  00FABC  64                 	db	100	;'d'
   468  00FABD  20                 	db	32
   469  00FABE  56                 	db	86	;'V'
   470  00FABF  4C                 	db	76	;'L'
   471  00FAC0  20                 	db	32
   472  00FAC1  25                 	db	37
   473  00FAC2  64                 	db	100	;'d'
   474  00FAC3  20                 	db	32
   475  00FAC4  56                 	db	86	;'V'
   476  00FAC5  4F                 	db	79	;'O'
   477  00FAC6  53                 	db	83	;'S'
   478  00FAC7  20                 	db	32
   479  00FAC8  25                 	db	37
   480  00FAC9  64                 	db	100	;'d'
   481  00FACA  20                 	db	32
   482  00FACB  50                 	db	80	;'P'
   483  00FACC  4F                 	db	79	;'O'
   484  00FACD  53                 	db	83	;'S'
   485  00FACE  20                 	db	32
   486  00FACF  25                 	db	37
   487  00FAD0  64                 	db	100	;'d'
   488  00FAD1  20                 	db	32
   489  00FAD2  46                 	db	70	;'F'
   490  00FAD3  52                 	db	82	;'R'
   491  00FAD4  20                 	db	32
   492  00FAD5  25                 	db	37
   493  00FAD6  64                 	db	100	;'d'
   494  00FAD7  20                 	db	32
   495  00FAD8  55                 	db	85	;'U'
   496  00FAD9  56                 	db	86	;'V'
   497  00FADA  20                 	db	32
   498  00FADB  25                 	db	37
   499  00FADC  64                 	db	100	;'d'
   500  00FADD  0A                 	db	10
   501  00FADE  00                 	db	0
   502  00FADF                     STR_10:
   503                           
   504                           ; BSR set to: 2
   505  00FADF  0A                 	db	10
   506  00FAE0  49                 	db	73	;'I'
   507  00FAE1  50                 	db	80	;'P'
   508  00FAE2  2E                 	db	46
   509  00FAE3  20                 	db	32
   510  00FAE4  4D                 	db	77	;'M'
   511  00FAE5  61                 	db	97	;'a'
   512  00FAE6  78                 	db	120	;'x'
   513  00FAE7  56                 	db	86	;'V'
   514  00FAE8  20                 	db	32
   515  00FAE9  25                 	db	37
   516  00FAEA  64                 	db	100	;'d'
   517  00FAEB  20                 	db	32
   518  00FAEC  45                 	db	69	;'E'
   519  00FAED  42                 	db	66	;'B'
   520  00FAEE  52                 	db	82	;'R'
   521  00FAEF  61                 	db	97	;'a'
   522  00FAF0  74                 	db	116	;'t'
   523  00FAF1  65                 	db	101	;'e'
   524  00FAF2  20                 	db	32
   525  00FAF3  25                 	db	37
   526  00FAF4  64                 	db	100	;'d'
   527  00FAF5  20                 	db	32
   528  00FAF6  53                 	db	83	;'S'
   529  00FAF7  56                 	db	86	;'V'
   530  00FAF8  32                 	db	50	;'2'
   531  00FAF9  52                 	db	82	;'R'
   532  00FAFA  4F                 	db	79	;'O'
   533  00FAFB  20                 	db	32
   534  00FAFC  25                 	db	37
   535  00FAFD  64                 	db	100	;'d'
   536  00FAFE  20                 	db	32
   537  00FAFF  53                 	db	83	;'S'
   538  00FB00  56                 	db	86	;'V'
   539  00FB01  32                 	db	50	;'2'
   540  00FB02  52                 	db	82	;'R'
   541  00FB03  43                 	db	67	;'C'
   542  00FB04  20                 	db	32
   543  00FB05  25                 	db	37
   544  00FB06  64                 	db	100	;'d'
   545  00FB07  20                 	db	32
   546  00FB08  50                 	db	80	;'P'
   547  00FB09  51                 	db	81	;'Q'
   548  00FB0A  20                 	db	32
   549  00FB0B  25                 	db	37
   550  00FB0C  64                 	db	100	;'d'
   551  00FB0D  20                 	db	32
   552  00FB0E  56                 	db	86	;'V'
   553  00FB0F  51                 	db	81	;'Q'
   554  00FB10  20                 	db	32
   555  00FB11  25                 	db	37
   556  00FB12  64                 	db	100	;'d'
   557  00FB13  2E                 	db	46
   558  00FB14  0A                 	db	10
   559  00FB15  00                 	db	0
   560  00FB16                     STR_27:
   561                           
   562                           ; BSR set to: 2
   563  00FB16  50                 	db	80	;'P'
   564  00FB17  45                 	db	69	;'E'
   565  00FB18  20                 	db	32
   566  00FB19  54                 	db	84	;'T'
   567  00FB1A  20                 	db	32
   568  00FB1B  25                 	db	37
   569  00FB1C  64                 	db	100	;'d'
   570  00FB1D  20                 	db	32
   571  00FB1E  2D                 	db	45
   572  00FB1F  20                 	db	32
   573  00FB20  50                 	db	80	;'P'
   574  00FB21  69                 	db	105	;'i'
   575  00FB22  20                 	db	32
   576  00FB23  25                 	db	37
   577  00FB24  64                 	db	100	;'d'
   578  00FB25  20                 	db	32
   579  00FB26  50                 	db	80	;'P'
   580  00FB27  64                 	db	100	;'d'
   581  00FB28  20                 	db	32
   582  00FB29  25                 	db	37
   583  00FB2A  64                 	db	100	;'d'
   584  00FB2B  2E                 	db	46
   585  00FB2C  20                 	db	32
   586  00FB2D  52                 	db	82	;'R'
   587  00FB2E  20                 	db	32
   588  00FB2F  25                 	db	37
   589  00FB30  64                 	db	100	;'d'
   590  00FB31  20                 	db	32
   591  00FB32  50                 	db	80	;'P'
   592  00FB33  65                 	db	101	;'e'
   593  00FB34  70                 	db	112	;'p'
   594  00FB35  20                 	db	32
   595  00FB36  25                 	db	37
   596  00FB37  64                 	db	100	;'d'
   597  00FB38  20                 	db	32
   598  00FB39  50                 	db	80	;'P'
   599  00FB3A  4F                 	db	79	;'O'
   600  00FB3B  53                 	db	83	;'S'
   601  00FB3C  20                 	db	32
   602  00FB3D  25                 	db	37
   603  00FB3E  64                 	db	100	;'d'
   604  00FB3F  20                 	db	32
   605  00FB40  50                 	db	80	;'P'
   606  00FB41  51                 	db	81	;'Q'
   607  00FB42  20                 	db	32
   608  00FB43  25                 	db	37
   609  00FB44  64                 	db	100	;'d'
   610  00FB45  0A                 	db	10
   611  00FB46  00                 	db	0
   612  00FB47                     STR_13:
   613                           
   614                           ; BSR set to: 2
   615  00FB47  50                 	db	80	;'P'
   616  00FB48  49                 	db	73	;'I'
   617  00FB49  2D                 	db	45
   618  00FB4A  4D                 	db	77	;'M'
   619  00FB4B  45                 	db	69	;'E'
   620  00FB4C  44                 	db	68	;'D'
   621  00FB4D  20                 	db	32
   622  00FB4E  54                 	db	84	;'T'
   623  00FB4F  20                 	db	32
   624  00FB50  25                 	db	37
   625  00FB51  64                 	db	100	;'d'
   626  00FB52  20                 	db	32
   627  00FB53  2D                 	db	45
   628  00FB54  20                 	db	32
   629  00FB55  50                 	db	80	;'P'
   630  00FB56  69                 	db	105	;'i'
   631  00FB57  20                 	db	32
   632  00FB58  25                 	db	37
   633  00FB59  64                 	db	100	;'d'
   634  00FB5A  20                 	db	32
   635  00FB5B  50                 	db	80	;'P'
   636  00FB5C  63                 	db	99	;'c'
   637  00FB5D  20                 	db	32
   638  00FB5E  25                 	db	37
   639  00FB5F  64                 	db	100	;'d'
   640  00FB60  20                 	db	32
   641  00FB61  56                 	db	86	;'V'
   642  00FB62  6F                 	db	111	;'o'
   643  00FB63  6C                 	db	108	;'l'
   644  00FB64  20                 	db	32
   645  00FB65  25                 	db	37
   646  00FB66  33                 	db	51	;'3'
   647  00FB67  78                 	db	120	;'x'
   648  00FB68  20                 	db	32
   649  00FB69  4F                 	db	79	;'O'
   650  00FB6A  53                 	db	83	;'S'
   651  00FB6B  20                 	db	32
   652  00FB6C  25                 	db	37
   653  00FB6D  64                 	db	100	;'d'
   654  00FB6E  20                 	db	32
   655  00FB6F  52                 	db	82	;'R'
   656  00FB70  46                 	db	70	;'F'
   657  00FB71  20                 	db	32
   658  00FB72  25                 	db	37
   659  00FB73  64                 	db	100	;'d'
   660  00FB74  0A                 	db	10
   661  00FB75  00                 	db	0
   662  00FB76                     STR_14:
   663                           
   664                           ; BSR set to: 2
   665  00FB76  50                 	db	80	;'P'
   666  00FB77  49                 	db	73	;'I'
   667  00FB78  2D                 	db	45
   668  00FB79  4C                 	db	76	;'L'
   669  00FB7A  4F                 	db	79	;'O'
   670  00FB7B  57                 	db	87	;'W'
   671  00FB7C  20                 	db	32
   672  00FB7D  54                 	db	84	;'T'
   673  00FB7E  20                 	db	32
   674  00FB7F  25                 	db	37
   675  00FB80  64                 	db	100	;'d'
   676  00FB81  20                 	db	32
   677  00FB82  2D                 	db	45
   678  00FB83  20                 	db	32
   679  00FB84  50                 	db	80	;'P'
   680  00FB85  69                 	db	105	;'i'
   681  00FB86  20                 	db	32
   682  00FB87  25                 	db	37
   683  00FB88  64                 	db	100	;'d'
   684  00FB89  20                 	db	32
   685  00FB8A  50                 	db	80	;'P'
   686  00FB8B  63                 	db	99	;'c'
   687  00FB8C  20                 	db	32
   688  00FB8D  25                 	db	37
   689  00FB8E  64                 	db	100	;'d'
   690  00FB8F  20                 	db	32
   691  00FB90  56                 	db	86	;'V'
   692  00FB91  6F                 	db	111	;'o'
   693  00FB92  6C                 	db	108	;'l'
   694  00FB93  20                 	db	32
   695  00FB94  25                 	db	37
   696  00FB95  64                 	db	100	;'d'
   697  00FB96  20                 	db	32
   698  00FB97  4F                 	db	79	;'O'
   699  00FB98  53                 	db	83	;'S'
   700  00FB99  20                 	db	32
   701  00FB9A  25                 	db	37
   702  00FB9B  64                 	db	100	;'d'
   703  00FB9C  0A                 	db	10
   704  00FB9D  00                 	db	0
   705  00FB9E                     STR_65:
   706                           
   707                           ; BSR set to: 2
   708  00FB9E  4D                 	db	77	;'M'
   709  00FB9F  41                 	db	65	;'A'
   710  00FBA0  49                 	db	73	;'I'
   711  00FBA1  4E                 	db	78	;'N'
   712  00FBA2  20                 	db	32
   713  00FBA3  50                 	db	80	;'P'
   714  00FBA4  52                 	db	82	;'R'
   715  00FBA5  45                 	db	69	;'E'
   716  00FBA6  53                 	db	83	;'S'
   717  00FBA7  53                 	db	83	;'S'
   718  00FBA8  55                 	db	85	;'U'
   719  00FBA9  52                 	db	82	;'R'
   720  00FBAA  45                 	db	69	;'E'
   721  00FBAB  2E                 	db	46
   722  00FBAC  20                 	db	32
   723  00FBAD  4D                 	db	77	;'M'
   724  00FBAE  69                 	db	105	;'i'
   725  00FBAF  6E                 	db	110	;'n'
   726  00FBB0  20                 	db	32
   727  00FBB1  25                 	db	37
   728  00FBB2  64                 	db	100	;'d'
   729  00FBB3  20                 	db	32
   730  00FBB4  4D                 	db	77	;'M'
   731  00FBB5  61                 	db	97	;'a'
   732  00FBB6  78                 	db	120	;'x'
   733  00FBB7  20                 	db	32
   734  00FBB8  25                 	db	37
   735  00FBB9  64                 	db	100	;'d'
   736  00FBBA  20                 	db	32
   737  00FBBB  4D                 	db	77	;'M'
   738  00FBBC  45                 	db	69	;'E'
   739  00FBBD  41                 	db	65	;'A'
   740  00FBBE  4E                 	db	78	;'N'
   741  00FBBF  20                 	db	32
   742  00FBC0  25                 	db	37
   743  00FBC1  64                 	db	100	;'d'
   744  00FBC2  0A                 	db	10
   745  00FBC3  00                 	db	0
   746  00FBC4                     STR_66:
   747                           
   748                           ; BSR set to: 2
   749  00FBC4  41                 	db	65	;'A'
   750  00FBC5  55                 	db	85	;'U'
   751  00FBC6  58                 	db	88	;'X'
   752  00FBC7  20                 	db	32
   753  00FBC8  50                 	db	80	;'P'
   754  00FBC9  52                 	db	82	;'R'
   755  00FBCA  45                 	db	69	;'E'
   756  00FBCB  53                 	db	83	;'S'
   757  00FBCC  53                 	db	83	;'S'
   758  00FBCD  55                 	db	85	;'U'
   759  00FBCE  52                 	db	82	;'R'
   760  00FBCF  45                 	db	69	;'E'
   761  00FBD0  2E                 	db	46
   762  00FBD1  20                 	db	32
   763  00FBD2  4D                 	db	77	;'M'
   764  00FBD3  69                 	db	105	;'i'
   765  00FBD4  6E                 	db	110	;'n'
   766  00FBD5  20                 	db	32
   767  00FBD6  25                 	db	37
   768  00FBD7  64                 	db	100	;'d'
   769  00FBD8  20                 	db	32
   770  00FBD9  4D                 	db	77	;'M'
   771  00FBDA  61                 	db	97	;'a'
   772  00FBDB  78                 	db	120	;'x'
   773  00FBDC  20                 	db	32
   774  00FBDD  25                 	db	37
   775  00FBDE  64                 	db	100	;'d'
   776  00FBDF  20                 	db	32
   777  00FBE0  4D                 	db	77	;'M'
   778  00FBE1  45                 	db	69	;'E'
   779  00FBE2  41                 	db	65	;'A'
   780  00FBE3  4E                 	db	78	;'N'
   781  00FBE4  20                 	db	32
   782  00FBE5  25                 	db	37
   783  00FBE6  64                 	db	100	;'d'
   784  00FBE7  0A                 	db	10
   785  00FBE8  00                 	db	0
   786  00FBE9                     STR_25:
   787                           
   788                           ; BSR set to: 2
   789  00FBE9  42                 	db	66	;'B'
   790  00FBEA  44                 	db	68	;'D'
   791  00FBEB  20                 	db	32
   792  00FBEC  56                 	db	86	;'V'
   793  00FBED  4F                 	db	79	;'O'
   794  00FBEE  20                 	db	32
   795  00FBEF  54                 	db	84	;'T'
   796  00FBF0  20                 	db	32
   797  00FBF1  25                 	db	37
   798  00FBF2  64                 	db	100	;'d'
   799  00FBF3  20                 	db	32
   800  00FBF4  2D                 	db	45
   801  00FBF5  20                 	db	32
   802  00FBF6  50                 	db	80	;'P'
   803  00FBF7  69                 	db	105	;'i'
   804  00FBF8  20                 	db	32
   805  00FBF9  25                 	db	37
   806  00FBFA  64                 	db	100	;'d'
   807  00FBFB  20                 	db	32
   808  00FBFC  50                 	db	80	;'P'
   809  00FBFD  35                 	db	53	;'5'
   810  00FBFE  30                 	db	48	;'0'
   811  00FBFF  20                 	db	32
   812  00FC00  25                 	db	37
   813  00FC01  64                 	db	100	;'d'
   814  00FC02  20                 	db	32
   815  00FC03  50                 	db	80	;'P'
   816  00FC04  32                 	db	50	;'2'
   817  00FC05  30                 	db	48	;'0'
   818  00FC06  30                 	db	48	;'0'
   819  00FC07  30                 	db	48	;'0'
   820  00FC08  20                 	db	32
   821  00FC09  25                 	db	37
   822  00FC0A  64                 	db	100	;'d'
   823  00FC0B  0A                 	db	10
   824  00FC0C  00                 	db	0
   825  00FC0D                     STR_17:
   826                           
   827                           ; BSR set to: 2
   828  00FC0D  50                 	db	80	;'P'
   829  00FC0E  49                 	db	73	;'I'
   830  00FC0F  2D                 	db	45
   831  00FC10  56                 	db	86	;'V'
   832  00FC11  4F                 	db	79	;'O'
   833  00FC12  20                 	db	32
   834  00FC13  54                 	db	84	;'T'
   835  00FC14  20                 	db	32
   836  00FC15  25                 	db	37
   837  00FC16  64                 	db	100	;'d'
   838  00FC17  20                 	db	32
   839  00FC18  2D                 	db	45
   840  00FC19  20                 	db	32
   841  00FC1A  50                 	db	80	;'P'
   842  00FC1B  69                 	db	105	;'i'
   843  00FC1C  20                 	db	32
   844  00FC1D  25                 	db	37
   845  00FC1E  64                 	db	100	;'d'
   846  00FC1F  20                 	db	32
   847  00FC20  50                 	db	80	;'P'
   848  00FC21  71                 	db	113	;'q'
   849  00FC22  20                 	db	32
   850  00FC23  25                 	db	37
   851  00FC24  64                 	db	100	;'d'
   852  00FC25  20                 	db	32
   853  00FC26  56                 	db	86	;'V'
   854  00FC27  4F                 	db	79	;'O'
   855  00FC28  4C                 	db	76	;'L'
   856  00FC29  20                 	db	32
   857  00FC2A  25                 	db	37
   858  00FC2B  64                 	db	100	;'d'
   859  00FC2C  0A                 	db	10
   860  00FC2D  00                 	db	0
   861  00FC2E                     STR_67:
   862                           
   863                           ; BSR set to: 2
   864  00FC2E  50                 	db	80	;'P'
   865  00FC2F  52                 	db	82	;'R'
   866  00FC30  45                 	db	69	;'E'
   867  00FC31  53                 	db	83	;'S'
   868  00FC32  53                 	db	83	;'S'
   869  00FC33  55                 	db	85	;'U'
   870  00FC34  52                 	db	82	;'R'
   871  00FC35  45                 	db	69	;'E'
   872  00FC36  20                 	db	32
   873  00FC37  43                 	db	67	;'C'
   874  00FC38  41                 	db	65	;'A'
   875  00FC39  4C                 	db	76	;'L'
   876  00FC3A  49                 	db	73	;'I'
   877  00FC3B  42                 	db	66	;'B'
   878  00FC3C  52                 	db	82	;'R'
   879  00FC3D  41                 	db	65	;'A'
   880  00FC3E  54                 	db	84	;'T'
   881  00FC3F  49                 	db	73	;'I'
   882  00FC40  4F                 	db	79	;'O'
   883  00FC41  4E                 	db	78	;'N'
   884  00FC42  20                 	db	32
   885  00FC43  45                 	db	69	;'E'
   886  00FC44  52                 	db	82	;'R'
   887  00FC45  52                 	db	82	;'R'
   888  00FC46  4F                 	db	79	;'O'
   889  00FC47  52                 	db	82	;'R'
   890  00FC48  0A                 	db	10
   891  00FC49  00                 	db	0
   892  00FC4A                     STR_22:
   893                           
   894                           ; BSR set to: 2
   895  00FC4A  50                 	db	80	;'P'
   896  00FC4B  45                 	db	69	;'E'
   897  00FC4C  49                 	db	73	;'I'
   898  00FC4D  20                 	db	32
   899  00FC4E  65                 	db	101	;'e'
   900  00FC4F  6E                 	db	110	;'n'
   901  00FC50  64                 	db	100	;'d'
   902  00FC51  20                 	db	32
   903  00FC52  54                 	db	84	;'T'
   904  00FC53  20                 	db	32
   905  00FC54  25                 	db	37
   906  00FC55  64                 	db	100	;'d'
   907  00FC56  20                 	db	32
   908  00FC57  2D                 	db	45
   909  00FC58  20                 	db	32
   910  00FC59  50                 	db	80	;'P'
   911  00FC5A  69                 	db	105	;'i'
   912  00FC5B  20                 	db	32
   913  00FC5C  25                 	db	37
   914  00FC5D  64                 	db	100	;'d'
   915  00FC5E  20                 	db	32
   916  00FC5F  4F                 	db	79	;'O'
   917  00FC60  53                 	db	83	;'S'
   918  00FC61  20                 	db	32
   919  00FC62  25                 	db	37
   920  00FC63  64                 	db	100	;'d'
   921  00FC64  0A                 	db	10
   922  00FC65  00                 	db	0
   923  00FC66                     STR_85:
   924                           
   925                           ; BSR set to: 2
   926  00FC66  56                 	db	86	;'V'
   927  00FC67  44                 	db	68	;'D'
   928  00FC68  44                 	db	68	;'D'
   929  00FC69  20                 	db	32
   930  00FC6A  4D                 	db	77	;'M'
   931  00FC6B  69                 	db	105	;'i'
   932  00FC6C  6E                 	db	110	;'n'
   933  00FC6D  20                 	db	32
   934  00FC6E  25                 	db	37
   935  00FC6F  64                 	db	100	;'d'
   936  00FC70  20                 	db	32
   937  00FC71  4D                 	db	77	;'M'
   938  00FC72  61                 	db	97	;'a'
   939  00FC73  78                 	db	120	;'x'
   940  00FC74  20                 	db	32
   941  00FC75  25                 	db	37
   942  00FC76  64                 	db	100	;'d'
   943  00FC77  20                 	db	32
   944  00FC78  4D                 	db	77	;'M'
   945  00FC79  45                 	db	69	;'E'
   946  00FC7A  41                 	db	65	;'A'
   947  00FC7B  4E                 	db	78	;'N'
   948  00FC7C  20                 	db	32
   949  00FC7D  25                 	db	37
   950  00FC7E  64                 	db	100	;'d'
   951  00FC7F  0A                 	db	10
   952  00FC80  00                 	db	0
   953  00FC81                     STR_24:
   954                           
   955                           ; BSR set to: 2
   956  00FC81  50                 	db	80	;'P'
   957  00FC82  45                 	db	69	;'E'
   958  00FC83  20                 	db	32
   959  00FC84  4F                 	db	79	;'O'
   960  00FC85  53                 	db	83	;'S'
   961  00FC86  43                 	db	67	;'C'
   962  00FC87  20                 	db	32
   963  00FC88  54                 	db	84	;'T'
   964  00FC89  20                 	db	32
   965  00FC8A  25                 	db	37
   966  00FC8B  64                 	db	100	;'d'
   967  00FC8C  20                 	db	32
   968  00FC8D  2D                 	db	45
   969  00FC8E  20                 	db	32
   970  00FC8F  50                 	db	80	;'P'
   971  00FC90  69                 	db	105	;'i'
   972  00FC91  20                 	db	32
   973  00FC92  25                 	db	37
   974  00FC93  64                 	db	100	;'d'
   975  00FC94  20                 	db	32
   976  00FC95  50                 	db	80	;'P'
   977  00FC96  30                 	db	48	;'0'
   978  00FC97  20                 	db	32
   979  00FC98  25                 	db	37
   980  00FC99  64                 	db	100	;'d'
   981  00FC9A  0A                 	db	10
   982  00FC9B  00                 	db	0
   983  00FC9C                     STR_1:
   984                           
   985                           ; BSR set to: 2
   986  00FC9C  0A                 	db	10
   987  00FC9D  49                 	db	73	;'I'
   988  00FC9E  50                 	db	80	;'P'
   989  00FC9F  4F                 	db	79	;'O'
   990  00FCA0  53                 	db	83	;'S'
   991  00FCA1  20                 	db	32
   992  00FCA2  4C                 	db	76	;'L'
   993  00FCA3  43                 	db	67	;'C'
   994  00FCA4  20                 	db	32
   995  00FCA5  25                 	db	37
   996  00FCA6  64                 	db	100	;'d'
   997  00FCA7  20                 	db	32
   998  00FCA8  50                 	db	80	;'P'
   999  00FCA9  6C                 	db	108	;'l'
  1000  00FCAA  61                 	db	97	;'a'
  1001  00FCAB  74                 	db	116	;'t'
  1002  00FCAC  20                 	db	32
  1003  00FCAD  25                 	db	37
  1004  00FCAE  64                 	db	100	;'d'
  1005  00FCAF  20                 	db	32
  1006  00FCB0  46                 	db	70	;'F'
  1007  00FCB1  49                 	db	73	;'I'
  1008  00FCB2  20                 	db	32
  1009  00FCB3  25                 	db	37
  1010  00FCB4  64                 	db	100	;'d'
  1011  00FCB5  0A                 	db	10
  1012  00FCB6  00                 	db	0
  1013  00FCB7                     STR_37:
  1014                           
  1015                           ; BSR set to: 2
  1016  00FCB7  25                 	db	37
  1017  00FCB8  32                 	db	50	;'2'
  1018  00FCB9  64                 	db	100	;'d'
  1019  00FCBA  20                 	db	32
  1020  00FCBB  25                 	db	37
  1021  00FCBC  32                 	db	50	;'2'
  1022  00FCBD  64                 	db	100	;'d'
  1023  00FCBE  20                 	db	32
  1024  00FCBF  25                 	db	37
  1025  00FCC0  32                 	db	50	;'2'
  1026  00FCC1  64                 	db	100	;'d'
  1027  00FCC2  20                 	db	32
  1028  00FCC3  25                 	db	37
  1029  00FCC4  32                 	db	50	;'2'
  1030  00FCC5  64                 	db	100	;'d'
  1031  00FCC6  20                 	db	32
  1032  00FCC7  2D                 	db	45
  1033  00FCC8  2D                 	db	45
  1034  00FCC9  2D                 	db	45
  1035  00FCCA  2D                 	db	45
  1036  00FCCB  00                 	db	0
  1037  00FCCC                     STR_23:
  1038                           
  1039                           ; BSR set to: 2
  1040  00FCCC  50                 	db	80	;'P'
  1041  00FCCD  45                 	db	69	;'E'
  1042  00FCCE  20                 	db	32
  1043  00FCCF  56                 	db	86	;'V'
  1044  00FCD0  43                 	db	67	;'C'
  1045  00FCD1  20                 	db	32
  1046  00FCD2  54                 	db	84	;'T'
  1047  00FCD3  20                 	db	32
  1048  00FCD4  25                 	db	37
  1049  00FCD5  64                 	db	100	;'d'
  1050  00FCD6  20                 	db	32
  1051  00FCD7  2D                 	db	45
  1052  00FCD8  20                 	db	32
  1053  00FCD9  50                 	db	80	;'P'
  1054  00FCDA  69                 	db	105	;'i'
  1055  00FCDB  20                 	db	32
  1056  00FCDC  25                 	db	37
  1057  00FCDD  64                 	db	100	;'d'
  1058  00FCDE  0A                 	db	10
  1059  00FCDF  00                 	db	0
  1060  00FCE0                     STR_16:
  1061                           
  1062                           ; BSR set to: 2
  1063  00FCE0  50                 	db	80	;'P'
  1064  00FCE1  49                 	db	73	;'I'
  1065  00FCE2  2D                 	db	45
  1066  00FCE3  56                 	db	86	;'V'
  1067  00FCE4  43                 	db	67	;'C'
  1068  00FCE5  20                 	db	32
  1069  00FCE6  54                 	db	84	;'T'
  1070  00FCE7  20                 	db	32
  1071  00FCE8  25                 	db	37
  1072  00FCE9  64                 	db	100	;'d'
  1073  00FCEA  20                 	db	32
  1074  00FCEB  2D                 	db	45
  1075  00FCEC  20                 	db	32
  1076  00FCED  50                 	db	80	;'P'
  1077  00FCEE  69                 	db	105	;'i'
  1078  00FCEF  20                 	db	32
  1079  00FCF0  25                 	db	37
  1080  00FCF1  64                 	db	100	;'d'
  1081  00FCF2  0A                 	db	10
  1082  00FCF3  00                 	db	0
  1083  00FCF4                     STR_26:
  1084                           
  1085                           ; BSR set to: 2
  1086  00FCF4  50                 	db	80	;'P'
  1087  00FCF5  45                 	db	69	;'E'
  1088  00FCF6  20                 	db	32
  1089  00FCF7  56                 	db	86	;'V'
  1090  00FCF8  4F                 	db	79	;'O'
  1091  00FCF9  20                 	db	32
  1092  00FCFA  54                 	db	84	;'T'
  1093  00FCFB  20                 	db	32
  1094  00FCFC  25                 	db	37
  1095  00FCFD  64                 	db	100	;'d'
  1096  00FCFE  20                 	db	32
  1097  00FCFF  2D                 	db	45
  1098  00FD00  20                 	db	32
  1099  00FD01  50                 	db	80	;'P'
  1100  00FD02  69                 	db	105	;'i'
  1101  00FD03  20                 	db	32
  1102  00FD04  25                 	db	37
  1103  00FD05  64                 	db	100	;'d'
  1104  00FD06  0A                 	db	10
  1105  00FD07  00                 	db	0
  1106  00FD08                     STR_4:
  1107                           
  1108                           ; BSR set to: 2
  1109  00FD08  57                 	db	87	;'W'
  1110  00FD09  61                 	db	97	;'a'
  1111  00FD0A  69                 	db	105	;'i'
  1112  00FD0B  74                 	db	116	;'t'
  1113  00FD0C  20                 	db	32
  1114  00FD0D  66                 	db	102	;'f'
  1115  00FD0E  6F                 	db	111	;'o'
  1116  00FD0F  72                 	db	114	;'r'
  1117  00FD10  20                 	db	32
  1118  00FD11  6B                 	db	107	;'k'
  1119  00FD12  65                 	db	101	;'e'
  1120  00FD13  79                 	db	121	;'y'
  1121  00FD14  20                 	db	32
  1122  00FD15  70                 	db	112	;'p'
  1123  00FD16  72                 	db	114	;'r'
  1124  00FD17  65                 	db	101	;'e'
  1125  00FD18  73                 	db	115	;'s'
  1126  00FD19  73                 	db	115	;'s'
  1127  00FD1A  0A                 	db	10
  1128  00FD1B  00                 	db	0
  1129  00FD1C                     STR_68:
  1130                           
  1131                           ; BSR set to: 2
  1132  00FD1C  56                 	db	86	;'V'
  1133  00FD1D  41                 	db	65	;'A'
  1134  00FD1E  4C                 	db	76	;'L'
  1135  00FD1F  56                 	db	86	;'V'
  1136  00FD20  45                 	db	69	;'E'
  1137  00FD21  20                 	db	32
  1138  00FD22  43                 	db	67	;'C'
  1139  00FD23  48                 	db	72	;'H'
  1140  00FD24  45                 	db	69	;'E'
  1141  00FD25  43                 	db	67	;'C'
  1142  00FD26  4B                 	db	75	;'K'
  1143  00FD27  20                 	db	32
  1144  00FD28  45                 	db	69	;'E'
  1145  00FD29  52                 	db	82	;'R'
  1146  00FD2A  52                 	db	82	;'R'
  1147  00FD2B  4F                 	db	79	;'O'
  1148  00FD2C  52                 	db	82	;'R'
  1149  00FD2D  0A                 	db	10
  1150  00FD2E  00                 	db	0
  1151  00FD2F                     STR_64:
  1152                           
  1153                           ; BSR set to: 2
  1154  00FD2F  4D                 	db	77	;'M'
  1155  00FD30  53                 	db	83	;'S'
  1156  00FD31  3A                 	db	58	;':'
  1157  00FD32  20                 	db	32
  1158  00FD33  25                 	db	37
  1159  00FD34  20                 	db	32
  1160  00FD35  33                 	db	51	;'3'
  1161  00FD36  64                 	db	100	;'d'
  1162  00FD37  20                 	db	32
  1163  00FD38  41                 	db	65	;'A'
  1164  00FD39  53                 	db	83	;'S'
  1165  00FD3A  3A                 	db	58	;':'
  1166  00FD3B  20                 	db	32
  1167  00FD3C  25                 	db	37
  1168  00FD3D  20                 	db	32
  1169  00FD3E  33                 	db	51	;'3'
  1170  00FD3F  64                 	db	100	;'d'
  1171  00FD40  20                 	db	32
  1172  00FD41  00                 	db	0
  1173  00FD42                     STR_51:
  1174                           
  1175                           ; BSR set to: 2
  1176  00FD42  25                 	db	37
  1177  00FD43  31                 	db	49	;'1'
  1178  00FD44  64                 	db	100	;'d'
  1179  00FD45  20                 	db	32
  1180  00FD46  20                 	db	32
  1181  00FD47  20                 	db	32
  1182  00FD48  20                 	db	32
  1183  00FD49  20                 	db	32
  1184  00FD4A  20                 	db	32
  1185  00FD4B  20                 	db	32
  1186  00FD4C  20                 	db	32
  1187  00FD4D  20                 	db	32
  1188  00FD4E  20                 	db	32
  1189  00FD4F  20                 	db	32
  1190  00FD50  20                 	db	32
  1191  00FD51  20                 	db	32
  1192  00FD52  20                 	db	32
  1193  00FD53  20                 	db	32
  1194  00FD54  00                 	db	0
  1195  00FD55                     STR_38:
  1196                           
  1197                           ; BSR set to: 2
  1198  00FD55  25                 	db	37
  1199  00FD56  32                 	db	50	;'2'
  1200  00FD57  64                 	db	100	;'d'
  1201  00FD58  20                 	db	32
  1202  00FD59  25                 	db	37
  1203  00FD5A  32                 	db	50	;'2'
  1204  00FD5B  64                 	db	100	;'d'
  1205  00FD5C  20                 	db	32
  1206  00FD5D  2D                 	db	45
  1207  00FD5E  2D                 	db	45
  1208  00FD5F  20                 	db	32
  1209  00FD60  25                 	db	37
  1210  00FD61  32                 	db	50	;'2'
  1211  00FD62  64                 	db	100	;'d'
  1212  00FD63  20                 	db	32
  1213  00FD64  25                 	db	37
  1214  00FD65  34                 	db	52	;'4'
  1215  00FD66  64                 	db	100	;'d'
  1216  00FD67  00                 	db	0
  1217  00FD68                     STR_5:
  1218                           
  1219                           ; BSR set to: 2
  1220  00FD68  50                 	db	80	;'P'
  1221  00FD69  52                 	db	82	;'R'
  1222  00FD6A  45                 	db	69	;'E'
  1223  00FD6B  53                 	db	83	;'S'
  1224  00FD6C  53                 	db	83	;'S'
  1225  00FD6D  20                 	db	32
  1226  00FD6E  2B                 	db	43
  1227  00FD6F  20                 	db	32
  1228  00FD70  54                 	db	84	;'T'
  1229  00FD71  4F                 	db	79	;'O'
  1230  00FD72  20                 	db	32
  1231  00FD73  52                 	db	82	;'R'
  1232  00FD74  45                 	db	69	;'E'
  1233  00FD75  50                 	db	80	;'P'
  1234  00FD76  45                 	db	69	;'E'
  1235  00FD77  41                 	db	65	;'A'
  1236  00FD78  54                 	db	84	;'T'
  1237  00FD79  20                 	db	32
  1238  00FD7A  00                 	db	0
  1239  00FD7B                     STR_69:
  1240                           
  1241                           ; BSR set to: 2
  1242  00FD7B  46                 	db	70	;'F'
  1243  00FD7C  4C                 	db	76	;'L'
  1244  00FD7D  4F                 	db	79	;'O'
  1245  00FD7E  57                 	db	87	;'W'
  1246  00FD7F  20                 	db	32
  1247  00FD80  52                 	db	82	;'R'
  1248  00FD81  41                 	db	65	;'A'
  1249  00FD82  54                 	db	84	;'T'
  1250  00FD83  45                 	db	69	;'E'
  1251  00FD84  20                 	db	32
  1252  00FD85  20                 	db	32
  1253  00FD86  20                 	db	32
  1254  00FD87  20                 	db	32
  1255  00FD88  20                 	db	32
  1256  00FD89  20                 	db	32
  1257  00FD8A  20                 	db	32
  1258  00FD8B  20                 	db	32
  1259  00FD8C  00                 	db	0
  1260  00FD8D                     STR_95:
  1261                           
  1262                           ; BSR set to: 2
  1263  00FD8D  43                 	db	67	;'C'
  1264  00FD8E  41                 	db	65	;'A'
  1265  00FD8F  4C                 	db	76	;'L'
  1266  00FD90  20                 	db	32
  1267  00FD91  45                 	db	69	;'E'
  1268  00FD92  52                 	db	82	;'R'
  1269  00FD93  52                 	db	82	;'R'
  1270  00FD94  4F                 	db	79	;'O'
  1271  00FD95  52                 	db	82	;'R'
  1272  00FD96  2E                 	db	46
  1273  00FD97  20                 	db	32
  1274  00FD98  52                 	db	82	;'R'
  1275  00FD99  45                 	db	69	;'E'
  1276  00FD9A  54                 	db	84	;'T'
  1277  00FD9B  52                 	db	82	;'R'
  1278  00FD9C  59                 	db	89	;'Y'
  1279  00FD9D  20                 	db	32
  1280  00FD9E  00                 	db	0
  1281  00FD9F                     STR_75:
  1282                           
  1283                           ; BSR set to: 2
  1284  00FD9F  46                 	db	70	;'F'
  1285  00FDA0  4C                 	db	76	;'L'
  1286  00FDA1  4F                 	db	79	;'O'
  1287  00FDA2  57                 	db	87	;'W'
  1288  00FDA3  3A                 	db	58	;':'
  1289  00FDA4  20                 	db	32
  1290  00FDA5  25                 	db	37
  1291  00FDA6  20                 	db	32
  1292  00FDA7  33                 	db	51	;'3'
  1293  00FDA8  64                 	db	100	;'d'
  1294  00FDA9  20                 	db	32
  1295  00FDAA  4C                 	db	76	;'L'
  1296  00FDAB  2F                 	db	47
  1297  00FDAC  6D                 	db	109	;'m'
  1298  00FDAD  69                 	db	105	;'i'
  1299  00FDAE  6E                 	db	110	;'n'
  1300  00FDAF  20                 	db	32
  1301  00FDB0  00                 	db	0
  1302  00FDB1                     STR_78:
  1303                           
  1304                           ; BSR set to: 2
  1305  00FDB1  53                 	db	83	;'S'
  1306  00FDB2  45                 	db	69	;'E'
  1307  00FDB3  4C                 	db	76	;'L'
  1308  00FDB4  46                 	db	70	;'F'
  1309  00FDB5  2D                 	db	45
  1310  00FDB6  54                 	db	84	;'T'
  1311  00FDB7  45                 	db	69	;'E'
  1312  00FDB8  53                 	db	83	;'S'
  1313  00FDB9  54                 	db	84	;'T'
  1314  00FDBA  20                 	db	32
  1315  00FDBB  20                 	db	32
  1316  00FDBC  20                 	db	32
  1317  00FDBD  20                 	db	32
  1318  00FDBE  20                 	db	32
  1319  00FDBF  20                 	db	32
  1320  00FDC0  20                 	db	32
  1321  00FDC1  00                 	db	0
  1322  00FDC2                     STR_89:
  1323                           
  1324                           ; BSR set to: 2
  1325  00FDC2  56                 	db	86	;'V'
  1326  00FDC3  44                 	db	68	;'D'
  1327  00FDC4  44                 	db	68	;'D'
  1328  00FDC5  20                 	db	32
  1329  00FDC6  4E                 	db	78	;'N'
  1330  00FDC7  4F                 	db	79	;'O'
  1331  00FDC8  49                 	db	73	;'I'
  1332  00FDC9  53                 	db	83	;'S'
  1333  00FDCA  59                 	db	89	;'Y'
  1334  00FDCB  20                 	db	32
  1335  00FDCC  20                 	db	32
  1336  00FDCD  20                 	db	32
  1337  00FDCE  20                 	db	32
  1338  00FDCF  20                 	db	32
  1339  00FDD0  20                 	db	32
  1340  00FDD1  20                 	db	32
  1341  00FDD2  00                 	db	0
  1342  00FDD3                     STR_81:
  1343                           
  1344                           ; BSR set to: 2
  1345  00FDD3  41                 	db	65	;'A'
  1346  00FDD4  49                 	db	73	;'I'
  1347  00FDD5  52                 	db	82	;'R'
  1348  00FDD6  57                 	db	87	;'W'
  1349  00FDD7  41                 	db	65	;'A'
  1350  00FDD8  59                 	db	89	;'Y'
  1351  00FDD9  20                 	db	32
  1352  00FDDA  4F                 	db	79	;'O'
  1353  00FDDB  50                 	db	80	;'P'
  1354  00FDDC  45                 	db	69	;'E'
  1355  00FDDD  4E                 	db	78	;'N'
  1356  00FDDE  20                 	db	32
  1357  00FDDF  20                 	db	32
  1358  00FDE0  20                 	db	32
  1359  00FDE1  20                 	db	32
  1360  00FDE2  20                 	db	32
  1361  00FDE3  00                 	db	0
  1362  00FDE4                     STR_79:
  1363                           
  1364                           ; BSR set to: 2
  1365  00FDE4  44                 	db	68	;'D'
  1366  00FDE5  49                 	db	73	;'I'
  1367  00FDE6  53                 	db	83	;'S'
  1368  00FDE7  50                 	db	80	;'P'
  1369  00FDE8  4C                 	db	76	;'L'
  1370  00FDE9  41                 	db	65	;'A'
  1371  00FDEA  59                 	db	89	;'Y'
  1372  00FDEB  20                 	db	32
  1373  00FDEC  54                 	db	84	;'T'
  1374  00FDED  45                 	db	69	;'E'
  1375  00FDEE  53                 	db	83	;'S'
  1376  00FDEF  54                 	db	84	;'T'
  1377  00FDF0  20                 	db	32
  1378  00FDF1  20                 	db	32
  1379  00FDF2  20                 	db	32
  1380  00FDF3  20                 	db	32
  1381  00FDF4  00                 	db	0
  1382  00FDF5                     STR_76:
  1383                           
  1384                           ; BSR set to: 2
  1385  00FDF5  46                 	db	70	;'F'
  1386  00FDF6  4C                 	db	76	;'L'
  1387  00FDF7  4F                 	db	79	;'O'
  1388  00FDF8  57                 	db	87	;'W'
  1389  00FDF9  20                 	db	32
  1390  00FDFA  54                 	db	84	;'T'
  1391  00FDFB  4F                 	db	79	;'O'
  1392  00FDFC  4F                 	db	79	;'O'
  1393  00FDFD  20                 	db	32
  1394  00FDFE  4C                 	db	76	;'L'
  1395  00FDFF  4F                 	db	79	;'O'
  1396  00FE00  57                 	db	87	;'W'
  1397  00FE01  20                 	db	32
  1398  00FE02  20                 	db	32
  1399  00FE03  20                 	db	32
  1400  00FE04  20                 	db	32
  1401  00FE05  00                 	db	0
  1402  00FE06                     STR_74:
  1403                           
  1404                           ; BSR set to: 2
  1405  00FE06  46                 	db	70	;'F'
  1406  00FE07  4C                 	db	76	;'L'
  1407  00FE08  4F                 	db	79	;'O'
  1408  00FE09  57                 	db	87	;'W'
  1409  00FE0A  20                 	db	32
  1410  00FE0B  54                 	db	84	;'T'
  1411  00FE0C  4F                 	db	79	;'O'
  1412  00FE0D  4F                 	db	79	;'O'
  1413  00FE0E  20                 	db	32
  1414  00FE0F  48                 	db	72	;'H'
  1415  00FE10  49                 	db	73	;'I'
  1416  00FE11  47                 	db	71	;'G'
  1417  00FE12  48                 	db	72	;'H'
  1418  00FE13  20                 	db	32
  1419  00FE14  20                 	db	32
  1420  00FE15  20                 	db	32
  1421  00FE16  00                 	db	0
  1422  00FE17                     STR_94:
  1423                           
  1424                           ; BSR set to: 2
  1425  00FE17  4D                 	db	77	;'M'
  1426  00FE18  4F                 	db	79	;'O'
  1427  00FE19  4E                 	db	78	;'N'
  1428  00FE1A  49                 	db	73	;'I'
  1429  00FE1B  54                 	db	84	;'T'
  1430  00FE1C  4F                 	db	79	;'O'
  1431  00FE1D  52                 	db	82	;'R'
  1432  00FE1E  20                 	db	32
  1433  00FE1F  45                 	db	69	;'E'
  1434  00FE20  52                 	db	82	;'R'
  1435  00FE21  52                 	db	82	;'R'
  1436  00FE22  4F                 	db	79	;'O'
  1437  00FE23  52                 	db	82	;'R'
  1438  00FE24  20                 	db	32
  1439  00FE25  20                 	db	32
  1440  00FE26  20                 	db	32
  1441  00FE27  00                 	db	0
  1442  00FE28                     STR_86:
  1443                           
  1444                           ; BSR set to: 2
  1445  00FE28  49                 	db	73	;'I'
  1446  00FE29  4E                 	db	78	;'N'
  1447  00FE2A  54                 	db	84	;'T'
  1448  00FE2B  45                 	db	69	;'E'
  1449  00FE2C  52                 	db	82	;'R'
  1450  00FE2D  4E                 	db	78	;'N'
  1451  00FE2E  41                 	db	65	;'A'
  1452  00FE2F  4C                 	db	76	;'L'
  1453  00FE30  20                 	db	32
  1454  00FE31  45                 	db	69	;'E'
  1455  00FE32  52                 	db	82	;'R'
  1456  00FE33  52                 	db	82	;'R'
  1457  00FE34  4F                 	db	79	;'O'
  1458  00FE35  52                 	db	82	;'R'
  1459  00FE36  20                 	db	32
  1460  00FE37  20                 	db	32
  1461  00FE38  00                 	db	0
  1462  00FE39                     STR_103:
  1463                           
  1464                           ; BSR set to: 2
  1465  00FE39  53                 	db	83	;'S'
  1466  00FE3A  56                 	db	86	;'V'
  1467  00FE3B  31                 	db	49	;'1'
  1468  00FE3C  20                 	db	32
  1469  00FE3D  56                 	db	86	;'V'
  1470  00FE3E  61                 	db	97	;'a'
  1471  00FE3F  6C                 	db	108	;'l'
  1472  00FE40  76                 	db	118	;'v'
  1473  00FE41  65                 	db	101	;'e'
  1474  00FE42  20                 	db	32
  1475  00FE43  65                 	db	101	;'e'
  1476  00FE44  72                 	db	114	;'r'
  1477  00FE45  72                 	db	114	;'r'
  1478  00FE46  6F                 	db	111	;'o'
  1479  00FE47  72                 	db	114	;'r'
  1480  00FE48  20                 	db	32
  1481  00FE49  00                 	db	0
  1482  00FE4A                     STR_99:
  1483                           
  1484                           ; BSR set to: 2
  1485  00FE4A  53                 	db	83	;'S'
  1486  00FE4B  56                 	db	86	;'V'
  1487  00FE4C  32                 	db	50	;'2'
  1488  00FE4D  20                 	db	32
  1489  00FE4E  56                 	db	86	;'V'
  1490  00FE4F  61                 	db	97	;'a'
  1491  00FE50  6C                 	db	108	;'l'
  1492  00FE51  76                 	db	118	;'v'
  1493  00FE52  65                 	db	101	;'e'
  1494  00FE53  20                 	db	32
  1495  00FE54  65                 	db	101	;'e'
  1496  00FE55  72                 	db	114	;'r'
  1497  00FE56  72                 	db	114	;'r'
  1498  00FE57  6F                 	db	111	;'o'
  1499  00FE58  72                 	db	114	;'r'
  1500  00FE59  20                 	db	32
  1501  00FE5A  00                 	db	0
  1502  00FE5B                     STR_80:
  1503                           
  1504                           ; BSR set to: 2
  1505  00FE5B  53                 	db	83	;'S'
  1506  00FE5C  45                 	db	69	;'E'
  1507  00FE5D  4C                 	db	76	;'L'
  1508  00FE5E  46                 	db	70	;'F'
  1509  00FE5F  2D                 	db	45
  1510  00FE60  54                 	db	84	;'T'
  1511  00FE61  45                 	db	69	;'E'
  1512  00FE62  53                 	db	83	;'S'
  1513  00FE63  54                 	db	84	;'T'
  1514  00FE64  2E                 	db	46
  1515  00FE65  20                 	db	32
  1516  00FE66  4C                 	db	76	;'L'
  1517  00FE67  45                 	db	69	;'E'
  1518  00FE68  41                 	db	65	;'A'
  1519  00FE69  56                 	db	86	;'V'
  1520  00FE6A  45                 	db	69	;'E'
  1521  00FE6B  00                 	db	0
  1522  00FE6C                     STR_91:
  1523                           
  1524                           ; BSR set to: 2
  1525  00FE6C  43                 	db	67	;'C'
  1526  00FE6D  41                 	db	65	;'A'
  1527  00FE6E  4C                 	db	76	;'L'
  1528  00FE6F  20                 	db	32
  1529  00FE70  50                 	db	80	;'P'
  1530  00FE71  52                 	db	82	;'R'
  1531  00FE72  45                 	db	69	;'E'
  1532  00FE73  53                 	db	83	;'S'
  1533  00FE74  53                 	db	83	;'S'
  1534  00FE75  20                 	db	32
  1535  00FE76  42                 	db	66	;'B'
  1536  00FE77  52                 	db	82	;'R'
  1537  00FE78  45                 	db	69	;'E'
  1538  00FE79  41                 	db	65	;'A'
  1539  00FE7A  54                 	db	84	;'T'
  1540  00FE7B  48                 	db	72	;'H'
  1541  00FE7C  00                 	db	0
  1542  00FE7D                     STR_87:
  1543                           
  1544                           ; BSR set to: 2
  1545  00FE7D  56                 	db	86	;'V'
  1546  00FE7E  44                 	db	68	;'D'
  1547  00FE7F  44                 	db	68	;'D'
  1548  00FE80  20                 	db	32
  1549  00FE81  4F                 	db	79	;'O'
  1550  00FE82  4F                 	db	79	;'O'
  1551  00FE83  4C                 	db	76	;'L'
  1552  00FE84  3A                 	db	58	;':'
  1553  00FE85  20                 	db	32
  1554  00FE86  25                 	db	37
  1555  00FE87  20                 	db	32
  1556  00FE88  33                 	db	51	;'3'
  1557  00FE89  64                 	db	100	;'d'
  1558  00FE8A  20                 	db	32
  1559  00FE8B  6D                 	db	109	;'m'
  1560  00FE8C  56                 	db	86	;'V'
  1561  00FE8D  00                 	db	0
  1562  00FE8E                     STR_49:
  1563                           
  1564                           ; BSR set to: 2
  1565  00FE8E  25                 	db	37
  1566  00FE8F  33                 	db	51	;'3'
  1567  00FE90  64                 	db	100	;'d'
  1568  00FE91  20                 	db	32
  1569  00FE92  25                 	db	37
  1570  00FE93  33                 	db	51	;'3'
  1571  00FE94  64                 	db	100	;'d'
  1572  00FE95  20                 	db	32
  1573  00FE96  25                 	db	37
  1574  00FE97  33                 	db	51	;'3'
  1575  00FE98  64                 	db	100	;'d'
  1576  00FE99  20                 	db	32
  1577  00FE9A  20                 	db	32
  1578  00FE9B  20                 	db	32
  1579  00FE9C  20                 	db	32
  1580  00FE9D  20                 	db	32
  1581  00FE9E  00                 	db	0
  1582  00FE9F                     STR_48:
  1583                           
  1584                           ; BSR set to: 2
  1585  00FE9F  50                 	db	80	;'P'
  1586  00FEA0  52                 	db	82	;'R'
  1587  00FEA1  45                 	db	69	;'E'
  1588  00FEA2  53                 	db	83	;'S'
  1589  00FEA3  53                 	db	83	;'S'
  1590  00FEA4  20                 	db	32
  1591  00FEA5  42                 	db	66	;'B'
  1592  00FEA6  50                 	db	80	;'P'
  1593  00FEA7  4D                 	db	77	;'M'
  1594  00FEA8  20                 	db	32
  1595  00FEA9  54                 	db	84	;'T'
  1596  00FEAA  4F                 	db	79	;'O'
  1597  00FEAB  20                 	db	32
  1598  00FEAC  20                 	db	32
  1599  00FEAD  20                 	db	32
  1600  00FEAE  20                 	db	32
  1601  00FEAF  00                 	db	0
  1602  00FEB0                     STR_36:
  1603                           
  1604                           ; BSR set to: 2
  1605  00FEB0  56                 	db	86	;'V'
  1606  00FEB1  65                 	db	101	;'e'
  1607  00FEB2  6E                 	db	110	;'n'
  1608  00FEB3  74                 	db	116	;'t'
  1609  00FEB4  69                 	db	105	;'i'
  1610  00FEB5  6C                 	db	108	;'l'
  1611  00FEB6  61                 	db	97	;'a'
  1612  00FEB7  74                 	db	116	;'t'
  1613  00FEB8  6F                 	db	111	;'o'
  1614  00FEB9  72                 	db	114	;'r'
  1615  00FEBA  20                 	db	32
  1616  00FEBB  56                 	db	86	;'V'
  1617  00FEBC  31                 	db	49	;'1'
  1618  00FEBD  2E                 	db	46
  1619  00FEBE  30                 	db	48	;'0'
  1620  00FEBF  20                 	db	32
  1621  00FEC0  00                 	db	0
  1622  00FEC1                     STR_39:
  1623                           
  1624                           ; BSR set to: 2
  1625  00FEC1  2D                 	db	45
  1626  00FEC2  2D                 	db	45
  1627  00FEC3  2D                 	db	45
  1628  00FEC4  2D                 	db	45
  1629  00FEC5  4F                 	db	79	;'O'
  1630  00FEC6  46                 	db	70	;'F'
  1631  00FEC7  46                 	db	70	;'F'
  1632  00FEC8  2D                 	db	45
  1633  00FEC9  53                 	db	83	;'S'
  1634  00FECA  54                 	db	84	;'T'
  1635  00FECB  41                 	db	65	;'A'
  1636  00FECC  54                 	db	84	;'T'
  1637  00FECD  45                 	db	69	;'E'
  1638  00FECE  2D                 	db	45
  1639  00FECF  2D                 	db	45
  1640  00FED0  2D                 	db	45
  1641  00FED1  00                 	db	0
  1642  00FED2                     STR_35:
  1643                           
  1644                           ; BSR set to: 2
  1645  00FED2  4F                 	db	79	;'O'
  1646  00FED3  78                 	db	120	;'x'
  1647  00FED4  79                 	db	121	;'y'
  1648  00FED5  56                 	db	86	;'V'
  1649  00FED6  69                 	db	105	;'i'
  1650  00FED7  74                 	db	116	;'t'
  1651  00FED8  61                 	db	97	;'a'
  1652  00FED9  45                 	db	69	;'E'
  1653  00FEDA  6D                 	db	109	;'m'
  1654  00FEDB  65                 	db	101	;'e'
  1655  00FEDC  72                 	db	114	;'r'
  1656  00FEDD  67                 	db	103	;'g'
  1657  00FEDE  65                 	db	101	;'e'
  1658  00FEDF  6E                 	db	110	;'n'
  1659  00FEE0  63                 	db	99	;'c'
  1660  00FEE1  79                 	db	121	;'y'
  1661  00FEE2  00                 	db	0
  1662  00FEE3                     STR_2:
  1663                           
  1664                           ; BSR set to: 2
  1665  00FEE3  20                 	db	32
  1666  00FEE4  20                 	db	32
  1667  00FEE5  20                 	db	32
  1668  00FEE6  20                 	db	32
  1669  00FEE7  20                 	db	32
  1670  00FEE8  20                 	db	32
  1671  00FEE9  20                 	db	32
  1672  00FEEA  20                 	db	32
  1673  00FEEB  20                 	db	32
  1674  00FEEC  20                 	db	32
  1675  00FEED  20                 	db	32
  1676  00FEEE  20                 	db	32
  1677  00FEEF  20                 	db	32
  1678  00FEF0  20                 	db	32
  1679  00FEF1  20                 	db	32
  1680  00FEF2  20                 	db	32
  1681  00FEF3  00                 	db	0
  1682  00FEF4                     STR_6:
  1683                           
  1684                           ; BSR set to: 2
  1685  00FEF4  50                 	db	80	;'P'
  1686  00FEF5  52                 	db	82	;'R'
  1687  00FEF6  45                 	db	69	;'E'
  1688  00FEF7  53                 	db	83	;'S'
  1689  00FEF8  53                 	db	83	;'S'
  1690  00FEF9  20                 	db	32
  1691  00FEFA  2D                 	db	45
  1692  00FEFB  20                 	db	32
  1693  00FEFC  54                 	db	84	;'T'
  1694  00FEFD  4F                 	db	79	;'O'
  1695  00FEFE  20                 	db	32
  1696  00FEFF  45                 	db	69	;'E'
  1697  00FF00  58                 	db	88	;'X'
  1698  00FF01  49                 	db	73	;'I'
  1699  00FF02  54                 	db	84	;'T'
  1700  00FF03  20                 	db	32
  1701  00FF04  00                 	db	0
  1702  00FF05                     STR_19:
  1703                           
  1704                           ; BSR set to: 2
  1705  00FF05  2D                 	db	45
  1706  00FF06  3A                 	db	58	;':'
  1707  00FF07  20                 	db	32
  1708  00FF08  25                 	db	37
  1709  00FF09  64                 	db	100	;'d'
  1710  00FF0A  20                 	db	32
  1711  00FF0B  25                 	db	37
  1712  00FF0C  64                 	db	100	;'d'
  1713  00FF0D  20                 	db	32
  1714  00FF0E  25                 	db	37
  1715  00FF0F  64                 	db	100	;'d'
  1716  00FF10  20                 	db	32
  1717  00FF11  25                 	db	37
  1718  00FF12  64                 	db	100	;'d'
  1719  00FF13  0A                 	db	10
  1720  00FF14  00                 	db	0
  1721  00FF15                     STR_71:
  1722                           
  1723                           ; BSR set to: 2
  1724  00FF15  4D                 	db	77	;'M'
  1725  00FF16  4F                 	db	79	;'O'
  1726  00FF17  4E                 	db	78	;'N'
  1727  00FF18  49                 	db	73	;'I'
  1728  00FF19  54                 	db	84	;'T'
  1729  00FF1A  4F                 	db	79	;'O'
  1730  00FF1B  52                 	db	82	;'R'
  1731  00FF1C  20                 	db	32
  1732  00FF1D  45                 	db	69	;'E'
  1733  00FF1E  52                 	db	82	;'R'
  1734  00FF1F  52                 	db	82	;'R'
  1735  00FF20  4F                 	db	79	;'O'
  1736  00FF21  52                 	db	82	;'R'
  1737  00FF22  00                 	db	0
  1738  00FF23                     STR_18:
  1739                           
  1740                           ; BSR set to: 2
  1741  00FF23  50                 	db	80	;'P'
  1742  00FF24  49                 	db	73	;'I'
  1743  00FF25  2D                 	db	45
  1744  00FF26  4F                 	db	79	;'O'
  1745  00FF27  53                 	db	83	;'S'
  1746  00FF28  56                 	db	86	;'V'
  1747  00FF29  33                 	db	51	;'3'
  1748  00FF2A  20                 	db	32
  1749  00FF2B  54                 	db	84	;'T'
  1750  00FF2C  20                 	db	32
  1751  00FF2D  25                 	db	37
  1752  00FF2E  64                 	db	100	;'d'
  1753  00FF2F  0A                 	db	10
  1754  00FF30  00                 	db	0
  1755  00FF31                     STR_58:
  1756                           
  1757                           ; BSR set to: 2
  1758  00FF31  4C                 	db	76	;'L'
  1759  00FF32  43                 	db	67	;'C'
  1760  00FF33  20                 	db	32
  1761  00FF34  20                 	db	32
  1762  00FF35  20                 	db	32
  1763  00FF36  20                 	db	32
  1764  00FF37  4C                 	db	76	;'L'
  1765  00FF38  52                 	db	82	;'R'
  1766  00FF39  20                 	db	32
  1767  00FF3A  20                 	db	32
  1768  00FF3B  20                 	db	32
  1769  00FF3C  00                 	db	0
  1770  00FF3D                     STR_50:
  1771                           
  1772                           ; BSR set to: 2
  1773  00FF3D  25                 	db	37
  1774  00FF3E  33                 	db	51	;'3'
  1775  00FF3F  64                 	db	100	;'d'
  1776  00FF40  20                 	db	32
  1777  00FF41  20                 	db	32
  1778  00FF42  20                 	db	32
  1779  00FF43  25                 	db	37
  1780  00FF44  33                 	db	51	;'3'
  1781  00FF45  64                 	db	100	;'d'
  1782  00FF46  20                 	db	32
  1783  00FF47  20                 	db	32
  1784  00FF48  00                 	db	0
  1785  00FF49                     STR_57:
  1786                           
  1787                           ; BSR set to: 2
  1788  00FF49  53                 	db	83	;'S'
  1789  00FF4A  32                 	db	50	;'2'
  1790  00FF4B  4F                 	db	79	;'O'
  1791  00FF4C  20                 	db	32
  1792  00FF4D  53                 	db	83	;'S'
  1793  00FF4E  32                 	db	50	;'2'
  1794  00FF4F  43                 	db	67	;'C'
  1795  00FF50  20                 	db	32
  1796  00FF51  53                 	db	83	;'S'
  1797  00FF52  33                 	db	51	;'3'
  1798  00FF53  43                 	db	67	;'C'
  1799  00FF54  00                 	db	0
  1800  00FF55                     STR_54:
  1801                           
  1802                           ; BSR set to: 2
  1803  00FF55  50                 	db	80	;'P'
  1804  00FF56  4F                 	db	79	;'O'
  1805  00FF57  57                 	db	87	;'W'
  1806  00FF58  45                 	db	69	;'E'
  1807  00FF59  52                 	db	82	;'R'
  1808  00FF5A  20                 	db	32
  1809  00FF5B  4F                 	db	79	;'O'
  1810  00FF5C  46                 	db	70	;'F'
  1811  00FF5D  46                 	db	70	;'F'
  1812  00FF5E  20                 	db	32
  1813  00FF5F  00                 	db	0
  1814  00FF60                     STR_60:
  1815                           
  1816                           ; BSR set to: 2
  1817  00FF60  50                 	db	80	;'P'
  1818  00FF61  57                 	db	87	;'W'
  1819  00FF62  52                 	db	82	;'R'
  1820  00FF63  20                 	db	32
  1821  00FF64  54                 	db	84	;'T'
  1822  00FF65  4F                 	db	79	;'O'
  1823  00FF66  20                 	db	32
  1824  00FF67  4F                 	db	79	;'O'
  1825  00FF68  4E                 	db	78	;'N'
  1826  00FF69  20                 	db	32
  1827  00FF6A  00                 	db	0
  1828  00FF6B                     STR_3:
  1829                           
  1830                           ; BSR set to: 2
  1831  00FF6B  50                 	db	80	;'P'
  1832  00FF6C  4F                 	db	79	;'O'
  1833  00FF6D  57                 	db	87	;'W'
  1834  00FF6E  45                 	db	69	;'E'
  1835  00FF6F  52                 	db	82	;'R'
  1836  00FF70  2D                 	db	45
  1837  00FF71  4F                 	db	79	;'O'
  1838  00FF72  46                 	db	70	;'F'
  1839  00FF73  46                 	db	70	;'F'
  1840  00FF74  0A                 	db	10
  1841  00FF75  00                 	db	0
  1842  00FF76                     STR_104:
  1843                           
  1844                           ; BSR set to: 2
  1845  00FF76  43                 	db	67	;'C'
  1846  00FF77  48                 	db	72	;'H'
  1847  00FF78  4B                 	db	75	;'K'
  1848  00FF79  20                 	db	32
  1849  00FF7A  46                 	db	70	;'F'
  1850  00FF7B  4C                 	db	76	;'L'
  1851  00FF7C  4F                 	db	79	;'O'
  1852  00FF7D  57                 	db	87	;'W'
  1853  00FF7E  0A                 	db	10
  1854  00FF7F  00                 	db	0
  1855  00FF80                     STR_70:
  1856                           
  1857                           ; BSR set to: 2
  1858  00FF80  4D                 	db	77	;'M'
  1859  00FF81  6F                 	db	111	;'o'
  1860  00FF82  6E                 	db	110	;'n'
  1861  00FF83  20                 	db	32
  1862  00FF84  65                 	db	101	;'e'
  1863  00FF85  72                 	db	114	;'r'
  1864  00FF86  72                 	db	114	;'r'
  1865  00FF87  6F                 	db	111	;'o'
  1866  00FF88  72                 	db	114	;'r'
  1867  00FF89  00                 	db	0
  1868  00FF8A                     STR_52:
  1869                           
  1870                           ; BSR set to: 2
  1871  00FF8A  25                 	db	37
  1872  00FF8B  34                 	db	52	;'4'
  1873  00FF8C  64                 	db	100	;'d'
  1874  00FF8D  20                 	db	32
  1875  00FF8E  25                 	db	37
  1876  00FF8F  34                 	db	52	;'4'
  1877  00FF90  64                 	db	100	;'d'
  1878  00FF91  20                 	db	32
  1879  00FF92  20                 	db	32
  1880  00FF93  00                 	db	0
  1881  00FF94                     STR_56:
  1882                           
  1883                           ; BSR set to: 2
  1884  00FF94  20                 	db	32
  1885  00FF95  20                 	db	32
  1886  00FF96  20                 	db	32
  1887  00FF97  20                 	db	32
  1888  00FF98  20                 	db	32
  1889  00FF99  20                 	db	32
  1890  00FF9A  42                 	db	66	;'B'
  1891  00FF9B  44                 	db	68	;'D'
  1892  00FF9C  54                 	db	84	;'T'
  1893  00FF9D  00                 	db	0
  1894  00FF9E                     STR_55:
  1895                           
  1896                           ; BSR set to: 2
  1897  00FF9E  56                 	db	86	;'V'
  1898  00FF9F  53                 	db	83	;'S'
  1899  00FFA0  20                 	db	32
  1900  00FFA1  4C                 	db	76	;'L'
  1901  00FFA2  53                 	db	83	;'S'
  1902  00FFA3  20                 	db	32
  1903  00FFA4  42                 	db	66	;'B'
  1904  00FFA5  44                 	db	68	;'D'
  1905  00FFA6  54                 	db	84	;'T'
  1906  00FFA7  00                 	db	0
  1907  00FFA8                     STR_34:
  1908                           
  1909                           ; BSR set to: 2
  1910  00FFA8  4B                 	db	75	;'K'
  1911  00FFA9  45                 	db	69	;'E'
  1912  00FFAA  59                 	db	89	;'Y'
  1913  00FFAB  21                 	db	33
  1914  00FFAC  20                 	db	32
  1915  00FFAD  25                 	db	37
  1916  00FFAE  64                 	db	100	;'d'
  1917  00FFAF  0A                 	db	10
  1918  00FFB0  00                 	db	0
  1919  00FFB1                     STR_28:
  1920                           
  1921                           ; BSR set to: 2
  1922  00FFB1  46                 	db	70	;'F'
  1923  00FFB2  61                 	db	97	;'a'
  1924  00FFB3  74                 	db	116	;'t'
  1925  00FFB4  61                 	db	97	;'a'
  1926  00FFB5  6C                 	db	108	;'l'
  1927  00FFB6  20                 	db	32
  1928  00FFB7  25                 	db	37
  1929  00FFB8  64                 	db	100	;'d'
  1930  00FFB9  00                 	db	0
  1931  00FFBA                     STR_100:
  1932                           
  1933                           ; BSR set to: 2
  1934  00FFBA  43                 	db	67	;'C'
  1935  00FFBB  48                 	db	72	;'H'
  1936  00FFBC  4B                 	db	75	;'K'
  1937  00FFBD  53                 	db	83	;'S'
  1938  00FFBE  56                 	db	86	;'V'
  1939  00FFBF  31                 	db	49	;'1'
  1940  00FFC0  0A                 	db	10
  1941  00FFC1  00                 	db	0
  1942  00FFC2                     STR_96:
  1943                           
  1944                           ; BSR set to: 2
  1945  00FFC2  43                 	db	67	;'C'
  1946  00FFC3  48                 	db	72	;'H'
  1947  00FFC4  4B                 	db	75	;'K'
  1948  00FFC5  53                 	db	83	;'S'
  1949  00FFC6  56                 	db	86	;'V'
  1950  00FFC7  32                 	db	50	;'2'
  1951  00FFC8  0A                 	db	10
  1952  00FFC9  00                 	db	0
  1953  00FFCA                     STR_61:
  1954                           
  1955                           ; BSR set to: 2
  1956  00FFCA  49                 	db	73	;'I'
  1957  00FFCB  32                 	db	50	;'2'
  1958  00FFCC  43                 	db	67	;'C'
  1959  00FFCD  32                 	db	50	;'2'
  1960  00FFCE  20                 	db	32
  1961  00FFCF  45                 	db	69	;'E'
  1962  00FFD0  0A                 	db	10
  1963  00FFD1  00                 	db	0
  1964  00FFD2                     STR_105:
  1965                           
  1966                           ; BSR set to: 2
  1967  00FFD2  20                 	db	32
  1968  00FFD3  4D                 	db	77	;'M'
  1969  00FFD4  2E                 	db	46
  1970  00FFD5  45                 	db	69	;'E'
  1971  00FFD6  52                 	db	82	;'R'
  1972  00FFD7  52                 	db	82	;'R'
  1973  00FFD8  00                 	db	0
  1974  00FFD9                     STR_90:
  1975                           
  1976                           ; BSR set to: 2
  1977  00FFD9  4B                 	db	75	;'K'
  1978  00FFDA  50                 	db	80	;'P'
  1979  00FFDB  20                 	db	32
  1980  00FFDC  25                 	db	37
  1981  00FFDD  64                 	db	100	;'d'
  1982  00FFDE  0A                 	db	10
  1983  00FFDF  00                 	db	0
  1984  00FFE0                     STR_12:
  1985                           
  1986                           ; BSR set to: 2
  1987  00FFE0  0A                 	db	10
  1988  00FFE1  56                 	db	86	;'V'
  1989  00FFE2  4D                 	db	77	;'M'
  1990  00FFE3  65                 	db	101	;'e'
  1991  00FFE4  64                 	db	100	;'d'
  1992  00FFE5  0A                 	db	10
  1993  00FFE6  00                 	db	0
  1994  00FFE7                     STR_11:
  1995                           
  1996                           ; BSR set to: 2
  1997  00FFE7  0A                 	db	10
  1998  00FFE8  56                 	db	86	;'V'
  1999  00FFE9  4C                 	db	76	;'L'
  2000  00FFEA  6F                 	db	111	;'o'
  2001  00FFEB  77                 	db	119	;'w'
  2002  00FFEC  0A                 	db	10
  2003  00FFED  00                 	db	0
  2004  00FFEE                     STR_92:
  2005                           
  2006                           ; BSR set to: 2
  2007  00FFEE  43                 	db	67	;'C'
  2008  00FFEF  41                 	db	65	;'A'
  2009  00FFF0  4C                 	db	76	;'L'
  2010  00FFF1  50                 	db	80	;'P'
  2011  00FFF2  0A                 	db	10
  2012  00FFF3  00                 	db	0
  2013  00FFF4                     STR_20:
  2014                           
  2015                           ; BSR set to: 2
  2016  00FFF4  56                 	db	86	;'V'
  2017  00FFF5  25                 	db	37
  2018  00FFF6  20                 	db	32
  2019  00FFF7  34                 	db	52	;'4'
  2020  00FFF8  64                 	db	100	;'d'
  2021  00FFF9  00                 	db	0
  2022  00FFFA                     STR_21:
  2023                           
  2024                           ; BSR set to: 2
  2025  00FFFA  0A                 	db	10
  2026  00FFFB  45                 	db	69	;'E'
  2027  00FFFC  50                 	db	80	;'P'
  2028  00FFFD  0A                 	db	10
  2029  00FFFE  00                 	db	0
  2030  0000                     
  2031                           ; #config settings
  2032  00FFFF  00                 	db	0	; dummy byte at the end
  2033  0000                     
  2034                           	psect	nvBANK0
  2035  0000D4                     __pnvBANK0:
  2036                           	opt callstack 0
  2037  0000D4                     _uart1TxBufferRemaining:
  2038                           	opt callstack 0
  2039  0000D4                     	ds	1
  2040                           
  2041                           	psect	nvBANK2
  2042  0002E8                     __pnvBANK2:
  2043                           	opt callstack 0
  2044  0002E8                     _TMR6_InterruptHandler:
  2045                           	opt callstack 0
  2046  0002E8                     	ds	2
  2047  0002EA                     _TMR4_InterruptHandler:
  2048                           	opt callstack 0
  2049  0002EA                     	ds	2
  2050  0002EC                     _TMR2_InterruptHandler:
  2051                           	opt callstack 0
  2052  0002EC                     	ds	2
  2053  0002EE                     _timer1ReloadVal:
  2054                           	opt callstack 0
  2055  0002EE                     	ds	2
  2056  0002F0                     _UART1_ErrorHandler:
  2057                           	opt callstack 0
  2058  0002F0                     	ds	2
  2059  0002F2                     _UART1_OverrunErrorHandler:
  2060                           	opt callstack 0
  2061  0002F2                     	ds	2
  2062  0002F4                     _UART1_FramingErrorHandler:
  2063                           	opt callstack 0
  2064  0002F4                     	ds	2
  2065  0002F6                     _UART1_TxInterruptHandler:
  2066                           	opt callstack 0
  2067  0002F6                     	ds	2
  2068  0002F8                     _ADCC_ADTI_InterruptHandler:
  2069                           	opt callstack 0
  2070  0002F8                     	ds	2
  2071  0000                     _PMD7	set	14791
  2072  0000                     _PMD6	set	14790
  2073  0000                     _PMD5	set	14789
  2074  0000                     _PMD4	set	14788
  2075  0000                     _PMD3	set	14787
  2076  0000                     _PMD2	set	14786
  2077  0000                     _PMD1	set	14785
  2078  0000                     _PMD0	set	14784
  2079  0000                     _OSCTUNE	set	14814
  2080  0000                     _OSCFRQ	set	14815
  2081  0000                     _OSCEN	set	14813
  2082  0000                     _OSCCON3	set	14811
  2083  0000                     _OSCCON1	set	14809
  2084  0000                     _PIR4bits	set	14756
  2085  0000                     _PIE4bits	set	14740
  2086  0000                     _PIR7bits	set	14759
  2087  0000                     _PIE7bits	set	14743
  2088  0000                     _PIR9bits	set	14761
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR5bits	set	14757
  2091  0000                     _PIE5bits	set	14741
  2092  0000                     _PIR6bits	set	14758
  2093  0000                     _PIE6bits	set	14742
  2094  0000                     _PIR3bits	set	14755
  2095  0000                     _PIE3bits	set	14739
  2096  0000                     _PIE1bits	set	14737
  2097  0000                     _PIR1bits	set	14753
  2098  0000                     _I2C2SDAPPS	set	15076
  2099  0000                     _T4INPPS	set	15051
  2100  0000                     _U1RXPPS	set	15077
  2101  0000                     _RC1PPS	set	14865
  2102  0000                     _RB2PPS	set	14858
  2103  0000                     _T6INPPS	set	15052
  2104  0000                     _RB1PPS	set	14857
  2105  0000                     _I2C2SCLPPS	set	15075
  2106  0000                     _INLVLE	set	14980
  2107  0000                     _INLVLD	set	14964
  2108  0000                     _INLVLC	set	14948
  2109  0000                     _INLVLB	set	14932
  2110  0000                     _INLVLA	set	14916
  2111  0000                     _SLRCONE	set	14979
  2112  0000                     _SLRCOND	set	14963
  2113  0000                     _SLRCONC	set	14947
  2114  0000                     _SLRCONB	set	14931
  2115  0000                     _SLRCONA	set	14915
  2116  0000                     _ODCOND	set	14962
  2117  0000                     _ODCONC	set	14946
  2118  0000                     _ODCONB	set	14930
  2119  0000                     _ODCONA	set	14914
  2120  0000                     _ODCONE	set	14978
  2121  0000                     _RD1I2C	set	14971
  2122  0000                     _RD0I2C	set	14970
  2123  0000                     _RC4I2C	set	14955
  2124  0000                     _RC3I2C	set	14954
  2125  0000                     _RB2I2C	set	14939
  2126  0000                     _RB1I2C	set	14938
  2127  0000                     _WPUC	set	14945
  2128  0000                     _WPUA	set	14913
  2129  0000                     _WPUB	set	14929
  2130  0000                     _WPUE	set	14977
  2131  0000                     _WPUD	set	14961
  2132  0000                     _ANSELA	set	14912
  2133  0000                     _ANSELE	set	14976
  2134  0000                     _ANSELB	set	14928
  2135  0000                     _ANSELC	set	14944
  2136  0000                     _ANSELD	set	14960
  2137  0000                     _I2C2PIEbits	set	15716
  2138  0000                     _I2C2PIRbits	set	15715
  2139  0000                     _I2C2ERRbits	set	15712
  2140  0000                     _I2C2CON1bits	set	15710
  2141  0000                     _I2C2TXB	set	15701
  2142  0000                     _I2C2RXB	set	15700
  2143  0000                     _I2C2STAT1bits	set	15714
  2144  0000                     _I2C2CON0bits	set	15709
  2145  0000                     _I2C2CNT	set	15702
  2146  0000                     _I2C2ERR	set	15712
  2147  0000                     _I2C2PIE	set	15716
  2148  0000                     _I2C2PIR	set	15715
  2149  0000                     _I2C2CLK	set	15717
  2150  0000                     _I2C2CON2	set	15711
  2151  0000                     _I2C2CON1	set	15710
  2152  0000                     _I2C2CON0	set	15709
  2153  0000                     _U1TXB	set	15850
  2154  0000                     _U1ERRIE	set	15866
  2155  0000                     _U1ERRIR	set	15865
  2156  0000                     _U1UIR	set	15864
  2157  0000                     _U1FIFO	set	15863
  2158  0000                     _U1BRGH	set	15862
  2159  0000                     _U1BRGL	set	15861
  2160  0000                     _U1CON2	set	15860
  2161  0000                     _U1CON1	set	15859
  2162  0000                     _U1CON0	set	15858
  2163  0000                     _U1P3H	set	15857
  2164  0000                     _U1P3L	set	15856
  2165  0000                     _U1P2H	set	15855
  2166  0000                     _U1P2L	set	15854
  2167  0000                     _U1P1H	set	15853
  2168  0000                     _U1P1L	set	15852
  2169  0000                     _FVRCON	set	16065
  2170  0000                     _ADFLTRL	set	16102
  2171  0000                     _ADFLTRH	set	16103
  2172  0000                     _ADCON0bits	set	16120
  2173  0000                     _ADCON0	set	16120
  2174  0000                     _ADCLK	set	16127
  2175  0000                     _ADACT	set	16126
  2176  0000                     _ADREF	set	16125
  2177  0000                     _ADSTAT	set	16124
  2178  0000                     _ADCON3	set	16123
  2179  0000                     _ADCON2	set	16122
  2180  0000                     _ADCON1	set	16121
  2181  0000                     _ADPREH	set	16119
  2182  0000                     _ADPREL	set	16118
  2183  0000                     _ADCAP	set	16117
  2184  0000                     _ADACQH	set	16116
  2185  0000                     _ADACQL	set	16115
  2186  0000                     _ADPCH	set	16113
  2187  0000                     _ADRPT	set	16108
  2188  0000                     _ADACCU	set	16106
  2189  0000                     _ADSTPTH	set	16101
  2190  0000                     _ADSTPTL	set	16100
  2191  0000                     _ADUTHH	set	16097
  2192  0000                     _ADUTHL	set	16096
  2193  0000                     _ADLTHH	set	16095
  2194  0000                     _ADLTHL	set	16094
  2195  0000                     _LATBbits	set	16315
  2196  0000                     _PORTC	set	16332
  2197  0000                     _PORTD	set	16333
  2198  0000                     _LATDbits	set	16317
  2199  0000                     _LATCbits	set	16316
  2200  0000                     _LATAbits	set	16314
  2201  0000                     _T6CONbits	set	16276
  2202  0000                     _T6CON	set	16276
  2203  0000                     _T6TMR	set	16274
  2204  0000                     _T6PR	set	16275
  2205  0000                     _T6RST	set	16279
  2206  0000                     _T6HLT	set	16277
  2207  0000                     _T6CLKCON	set	16278
  2208  0000                     _T4CONbits	set	16288
  2209  0000                     _T4CON	set	16288
  2210  0000                     _T4TMR	set	16286
  2211  0000                     _T4PR	set	16287
  2212  0000                     _T4RST	set	16291
  2213  0000                     _T4HLT	set	16289
  2214  0000                     _T4CLKCON	set	16290
  2215  0000                     _T2CONbits	set	16300
  2216  0000                     _T2CON	set	16300
  2217  0000                     _T2TMR	set	16298
  2218  0000                     _T2PR	set	16299
  2219  0000                     _T2RST	set	16303
  2220  0000                     _T2HLT	set	16301
  2221  0000                     _T2CLKCON	set	16302
  2222  0000                     _T0CON0bits	set	16312
  2223  0000                     _T0CON0	set	16312
  2224  0000                     _TMR0L	set	16310
  2225  0000                     _TMR0H	set	16311
  2226  0000                     _T0CON1	set	16313
  2227  0000                     _T1CONbits	set	16306
  2228  0000                     _T1CON	set	16306
  2229  0000                     _TMR1L	set	16304
  2230  0000                     _TMR1H	set	16305
  2231  0000                     _T1CLK	set	16309
  2232  0000                     _T1GATE	set	16308
  2233  0000                     _T1GCON	set	16307
  2234  0000                     _TRISD	set	16325
  2235  0000                     _TRISC	set	16324
  2236  0000                     _TRISB	set	16323
  2237  0000                     _TRISA	set	16322
  2238  0000                     _TRISE	set	16326
  2239  0000                     _LATC	set	16316
  2240  0000                     _LATB	set	16315
  2241  0000                     _LATA	set	16314
  2242  0000                     _LATD	set	16317
  2243  0000                     _LATE	set	16318
  2244  0000                     _INTCON0bits	set	16338
  2245                           
  2246                           	psect	cinit
  2247  008578                     __pcinit:
  2248                           	opt callstack 0
  2249  008578                     start_initialization:
  2250                           	opt callstack 0
  2251  008578                     __initialization:
  2252                           	opt callstack 0
  2253                           
  2254                           ; Initialize objects allocated to BANK2 (21 bytes)
  2255                           ; load TBLPTR registers with __pidataBANK2
  2256  008578  0E7C               	movlw	low __pidataBANK2
  2257  00857A  6EF6               	movwf	tblptrl,c
  2258  00857C  0EA1               	movlw	high __pidataBANK2
  2259  00857E  6EF7               	movwf	tblptrh,c
  2260  008580  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2261  008582  6EF8               	movwf	tblptru,c
  2262  008584  EE00  F2D3         	lfsr	0,__pdataBANK2
  2263  008588  EE10 F015          	lfsr	1,21
  2264  00858C                     copy_data0:
  2265  00858C  0009               	tblrd		*+
  2266  00858E  006F FFD7 FFEE     	movff	tablat,postinc0
  2267  008594  50E5               	movf	postdec1,w,c
  2268  008596  50E1               	movf	fsr1l,w,c
  2269  008598  E1F9               	bnz	copy_data0
  2270                           
  2271                           ; Initialize objects allocated to BANK1 (11 bytes)
  2272                           ; load TBLPTR registers with __pidataBANK1
  2273  00859A  0EF8               	movlw	low __pidataBANK1
  2274  00859C  6EF6               	movwf	tblptrl,c
  2275  00859E  0EA3               	movlw	high __pidataBANK1
  2276  0085A0  6EF7               	movwf	tblptrh,c
  2277  0085A2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2278  0085A4  6EF8               	movwf	tblptru,c
  2279  0085A6  EE00  F1F5         	lfsr	0,__pdataBANK1
  2280  0085AA  EE10 F00B          	lfsr	1,11
  2281  0085AE                     copy_data1:
  2282  0085AE  0009               	tblrd		*+
  2283  0085B0  006F FFD7 FFEE     	movff	tablat,postinc0
  2284  0085B6  50E5               	movf	postdec1,w,c
  2285  0085B8  50E1               	movf	fsr1l,w,c
  2286  0085BA  E1F9               	bnz	copy_data1
  2287                           
  2288                           ; Clear objects allocated to BANK3 (144 bytes)
  2289  0085BC  EE00  F300         	lfsr	0,__pbssBANK3
  2290  0085C0  0E90               	movlw	144
  2291  0085C2                     clear_0:
  2292  0085C2  6AEE               	clrf	postinc0,c
  2293  0085C4  06E8               	decf	wreg,f,c
  2294  0085C6  E1FD               	bnz	clear_0
  2295                           
  2296                           ; Clear objects allocated to BANK2 (211 bytes)
  2297  0085C8  EE00  F200         	lfsr	0,__pbssBANK2
  2298  0085CC  0ED3               	movlw	211
  2299  0085CE                     clear_1:
  2300  0085CE  6AEE               	clrf	postinc0,c
  2301  0085D0  06E8               	decf	wreg,f,c
  2302  0085D2  E1FD               	bnz	clear_1
  2303                           
  2304                           ; Clear objects allocated to BANK1 (100 bytes)
  2305  0085D4  EE00  F191         	lfsr	0,__pbssBANK1
  2306  0085D8  0E64               	movlw	100
  2307  0085DA                     clear_2:
  2308  0085DA  6AEE               	clrf	postinc0,c
  2309  0085DC  06E8               	decf	wreg,f,c
  2310  0085DE  E1FD               	bnz	clear_2
  2311                           
  2312                           ; Clear objects allocated to BANK0 (37 bytes)
  2313  0085E0  EE00  F0AF         	lfsr	0,__pbssBANK0
  2314  0085E4  0E25               	movlw	37
  2315  0085E6                     clear_3:
  2316  0085E6  6AEE               	clrf	postinc0,c
  2317  0085E8  06E8               	decf	wreg,f,c
  2318  0085EA  E1FD               	bnz	clear_3
  2319                           
  2320                           ;
  2321                           ; Setup IVTBASE
  2322                           ;
  2323  0085EC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2324  0085EE  6ED5               	movwf	213,c
  2325  0085F0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2326  0085F2  6ED6               	movwf	214,c
  2327  0085F4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2328  0085F6  6ED7               	movwf	215,c
  2329  0085F8                     end_of_initialization:
  2330                           	opt callstack 0
  2331  0085F8                     __end_of__initialization:
  2332                           	opt callstack 0
  2333  0085F8  0100               	movlb	0
  2334  0085FA  EF0F  F000         	goto	_main	;jump to C main() function
  2335                           
  2336                           	psect	bssBANK0
  2337  0000AF                     __pbssBANK0:
  2338                           	opt callstack 0
  2339  0000AF                     _bRatePtr:
  2340                           	opt callstack 0
  2341  0000AF                     	ds	3
  2342  0000B2                     _width:
  2343                           	opt callstack 0
  2344  0000B2                     	ds	2
  2345  0000B4                     _prec:
  2346                           	opt callstack 0
  2347  0000B4                     	ds	2
  2348  0000B6                     _flags:
  2349                           	opt callstack 0
  2350  0000B6                     	ds	2
  2351  0000B8                     _rVLowActuationTstamp:
  2352                           	opt callstack 0
  2353  0000B8                     	ds	2
  2354  0000BA                     _rVHighActuationTstamp:
  2355                           	opt callstack 0
  2356  0000BA                     	ds	2
  2357  0000BC                     _I2C2_InterruptHandler:
  2358                           	opt callstack 0
  2359  0000BC                     	ds	2
  2360  0000BE                     _bRateCnt:
  2361                           	opt callstack 0
  2362  0000BE                     	ds	1
  2363  0000BF                     _eBRate:
  2364                           	opt callstack 0
  2365  0000BF                     	ds	1
  2366  0000C0                     _lastI2C2MTrfResponse:
  2367                           	opt callstack 0
  2368  0000C0                     	ds	1
  2369  0000C1                     _lcdBusy:
  2370                           	opt callstack 0
  2371  0000C1                     	ds	1
  2372  0000C2                     _parBuffLen:
  2373                           	opt callstack 0
  2374  0000C2                     	ds	1
  2375  0000C3                     _parBuffPtr:
  2376                           	opt callstack 0
  2377  0000C3                     	ds	1
  2378  0000C4                     __backlightval:
  2379                           	opt callstack 0
  2380  0000C4                     	ds	1
  2381  0000C5                     __numlines:
  2382                           	opt callstack 0
  2383  0000C5                     	ds	1
  2384  0000C6                     __displaymode:
  2385                           	opt callstack 0
  2386  0000C6                     	ds	1
  2387  0000C7                     __displaycontrol:
  2388                           	opt callstack 0
  2389  0000C7                     	ds	1
  2390  0000C8                     __displayfunction:
  2391                           	opt callstack 0
  2392  0000C8                     	ds	1
  2393  0000C9                     _keyFilter:
  2394                           	opt callstack 0
  2395  0000C9                     	ds	1
  2396  0000CA                     _lastkeyEC:
  2397                           	opt callstack 0
  2398  0000CA                     	ds	1
  2399  0000CB                     _lastkey:
  2400                           	opt callstack 0
  2401  0000CB                     	ds	1
  2402  0000CC                     _curASrc:
  2403                           	opt callstack 0
  2404  0000CC                     	ds	1
  2405  0000CD                     _uart1RxLastError:
  2406                           	opt callstack 0
  2407  0000CD                     	ds	1
  2408  0000CE                     _uart1TxTail:
  2409                           	opt callstack 0
  2410  0000CE                     	ds	1
  2411  0000CF                     _uart1TxHead:
  2412                           	opt callstack 0
  2413  0000CF                     	ds	1
  2414  0000D0                     _pInspOS:
  2415                           	opt callstack 0
  2416  0000D0                     	ds	2
  2417  0000D2                     _bdP2:
  2418                           	opt callstack 0
  2419  0000D2                     	ds	2
  2420                           
  2421                           	psect	bssBANK1
  2422  000191                     __pbssBANK1:
  2423                           	opt callstack 0
  2424  000191                     _vddValMean:
  2425                           	opt callstack 0
  2426  000191                     	ds	2
  2427  000193                     _menuVal:
  2428                           	opt callstack 0
  2429  000193                     	ds	2
  2430  000195                     _rTimeTmp:
  2431                           	opt callstack 0
  2432  000195                     	ds	2
  2433  000197                     _rValveDelayStart:
  2434                           	opt callstack 0
  2435  000197                     	ds	2
  2436  000199                     _rSV3ValveORT:
  2437                           	opt callstack 0
  2438  000199                     	ds	2
  2439  00019B                     _rSV2ValveCRT:
  2440                           	opt callstack 0
  2441  00019B                     	ds	2
  2442  00019D                     _rSV2ValveORT:
  2443                           	opt callstack 0
  2444  00019D                     	ds	2
  2445  00019F                     _rVMedActuationTstamp:
  2446                           	opt callstack 0
  2447  00019F                     	ds	2
  2448  0001A1                     _rValveActuationTstamp:
  2449                           	opt callstack 0
  2450  0001A1                     	ds	2
  2451  0001A3                     _pAdj:
  2452                           	opt callstack 0
  2453  0001A3                     	ds	2
  2454  0001A5                     _vQuanta:
  2455                           	opt callstack 0
  2456  0001A5                     	ds	2
  2457  0001A7                     _vValveActuation:
  2458                           	opt callstack 0
  2459  0001A7                     	ds	2
  2460  0001A9                     _pPeepActual:
  2461                           	opt callstack 0
  2462  0001A9                     	ds	2
  2463  0001AB                     _pPlatMax:
  2464                           	opt callstack 0
  2465  0001AB                     	ds	2
  2466  0001AD                     _IDuration:
  2467                           	opt callstack 0
  2468  0001AD                     	ds	2
  2469  0001AF                     _intIDuration:
  2470                           	opt callstack 0
  2471  0001AF                     	ds	2
  2472  0001B1                     _intPEEP:
  2473                           	opt callstack 0
  2474  0001B1                     	ds	2
  2475  0001B3                     _intIP:
  2476                           	opt callstack 0
  2477  0001B3                     	ds	2
  2478  0001B5                     _lastI2C2MAckResponse:
  2479                           	opt callstack 0
  2480  0001B5                     	ds	1
  2481  0001B6                     _currentTrfAddr:
  2482                           	opt callstack 0
  2483  0001B6                     	ds	1
  2484  0001B7                     _menuStatus:
  2485                           	opt callstack 0
  2486  0001B7                     	ds	1
  2487  0001B8                     _lcdBlink:
  2488                           	opt callstack 0
  2489  0001B8                     	ds	1
  2490  0001B9                     _chMaxV:
  2491                           	opt callstack 0
  2492  0001B9                     	ds	1
  2493  0001BA                     _chHighVAlarm:
  2494                           	opt callstack 0
  2495  0001BA                     	ds	1
  2496  0001BB                     _chLowVAlarm:
  2497                           	opt callstack 0
  2498  0001BB                     	ds	1
  2499  0001BC                     _chPEEP:
  2500                           	opt callstack 0
  2501  0001BC                     	ds	1
  2502  0001BD                     _chMaxP:
  2503                           	opt callstack 0
  2504  0001BD                     	ds	1
  2505  0001BE                     _chIP:
  2506                           	opt callstack 0
  2507  0001BE                     	ds	1
  2508  0001BF                     _chBPM:
  2509                           	opt callstack 0
  2510  0001BF                     	ds	1
  2511  0001C0                     __Addr:
  2512                           	opt callstack 0
  2513  0001C0                     	ds	1
  2514  0001C1                     _OSCheckInt:
  2515                           	opt callstack 0
  2516  0001C1                     	ds	1
  2517  0001C2                     _QuantaCheck:
  2518                           	opt callstack 0
  2519  0001C2                     	ds	1
  2520  0001C3                     _OSCheck:
  2521                           	opt callstack 0
  2522  0001C3                     	ds	1
  2523  0001C4                     _sv3DelayCheck:
  2524                           	opt callstack 0
  2525  0001C4                     	ds	1
  2526  0001C5                     _sv2DelayCheck:
  2527                           	opt callstack 0
  2528  0001C5                     	ds	1
  2529  0001C6                     _initInspSubState:
  2530                           	opt callstack 0
  2531  0001C6                     	ds	1
  2532  0001C7                     _initExpSubState:
  2533                           	opt callstack 0
  2534  0001C7                     	ds	1
  2535  0001C8                     _ctrlStatus:
  2536                           	opt callstack 0
  2537  0001C8                     	ds	1
  2538  0001C9                     _sBreath:
  2539                           	opt callstack 0
  2540  0001C9                     	ds	1
  2541  0001CA                     _intVentMode:
  2542                           	opt callstack 0
  2543  0001CA                     	ds	1
  2544  0001CB                     _ctrlErrorStatus:
  2545                           	opt callstack 0
  2546  0001CB                     	ds	1
  2547  0001CC                     _lcdPrintBRR:
  2548                           	opt callstack 0
  2549  0001CC                     	ds	1
  2550  0001CD                     _lcdPrintBR:
  2551                           	opt callstack 0
  2552  0001CD                     	ds	1
  2553  0001CE                     _lcdPrintTR:
  2554                           	opt callstack 0
  2555  0001CE                     	ds	1
  2556  0001CF                     _rCycleTime:
  2557                           	opt callstack 0
  2558  0001CF                     	ds	2
  2559  0001D1                     _effectiveFlowRateInv:
  2560                           	opt callstack 0
  2561  0001D1                     	ds	2
  2562  0001D3                     _pQuantaExp:
  2563                           	opt callstack 0
  2564  0001D3                     	ds	2
  2565  0001D5                     _pQuantaInsp:
  2566                           	opt callstack 0
  2567  0001D5                     	ds	2
  2568  0001D7                     _pInspVSet:
  2569                           	opt callstack 0
  2570  0001D7                     	ds	2
  2571  0001D9                     _vInspOS:
  2572                           	opt callstack 0
  2573  0001D9                     	ds	2
  2574  0001DB                     _pInspOS2:
  2575                           	opt callstack 0
  2576  0001DB                     	ds	2
  2577  0001DD                     _pInspOS3:
  2578                           	opt callstack 0
  2579  0001DD                     	ds	2
  2580  0001DF                     _lungC:
  2581                           	opt callstack 0
  2582  0001DF                     	ds	2
  2583  0001E1                     _pExpOS:
  2584                           	opt callstack 0
  2585  0001E1                     	ds	2
  2586  0001E3                     _pPlatInsp:
  2587                           	opt callstack 0
  2588  0001E3                     	ds	2
  2589  0001E5                     _pValveActuation:
  2590                           	opt callstack 0
  2591  0001E5                     	ds	2
  2592  0001E7                     _pCtrl:
  2593                           	opt callstack 0
  2594  0001E7                     	ds	2
  2595  0001E9                     _bdP1:
  2596                           	opt callstack 0
  2597  0001E9                     	ds	2
  2598  0001EB                     _pAvgUShort:
  2599                           	opt callstack 0
  2600  0001EB                     	ds	2
  2601  0001ED                     _pAvgShort:
  2602                           	opt callstack 0
  2603  0001ED                     	ds	2
  2604  0001EF                     _pInst:
  2605                           	opt callstack 0
  2606  0001EF                     	ds	2
  2607  0001F1                     _intMaxV:
  2608                           	opt callstack 0
  2609  0001F1                     	ds	2
  2610  0001F3                     _intMaxP:
  2611                           	opt callstack 0
  2612  0001F3                     	ds	2
  2613                           
  2614                           	psect	dataBANK1
  2615  0001F5                     __pdataBANK1:
  2616                           	opt callstack 0
  2617  0001F5                     _mainPSensCal:
  2618                           	opt callstack 0
  2619  0001F5                     	ds	2
  2620  0001F7                     _LowVAlarm:
  2621                           	opt callstack 0
  2622  0001F7                     	ds	1
  2623  0001F8                     _VentMode:
  2624                           	opt callstack 0
  2625  0001F8                     	ds	1
  2626  0001F9                     _BdTrig:
  2627                           	opt callstack 0
  2628  0001F9                     	ds	1
  2629  0001FA                     _PEEP:
  2630                           	opt callstack 0
  2631  0001FA                     	ds	1
  2632  0001FB                     _IP:
  2633                           	opt callstack 0
  2634  0001FB                     	ds	1
  2635  0001FC                     _BPM:
  2636                           	opt callstack 0
  2637  0001FC                     	ds	1
  2638  0001FD                     _HighVAlarm:
  2639                           	opt callstack 0
  2640  0001FD                     	ds	1
  2641  0001FE                     _MaxV:
  2642                           	opt callstack 0
  2643  0001FE                     	ds	1
  2644  0001FF                     _MaxP:
  2645                           	opt callstack 0
  2646  0001FF                     	ds	1
  2647                           
  2648                           	psect	bssBANK2
  2649  000200                     __pbssBANK2:
  2650                           	opt callstack 0
  2651  000200                     _I2C2_Status:
  2652                           	opt callstack 0
  2653  000200                     	ds	36
  2654  000224                     _resultTblVal:
  2655                           	opt callstack 0
  2656  000224                     	ds	7
  2657  00022B                     _volume:
  2658                           	opt callstack 0
  2659  00022B                     	ds	4
  2660  00022F                     _bRateHist:
  2661                           	opt callstack 0
  2662  00022F                     	ds	3
  2663  000232                     _nout:
  2664                           	opt callstack 0
  2665  000232                     	ds	2
  2666  000234                     _freeFlowRateL:
  2667                           	opt callstack 0
  2668  000234                     	ds	2
  2669  000236                     _freeFlowRateM:
  2670                           	opt callstack 0
  2671  000236                     	ds	2
  2672  000238                     _menuTstamp:
  2673                           	opt callstack 0
  2674  000238                     	ds	2
  2675  00023A                     _pressMills:
  2676                           	opt callstack 0
  2677  00023A                     	ds	2
  2678  00023C                     _tInsp:
  2679                           	opt callstack 0
  2680  00023C                     	ds	2
  2681  00023E                     _vAdj:
  2682                           	opt callstack 0
  2683  00023E                     	ds	2
  2684  000240                     _pInspOSVSet:
  2685                           	opt callstack 0
  2686  000240                     	ds	2
  2687  000242                     _vPlateau:
  2688                           	opt callstack 0
  2689  000242                     	ds	2
  2690  000244                     _lastCycleVol:
  2691                           	opt callstack 0
  2692  000244                     	ds	2
  2693  000246                     _EDuration:
  2694                           	opt callstack 0
  2695  000246                     	ds	2
  2696  000248                     _intEDuration:
  2697                           	opt callstack 0
  2698  000248                     	ds	2
  2699  00024A                     _intBdTrig:
  2700                           	opt callstack 0
  2701  00024A                     	ds	2
  2702  00024C                     _lastI2CMonTrfResponse:
  2703                           	opt callstack 0
  2704  00024C                     	ds	1
  2705  00024D                     _lastI2C2LAckResponse:
  2706                           	opt callstack 0
  2707  00024D                     	ds	1
  2708  00024E                     _lastI2C2LTrfResponse:
  2709                           	opt callstack 0
  2710  00024E                     	ds	1
  2711  00024F                     _chVentMode:
  2712                           	opt callstack 0
  2713  00024F                     	ds	1
  2714  000250                     _chBdTrig:
  2715                           	opt callstack 0
  2716  000250                     	ds	1
  2717  000251                     __rows:
  2718                           	opt callstack 0
  2719  000251                     	ds	1
  2720  000252                     __cols:
  2721                           	opt callstack 0
  2722  000252                     	ds	1
  2723  000253                     _dbuf:
  2724                           	opt callstack 0
  2725  000253                     	ds	32
  2726  000273                     _resultTbl:
  2727                           	opt callstack 0
  2728  000273                     	ds	28
  2729  00028F                     _lcdBtnRow:
  2730                           	opt callstack 0
  2731  00028F                     	ds	20
  2732  0002A3                     _lcdTopRow:
  2733                           	opt callstack 0
  2734  0002A3                     	ds	20
  2735  0002B7                     _monitorMsg:
  2736                           	opt callstack 0
  2737  0002B7                     	ds	10
  2738  0002C1                     _lcdBtnRRow:
  2739                           	opt callstack 0
  2740  0002C1                     	ds	10
  2741  0002CB                     _monTstamp:
  2742                           	opt callstack 0
  2743  0002CB                     	ds	2
  2744  0002CD                     _lungR:
  2745                           	opt callstack 0
  2746  0002CD                     	ds	2
  2747  0002CF                     _pPlatExp:
  2748                           	opt callstack 0
  2749  0002CF                     	ds	2
  2750  0002D1                     _freeFlowRateF:
  2751                           	opt callstack 0
  2752  0002D1                     	ds	2
  2753                           
  2754                           	psect	dataBANK2
  2755  0002D3                     __pdataBANK2:
  2756                           	opt callstack 0
  2757  0002D3                     setCursor@F16920:
  2758                           	opt callstack 0
  2759  0002D3                     	ds	8
  2760  0002DB                     _keysD:
  2761                           	opt callstack 0
  2762  0002DB                     	ds	6
  2763  0002E1                     _keysC:
  2764                           	opt callstack 0
  2765  0002E1                     	ds	5
  2766  0002E6                     _auxPSensCal:
  2767                           	opt callstack 0
  2768  0002E6                     	ds	2
  2769                           
  2770                           	psect	bssBANK3
  2771  000300                     __pbssBANK3:
  2772                           	opt callstack 0
  2773  000300                     _i2cBuff:
  2774                           	opt callstack 0
  2775  000300                     	ds	80
  2776  000350                     _uart1TxBuffer:
  2777                           	opt callstack 0
  2778  000350                     	ds	64
  2779                           
  2780                           	psect	cstackBANK3
  2781  000390                     __pcstackBANK3:
  2782                           	opt callstack 0
  2783  000390                     SelfTest@tstScreen:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 1 bytes @ 0x0
  2787  000390                     	ds	1
  2788  000391                     SelfTest@lcdBLight:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 1 bytes @ 0x1
  2792  000391                     	ds	1
  2793  000392                     SelfTest@idx:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 2 bytes @ 0x2
  2797  000392                     	ds	2
  2798  000394                     SelfTest@cIdx:
  2799                           	opt callstack 0
  2800                           
  2801                           ; 2 bytes @ 0x4
  2802  000394                     	ds	2
  2803  000396                     SelfTest@tstamp:
  2804                           	opt callstack 0
  2805                           
  2806                           ; 2 bytes @ 0x6
  2807  000396                     	ds	2
  2808  000398                     SelfTest@vddValMax:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x8
  2812  000398                     	ds	2
  2813  00039A                     SelfTest@vddValMin:
  2814                           	opt callstack 0
  2815                           
  2816                           ; 2 bytes @ 0xA
  2817  00039A                     	ds	2
  2818  00039C                     SelfTest@vddVal:
  2819                           	opt callstack 0
  2820                           
  2821                           ; 2 bytes @ 0xC
  2822  00039C                     	ds	2
  2823  00039E                     SelfTest@initOk:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 1 bytes @ 0xE
  2827  00039E                     	ds	1
  2828  00039F                     ??_main:
  2829                           
  2830                           ; 1 bytes @ 0xF
  2831  00039F                     	ds	11
  2832  0003AA                     _main$3847:
  2833                           	opt callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x1A
  2836  0003AA                     	ds	2
  2837  0003AC                     _main$3848:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x1C
  2841  0003AC                     	ds	2
  2842  0003AE                     main@tstScreen:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 1 bytes @ 0x1E
  2846  0003AE                     	ds	1
  2847  0003AF                     _main$6100:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 3 bytes @ 0x1F
  2851  0003AF                     	ds	3
  2852  0003B2                     main@vInspOSScale:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 2 bytes @ 0x22
  2856  0003B2                     	ds	2
  2857  0003B4                     main@printTime:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x24
  2861  0003B4                     	ds	2
  2862  0003B6                     main@keyTmp:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 1 bytes @ 0x26
  2866  0003B6                     	ds	1
  2867  0003B7                     main@tmpUVal:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 2 bytes @ 0x27
  2871  0003B7                     	ds	2
  2872  0003B9                     _main$6101:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 2 bytes @ 0x29
  2876  0003B9                     	ds	2
  2877  0003BB                     main@tmpVal2:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x2B
  2881  0003BB                     	ds	2
  2882  0003BD                     main@pInspOSScale:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 2 bytes @ 0x2D
  2886  0003BD                     	ds	2
  2887  0003BF                     main@tmpVal:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 2 bytes @ 0x2F
  2891  0003BF                     	ds	2
  2892                           
  2893                           	psect	cstackBANK2
  2894  0002FA                     __pcstackBANK2:
  2895                           	opt callstack 0
  2896  0002FA                     ??_SelfTest:
  2897                           
  2898                           ; 1 bytes @ 0x0
  2899  0002FA                     	ds	4
  2900                           
  2901                           	psect	cstackBANK1
  2902  000100                     __pcstackBANK1:
  2903                           	opt callstack 0
  2904  000100                     ??___fltol:
  2905  000100                     ?_dtoa:
  2906                           	opt callstack 0
  2907  000100                     ?_xtoa:
  2908                           	opt callstack 0
  2909  000100                     dtoa@fp:
  2910                           	opt callstack 0
  2911  000100                     xtoa@fp:
  2912                           	opt callstack 0
  2913  000100                     atoi@neg:
  2914                           	opt callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x0
  2917  000100                     	ds	2
  2918  000102                     _atoi$5374:
  2919                           	opt callstack 0
  2920  000102                     dtoa@d:
  2921                           	opt callstack 0
  2922  000102                     xtoa@d:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 8 bytes @ 0x2
  2926  000102                     	ds	2
  2927  000104                     _atoi$5376:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x4
  2931  000104                     	ds	2
  2932  000106                     _atoi$5375:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 1 bytes @ 0x6
  2936  000106                     	ds	1
  2937  000107                     atoi@n:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x7
  2941  000107                     	ds	3
  2942  00010A                     ??_dtoa:
  2943  00010A                     xtoa@x:
  2944                           	opt callstack 0
  2945                           
  2946                           ; 1 bytes @ 0xA
  2947  00010A                     	ds	1
  2948  00010B                     ??_xtoa:
  2949                           
  2950                           ; 1 bytes @ 0xB
  2951  00010B                     	ds	7
  2952  000112                     _dtoa$4890:
  2953                           	opt callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x12
  2956  000112                     	ds	1
  2957  000113                     _xtoa$4901:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x13
  2961  000113                     	ds	1
  2962  000114                     dtoa@p:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x14
  2966  000114                     	ds	1
  2967  000115                     _xtoa$4902:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 2 bytes @ 0x15
  2971  000115                     	ds	1
  2972  000116                     dtoa@w:
  2973                           	opt callstack 0
  2974                           
  2975                           ; 2 bytes @ 0x16
  2976  000116                     	ds	1
  2977  000117                     xtoa@p:
  2978                           	opt callstack 0
  2979                           
  2980                           ; 2 bytes @ 0x17
  2981  000117                     	ds	1
  2982  000118                     dtoa@s:
  2983                           	opt callstack 0
  2984                           
  2985                           ; 2 bytes @ 0x18
  2986  000118                     	ds	1
  2987  000119                     xtoa@w:
  2988                           	opt callstack 0
  2989                           
  2990                           ; 2 bytes @ 0x19
  2991  000119                     	ds	1
  2992  00011A                     dtoa@n:
  2993                           	opt callstack 0
  2994                           
  2995                           ; 8 bytes @ 0x1A
  2996  00011A                     	ds	1
  2997  00011B                     xtoa@n:
  2998                           	opt callstack 0
  2999                           
  3000                           ; 8 bytes @ 0x1B
  3001  00011B                     	ds	7
  3002  000122                     dtoa@i:
  3003                           	opt callstack 0
  3004                           
  3005                           ; 2 bytes @ 0x22
  3006  000122                     	ds	1
  3007  000123                     xtoa@i:
  3008                           	opt callstack 0
  3009                           
  3010                           ; 2 bytes @ 0x23
  3011  000123                     	ds	2
  3012  000125                     xtoa@c:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 2 bytes @ 0x25
  3016  000125                     	ds	2
  3017  000127                     ??_vfpfcnvrt:
  3018                           
  3019                           ; 1 bytes @ 0x27
  3020  000127                     	ds	4
  3021  00012B                     vfpfcnvrt@ll:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 8 bytes @ 0x2B
  3025  00012B                     	ds	8
  3026  000133                     vfpfcnvrt@llu:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 8 bytes @ 0x33
  3030  000133                     	ds	8
  3031  00013B                     vfpfcnvrt@c:
  3032                           	opt callstack 0
  3033                           
  3034                           ; 1 bytes @ 0x3B
  3035  00013B                     	ds	1
  3036  00013C                     vfpfcnvrt@done:
  3037                           	opt callstack 0
  3038                           
  3039                           ; 2 bytes @ 0x3C
  3040  00013C                     	ds	2
  3041  00013E                     _vfpfcnvrt$4916:
  3042                           	opt callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x3E
  3045  00013E                     	ds	2
  3046  000140                     ?_vfprintf:
  3047                           	opt callstack 0
  3048  000140                     vfprintf@fp:
  3049                           	opt callstack 0
  3050                           
  3051                           ; 2 bytes @ 0x40
  3052  000140                     	ds	2
  3053  000142                     vfprintf@fmt:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x42
  3057  000142                     	ds	2
  3058  000144                     vfprintf@ap:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x44
  3062  000144                     	ds	2
  3063  000146                     ?_printf:
  3064                           	opt callstack 0
  3065  000146                     ?_sprintf:
  3066                           	opt callstack 0
  3067  000146                     sprintf@s:
  3068                           	opt callstack 0
  3069  000146                     printf@fmt:
  3070                           	opt callstack 0
  3071                           
  3072                           ; 2 bytes @ 0x46
  3073  000146                     	ds	2
  3074  000148                     sprintf@fmt:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 2 bytes @ 0x48
  3078  000148                     	ds	12
  3079  000154                     sprintf@ap:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x54
  3083  000154                     	ds	2
  3084  000156                     sprintf@f:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 6 bytes @ 0x56
  3088  000156                     	ds	6
  3089  00015C                     ??_screenMng:
  3090                           
  3091                           ; 1 bytes @ 0x5C
  3092  00015C                     	ds	2
  3093  00015E                     printf@ap:
  3094                           	opt callstack 0
  3095  00015E                     _screenMng$6102:
  3096                           	opt callstack 0
  3097                           
  3098                           ; 2 bytes @ 0x5E
  3099  00015E                     	ds	2
  3100  000160                     ??_MenuMng:
  3101  000160                     ??_aCaptRstFlt:
  3102  000160                     ??_inspOSMeasure:
  3103  000160                     ??_adcGetCh:
  3104  000160                     ?_aCaptureOffGet:
  3105                           	opt callstack 0
  3106  000160                     rd1RegCompleteHandler@ptr:
  3107                           	opt callstack 0
  3108  000160                     rd2RegCompleteHandler@ptr:
  3109                           	opt callstack 0
  3110  000160                     wr1RegCompleteHandler@ptr:
  3111                           	opt callstack 0
  3112  000160                     wr2RegCompleteHandler@ptr:
  3113                           	opt callstack 0
  3114  000160                     rdBlkRegCompleteHandler@ptr:
  3115                           	opt callstack 0
  3116  000160                     I2C2_CallbackReturnStop@funPtr:
  3117                           	opt callstack 0
  3118  000160                     aCaptureOffSet@offVal:
  3119                           	opt callstack 0
  3120  000160                     aCaptGetResult@outVal:
  3121                           	opt callstack 0
  3122  000160                     I2C2_NackCb@ptr:
  3123                           	opt callstack 0
  3124                           
  3125                           ; 2 bytes @ 0x60
  3126  000160                     	ds	2
  3127  000162                     ??_I2C2_DO_RX_EMPTY:
  3128  000162                     ??_aCaptGetResult:
  3129  000162                     adcGetCh@sel:
  3130                           	opt callstack 0
  3131  000162                     aCaptureOffSet@sel:
  3132                           	opt callstack 0
  3133  000162                     aCaptureOffGet@sel:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 1 bytes @ 0x62
  3137  000162                     	ds	1
  3138  000163                     aCaptureInit@idx:
  3139                           	opt callstack 0
  3140                           
  3141                           ; 2 bytes @ 0x63
  3142  000163                     	ds	1
  3143  000164                     I2C2_MasterOperation@read:
  3144                           	opt callstack 0
  3145  000164                     aCaptRstFlt@sel:
  3146                           	opt callstack 0
  3147  000164                     _MenuMng$4363:
  3148                           	opt callstack 0
  3149  000164                     _inspOSMeasure$6099:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 4 bytes @ 0x64
  3153  000164                     	ds	1
  3154  000165                     I2C2_MasterOperation@returnValue:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 1 bytes @ 0x65
  3158  000165                     	ds	1
  3159  000166                     aCaptGetResult@lclValid:
  3160                           	opt callstack 0
  3161  000166                     _MenuMng$4364:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x66
  3165  000166                     	ds	1
  3166  000167                     aCaptGetResult@sel:
  3167                           	opt callstack 0
  3168                           
  3169                           ; 1 bytes @ 0x67
  3170  000167                     	ds	1
  3171  000168                     inspOSMeasure@tmpUVal:
  3172                           	opt callstack 0
  3173  000168                     _MenuMng$4365:
  3174                           	opt callstack 0
  3175  000168                     aCaptGetResult@lclRaw:
  3176                           	opt callstack 0
  3177                           
  3178                           ; 4 bytes @ 0x68
  3179  000168                     	ds	2
  3180  00016A                     inspOSMeasure@setScale:
  3181                           	opt callstack 0
  3182  00016A                     _MenuMng$4366:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 2 bytes @ 0x6A
  3186  00016A                     	ds	1
  3187  00016B                     inspOSMeasure@tmpVal:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 2 bytes @ 0x6B
  3191  00016B                     	ds	1
  3192  00016C                     ??_MonitorMsgForcedSend:
  3193  00016C                     MenuMng@keyPress:
  3194                           	opt callstack 0
  3195  00016C                     pressureSensorChk@time:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 2 bytes @ 0x6C
  3199  00016C                     	ds	1
  3200  00016D                     MonitorMsgForcedSend@trfError:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 1 bytes @ 0x6D
  3204  00016D                     	ds	1
  3205  00016E                     ??_pressureSensorChk:
  3206  00016E                     MonitorMsgForcedSend@state:
  3207                           	opt callstack 0
  3208                           
  3209                           ; 1 bytes @ 0x6E
  3210  00016E                     	ds	1
  3211  00016F                     MonitorMsgForcedSend@trfAck:
  3212                           	opt callstack 0
  3213                           
  3214                           ; 1 bytes @ 0x6F
  3215  00016F                     	ds	1
  3216  000170                     MonitorMsgForcedSend@vddVal:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 2 bytes @ 0x70
  3220  000170                     	ds	2
  3221  000172                     MonitorMsgSend@state:
  3222                           	opt callstack 0
  3223  000172                     MonitorMsgSendBlock@state:
  3224                           	opt callstack 0
  3225                           
  3226                           ; 1 bytes @ 0x72
  3227  000172                     	ds	1
  3228  000173                     ??_flowChk:
  3229                           
  3230                           ; 1 bytes @ 0x73
  3231  000173                     	ds	2
  3232  000175                     flowChk@flowVal:
  3233                           	opt callstack 0
  3234                           
  3235                           ; 1 bytes @ 0x75
  3236  000175                     	ds	1
  3237  000176                     flowChk@aPValMean:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x76
  3241  000176                     	ds	2
  3242  000178                     flowChk@maxFlowL:
  3243                           	opt callstack 0
  3244                           
  3245                           ; 2 bytes @ 0x78
  3246  000178                     	ds	1
  3247  000179                     pressureSensorChk@offsetCal:
  3248                           	opt callstack 0
  3249                           
  3250                           ; 1 bytes @ 0x79
  3251  000179                     	ds	1
  3252  00017A                     pressureSensorChk@tstamp:
  3253                           	opt callstack 0
  3254  00017A                     flowChk@aPValMin:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 2 bytes @ 0x7A
  3258  00017A                     	ds	2
  3259  00017C                     pressureSensorChk@chkResult:
  3260                           	opt callstack 0
  3261  00017C                     flowChk@tstamp:
  3262                           	opt callstack 0
  3263                           
  3264                           ; 2 bytes @ 0x7C
  3265  00017C                     	ds	1
  3266  00017D                     pressureSensorChk@mPValMax:
  3267                           	opt callstack 0
  3268                           
  3269                           ; 2 bytes @ 0x7D
  3270  00017D                     	ds	1
  3271  00017E                     flowChk@aPValMax:
  3272                           	opt callstack 0
  3273                           
  3274                           ; 2 bytes @ 0x7E
  3275  00017E                     	ds	1
  3276  00017F                     pressureSensorChk@mPValMin:
  3277                           	opt callstack 0
  3278                           
  3279                           ; 2 bytes @ 0x7F
  3280  00017F                     	ds	1
  3281  000180                     flowChk@minFlowL:
  3282                           	opt callstack 0
  3283                           
  3284                           ; 2 bytes @ 0x80
  3285  000180                     	ds	1
  3286  000181                     pressureSensorChk@aPValMax:
  3287                           	opt callstack 0
  3288                           
  3289                           ; 2 bytes @ 0x81
  3290  000181                     	ds	1
  3291  000182                     flowChk@initOk:
  3292                           	opt callstack 0
  3293                           
  3294                           ; 1 bytes @ 0x82
  3295  000182                     	ds	1
  3296  000183                     pressureSensorChk@aPValMin:
  3297                           	opt callstack 0
  3298  000183                     flowChk@aPVal:
  3299                           	opt callstack 0
  3300                           
  3301                           ; 2 bytes @ 0x83
  3302  000183                     	ds	2
  3303  000185                     pressureSensorChk@mPValMean:
  3304                           	opt callstack 0
  3305                           
  3306                           ; 4 bytes @ 0x85
  3307  000185                     	ds	4
  3308  000189                     pressureSensorChk@aPValMean:
  3309                           	opt callstack 0
  3310                           
  3311                           ; 4 bytes @ 0x89
  3312  000189                     	ds	4
  3313  00018D                     pressureSensorChk@mPVal:
  3314                           	opt callstack 0
  3315                           
  3316                           ; 2 bytes @ 0x8D
  3317  00018D                     	ds	2
  3318  00018F                     pressureSensorChk@aPVal:
  3319                           	opt callstack 0
  3320                           
  3321                           ; 2 bytes @ 0x8F
  3322  00018F                     	ds	2
  3323                           
  3324                           	psect	cstackBANK0
  3325  000060                     __pcstackBANK0:
  3326                           	opt callstack 0
  3327  000060                     i2vfpfcnvrt@ll:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 8 bytes @ 0x0
  3331  000060                     	ds	8
  3332  000068                     i2vfpfcnvrt@llu:
  3333                           	opt callstack 0
  3334                           
  3335                           ; 8 bytes @ 0x8
  3336  000068                     	ds	8
  3337  000070                     i2vfpfcnvrt@c:
  3338                           	opt callstack 0
  3339                           
  3340                           ; 1 bytes @ 0x10
  3341  000070                     	ds	1
  3342  000071                     i2vfpfcnvrt@done:
  3343                           	opt callstack 0
  3344                           
  3345                           ; 2 bytes @ 0x11
  3346  000071                     	ds	2
  3347  000073                     i2_vfpfcnvrt$4916:
  3348                           	opt callstack 0
  3349                           
  3350                           ; 2 bytes @ 0x13
  3351  000073                     	ds	2
  3352  000075                     ?i2_vfprintf:
  3353                           	opt callstack 0
  3354  000075                     i2vfprintf@fp:
  3355                           	opt callstack 0
  3356                           
  3357                           ; 2 bytes @ 0x15
  3358  000075                     	ds	2
  3359  000077                     i2vfprintf@fmt:
  3360                           	opt callstack 0
  3361                           
  3362                           ; 2 bytes @ 0x17
  3363  000077                     	ds	2
  3364  000079                     i2vfprintf@ap:
  3365                           	opt callstack 0
  3366                           
  3367                           ; 2 bytes @ 0x19
  3368  000079                     	ds	2
  3369  00007B                     ?i2_printf:
  3370                           	opt callstack 0
  3371  00007B                     i2printf@fmt:
  3372                           	opt callstack 0
  3373                           
  3374                           ; 2 bytes @ 0x1B
  3375  00007B                     	ds	4
  3376  00007F                     i2aCaptGetResult@outVal:
  3377                           	opt callstack 0
  3378  00007F                     adcCaptureIsr@adcData:
  3379                           	opt callstack 0
  3380                           
  3381                           ; 4 bytes @ 0x1F
  3382  00007F                     	ds	2
  3383  000081                     vMeasureIsr@v1:
  3384                           	opt callstack 0
  3385                           
  3386                           ; 2 bytes @ 0x21
  3387  000081                     	ds	2
  3388  000083                     adcCaptureIsr@adcSel:
  3389                           	opt callstack 0
  3390  000083                     vMeasureIsr@v2:
  3391                           	opt callstack 0
  3392                           
  3393                           ; 2 bytes @ 0x23
  3394  000083                     	ds	2
  3395  000085                     vMeasureIsr@instP:
  3396                           	opt callstack 0
  3397                           
  3398                           ; 2 bytes @ 0x25
  3399  000085                     	ds	2
  3400  000087                     ??_INTERRUPT_InterruptManager:
  3401                           
  3402                           ; 1 bytes @ 0x27
  3403  000087                     	ds	4
  3404  00008B                     ??_TMR1_Initialize:
  3405  00008B                     ??_bRateUpdt:
  3406  00008B                     ??_digitalReadD:
  3407  00008B                     ??_digitalReadC:
  3408  00008B                     ?_strlen:
  3409                           	opt callstack 0
  3410  00008B                     ?_isupper:
  3411                           	opt callstack 0
  3412  00008B                     ?_isalpha:
  3413                           	opt callstack 0
  3414  00008B                     ?_isdigit:
  3415                           	opt callstack 0
  3416  00008B                     ?_isspace:
  3417                           	opt callstack 0
  3418  00008B                     ?_islower:
  3419                           	opt callstack 0
  3420  00008B                     ?_TMR1_ReadTimer:
  3421                           	opt callstack 0
  3422  00008B                     ?___lwdiv:
  3423                           	opt callstack 0
  3424  00008B                     ?___tmul:
  3425                           	opt callstack 0
  3426  00008B                     ?___ltdiv:
  3427                           	opt callstack 0
  3428  00008B                     ?___lmul:
  3429                           	opt callstack 0
  3430  00008B                     ?___xxtofl:
  3431                           	opt callstack 0
  3432  00008B                     ?___aodiv:
  3433                           	opt callstack 0
  3434  00008B                     ?___aomod:
  3435                           	opt callstack 0
  3436  00008B                     ADCC_StartConversion@channel:
  3437                           	opt callstack 0
  3438  00008B                     UART1_Write@txData:
  3439                           	opt callstack 0
  3440  00008B                     I2C2_Close@returnValue:
  3441                           	opt callstack 0
  3442  00008B                     I2C2_MasterSendTxData@data:
  3443                           	opt callstack 0
  3444  00008B                     I2C2_MasterSetCounter@counter:
  3445                           	opt callstack 0
  3446  00008B                     send4bits@mode:
  3447                           	opt callstack 0
  3448  00008B                     MonitorErrorSet@flag:
  3449                           	opt callstack 0
  3450  00008B                     MonitorErrorClr@flag:
  3451                           	opt callstack 0
  3452  00008B                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  3453                           	opt callstack 0
  3454  00008B                     UART1_SetFramingErrorHandler@interruptHandler:
  3455                           	opt callstack 0
  3456  00008B                     UART1_SetOverrunErrorHandler@interruptHandler:
  3457                           	opt callstack 0
  3458  00008B                     UART1_SetErrorHandler@interruptHandler:
  3459                           	opt callstack 0
  3460  00008B                     UART1_SetTxInterruptHandler@InterruptHandler:
  3461                           	opt callstack 0
  3462  00008B                     TMR2_SetInterruptHandler@InterruptHandler:
  3463                           	opt callstack 0
  3464  00008B                     I2C2_SetBuffer@buffer:
  3465                           	opt callstack 0
  3466  00008B                     I2C2_SetInterruptHandler@InterruptHandler:
  3467                           	opt callstack 0
  3468  00008B                     I2C2_SetCallback@cb:
  3469                           	opt callstack 0
  3470  00008B                     TMR4_SetInterruptHandler@InterruptHandler:
  3471                           	opt callstack 0
  3472  00008B                     TMR6_SetInterruptHandler@InterruptHandler:
  3473                           	opt callstack 0
  3474  00008B                     printstr@c:
  3475                           	opt callstack 0
  3476  00008B                     ___lwdiv@dividend:
  3477                           	opt callstack 0
  3478  00008B                     isalpha@c:
  3479                           	opt callstack 0
  3480  00008B                     isdigit@c:
  3481                           	opt callstack 0
  3482  00008B                     isspace@c:
  3483                           	opt callstack 0
  3484  00008B                     isupper@c:
  3485                           	opt callstack 0
  3486  00008B                     strlen@s:
  3487                           	opt callstack 0
  3488  00008B                     islower@c:
  3489                           	opt callstack 0
  3490  00008B                     ___tmul@multiplier:
  3491                           	opt callstack 0
  3492  00008B                     ___ltdiv@dividend:
  3493                           	opt callstack 0
  3494  00008B                     ___lmul@multiplier:
  3495                           	opt callstack 0
  3496  00008B                     ___xxtofl@val:
  3497                           	opt callstack 0
  3498  00008B                     ___aodiv@dividend:
  3499                           	opt callstack 0
  3500  00008B                     ___aomod@dividend:
  3501                           	opt callstack 0
  3502                           
  3503                           ; 8 bytes @ 0x2B
  3504  00008B                     	ds	1
  3505  00008C                     putch@byte:
  3506                           	opt callstack 0
  3507  00008C                     send4bits@value:
  3508                           	opt callstack 0
  3509  00008C                     I2C2_MClose@trfRsp:
  3510                           	opt callstack 0
  3511                           
  3512                           ; 1 bytes @ 0x2C
  3513  00008C                     	ds	1
  3514  00008D                     ??_isupper:
  3515  00008D                     ??_isalpha:
  3516  00008D                     ??_isdigit:
  3517  00008D                     ??_isspace:
  3518  00008D                     ??_islower:
  3519  00008D                     ??_TMR1_ReadTimer:
  3520  00008D                     ??_printstr:
  3521  00008D                     I2C2_Open@address:
  3522                           	opt callstack 0
  3523  00008D                     digitalReadD@pin:
  3524                           	opt callstack 0
  3525  00008D                     digitalReadC@pin:
  3526                           	opt callstack 0
  3527  00008D                     I2C2_SetBuffer@bufferSize:
  3528                           	opt callstack 0
  3529  00008D                     I2C2_SetCallback@ptr:
  3530                           	opt callstack 0
  3531  00008D                     send4bits@idx:
  3532                           	opt callstack 0
  3533  00008D                     ___lwdiv@divisor:
  3534                           	opt callstack 0
  3535  00008D                     fputc@c:
  3536                           	opt callstack 0
  3537  00008D                     strlen@a:
  3538                           	opt callstack 0
  3539                           
  3540                           ; 2 bytes @ 0x2D
  3541  00008D                     	ds	1
  3542  00008E                     I2C2_Open@returnValue:
  3543                           	opt callstack 0
  3544  00008E                     keyPeek@n:
  3545                           	opt callstack 0
  3546  00008E                     printstr@idx:
  3547                           	opt callstack 0
  3548  00008E                     bRateUpdt@triggered:
  3549                           	opt callstack 0
  3550  00008E                     ___tmul@multiplicand:
  3551                           	opt callstack 0
  3552  00008E                     ___ltdiv@divisor:
  3553                           	opt callstack 0
  3554                           
  3555                           ; 3 bytes @ 0x2E
  3556  00008E                     	ds	1
  3557  00008F                     ??___xxtofl:
  3558  00008F                     I2C2_SetCallback@idx:
  3559                           	opt callstack 0
  3560  00008F                     keyPeek@n_4072:
  3561                           	opt callstack 0
  3562  00008F                     send@mode:
  3563                           	opt callstack 0
  3564  00008F                     expanderWriteBlock@data:
  3565                           	opt callstack 0
  3566  00008F                     ___lwdiv@counter:
  3567                           	opt callstack 0
  3568  00008F                     TMR1_ReadTimer@readVal:
  3569                           	opt callstack 0
  3570  00008F                     printstrblock@c:
  3571                           	opt callstack 0
  3572  00008F                     fputc@fp:
  3573                           	opt callstack 0
  3574  00008F                     ___lmul@multiplicand:
  3575                           	opt callstack 0
  3576                           
  3577                           ; 4 bytes @ 0x2F
  3578  00008F                     	ds	1
  3579  000090                     ??_keyRead:
  3580  000090                     send@value:
  3581                           	opt callstack 0
  3582  000090                     setBacklight@new_val:
  3583                           	opt callstack 0
  3584  000090                     I2C2_SetDataCompleteCallback@cb:
  3585                           	opt callstack 0
  3586  000090                     I2C2_SetAddressNackCallback@cb:
  3587                           	opt callstack 0
  3588  000090                     I2C2_SetDataNackCallback@cb:
  3589                           	opt callstack 0
  3590  000090                     ___lwdiv@quotient:
  3591                           	opt callstack 0
  3592                           
  3593                           ; 2 bytes @ 0x30
  3594  000090                     	ds	1
  3595  000091                     ??_fputc:
  3596  000091                     ?_toupper:
  3597                           	opt callstack 0
  3598  000091                     TMR1_ReadTimer@readValHigh:
  3599                           	opt callstack 0
  3600  000091                     command@value:
  3601                           	opt callstack 0
  3602  000091                     _isspace$5401:
  3603                           	opt callstack 0
  3604  000091                     toupper@c:
  3605                           	opt callstack 0
  3606  000091                     ___tmul@product:
  3607                           	opt callstack 0
  3608  000091                     ___ltdiv@quotient:
  3609                           	opt callstack 0
  3610                           
  3611                           ; 3 bytes @ 0x31
  3612  000091                     	ds	1
  3613  000092                     TMR1_ReadTimer@readValLow:
  3614                           	opt callstack 0
  3615  000092                     setCursor@row:
  3616                           	opt callstack 0
  3617  000092                     I2C2_SetDataCompleteCallback@ptr:
  3618                           	opt callstack 0
  3619  000092                     I2C2_SetAddressNackCallback@ptr:
  3620                           	opt callstack 0
  3621  000092                     I2C2_SetDataNackCallback@ptr:
  3622                           	opt callstack 0
  3623  000092                     keyRead@tmp:
  3624                           	opt callstack 0
  3625                           
  3626                           ; 2 bytes @ 0x32
  3627  000092                     	ds	1
  3628  000093                     ??_toupper:
  3629  000093                     ?_timeGet:
  3630                           	opt callstack 0
  3631  000093                     ___xxtofl@sign:
  3632                           	opt callstack 0
  3633  000093                     timeElapsedR@prevTime:
  3634                           	opt callstack 0
  3635  000093                     timeElapsed@prevTime:
  3636                           	opt callstack 0
  3637  000093                     ___lmul@product:
  3638                           	opt callstack 0
  3639  000093                     setCursor@row_offsets:
  3640                           	opt callstack 0
  3641  000093                     ___aodiv@divisor:
  3642                           	opt callstack 0
  3643  000093                     ___aomod@divisor:
  3644                           	opt callstack 0
  3645                           
  3646                           ; 8 bytes @ 0x33
  3647  000093                     	ds	1
  3648  000094                     keyRead@ch:
  3649                           	opt callstack 0
  3650  000094                     I2C2_MOpen@trfRsp:
  3651                           	opt callstack 0
  3652  000094                     ___ltdiv@counter:
  3653                           	opt callstack 0
  3654  000094                     ___xxtofl@exp:
  3655                           	opt callstack 0
  3656                           
  3657                           ; 1 bytes @ 0x34
  3658  000094                     	ds	1
  3659  000095                     ?_timeDiff:
  3660                           	opt callstack 0
  3661  000095                     timeDiff@startT:
  3662                           	opt callstack 0
  3663  000095                     timeElapsedR@duration:
  3664                           	opt callstack 0
  3665  000095                     timeElapsed@duration:
  3666                           	opt callstack 0
  3667  000095                     ___xxtofl@arg:
  3668                           	opt callstack 0
  3669                           
  3670                           ; 4 bytes @ 0x35
  3671  000095                     	ds	1
  3672  000096                     fputs@s:
  3673                           	opt callstack 0
  3674                           
  3675                           ; 2 bytes @ 0x36
  3676  000096                     	ds	1
  3677  000097                     ??_timeElapsedR:
  3678  000097                     ?___lldiv:
  3679                           	opt callstack 0
  3680  000097                     timeDiff@endT:
  3681                           	opt callstack 0
  3682  000097                     timeElapsed@intTime:
  3683                           	opt callstack 0
  3684  000097                     _toupper$5482:
  3685                           	opt callstack 0
  3686  000097                     ___lldiv@dividend:
  3687                           	opt callstack 0
  3688                           
  3689                           ; 4 bytes @ 0x37
  3690  000097                     	ds	1
  3691  000098                     fputs@fp:
  3692                           	opt callstack 0
  3693                           
  3694                           ; 2 bytes @ 0x38
  3695  000098                     	ds	1
  3696  000099                     ?___fladd:
  3697                           	opt callstack 0
  3698  000099                     timeDiff@intDur:
  3699                           	opt callstack 0
  3700  000099                     timeElapsedR@intDur:
  3701                           	opt callstack 0
  3702  000099                     timeElapsed@intDur:
  3703                           	opt callstack 0
  3704  000099                     ___flge@ff1:
  3705                           	opt callstack 0
  3706  000099                     ___fladd@b:
  3707                           	opt callstack 0
  3708                           
  3709                           ; 4 bytes @ 0x39
  3710  000099                     	ds	1
  3711  00009A                     fputs@c:
  3712                           	opt callstack 0
  3713                           
  3714                           ; 1 bytes @ 0x3A
  3715  00009A                     	ds	1
  3716  00009B                     ?___wmul:
  3717                           	opt callstack 0
  3718  00009B                     keyReadEC@longPress:
  3719                           	opt callstack 0
  3720  00009B                     setCursor@col:
  3721                           	opt callstack 0
  3722  00009B                     ___aodiv@counter:
  3723                           	opt callstack 0
  3724  00009B                     ___aomod@counter:
  3725                           	opt callstack 0
  3726  00009B                     timeElapsedR@intTime:
  3727                           	opt callstack 0
  3728  00009B                     timeDelayMs@delms:
  3729                           	opt callstack 0
  3730  00009B                     ___wmul@multiplier:
  3731                           	opt callstack 0
  3732  00009B                     fputs@i:
  3733                           	opt callstack 0
  3734  00009B                     ___lldiv@divisor:
  3735                           	opt callstack 0
  3736                           
  3737                           ; 4 bytes @ 0x3B
  3738  00009B                     	ds	1
  3739  00009C                     _keyReadEC$4077:
  3740                           	opt callstack 0
  3741  00009C                     ___aodiv@sign:
  3742                           	opt callstack 0
  3743  00009C                     ___aomod@sign:
  3744                           	opt callstack 0
  3745                           
  3746                           ; 1 bytes @ 0x3C
  3747  00009C                     	ds	1
  3748  00009D                     ?_abs:
  3749                           	opt callstack 0
  3750  00009D                     ?_pad:
  3751                           	opt callstack 0
  3752  00009D                     keyReadEC@ch:
  3753                           	opt callstack 0
  3754  00009D                     timeDelayMs@tstamp:
  3755                           	opt callstack 0
  3756  00009D                     pad@fp:
  3757                           	opt callstack 0
  3758  00009D                     ___wmul@multiplicand:
  3759                           	opt callstack 0
  3760  00009D                     abs@a:
  3761                           	opt callstack 0
  3762  00009D                     ___flge@ff2:
  3763                           	opt callstack 0
  3764  00009D                     ___fladd@a:
  3765                           	opt callstack 0
  3766  00009D                     ___aodiv@quotient:
  3767                           	opt callstack 0
  3768                           
  3769                           ; 8 bytes @ 0x3D
  3770  00009D                     	ds	2
  3771  00009F                     ??_abs:
  3772  00009F                     LcdI2CInit@lcd_cols:
  3773                           	opt callstack 0
  3774  00009F                     pad@buf:
  3775                           	opt callstack 0
  3776  00009F                     ___wmul@product:
  3777                           	opt callstack 0
  3778  00009F                     ___lldiv@quotient:
  3779                           	opt callstack 0
  3780                           
  3781                           ; 4 bytes @ 0x3F
  3782  00009F                     	ds	1
  3783  0000A0                     LcdI2CInit@lcd_rows:
  3784                           	opt callstack 0
  3785                           
  3786                           ; 1 bytes @ 0x40
  3787  0000A0                     	ds	1
  3788  0000A1                     ??___fladd:
  3789  0000A1                     ??___flge:
  3790  0000A1                     ?_atoi:
  3791                           	opt callstack 0
  3792  0000A1                     ?___awdiv:
  3793                           	opt callstack 0
  3794  0000A1                     LcdI2CInit@lcd_Addr:
  3795                           	opt callstack 0
  3796  0000A1                     pad@p:
  3797                           	opt callstack 0
  3798  0000A1                     ___awdiv@dividend:
  3799                           	opt callstack 0
  3800  0000A1                     atoi@s:
  3801                           	opt callstack 0
  3802                           
  3803                           ; 2 bytes @ 0x41
  3804  0000A1                     	ds	1
  3805  0000A2                     
  3806                           ; 1 bytes @ 0x42
  3807  0000A2                     	ds	1
  3808  0000A3                     ??_atoi:
  3809  0000A3                     ??_pad:
  3810  0000A3                     ___lldiv@counter:
  3811                           	opt callstack 0
  3812  0000A3                     ___awdiv@divisor:
  3813                           	opt callstack 0
  3814                           
  3815                           ; 2 bytes @ 0x43
  3816  0000A3                     	ds	1
  3817  0000A4                     ?_vMeasureGet:
  3818                           	opt callstack 0
  3819  0000A4                     pad@i:
  3820                           	opt callstack 0
  3821                           
  3822                           ; 2 bytes @ 0x44
  3823  0000A4                     	ds	1
  3824  0000A5                     ___awdiv@counter:
  3825                           	opt callstack 0
  3826  0000A5                     ___fladd@signs:
  3827                           	opt callstack 0
  3828                           
  3829                           ; 1 bytes @ 0x45
  3830  0000A5                     	ds	1
  3831  0000A6                     ___awdiv@sign:
  3832                           	opt callstack 0
  3833  0000A6                     ___fladd@aexp:
  3834                           	opt callstack 0
  3835  0000A6                     pad@w:
  3836                           	opt callstack 0
  3837  0000A6                     vMeasureGet@rawV:
  3838                           	opt callstack 0
  3839                           
  3840                           ; 4 bytes @ 0x46
  3841  0000A6                     	ds	1
  3842  0000A7                     ___fladd@bexp:
  3843                           	opt callstack 0
  3844  0000A7                     ___awdiv@quotient:
  3845                           	opt callstack 0
  3846                           
  3847                           ; 2 bytes @ 0x47
  3848  0000A7                     	ds	1
  3849  0000A8                     ?_vfpfcnvrt:
  3850                           	opt callstack 0
  3851  0000A8                     ___fladd@grs:
  3852                           	opt callstack 0
  3853  0000A8                     vfpfcnvrt@fp:
  3854                           	opt callstack 0
  3855                           
  3856                           ; 2 bytes @ 0x48
  3857  0000A8                     	ds	1
  3858  0000A9                     ?___fltol:
  3859                           	opt callstack 0
  3860  0000A9                     ___fltol@f1:
  3861                           	opt callstack 0
  3862                           
  3863                           ; 4 bytes @ 0x49
  3864  0000A9                     	ds	1
  3865  0000AA                     vfpfcnvrt@fmt:
  3866                           	opt callstack 0
  3867                           
  3868                           ; 1 bytes @ 0x4A
  3869  0000AA                     	ds	1
  3870  0000AB                     vfpfcnvrt@ap:
  3871                           	opt callstack 0
  3872                           
  3873                           ; 2 bytes @ 0x4B
  3874  0000AB                     	ds	2
  3875  0000AD                     ___fltol@sign1:
  3876                           	opt callstack 0
  3877  0000AD                     vfprintf@cfmt:
  3878                           	opt callstack 0
  3879                           
  3880                           ; 2 bytes @ 0x4D
  3881  0000AD                     	ds	1
  3882  0000AE                     ___fltol@exp1:
  3883                           	opt callstack 0
  3884                           
  3885                           ; 1 bytes @ 0x4E
  3886  0000AE                     	ds	1
  3887  0000AF                     
  3888                           ; 1 bytes @ 0x4F
  3889                           
  3890                           	psect	cstackCOMRAM
  3891  000001                     __pcstackCOMRAM:
  3892                           	opt callstack 0
  3893  000001                     ??_I2C2_DO_RX:
  3894  000001                     ??_lcdIrqHandler:
  3895  000001                     ?_isqrt:
  3896                           	opt callstack 0
  3897  000001                     ?_ADCC_GetFilterValue:
  3898                           	opt callstack 0
  3899  000001                     ?i2___wmul:
  3900                           	opt callstack 0
  3901  000001                     ?i2_isalpha:
  3902                           	opt callstack 0
  3903  000001                     ?i2_isdigit:
  3904                           	opt callstack 0
  3905  000001                     ?i2_isspace:
  3906                           	opt callstack 0
  3907  000001                     ?i2_isupper:
  3908                           	opt callstack 0
  3909  000001                     ?i2_strlen:
  3910                           	opt callstack 0
  3911  000001                     ?i2_islower:
  3912                           	opt callstack 0
  3913  000001                     ?i2___lmul:
  3914                           	opt callstack 0
  3915  000001                     ?i2___aodiv:
  3916                           	opt callstack 0
  3917  000001                     ?i2___aomod:
  3918                           	opt callstack 0
  3919  000001                     i2ADCC_StartConversion@channel:
  3920                           	opt callstack 0
  3921  000001                     i2UART1_Write@txData:
  3922                           	opt callstack 0
  3923  000001                     i2I2C2_MasterSendTxData@data:
  3924                           	opt callstack 0
  3925  000001                     i2I2C2_MasterSetCounter@counter:
  3926                           	opt callstack 0
  3927  000001                     isqrt@x:
  3928                           	opt callstack 0
  3929  000001                     i2I2C2_SetBuffer@buffer:
  3930                           	opt callstack 0
  3931  000001                     i2I2C2_SetCallback@cb:
  3932                           	opt callstack 0
  3933  000001                     i2___wmul@multiplier:
  3934                           	opt callstack 0
  3935  000001                     i2isalpha@c:
  3936                           	opt callstack 0
  3937  000001                     i2isdigit@c:
  3938                           	opt callstack 0
  3939  000001                     i2isspace@c:
  3940                           	opt callstack 0
  3941  000001                     i2isupper@c:
  3942                           	opt callstack 0
  3943  000001                     i2strlen@s:
  3944                           	opt callstack 0
  3945  000001                     i2islower@c:
  3946                           	opt callstack 0
  3947  000001                     i2___lmul@multiplier:
  3948                           	opt callstack 0
  3949  000001                     i2___aodiv@dividend:
  3950                           	opt callstack 0
  3951  000001                     i2___aomod@dividend:
  3952                           	opt callstack 0
  3953                           
  3954                           ; 8 bytes @ 0x0
  3955  000001                     	ds	1
  3956  000002                     lcdIrqHandler@byte:
  3957                           	opt callstack 0
  3958  000002                     i2putch@byte:
  3959                           	opt callstack 0
  3960                           
  3961                           ; 1 bytes @ 0x1
  3962  000002                     	ds	1
  3963  000003                     ??_isqrt:
  3964  000003                     ??_ADCC_GetFilterValue:
  3965  000003                     ??i2_isalpha:
  3966  000003                     ??i2_isdigit:
  3967  000003                     ??i2_isspace:
  3968  000003                     ??i2_isupper:
  3969  000003                     ??i2_islower:
  3970  000003                     I2C2_DO_RX@retFsmState:
  3971                           	opt callstack 0
  3972  000003                     i2I2C2_SetBuffer@bufferSize:
  3973                           	opt callstack 0
  3974  000003                     i2I2C2_SetCallback@ptr:
  3975                           	opt callstack 0
  3976  000003                     i2___wmul@multiplicand:
  3977                           	opt callstack 0
  3978  000003                     i2fputc@c:
  3979                           	opt callstack 0
  3980  000003                     i2strlen@a:
  3981                           	opt callstack 0
  3982                           
  3983                           ; 2 bytes @ 0x2
  3984  000003                     	ds	2
  3985  000005                     i2I2C2_SetCallback@idx:
  3986                           	opt callstack 0
  3987  000005                     isqrt@op:
  3988                           	opt callstack 0
  3989  000005                     i2rd1RegCompleteHandler@ptr:
  3990                           	opt callstack 0
  3991  000005                     i2rd2RegCompleteHandler@ptr:
  3992                           	opt callstack 0
  3993  000005                     i2wr1RegCompleteHandler@ptr:
  3994                           	opt callstack 0
  3995  000005                     i2wr2RegCompleteHandler@ptr:
  3996                           	opt callstack 0
  3997  000005                     i2rdBlkRegCompleteHandler@ptr:
  3998                           	opt callstack 0
  3999  000005                     i2I2C2_CallbackReturnStop@funPtr:
  4000                           	opt callstack 0
  4001  000005                     i2___wmul@product:
  4002                           	opt callstack 0
  4003  000005                     i2fputc@fp:
  4004                           	opt callstack 0
  4005  000005                     i2___lmul@multiplicand:
  4006                           	opt callstack 0
  4007                           
  4008                           ; 4 bytes @ 0x4
  4009  000005                     	ds	1
  4010  000006                     i2I2C2_SetDataCompleteCallback@cb:
  4011                           	opt callstack 0
  4012                           
  4013                           ; 2 bytes @ 0x5
  4014  000006                     	ds	1
  4015  000007                     ??_I2C2_DO_TX:
  4016  000007                     ??_I2C2_DO_TX_EMPTY:
  4017  000007                     ??_I2C2_DO_ADDRESS_NACK:
  4018  000007                     ??_I2C2_DO_BUS_COLLISION:
  4019  000007                     ??i2_I2C2_DO_RX_EMPTY:
  4020  000007                     ??i2_fputc:
  4021  000007                     ?i2_toupper:
  4022                           	opt callstack 0
  4023  000007                     i2_isspace$5401:
  4024                           	opt callstack 0
  4025  000007                     isqrt@res:
  4026                           	opt callstack 0
  4027  000007                     i2toupper@c:
  4028                           	opt callstack 0
  4029                           
  4030                           ; 2 bytes @ 0x6
  4031  000007                     	ds	1
  4032  000008                     ?i2_atoi:
  4033                           	opt callstack 0
  4034  000008                     i2I2C2_SetDataCompleteCallback@ptr:
  4035                           	opt callstack 0
  4036  000008                     i2atoi@s:
  4037                           	opt callstack 0
  4038                           
  4039                           ; 2 bytes @ 0x7
  4040  000008                     	ds	1
  4041  000009                     ??i2_toupper:
  4042  000009                     I2C2_DO_TX@dataTx:
  4043                           	opt callstack 0
  4044  000009                     isqrt@one:
  4045                           	opt callstack 0
  4046  000009                     i2___lmul@product:
  4047                           	opt callstack 0
  4048  000009                     i2___aodiv@divisor:
  4049                           	opt callstack 0
  4050  000009                     i2___aomod@divisor:
  4051                           	opt callstack 0
  4052                           
  4053                           ; 8 bytes @ 0x8
  4054  000009                     	ds	1
  4055  00000A                     ??i2_atoi:
  4056  00000A                     I2C2_DO_TX@retFsmState:
  4057                           	opt callstack 0
  4058                           
  4059                           ; 1 bytes @ 0x9
  4060  00000A                     	ds	1
  4061  00000B                     _I2C2_DO_TX$2655:
  4062                           	opt callstack 0
  4063                           
  4064                           ; 2 bytes @ 0xA
  4065  00000B                     	ds	1
  4066  00000C                     i2fputs@s:
  4067                           	opt callstack 0
  4068                           
  4069                           ; 2 bytes @ 0xB
  4070  00000C                     	ds	1
  4071  00000D                     ??_I2C2_MasterFsm:
  4072  00000D                     i2_toupper$5482:
  4073                           	opt callstack 0
  4074                           
  4075                           ; 2 bytes @ 0xC
  4076  00000D                     	ds	1
  4077  00000E                     i2atoi@neg:
  4078                           	opt callstack 0
  4079  00000E                     i2fputs@fp:
  4080                           	opt callstack 0
  4081                           
  4082                           ; 2 bytes @ 0xD
  4083  00000E                     	ds	1
  4084  00000F                     
  4085                           ; 1 bytes @ 0xE
  4086  00000F                     	ds	1
  4087  000010                     i2fputs@c:
  4088                           	opt callstack 0
  4089  000010                     i2_atoi$5374:
  4090                           	opt callstack 0
  4091                           
  4092                           ; 2 bytes @ 0xF
  4093  000010                     	ds	1
  4094  000011                     i2___aodiv@counter:
  4095                           	opt callstack 0
  4096  000011                     i2___aomod@counter:
  4097                           	opt callstack 0
  4098  000011                     i2fputs@i:
  4099                           	opt callstack 0
  4100                           
  4101                           ; 2 bytes @ 0x10
  4102  000011                     	ds	1
  4103  000012                     i2___aodiv@sign:
  4104                           	opt callstack 0
  4105  000012                     i2___aomod@sign:
  4106                           	opt callstack 0
  4107  000012                     i2_atoi$5376:
  4108                           	opt callstack 0
  4109                           
  4110                           ; 2 bytes @ 0x11
  4111  000012                     	ds	1
  4112  000013                     ?i2_pad:
  4113                           	opt callstack 0
  4114  000013                     ?i2_abs:
  4115                           	opt callstack 0
  4116  000013                     i2pad@fp:
  4117                           	opt callstack 0
  4118  000013                     i2abs@a:
  4119                           	opt callstack 0
  4120  000013                     i2___aodiv@quotient:
  4121                           	opt callstack 0
  4122                           
  4123                           ; 8 bytes @ 0x12
  4124  000013                     	ds	1
  4125  000014                     i2_atoi$5375:
  4126                           	opt callstack 0
  4127                           
  4128                           ; 1 bytes @ 0x13
  4129  000014                     	ds	1
  4130  000015                     ??i2_abs:
  4131  000015                     i2pad@buf:
  4132                           	opt callstack 0
  4133  000015                     i2atoi@n:
  4134                           	opt callstack 0
  4135                           
  4136                           ; 2 bytes @ 0x14
  4137  000015                     	ds	2
  4138  000017                     i2pad@p:
  4139                           	opt callstack 0
  4140                           
  4141                           ; 2 bytes @ 0x16
  4142  000017                     	ds	2
  4143  000019                     ??i2_pad:
  4144                           
  4145                           ; 1 bytes @ 0x18
  4146  000019                     	ds	1
  4147  00001A                     i2pad@i:
  4148                           	opt callstack 0
  4149                           
  4150                           ; 2 bytes @ 0x19
  4151  00001A                     	ds	2
  4152  00001C                     i2pad@w:
  4153                           	opt callstack 0
  4154                           
  4155                           ; 2 bytes @ 0x1B
  4156  00001C                     	ds	2
  4157  00001E                     ?i2_dtoa:
  4158                           	opt callstack 0
  4159  00001E                     ?i2_xtoa:
  4160                           	opt callstack 0
  4161  00001E                     i2dtoa@fp:
  4162                           	opt callstack 0
  4163  00001E                     i2xtoa@fp:
  4164                           	opt callstack 0
  4165                           
  4166                           ; 2 bytes @ 0x1D
  4167  00001E                     	ds	2
  4168  000020                     i2dtoa@d:
  4169                           	opt callstack 0
  4170  000020                     i2xtoa@d:
  4171                           	opt callstack 0
  4172                           
  4173                           ; 8 bytes @ 0x1F
  4174  000020                     	ds	8
  4175  000028                     ??i2_dtoa:
  4176  000028                     i2xtoa@x:
  4177                           	opt callstack 0
  4178                           
  4179                           ; 1 bytes @ 0x27
  4180  000028                     	ds	1
  4181  000029                     ??i2_xtoa:
  4182                           
  4183                           ; 1 bytes @ 0x28
  4184  000029                     	ds	7
  4185  000030                     i2_dtoa$4890:
  4186                           	opt callstack 0
  4187                           
  4188                           ; 2 bytes @ 0x2F
  4189  000030                     	ds	1
  4190  000031                     i2_xtoa$4901:
  4191                           	opt callstack 0
  4192                           
  4193                           ; 2 bytes @ 0x30
  4194  000031                     	ds	1
  4195  000032                     i2dtoa@p:
  4196                           	opt callstack 0
  4197                           
  4198                           ; 2 bytes @ 0x31
  4199  000032                     	ds	1
  4200  000033                     i2_xtoa$4902:
  4201                           	opt callstack 0
  4202                           
  4203                           ; 2 bytes @ 0x32
  4204  000033                     	ds	1
  4205  000034                     i2dtoa@w:
  4206                           	opt callstack 0
  4207                           
  4208                           ; 2 bytes @ 0x33
  4209  000034                     	ds	1
  4210  000035                     i2xtoa@p:
  4211                           	opt callstack 0
  4212                           
  4213                           ; 2 bytes @ 0x34
  4214  000035                     	ds	1
  4215  000036                     i2dtoa@s:
  4216                           	opt callstack 0
  4217                           
  4218                           ; 2 bytes @ 0x35
  4219  000036                     	ds	1
  4220  000037                     i2xtoa@w:
  4221                           	opt callstack 0
  4222                           
  4223                           ; 2 bytes @ 0x36
  4224  000037                     	ds	1
  4225  000038                     i2dtoa@n:
  4226                           	opt callstack 0
  4227                           
  4228                           ; 8 bytes @ 0x37
  4229  000038                     	ds	1
  4230  000039                     i2xtoa@n:
  4231                           	opt callstack 0
  4232                           
  4233                           ; 8 bytes @ 0x38
  4234  000039                     	ds	7
  4235  000040                     i2dtoa@i:
  4236                           	opt callstack 0
  4237                           
  4238                           ; 2 bytes @ 0x3F
  4239  000040                     	ds	1
  4240  000041                     i2xtoa@i:
  4241                           	opt callstack 0
  4242                           
  4243                           ; 2 bytes @ 0x40
  4244  000041                     	ds	2
  4245  000043                     i2xtoa@c:
  4246                           	opt callstack 0
  4247                           
  4248                           ; 2 bytes @ 0x42
  4249  000043                     	ds	2
  4250  000045                     ?i2_vfpfcnvrt:
  4251                           	opt callstack 0
  4252  000045                     i2vfpfcnvrt@fp:
  4253                           	opt callstack 0
  4254                           
  4255                           ; 2 bytes @ 0x44
  4256  000045                     	ds	2
  4257  000047                     i2vfpfcnvrt@fmt:
  4258                           	opt callstack 0
  4259                           
  4260                           ; 1 bytes @ 0x46
  4261  000047                     	ds	1
  4262  000048                     i2vfpfcnvrt@ap:
  4263                           	opt callstack 0
  4264                           
  4265                           ; 2 bytes @ 0x47
  4266  000048                     	ds	2
  4267  00004A                     ??i2_vfpfcnvrt:
  4268                           
  4269                           ; 1 bytes @ 0x49
  4270  00004A                     	ds	4
  4271  00004E                     i2vfprintf@cfmt:
  4272                           	opt callstack 0
  4273                           
  4274                           ; 2 bytes @ 0x4D
  4275  00004E                     	ds	2
  4276  000050                     
  4277                           ; 1 bytes @ 0x4F
  4278  000050                     	ds	2
  4279  000052                     i2printf@ap:
  4280                           	opt callstack 0
  4281                           
  4282                           ; 2 bytes @ 0x51
  4283  000052                     	ds	2
  4284  000054                     ??i2_adcGetCh:
  4285  000054                     ??i2_aCaptGetResult:
  4286                           
  4287                           ; 1 bytes @ 0x53
  4288  000054                     	ds	2
  4289  000056                     i2adcGetCh@sel:
  4290                           	opt callstack 0
  4291                           
  4292                           ; 1 bytes @ 0x55
  4293  000056                     	ds	1
  4294  000057                     ??_adcCaptureIsr:
  4295                           
  4296                           ; 1 bytes @ 0x56
  4297  000057                     	ds	1
  4298  000058                     i2aCaptGetResult@lclValid:
  4299                           	opt callstack 0
  4300                           
  4301                           ; 1 bytes @ 0x57
  4302  000058                     	ds	1
  4303  000059                     i2aCaptGetResult@sel:
  4304                           	opt callstack 0
  4305                           
  4306                           ; 1 bytes @ 0x58
  4307  000059                     	ds	1
  4308  00005A                     i2aCaptGetResult@lclRaw:
  4309                           	opt callstack 0
  4310                           
  4311                           ; 4 bytes @ 0x59
  4312  00005A                     	ds	4
  4313  00005E                     ??_vMeasureIsr:
  4314                           
  4315                           ; 1 bytes @ 0x5D
  4316  00005E                     	ds	1
  4317  00005F                     
  4318                           ; 1 bytes @ 0x5E
  4319  00005F                     	ds	1
  4320  000060                     
  4321                           ; 1 bytes @ 0x5F
  4322 ;;
  4323 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  4324 ;;
  4325 ;; *************** function _main *****************
  4326 ;; Defined at:
  4327 ;;		line 201 in file "main.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  keyTmp          1   38[BANK3 ] unsigned char 
  4332 ;;  tmpVal          2   47[BANK3 ] short 
  4333 ;;  pInspOSScale    2   45[BANK3 ] short 
  4334 ;;  tmpVal2         2   43[BANK3 ] short 
  4335 ;;  tmpUVal         2   39[BANK3 ] unsigned short 
  4336 ;;  printTime       2   36[BANK3 ] unsigned short 
  4337 ;;  vInspOSScale    2   34[BANK3 ] short 
  4338 ;;  tstScreen       1   30[BANK3 ] _Bool 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 3F/1
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0      23       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0      34       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;Total ram usage:       34 bytes
  4353 ;; Hardware stack levels required when called:   34
  4354 ;; This function calls:
  4355 ;;		_CtrlPowerOff
  4356 ;;		_I2C2_MuxInit
  4357 ;;		_MenuMng
  4358 ;;		_MonitorErrorClr
  4359 ;;		_MonitorErrorSet
  4360 ;;		_MonitorInit
  4361 ;;		_MonitorMsgBusy
  4362 ;;		_MonitorMsgSend
  4363 ;;		_MonitorMsgSendBlock
  4364 ;;		_SYSTEM_Initialize
  4365 ;;		_SelfTest
  4366 ;;		_TMR4_SetInterruptHandler
  4367 ;;		_TMR4_Start
  4368 ;;		___awdiv
  4369 ;;		___fladd
  4370 ;;		___fltol
  4371 ;;		___ltdiv
  4372 ;;		___lwdiv
  4373 ;;		___tmul
  4374 ;;		___wmul
  4375 ;;		___xxtofl
  4376 ;;		_aCaptGetResult
  4377 ;;		_aCaptRstFlt
  4378 ;;		_aCaptureInit
  4379 ;;		_bRateGet
  4380 ;;		_bRateInit
  4381 ;;		_bRateUpdt
  4382 ;;		_inspOSMeasure
  4383 ;;		_keyPeek
  4384 ;;		_keyRead
  4385 ;;		_keyReadEC
  4386 ;;		_keyReadInit
  4387 ;;		_printf
  4388 ;;		_printstrblock
  4389 ;;		_screenInit
  4390 ;;		_screenMng
  4391 ;;		_setBacklight
  4392 ;;		_setCursor
  4393 ;;		_sprintf
  4394 ;;		_timeDelayMs
  4395 ;;		_timeDiff
  4396 ;;		_timeElapsed
  4397 ;;		_timeElapsedR
  4398 ;;		_timeGet
  4399 ;;		_timeInit
  4400 ;;		_vMeasureGet
  4401 ;;		_vMeasureInit
  4402 ;;		_vMeasureRst
  4403 ;; This function is called by:
  4404 ;;		Startup code after reset
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text0
  4409  00001E                     __ptext0:
  4410                           	opt callstack 0
  4411  00001E                     _main:
  4412                           	opt callstack 0
  4413                           
  4414                           ;main.c: 202:     uint16_t tmpUVal;;main.c: 203:     int16_t tmpVal, tmpVal2;;main.c: 20
      +                          4:     int16_t pInspOSScale, vInspOSScale;;main.c: 206:     time_t printTime;;main.c: 20
      +                          8:     _Bool tstScreen = 1;
  4415                           
  4416                           ;incstack = 0
  4417 ;; hardware stack exceeded
  4418  00001E  0E01               	movlw	1
  4419  000020  0103               	movlb	3	; () banked
  4420  000022  6FAE               	movwf	main@tstScreen& (0+255),b
  4421                           
  4422                           ; BSR set to: 3
  4423                           ;main.c: 212:     SYSTEM_Initialize();
  4424  000024  EC83  F04B         	call	_SYSTEM_Initialize	;wreg free
  4425                           
  4426                           ; BSR set to: 61
  4427                           ;main.c: 214:     PIE1bits.ADIE = 0;
  4428  000028  0139               	movlb	57	; () banked
  4429  00002A  9591               	bcf	145,2,b	;volatile
  4430                           
  4431                           ; BSR set to: 57
  4432                           ;main.c: 215:     PIE1bits.ADTIE = 0;
  4433  00002C  9791               	bcf	145,3,b	;volatile
  4434                           
  4435                           ; BSR set to: 57
  4436                           ;main.c: 217:     TMR4_SetInterruptHandler(SV2DelayOpen);
  4437  00002E  0E38               	movlw	low _SV2DelayOpen
  4438  000030  0100               	movlb	0	; () banked
  4439  000032  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  4440  000034  0EA3               	movlw	high _SV2DelayOpen
  4441  000036  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4442  000038  EC80  F051         	call	_TMR4_SetInterruptHandler	;wreg free
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 222:     (INTCON0bits.GIE = 1);
  4446  00003C  8ED2               	bsf	210,7,c	;volatile
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;main.c: 227:     aCaptureInit();
  4450  00003E  ECAE  F048         	call	_aCaptureInit	;wreg free
  4451                           
  4452                           ; BSR set to: 57
  4453                           ;main.c: 228:     timeInit();
  4454  000042  EC02  F052         	call	_timeInit	;wreg free
  4455                           
  4456                           ; BSR set to: 57
  4457                           ;main.c: 231:     timeDelayMs(50);
  4458  000046  0E00               	movlw	0
  4459  000048  0100               	movlb	0	; () banked
  4460  00004A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4461  00004C  0E32               	movlw	50
  4462  00004E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4463  000050  EC0A  F04C         	call	_timeDelayMs	;wreg free
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;main.c: 233:     keyReadInit();
  4467  000054  ECC9  F050         	call	_keyReadInit	;wreg free
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;main.c: 234:     screenInit();
  4471  000058  ECD1  F046         	call	_screenInit	;wreg free
  4472                           
  4473                           ;main.c: 235:     I2C2_MuxInit();
  4474  00005C  ECD6  F04F         	call	_I2C2_MuxInit	;wreg free
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;main.c: 236:     MonitorInit();
  4478  000060  EC7C  F052         	call	_MonitorInit	;wreg free
  4479                           
  4480                           ; BSR set to: 1
  4481                           ;main.c: 237:     vMeasureInit();
  4482  000064  ECA7  F04E         	call	_vMeasureInit	;wreg free
  4483  000068  D002               	goto	l20244
  4484  00006A                     l20242:
  4485                           
  4486                           ; BSR set to: 3
  4487                           ;main.c: 242:             tstScreen = 0;
  4488  00006A  0E00               	movlw	0
  4489  00006C  6FAE               	movwf	main@tstScreen& (0+255),b
  4490  00006E                     l20244:
  4491                           
  4492                           ;main.c: 241:         while (!SelfTest(tstScreen))
  4493  00006E  0103               	movlb	3	; () banked
  4494  000070  51AE               	movf	main@tstScreen& (0+255),w,b
  4495  000072  ECE9  F01B         	call	_SelfTest
  4496  000076  0900               	iorlw	0
  4497  000078  B4D8               	btfsc	status,2,c
  4498  00007A  D7F7               	goto	l20242
  4499                           
  4500                           ; BSR set to: 3
  4501                           ;main.c: 244:         tstScreen = 0;
  4502  00007C  0E00               	movlw	0
  4503  00007E  6FAE               	movwf	main@tstScreen& (0+255),b
  4504                           
  4505                           ; BSR set to: 3
  4506                           ;main.c: 245:         setCursor(0, 0);
  4507  000080  0E00               	movlw	0
  4508  000082  0100               	movlb	0	; () banked
  4509  000084  6F92               	movwf	setCursor@row& (0+255),b
  4510  000086  0E00               	movlw	0
  4511  000088  ECD4  F04A         	call	_setCursor
  4512                           
  4513                           ;main.c: 246:         printstrblock("PRESS + TO REPEAT ");
  4514  00008C  0E68               	movlw	low STR_5
  4515  00008E  0100               	movlb	0	; () banked
  4516  000090  6F8F               	movwf	printstrblock@c& (0+255),b
  4517  000092  0EFD               	movlw	high STR_5
  4518  000094  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4519  000096  ECCD  F04E         	call	_printstrblock	;wreg free
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;main.c: 247:         setCursor(0, 1);
  4523  00009A  0E01               	movlw	1
  4524  00009C  6F92               	movwf	setCursor@row& (0+255),b
  4525  00009E  0E00               	movlw	0
  4526  0000A0  ECD4  F04A         	call	_setCursor
  4527                           
  4528                           ;main.c: 248:         printstrblock("PRESS - TO EXIT ");
  4529  0000A4  0EF4               	movlw	low STR_6
  4530  0000A6  0100               	movlb	0	; () banked
  4531  0000A8  6F8F               	movwf	printstrblock@c& (0+255),b
  4532  0000AA  0EFE               	movlw	high STR_6
  4533  0000AC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4534  0000AE  ECCD  F04E         	call	_printstrblock	;wreg free
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;main.c: 250:         keyTmp = keyRead();
  4538  0000B2  EC6B  F049         	call	_keyRead	;wreg free
  4539  0000B6  0103               	movlb	3	; () banked
  4540  0000B8  6FB6               	movwf	main@keyTmp& (0+255),b
  4541                           
  4542                           ;main.c: 251:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4543  0000BA  D007               	goto	l20262
  4544  0000BC                     l20258:
  4545                           
  4546                           ; BSR set to: 3
  4547                           ;main.c: 252:             keyTmp = keyRead();
  4548  0000BC  EC6B  F049         	call	_keyRead	;wreg free
  4549  0000C0  0103               	movlb	3	; () banked
  4550  0000C2  6FB6               	movwf	main@keyTmp& (0+255),b
  4551                           
  4552                           ; BSR set to: 3
  4553                           ;main.c: 253:             MonitorMsgSend(MONSTATE_STOP);
  4554  0000C4  0E00               	movlw	0
  4555  0000C6  EC7E  F04E         	call	_MonitorMsgSend
  4556  0000CA                     l20262:
  4557                           
  4558                           ;main.c: 251:         while ((keyTmp != 5)&&(keyTmp != 3)) {
  4559  0000CA  0E05               	movlw	5
  4560  0000CC  0103               	movlb	3	; () banked
  4561  0000CE  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4562  0000D0  B4D8               	btfsc	status,2,c
  4563  0000D2  D004               	goto	u21520
  4564                           
  4565                           ; BSR set to: 3
  4566  0000D4  0E03               	movlw	3
  4567  0000D6  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4568  0000D8  A4D8               	btfss	status,2,c
  4569  0000DA  D7F0               	goto	l20258
  4570  0000DC                     u21520:
  4571                           
  4572                           ; BSR set to: 3
  4573                           ;main.c: 255:         if (keyTmp == 5) {
  4574  0000DC  0E05               	movlw	5
  4575  0000DE  19B6               	xorwf	main@keyTmp& (0+255),w,b
  4576  0000E0  A4D8               	btfss	status,2,c
  4577  0000E2  D7C5               	goto	l20244
  4578                           
  4579                           ; BSR set to: 3
  4580                           ;main.c: 261:     setCursor(0, 1);
  4581  0000E4  0E01               	movlw	1
  4582  0000E6  0100               	movlb	0	; () banked
  4583  0000E8  6F92               	movwf	setCursor@row& (0+255),b
  4584  0000EA  0E00               	movlw	0
  4585  0000EC  ECD4  F04A         	call	_setCursor
  4586                           
  4587                           ;main.c: 262:     printstrblock("                ");
  4588  0000F0  0EE3               	movlw	low STR_2
  4589  0000F2  0100               	movlb	0	; () banked
  4590  0000F4  6F8F               	movwf	printstrblock@c& (0+255),b
  4591  0000F6  0EFE               	movlw	high STR_2
  4592  0000F8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4593  0000FA  ECCD  F04E         	call	_printstrblock	;wreg free
  4594  0000FE                     l20274:
  4595                           
  4596                           ;main.c: 265:         setCursor(0, 1);
  4597  0000FE  0E01               	movlw	1
  4598  000100  0100               	movlb	0	; () banked
  4599  000102  6F92               	movwf	setCursor@row& (0+255),b
  4600  000104  0E00               	movlw	0
  4601  000106  ECD4  F04A         	call	_setCursor
  4602                           
  4603                           ;main.c: 266:         printstrblock("                ");
  4604  00010A  0EE3               	movlw	low STR_2
  4605  00010C  0100               	movlb	0	; () banked
  4606  00010E  6F8F               	movwf	printstrblock@c& (0+255),b
  4607  000110  0EFE               	movlw	high STR_2
  4608  000112  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4609  000114  ECCD  F04E         	call	_printstrblock	;wreg free
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;main.c: 267:         timeDelayMs(10);
  4613  000118  0E00               	movlw	0
  4614  00011A  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4615  00011C  0E0A               	movlw	10
  4616  00011E  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4617  000120  EC0A  F04C         	call	_timeDelayMs	;wreg free
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;main.c: 268:         setBacklight(1);
  4621  000124  0E01               	movlw	1
  4622  000126  EC7B  F050         	call	_setBacklight
  4623                           
  4624                           ;main.c: 269:         timeDelayMs(10);
  4625  00012A  0E00               	movlw	0
  4626  00012C  0100               	movlb	0	; () banked
  4627  00012E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4628  000130  0E0A               	movlw	10
  4629  000132  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4630  000134  EC0A  F04C         	call	_timeDelayMs	;wreg free
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;main.c: 272:         lcdPrintTR = 1;
  4634  000138  0E01               	movlw	1
  4635  00013A  0101               	movlb	1	; () banked
  4636  00013C  6FCE               	movwf	_lcdPrintTR& (0+255),b
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;main.c: 273:         lcdPrintBR = 1;
  4640  00013E  0E01               	movlw	1
  4641  000140  6FCD               	movwf	_lcdPrintBR& (0+255),b
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;main.c: 274:         LATDbits.LATD6 = 1;
  4645  000142  8CBD               	bsf	189,6,c	;volatile
  4646                           
  4647                           ;main.c: 275:         while (ctrlStatus != CTRL_RUN) {
  4648  000144  D047               	goto	l20324
  4649  000146                     l20288:
  4650                           
  4651                           ; BSR set to: 1
  4652                           ;main.c: 277:             MenuMng();
  4653  000146  EC6B  F018         	call	_MenuMng	;wreg free
  4654                           
  4655                           ;main.c: 278:             screenMng();
  4656  00014A  ECD8  F014         	call	_screenMng	;wreg free
  4657                           
  4658                           ;main.c: 280:             if (ctrlStatus == CTRL_SLEEP) {
  4659  00014E  0E03               	movlw	3
  4660  000150  0101               	movlb	1	; () banked
  4661  000152  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  4662  000154  A4D8               	btfss	status,2,c
  4663  000156  D025               	goto	l20310
  4664                           
  4665                           ; BSR set to: 1
  4666                           ;main.c: 281:                 CtrlPowerOff();
  4667  000158  ECA8  F040         	call	_CtrlPowerOff	;wreg free
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;main.c: 282:                 setCursor(0, 1);
  4671  00015C  0E01               	movlw	1
  4672  00015E  0100               	movlb	0	; () banked
  4673  000160  6F92               	movwf	setCursor@row& (0+255),b
  4674  000162  0E00               	movlw	0
  4675  000164  ECD4  F04A         	call	_setCursor
  4676                           
  4677                           ;main.c: 283:                 printstrblock("                ");
  4678  000168  0EE3               	movlw	low STR_2
  4679  00016A  0100               	movlb	0	; () banked
  4680  00016C  6F8F               	movwf	printstrblock@c& (0+255),b
  4681  00016E  0EFE               	movlw	high STR_2
  4682  000170  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  4683  000172  ECCD  F04E         	call	_printstrblock	;wreg free
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;main.c: 284:                 timeDelayMs(10);
  4687  000176  0E00               	movlw	0
  4688  000178  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4689  00017A  0E0A               	movlw	10
  4690  00017C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4691  00017E  EC0A  F04C         	call	_timeDelayMs	;wreg free
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;main.c: 285:                 setBacklight(1);
  4695  000182  0E01               	movlw	1
  4696  000184  EC7B  F050         	call	_setBacklight
  4697                           
  4698                           ;main.c: 286:                 timeDelayMs(10);
  4699  000188  0E00               	movlw	0
  4700  00018A  0100               	movlb	0	; () banked
  4701  00018C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  4702  00018E  0E0A               	movlw	10
  4703  000190  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  4704  000192  EC0A  F04C         	call	_timeDelayMs	;wreg free
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;main.c: 288:                 lcdPrintTR = 1;
  4708  000196  0E01               	movlw	1
  4709  000198  0101               	movlb	1	; () banked
  4710  00019A  6FCE               	movwf	_lcdPrintTR& (0+255),b
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;main.c: 289:                 lcdPrintBR = 1;
  4714  00019C  0E01               	movlw	1
  4715  00019E  6FCD               	movwf	_lcdPrintBR& (0+255),b
  4716                           
  4717                           ; BSR set to: 1
  4718                           ;main.c: 290:                 LATDbits.LATD6 = 1;
  4719  0001A0  8CBD               	bsf	189,6,c	;volatile
  4720  0001A2                     l20310:
  4721                           
  4722                           ; BSR set to: 1
  4723                           ;main.c: 293:             MonitorMsgSend(MONSTATE_STOP);
  4724  0001A2  0E00               	movlw	0
  4725  0001A4  EC7E  F04E         	call	_MonitorMsgSend
  4726                           
  4727                           ;main.c: 295:             if (keyReadEC() == -100) {
  4728  0001A8  EC34  F042         	call	_keyReadEC	;wreg free
  4729  0001AC  0A9C               	xorlw	156
  4730  0001AE  A4D8               	btfss	status,2,c
  4731  0001B0  D011               	goto	l20324
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;main.c: 296:                 if (keyPeek() == 4) {
  4735  0001B2  EC15  F046         	call	_keyPeek	;wreg free
  4736  0001B6  0A04               	xorlw	4
  4737  0001B8  A4D8               	btfss	status,2,c
  4738  0001BA  D00C               	goto	l20324
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;main.c: 298:                     LATDbits.LATD6 = 0;
  4742  0001BC  9CBD               	bcf	189,6,c	;volatile
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;main.c: 299:                     ctrlStatus = CTRL_RUN;
  4746  0001BE  0E02               	movlw	2
  4747  0001C0  0101               	movlb	1	; () banked
  4748  0001C2  6FC8               	movwf	_ctrlStatus& (0+255),b
  4749  0001C4                     l20320:
  4750                           
  4751                           ;main.c: 302:                     while (keyPeek() != -1)
  4752  0001C4  EC15  F046         	call	_keyPeek	;wreg free
  4753  0001C8  0AFF               	xorlw	255
  4754  0001CA  A4D8               	btfss	status,2,c
  4755  0001CC  D7FB               	goto	l20320
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;main.c: 304:                     keyReadInit();
  4759  0001CE  ECC9  F050         	call	_keyReadInit	;wreg free
  4760                           
  4761                           ;main.c: 305:                     break;
  4762  0001D2  D005               	goto	u21580
  4763  0001D4                     l20324:
  4764                           
  4765                           ;main.c: 275:         while (ctrlStatus != CTRL_RUN) {
  4766  0001D4  0E02               	movlw	2
  4767  0001D6  0101               	movlb	1	; () banked
  4768  0001D8  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  4769  0001DA  A4D8               	btfss	status,2,c
  4770  0001DC  D7B4               	goto	l20288
  4771  0001DE                     u21580:
  4772  0001DE  EC15  F051         	call	_MonitorMsgBusy	;wreg free
  4773  0001E2  0900               	iorlw	0
  4774  0001E4  A4D8               	btfss	status,2,c
  4775  0001E6  D7FB               	goto	u21580
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;main.c: 314:         rSV2ValveORT = 20;
  4779  0001E8  0E00               	movlw	0
  4780  0001EA  0101               	movlb	1	; () banked
  4781  0001EC  6F9E               	movwf	(_rSV2ValveORT+1)& (0+255),b
  4782  0001EE  0E14               	movlw	20
  4783  0001F0  6F9D               	movwf	_rSV2ValveORT& (0+255),b
  4784                           
  4785                           ;main.c: 315:         rSV2ValveCRT = 50;
  4786  0001F2  0E00               	movlw	0
  4787  0001F4  6F9C               	movwf	(_rSV2ValveCRT+1)& (0+255),b
  4788  0001F6  0E32               	movlw	50
  4789  0001F8  6F9B               	movwf	_rSV2ValveCRT& (0+255),b
  4790                           
  4791                           ;main.c: 316:         rSV3ValveORT = 40;
  4792  0001FA  0E00               	movlw	0
  4793  0001FC  6F9A               	movwf	(_rSV3ValveORT+1)& (0+255),b
  4794  0001FE  0E28               	movlw	40
  4795  000200  6F99               	movwf	_rSV3ValveORT& (0+255),b
  4796                           
  4797                           ;main.c: 317:         sv2DelayCheck = 0;
  4798  000202  0E00               	movlw	0
  4799  000204  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  4800                           
  4801                           ;main.c: 318:         OSCheck = 0;
  4802  000206  0E00               	movlw	0
  4803  000208  6FC3               	movwf	_OSCheck& (0+255),b
  4804                           
  4805                           ;main.c: 319:         QuantaCheck = 0;
  4806  00020A  0E00               	movlw	0
  4807  00020C  6FC2               	movwf	_QuantaCheck& (0+255),b
  4808                           
  4809                           ;main.c: 320:         pExpOS = 10;
  4810  00020E  0E00               	movlw	0
  4811  000210  6FE2               	movwf	(_pExpOS+1)& (0+255),b
  4812  000212  0E0A               	movlw	10
  4813  000214  6FE1               	movwf	_pExpOS& (0+255),b
  4814                           
  4815                           ;main.c: 321:         pInspOS = 50;
  4816  000216  0E00               	movlw	0
  4817  000218  0100               	movlb	0	; () banked
  4818  00021A  6FD1               	movwf	(_pInspOS+1)& (0+255),b
  4819  00021C  0E32               	movlw	50
  4820  00021E  6FD0               	movwf	_pInspOS& (0+255),b
  4821                           
  4822                           ;main.c: 322:         pInspOS3 = 50;
  4823  000220  0E00               	movlw	0
  4824  000222  0101               	movlb	1	; () banked
  4825  000224  6FDE               	movwf	(_pInspOS3+1)& (0+255),b
  4826  000226  0E32               	movlw	50
  4827  000228  6FDD               	movwf	_pInspOS3& (0+255),b
  4828                           
  4829                           ;main.c: 323:         pInspOS2 = 50;
  4830  00022A  0E00               	movlw	0
  4831  00022C  6FDC               	movwf	(_pInspOS2+1)& (0+255),b
  4832  00022E  0E32               	movlw	50
  4833  000230  6FDB               	movwf	_pInspOS2& (0+255),b
  4834                           
  4835                           ;main.c: 324:         vInspOS = 50;
  4836  000232  0E00               	movlw	0
  4837  000234  6FDA               	movwf	(_vInspOS+1)& (0+255),b
  4838  000236  0E32               	movlw	50
  4839  000238  6FD9               	movwf	_vInspOS& (0+255),b
  4840                           
  4841                           ;main.c: 325:         vQuanta = 30;
  4842  00023A  0E00               	movlw	0
  4843  00023C  6FA6               	movwf	(_vQuanta+1)& (0+255),b
  4844  00023E  0E1E               	movlw	30
  4845  000240  6FA5               	movwf	_vQuanta& (0+255),b
  4846                           
  4847                           ;main.c: 326:         pQuantaInsp = 20;
  4848  000242  0E00               	movlw	0
  4849  000244  6FD6               	movwf	(_pQuantaInsp+1)& (0+255),b
  4850  000246  0E14               	movlw	20
  4851  000248  6FD5               	movwf	_pQuantaInsp& (0+255),b
  4852                           
  4853                           ;main.c: 327:         pQuantaExp = 20;
  4854  00024A  0E00               	movlw	0
  4855  00024C  6FD4               	movwf	(_pQuantaExp+1)& (0+255),b
  4856  00024E  0E14               	movlw	20
  4857  000250  6FD3               	movwf	_pQuantaExp& (0+255),b
  4858                           
  4859                           ;main.c: 328:         lungC = 0;
  4860  000252  0E00               	movlw	0
  4861  000254  6FE0               	movwf	(_lungC+1)& (0+255),b
  4862  000256  0E00               	movlw	0
  4863  000258  6FDF               	movwf	_lungC& (0+255),b
  4864                           
  4865                           ;main.c: 329:         lungR = 0;
  4866  00025A  0E00               	movlw	0
  4867  00025C  0102               	movlb	2	; () banked
  4868  00025E  6FCE               	movwf	(_lungR+1)& (0+255),b
  4869  000260  0E00               	movlw	0
  4870  000262  6FCD               	movwf	_lungR& (0+255),b
  4871                           
  4872                           ;main.c: 330:         sBreath = 0;
  4873  000264  0E00               	movlw	0
  4874  000266  0101               	movlb	1	; () banked
  4875  000268  6FC9               	movwf	_sBreath& (0+255),b
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;main.c: 334:         if (freeFlowRateF > 50) {
  4879  00026A  0102               	movlb	2	; () banked
  4880  00026C  51D2               	movf	(_freeFlowRateF+1)& (0+255),w,b
  4881  00026E  E104               	bnz	u21600
  4882  000270  0E33               	movlw	51
  4883  000272  5DD1               	subwf	_freeFlowRateF& (0+255),w,b
  4884  000274  A0D8               	btfss	status,0,c
  4885  000276  D016               	goto	l20334
  4886  000278                     u21600:
  4887                           
  4888                           ; BSR set to: 2
  4889                           ;main.c: 335:             effectiveFlowRateInv = ((uint24_t) 1 << 18) / freeFlowRateF;
  4890  000278  0E00               	movlw	0
  4891  00027A  0100               	movlb	0	; () banked
  4892  00027C  6F8B               	movwf	___ltdiv@dividend& (0+255),b
  4893  00027E  0E00               	movlw	0
  4894  000280  6F8C               	movwf	(___ltdiv@dividend+1)& (0+255),b
  4895  000282  0E04               	movlw	4
  4896  000284  6F8D               	movwf	(___ltdiv@dividend+2)& (0+255),b
  4897  000286  0060  FB44  F08E   	movff	_freeFlowRateF,___ltdiv@divisor
  4898  00028C  0060  FB48  F08F   	movff	_freeFlowRateF+1,___ltdiv@divisor+1
  4899  000292  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  4900  000294  EC75  F044         	call	___ltdiv	;wreg free
  4901  000298  0060  F22C  F1D1   	movff	?___ltdiv,_effectiveFlowRateInv
  4902  00029E  0060  F230  F1D2   	movff	?___ltdiv+1,_effectiveFlowRateInv+1
  4903  0002A4                     l20334:
  4904                           
  4905                           ;main.c: 337:         pPeepActual = 0;
  4906  0002A4  0E00               	movlw	0
  4907  0002A6  0101               	movlb	1	; () banked
  4908  0002A8  6FAA               	movwf	(_pPeepActual+1)& (0+255),b
  4909  0002AA  0E00               	movlw	0
  4910  0002AC  6FA9               	movwf	_pPeepActual& (0+255),b
  4911                           
  4912                           ; BSR set to: 1
  4913                           ;main.c: 338:         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
  4914  0002AE  0EEA               	movlw	234
  4915  0002B0  0100               	movlb	0	; () banked
  4916  0002B2  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  4917  0002B4  0E60               	movlw	96
  4918  0002B6  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  4919  0002B8  0101               	movlb	1	; () banked
  4920  0002BA  51FC               	movf	_BPM& (0+255),w,b
  4921  0002BC  0D03               	mullw	3
  4922  0002BE  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
  4923  0002C4  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
  4924  0002CA  EC85  F047         	call	___lwdiv	;wreg free
  4925  0002CE  0060  F22C  F1AD   	movff	?___lwdiv,_IDuration
  4926  0002D4  0060  F230  F1AE   	movff	?___lwdiv+1,_IDuration+1
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;main.c: 339:         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDuration;
  4930  0002DA  0EEA               	movlw	234
  4931  0002DC  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
  4932  0002DE  0E60               	movlw	96
  4933  0002E0  6F8B               	movwf	___lwdiv@dividend& (0+255),b
  4934  0002E2  0060  F7F0  F08D   	movff	_BPM,___lwdiv@divisor
  4935  0002E8  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4936  0002EA  EC85  F047         	call	___lwdiv	;wreg free
  4937  0002EE  0101               	movlb	1	; () banked
  4938  0002F0  51AD               	movf	_IDuration& (0+255),w,b
  4939  0002F2  0100               	movlb	0	; () banked
  4940  0002F4  5D8B               	subwf	?___lwdiv& (0+255),w,b
  4941  0002F6  0102               	movlb	2	; () banked
  4942  0002F8  6F46               	movwf	_EDuration& (0+255),b
  4943  0002FA  0101               	movlb	1	; () banked
  4944  0002FC  51AE               	movf	(_IDuration+1)& (0+255),w,b
  4945  0002FE  0100               	movlb	0	; () banked
  4946  000300  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
  4947  000302  0102               	movlb	2	; () banked
  4948  000304  6F47               	movwf	(_EDuration+1)& (0+255),b
  4949                           
  4950                           ; BSR set to: 2
  4951                           ;main.c: 340:         lastCycleVol = 0;
  4952  000306  0E00               	movlw	0
  4953  000308  6F45               	movwf	(_lastCycleVol+1)& (0+255),b
  4954  00030A  0E00               	movlw	0
  4955  00030C  6F44               	movwf	_lastCycleVol& (0+255),b
  4956                           
  4957                           ; BSR set to: 2
  4958                           ;main.c: 341:         bRateInit();
  4959  00030E  EC19  F04F         	call	_bRateInit	;wreg free
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;main.c: 344:         if (VentMode == VMODE_PRESSURE) {
  4963  000312  0101               	movlb	1	; () banked
  4964  000314  51F8               	movf	_VentMode& (0+255),w,b
  4965  000316  A4D8               	btfss	status,2,c
  4966  000318  D004               	goto	l20348
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;main.c: 345:             MonitorMsgSendBlock(MONSTATE_RUNP);
  4970  00031A  0E10               	movlw	16
  4971  00031C  ECE0  F04E         	call	_MonitorMsgSendBlock
  4972                           
  4973                           ;main.c: 346:         } else {
  4974  000320  D003               	goto	l20350
  4975  000322                     l20348:
  4976                           
  4977                           ; BSR set to: 1
  4978                           ;main.c: 347:             MonitorMsgSendBlock(MONSTATE_RUNV);
  4979  000322  0E14               	movlw	20
  4980  000324  ECE0  F04E         	call	_MonitorMsgSendBlock
  4981  000328                     l20350:
  4982                           
  4983                           ; BSR set to: 1
  4984                           ;main.c: 351:         rCycleTime = timeGet();
  4985  000328  ECFA  F050         	call	_timeGet	;wreg free
  4986  00032C  0060  F24C  F1CF   	movff	?_timeGet,_rCycleTime
  4987  000332  0060  F250  F1D0   	movff	?_timeGet+1,_rCycleTime+1
  4988                           
  4989                           ;main.c: 352:         while (ctrlStatus != CTRL_SLEEP) {
  4990  000338  EFCE  F014         	goto	l21020
  4991  00033C                     l1739:
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;main.c: 357:             intVentMode = VentMode;
  4995  00033C  C1F8  F1CA         	movff	_VentMode,_intVentMode
  4996                           
  4997                           ; BSR set to: 1
  4998                           ;main.c: 358:             intMaxP = ((int16_t) ((0.045*4096+2)/5)*MaxP);
  4999  000340  51FF               	movf	_MaxP& (0+255),w,b
  5000  000342  0D25               	mullw	37
  5001  000344  006F FFCC  F1F3    	movff	prodl,_intMaxP
  5002  00034A  006F FFD0  F1F4    	movff	prodh,_intMaxP+1
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;main.c: 359:             intPEEP = ((int16_t) ((0.045*4096+2)/5)*PEEP) + ((int16_t) ((0
      +                          .045*4096+2)/5)*0.4);
  5006  000350  0ECD               	movlw	205
  5007  000352  0100               	movlb	0	; () banked
  5008  000354  6F9D               	movwf	___fladd@a& (0+255),b
  5009  000356  0ECC               	movlw	204
  5010  000358  6F9E               	movwf	(___fladd@a+1)& (0+255),b
  5011  00035A  0E6C               	movlw	108
  5012  00035C  6F9F               	movwf	(___fladd@a+2)& (0+255),b
  5013  00035E  0E41               	movlw	65
  5014  000360  6FA0               	movwf	(___fladd@a+3)& (0+255),b
  5015  000362  0101               	movlb	1	; () banked
  5016  000364  51FA               	movf	_PEEP& (0+255),w,b
  5017  000366  0D25               	mullw	37
  5018  000368  006F FFCC  F39F    	movff	prodl,??_main
  5019  00036E  006F FFD0  F3A0    	movff	prodh,??_main+1
  5020  000374  0060  FE7C  F08B   	movff	??_main,___xxtofl@val
  5021  00037A  0060  FE80  F08C   	movff	??_main+1,___xxtofl@val+1
  5022  000380  0100               	movlb	0	; () banked
  5023  000382  0E00               	movlw	0
  5024  000384  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5025  000386  0EFF               	movlw	-1
  5026  000388  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
  5027  00038A  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
  5028  00038C  0E01               	movlw	1
  5029  00038E  EC9B  F037         	call	___xxtofl
  5030  000392  0060  F22C  F099   	movff	?___xxtofl,___fladd@b
  5031  000398  0060  F230  F09A   	movff	?___xxtofl+1,___fladd@b+1
  5032  00039E  0060  F234  F09B   	movff	?___xxtofl+2,___fladd@b+2
  5033  0003A4  0060  F238  F09C   	movff	?___xxtofl+3,___fladd@b+3
  5034  0003AA  EC35  F02A         	call	___fladd	;wreg free
  5035  0003AE  0060  F264  F0A9   	movff	?___fladd,___fltol@f1
  5036  0003B4  0060  F268  F0AA   	movff	?___fladd+1,___fltol@f1+1
  5037  0003BA  0060  F26C  F0AB   	movff	?___fladd+2,___fltol@f1+2
  5038  0003C0  0060  F270  F0AC   	movff	?___fladd+3,___fltol@f1+3
  5039  0003C6  ECC6  F03D         	call	___fltol	;wreg free
  5040  0003CA  0060  F2A4  F1B1   	movff	?___fltol,_intPEEP
  5041  0003D0  0060  F2A8  F1B2   	movff	?___fltol+1,_intPEEP+1
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;main.c: 360:             intBdTrig = ((int16_t) ((0.045*4096+2)/5)*BdTrig);
  5045  0003D6  0101               	movlb	1	; () banked
  5046  0003D8  51F9               	movf	_BdTrig& (0+255),w,b
  5047  0003DA  0D25               	mullw	37
  5048  0003DC  006F FFCC  F24A    	movff	prodl,_intBdTrig
  5049  0003E2  006F FFD0  F24B    	movff	prodh,_intBdTrig+1
  5050                           
  5051                           ; BSR set to: 1
  5052                           ;main.c: 361:             intIDuration = ((time_t) IDuration*1);
  5053  0003E8  C1AD  F1AF         	movff	_IDuration,_intIDuration
  5054  0003EC  C1AE  F1B0         	movff	_IDuration+1,_intIDuration+1
  5055                           
  5056                           ; BSR set to: 1
  5057                           ;main.c: 362:             if (sBreath) {
  5058  0003F0  51C9               	movf	_sBreath& (0+255),w,b
  5059  0003F2  B4D8               	btfsc	status,2,c
  5060  0003F4  D008               	goto	l1740
  5061                           
  5062                           ; BSR set to: 1
  5063                           ;main.c: 363:                 intEDuration = ((time_t) EDuration + 1000*1);
  5064  0003F6  0EE8               	movlw	232
  5065  0003F8  0102               	movlb	2	; () banked
  5066  0003FA  2546               	addwf	_EDuration& (0+255),w,b
  5067  0003FC  6F48               	movwf	_intEDuration& (0+255),b
  5068  0003FE  0E03               	movlw	3
  5069  000400  2147               	addwfc	(_EDuration+1)& (0+255),w,b
  5070  000402  6F49               	movwf	(_intEDuration+1)& (0+255),b
  5071                           
  5072                           ;main.c: 364:             } else {
  5073  000404  D004               	goto	l20364
  5074  000406                     l1740:
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;main.c: 365:                 intEDuration = ((time_t) EDuration*1);
  5078  000406  C246  F248         	movff	_EDuration,_intEDuration
  5079  00040A  C247  F249         	movff	_EDuration+1,_intEDuration+1
  5080  00040E                     l20364:
  5081                           
  5082                           ;main.c: 368:             if (intVentMode == VMODE_PRESSURE) {
  5083  00040E  0101               	movlb	1	; () banked
  5084  000410  51CA               	movf	_intVentMode& (0+255),w,b
  5085  000412  A4D8               	btfss	status,2,c
  5086  000414  D05D               	goto	l20374
  5087                           
  5088                           ; BSR set to: 1
  5089                           ;main.c: 369:                 intIP = ((int16_t) ((0.045*4096+2)/5)*IP);
  5090  000416  51FB               	movf	_IP& (0+255),w,b
  5091  000418  0D25               	mullw	37
  5092  00041A  006F FFCC  F1B3    	movff	prodl,_intIP
  5093  000420  006F FFD0  F1B4    	movff	prodh,_intIP+1
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;main.c: 371:                 intMaxV = ((((uint24_t) intIP - pPeepActual)*((uint24_t) l
      +                          ungC)) >> 7);
  5097  000426  0E07               	movlw	7
  5098  000428  0103               	movlb	3	; () banked
  5099  00042A  6F9F               	movwf	??_main& (0+255),b
  5100  00042C  0060  F6CC  F3A0   	movff	_intIP,??_main+1
  5101  000432  0060  F6D0  F3A1   	movff	_intIP+1,??_main+2
  5102  000438  6BA2               	clrf	(??_main+3)& (0+255),b
  5103  00043A  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5104  00043C  69A2               	setf	(??_main+3)& (0+255),b
  5105  00043E  0101               	movlb	1	; () banked
  5106  000440  51A9               	movf	_pPeepActual& (0+255),w,b
  5107  000442  0103               	movlb	3	; () banked
  5108  000444  5DA0               	subwf	(??_main+1)& (0+255),w,b
  5109  000446  0100               	movlb	0	; () banked
  5110  000448  6F8B               	movwf	___tmul@multiplier& (0+255),b
  5111  00044A  0101               	movlb	1	; () banked
  5112  00044C  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
  5113  00044E  0103               	movlb	3	; () banked
  5114  000450  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5115  000452  0100               	movlb	0	; () banked
  5116  000454  6F8C               	movwf	(___tmul@multiplier+1)& (0+255),b
  5117  000456  0E00               	movlw	0
  5118  000458  0101               	movlb	1	; () banked
  5119  00045A  BFAA               	btfsc	(_pPeepActual+1)& (0+255),7,b
  5120  00045C  0EFF               	movlw	255
  5121  00045E  0103               	movlb	3	; () banked
  5122  000460  59A2               	subwfb	(??_main+3)& (0+255),w,b
  5123  000462  0100               	movlb	0	; () banked
  5124  000464  6F8D               	movwf	(___tmul@multiplier+2)& (0+255),b
  5125  000466  0060  F77C  F08E   	movff	_lungC,___tmul@multiplicand
  5126  00046C  0060  F780  F08F   	movff	_lungC+1,___tmul@multiplicand+1
  5127  000472  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5128  000474  EC46  F049         	call	___tmul	;wreg free
  5129  000478  0103               	movlb	3	; () banked
  5130  00047A  299F               	incf	??_main& (0+255),w,b
  5131  00047C  6FA3               	movwf	(??_main+4)& (0+255),b
  5132  00047E  D005               	goto	u21640
  5133  000480                     u21645:
  5134  000480  0100               	movlb	0	; () banked
  5135  000482  90D8               	bcf	status,0,c
  5136  000484  338D               	rrcf	(?___tmul+2)& (0+255),f,b
  5137  000486  338C               	rrcf	(?___tmul+1)& (0+255),f,b
  5138  000488  338B               	rrcf	?___tmul& (0+255),f,b
  5139  00048A                     u21640:
  5140  00048A  0103               	movlb	3	; () banked
  5141  00048C  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  5142  00048E  D7F8               	goto	u21645
  5143  000490  0060  F22C  F1F1   	movff	?___tmul,_intMaxV
  5144  000496  0060  F230  F1F2   	movff	?___tmul+1,_intMaxV+1
  5145                           
  5146                           ;main.c: 373:                 if (intMaxV > (10 * HighVAlarm)) {
  5147  00049C  0101               	movlb	1	; () banked
  5148  00049E  51FD               	movf	_HighVAlarm& (0+255),w,b
  5149  0004A0  0D0A               	mullw	10
  5150  0004A2  51F1               	movf	_intMaxV& (0+255),w,b
  5151  0004A4  5CF3               	subwf	243,w,c
  5152  0004A6  50F4               	movf	244,w,c
  5153  0004A8  0A80               	xorlw	128
  5154  0004AA  0103               	movlb	3	; () banked
  5155  0004AC  6F9F               	movwf	??_main& (0+255),b
  5156  0004AE  0101               	movlb	1	; () banked
  5157  0004B0  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  5158  0004B2  0A80               	xorlw	128
  5159  0004B4  0103               	movlb	3	; () banked
  5160  0004B6  599F               	subwfb	??_main& (0+255),w,b
  5161  0004B8  B0D8               	btfsc	status,0,c
  5162  0004BA  D094               	goto	l20386
  5163                           
  5164                           ; BSR set to: 3
  5165                           ;main.c: 374:                     intMaxV = 10 * HighVAlarm;
  5166  0004BC  0101               	movlb	1	; () banked
  5167  0004BE  51FD               	movf	_HighVAlarm& (0+255),w,b
  5168  0004C0  0D0A               	mullw	10
  5169  0004C2  006F FFCC  F1F1    	movff	prodl,_intMaxV
  5170  0004C8  006F FFD0  F1F2    	movff	prodh,_intMaxV+1
  5171  0004CE  D08A               	goto	l20386
  5172  0004D0                     l20374:
  5173                           
  5174                           ; BSR set to: 1
  5175                           ;main.c: 378:                 if (pPeepActual > ((((int16_t) ((0.045*4096+2)/5)*1) + int
      +                          PEEP))) {
  5176  0004D0  0E25               	movlw	37
  5177  0004D2  25B1               	addwf	_intPEEP& (0+255),w,b
  5178  0004D4  0103               	movlb	3	; () banked
  5179  0004D6  6F9F               	movwf	??_main& (0+255),b
  5180  0004D8  0E00               	movlw	0
  5181  0004DA  0101               	movlb	1	; () banked
  5182  0004DC  21B2               	addwfc	(_intPEEP+1)& (0+255),w,b
  5183  0004DE  0103               	movlb	3	; () banked
  5184  0004E0  6FA0               	movwf	(??_main+1)& (0+255),b
  5185  0004E2  0101               	movlb	1	; () banked
  5186  0004E4  51A9               	movf	_pPeepActual& (0+255),w,b
  5187  0004E6  0103               	movlb	3	; () banked
  5188  0004E8  5D9F               	subwf	??_main& (0+255),w,b
  5189  0004EA  51A0               	movf	(??_main+1)& (0+255),w,b
  5190  0004EC  0A80               	xorlw	128
  5191  0004EE  6FA1               	movwf	(??_main+2)& (0+255),b
  5192  0004F0  0101               	movlb	1	; () banked
  5193  0004F2  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
  5194  0004F4  0A80               	xorlw	128
  5195  0004F6  0103               	movlb	3	; () banked
  5196  0004F8  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5197  0004FA  B0D8               	btfsc	status,0,c
  5198  0004FC  D032               	goto	l20378
  5199                           
  5200                           ; BSR set to: 3
  5201                           ;main.c: 379:                     intMaxV = 10 * ((uint16_t) MaxV) - (((pPeepActual - in
      +                          tPEEP) * lungC) >> 7);
  5202  0004FE  0101               	movlb	1	; () banked
  5203  000500  51B1               	movf	_intPEEP& (0+255),w,b
  5204  000502  5DA9               	subwf	_pPeepActual& (0+255),w,b
  5205  000504  0100               	movlb	0	; () banked
  5206  000506  6F9B               	movwf	___wmul@multiplier& (0+255),b
  5207  000508  0101               	movlb	1	; () banked
  5208  00050A  51B2               	movf	(_intPEEP+1)& (0+255),w,b
  5209  00050C  59AA               	subwfb	(_pPeepActual+1)& (0+255),w,b
  5210  00050E  0100               	movlb	0	; () banked
  5211  000510  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  5212  000512  0060  F77C  F09D   	movff	_lungC,___wmul@multiplicand
  5213  000518  0060  F780  F09E   	movff	_lungC+1,___wmul@multiplicand+1
  5214  00051E  EC21  F04D         	call	___wmul	;wreg free
  5215  000522  0E07               	movlw	7
  5216  000524  0103               	movlb	3	; () banked
  5217  000526  6F9F               	movwf	??_main& (0+255),b
  5218  000528                     u21675:
  5219  000528  0100               	movlb	0	; () banked
  5220  00052A  90D8               	bcf	status,0,c
  5221  00052C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5222  00052E  339B               	rrcf	?___wmul& (0+255),f,b
  5223  000530  0103               	movlb	3	; () banked
  5224  000532  2F9F               	decfsz	??_main& (0+255),f,b
  5225  000534  D7F9               	goto	u21675
  5226  000536  0101               	movlb	1	; () banked
  5227  000538  51FE               	movf	_MaxV& (0+255),w,b
  5228  00053A  0D0A               	mullw	10
  5229  00053C  006F FFCC  F3A0    	movff	prodl,??_main+1
  5230  000542  006F FFD0  F3A1    	movff	prodh,??_main+2
  5231  000548  0100               	movlb	0	; () banked
  5232  00054A  519B               	movf	?___wmul& (0+255),w,b
  5233  00054C  0103               	movlb	3	; () banked
  5234  00054E  5DA0               	subwf	(??_main+1)& (0+255),w,b
  5235  000550  0101               	movlb	1	; () banked
  5236  000552  6FF1               	movwf	_intMaxV& (0+255),b
  5237  000554  0100               	movlb	0	; () banked
  5238  000556  519C               	movf	(?___wmul+1)& (0+255),w,b
  5239  000558  0103               	movlb	3	; () banked
  5240  00055A  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5241  00055C  0101               	movlb	1	; () banked
  5242  00055E  6FF2               	movwf	(_intMaxV+1)& (0+255),b
  5243                           
  5244                           ;main.c: 380:                 } else {
  5245  000560  D009               	goto	l20380
  5246  000562                     l20378:
  5247                           
  5248                           ; BSR set to: 3
  5249                           ;main.c: 381:                     intMaxV = 10 * ((uint16_t) MaxV);
  5250  000562  0101               	movlb	1	; () banked
  5251  000564  51FE               	movf	_MaxV& (0+255),w,b
  5252  000566  0D0A               	mullw	10
  5253  000568  006F FFCC  F1F1    	movff	prodl,_intMaxV
  5254  00056E  006F FFD0  F1F2    	movff	prodh,_intMaxV+1
  5255  000574                     l20380:
  5256                           
  5257                           ; BSR set to: 1
  5258                           ;main.c: 383:                 if (lungC > 20) {
  5259  000574  51E0               	movf	(_lungC+1)& (0+255),w,b
  5260  000576  E104               	bnz	u21680
  5261  000578  0E15               	movlw	21
  5262  00057A  5DDF               	subwf	_lungC& (0+255),w,b
  5263  00057C  A0D8               	btfss	status,0,c
  5264  00057E  D02E               	goto	l20384
  5265  000580                     u21680:
  5266                           
  5267                           ; BSR set to: 1
  5268                           ;main.c: 384:                     intIP = ((uint24_t) intMaxV<<7)/lungC;
  5269  000580  0E07               	movlw	7
  5270  000582  0103               	movlb	3	; () banked
  5271  000584  6F9F               	movwf	??_main& (0+255),b
  5272  000586  0060  F7C4  F3A0   	movff	_intMaxV,??_main+1
  5273  00058C  0060  F7C8  F3A1   	movff	_intMaxV+1,??_main+2
  5274  000592  6BA2               	clrf	(??_main+3)& (0+255),b
  5275  000594  BFA1               	btfsc	(??_main+2)& (0+255),7,b
  5276  000596  69A2               	setf	(??_main+3)& (0+255),b
  5277  000598  299F               	incf	??_main& (0+255),w,b
  5278  00059A  D004               	goto	u21690
  5279  00059C                     u21695:
  5280  00059C  90D8               	bcf	status,0,c
  5281  00059E  37A0               	rlcf	(??_main+1)& (0+255),f,b
  5282  0005A0  37A1               	rlcf	(??_main+2)& (0+255),f,b
  5283  0005A2  37A2               	rlcf	(??_main+3)& (0+255),f,b
  5284  0005A4                     u21690:
  5285  0005A4  2EE8               	decfsz	wreg,f,c
  5286  0005A6  D7FA               	goto	u21695
  5287  0005A8  0060  FE80  F08B   	movff	??_main+1,___ltdiv@dividend
  5288  0005AE  0060  FE84  F08C   	movff	??_main+2,___ltdiv@dividend+1
  5289  0005B4  0060  FE88  F08D   	movff	??_main+3,___ltdiv@dividend+2
  5290  0005BA  0060  F77C  F08E   	movff	_lungC,___ltdiv@divisor
  5291  0005C0  0060  F780  F08F   	movff	_lungC+1,___ltdiv@divisor+1
  5292  0005C6  0100               	movlb	0	; () banked
  5293  0005C8  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  5294  0005CA  EC75  F044         	call	___ltdiv	;wreg free
  5295  0005CE  0060  F22C  F1B3   	movff	?___ltdiv,_intIP
  5296  0005D4  0060  F230  F1B4   	movff	?___ltdiv+1,_intIP+1
  5297                           
  5298                           ;main.c: 385:                 } else {
  5299  0005DA  D004               	goto	l20386
  5300  0005DC                     l20384:
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;main.c: 386:                     intIP = 0;
  5304  0005DC  0E00               	movlw	0
  5305  0005DE  6FB4               	movwf	(_intIP+1)& (0+255),b
  5306  0005E0  0E00               	movlw	0
  5307  0005E2  6FB3               	movwf	_intIP& (0+255),b
  5308  0005E4                     l20386:
  5309                           
  5310                           ;main.c: 389:             printf ("\nIP. MaxV %d EBRate %d SV2RO %d SV2RC %d PQ %d VQ %d
      +                          .\n", intMaxV, bRateGet(), rSV2ValveORT, rSV2ValveCRT, ((int16_t) (((2560/((int16_t) ((0
      +                          .045*4096+2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vQuanta);
  5311  0005E4  0EDF               	movlw	low STR_10
  5312  0005E6  0101               	movlb	1	; () banked
  5313  0005E8  6F46               	movwf	printf@fmt& (0+255),b
  5314  0005EA  0EFA               	movlw	high STR_10
  5315  0005EC  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5316  0005EE  0060  F7C4  F148   	movff	_intMaxV,?_printf+2
  5317  0005F4  0060  F7C8  F149   	movff	_intMaxV+1,?_printf+3
  5318  0005FA  EC4E  F04F         	call	_bRateGet	;wreg free
  5319  0005FE  0103               	movlb	3	; () banked
  5320  000600  6F9F               	movwf	??_main& (0+255),b
  5321  000602  519F               	movf	??_main& (0+255),w,b
  5322  000604  0101               	movlb	1	; () banked
  5323  000606  6F4A               	movwf	(?_printf+4)& (0+255),b
  5324  000608  6B4B               	clrf	(?_printf+5)& (0+255),b
  5325  00060A  0060  F674  F14C   	movff	_rSV2ValveORT,?_printf+6
  5326  000610  0060  F678  F14D   	movff	_rSV2ValveORT+1,?_printf+7
  5327  000616  0060  F66C  F14E   	movff	_rSV2ValveCRT,?_printf+8
  5328  00061C  0060  F670  F14F   	movff	_rSV2ValveCRT+1,?_printf+9
  5329  000622  0060  F754  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  5330  000628  0060  F758  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  5331  00062E  0100               	movlb	0	; () banked
  5332  000630  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5333  000632  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  5334  000634  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  5335  000636  0E45               	movlw	69
  5336  000638  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5337  00063A  0E00               	movlw	0
  5338  00063C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5339  00063E  0E00               	movlw	0
  5340  000640  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5341  000642  EC46  F049         	call	___tmul	;wreg free
  5342  000646  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5343  00064C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5344  000652  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5345  000654  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  5346  000656  698D               	setf	(?___tmul+2)& (0+255),b
  5347  000658  0060  F22C  F150   	movff	?___tmul,?_printf+10
  5348  00065E  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  5349  000664  0060  F694  F152   	movff	_vQuanta,?_printf+12
  5350  00066A  0060  F698  F153   	movff	_vQuanta+1,?_printf+13
  5351  000670  EC68  F04E         	call	_printf	;wreg free
  5352                           
  5353                           ; BSR set to: 2
  5354                           ;main.c: 394:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5355  000674  0060  F7C4  F08E   	movff	_intMaxV,___tmul@multiplicand
  5356  00067A  0060  F7C8  F08F   	movff	_intMaxV+1,___tmul@multiplicand+1
  5357  000680  0100               	movlb	0	; () banked
  5358  000682  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5359  000684  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5360  000686  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5361  000688  0060  F744  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5362  00068E  0060  F748  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5363  000694  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5364  000696  EC46  F049         	call	___tmul	;wreg free
  5365  00069A  0060  F22C  F3AF   	movff	?___tmul,_main$6100
  5366  0006A0  0060  F230  F3B0   	movff	?___tmul+1,_main$6100+1
  5367  0006A6  0060  F234  F3B1   	movff	?___tmul+2,_main$6100+2
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;main.c: 394:             tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * intMaxV) >> 8
      +                          ;
  5371  0006AC  0060  FEBC  F08B   	movff	_main$6100,___tmul@multiplier
  5372  0006B2  0060  FEC0  F08C   	movff	_main$6100+1,___tmul@multiplier+1
  5373  0006B8  0060  FEC4  F08D   	movff	_main$6100+2,___tmul@multiplier+2
  5374  0006BE  0E03               	movlw	3
  5375  0006C0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5376  0006C2  0E00               	movlw	0
  5377  0006C4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5378  0006C6  0E00               	movlw	0
  5379  0006C8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5380  0006CA  EC46  F049         	call	___tmul	;wreg free
  5381  0006CE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5382  0006D4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5383  0006DA  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5384  0006DC  0060  F22C  F3BB   	movff	?___tmul,main@tmpVal2
  5385  0006E2  0060  F230  F3BC   	movff	?___tmul+1,main@tmpVal2+1
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;main.c: 395:             if (tmpVal2 < 500) {
  5389  0006E8  0103               	movlb	3	; () banked
  5390  0006EA  BFBC               	btfsc	(main@tmpVal2+1)& (0+255),7,b
  5391  0006EC  D006               	goto	u21700
  5392  0006EE  0EF4               	movlw	244
  5393  0006F0  5DBB               	subwf	main@tmpVal2& (0+255),w,b
  5394  0006F2  0E01               	movlw	1
  5395  0006F4  59BC               	subwfb	(main@tmpVal2+1)& (0+255),w,b
  5396  0006F6  B0D8               	btfsc	status,0,c
  5397  0006F8  D01E               	goto	l20406
  5398  0006FA                     u21700:
  5399                           
  5400                           ; BSR set to: 3
  5401                           ;main.c: 396:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  5402  0006FA  84BA               	bsf	186,2,c	;volatile
  5403  0006FC  96BC               	bcf	188,3,c	;volatile
  5404                           
  5405                           ; BSR set to: 3
  5406                           ;main.c: 397:                 rVLowActuationTstamp = timeGet();
  5407  0006FE  ECFA  F050         	call	_timeGet	;wreg free
  5408  000702  0060  F24C  F0B8   	movff	?_timeGet,_rVLowActuationTstamp
  5409  000708  0060  F250  F0B9   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;main.c: 398:                 rVMedActuationTstamp = rCycleTime;
  5413  00070E  C1CF  F19F         	movff	_rCycleTime,_rVMedActuationTstamp
  5414  000712  C1D0  F1A0         	movff	_rCycleTime+1,_rVMedActuationTstamp+1
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;main.c: 399:                 rVHighActuationTstamp = rCycleTime;
  5418  000716  C1CF  F0BA         	movff	_rCycleTime,_rVHighActuationTstamp
  5419  00071A  C1D0  F0BB         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;main.c: 400:                 pInspVSet = 1;
  5423  00071E  0E00               	movlw	0
  5424  000720  0101               	movlb	1	; () banked
  5425  000722  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5426  000724  0E01               	movlw	1
  5427  000726  6FD7               	movwf	_pInspVSet& (0+255),b
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;main.c: 401:                 printf ("\nVLow\n");
  5431  000728  0EE7               	movlw	low STR_11
  5432  00072A  6F46               	movwf	printf@fmt& (0+255),b
  5433  00072C  0EFF               	movlw	high STR_11
  5434  00072E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5435  000730  EC68  F04E         	call	_printf	;wreg free
  5436                           
  5437                           ;main.c: 403:             } else if ((tmpVal2 >> 1) < 500) {
  5438  000734  D036               	goto	l20422
  5439  000736                     l20406:
  5440                           
  5441                           ; BSR set to: 3
  5442  000736  35BC               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  5443  000738  31BC               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  5444  00073A  6FA0               	movwf	(??_main+1)& (0+255),b
  5445  00073C  31BB               	rrcf	main@tmpVal2& (0+255),w,b
  5446  00073E  6F9F               	movwf	??_main& (0+255),b
  5447  000740  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  5448  000742  D006               	goto	u21710
  5449  000744  0EF4               	movlw	244
  5450  000746  5D9F               	subwf	??_main& (0+255),w,b
  5451  000748  0E01               	movlw	1
  5452  00074A  59A0               	subwfb	(??_main+1)& (0+255),w,b
  5453  00074C  B0D8               	btfsc	status,0,c
  5454  00074E  D01A               	goto	l1751
  5455  000750                     u21710:
  5456                           
  5457                           ; BSR set to: 3
  5458                           ;main.c: 404:                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  5459  000750  94BA               	bcf	186,2,c	;volatile
  5460  000752  86BC               	bsf	188,3,c	;volatile
  5461                           
  5462                           ; BSR set to: 3
  5463                           ;main.c: 405:                 rVMedActuationTstamp = timeGet();
  5464  000754  ECFA  F050         	call	_timeGet	;wreg free
  5465  000758  0060  F24C  F19F   	movff	?_timeGet,_rVMedActuationTstamp
  5466  00075E  0060  F250  F1A0   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;main.c: 406:                 rVHighActuationTstamp = rCycleTime;
  5470  000764  C1CF  F0BA         	movff	_rCycleTime,_rVHighActuationTstamp
  5471  000768  C1D0  F0BB         	movff	_rCycleTime+1,_rVHighActuationTstamp+1
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;main.c: 407:                 pInspVSet = 2;
  5475  00076C  0E00               	movlw	0
  5476  00076E  0101               	movlb	1	; () banked
  5477  000770  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5478  000772  0E02               	movlw	2
  5479  000774  6FD7               	movwf	_pInspVSet& (0+255),b
  5480                           
  5481                           ; BSR set to: 1
  5482                           ;main.c: 408:                 printf ("\nVMed\n");
  5483  000776  0EE0               	movlw	low STR_12
  5484  000778  6F46               	movwf	printf@fmt& (0+255),b
  5485  00077A  0EFF               	movlw	high STR_12
  5486  00077C  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5487  00077E  EC68  F04E         	call	_printf	;wreg free
  5488                           
  5489                           ;main.c: 409:             } else {
  5490  000782  D00F               	goto	l20422
  5491  000784                     l1751:
  5492                           
  5493                           ; BSR set to: 3
  5494                           ;main.c: 410:                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
  5495  000784  84BA               	bsf	186,2,c	;volatile
  5496  000786  86BC               	bsf	188,3,c	;volatile
  5497                           
  5498                           ; BSR set to: 3
  5499                           ;main.c: 411:                 pInspVSet = 3;
  5500  000788  0E00               	movlw	0
  5501  00078A  0101               	movlb	1	; () banked
  5502  00078C  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5503  00078E  0E03               	movlw	3
  5504  000790  6FD7               	movwf	_pInspVSet& (0+255),b
  5505                           
  5506                           ; BSR set to: 1
  5507                           ;main.c: 412:                 rVHighActuationTstamp = timeGet();
  5508  000792  ECFA  F050         	call	_timeGet	;wreg free
  5509  000796  0060  F24C  F0BA   	movff	?_timeGet,_rVHighActuationTstamp
  5510  00079C  0060  F250  F0BB   	movff	?_timeGet+1,_rVHighActuationTstamp+1
  5511  0007A2                     l20422:
  5512                           
  5513                           ;main.c: 414:             LATAbits.LATA3 = 1;
  5514  0007A2  86BA               	bsf	186,3,c	;volatile
  5515                           
  5516                           ;main.c: 417:             initInspSubState = 1;
  5517  0007A4  0E01               	movlw	1
  5518  0007A6  0101               	movlb	1	; () banked
  5519  0007A8  6FC6               	movwf	_initInspSubState& (0+255),b
  5520                           
  5521                           ; BSR set to: 1
  5522                           ;main.c: 418:             sv2DelayCheck = 1;
  5523  0007AA  0E01               	movlw	1
  5524  0007AC  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;main.c: 419:             OSCheck = 0;
  5528  0007AE  0E00               	movlw	0
  5529  0007B0  6FC3               	movwf	_OSCheck& (0+255),b
  5530                           
  5531                           ; BSR set to: 1
  5532                           ;main.c: 420:             OSCheckInt = 0;
  5533  0007B2  0E00               	movlw	0
  5534  0007B4  6FC1               	movwf	_OSCheckInt& (0+255),b
  5535                           
  5536                           ; BSR set to: 1
  5537                           ;main.c: 421:             QuantaCheck = 0;
  5538  0007B6  0E00               	movlw	0
  5539  0007B8  6FC2               	movwf	_QuantaCheck& (0+255),b
  5540                           
  5541                           ;main.c: 422:             rValveDelayStart = timeGet();
  5542  0007BA  ECFA  F050         	call	_timeGet	;wreg free
  5543  0007BE  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  5544  0007C4  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  5545                           
  5546                           ;main.c: 423:             vMeasureRst();
  5547  0007CA  EC54  F050         	call	_vMeasureRst	;wreg free
  5548  0007CE                     l20434:
  5549                           
  5550                           ;main.c: 425:                 if (intVentMode == VMODE_PRESSURE) {
  5551  0007CE  0101               	movlb	1	; () banked
  5552  0007D0  51CA               	movf	_intVentMode& (0+255),w,b
  5553  0007D2  A4D8               	btfss	status,2,c
  5554  0007D4  D004               	goto	l20438
  5555                           
  5556                           ; BSR set to: 1
  5557                           ;main.c: 426:                     MonitorMsgSend(MONSTATE_RUNP);
  5558  0007D6  0E10               	movlw	16
  5559  0007D8  EC7E  F04E         	call	_MonitorMsgSend
  5560                           
  5561                           ;main.c: 427:                 } else {
  5562  0007DC  D003               	goto	l20440
  5563  0007DE                     l20438:
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;main.c: 428:                     MonitorMsgSend(MONSTATE_RUNV);
  5567  0007DE  0E14               	movlw	20
  5568  0007E0  EC7E  F04E         	call	_MonitorMsgSend
  5569  0007E4                     l20440:
  5570                           
  5571                           ;main.c: 431:                 if (timeElapsedR(&rCycleTime, intIDuration)) {
  5572  0007E4  0ECF               	movlw	low _rCycleTime
  5573  0007E6  0100               	movlb	0	; () banked
  5574  0007E8  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  5575  0007EA  0E01               	movlw	high _rCycleTime
  5576  0007EC  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  5577  0007EE  0060  F6BC  F095   	movff	_intIDuration,timeElapsedR@duration
  5578  0007F4  0060  F6C0  F096   	movff	_intIDuration+1,timeElapsedR@duration+1
  5579  0007FA  ECE5  F045         	call	_timeElapsedR	;wreg free
  5580  0007FE  0900               	iorlw	0
  5581  000800  B4D8               	btfsc	status,2,c
  5582  000802  D03F               	goto	l20472
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;main.c: 433:                     if (initInspSubState) {
  5586  000804  0101               	movlb	1	; () banked
  5587  000806  51C6               	movf	_initInspSubState& (0+255),w,b
  5588  000808  B4D8               	btfsc	status,2,c
  5589  00080A  D011               	goto	l20454
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;main.c: 435:                         MonitorErrorSet(MON_IPE);
  5593  00080C  0E20               	movlw	32
  5594  00080E  EC03  F051         	call	_MonitorErrorSet
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;main.c: 437:                         pPlatInsp = pInst;
  5598  000812  C1EF  F1E3         	movff	_pInst,_pPlatInsp
  5599  000816  C1F0  F1E4         	movff	_pInst+1,_pPlatInsp+1
  5600                           
  5601                           ; BSR set to: 1
  5602                           ;main.c: 438:                         pValveActuation = pInst;
  5603  00081A  C1EF  F1E5         	movff	_pInst,_pValveActuation
  5604  00081E  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  5605                           
  5606                           ; BSR set to: 1
  5607                           ;main.c: 439:                         pPlatMax = pInst;
  5608  000822  C1EF  F1AB         	movff	_pInst,_pPlatMax
  5609  000826  C1F0  F1AC         	movff	_pInst+1,_pPlatMax+1
  5610                           
  5611                           ; BSR set to: 1
  5612                           ;main.c: 440:                         inspOSMeasure();
  5613  00082A  EC7D  F026         	call	_inspOSMeasure	;wreg free
  5614  00082E                     l20454:
  5615                           
  5616                           ;main.c: 442:                     if (OSCheck) {
  5617  00082E  0101               	movlb	1	; () banked
  5618  000830  51C3               	movf	_OSCheck& (0+255),w,b
  5619  000832  B4D8               	btfsc	status,2,c
  5620  000834  D021               	goto	l20468
  5621                           
  5622                           ; BSR set to: 1
  5623                           ;main.c: 443:                         OSCheck = 0;
  5624  000836  0E00               	movlw	0
  5625  000838  6FC3               	movwf	_OSCheck& (0+255),b
  5626                           
  5627                           ; BSR set to: 1
  5628                           ;main.c: 444:                         aCaptGetResult(Flt1PSensor, &pAvgUShort);
  5629  00083A  0EEB               	movlw	low _pAvgUShort
  5630  00083C  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5631  00083E  0E01               	movlw	high _pAvgUShort
  5632  000840  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5633  000842  0E04               	movlw	4
  5634  000844  EC83  F031         	call	_aCaptGetResult
  5635                           
  5636                           ;main.c: 445:                         pPlatInsp = pAvgUShort;
  5637  000848  C1EB  F1E3         	movff	_pAvgUShort,_pPlatInsp
  5638  00084C  C1EC  F1E4         	movff	_pAvgUShort+1,_pPlatInsp+1
  5639                           
  5640                           ;main.c: 446:                         if (pPlatMax < pAvgUShort) {
  5641  000850  0101               	movlb	1	; () banked
  5642  000852  51EB               	movf	_pAvgUShort& (0+255),w,b
  5643  000854  5DAB               	subwf	_pPlatMax& (0+255),w,b
  5644  000856  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  5645  000858  0A80               	xorlw	128
  5646  00085A  0103               	movlb	3	; () banked
  5647  00085C  6F9F               	movwf	??_main& (0+255),b
  5648  00085E  0101               	movlb	1	; () banked
  5649  000860  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  5650  000862  0A80               	xorlw	128
  5651  000864  0103               	movlb	3	; () banked
  5652  000866  599F               	subwfb	??_main& (0+255),w,b
  5653  000868  B0D8               	btfsc	status,0,c
  5654  00086A  D004               	goto	l20466
  5655                           
  5656                           ; BSR set to: 3
  5657                           ;main.c: 447:                             pPlatMax = pAvgUShort;
  5658  00086C  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  5659  000870  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  5660  000874                     l20466:
  5661                           
  5662                           ; BSR set to: 3
  5663                           ;main.c: 449:                         inspOSMeasure();
  5664  000874  EC7D  F026         	call	_inspOSMeasure	;wreg free
  5665  000878                     l20468:
  5666                           
  5667                           ;main.c: 451:                     initInspSubState = 0;
  5668  000878  0E00               	movlw	0
  5669  00087A  0101               	movlb	1	; () banked
  5670  00087C  6FC6               	movwf	_initInspSubState& (0+255),b
  5671                           
  5672                           ;main.c: 452:                     break;
  5673  00087E  EF23  F00F         	goto	l20832
  5674  000882                     l20472:
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;main.c: 460:                     if (timeElapsed(rCycleTime, ((time_t) 500*1))) {
  5678  000882  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  5679  000888  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  5680  00088E  0E01               	movlw	1
  5681  000890  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  5682  000892  0EF4               	movlw	244
  5683  000894  6F95               	movwf	timeElapsed@duration& (0+255),b
  5684  000896  EC09  F04D         	call	_timeElapsed	;wreg free
  5685  00089A  0900               	iorlw	0
  5686  00089C  A4D8               	btfss	status,2,c
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;main.c: 462:                         LATDbits.LATD6 = 0;
  5690  00089E  9CBD               	bcf	189,6,c	;volatile
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;main.c: 464:                     if (initInspSubState) {
  5694  0008A0  0101               	movlb	1	; () banked
  5695  0008A2  51C6               	movf	_initInspSubState& (0+255),w,b
  5696  0008A4  B4D8               	btfsc	status,2,c
  5697  0008A6  EF88  F00B         	goto	l20680
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;main.c: 466:                         aCaptGetResult(MainPSensor, &pInst);
  5701  0008AA  0EEF               	movlw	low _pInst
  5702  0008AC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5703  0008AE  0E01               	movlw	high _pInst
  5704  0008B0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5705  0008B2  0E00               	movlw	0
  5706  0008B4  EC83  F031         	call	_aCaptGetResult
  5707                           
  5708                           ;main.c: 468:                         if (sv2DelayCheck) {
  5709  0008B8  0101               	movlb	1	; () banked
  5710  0008BA  51C5               	movf	_sv2DelayCheck& (0+255),w,b
  5711  0008BC  B4D8               	btfsc	status,2,c
  5712  0008BE  D049               	goto	l20498
  5713                           
  5714                           ; BSR set to: 1
  5715                           ;main.c: 470:                             aCaptGetResult(VolPSensor, &tmpVal);
  5716  0008C0  0EBF               	movlw	low main@tmpVal
  5717  0008C2  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5718  0008C4  0E03               	movlw	high main@tmpVal
  5719  0008C6  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5720  0008C8  0E01               	movlw	1
  5721  0008CA  EC83  F031         	call	_aCaptGetResult
  5722                           
  5723                           ;main.c: 471:                             if (tmpVal > (20 << 2)) {
  5724  0008CE  0103               	movlb	3	; () banked
  5725  0008D0  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  5726  0008D2  D03F               	goto	l20498
  5727  0008D4  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  5728  0008D6  E104               	bnz	u21800
  5729  0008D8  0E51               	movlw	81
  5730  0008DA  5DBF               	subwf	main@tmpVal& (0+255),w,b
  5731  0008DC  A0D8               	btfss	status,0,c
  5732  0008DE  D039               	goto	l20498
  5733  0008E0                     u21800:
  5734                           
  5735                           ; BSR set to: 3
  5736                           ;main.c: 472:                                 sv2DelayCheck = 0;
  5737  0008E0  0E00               	movlw	0
  5738  0008E2  0101               	movlb	1	; () banked
  5739  0008E4  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;main.c: 474:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  5743  0008E6  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  5744  0008EC  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  5745  0008F2  ECFA  F050         	call	_timeGet	;wreg free
  5746  0008F6  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5747  0008FC  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5748  000902  EC8C  F04C         	call	_timeDiff	;wreg free
  5749  000906  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  5750  00090C  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;main.c: 475:                                 if (rTimeTmp < ((time_t) 100*1)) {
  5754  000912  0101               	movlb	1	; () banked
  5755  000914  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  5756  000916  E11A               	bnz	l20496
  5757  000918  0E64               	movlw	100
  5758  00091A  5D95               	subwf	_rTimeTmp& (0+255),w,b
  5759  00091C  B0D8               	btfsc	status,0,c
  5760  00091E  D016               	goto	l20496
  5761                           
  5762                           ; BSR set to: 1
  5763                           ;main.c: 477:                                     rSV2ValveORT = (rSV2ValveORT + rTimeTm
      +                          p) >> 1;
  5764  000920  5195               	movf	_rTimeTmp& (0+255),w,b
  5765  000922  259D               	addwf	_rSV2ValveORT& (0+255),w,b
  5766  000924  0103               	movlb	3	; () banked
  5767  000926  6F9F               	movwf	??_main& (0+255),b
  5768  000928  0101               	movlb	1	; () banked
  5769  00092A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  5770  00092C  219E               	addwfc	(_rSV2ValveORT+1)& (0+255),w,b
  5771  00092E  0103               	movlb	3	; () banked
  5772  000930  6FA0               	movwf	(??_main+1)& (0+255),b
  5773  000932  90D8               	bcf	status,0,c
  5774  000934  31A0               	rrcf	(??_main+1)& (0+255),w,b
  5775  000936  6FA1               	movwf	(??_main+2)& (0+255),b
  5776  000938  319F               	rrcf	??_main& (0+255),w,b
  5777  00093A  0101               	movlb	1	; () banked
  5778  00093C  6F9D               	movwf	_rSV2ValveORT& (0+255),b
  5779  00093E  0060  FE84  F19E   	movff	??_main+2,_rSV2ValveORT+1
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;main.c: 479:                                     MonitorErrorClr(MON_SV2E);
  5783  000944  0E08               	movlw	8
  5784  000946  EC0C  F051         	call	_MonitorErrorClr
  5785                           
  5786                           ;main.c: 480:                                 } else {
  5787  00094A  D003               	goto	l20498
  5788  00094C                     l20496:
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;main.c: 482:                                     MonitorErrorSet(MON_SV2E);
  5792  00094C  0E08               	movlw	8
  5793  00094E  EC03  F051         	call	_MonitorErrorSet
  5794  000952                     l20498:
  5795                           
  5796                           ;main.c: 493:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  5797  000952  0EED               	movlw	low _pAvgShort
  5798  000954  0101               	movlb	1	; () banked
  5799  000956  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  5800  000958  0E01               	movlw	high _pAvgShort
  5801  00095A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  5802  00095C  0E04               	movlw	4
  5803  00095E  EC83  F031         	call	_aCaptGetResult
  5804                           
  5805                           ;main.c: 497:                         pCtrl = pAvgShort;
  5806  000962  C1ED  F1E7         	movff	_pAvgShort,_pCtrl
  5807  000966  C1EE  F1E8         	movff	_pAvgShort+1,_pCtrl+1
  5808                           
  5809                           ;main.c: 498:                         vValveActuation = vMeasureGet();
  5810  00096A  ECFE  F046         	call	_vMeasureGet	;wreg free
  5811  00096E  0060  F290  F1A7   	movff	?_vMeasureGet,_vValveActuation
  5812  000974  0060  F294  F1A8   	movff	?_vMeasureGet+1,_vValveActuation+1
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;main.c: 500:                         tmpVal = 500 - timeDiff(rCycleTime, timeGet());
  5816  00097A  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  5817  000980  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  5818  000986  ECFA  F050         	call	_timeGet	;wreg free
  5819  00098A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  5820  000990  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  5821  000996  EC8C  F04C         	call	_timeDiff	;wreg free
  5822  00099A  5195               	movf	?_timeDiff& (0+255),w,b
  5823  00099C  08F4               	sublw	244
  5824  00099E  0103               	movlb	3	; () banked
  5825  0009A0  6FBF               	movwf	main@tmpVal& (0+255),b
  5826  0009A2  0100               	movlb	0	; () banked
  5827  0009A4  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  5828  0009A6  A0D8               	btfss	status,0,c
  5829  0009A8  2AE8               	incf	wreg,f,c
  5830  0009AA  0801               	sublw	1
  5831  0009AC  0103               	movlb	3	; () banked
  5832  0009AE  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  5833                           
  5834                           ; BSR set to: 3
  5835                           ;main.c: 505:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5836  0009B0  0101               	movlb	1	; () banked
  5837  0009B2  51A7               	movf	_vValveActuation& (0+255),w,b
  5838  0009B4  5DF1               	subwf	_intMaxV& (0+255),w,b
  5839  0009B6  0103               	movlb	3	; () banked
  5840  0009B8  6F9F               	movwf	??_main& (0+255),b
  5841  0009BA  0101               	movlb	1	; () banked
  5842  0009BC  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  5843  0009BE  59F2               	subwfb	(_intMaxV+1)& (0+255),w,b
  5844  0009C0  0103               	movlb	3	; () banked
  5845  0009C2  6FA0               	movwf	(??_main+1)& (0+255),b
  5846  0009C4  0060  FE7C  F08E   	movff	??_main,___tmul@multiplicand
  5847  0009CA  0060  FE80  F08F   	movff	??_main+1,___tmul@multiplicand+1
  5848  0009D0  0100               	movlb	0	; () banked
  5849  0009D2  6B90               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5850  0009D4  BF8F               	btfsc	(___tmul@multiplicand+1)& (0+255),7,b
  5851  0009D6  0790               	decf	(___tmul@multiplicand+2)& (0+255),f,b
  5852  0009D8  0060  F744  F08B   	movff	_effectiveFlowRateInv,___tmul@multiplier
  5853  0009DE  0060  F748  F08C   	movff	_effectiveFlowRateInv+1,___tmul@multiplier+1
  5854  0009E4  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  5855  0009E6  EC46  F049         	call	___tmul	;wreg free
  5856  0009EA  0060  F22C  F3AF   	movff	?___tmul,_main$6100
  5857  0009F0  0060  F230  F3B0   	movff	?___tmul+1,_main$6100+1
  5858  0009F6  0060  F234  F3B1   	movff	?___tmul+2,_main$6100+2
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;main.c: 505:                         tmpVal2 = ((uint24_t) 3 * effectiveFlowRateInv * (
      +                          intMaxV - vValveActuation)) >> 8;
  5862  0009FC  0060  FEBC  F08B   	movff	_main$6100,___tmul@multiplier
  5863  000A02  0060  FEC0  F08C   	movff	_main$6100+1,___tmul@multiplier+1
  5864  000A08  0060  FEC4  F08D   	movff	_main$6100+2,___tmul@multiplier+2
  5865  000A0E  0E03               	movlw	3
  5866  000A10  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  5867  000A12  0E00               	movlw	0
  5868  000A14  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5869  000A16  0E00               	movlw	0
  5870  000A18  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  5871  000A1A  EC46  F049         	call	___tmul	;wreg free
  5872  000A1E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  5873  000A24  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  5874  000A2A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  5875  000A2C  0060  F22C  F3BB   	movff	?___tmul,main@tmpVal2
  5876  000A32  0060  F230  F3BC   	movff	?___tmul+1,main@tmpVal2+1
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;main.c: 506:                         if ((pInspVSet == 3) &&
  5880  000A38  0E03               	movlw	3
  5881  000A3A  0101               	movlb	1	; () banked
  5882  000A3C  19D7               	xorwf	_pInspVSet& (0+255),w,b
  5883  000A3E  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  5884  000A40  A4D8               	btfss	status,2,c
  5885  000A42  D0EA               	goto	l20528
  5886                           
  5887                           ; BSR set to: 1
  5888  000A44  51DD               	movf	_pInspOS3& (0+255),w,b
  5889  000A46  25E7               	addwf	_pCtrl& (0+255),w,b
  5890  000A48  0103               	movlb	3	; () banked
  5891  000A4A  6F9F               	movwf	??_main& (0+255),b
  5892  000A4C  0101               	movlb	1	; () banked
  5893  000A4E  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  5894  000A50  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  5895  000A52  0103               	movlb	3	; () banked
  5896  000A54  6FA0               	movwf	(??_main+1)& (0+255),b
  5897  000A56  0101               	movlb	1	; () banked
  5898  000A58  51DB               	movf	_pInspOS2& (0+255),w,b
  5899  000A5A  0103               	movlb	3	; () banked
  5900  000A5C  279F               	addwf	??_main& (0+255),f,b
  5901  000A5E  0101               	movlb	1	; () banked
  5902  000A60  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  5903  000A62  0103               	movlb	3	; () banked
  5904  000A64  23A0               	addwfc	(??_main+1)& (0+255),f,b
  5905  000A66  0060  F7CC  F09B   	movff	_intMaxP,___wmul@multiplier
  5906  000A6C  0060  F7D0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  5907  000A72  0E00               	movlw	0
  5908  000A74  0100               	movlb	0	; () banked
  5909  000A76  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5910  000A78  0E07               	movlw	7
  5911  000A7A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  5912  000A7C  EC21  F04D         	call	___wmul	;wreg free
  5913  000A80  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5914  000A82  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5915  000A84  339B               	rrcf	?___wmul& (0+255),f,b
  5916  000A86  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5917  000A88  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5918  000A8A  339B               	rrcf	?___wmul& (0+255),f,b
  5919  000A8C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  5920  000A8E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  5921  000A90  339B               	rrcf	?___wmul& (0+255),f,b
  5922  000A92  0103               	movlb	3	; () banked
  5923  000A94  519F               	movf	??_main& (0+255),w,b
  5924  000A96  0100               	movlb	0	; () banked
  5925  000A98  5D9B               	subwf	?___wmul& (0+255),w,b
  5926  000A9A  519C               	movf	(?___wmul+1)& (0+255),w,b
  5927  000A9C  0A80               	xorlw	128
  5928  000A9E  0103               	movlb	3	; () banked
  5929  000AA0  6FA1               	movwf	(??_main+2)& (0+255),b
  5930  000AA2  51A0               	movf	(??_main+1)& (0+255),w,b
  5931  000AA4  0A80               	xorlw	128
  5932  000AA6  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5933  000AA8  A0D8               	btfss	status,0,c
  5934  000AAA  D00F               	goto	u21840
  5935                           
  5936                           ; BSR set to: 3
  5937  000AAC  35BC               	rlcf	(main@tmpVal2+1)& (0+255),w,b
  5938  000AAE  31BC               	rrcf	(main@tmpVal2+1)& (0+255),w,b
  5939  000AB0  6FA0               	movwf	(??_main+1)& (0+255),b
  5940  000AB2  31BB               	rrcf	main@tmpVal2& (0+255),w,b
  5941  000AB4  6F9F               	movwf	??_main& (0+255),b
  5942  000AB6  51BF               	movf	main@tmpVal& (0+255),w,b
  5943  000AB8  5D9F               	subwf	??_main& (0+255),w,b
  5944  000ABA  51A0               	movf	(??_main+1)& (0+255),w,b
  5945  000ABC  0A80               	xorlw	128
  5946  000ABE  6FA1               	movwf	(??_main+2)& (0+255),b
  5947  000AC0  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  5948  000AC2  0A80               	xorlw	128
  5949  000AC4  59A1               	subwfb	(??_main+2)& (0+255),w,b
  5950  000AC6  B0D8               	btfsc	status,0,c
  5951  000AC8  D0A7               	goto	l20528
  5952  000ACA                     u21840:
  5953                           
  5954                           ; BSR set to: 3
  5955                           ;main.c: 509:                                 ((tmpVal2 >> 1) < tmpVal))) {;main.c: 510:
      +                                                       LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
  5956  000ACA  94BA               	bcf	186,2,c	;volatile
  5957  000ACC  86BC               	bsf	188,3,c	;volatile
  5958                           
  5959                           ; BSR set to: 3
  5960                           ;main.c: 511:                             pInspVSet = 2;
  5961  000ACE  0E00               	movlw	0
  5962  000AD0  0101               	movlb	1	; () banked
  5963  000AD2  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  5964  000AD4  0E02               	movlw	2
  5965  000AD6  6FD7               	movwf	_pInspVSet& (0+255),b
  5966                           
  5967                           ;main.c: 512:                             OSCheckInt = 1;
  5968  000AD8  0E01               	movlw	1
  5969  000ADA  6FC1               	movwf	_OSCheckInt& (0+255),b
  5970                           
  5971                           ; BSR set to: 1
  5972                           ;main.c: 513:                             pPlatMax = pCtrl;
  5973  000ADC  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  5974  000AE0  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;main.c: 514:                             rVMedActuationTstamp = timeGet();
  5978  000AE4  ECFA  F050         	call	_timeGet	;wreg free
  5979  000AE8  0060  F24C  F19F   	movff	?_timeGet,_rVMedActuationTstamp
  5980  000AEE  0060  F250  F1A0   	movff	?_timeGet+1,_rVMedActuationTstamp+1
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;main.c: 515:                             rValveActuationTstamp = rVMedActuationTstamp;
  5984  000AF4  C19F  F1A1         	movff	_rVMedActuationTstamp,_rValveActuationTstamp
  5985  000AF8  C1A0  F1A2         	movff	_rVMedActuationTstamp+1,_rValveActuationTstamp+1
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;main.c: 516:                             pValveActuation = pCtrl;
  5989  000AFC  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  5990  000B00  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;main.c: 517:                             printf ("PI-MED T %d - Pi %d Pc %d Vol %3x OS 
      +                          %d RF %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))
      +                          *((int24_t) pCtrl))>>8)), vValveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInspOS3))>>8)), effectiveFlowRateInv);
  5994  000B04  0E47               	movlw	low STR_13
  5995  000B06  0101               	movlb	1	; () banked
  5996  000B08  6F46               	movwf	printf@fmt& (0+255),b
  5997  000B0A  0EFB               	movlw	high STR_13
  5998  000B0C  6F47               	movwf	(printf@fmt+1)& (0+255),b
  5999  000B0E  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6000  000B14  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6001  000B1A  ECFA  F050         	call	_timeGet	;wreg free
  6002  000B1E  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6003  000B24  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6004  000B2A  EC8C  F04C         	call	_timeDiff	;wreg free
  6005  000B2E  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  6006  000B34  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  6007  000B3A  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  6008  000B40  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6009  000B46  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6010  000B48  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6011  000B4A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6012  000B4C  0E45               	movlw	69
  6013  000B4E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6014  000B50  0E00               	movlw	0
  6015  000B52  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6016  000B54  0E00               	movlw	0
  6017  000B56  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6018  000B58  EC46  F049         	call	___tmul	;wreg free
  6019  000B5C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6020  000B62  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6021  000B68  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6022  000B6A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6023  000B6C  698D               	setf	(?___tmul+2)& (0+255),b
  6024  000B6E  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6025  000B74  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6026  000B7A  0060  F79C  F08B   	movff	_pCtrl,___tmul@multiplier
  6027  000B80  0060  F7A0  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6028  000B86  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6029  000B88  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6030  000B8A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6031  000B8C  0E45               	movlw	69
  6032  000B8E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6033  000B90  0E00               	movlw	0
  6034  000B92  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6035  000B94  0E00               	movlw	0
  6036  000B96  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6037  000B98  EC46  F049         	call	___tmul	;wreg free
  6038  000B9C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6039  000BA2  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6040  000BA8  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6041  000BAA  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6042  000BAC  698D               	setf	(?___tmul+2)& (0+255),b
  6043  000BAE  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6044  000BB4  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6045  000BBA  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  6046  000BC0  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  6047  000BC6  0060  F774  F08B   	movff	_pInspOS3,___tmul@multiplier
  6048  000BCC  0060  F778  F08C   	movff	_pInspOS3+1,___tmul@multiplier+1
  6049  000BD2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6050  000BD4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6051  000BD6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6052  000BD8  0E45               	movlw	69
  6053  000BDA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6054  000BDC  0E00               	movlw	0
  6055  000BDE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6056  000BE0  0E00               	movlw	0
  6057  000BE2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6058  000BE4  EC46  F049         	call	___tmul	;wreg free
  6059  000BE8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6060  000BEE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6061  000BF4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6062  000BF6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6063  000BF8  698D               	setf	(?___tmul+2)& (0+255),b
  6064  000BFA  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6065  000C00  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6066  000C06  0060  F744  F152   	movff	_effectiveFlowRateInv,?_printf+12
  6067  000C0C  0060  F748  F153   	movff	_effectiveFlowRateInv+1,?_printf+13
  6068  000C12  EC68  F04E         	call	_printf	;wreg free
  6069                           
  6070                           ;main.c: 518:                         } else if ((pInspVSet == 2) &&
  6071  000C16  D103               	goto	l20562
  6072  000C18                     l20528:
  6073  000C18  0E02               	movlw	2
  6074  000C1A  0101               	movlb	1	; () banked
  6075  000C1C  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6076  000C1E  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6077  000C20  A4D8               	btfss	status,2,c
  6078  000C22  D0FD               	goto	l20562
  6079                           
  6080                           ; BSR set to: 1
  6081  000C24  51DB               	movf	_pInspOS2& (0+255),w,b
  6082  000C26  25E7               	addwf	_pCtrl& (0+255),w,b
  6083  000C28  0103               	movlb	3	; () banked
  6084  000C2A  6F9F               	movwf	??_main& (0+255),b
  6085  000C2C  0101               	movlb	1	; () banked
  6086  000C2E  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  6087  000C30  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6088  000C32  0103               	movlb	3	; () banked
  6089  000C34  6FA0               	movwf	(??_main+1)& (0+255),b
  6090  000C36  0060  F7CC  F09B   	movff	_intMaxP,___wmul@multiplier
  6091  000C3C  0060  F7D0  F09C   	movff	_intMaxP+1,___wmul@multiplier+1
  6092  000C42  0E00               	movlw	0
  6093  000C44  0100               	movlb	0	; () banked
  6094  000C46  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6095  000C48  0E07               	movlw	7
  6096  000C4A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6097  000C4C  EC21  F04D         	call	___wmul	;wreg free
  6098  000C50  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6099  000C52  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6100  000C54  339B               	rrcf	?___wmul& (0+255),f,b
  6101  000C56  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6102  000C58  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6103  000C5A  339B               	rrcf	?___wmul& (0+255),f,b
  6104  000C5C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6105  000C5E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6106  000C60  339B               	rrcf	?___wmul& (0+255),f,b
  6107  000C62  0103               	movlb	3	; () banked
  6108  000C64  519F               	movf	??_main& (0+255),w,b
  6109  000C66  0100               	movlb	0	; () banked
  6110  000C68  5D9B               	subwf	?___wmul& (0+255),w,b
  6111  000C6A  519C               	movf	(?___wmul+1)& (0+255),w,b
  6112  000C6C  0A80               	xorlw	128
  6113  000C6E  0103               	movlb	3	; () banked
  6114  000C70  6FA1               	movwf	(??_main+2)& (0+255),b
  6115  000C72  51A0               	movf	(??_main+1)& (0+255),w,b
  6116  000C74  0A80               	xorlw	128
  6117  000C76  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6118  000C78  A0D8               	btfss	status,0,c
  6119  000C7A  D00A               	goto	u21870
  6120                           
  6121                           ; BSR set to: 3
  6122  000C7C  51BF               	movf	main@tmpVal& (0+255),w,b
  6123  000C7E  5DBB               	subwf	main@tmpVal2& (0+255),w,b
  6124  000C80  51BC               	movf	(main@tmpVal2+1)& (0+255),w,b
  6125  000C82  0A80               	xorlw	128
  6126  000C84  6F9F               	movwf	??_main& (0+255),b
  6127  000C86  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  6128  000C88  0A80               	xorlw	128
  6129  000C8A  599F               	subwfb	??_main& (0+255),w,b
  6130  000C8C  B0D8               	btfsc	status,0,c
  6131  000C8E  D0C7               	goto	l20562
  6132  000C90                     u21870:
  6133                           
  6134                           ; BSR set to: 3
  6135                           ;main.c: 520:                                 ((tmpVal2) < tmpVal))) {;main.c: 522:     
      +                                                  if (rSV2ValveCRT > rSV2ValveORT) {
  6136  000C90  0101               	movlb	1	; () banked
  6137  000C92  519B               	movf	_rSV2ValveCRT& (0+255),w,b
  6138  000C94  5D9D               	subwf	_rSV2ValveORT& (0+255),w,b
  6139  000C96  519C               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6140  000C98  599E               	subwfb	(_rSV2ValveORT+1)& (0+255),w,b
  6141  000C9A  B0D8               	btfsc	status,0,c
  6142  000C9C  D009               	goto	l1775
  6143                           
  6144                           ; BSR set to: 1
  6145                           ;main.c: 523:                                 LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  6146  000C9E  94BA               	bcf	186,2,c	;volatile
  6147  000CA0  96BC               	bcf	188,3,c	;volatile
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;main.c: 524:                                 T4PR = 4 + rSV2ValveCRT - rSV2ValveORT;
  6151  000CA2  519D               	movf	_rSV2ValveORT& (0+255),w,b
  6152  000CA4  5D9B               	subwf	_rSV2ValveCRT& (0+255),w,b
  6153  000CA6  0F04               	addlw	4
  6154  000CA8  6E9F               	movwf	159,c	;volatile
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;main.c: 525:                                 TMR4_Start();
  6158  000CAA  EC64  F052         	call	_TMR4_Start	;wreg free
  6159                           
  6160                           ;main.c: 526:                             } else {
  6161  000CAE  D002               	goto	l20542
  6162  000CB0                     l1775:
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;main.c: 527:                                 LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  6166  000CB0  84BA               	bsf	186,2,c	;volatile
  6167  000CB2  96BC               	bcf	188,3,c	;volatile
  6168  000CB4                     l20542:
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;main.c: 529:                             if (OSCheckInt && (pInspOS3 < intMaxP)) {
  6172  000CB4  51C1               	movf	_OSCheckInt& (0+255),w,b
  6173  000CB6  B4D8               	btfsc	status,2,c
  6174  000CB8  D014               	goto	l20548
  6175                           
  6176                           ; BSR set to: 1
  6177  000CBA  51F3               	movf	_intMaxP& (0+255),w,b
  6178  000CBC  5DDD               	subwf	_pInspOS3& (0+255),w,b
  6179  000CBE  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  6180  000CC0  0A80               	xorlw	128
  6181  000CC2  0103               	movlb	3	; () banked
  6182  000CC4  6F9F               	movwf	??_main& (0+255),b
  6183  000CC6  0101               	movlb	1	; () banked
  6184  000CC8  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6185  000CCA  0A80               	xorlw	128
  6186  000CCC  0103               	movlb	3	; () banked
  6187  000CCE  599F               	subwfb	??_main& (0+255),w,b
  6188  000CD0  B0D8               	btfsc	status,0,c
  6189  000CD2  D007               	goto	l20548
  6190                           
  6191                           ; BSR set to: 3
  6192                           ;main.c: 531:                                 pInspOS3 = pInspOS3 + ((int16_t) ((0.045*4
      +                          096+2)/5)*1);
  6193  000CD4  0E25               	movlw	37
  6194  000CD6  0101               	movlb	1	; () banked
  6195  000CD8  25DD               	addwf	_pInspOS3& (0+255),w,b
  6196  000CDA  6FDD               	movwf	_pInspOS3& (0+255),b
  6197  000CDC  0E00               	movlw	0
  6198  000CDE  21DE               	addwfc	(_pInspOS3+1)& (0+255),w,b
  6199  000CE0  6FDE               	movwf	(_pInspOS3+1)& (0+255),b
  6200  000CE2                     l20548:
  6201                           
  6202                           ;main.c: 533:                             pInspVSet = 1;
  6203  000CE2  0E00               	movlw	0
  6204  000CE4  0101               	movlb	1	; () banked
  6205  000CE6  6FD8               	movwf	(_pInspVSet+1)& (0+255),b
  6206  000CE8  0E01               	movlw	1
  6207  000CEA  6FD7               	movwf	_pInspVSet& (0+255),b
  6208                           
  6209                           ; BSR set to: 1
  6210                           ;main.c: 534:                             OSCheckInt = 1;
  6211  000CEC  0E01               	movlw	1
  6212  000CEE  6FC1               	movwf	_OSCheckInt& (0+255),b
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;main.c: 535:                             pPlatMax = pCtrl;
  6216  000CF0  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  6217  000CF4  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;main.c: 536:                             rVLowActuationTstamp = timeGet();
  6221  000CF8  ECFA  F050         	call	_timeGet	;wreg free
  6222  000CFC  0060  F24C  F0B8   	movff	?_timeGet,_rVLowActuationTstamp
  6223  000D02  0060  F250  F0B9   	movff	?_timeGet+1,_rVLowActuationTstamp+1
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;main.c: 537:                             rValveActuationTstamp = rVLowActuationTstamp;
  6227  000D08  C0B8  F1A1         	movff	_rVLowActuationTstamp,_rValveActuationTstamp
  6228  000D0C  C0B9  F1A2         	movff	_rVLowActuationTstamp+1,_rValveActuationTstamp+1
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;main.c: 538:                             pValveActuation = pCtrl;
  6232  000D10  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  6233  000D14  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;main.c: 539:                             printf ("PI-LOW T %d - Pi %d Pc %d Vol %d OS %
      +                          d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int2
      +                          4_t) pCtrl))>>8)), vValveActuation, ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))
      +                          *((int24_t) pInspOS2))>>8)));
  6237  000D18  0E76               	movlw	low STR_14
  6238  000D1A  0101               	movlb	1	; () banked
  6239  000D1C  6F46               	movwf	printf@fmt& (0+255),b
  6240  000D1E  0EFB               	movlw	high STR_14
  6241  000D20  6F47               	movwf	(printf@fmt+1)& (0+255),b
  6242  000D22  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6243  000D28  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6244  000D2E  ECFA  F050         	call	_timeGet	;wreg free
  6245  000D32  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6246  000D38  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6247  000D3E  EC8C  F04C         	call	_timeDiff	;wreg free
  6248  000D42  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  6249  000D48  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  6250  000D4E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  6251  000D54  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  6252  000D5A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6253  000D5C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6254  000D5E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6255  000D60  0E45               	movlw	69
  6256  000D62  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6257  000D64  0E00               	movlw	0
  6258  000D66  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6259  000D68  0E00               	movlw	0
  6260  000D6A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6261  000D6C  EC46  F049         	call	___tmul	;wreg free
  6262  000D70  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6263  000D76  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6264  000D7C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6265  000D7E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6266  000D80  698D               	setf	(?___tmul+2)& (0+255),b
  6267  000D82  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  6268  000D88  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  6269  000D8E  0060  F79C  F08B   	movff	_pCtrl,___tmul@multiplier
  6270  000D94  0060  F7A0  F08C   	movff	_pCtrl+1,___tmul@multiplier+1
  6271  000D9A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6272  000D9C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6273  000D9E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6274  000DA0  0E45               	movlw	69
  6275  000DA2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6276  000DA4  0E00               	movlw	0
  6277  000DA6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6278  000DA8  0E00               	movlw	0
  6279  000DAA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6280  000DAC  EC46  F049         	call	___tmul	;wreg free
  6281  000DB0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6282  000DB6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6283  000DBC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6284  000DBE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6285  000DC0  698D               	setf	(?___tmul+2)& (0+255),b
  6286  000DC2  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  6287  000DC8  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  6288  000DCE  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  6289  000DD4  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  6290  000DDA  0060  F76C  F08B   	movff	_pInspOS2,___tmul@multiplier
  6291  000DE0  0060  F770  F08C   	movff	_pInspOS2+1,___tmul@multiplier+1
  6292  000DE6  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  6293  000DE8  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  6294  000DEA  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  6295  000DEC  0E45               	movlw	69
  6296  000DEE  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  6297  000DF0  0E00               	movlw	0
  6298  000DF2  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  6299  000DF4  0E00               	movlw	0
  6300  000DF6  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  6301  000DF8  EC46  F049         	call	___tmul	;wreg free
  6302  000DFC  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  6303  000E02  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  6304  000E08  6B8D               	clrf	(?___tmul+2)& (0+255),b
  6305  000E0A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  6306  000E0C  698D               	setf	(?___tmul+2)& (0+255),b
  6307  000E0E  0060  F22C  F150   	movff	?___tmul,?_printf+10
  6308  000E14  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  6309  000E1A  EC68  F04E         	call	_printf	;wreg free
  6310  000E1E                     l20562:
  6311                           
  6312                           ;main.c: 542:                         if (pPlatMax < pCtrl) {
  6313  000E1E  0101               	movlb	1	; () banked
  6314  000E20  51E7               	movf	_pCtrl& (0+255),w,b
  6315  000E22  5DAB               	subwf	_pPlatMax& (0+255),w,b
  6316  000E24  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6317  000E26  0A80               	xorlw	128
  6318  000E28  0103               	movlb	3	; () banked
  6319  000E2A  6F9F               	movwf	??_main& (0+255),b
  6320  000E2C  0101               	movlb	1	; () banked
  6321  000E2E  51E8               	movf	(_pCtrl+1)& (0+255),w,b
  6322  000E30  0A80               	xorlw	128
  6323  000E32  0103               	movlb	3	; () banked
  6324  000E34  599F               	subwfb	??_main& (0+255),w,b
  6325  000E36  B0D8               	btfsc	status,0,c
  6326  000E38  D004               	goto	l20566
  6327                           
  6328                           ; BSR set to: 3
  6329                           ;main.c: 543:                             pPlatMax = pCtrl;
  6330  000E3A  C1E7  F1AB         	movff	_pCtrl,_pPlatMax
  6331  000E3E  C1E8  F1AC         	movff	_pCtrl+1,_pPlatMax+1
  6332  000E42                     l20566:
  6333                           
  6334                           ; BSR set to: 3
  6335                           ;main.c: 547:                         if (OSCheckInt) {
  6336  000E42  0101               	movlb	1	; () banked
  6337  000E44  51C1               	movf	_OSCheckInt& (0+255),w,b
  6338  000E46  B4D8               	btfsc	status,2,c
  6339  000E48  D0A7               	goto	l20586
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;main.c: 548:                             if (timeElapsed(rValveActuationTstamp, rSV2Val
      +                          veCRT + ((time_t) 15*1))) {
  6343  000E4A  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  6344  000E50  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  6345  000E56  0E0F               	movlw	15
  6346  000E58  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  6347  000E5A  0100               	movlb	0	; () banked
  6348  000E5C  6F95               	movwf	timeElapsed@duration& (0+255),b
  6349  000E5E  0E00               	movlw	0
  6350  000E60  0101               	movlb	1	; () banked
  6351  000E62  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  6352  000E64  0100               	movlb	0	; () banked
  6353  000E66  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6354  000E68  EC09  F04D         	call	_timeElapsed	;wreg free
  6355  000E6C  0900               	iorlw	0
  6356  000E6E  B4D8               	btfsc	status,2,c
  6357  000E70  D05F               	goto	l20580
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;main.c: 549:                                 OSCheckInt = 0;
  6361  000E72  0E00               	movlw	0
  6362  000E74  0101               	movlb	1	; () banked
  6363  000E76  6FC1               	movwf	_OSCheckInt& (0+255),b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;main.c: 550:                                 if (pInspVSet == 2) {
  6367  000E78  0E02               	movlw	2
  6368  000E7A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6369  000E7C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6370  000E7E  A4D8               	btfss	status,2,c
  6371  000E80  D02A               	goto	l20576
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;main.c: 552:                                     pInspOS3 = (3 * pInspOS3 + pPlatMax - 
      +                          pValveActuation) >> 2;
  6375  000E82  0060  F774  F09B   	movff	_pInspOS3,___wmul@multiplier
  6376  000E88  0060  F778  F09C   	movff	_pInspOS3+1,___wmul@multiplier+1
  6377  000E8E  0E00               	movlw	0
  6378  000E90  0100               	movlb	0	; () banked
  6379  000E92  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6380  000E94  0E03               	movlw	3
  6381  000E96  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6382  000E98  EC21  F04D         	call	___wmul	;wreg free
  6383  000E9C  0101               	movlb	1	; () banked
  6384  000E9E  51E5               	movf	_pValveActuation& (0+255),w,b
  6385  000EA0  0100               	movlb	0	; () banked
  6386  000EA2  5F9B               	subwf	?___wmul& (0+255),f,b
  6387  000EA4  0101               	movlb	1	; () banked
  6388  000EA6  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  6389  000EA8  0100               	movlb	0	; () banked
  6390  000EAA  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6391  000EAC  0101               	movlb	1	; () banked
  6392  000EAE  51AB               	movf	_pPlatMax& (0+255),w,b
  6393  000EB0  0100               	movlb	0	; () banked
  6394  000EB2  279B               	addwf	?___wmul& (0+255),f,b
  6395  000EB4  0101               	movlb	1	; () banked
  6396  000EB6  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6397  000EB8  0100               	movlb	0	; () banked
  6398  000EBA  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6399  000EBC  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6400  000EBE  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6401  000EC0  339B               	rrcf	?___wmul& (0+255),f,b
  6402  000EC2  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6403  000EC4  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6404  000EC6  339B               	rrcf	?___wmul& (0+255),f,b
  6405  000EC8  0060  F26C  F1DD   	movff	?___wmul,_pInspOS3
  6406  000ECE  0060  F270  F1DE   	movff	?___wmul+1,_pInspOS3+1
  6407                           
  6408                           ;main.c: 553:                                 } else if (pInspVSet == 1) {
  6409  000ED4  D02D               	goto	l20580
  6410  000ED6                     l20576:
  6411                           
  6412                           ; BSR set to: 1
  6413  000ED6  05D7               	decf	_pInspVSet& (0+255),w,b
  6414  000ED8  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6415  000EDA  A4D8               	btfss	status,2,c
  6416  000EDC  D029               	goto	l20580
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;main.c: 555:                                     pInspOS2 = (3 * pInspOS2 + pPlatMax - 
      +                          pValveActuation) >> 2;
  6420  000EDE  0060  F76C  F09B   	movff	_pInspOS2,___wmul@multiplier
  6421  000EE4  0060  F770  F09C   	movff	_pInspOS2+1,___wmul@multiplier+1
  6422  000EEA  0E00               	movlw	0
  6423  000EEC  0100               	movlb	0	; () banked
  6424  000EEE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6425  000EF0  0E03               	movlw	3
  6426  000EF2  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6427  000EF4  EC21  F04D         	call	___wmul	;wreg free
  6428  000EF8  0101               	movlb	1	; () banked
  6429  000EFA  51E5               	movf	_pValveActuation& (0+255),w,b
  6430  000EFC  0100               	movlb	0	; () banked
  6431  000EFE  5F9B               	subwf	?___wmul& (0+255),f,b
  6432  000F00  0101               	movlb	1	; () banked
  6433  000F02  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  6434  000F04  0100               	movlb	0	; () banked
  6435  000F06  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
  6436  000F08  0101               	movlb	1	; () banked
  6437  000F0A  51AB               	movf	_pPlatMax& (0+255),w,b
  6438  000F0C  0100               	movlb	0	; () banked
  6439  000F0E  279B               	addwf	?___wmul& (0+255),f,b
  6440  000F10  0101               	movlb	1	; () banked
  6441  000F12  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  6442  000F14  0100               	movlb	0	; () banked
  6443  000F16  239C               	addwfc	(?___wmul+1)& (0+255),f,b
  6444  000F18  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6445  000F1A  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6446  000F1C  339B               	rrcf	?___wmul& (0+255),f,b
  6447  000F1E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6448  000F20  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6449  000F22  339B               	rrcf	?___wmul& (0+255),f,b
  6450  000F24  0060  F26C  F1DB   	movff	?___wmul,_pInspOS2
  6451  000F2A  0060  F270  F1DC   	movff	?___wmul+1,_pInspOS2+1
  6452  000F30                     l20580:
  6453                           
  6454                           ;main.c: 559:                             pInspOSScale = 0;
  6455  000F30  0E00               	movlw	0
  6456  000F32  0103               	movlb	3	; () banked
  6457  000F34  6FBE               	movwf	(main@pInspOSScale+1)& (0+255),b
  6458  000F36  0E00               	movlw	0
  6459  000F38  6FBD               	movwf	main@pInspOSScale& (0+255),b
  6460                           
  6461                           ; BSR set to: 3
  6462                           ;main.c: 560:                             vInspOSScale = (5 * (1 + pInspVSet) * vInspOS)
      +                           >> 4;
  6463  000F3A  0E01               	movlw	1
  6464  000F3C  0101               	movlb	1	; () banked
  6465  000F3E  25D7               	addwf	_pInspVSet& (0+255),w,b
  6466  000F40  0100               	movlb	0	; () banked
  6467  000F42  6F9B               	movwf	___wmul@multiplier& (0+255),b
  6468  000F44  0E00               	movlw	0
  6469  000F46  0101               	movlb	1	; () banked
  6470  000F48  21D8               	addwfc	(_pInspVSet+1)& (0+255),w,b
  6471  000F4A  0100               	movlb	0	; () banked
  6472  000F4C  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  6473  000F4E  0060  F764  F09D   	movff	_vInspOS,___wmul@multiplicand
  6474  000F54  0060  F768  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6475  000F5A  EC21  F04D         	call	___wmul	;wreg free
  6476  000F5E  0060  F26C  F3B9   	movff	?___wmul,_main$6101
  6477  000F64  0060  F270  F3BA   	movff	?___wmul+1,_main$6101+1
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;main.c: 560:                             vInspOSScale = (5 * (1 + pInspVSet) * vInspOS)
      +                           >> 4;
  6481  000F6A  0060  FEE4  F09B   	movff	_main$6101,___wmul@multiplier
  6482  000F70  0060  FEE8  F09C   	movff	_main$6101+1,___wmul@multiplier+1
  6483  000F76  0E00               	movlw	0
  6484  000F78  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6485  000F7A  0E05               	movlw	5
  6486  000F7C  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6487  000F7E  EC21  F04D         	call	___wmul	;wreg free
  6488  000F82  0E04               	movlw	4
  6489  000F84  0103               	movlb	3	; () banked
  6490  000F86  6F9F               	movwf	??_main& (0+255),b
  6491  000F88                     u21965:
  6492  000F88  0100               	movlb	0	; () banked
  6493  000F8A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6494  000F8C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6495  000F8E  339B               	rrcf	?___wmul& (0+255),f,b
  6496  000F90  0103               	movlb	3	; () banked
  6497  000F92  2F9F               	decfsz	??_main& (0+255),f,b
  6498  000F94  D7F9               	goto	u21965
  6499  000F96  D072               	goto	L1
  6500  000F98                     l20586:
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;main.c: 562:                             if (pInspVSet == 3) {
  6504  000F98  0E03               	movlw	3
  6505  000F9A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6506  000F9C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6507  000F9E  A4D8               	btfss	status,2,c
  6508  000FA0  D007               	goto	l20590
  6509                           
  6510                           ; BSR set to: 1
  6511                           ;main.c: 563:                                 pInspOSScale = pInspOS3;
  6512  000FA2  0060  F774  F3BD   	movff	_pInspOS3,main@pInspOSScale
  6513  000FA8  0060  F778  F3BE   	movff	_pInspOS3+1,main@pInspOSScale+1
  6514                           
  6515                           ;main.c: 564:                             } else if (pInspVSet == 2) {
  6516  000FAE  D03C               	goto	l1786
  6517  000FB0                     l20590:
  6518                           
  6519                           ; BSR set to: 1
  6520  000FB0  0E02               	movlw	2
  6521  000FB2  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6522  000FB4  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6523  000FB6  A4D8               	btfss	status,2,c
  6524  000FB8  D007               	goto	l20594
  6525                           
  6526                           ; BSR set to: 1
  6527                           ;main.c: 565:                                 pInspOSScale = pInspOS2;
  6528  000FBA  0060  F76C  F3BD   	movff	_pInspOS2,main@pInspOSScale
  6529  000FC0  0060  F770  F3BE   	movff	_pInspOS2+1,main@pInspOSScale+1
  6530                           
  6531                           ;main.c: 566:                             } else {
  6532  000FC6  D030               	goto	l1786
  6533  000FC8                     l20594:
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;main.c: 567:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6537  000FC8  0060  F75C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6538  000FCE  0060  F760  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6539  000FD4  0060  F340  F09D   	movff	_pInspOS,___wmul@multiplicand
  6540  000FDA  0060  F344  F09E   	movff	_pInspOS+1,___wmul@multiplicand+1
  6541  000FE0  EC21  F04D         	call	___wmul	;wreg free
  6542  000FE4  0060  F26C  F3B9   	movff	?___wmul,_main$6101
  6543  000FEA  0060  F270  F3BA   	movff	?___wmul+1,_main$6101+1
  6544                           
  6545                           ;main.c: 567:                                 pInspOSScale = (5 * pInspVSet * pInspOS) >
      +                          > 4;
  6546  000FF0  0060  FEE4  F09B   	movff	_main$6101,___wmul@multiplier
  6547  000FF6  0060  FEE8  F09C   	movff	_main$6101+1,___wmul@multiplier+1
  6548  000FFC  0E00               	movlw	0
  6549  000FFE  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6550  001000  0E05               	movlw	5
  6551  001002  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6552  001004  EC21  F04D         	call	___wmul	;wreg free
  6553  001008  0E04               	movlw	4
  6554  00100A  0103               	movlb	3	; () banked
  6555  00100C  6F9F               	movwf	??_main& (0+255),b
  6556  00100E                     u21995:
  6557  00100E  0100               	movlb	0	; () banked
  6558  001010  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6559  001012  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6560  001014  339B               	rrcf	?___wmul& (0+255),f,b
  6561  001016  0103               	movlb	3	; () banked
  6562  001018  2F9F               	decfsz	??_main& (0+255),f,b
  6563  00101A  D7F9               	goto	u21995
  6564  00101C  0060  F26C  F3BD   	movff	?___wmul,main@pInspOSScale
  6565  001022  0060  F270  F3BE   	movff	?___wmul+1,main@pInspOSScale+1
  6566  001028                     l1786:
  6567                           
  6568                           ;main.c: 569:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6569  001028  0060  F75C  F09B   	movff	_pInspVSet,___wmul@multiplier
  6570  00102E  0060  F760  F09C   	movff	_pInspVSet+1,___wmul@multiplier+1
  6571  001034  0060  F764  F09D   	movff	_vInspOS,___wmul@multiplicand
  6572  00103A  0060  F768  F09E   	movff	_vInspOS+1,___wmul@multiplicand+1
  6573  001040  EC21  F04D         	call	___wmul	;wreg free
  6574  001044  0060  F26C  F3B9   	movff	?___wmul,_main$6101
  6575  00104A  0060  F270  F3BA   	movff	?___wmul+1,_main$6101+1
  6576                           
  6577                           ;main.c: 569:                             vInspOSScale = (5 * pInspVSet * vInspOS) >> 4;
  6578  001050  0060  FEE4  F09B   	movff	_main$6101,___wmul@multiplier
  6579  001056  0060  FEE8  F09C   	movff	_main$6101+1,___wmul@multiplier+1
  6580  00105C  0E00               	movlw	0
  6581  00105E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6582  001060  0E05               	movlw	5
  6583  001062  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  6584  001064  EC21  F04D         	call	___wmul	;wreg free
  6585  001068  0E04               	movlw	4
  6586  00106A  0103               	movlb	3	; () banked
  6587  00106C  6F9F               	movwf	??_main& (0+255),b
  6588  00106E                     u22005:
  6589  00106E  0100               	movlb	0	; () banked
  6590  001070  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  6591  001072  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  6592  001074  339B               	rrcf	?___wmul& (0+255),f,b
  6593  001076  0103               	movlb	3	; () banked
  6594  001078  2F9F               	decfsz	??_main& (0+255),f,b
  6595  00107A  D7F9               	goto	u22005
  6596  00107C                     L1:
  6597  00107C  0060  F26C  F3B2   	movff	?___wmul,main@vInspOSScale
  6598  001082  0060  F270  F3B3   	movff	?___wmul+1,main@vInspOSScale+1
  6599                           
  6600                           ; BSR set to: 3
  6601                           ;main.c: 573:                         if (timeElapsed(rCycleTime, intIDuration - rSV2Val
      +                          veCRT - ((time_t) 20*1)) ||
  6602  001088  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  6603  00108E  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  6604  001094  0101               	movlb	1	; () banked
  6605  001096  519B               	movf	_rSV2ValveCRT& (0+255),w,b
  6606  001098  5DAF               	subwf	_intIDuration& (0+255),w,b
  6607  00109A  0103               	movlb	3	; () banked
  6608  00109C  6F9F               	movwf	??_main& (0+255),b
  6609  00109E  0101               	movlb	1	; () banked
  6610  0010A0  519C               	movf	(_rSV2ValveCRT+1)& (0+255),w,b
  6611  0010A2  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  6612  0010A4  0103               	movlb	3	; () banked
  6613  0010A6  6FA0               	movwf	(??_main+1)& (0+255),b
  6614  0010A8  0EEC               	movlw	236
  6615  0010AA  259F               	addwf	??_main& (0+255),w,b
  6616  0010AC  0100               	movlb	0	; () banked
  6617  0010AE  6F95               	movwf	timeElapsed@duration& (0+255),b
  6618  0010B0  0EFF               	movlw	255
  6619  0010B2  0103               	movlb	3	; () banked
  6620  0010B4  21A0               	addwfc	(??_main+1)& (0+255),w,b
  6621  0010B6  0100               	movlb	0	; () banked
  6622  0010B8  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  6623  0010BA  EC09  F04D         	call	_timeElapsed	;wreg free
  6624  0010BE  0900               	iorlw	0
  6625  0010C0  A4D8               	btfss	status,2,c
  6626  0010C2  D08E               	goto	u22090
  6627                           
  6628                           ; BSR set to: 0
  6629  0010C4  0E4A               	movlw	74
  6630  0010C6  0101               	movlb	1	; () banked
  6631  0010C8  25F3               	addwf	_intMaxP& (0+255),w,b
  6632  0010CA  0103               	movlb	3	; () banked
  6633  0010CC  6F9F               	movwf	??_main& (0+255),b
  6634  0010CE  0E00               	movlw	0
  6635  0010D0  0101               	movlb	1	; () banked
  6636  0010D2  21F4               	addwfc	(_intMaxP+1)& (0+255),w,b
  6637  0010D4  0103               	movlb	3	; () banked
  6638  0010D6  6FA0               	movwf	(??_main+1)& (0+255),b
  6639  0010D8  0101               	movlb	1	; () banked
  6640  0010DA  51EF               	movf	_pInst& (0+255),w,b
  6641  0010DC  0103               	movlb	3	; () banked
  6642  0010DE  5D9F               	subwf	??_main& (0+255),w,b
  6643  0010E0  51A0               	movf	(??_main+1)& (0+255),w,b
  6644  0010E2  0A80               	xorlw	128
  6645  0010E4  6FA1               	movwf	(??_main+2)& (0+255),b
  6646  0010E6  0101               	movlb	1	; () banked
  6647  0010E8  51F0               	movf	(_pInst+1)& (0+255),w,b
  6648  0010EA  0A80               	xorlw	128
  6649  0010EC  0103               	movlb	3	; () banked
  6650  0010EE  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6651  0010F0  A0D8               	btfss	status,0,c
  6652  0010F2  D076               	goto	u22090
  6653                           
  6654                           ; BSR set to: 3
  6655  0010F4  0101               	movlb	1	; () banked
  6656  0010F6  51E7               	movf	_pCtrl& (0+255),w,b
  6657  0010F8  5DF3               	subwf	_intMaxP& (0+255),w,b
  6658  0010FA  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6659  0010FC  0A80               	xorlw	128
  6660  0010FE  0103               	movlb	3	; () banked
  6661  001100  6F9F               	movwf	??_main& (0+255),b
  6662  001102  0101               	movlb	1	; () banked
  6663  001104  51E8               	movf	(_pCtrl+1)& (0+255),w,b
  6664  001106  0A80               	xorlw	128
  6665  001108  0103               	movlb	3	; () banked
  6666  00110A  599F               	subwfb	??_main& (0+255),w,b
  6667  00110C  A0D8               	btfss	status,0,c
  6668  00110E  D068               	goto	u22090
  6669                           
  6670                           ; BSR set to: 3
  6671  001110  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6672  001112  0101               	movlb	1	; () banked
  6673  001114  25E7               	addwf	_pCtrl& (0+255),w,b
  6674  001116  0103               	movlb	3	; () banked
  6675  001118  6F9F               	movwf	??_main& (0+255),b
  6676  00111A  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6677  00111C  0101               	movlb	1	; () banked
  6678  00111E  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6679  001120  0103               	movlb	3	; () banked
  6680  001122  6FA0               	movwf	(??_main+1)& (0+255),b
  6681  001124  519F               	movf	??_main& (0+255),w,b
  6682  001126  0101               	movlb	1	; () banked
  6683  001128  5DF3               	subwf	_intMaxP& (0+255),w,b
  6684  00112A  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6685  00112C  0A80               	xorlw	128
  6686  00112E  0103               	movlb	3	; () banked
  6687  001130  6FA1               	movwf	(??_main+2)& (0+255),b
  6688  001132  51A0               	movf	(??_main+1)& (0+255),w,b
  6689  001134  0A80               	xorlw	128
  6690  001136  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6691  001138  A0D8               	btfss	status,0,c
  6692  00113A  D052               	goto	u22090
  6693                           
  6694                           ; BSR set to: 3
  6695  00113C  0101               	movlb	1	; () banked
  6696  00113E  51CA               	movf	_intVentMode& (0+255),w,b
  6697  001140  A4D8               	btfss	status,2,c
  6698  001142  D02F               	goto	u22070
  6699                           
  6700                           ; BSR set to: 1
  6701  001144  0103               	movlb	3	; () banked
  6702  001146  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6703  001148  0101               	movlb	1	; () banked
  6704  00114A  25E7               	addwf	_pCtrl& (0+255),w,b
  6705  00114C  0103               	movlb	3	; () banked
  6706  00114E  6F9F               	movwf	??_main& (0+255),b
  6707  001150  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6708  001152  0101               	movlb	1	; () banked
  6709  001154  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6710  001156  0103               	movlb	3	; () banked
  6711  001158  6FA0               	movwf	(??_main+1)& (0+255),b
  6712  00115A  519F               	movf	??_main& (0+255),w,b
  6713  00115C  0101               	movlb	1	; () banked
  6714  00115E  5DB3               	subwf	_intIP& (0+255),w,b
  6715  001160  51B4               	movf	(_intIP+1)& (0+255),w,b
  6716  001162  0A80               	xorlw	128
  6717  001164  0103               	movlb	3	; () banked
  6718  001166  6FA1               	movwf	(??_main+2)& (0+255),b
  6719  001168  51A0               	movf	(??_main+1)& (0+255),w,b
  6720  00116A  0A80               	xorlw	128
  6721  00116C  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6722  00116E  B0D8               	btfsc	status,0,c
  6723  001170  D018               	goto	u22070
  6724                           
  6725                           ; BSR set to: 3
  6726  001172  51B2               	movf	main@vInspOSScale& (0+255),w,b
  6727  001174  0101               	movlb	1	; () banked
  6728  001176  25A7               	addwf	_vValveActuation& (0+255),w,b
  6729  001178  0103               	movlb	3	; () banked
  6730  00117A  6F9F               	movwf	??_main& (0+255),b
  6731  00117C  51B3               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6732  00117E  0101               	movlb	1	; () banked
  6733  001180  21A8               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6734  001182  0103               	movlb	3	; () banked
  6735  001184  6FA0               	movwf	(??_main+1)& (0+255),b
  6736  001186  0101               	movlb	1	; () banked
  6737  001188  51F1               	movf	_intMaxV& (0+255),w,b
  6738  00118A  0103               	movlb	3	; () banked
  6739  00118C  5D9F               	subwf	??_main& (0+255),w,b
  6740  00118E  51A0               	movf	(??_main+1)& (0+255),w,b
  6741  001190  0A80               	xorlw	128
  6742  001192  6FA1               	movwf	(??_main+2)& (0+255),b
  6743  001194  0101               	movlb	1	; () banked
  6744  001196  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  6745  001198  0A80               	xorlw	128
  6746  00119A  0103               	movlb	3	; () banked
  6747  00119C  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6748  00119E  B0D8               	btfsc	status,0,c
  6749  0011A0  D01F               	goto	u22090
  6750  0011A2                     u22070:
  6751  0011A2  0101               	movlb	1	; () banked
  6752  0011A4  05CA               	decf	_intVentMode& (0+255),w,b
  6753  0011A6  A4D8               	btfss	status,2,c
  6754  0011A8  EF59  F00E         	goto	l20796
  6755                           
  6756                           ; BSR set to: 1
  6757  0011AC  0103               	movlb	3	; () banked
  6758  0011AE  51B2               	movf	main@vInspOSScale& (0+255),w,b
  6759  0011B0  0101               	movlb	1	; () banked
  6760  0011B2  25A7               	addwf	_vValveActuation& (0+255),w,b
  6761  0011B4  0103               	movlb	3	; () banked
  6762  0011B6  6F9F               	movwf	??_main& (0+255),b
  6763  0011B8  51B3               	movf	(main@vInspOSScale+1)& (0+255),w,b
  6764  0011BA  0101               	movlb	1	; () banked
  6765  0011BC  21A8               	addwfc	(_vValveActuation+1)& (0+255),w,b
  6766  0011BE  0103               	movlb	3	; () banked
  6767  0011C0  6FA0               	movwf	(??_main+1)& (0+255),b
  6768  0011C2  0101               	movlb	1	; () banked
  6769  0011C4  51F1               	movf	_intMaxV& (0+255),w,b
  6770  0011C6  0103               	movlb	3	; () banked
  6771  0011C8  5D9F               	subwf	??_main& (0+255),w,b
  6772  0011CA  51A0               	movf	(??_main+1)& (0+255),w,b
  6773  0011CC  0A80               	xorlw	128
  6774  0011CE  6FA1               	movwf	(??_main+2)& (0+255),b
  6775  0011D0  0101               	movlb	1	; () banked
  6776  0011D2  51F2               	movf	(_intMaxV+1)& (0+255),w,b
  6777  0011D4  0A80               	xorlw	128
  6778  0011D6  0103               	movlb	3	; () banked
  6779  0011D8  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6780  0011DA  A0D8               	btfss	status,0,c
  6781  0011DC  EF59  F00E         	goto	l20796
  6782  0011E0                     u22090:
  6783                           
  6784                           ;main.c: 578:                                 ((intVentMode == VMODE_VOLUME) && ((vValve
      +                          Actuation + vInspOSScale) >= intMaxV))) {;main.c: 579:                             LATAb
      +                          its.LATA2 = 0;LATCbits.LATC3 = 0;
  6785  0011E0  94BA               	bcf	186,2,c	;volatile
  6786  0011E2  96BC               	bcf	188,3,c	;volatile
  6787                           
  6788                           ;main.c: 580:                             sv2DelayCheck = 1;
  6789  0011E4  0E01               	movlw	1
  6790  0011E6  0101               	movlb	1	; () banked
  6791  0011E8  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  6792                           
  6793                           ; BSR set to: 1
  6794                           ;main.c: 581:                             pValveActuation = pCtrl;
  6795  0011EA  C1E7  F1E5         	movff	_pCtrl,_pValveActuation
  6796  0011EE  C1E8  F1E6         	movff	_pCtrl+1,_pValveActuation+1
  6797                           
  6798                           ;main.c: 582:                             initInspSubState = 0;
  6799  0011F2  0E00               	movlw	0
  6800  0011F4  6FC6               	movwf	_initInspSubState& (0+255),b
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;main.c: 583:                             rValveActuationTstamp = timeGet();
  6804  0011F6  ECFA  F050         	call	_timeGet	;wreg free
  6805  0011FA  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  6806  001200  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;main.c: 584:                             rValveDelayStart = rValveActuationTstamp;
  6810  001206  C1A1  F197         	movff	_rValveActuationTstamp,_rValveDelayStart
  6811  00120A  C1A2  F198         	movff	_rValveActuationTstamp+1,_rValveDelayStart+1
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;main.c: 585:                             tInsp = timeDiff(rCycleTime, rValveActuationTs
      +                          tamp);
  6815  00120E  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  6816  001214  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  6817  00121A  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  6818  001220  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  6819  001226  EC8C  F04C         	call	_timeDiff	;wreg free
  6820  00122A  0060  F254  F23C   	movff	?_timeDiff,_tInsp
  6821  001230  0060  F258  F23D   	movff	?_timeDiff+1,_tInsp+1
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;main.c: 591:                             OSCheck = 1;
  6825  001236  0E01               	movlw	1
  6826  001238  0101               	movlb	1	; () banked
  6827  00123A  6FC3               	movwf	_OSCheck& (0+255),b
  6828                           
  6829                           ; BSR set to: 1
  6830                           ;main.c: 592:                             pPlatMax = pInst;
  6831  00123C  C1EF  F1AB         	movff	_pInst,_pPlatMax
  6832  001240  C1F0  F1AC         	movff	_pInst+1,_pPlatMax+1
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;main.c: 593:                             if (((pInspVSet != 1) || OSCheckInt) && ((pIns
      +                          t > intMaxP) || ((pCtrl + pInspOSScale) > intMaxP))) {
  6836  001244  05D7               	decf	_pInspVSet& (0+255),w,b
  6837  001246  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6838  001248  A4D8               	btfss	status,2,c
  6839  00124A  D003               	goto	u22110
  6840                           
  6841                           ; BSR set to: 1
  6842  00124C  51C1               	movf	_OSCheckInt& (0+255),w,b
  6843  00124E  B4D8               	btfsc	status,2,c
  6844  001250  D054               	goto	l20648
  6845  001252                     u22110:
  6846                           
  6847                           ; BSR set to: 1
  6848  001252  51EF               	movf	_pInst& (0+255),w,b
  6849  001254  5DF3               	subwf	_intMaxP& (0+255),w,b
  6850  001256  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6851  001258  0A80               	xorlw	128
  6852  00125A  0103               	movlb	3	; () banked
  6853  00125C  6F9F               	movwf	??_main& (0+255),b
  6854  00125E  0101               	movlb	1	; () banked
  6855  001260  51F0               	movf	(_pInst+1)& (0+255),w,b
  6856  001262  0A80               	xorlw	128
  6857  001264  0103               	movlb	3	; () banked
  6858  001266  599F               	subwfb	??_main& (0+255),w,b
  6859  001268  A0D8               	btfss	status,0,c
  6860  00126A  D016               	goto	u22130
  6861                           
  6862                           ; BSR set to: 3
  6863  00126C  51BD               	movf	main@pInspOSScale& (0+255),w,b
  6864  00126E  0101               	movlb	1	; () banked
  6865  001270  25E7               	addwf	_pCtrl& (0+255),w,b
  6866  001272  0103               	movlb	3	; () banked
  6867  001274  6F9F               	movwf	??_main& (0+255),b
  6868  001276  51BE               	movf	(main@pInspOSScale+1)& (0+255),w,b
  6869  001278  0101               	movlb	1	; () banked
  6870  00127A  21E8               	addwfc	(_pCtrl+1)& (0+255),w,b
  6871  00127C  0103               	movlb	3	; () banked
  6872  00127E  6FA0               	movwf	(??_main+1)& (0+255),b
  6873  001280  519F               	movf	??_main& (0+255),w,b
  6874  001282  0101               	movlb	1	; () banked
  6875  001284  5DF3               	subwf	_intMaxP& (0+255),w,b
  6876  001286  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6877  001288  0A80               	xorlw	128
  6878  00128A  0103               	movlb	3	; () banked
  6879  00128C  6FA1               	movwf	(??_main+2)& (0+255),b
  6880  00128E  51A0               	movf	(??_main+1)& (0+255),w,b
  6881  001290  0A80               	xorlw	128
  6882  001292  59A1               	subwfb	(??_main+2)& (0+255),w,b
  6883  001294  B0D8               	btfsc	status,0,c
  6884  001296  D031               	goto	l20648
  6885  001298                     u22130:
  6886                           
  6887                           ; BSR set to: 3
  6888                           ;main.c: 596:                                 if ((pInspOS3 < intMaxP) && ((pInspVSet ==
      +                           2) || (pInspVSet == 3))) {
  6889  001298  0101               	movlb	1	; () banked
  6890  00129A  51F3               	movf	_intMaxP& (0+255),w,b
  6891  00129C  5DDD               	subwf	_pInspOS3& (0+255),w,b
  6892  00129E  51DE               	movf	(_pInspOS3+1)& (0+255),w,b
  6893  0012A0  0A80               	xorlw	128
  6894  0012A2  0103               	movlb	3	; () banked
  6895  0012A4  6F9F               	movwf	??_main& (0+255),b
  6896  0012A6  0101               	movlb	1	; () banked
  6897  0012A8  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6898  0012AA  0A80               	xorlw	128
  6899  0012AC  0103               	movlb	3	; () banked
  6900  0012AE  599F               	subwfb	??_main& (0+255),w,b
  6901  0012B0  B0D8               	btfsc	status,0,c
  6902  0012B2  D010               	goto	l20644
  6903                           
  6904                           ; BSR set to: 3
  6905  0012B4  0E02               	movlw	2
  6906  0012B6  0101               	movlb	1	; () banked
  6907  0012B8  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6908  0012BA  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6909  0012BC  B4D8               	btfsc	status,2,c
  6910  0012BE  D005               	goto	u22160
  6911                           
  6912                           ; BSR set to: 1
  6913  0012C0  0E03               	movlw	3
  6914  0012C2  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6915  0012C4  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6916  0012C6  A4D8               	btfss	status,2,c
  6917  0012C8  D005               	goto	l20644
  6918  0012CA                     u22160:
  6919                           
  6920                           ; BSR set to: 1
  6921                           ;main.c: 597:                                     pInspOS3 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  6922  0012CA  0EB9               	movlw	185
  6923  0012CC  27DD               	addwf	_pInspOS3& (0+255),f,b
  6924  0012CE  0E00               	movlw	0
  6925  0012D0  23DE               	addwfc	(_pInspOS3+1)& (0+255),f,b
  6926                           
  6927                           ;main.c: 598:                                 } else if (pInspOS2 < intMaxP) {
  6928  0012D2  D013               	goto	l20648
  6929  0012D4                     l20644:
  6930  0012D4  0101               	movlb	1	; () banked
  6931  0012D6  51F3               	movf	_intMaxP& (0+255),w,b
  6932  0012D8  5DDB               	subwf	_pInspOS2& (0+255),w,b
  6933  0012DA  51DC               	movf	(_pInspOS2+1)& (0+255),w,b
  6934  0012DC  0A80               	xorlw	128
  6935  0012DE  0103               	movlb	3	; () banked
  6936  0012E0  6F9F               	movwf	??_main& (0+255),b
  6937  0012E2  0101               	movlb	1	; () banked
  6938  0012E4  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  6939  0012E6  0A80               	xorlw	128
  6940  0012E8  0103               	movlb	3	; () banked
  6941  0012EA  599F               	subwfb	??_main& (0+255),w,b
  6942  0012EC  B0D8               	btfsc	status,0,c
  6943  0012EE  D005               	goto	l20648
  6944                           
  6945                           ; BSR set to: 3
  6946                           ;main.c: 599:                                     pInspOS2 += ((int16_t) ((0.045*4096+2)
      +                          /5)*5);
  6947  0012F0  0EB9               	movlw	185
  6948  0012F2  0101               	movlb	1	; () banked
  6949  0012F4  27DB               	addwf	_pInspOS2& (0+255),f,b
  6950  0012F6  0E00               	movlw	0
  6951  0012F8  23DC               	addwfc	(_pInspOS2+1)& (0+255),f,b
  6952  0012FA                     l20648:
  6953                           
  6954                           ;main.c: 603:                             if (OSCheckInt) {
  6955  0012FA  0101               	movlb	1	; () banked
  6956  0012FC  51C1               	movf	_OSCheckInt& (0+255),w,b
  6957  0012FE  B4D8               	btfsc	status,2,c
  6958  001300  D00A               	goto	l1804
  6959                           
  6960                           ; BSR set to: 1
  6961                           ;main.c: 604:                                 pInspOSVSet = pInspVSet + 1;
  6962  001302  0E01               	movlw	1
  6963  001304  25D7               	addwf	_pInspVSet& (0+255),w,b
  6964  001306  0102               	movlb	2	; () banked
  6965  001308  6F40               	movwf	_pInspOSVSet& (0+255),b
  6966  00130A  0E00               	movlw	0
  6967  00130C  0101               	movlb	1	; () banked
  6968  00130E  21D8               	addwfc	(_pInspVSet+1)& (0+255),w,b
  6969  001310  0102               	movlb	2	; () banked
  6970  001312  6F41               	movwf	(_pInspOSVSet+1)& (0+255),b
  6971                           
  6972                           ;main.c: 605:                             } else {
  6973  001314  D004               	goto	l20652
  6974  001316                     l1804:
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;main.c: 606:                                 pInspOSVSet = pInspVSet;
  6978  001316  C1D7  F240         	movff	_pInspVSet,_pInspOSVSet
  6979  00131A  C1D8  F241         	movff	_pInspVSet+1,_pInspOSVSet+1
  6980  00131E                     l20652:
  6981                           
  6982                           ;main.c: 609:                             if (pInspVSet == 3) {
  6983  00131E  0E03               	movlw	3
  6984  001320  0101               	movlb	1	; () banked
  6985  001322  19D7               	xorwf	_pInspVSet& (0+255),w,b
  6986  001324  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  6987  001326  A4D8               	btfss	status,2,c
  6988  001328  D017               	goto	l20656
  6989                           
  6990                           ; BSR set to: 1
  6991                           ;main.c: 610:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          timeGet());
  6992  00132A  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  6993  001330  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  6994  001336  ECFA  F050         	call	_timeGet	;wreg free
  6995  00133A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  6996  001340  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  6997  001346  EC8C  F04C         	call	_timeDiff	;wreg free
  6998  00134A  0060  F254  F3B7   	movff	?_timeDiff,main@tmpUVal
  6999  001350  0060  F258  F3B8   	movff	?_timeDiff+1,main@tmpUVal+1
  7000                           
  7001                           ;main.c: 611:                             } else if (pInspVSet == 2) {
  7002  001356  D0A4               	goto	l20664
  7003  001358                     l20656:
  7004                           
  7005                           ; BSR set to: 1
  7006  001358  0E02               	movlw	2
  7007  00135A  19D7               	xorwf	_pInspVSet& (0+255),w,b
  7008  00135C  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7009  00135E  A4D8               	btfss	status,2,c
  7010  001360  D03B               	goto	l20660
  7011                           
  7012                           ; BSR set to: 1
  7013                           ;main.c: 612:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((2 * 5 * timeDiff(rVMedActuationTstamp, timeGet())) >> 4);
  7014  001362  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7015  001368  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7016  00136E  0060  F67C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7017  001374  0060  F680  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7018  00137A  EC8C  F04C         	call	_timeDiff	;wreg free
  7019  00137E  0060  F254  F39F   	movff	?_timeDiff,??_main
  7020  001384  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7021  00138A  ECFA  F050         	call	_timeGet	;wreg free
  7022  00138E  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7023  001394  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7024  00139A  0060  F67C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7025  0013A0  0060  F680  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7026  0013A6  EC8C  F04C         	call	_timeDiff	;wreg free
  7027  0013AA  0060  F254  F09B   	movff	?_timeDiff,___wmul@multiplier
  7028  0013B0  0060  F258  F09C   	movff	?_timeDiff+1,___wmul@multiplier+1
  7029  0013B6  0E00               	movlw	0
  7030  0013B8  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7031  0013BA  0E0A               	movlw	10
  7032  0013BC  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7033  0013BE  EC21  F04D         	call	___wmul	;wreg free
  7034  0013C2  0E04               	movlw	4
  7035  0013C4  0103               	movlb	3	; () banked
  7036  0013C6  6FA1               	movwf	(??_main+2)& (0+255),b
  7037  0013C8                     u22215:
  7038  0013C8  0100               	movlb	0	; () banked
  7039  0013CA  90D8               	bcf	status,0,c
  7040  0013CC  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7041  0013CE  339B               	rrcf	?___wmul& (0+255),f,b
  7042  0013D0  0103               	movlb	3	; () banked
  7043  0013D2  2FA1               	decfsz	(??_main+2)& (0+255),f,b
  7044  0013D4  D7F9               	goto	u22215
  7045  0013D6  D05A               	goto	L2
  7046  0013D8                     l20660:
  7047                           
  7048                           ; BSR set to: 1
  7049  0013D8  05D7               	decf	_pInspVSet& (0+255),w,b
  7050  0013DA  11D8               	iorwf	(_pInspVSet+1)& (0+255),w,b
  7051  0013DC  A4D8               	btfss	status,2,c
  7052  0013DE  D060               	goto	l20664
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;main.c: 614:                                 tmpUVal = timeDiff(rVHighActuationTstamp, 
      +                          rVMedActuationTstamp) + ((5 * ((2 * timeDiff(rVMedActuationTstamp, rVLowActuationTstamp)
      +                          ) + timeDiff(rVLowActuationTstamp, timeGet()))) >> 4);
  7056  0013E0  0060  F2E8  F095   	movff	_rVHighActuationTstamp,timeDiff@startT
  7057  0013E6  0060  F2EC  F096   	movff	_rVHighActuationTstamp+1,timeDiff@startT+1
  7058  0013EC  0060  F67C  F097   	movff	_rVMedActuationTstamp,timeDiff@endT
  7059  0013F2  0060  F680  F098   	movff	_rVMedActuationTstamp+1,timeDiff@endT+1
  7060  0013F8  EC8C  F04C         	call	_timeDiff	;wreg free
  7061  0013FC  0060  F254  F39F   	movff	?_timeDiff,??_main
  7062  001402  0060  F258  F3A0   	movff	?_timeDiff+1,??_main+1
  7063  001408  0060  F2E0  F097   	movff	_rVLowActuationTstamp,timeDiff@endT
  7064  00140E  0060  F2E4  F098   	movff	_rVLowActuationTstamp+1,timeDiff@endT+1
  7065  001414  0060  F67C  F095   	movff	_rVMedActuationTstamp,timeDiff@startT
  7066  00141A  0060  F680  F096   	movff	_rVMedActuationTstamp+1,timeDiff@startT+1
  7067  001420  EC8C  F04C         	call	_timeDiff	;wreg free
  7068  001424  0060  F254  F3A1   	movff	?_timeDiff,??_main+2
  7069  00142A  0060  F258  F3A2   	movff	?_timeDiff+1,??_main+3
  7070  001430  90D8               	bcf	status,0,c
  7071  001432  0103               	movlb	3	; () banked
  7072  001434  37A1               	rlcf	(??_main+2)& (0+255),f,b
  7073  001436  37A2               	rlcf	(??_main+3)& (0+255),f,b
  7074  001438  ECFA  F050         	call	_timeGet	;wreg free
  7075  00143C  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7076  001442  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7077  001448  0060  F2E0  F095   	movff	_rVLowActuationTstamp,timeDiff@startT
  7078  00144E  0060  F2E4  F096   	movff	_rVLowActuationTstamp+1,timeDiff@startT+1
  7079  001454  EC8C  F04C         	call	_timeDiff	;wreg free
  7080  001458  5195               	movf	?_timeDiff& (0+255),w,b
  7081  00145A  0103               	movlb	3	; () banked
  7082  00145C  25A1               	addwf	(??_main+2)& (0+255),w,b
  7083  00145E  0100               	movlb	0	; () banked
  7084  001460  6F9B               	movwf	___wmul@multiplier& (0+255),b
  7085  001462  5196               	movf	(?_timeDiff+1)& (0+255),w,b
  7086  001464  0103               	movlb	3	; () banked
  7087  001466  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7088  001468  0100               	movlb	0	; () banked
  7089  00146A  6F9C               	movwf	(___wmul@multiplier+1)& (0+255),b
  7090  00146C  0E00               	movlw	0
  7091  00146E  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7092  001470  0E05               	movlw	5
  7093  001472  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7094  001474  EC21  F04D         	call	___wmul	;wreg free
  7095  001478  0E04               	movlw	4
  7096  00147A  0103               	movlb	3	; () banked
  7097  00147C  6FA3               	movwf	(??_main+4)& (0+255),b
  7098  00147E                     u22235:
  7099  00147E  0100               	movlb	0	; () banked
  7100  001480  90D8               	bcf	status,0,c
  7101  001482  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  7102  001484  339B               	rrcf	?___wmul& (0+255),f,b
  7103  001486  0103               	movlb	3	; () banked
  7104  001488  2FA3               	decfsz	(??_main+4)& (0+255),f,b
  7105  00148A  D7F9               	goto	u22235
  7106  00148C                     L2:
  7107  00148C  0100               	movlb	0	; () banked
  7108  00148E  519B               	movf	?___wmul& (0+255),w,b
  7109  001490  0103               	movlb	3	; () banked
  7110  001492  259F               	addwf	??_main& (0+255),w,b
  7111  001494  6FB7               	movwf	main@tmpUVal& (0+255),b
  7112  001496  0100               	movlb	0	; () banked
  7113  001498  519C               	movf	(?___wmul+1)& (0+255),w,b
  7114  00149A  0103               	movlb	3	; () banked
  7115  00149C  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7116  00149E  6FB8               	movwf	(main@tmpUVal+1)& (0+255),b
  7117  0014A0                     l20664:
  7118                           
  7119                           ;main.c: 617:                             if ((tmpUVal > 50)&&(vValveActuation > 50)) {
  7120  0014A0  0103               	movlb	3	; () banked
  7121  0014A2  51B8               	movf	(main@tmpUVal+1)& (0+255),w,b
  7122  0014A4  E104               	bnz	u22240
  7123  0014A6  0E33               	movlw	51
  7124  0014A8  5DB7               	subwf	main@tmpUVal& (0+255),w,b
  7125  0014AA  A0D8               	btfss	status,0,c
  7126  0014AC  D061               	goto	l20670
  7127  0014AE                     u22240:
  7128                           
  7129                           ; BSR set to: 3
  7130  0014AE  0101               	movlb	1	; () banked
  7131  0014B0  BFA8               	btfsc	(_vValveActuation+1)& (0+255),7,b
  7132  0014B2  D05E               	goto	l20670
  7133  0014B4  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  7134  0014B6  E104               	bnz	u22250
  7135  0014B8  0E33               	movlw	51
  7136  0014BA  5DA7               	subwf	_vValveActuation& (0+255),w,b
  7137  0014BC  A0D8               	btfss	status,0,c
  7138  0014BE  D058               	goto	l20670
  7139  0014C0                     u22250:
  7140                           
  7141                           ; BSR set to: 1
  7142                           ;main.c: 619:                                 effectiveFlowRateInv = (3 * effectiveFlowR
      +                          ateInv + ((((uint24_t) tmpUVal) << 8) / vValveActuation)) >> 2;
  7143  0014C0  0E02               	movlw	2
  7144  0014C2  0103               	movlb	3	; () banked
  7145  0014C4  6F9F               	movwf	??_main& (0+255),b
  7146  0014C6  0060  F744  F09B   	movff	_effectiveFlowRateInv,___wmul@multiplier
  7147  0014CC  0060  F748  F09C   	movff	_effectiveFlowRateInv+1,___wmul@multiplier+1
  7148  0014D2  0E00               	movlw	0
  7149  0014D4  0100               	movlb	0	; () banked
  7150  0014D6  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7151  0014D8  0E03               	movlw	3
  7152  0014DA  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7153  0014DC  EC21  F04D         	call	___wmul	;wreg free
  7154  0014E0  0060  F26C  F3A0   	movff	?___wmul,??_main+1
  7155  0014E6  0060  F270  F3A1   	movff	?___wmul+1,??_main+2
  7156  0014EC  0103               	movlb	3	; () banked
  7157  0014EE  6BA2               	clrf	(??_main+3)& (0+255),b
  7158  0014F0  0060  FEDC  F3A3   	movff	main@tmpUVal,??_main+4
  7159  0014F6  0060  FEE0  F3A4   	movff	main@tmpUVal+1,??_main+5
  7160  0014FC  6BA5               	clrf	(??_main+6)& (0+255),b
  7161  0014FE  0060  FE90  F3A5   	movff	??_main+5,??_main+6
  7162  001504  0060  FE8C  F3A4   	movff	??_main+4,??_main+5
  7163  00150A  6BA3               	clrf	(??_main+4)& (0+255),b
  7164  00150C  0060  FE8C  F08B   	movff	??_main+4,___ltdiv@dividend
  7165  001512  0060  FE90  F08C   	movff	??_main+5,___ltdiv@dividend+1
  7166  001518  0060  FE94  F08D   	movff	??_main+6,___ltdiv@dividend+2
  7167  00151E  0060  F69C  F08E   	movff	_vValveActuation,___ltdiv@divisor
  7168  001524  0060  F6A0  F08F   	movff	_vValveActuation+1,___ltdiv@divisor+1
  7169  00152A  0100               	movlb	0	; () banked
  7170  00152C  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
  7171  00152E  BF8F               	btfsc	(___ltdiv@divisor+1)& (0+255),7,b
  7172  001530  0790               	decf	(___ltdiv@divisor+2)& (0+255),f,b
  7173  001532  EC75  F044         	call	___ltdiv	;wreg free
  7174  001536  518B               	movf	?___ltdiv& (0+255),w,b
  7175  001538  0103               	movlb	3	; () banked
  7176  00153A  25A0               	addwf	(??_main+1)& (0+255),w,b
  7177  00153C  6FA6               	movwf	(??_main+7)& (0+255),b
  7178  00153E  0100               	movlb	0	; () banked
  7179  001540  518C               	movf	(?___ltdiv+1)& (0+255),w,b
  7180  001542  0103               	movlb	3	; () banked
  7181  001544  21A1               	addwfc	(??_main+2)& (0+255),w,b
  7182  001546  6FA7               	movwf	(??_main+8)& (0+255),b
  7183  001548  0100               	movlb	0	; () banked
  7184  00154A  518D               	movf	(?___ltdiv+2)& (0+255),w,b
  7185  00154C  0103               	movlb	3	; () banked
  7186  00154E  21A2               	addwfc	(??_main+3)& (0+255),w,b
  7187  001550  6FA8               	movwf	(??_main+9)& (0+255),b
  7188  001552  299F               	incf	??_main& (0+255),w,b
  7189  001554  6FA9               	movwf	(??_main+10)& (0+255),b
  7190  001556  D004               	goto	u22260
  7191  001558                     u22265:
  7192  001558  90D8               	bcf	status,0,c
  7193  00155A  33A8               	rrcf	(??_main+9)& (0+255),f,b
  7194  00155C  33A7               	rrcf	(??_main+8)& (0+255),f,b
  7195  00155E  33A6               	rrcf	(??_main+7)& (0+255),f,b
  7196  001560                     u22260:
  7197  001560  2FA9               	decfsz	(??_main+10)& (0+255),f,b
  7198  001562  D7FA               	goto	u22265
  7199  001564  0060  FE98  F1D1   	movff	??_main+7,_effectiveFlowRateInv
  7200  00156A  0060  FE9C  F1D2   	movff	??_main+8,_effectiveFlowRateInv+1
  7201  001570                     l20670:
  7202                           
  7203                           ;main.c: 628:                             if (effectiveFlowRateInv > 2621) {
  7204  001570  0E3E               	movlw	62
  7205  001572  0101               	movlb	1	; () banked
  7206  001574  5DD1               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7207  001576  0E0A               	movlw	10
  7208  001578  59D2               	subwfb	(_effectiveFlowRateInv+1)& (0+255),w,b
  7209  00157A  A0D8               	btfss	status,0,c
  7210  00157C  D004               	goto	l20674
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;main.c: 629:                                 effectiveFlowRateInv = 2621;
  7214  00157E  0E0A               	movlw	10
  7215  001580  6FD2               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7216  001582  0E3D               	movlw	61
  7217  001584  D009               	goto	L3
  7218  001586                     l20674:
  7219                           
  7220                           ; BSR set to: 1
  7221  001586  51D2               	movf	(_effectiveFlowRateInv+1)& (0+255),w,b
  7222  001588  E108               	bnz	l20678
  7223  00158A  0E83               	movlw	131
  7224  00158C  5DD1               	subwf	_effectiveFlowRateInv& (0+255),w,b
  7225  00158E  B0D8               	btfsc	status,0,c
  7226  001590  D004               	goto	l20678
  7227                           
  7228                           ; BSR set to: 1
  7229                           ;main.c: 631:                                 effectiveFlowRateInv = 131;
  7230  001592  0E00               	movlw	0
  7231  001594  6FD2               	movwf	(_effectiveFlowRateInv+1)& (0+255),b
  7232  001596  0E83               	movlw	131
  7233  001598                     L3:
  7234  001598  6FD1               	movwf	_effectiveFlowRateInv& (0+255),b
  7235  00159A                     l20678:
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;main.c: 634:                             printf ("PI-END T %d - Pi %d Pc %d Vol %d PMax
      +                           %d VL %d VOS %d POS %d FR %d UV %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2
      +                          560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int1
      +                          6_t) ((0.045*4096+2)/5)*1))*((int24_t) pValveActuation))>>8)), vValveActuation, ((int16_
      +                          t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) intMaxP))>>8)), intMaxV, vInspOS
      +                          , ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInspOSScale))>>8)), e
      +                          ffectiveFlowRateInv, tmpUVal);
  7239  00159A  0E95               	movlw	low STR_15
  7240  00159C  6F46               	movwf	printf@fmt& (0+255),b
  7241  00159E  0EFA               	movlw	high STR_15
  7242  0015A0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7243  0015A2  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  7244  0015A8  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7245  0015AE  ECFA  F050         	call	_timeGet	;wreg free
  7246  0015B2  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7247  0015B8  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7248  0015BE  EC8C  F04C         	call	_timeDiff	;wreg free
  7249  0015C2  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7250  0015C8  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7251  0015CE  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  7252  0015D4  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7253  0015DA  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7254  0015DC  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7255  0015DE  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7256  0015E0  0E45               	movlw	69
  7257  0015E2  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7258  0015E4  0E00               	movlw	0
  7259  0015E6  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7260  0015E8  0E00               	movlw	0
  7261  0015EA  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7262  0015EC  EC46  F049         	call	___tmul	;wreg free
  7263  0015F0  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7264  0015F6  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7265  0015FC  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7266  0015FE  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7267  001600  698D               	setf	(?___tmul+2)& (0+255),b
  7268  001602  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7269  001608  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7270  00160E  0060  F794  F08B   	movff	_pValveActuation,___tmul@multiplier
  7271  001614  0060  F798  F08C   	movff	_pValveActuation+1,___tmul@multiplier+1
  7272  00161A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7273  00161C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7274  00161E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7275  001620  0E45               	movlw	69
  7276  001622  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7277  001624  0E00               	movlw	0
  7278  001626  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7279  001628  0E00               	movlw	0
  7280  00162A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7281  00162C  EC46  F049         	call	___tmul	;wreg free
  7282  001630  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7283  001636  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7284  00163C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7285  00163E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7286  001640  698D               	setf	(?___tmul+2)& (0+255),b
  7287  001642  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  7288  001648  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  7289  00164E  0060  F69C  F14E   	movff	_vValveActuation,?_printf+8
  7290  001654  0060  F6A0  F14F   	movff	_vValveActuation+1,?_printf+9
  7291  00165A  0060  F7CC  F08B   	movff	_intMaxP,___tmul@multiplier
  7292  001660  0060  F7D0  F08C   	movff	_intMaxP+1,___tmul@multiplier+1
  7293  001666  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7294  001668  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7295  00166A  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7296  00166C  0E45               	movlw	69
  7297  00166E  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7298  001670  0E00               	movlw	0
  7299  001672  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7300  001674  0E00               	movlw	0
  7301  001676  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7302  001678  EC46  F049         	call	___tmul	;wreg free
  7303  00167C  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7304  001682  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7305  001688  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7306  00168A  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7307  00168C  698D               	setf	(?___tmul+2)& (0+255),b
  7308  00168E  0060  F22C  F150   	movff	?___tmul,?_printf+10
  7309  001694  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  7310  00169A  0060  F7C4  F152   	movff	_intMaxV,?_printf+12
  7311  0016A0  0060  F7C8  F153   	movff	_intMaxV+1,?_printf+13
  7312  0016A6  0060  F764  F154   	movff	_vInspOS,?_printf+14
  7313  0016AC  0060  F768  F155   	movff	_vInspOS+1,?_printf+15
  7314  0016B2  0060  FEF4  F08B   	movff	main@pInspOSScale,___tmul@multiplier
  7315  0016B8  0060  FEF8  F08C   	movff	main@pInspOSScale+1,___tmul@multiplier+1
  7316  0016BE  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7317  0016C0  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7318  0016C2  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7319  0016C4  0E45               	movlw	69
  7320  0016C6  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7321  0016C8  0E00               	movlw	0
  7322  0016CA  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7323  0016CC  0E00               	movlw	0
  7324  0016CE  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7325  0016D0  EC46  F049         	call	___tmul	;wreg free
  7326  0016D4  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7327  0016DA  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7328  0016E0  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7329  0016E2  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7330  0016E4  698D               	setf	(?___tmul+2)& (0+255),b
  7331  0016E6  0060  F22C  F156   	movff	?___tmul,?_printf+16
  7332  0016EC  0060  F230  F157   	movff	?___tmul+1,?_printf+17
  7333  0016F2  0060  F744  F158   	movff	_effectiveFlowRateInv,?_printf+18
  7334  0016F8  0060  F748  F159   	movff	_effectiveFlowRateInv+1,?_printf+19
  7335  0016FE  0060  FEDC  F15A   	movff	main@tmpUVal,?_printf+20
  7336  001704  0060  FEE0  F15B   	movff	main@tmpUVal+1,?_printf+21
  7337  00170A  EC68  F04E         	call	_printf	;wreg free
  7338                           
  7339                           ; BSR set to: 3
  7340                           ;main.c: 639:                     } else {
  7341                           
  7342                           ;main.c: 638:                         }
  7343  00170E  D2D1               	goto	l20796
  7344  001710                     l20680:
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;main.c: 641:                         if (sv2DelayCheck) {
  7348  001710  51C5               	movf	_sv2DelayCheck& (0+255),w,b
  7349  001712  B4D8               	btfsc	status,2,c
  7350  001714  D049               	goto	l20698
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;main.c: 642:                             aCaptGetResult(VolPSensor, &tmpVal);
  7354  001716  0EBF               	movlw	low main@tmpVal
  7355  001718  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7356  00171A  0E03               	movlw	high main@tmpVal
  7357  00171C  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7358  00171E  0E01               	movlw	1
  7359  001720  EC83  F031         	call	_aCaptGetResult
  7360                           
  7361                           ;main.c: 643:                             if (tmpVal < (20 << 1)) {
  7362  001724  0103               	movlb	3	; () banked
  7363  001726  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7364  001728  D006               	goto	u22300
  7365  00172A  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  7366  00172C  E13D               	bnz	l20698
  7367  00172E  0E28               	movlw	40
  7368  001730  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7369  001732  B0D8               	btfsc	status,0,c
  7370  001734  D039               	goto	l20698
  7371  001736                     u22300:
  7372                           
  7373                           ; BSR set to: 3
  7374                           ;main.c: 644:                                 sv2DelayCheck = 0;
  7375  001736  0E00               	movlw	0
  7376  001738  0101               	movlb	1	; () banked
  7377  00173A  6FC5               	movwf	_sv2DelayCheck& (0+255),b
  7378                           
  7379                           ; BSR set to: 1
  7380                           ;main.c: 646:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  7381  00173C  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  7382  001742  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  7383  001748  ECFA  F050         	call	_timeGet	;wreg free
  7384  00174C  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  7385  001752  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  7386  001758  EC8C  F04C         	call	_timeDiff	;wreg free
  7387  00175C  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  7388  001762  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;main.c: 647:                                 if (rTimeTmp < ((time_t) 150*1)) {
  7392  001768  0101               	movlb	1	; () banked
  7393  00176A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  7394  00176C  E11A               	bnz	l20696
  7395  00176E  0E96               	movlw	150
  7396  001770  5D95               	subwf	_rTimeTmp& (0+255),w,b
  7397  001772  B0D8               	btfsc	status,0,c
  7398  001774  D016               	goto	l20696
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;main.c: 649:                                     rSV2ValveCRT = (rSV2ValveCRT + rTimeTm
      +                          p) >> 1;
  7402  001776  5195               	movf	_rTimeTmp& (0+255),w,b
  7403  001778  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  7404  00177A  0103               	movlb	3	; () banked
  7405  00177C  6F9F               	movwf	??_main& (0+255),b
  7406  00177E  0101               	movlb	1	; () banked
  7407  001780  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  7408  001782  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7409  001784  0103               	movlb	3	; () banked
  7410  001786  6FA0               	movwf	(??_main+1)& (0+255),b
  7411  001788  90D8               	bcf	status,0,c
  7412  00178A  31A0               	rrcf	(??_main+1)& (0+255),w,b
  7413  00178C  6FA1               	movwf	(??_main+2)& (0+255),b
  7414  00178E  319F               	rrcf	??_main& (0+255),w,b
  7415  001790  0101               	movlb	1	; () banked
  7416  001792  6F9B               	movwf	_rSV2ValveCRT& (0+255),b
  7417  001794  0060  FE84  F19C   	movff	??_main+2,_rSV2ValveCRT+1
  7418                           
  7419                           ; BSR set to: 1
  7420                           ;main.c: 651:                                     MonitorErrorClr(MON_SV2E);
  7421  00179A  0E08               	movlw	8
  7422  00179C  EC0C  F051         	call	_MonitorErrorClr
  7423                           
  7424                           ;main.c: 652:                                 } else {
  7425  0017A0  D003               	goto	l20698
  7426  0017A2                     l20696:
  7427                           
  7428                           ; BSR set to: 1
  7429                           ;main.c: 654:                                     MonitorErrorSet(MON_SV2E);
  7430  0017A2  0E08               	movlw	8
  7431  0017A4  EC03  F051         	call	_MonitorErrorSet
  7432  0017A8                     l20698:
  7433                           
  7434                           ;main.c: 659:                         aCaptGetResult(MainPSensor, &pInst);
  7435  0017A8  0EEF               	movlw	low _pInst
  7436  0017AA  0101               	movlb	1	; () banked
  7437  0017AC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7438  0017AE  0E01               	movlw	high _pInst
  7439  0017B0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7440  0017B2  0E00               	movlw	0
  7441  0017B4  EC83  F031         	call	_aCaptGetResult
  7442                           
  7443                           ;main.c: 660:                         MonitorErrorClr(MON_IPE);
  7444  0017B8  0E20               	movlw	32
  7445  0017BA  EC0C  F051         	call	_MonitorErrorClr
  7446                           
  7447                           ; BSR set to: 1
  7448                           ;main.c: 661:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  7449  0017BE  0E00               	movlw	0
  7450  0017C0  B4BA               	btfsc	186,2,c	;volatile
  7451  0017C2  0E01               	movlw	1
  7452  0017C4  B6BC               	btfsc	188,3,c	;volatile
  7453  0017C6  0E01               	movlw	1
  7454  0017C8  A0E8               	btfss	wreg,0,c
  7455  0017CA  D004               	goto	u22320
  7456  0017CC  0103               	movlb	3	; () banked
  7457  0017CE  6B9F               	clrf	??_main& (0+255),b
  7458  0017D0  2B9F               	incf	??_main& (0+255),f,b
  7459  0017D2  D002               	goto	u22328
  7460  0017D4                     u22320:
  7461  0017D4  0103               	movlb	3	; () banked
  7462  0017D6  6B9F               	clrf	??_main& (0+255),b
  7463  0017D8                     u22328:
  7464  0017D8  519F               	movf	??_main& (0+255),w,b
  7465  0017DA  B4D8               	btfsc	status,2,c
  7466  0017DC  D06C               	goto	l20714
  7467                           
  7468                           ; BSR set to: 3
  7469  0017DE  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7470  0017E4  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7471  0017EA  0E00               	movlw	0
  7472  0017EC  0100               	movlb	0	; () banked
  7473  0017EE  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7474  0017F0  0E0F               	movlw	15
  7475  0017F2  6F95               	movwf	timeElapsed@duration& (0+255),b
  7476  0017F4  EC09  F04D         	call	_timeElapsed	;wreg free
  7477  0017F8  0900               	iorlw	0
  7478  0017FA  A4D8               	btfss	status,2,c
  7479  0017FC  D00E               	goto	u22350
  7480                           
  7481                           ; BSR set to: 0
  7482  0017FE  0101               	movlb	1	; () banked
  7483  001800  51EF               	movf	_pInst& (0+255),w,b
  7484  001802  5DF3               	subwf	_intMaxP& (0+255),w,b
  7485  001804  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  7486  001806  0A80               	xorlw	128
  7487  001808  0103               	movlb	3	; () banked
  7488  00180A  6F9F               	movwf	??_main& (0+255),b
  7489  00180C  0101               	movlb	1	; () banked
  7490  00180E  51F0               	movf	(_pInst+1)& (0+255),w,b
  7491  001810  0A80               	xorlw	128
  7492  001812  0103               	movlb	3	; () banked
  7493  001814  599F               	subwfb	??_main& (0+255),w,b
  7494  001816  B0D8               	btfsc	status,0,c
  7495  001818  D04E               	goto	l20714
  7496  00181A                     u22350:
  7497                           
  7498                           ;main.c: 662:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  7499  00181A  94BA               	bcf	186,2,c	;volatile
  7500  00181C  96BC               	bcf	188,3,c	;volatile
  7501                           
  7502                           ;main.c: 663:                             rValveActuationTstamp = timeGet();
  7503  00181E  ECFA  F050         	call	_timeGet	;wreg free
  7504  001822  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  7505  001828  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;main.c: 664:                             aCaptGetResult(MainPSensor, &pInst);
  7509  00182E  0EEF               	movlw	low _pInst
  7510  001830  0101               	movlb	1	; () banked
  7511  001832  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7512  001834  0E01               	movlw	high _pInst
  7513  001836  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7514  001838  0E00               	movlw	0
  7515  00183A  EC83  F031         	call	_aCaptGetResult
  7516                           
  7517                           ;main.c: 665:                             printf ("PI-VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((in
      +                          t24_t) pInst))>>8)));
  7518  00183E  0EE0               	movlw	low STR_16
  7519  001840  0101               	movlb	1	; () banked
  7520  001842  6F46               	movwf	printf@fmt& (0+255),b
  7521  001844  0EFC               	movlw	high STR_16
  7522  001846  6F47               	movwf	(printf@fmt+1)& (0+255),b
  7523  001848  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  7524  00184E  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  7525  001854  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  7526  00185A  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  7527  001860  EC8C  F04C         	call	_timeDiff	;wreg free
  7528  001864  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  7529  00186A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  7530  001870  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  7531  001876  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  7532  00187C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  7533  00187E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  7534  001880  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  7535  001882  0E45               	movlw	69
  7536  001884  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  7537  001886  0E00               	movlw	0
  7538  001888  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  7539  00188A  0E00               	movlw	0
  7540  00188C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  7541  00188E  EC46  F049         	call	___tmul	;wreg free
  7542  001892  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  7543  001898  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  7544  00189E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  7545  0018A0  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  7546  0018A2  698D               	setf	(?___tmul+2)& (0+255),b
  7547  0018A4  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  7548  0018AA  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  7549  0018B0  EC68  F04E         	call	_printf	;wreg free
  7550                           
  7551                           ;main.c: 666:                         } else {
  7552  0018B4  D1FE               	goto	l20796
  7553  0018B6                     l20714:
  7554                           
  7555                           ; BSR set to: 3
  7556                           ;main.c: 667:                             if (OSCheck) {
  7557  0018B6  0101               	movlb	1	; () banked
  7558  0018B8  51C3               	movf	_OSCheck& (0+255),w,b
  7559  0018BA  B4D8               	btfsc	status,2,c
  7560  0018BC  D038               	goto	l20730
  7561                           
  7562                           ; BSR set to: 1
  7563                           ;main.c: 669:                                 aCaptGetResult(Flt1PSensor, &pAvgUShort);
  7564  0018BE  0EEB               	movlw	low _pAvgUShort
  7565  0018C0  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7566  0018C2  0E01               	movlw	high _pAvgUShort
  7567  0018C4  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7568  0018C6  0E04               	movlw	4
  7569  0018C8  EC83  F031         	call	_aCaptGetResult
  7570                           
  7571                           ;main.c: 670:                                 pPlatInsp = pAvgUShort;
  7572  0018CC  C1EB  F1E3         	movff	_pAvgUShort,_pPlatInsp
  7573  0018D0  C1EC  F1E4         	movff	_pAvgUShort+1,_pPlatInsp+1
  7574                           
  7575                           ;main.c: 671:                                 if (pPlatMax < pAvgUShort) {
  7576  0018D4  0101               	movlb	1	; () banked
  7577  0018D6  51EB               	movf	_pAvgUShort& (0+255),w,b
  7578  0018D8  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7579  0018DA  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  7580  0018DC  0A80               	xorlw	128
  7581  0018DE  0103               	movlb	3	; () banked
  7582  0018E0  6F9F               	movwf	??_main& (0+255),b
  7583  0018E2  0101               	movlb	1	; () banked
  7584  0018E4  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  7585  0018E6  0A80               	xorlw	128
  7586  0018E8  0103               	movlb	3	; () banked
  7587  0018EA  599F               	subwfb	??_main& (0+255),w,b
  7588  0018EC  B0D8               	btfsc	status,0,c
  7589  0018EE  D004               	goto	l20724
  7590                           
  7591                           ; BSR set to: 3
  7592                           ;main.c: 672:                                     pPlatMax = pAvgUShort;
  7593  0018F0  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  7594  0018F4  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  7595  0018F8                     l20724:
  7596                           
  7597                           ; BSR set to: 3
  7598                           ;main.c: 675:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 150*1) + rSV2ValveCRT)) {
  7599  0018F8  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7600  0018FE  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7601  001904  0E96               	movlw	150
  7602  001906  0101               	movlb	1	; () banked
  7603  001908  259B               	addwf	_rSV2ValveCRT& (0+255),w,b
  7604  00190A  0100               	movlb	0	; () banked
  7605  00190C  6F95               	movwf	timeElapsed@duration& (0+255),b
  7606  00190E  0E00               	movlw	0
  7607  001910  0101               	movlb	1	; () banked
  7608  001912  219C               	addwfc	(_rSV2ValveCRT+1)& (0+255),w,b
  7609  001914  0100               	movlb	0	; () banked
  7610  001916  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  7611  001918  EC09  F04D         	call	_timeElapsed	;wreg free
  7612  00191C  0900               	iorlw	0
  7613  00191E  B4D8               	btfsc	status,2,c
  7614  001920  D1C8               	goto	l20796
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;main.c: 676:                                     OSCheck = 0;
  7618  001922  0E00               	movlw	0
  7619  001924  0101               	movlb	1	; () banked
  7620  001926  6FC3               	movwf	_OSCheck& (0+255),b
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;main.c: 677:                                     inspOSMeasure();
  7624  001928  EC7D  F026         	call	_inspOSMeasure	;wreg free
  7625  00192C  D1C2               	goto	l20796
  7626  00192E                     l20730:
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;main.c: 680:                                 if (QuantaCheck) {
  7630  00192E  51C2               	movf	_QuantaCheck& (0+255),w,b
  7631  001930  B4D8               	btfsc	status,2,c
  7632  001932  D019               	goto	l20738
  7633                           
  7634                           ; BSR set to: 1
  7635                           ;main.c: 681:                                     aCaptGetResult(Flt1PSensor, &pAvgUShor
      +                          t);
  7636  001934  0EEB               	movlw	low _pAvgUShort
  7637  001936  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  7638  001938  0E01               	movlw	high _pAvgUShort
  7639  00193A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  7640  00193C  0E04               	movlw	4
  7641  00193E  EC83  F031         	call	_aCaptGetResult
  7642                           
  7643                           ;main.c: 682:                                     if (pPlatMax < pAvgUShort) {
  7644  001942  0101               	movlb	1	; () banked
  7645  001944  51EB               	movf	_pAvgUShort& (0+255),w,b
  7646  001946  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7647  001948  51AC               	movf	(_pPlatMax+1)& (0+255),w,b
  7648  00194A  0A80               	xorlw	128
  7649  00194C  0103               	movlb	3	; () banked
  7650  00194E  6F9F               	movwf	??_main& (0+255),b
  7651  001950  0101               	movlb	1	; () banked
  7652  001952  51EC               	movf	(_pAvgUShort+1)& (0+255),w,b
  7653  001954  0A80               	xorlw	128
  7654  001956  0103               	movlb	3	; () banked
  7655  001958  599F               	subwfb	??_main& (0+255),w,b
  7656  00195A  B0D8               	btfsc	status,0,c
  7657  00195C  D004               	goto	l20738
  7658                           
  7659                           ; BSR set to: 3
  7660                           ;main.c: 683:                                         pPlatMax = pAvgUShort;
  7661  00195E  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  7662  001962  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  7663  001966                     l20738:
  7664                           
  7665                           ;main.c: 686:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  7666  001966  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  7667  00196C  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  7668  001972  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  7669  001978  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  7670  00197E  0103               	movlb	3	; () banked
  7671  001980  90D8               	bcf	status,0,c
  7672  001982  379F               	rlcf	??_main& (0+255),f,b
  7673  001984  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7674  001986  90D8               	bcf	status,0,c
  7675  001988  379F               	rlcf	??_main& (0+255),f,b
  7676  00198A  37A0               	rlcf	(??_main+1)& (0+255),f,b
  7677  00198C  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  7678  001992  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  7679  001998  EC09  F04D         	call	_timeElapsed	;wreg free
  7680  00199C  0900               	iorlw	0
  7681  00199E  B4D8               	btfsc	status,2,c
  7682  0019A0  D188               	goto	l20796
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;main.c: 687:                                     if (QuantaCheck) {
  7686  0019A2  0101               	movlb	1	; () banked
  7687  0019A4  51C2               	movf	_QuantaCheck& (0+255),w,b
  7688  0019A6  B4D8               	btfsc	status,2,c
  7689  0019A8  D085               	goto	l20768
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;main.c: 688:                                         QuantaCheck = 0;
  7693  0019AA  0E00               	movlw	0
  7694  0019AC  6FC2               	movwf	_QuantaCheck& (0+255),b
  7695                           
  7696                           ; BSR set to: 1
  7697                           ;main.c: 689:                                         tmpVal = vMeasureGet() - vValveAct
      +                          uation;
  7698  0019AE  ECFE  F046         	call	_vMeasureGet	;wreg free
  7699  0019B2  0101               	movlb	1	; () banked
  7700  0019B4  51A7               	movf	_vValveActuation& (0+255),w,b
  7701  0019B6  0100               	movlb	0	; () banked
  7702  0019B8  5DA4               	subwf	?_vMeasureGet& (0+255),w,b
  7703  0019BA  0103               	movlb	3	; () banked
  7704  0019BC  6FBF               	movwf	main@tmpVal& (0+255),b
  7705  0019BE  0101               	movlb	1	; () banked
  7706  0019C0  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
  7707  0019C2  0100               	movlb	0	; () banked
  7708  0019C4  59A5               	subwfb	(?_vMeasureGet+1)& (0+255),w,b
  7709  0019C6  0103               	movlb	3	; () banked
  7710  0019C8  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7711                           
  7712                           ; BSR set to: 3
  7713                           ;main.c: 690:                                         if (tmpVal > 90) {
  7714  0019CA  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7715  0019CC  D00A               	goto	l20750
  7716  0019CE  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  7717  0019D0  E104               	bnz	u22430
  7718  0019D2  0E5B               	movlw	91
  7719  0019D4  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7720  0019D6  A0D8               	btfss	status,0,c
  7721  0019D8  D004               	goto	l20750
  7722  0019DA                     u22430:
  7723                           
  7724                           ; BSR set to: 3
  7725                           ;main.c: 691:                                             tmpVal = 90;
  7726  0019DA  0E00               	movlw	0
  7727  0019DC  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7728  0019DE  0E5A               	movlw	90
  7729  0019E0  6FBF               	movwf	main@tmpVal& (0+255),b
  7730  0019E2                     l20750:
  7731                           
  7732                           ; BSR set to: 3
  7733                           ;main.c: 693:                                         vQuanta = (3 * tmpVal + vQuanta) /
      +                           4;
  7734  0019E2  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  7735  0019E8  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7736  0019EE  0E00               	movlw	0
  7737  0019F0  0100               	movlb	0	; () banked
  7738  0019F2  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7739  0019F4  0E03               	movlw	3
  7740  0019F6  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7741  0019F8  EC21  F04D         	call	___wmul	;wreg free
  7742  0019FC  0101               	movlb	1	; () banked
  7743  0019FE  51A5               	movf	_vQuanta& (0+255),w,b
  7744  001A00  0100               	movlb	0	; () banked
  7745  001A02  259B               	addwf	?___wmul& (0+255),w,b
  7746  001A04  6FA1               	movwf	___awdiv@dividend& (0+255),b
  7747  001A06  0101               	movlb	1	; () banked
  7748  001A08  51A6               	movf	(_vQuanta+1)& (0+255),w,b
  7749  001A0A  0100               	movlb	0	; () banked
  7750  001A0C  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  7751  001A0E  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  7752  001A10  0E00               	movlw	0
  7753  001A12  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  7754  001A14  0E04               	movlw	4
  7755  001A16  6FA3               	movwf	___awdiv@divisor& (0+255),b
  7756  001A18  EC78  F042         	call	___awdiv	;wreg free
  7757  001A1C  0060  F284  F1A5   	movff	?___awdiv,_vQuanta
  7758  001A22  0060  F288  F1A6   	movff	?___awdiv+1,_vQuanta+1
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;main.c: 694:                                         tmpVal = (pPlatMax - pValveActuati
      +                          on);
  7762  001A28  0101               	movlb	1	; () banked
  7763  001A2A  51E5               	movf	_pValveActuation& (0+255),w,b
  7764  001A2C  5DAB               	subwf	_pPlatMax& (0+255),w,b
  7765  001A2E  0103               	movlb	3	; () banked
  7766  001A30  6FBF               	movwf	main@tmpVal& (0+255),b
  7767  001A32  0101               	movlb	1	; () banked
  7768  001A34  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  7769  001A36  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
  7770  001A38  0103               	movlb	3	; () banked
  7771  001A3A  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7772                           
  7773                           ; BSR set to: 3
  7774                           ;main.c: 695:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  7775  001A3C  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  7776  001A3E  D00A               	goto	l20758
  7777  001A40  0E29               	movlw	41
  7778  001A42  5DBF               	subwf	main@tmpVal& (0+255),w,b
  7779  001A44  0E01               	movlw	1
  7780  001A46  59C0               	subwfb	(main@tmpVal+1)& (0+255),w,b
  7781  001A48  A0D8               	btfss	status,0,c
  7782  001A4A  D004               	goto	l20758
  7783                           
  7784                           ; BSR set to: 3
  7785                           ;main.c: 696:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  7786  001A4C  0E01               	movlw	1
  7787  001A4E  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  7788  001A50  0E28               	movlw	40
  7789  001A52  6FBF               	movwf	main@tmpVal& (0+255),b
  7790  001A54                     l20758:
  7791                           
  7792                           ; BSR set to: 3
  7793                           ;main.c: 698:                                         pQuantaInsp = (3 * tmpVal + pQuant
      +                          aInsp) / 4;
  7794  001A54  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  7795  001A5A  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  7796  001A60  0E00               	movlw	0
  7797  001A62  0100               	movlb	0	; () banked
  7798  001A64  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7799  001A66  0E03               	movlw	3
  7800  001A68  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  7801  001A6A  EC21  F04D         	call	___wmul	;wreg free
  7802  001A6E  0101               	movlb	1	; () banked
  7803  001A70  51D5               	movf	_pQuantaInsp& (0+255),w,b
  7804  001A72  0100               	movlb	0	; () banked
  7805  001A74  259B               	addwf	?___wmul& (0+255),w,b
  7806  001A76  6FA1               	movwf	___awdiv@dividend& (0+255),b
  7807  001A78  0101               	movlb	1	; () banked
  7808  001A7A  51D6               	movf	(_pQuantaInsp+1)& (0+255),w,b
  7809  001A7C  0100               	movlb	0	; () banked
  7810  001A7E  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  7811  001A80  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  7812  001A82  0E00               	movlw	0
  7813  001A84  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  7814  001A86  0E04               	movlw	4
  7815  001A88  6FA3               	movwf	___awdiv@divisor& (0+255),b
  7816  001A8A  EC78  F042         	call	___awdiv	;wreg free
  7817  001A8E  0060  F284  F1D5   	movff	?___awdiv,_pQuantaInsp
  7818  001A94  0060  F288  F1D6   	movff	?___awdiv+1,_pQuantaInsp+1
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;main.c: 699:                                         if (vQuanta < 0) {
  7822  001A9A  0101               	movlb	1	; () banked
  7823  001A9C  AFA6               	btfss	(_vQuanta+1)& (0+255),7,b
  7824  001A9E  D004               	goto	l20764
  7825                           
  7826                           ; BSR set to: 1
  7827                           ;main.c: 700:                                             vQuanta = 0;
  7828  001AA0  0E00               	movlw	0
  7829  001AA2  6FA6               	movwf	(_vQuanta+1)& (0+255),b
  7830  001AA4  0E00               	movlw	0
  7831  001AA6  6FA5               	movwf	_vQuanta& (0+255),b
  7832  001AA8                     l20764:
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;main.c: 702:                                         if (pQuantaInsp < 0) {
  7836  001AA8  AFD6               	btfss	(_pQuantaInsp+1)& (0+255),7,b
  7837  001AAA  D004               	goto	l20768
  7838                           
  7839                           ; BSR set to: 1
  7840                           ;main.c: 703:                                             pQuantaInsp = 0;
  7841  001AAC  0E00               	movlw	0
  7842  001AAE  6FD6               	movwf	(_pQuantaInsp+1)& (0+255),b
  7843  001AB0  0E00               	movlw	0
  7844  001AB2  6FD5               	movwf	_pQuantaInsp& (0+255),b
  7845  001AB4                     l20768:
  7846                           
  7847                           ; BSR set to: 1
  7848                           ;main.c: 706:                                     pAdj = pInst;
  7849  001AB4  C1EF  F1A3         	movff	_pInst,_pAdj
  7850  001AB8  C1F0  F1A4         	movff	_pInst+1,_pAdj+1
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;main.c: 707:                                     vAdj = vMeasureGet();
  7854  001ABC  ECFE  F046         	call	_vMeasureGet	;wreg free
  7855  001AC0  0060  F290  F23E   	movff	?_vMeasureGet,_vAdj
  7856  001AC6  0060  F294  F23F   	movff	?_vMeasureGet+1,_vAdj+1
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;main.c: 709:                                     vValveActuation = vAdj;
  7860  001ACC  C23E  F1A7         	movff	_vAdj,_vValveActuation
  7861  001AD0  C23F  F1A8         	movff	_vAdj+1,_vValveActuation+1
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;main.c: 710:                                     pValveActuation = pAdj;
  7865  001AD4  C1A3  F1E5         	movff	_pAdj,_pValveActuation
  7866  001AD8  C1A4  F1E6         	movff	_pAdj+1,_pValveActuation+1
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;main.c: 714:                                     pAdj = pAdj + (pQuantaInsp >> 1);
  7870  001ADC  0101               	movlb	1	; () banked
  7871  001ADE  35D6               	rlcf	(_pQuantaInsp+1)& (0+255),w,b
  7872  001AE0  31D6               	rrcf	(_pQuantaInsp+1)& (0+255),w,b
  7873  001AE2  0103               	movlb	3	; () banked
  7874  001AE4  6FA0               	movwf	(??_main+1)& (0+255),b
  7875  001AE6  0101               	movlb	1	; () banked
  7876  001AE8  31D5               	rrcf	_pQuantaInsp& (0+255),w,b
  7877  001AEA  0103               	movlb	3	; () banked
  7878  001AEC  6F9F               	movwf	??_main& (0+255),b
  7879  001AEE  0101               	movlb	1	; () banked
  7880  001AF0  51A3               	movf	_pAdj& (0+255),w,b
  7881  001AF2  0103               	movlb	3	; () banked
  7882  001AF4  259F               	addwf	??_main& (0+255),w,b
  7883  001AF6  0101               	movlb	1	; () banked
  7884  001AF8  6FA3               	movwf	_pAdj& (0+255),b
  7885  001AFA  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7886  001AFC  0103               	movlb	3	; () banked
  7887  001AFE  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7888  001B00  0101               	movlb	1	; () banked
  7889  001B02  6FA4               	movwf	(_pAdj+1)& (0+255),b
  7890                           
  7891                           ; BSR set to: 1
  7892                           ;main.c: 715:                                     vAdj = vAdj + (vQuanta >> 1);
  7893  001B04  35A6               	rlcf	(_vQuanta+1)& (0+255),w,b
  7894  001B06  31A6               	rrcf	(_vQuanta+1)& (0+255),w,b
  7895  001B08  0103               	movlb	3	; () banked
  7896  001B0A  6FA0               	movwf	(??_main+1)& (0+255),b
  7897  001B0C  0101               	movlb	1	; () banked
  7898  001B0E  31A5               	rrcf	_vQuanta& (0+255),w,b
  7899  001B10  0103               	movlb	3	; () banked
  7900  001B12  6F9F               	movwf	??_main& (0+255),b
  7901  001B14  0102               	movlb	2	; () banked
  7902  001B16  513E               	movf	_vAdj& (0+255),w,b
  7903  001B18  0103               	movlb	3	; () banked
  7904  001B1A  259F               	addwf	??_main& (0+255),w,b
  7905  001B1C  0102               	movlb	2	; () banked
  7906  001B1E  6F3E               	movwf	_vAdj& (0+255),b
  7907  001B20  513F               	movf	(_vAdj+1)& (0+255),w,b
  7908  001B22  0103               	movlb	3	; () banked
  7909  001B24  21A0               	addwfc	(??_main+1)& (0+255),w,b
  7910  001B26  0102               	movlb	2	; () banked
  7911  001B28  6F3F               	movwf	(_vAdj+1)& (0+255),b
  7912                           
  7913                           ; BSR set to: 2
  7914                           ;main.c: 719:                                     if (((pInst + pQuantaInsp) < intMaxP) 
      +                          &&
  7915  001B2A  0101               	movlb	1	; () banked
  7916  001B2C  51D5               	movf	_pQuantaInsp& (0+255),w,b
  7917  001B2E  25EF               	addwf	_pInst& (0+255),w,b
  7918  001B30  0103               	movlb	3	; () banked
  7919  001B32  6F9F               	movwf	??_main& (0+255),b
  7920  001B34  0101               	movlb	1	; () banked
  7921  001B36  51D6               	movf	(_pQuantaInsp+1)& (0+255),w,b
  7922  001B38  21F0               	addwfc	(_pInst+1)& (0+255),w,b
  7923  001B3A  0103               	movlb	3	; () banked
  7924  001B3C  6FA0               	movwf	(??_main+1)& (0+255),b
  7925  001B3E  0101               	movlb	1	; () banked
  7926  001B40  51F3               	movf	_intMaxP& (0+255),w,b
  7927  001B42  0103               	movlb	3	; () banked
  7928  001B44  5D9F               	subwf	??_main& (0+255),w,b
  7929  001B46  51A0               	movf	(??_main+1)& (0+255),w,b
  7930  001B48  0A80               	xorlw	128
  7931  001B4A  6FA1               	movwf	(??_main+2)& (0+255),b
  7932  001B4C  0101               	movlb	1	; () banked
  7933  001B4E  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  7934  001B50  0A80               	xorlw	128
  7935  001B52  0103               	movlb	3	; () banked
  7936  001B54  59A1               	subwfb	(??_main+2)& (0+255),w,b
  7937  001B56  B0D8               	btfsc	status,0,c
  7938  001B58  D0AC               	goto	l20796
  7939                           
  7940                           ; BSR set to: 3
  7941  001B5A  0EB6               	movlw	182
  7942  001B5C  6F9F               	movwf	??_main& (0+255),b
  7943  001B5E  0EFF               	movlw	255
  7944  001B60  6FA0               	movwf	(??_main+1)& (0+255),b
  7945  001B62  0060  F78C  F3A1   	movff	_pPlatInsp,??_main+2
  7946  001B68  0060  F790  F3A2   	movff	_pPlatInsp+1,??_main+3
  7947  001B6E  519F               	movf	??_main& (0+255),w,b
  7948  001B70  27A1               	addwf	(??_main+2)& (0+255),f,b
  7949  001B72  51A0               	movf	(??_main+1)& (0+255),w,b
  7950  001B74  23A2               	addwfc	(??_main+3)& (0+255),f,b
  7951  001B76  51A1               	movf	(??_main+2)& (0+255),w,b
  7952  001B78  0101               	movlb	1	; () banked
  7953  001B7A  5DA3               	subwf	_pAdj& (0+255),w,b
  7954  001B7C  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7955  001B7E  0A80               	xorlw	128
  7956  001B80  0103               	movlb	3	; () banked
  7957  001B82  6FA3               	movwf	(??_main+4)& (0+255),b
  7958  001B84  51A2               	movf	(??_main+3)& (0+255),w,b
  7959  001B86  0A80               	xorlw	128
  7960  001B88  59A3               	subwfb	(??_main+4)& (0+255),w,b
  7961  001B8A  B0D8               	btfsc	status,0,c
  7962  001B8C  D092               	goto	l20796
  7963                           
  7964                           ; BSR set to: 3
  7965  001B8E  0101               	movlb	1	; () banked
  7966  001B90  05CA               	decf	_intVentMode& (0+255),w,b
  7967  001B92  B4D8               	btfsc	status,2,c
  7968  001B94  D01B               	goto	u22500
  7969                           
  7970                           ; BSR set to: 1
  7971  001B96  0EB6               	movlw	182
  7972  001B98  0103               	movlb	3	; () banked
  7973  001B9A  6F9F               	movwf	??_main& (0+255),b
  7974  001B9C  0EFF               	movlw	255
  7975  001B9E  6FA0               	movwf	(??_main+1)& (0+255),b
  7976  001BA0  0060  F6CC  F3A1   	movff	_intIP,??_main+2
  7977  001BA6  0060  F6D0  F3A2   	movff	_intIP+1,??_main+3
  7978  001BAC  519F               	movf	??_main& (0+255),w,b
  7979  001BAE  27A1               	addwf	(??_main+2)& (0+255),f,b
  7980  001BB0  51A0               	movf	(??_main+1)& (0+255),w,b
  7981  001BB2  23A2               	addwfc	(??_main+3)& (0+255),f,b
  7982  001BB4  51A1               	movf	(??_main+2)& (0+255),w,b
  7983  001BB6  0101               	movlb	1	; () banked
  7984  001BB8  5DA3               	subwf	_pAdj& (0+255),w,b
  7985  001BBA  51A4               	movf	(_pAdj+1)& (0+255),w,b
  7986  001BBC  0A80               	xorlw	128
  7987  001BBE  0103               	movlb	3	; () banked
  7988  001BC0  6FA3               	movwf	(??_main+4)& (0+255),b
  7989  001BC2  51A2               	movf	(??_main+3)& (0+255),w,b
  7990  001BC4  0A80               	xorlw	128
  7991  001BC6  59A3               	subwfb	(??_main+4)& (0+255),w,b
  7992  001BC8  B0D8               	btfsc	status,0,c
  7993  001BCA  D073               	goto	l20796
  7994  001BCC                     u22500:
  7995                           
  7996                           ;main.c: 721:                                          ((intVentMode == VMODE_VOLUME) ||
      +                           (pAdj < (intIP - ((int16_t) ((0.045*4096+2)/5)*2))))) {;main.c: 722:                   
      +                                                LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
  7997  001BCC  84BA               	bsf	186,2,c	;volatile
  7998  001BCE  96BC               	bcf	188,3,c	;volatile
  7999                           
  8000                           ;main.c: 723:                                         rValveActuationTstamp = timeGet();
  8001  001BD0  ECFA  F050         	call	_timeGet	;wreg free
  8002  001BD4  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8003  001BDA  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;main.c: 724:                                         QuantaCheck = 1;
  8007  001BE0  0E01               	movlw	1
  8008  001BE2  0101               	movlb	1	; () banked
  8009  001BE4  6FC2               	movwf	_QuantaCheck& (0+255),b
  8010                           
  8011                           ; BSR set to: 1
  8012                           ;main.c: 725:                                         pPlatMax = pAvgUShort;
  8013  001BE6  C1EB  F1AB         	movff	_pAvgUShort,_pPlatMax
  8014  001BEA  C1EC  F1AC         	movff	_pAvgUShort+1,_pPlatMax+1
  8015                           
  8016                           ; BSR set to: 1
  8017                           ;main.c: 726:                                         printf ("PI-VO T %d - Pi %d Pq %d 
      +                          VOL %d\n", timeDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((
      +                          0.045*4096+2)/5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pQuantaInsp))>>8)), vMeasureGet());
  8018  001BEE  0E0D               	movlw	low STR_17
  8019  001BF0  6F46               	movwf	printf@fmt& (0+255),b
  8020  001BF2  0EFC               	movlw	high STR_17
  8021  001BF4  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8022  001BF6  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8023  001BFC  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8024  001C02  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8025  001C08  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8026  001C0E  EC8C  F04C         	call	_timeDiff	;wreg free
  8027  001C12  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8028  001C18  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8029  001C1E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8030  001C24  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8031  001C2A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8032  001C2C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8033  001C2E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8034  001C30  0E45               	movlw	69
  8035  001C32  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8036  001C34  0E00               	movlw	0
  8037  001C36  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8038  001C38  0E00               	movlw	0
  8039  001C3A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8040  001C3C  EC46  F049         	call	___tmul	;wreg free
  8041  001C40  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8042  001C46  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8043  001C4C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8044  001C4E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8045  001C50  698D               	setf	(?___tmul+2)& (0+255),b
  8046  001C52  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8047  001C58  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8048  001C5E  0060  F754  F08B   	movff	_pQuantaInsp,___tmul@multiplier
  8049  001C64  0060  F758  F08C   	movff	_pQuantaInsp+1,___tmul@multiplier+1
  8050  001C6A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8051  001C6C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8052  001C6E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8053  001C70  0E45               	movlw	69
  8054  001C72  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8055  001C74  0E00               	movlw	0
  8056  001C76  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8057  001C78  0E00               	movlw	0
  8058  001C7A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8059  001C7C  EC46  F049         	call	___tmul	;wreg free
  8060  001C80  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8061  001C86  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8062  001C8C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8063  001C8E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8064  001C90  698D               	setf	(?___tmul+2)& (0+255),b
  8065  001C92  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8066  001C98  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8067  001C9E  ECFE  F046         	call	_vMeasureGet	;wreg free
  8068  001CA2  0060  F290  F14E   	movff	?_vMeasureGet,?_printf+8
  8069  001CA8  0060  F294  F14F   	movff	?_vMeasureGet+1,?_printf+9
  8070  001CAE  EC68  F04E         	call	_printf	;wreg free
  8071  001CB2                     l20796:
  8072                           
  8073                           ;main.c: 733:                     screenMng();
  8074  001CB2  ECD8  F014         	call	_screenMng	;wreg free
  8075                           
  8076                           ;main.c: 734:                     MenuMng();
  8077  001CB6  EC6B  F018         	call	_MenuMng	;wreg free
  8078                           
  8079                           ;main.c: 738:                 if ((LATAbits.LATA3) && (rSV3ValveORT > ((time_t) 50*1)) &
      +                          &
  8080  001CBA  A6BA               	btfss	186,3,c	;volatile
  8081  001CBC  D063               	goto	l20816
  8082  001CBE  0101               	movlb	1	; () banked
  8083  001CC0  519A               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8084  001CC2  E104               	bnz	u22520
  8085  001CC4  0E33               	movlw	51
  8086  001CC6  5D99               	subwf	_rSV3ValveORT& (0+255),w,b
  8087  001CC8  A0D8               	btfss	status,0,c
  8088  001CCA  D05C               	goto	l20816
  8089  001CCC                     u22520:
  8090                           
  8091                           ; BSR set to: 1
  8092  001CCC  0ECE               	movlw	206
  8093  001CCE  0103               	movlb	3	; () banked
  8094  001CD0  6F9F               	movwf	??_main& (0+255),b
  8095  001CD2  0EFF               	movlw	255
  8096  001CD4  6FA0               	movwf	(??_main+1)& (0+255),b
  8097  001CD6  0060  F664  F3A1   	movff	_rSV3ValveORT,??_main+2
  8098  001CDC  0060  F668  F3A2   	movff	_rSV3ValveORT+1,??_main+3
  8099  001CE2  519F               	movf	??_main& (0+255),w,b
  8100  001CE4  27A1               	addwf	(??_main+2)& (0+255),f,b
  8101  001CE6  51A0               	movf	(??_main+1)& (0+255),w,b
  8102  001CE8  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8103  001CEA  51A1               	movf	(??_main+2)& (0+255),w,b
  8104  001CEC  0101               	movlb	1	; () banked
  8105  001CEE  5DAF               	subwf	_intIDuration& (0+255),w,b
  8106  001CF0  0103               	movlb	3	; () banked
  8107  001CF2  51A2               	movf	(??_main+3)& (0+255),w,b
  8108  001CF4  0101               	movlb	1	; () banked
  8109  001CF6  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  8110  001CF8  A0D8               	btfss	status,0,c
  8111  001CFA  D01D               	goto	u22540
  8112                           
  8113                           ; BSR set to: 1
  8114  001CFC  0060  F73C  F093   	movff	_rCycleTime,timeElapsed@prevTime
  8115  001D02  0060  F740  F094   	movff	_rCycleTime+1,timeElapsed@prevTime+1
  8116  001D08  5199               	movf	_rSV3ValveORT& (0+255),w,b
  8117  001D0A  5DAF               	subwf	_intIDuration& (0+255),w,b
  8118  001D0C  0103               	movlb	3	; () banked
  8119  001D0E  6F9F               	movwf	??_main& (0+255),b
  8120  001D10  0101               	movlb	1	; () banked
  8121  001D12  519A               	movf	(_rSV3ValveORT+1)& (0+255),w,b
  8122  001D14  59B0               	subwfb	(_intIDuration+1)& (0+255),w,b
  8123  001D16  0103               	movlb	3	; () banked
  8124  001D18  6FA0               	movwf	(??_main+1)& (0+255),b
  8125  001D1A  0E32               	movlw	50
  8126  001D1C  259F               	addwf	??_main& (0+255),w,b
  8127  001D1E  0100               	movlb	0	; () banked
  8128  001D20  6F95               	movwf	timeElapsed@duration& (0+255),b
  8129  001D22  0E00               	movlw	0
  8130  001D24  0103               	movlb	3	; () banked
  8131  001D26  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8132  001D28  0100               	movlb	0	; () banked
  8133  001D2A  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8134  001D2C  EC09  F04D         	call	_timeElapsed	;wreg free
  8135  001D30  0900               	iorlw	0
  8136  001D32  B4D8               	btfsc	status,2,c
  8137  001D34  D027               	goto	l20816
  8138  001D36                     u22540:
  8139                           
  8140                           ;main.c: 739:                         ((intIDuration < (rSV3ValveORT - ((time_t) 50*1)))
      +                           || timeElapsed(rCycleTime, intIDuration - (rSV3ValveORT - ((time_t) 50*1))))) {;main.c:
      +                           740:                     sv3DelayCheck = 1;
  8141  001D36  0E01               	movlw	1
  8142  001D38  0101               	movlb	1	; () banked
  8143  001D3A  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8144                           
  8145                           ; BSR set to: 1
  8146                           ;main.c: 741:                     rValveDelayStart = timeGet();
  8147  001D3C  ECFA  F050         	call	_timeGet	;wreg free
  8148  001D40  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  8149  001D46  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;main.c: 742:                     LATAbits.LATA3 = 0;
  8153  001D4C  96BA               	bcf	186,3,c	;volatile
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;main.c: 743:                     printf ("PI-OSV3 T %d\n", timeDiff(rCycleTime, rValveD
      +                          elayStart));
  8157  001D4E  0E23               	movlw	low STR_18
  8158  001D50  0101               	movlb	1	; () banked
  8159  001D52  6F46               	movwf	printf@fmt& (0+255),b
  8160  001D54  0EFF               	movlw	high STR_18
  8161  001D56  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8162  001D58  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8163  001D5E  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8164  001D64  0060  F65C  F097   	movff	_rValveDelayStart,timeDiff@endT
  8165  001D6A  0060  F660  F098   	movff	_rValveDelayStart+1,timeDiff@endT+1
  8166  001D70  EC8C  F04C         	call	_timeDiff	;wreg free
  8167  001D74  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8168  001D7A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8169  001D80  EC68  F04E         	call	_printf	;wreg free
  8170  001D84                     l20816:
  8171                           
  8172                           ;main.c: 746:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  8173  001D84  0EB4               	movlw	low main@printTime
  8174  001D86  0100               	movlb	0	; () banked
  8175  001D88  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8176  001D8A  0E03               	movlw	high main@printTime
  8177  001D8C  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8178  001D8E  0E00               	movlw	0
  8179  001D90  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  8180  001D92  0E14               	movlw	20
  8181  001D94  6F95               	movwf	timeElapsedR@duration& (0+255),b
  8182  001D96  ECE5  F045         	call	_timeElapsedR	;wreg free
  8183  001D9A  0900               	iorlw	0
  8184  001D9C  B4D8               	btfsc	status,2,c
  8185  001D9E  EFE7  F003         	goto	l20434
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;main.c: 747:                     printf ("-: %d %d %d %d\n", timeGet(), (LATCbits.LATC3
      +                           ? 1 : 0) + (LATAbits.LATA2 ? 2 : 0) + (LATAbits.LATA3 ? 4 : 0), pInst, pAvgShort, vMeas
      +                          ureGet());
  8189  001DA2  B6BA               	btfsc	186,3,c	;volatile
  8190  001DA4  D005               	goto	l20822
  8191                           
  8192                           ; BSR set to: 0
  8193  001DA6  0E00               	movlw	0
  8194  001DA8  0103               	movlb	3	; () banked
  8195  001DAA  6FAB               	movwf	(_main$3847+1)& (0+255),b
  8196  001DAC  0E00               	movlw	0
  8197  001DAE  D004               	goto	L4
  8198  001DB0                     l20822:
  8199                           
  8200                           ; BSR set to: 0
  8201  001DB0  0E00               	movlw	0
  8202  001DB2  0103               	movlb	3	; () banked
  8203  001DB4  6FAB               	movwf	(_main$3847+1)& (0+255),b
  8204  001DB6  0E04               	movlw	4
  8205  001DB8                     L4:
  8206  001DB8  6FAA               	movwf	_main$3847& (0+255),b
  8207                           
  8208                           ; BSR set to: 3
  8209  001DBA  B4BA               	btfsc	186,2,c	;volatile
  8210  001DBC  D004               	goto	l20828
  8211                           
  8212                           ; BSR set to: 3
  8213  001DBE  0E00               	movlw	0
  8214  001DC0  6FAD               	movwf	(_main$3848+1)& (0+255),b
  8215  001DC2  0E00               	movlw	0
  8216  001DC4  D003               	goto	L5
  8217  001DC6                     l20828:
  8218                           
  8219                           ; BSR set to: 3
  8220  001DC6  0E00               	movlw	0
  8221  001DC8  6FAD               	movwf	(_main$3848+1)& (0+255),b
  8222  001DCA  0E02               	movlw	2
  8223  001DCC                     L5:
  8224  001DCC  6FAC               	movwf	_main$3848& (0+255),b
  8225                           
  8226                           ; BSR set to: 3
  8227  001DCE  0E05               	movlw	low STR_19
  8228  001DD0  0101               	movlb	1	; () banked
  8229  001DD2  6F46               	movwf	printf@fmt& (0+255),b
  8230  001DD4  0EFF               	movlw	high STR_19
  8231  001DD6  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8232  001DD8  ECFA  F050         	call	_timeGet	;wreg free
  8233  001DDC  0060  F24C  F148   	movff	?_timeGet,?_printf+2
  8234  001DE2  0060  F250  F149   	movff	?_timeGet+1,?_printf+3
  8235  001DE8  A6BC               	btfss	188,3,c	;volatile
  8236  001DEA  D004               	goto	u22580
  8237  001DEC  0103               	movlb	3	; () banked
  8238  001DEE  6B9F               	clrf	??_main& (0+255),b
  8239  001DF0  2B9F               	incf	??_main& (0+255),f,b
  8240  001DF2  D002               	goto	u22588
  8241  001DF4                     u22580:
  8242  001DF4  0103               	movlb	3	; () banked
  8243  001DF6  6B9F               	clrf	??_main& (0+255),b
  8244  001DF8                     u22588:
  8245  001DF8  519F               	movf	??_main& (0+255),w,b
  8246  001DFA  25AC               	addwf	_main$3848& (0+255),w,b
  8247  001DFC  6FA0               	movwf	(??_main+1)& (0+255),b
  8248  001DFE  0E00               	movlw	0
  8249  001E00  21AD               	addwfc	(_main$3848+1)& (0+255),w,b
  8250  001E02  6FA1               	movwf	(??_main+2)& (0+255),b
  8251  001E04  51AA               	movf	_main$3847& (0+255),w,b
  8252  001E06  25A0               	addwf	(??_main+1)& (0+255),w,b
  8253  001E08  0101               	movlb	1	; () banked
  8254  001E0A  6F4A               	movwf	(?_printf+4)& (0+255),b
  8255  001E0C  0103               	movlb	3	; () banked
  8256  001E0E  51AB               	movf	(_main$3847+1)& (0+255),w,b
  8257  001E10  21A1               	addwfc	(??_main+2)& (0+255),w,b
  8258  001E12  0101               	movlb	1	; () banked
  8259  001E14  6F4B               	movwf	(?_printf+5)& (0+255),b
  8260  001E16  0060  F7BC  F14C   	movff	_pInst,?_printf+6
  8261  001E1C  0060  F7C0  F14D   	movff	_pInst+1,?_printf+7
  8262  001E22  0060  F7B4  F14E   	movff	_pAvgShort,?_printf+8
  8263  001E28  0060  F7B8  F14F   	movff	_pAvgShort+1,?_printf+9
  8264  001E2E  ECFE  F046         	call	_vMeasureGet	;wreg free
  8265  001E32  0060  F290  F150   	movff	?_vMeasureGet,?_printf+10
  8266  001E38  0060  F294  F151   	movff	?_vMeasureGet+1,?_printf+11
  8267  001E3E  EC68  F04E         	call	_printf	;wreg free
  8268  001E42  EFE7  F003         	goto	l20434
  8269  001E46                     l20832:
  8270                           
  8271                           ; BSR set to: 1
  8272                           ;main.c: 756:             lastCycleVol = vMeasureGet();
  8273  001E46  ECFE  F046         	call	_vMeasureGet	;wreg free
  8274  001E4A  0060  F290  F244   	movff	?_vMeasureGet,_lastCycleVol
  8275  001E50  0060  F294  F245   	movff	?_vMeasureGet+1,_lastCycleVol+1
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;main.c: 757:             sprintf(lcdBtnRRow, "V% 4d", lastCycleVol);
  8279  001E56  0EC1               	movlw	low _lcdBtnRRow
  8280  001E58  0101               	movlb	1	; () banked
  8281  001E5A  6F46               	movwf	sprintf@s& (0+255),b
  8282  001E5C  0E02               	movlw	high _lcdBtnRRow
  8283  001E5E  6F47               	movwf	(sprintf@s+1)& (0+255),b
  8284  001E60  0EF4               	movlw	low STR_20
  8285  001E62  6F48               	movwf	sprintf@fmt& (0+255),b
  8286  001E64  0EFF               	movlw	high STR_20
  8287  001E66  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
  8288  001E68  0060  F910  F14A   	movff	_lastCycleVol,?_sprintf+4
  8289  001E6E  0060  F914  F14B   	movff	_lastCycleVol+1,?_sprintf+5
  8290  001E74  EC58  F047         	call	_sprintf	;wreg free
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;main.c: 758:             lcdPrintBRR = 1;
  8294  001E78  0E01               	movlw	1
  8295  001E7A  6FCC               	movwf	_lcdPrintBRR& (0+255),b
  8296                           
  8297                           ; BSR set to: 1
  8298                           ;main.c: 763:             printf ("\nEP\n");
  8299  001E7C  0EFA               	movlw	low STR_21
  8300  001E7E  6F46               	movwf	printf@fmt& (0+255),b
  8301  001E80  0EFF               	movlw	high STR_21
  8302  001E82  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8303  001E84  EC68  F04E         	call	_printf	;wreg free
  8304                           
  8305                           ; BSR set to: 2
  8306                           ;main.c: 765:             aCaptRstFlt(Flt0PSensor);
  8307  001E88  0E03               	movlw	3
  8308  001E8A  EC6C  F03B         	call	_aCaptRstFlt
  8309                           
  8310                           ; BSR set to: 57
  8311                           ;main.c: 766:             aCaptRstFlt(Flt1PSensor);
  8312  001E8E  0E04               	movlw	4
  8313  001E90  EC6C  F03B         	call	_aCaptRstFlt
  8314                           
  8315                           ; BSR set to: 57
  8316                           ;main.c: 767:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8317  001E94  94BA               	bcf	186,2,c	;volatile
  8318                           
  8319                           ; BSR set to: 57
  8320  001E96  96BC               	bcf	188,3,c	;volatile
  8321                           
  8322                           ; BSR set to: 57
  8323                           ;main.c: 768:             if (LATAbits.LATA3) {
  8324  001E98  A6BA               	btfss	186,3,c	;volatile
  8325  001E9A  D00C               	goto	l20856
  8326                           
  8327                           ; BSR set to: 57
  8328                           ;main.c: 769:                 LATAbits.LATA3 = 0;
  8329  001E9C  96BA               	bcf	186,3,c	;volatile
  8330                           
  8331                           ; BSR set to: 57
  8332                           ;main.c: 770:                 sv3DelayCheck = 1;
  8333  001E9E  0E01               	movlw	1
  8334  001EA0  0101               	movlb	1	; () banked
  8335  001EA2  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8336                           
  8337                           ; BSR set to: 1
  8338                           ;main.c: 771:                 rValveDelayStart = timeGet();
  8339  001EA4  ECFA  F050         	call	_timeGet	;wreg free
  8340  001EA8  0060  F24C  F197   	movff	?_timeGet,_rValveDelayStart
  8341  001EAE  0060  F250  F198   	movff	?_timeGet+1,_rValveDelayStart+1
  8342  001EB4                     l20856:
  8343                           
  8344                           ;main.c: 774:             initExpSubState = 1;
  8345  001EB4  0E01               	movlw	1
  8346  001EB6  0101               	movlb	1	; () banked
  8347  001EB8  6FC7               	movwf	_initExpSubState& (0+255),b
  8348                           
  8349                           ; BSR set to: 1
  8350                           ;main.c: 775:             OSCheck = 0;
  8351  001EBA  0E00               	movlw	0
  8352  001EBC  6FC3               	movwf	_OSCheck& (0+255),b
  8353                           
  8354                           ; BSR set to: 1
  8355                           ;main.c: 776:             QuantaCheck = 0;
  8356  001EBE  0E00               	movlw	0
  8357  001EC0  6FC2               	movwf	_QuantaCheck& (0+255),b
  8358  001EC2                     l20862:
  8359                           
  8360                           ;main.c: 779:                 if (intVentMode == VMODE_PRESSURE) {
  8361  001EC2  0101               	movlb	1	; () banked
  8362  001EC4  51CA               	movf	_intVentMode& (0+255),w,b
  8363  001EC6  A4D8               	btfss	status,2,c
  8364  001EC8  D004               	goto	l20866
  8365                           
  8366                           ; BSR set to: 1
  8367                           ;main.c: 780:                     MonitorMsgSend(MONSTATE_RUNP);
  8368  001ECA  0E10               	movlw	16
  8369  001ECC  EC7E  F04E         	call	_MonitorMsgSend
  8370                           
  8371                           ;main.c: 781:                 } else {
  8372  001ED0  D003               	goto	l20868
  8373  001ED2                     l20866:
  8374                           
  8375                           ; BSR set to: 1
  8376                           ;main.c: 782:                     MonitorMsgSend(MONSTATE_RUNV);
  8377  001ED2  0E14               	movlw	20
  8378  001ED4  EC7E  F04E         	call	_MonitorMsgSend
  8379  001ED8                     l20868:
  8380                           
  8381                           ;main.c: 785:                 if (timeElapsedR(&rCycleTime, intEDuration)) {
  8382  001ED8  0ECF               	movlw	low _rCycleTime
  8383  001EDA  0100               	movlb	0	; () banked
  8384  001EDC  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  8385  001EDE  0E01               	movlw	high _rCycleTime
  8386  001EE0  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  8387  001EE2  0060  F920  F095   	movff	_intEDuration,timeElapsedR@duration
  8388  001EE8  0060  F924  F096   	movff	_intEDuration+1,timeElapsedR@duration+1
  8389  001EEE  ECE5  F045         	call	_timeElapsedR	;wreg free
  8390  001EF2  0900               	iorlw	0
  8391  001EF4  B4D8               	btfsc	status,2,c
  8392  001EF6  D02C               	goto	l20884
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;main.c: 787:                     sBreath = 0;
  8396  001EF8  0E00               	movlw	0
  8397  001EFA  0101               	movlb	1	; () banked
  8398  001EFC  6FC9               	movwf	_sBreath& (0+255),b
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;main.c: 788:                     bRateUpdt(0);
  8402  001EFE  0E00               	movlw	0
  8403  001F00  EC2D  F03E         	call	_bRateUpdt
  8404                           
  8405                           ; BSR set to: 2
  8406                           ;main.c: 789:                     if (initExpSubState) {
  8407  001F04  0101               	movlb	1	; () banked
  8408  001F06  51C7               	movf	_initExpSubState& (0+255),w,b
  8409  001F08  B4D8               	btfsc	status,2,c
  8410  001F0A  D003               	goto	l20878
  8411                           
  8412                           ; BSR set to: 1
  8413                           ;main.c: 791:                         MonitorErrorSet(MON_EPE);
  8414  001F0C  0E10               	movlw	16
  8415  001F0E  EC03  F051         	call	_MonitorErrorSet
  8416  001F12                     l20878:
  8417                           
  8418                           ; BSR set to: 1
  8419                           ;main.c: 793:                     if (OSCheck) {
  8420  001F12  51C3               	movf	_OSCheck& (0+255),w,b
  8421  001F14  B4D8               	btfsc	status,2,c
  8422  001F16  EFCE  F014         	goto	l21020
  8423                           
  8424                           ; BSR set to: 1
  8425                           ;main.c: 795:                         pExpOS = (3 * pExpOS) >> 2;
  8426  001F1A  0060  F784  F09B   	movff	_pExpOS,___wmul@multiplier
  8427  001F20  0060  F788  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  8428  001F26  0E00               	movlw	0
  8429  001F28  0100               	movlb	0	; () banked
  8430  001F2A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8431  001F2C  0E03               	movlw	3
  8432  001F2E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8433  001F30  EC21  F04D         	call	___wmul	;wreg free
  8434  001F34  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8435  001F36  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8436  001F38  339B               	rrcf	?___wmul& (0+255),f,b
  8437  001F3A  359C               	rlcf	(?___wmul+1)& (0+255),w,b
  8438  001F3C  339C               	rrcf	(?___wmul+1)& (0+255),f,b
  8439  001F3E  339B               	rrcf	?___wmul& (0+255),f,b
  8440  001F40  0060  F26C  F1E1   	movff	?___wmul,_pExpOS
  8441  001F46  0060  F270  F1E2   	movff	?___wmul+1,_pExpOS+1
  8442  001F4C  EFCE  F014         	goto	l21020
  8443  001F50                     l20884:
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;main.c: 799:                     aCaptGetResult(MainPSensor, &pInst);
  8447  001F50  0EEF               	movlw	low _pInst
  8448  001F52  0101               	movlb	1	; () banked
  8449  001F54  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8450  001F56  0E01               	movlw	high _pInst
  8451  001F58  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8452  001F5A  0E00               	movlw	0
  8453  001F5C  EC83  F031         	call	_aCaptGetResult
  8454                           
  8455                           ;main.c: 800:                     pPeepActual = pInst;
  8456  001F60  C1EF  F1A9         	movff	_pInst,_pPeepActual
  8457  001F64  C1F0  F1AA         	movff	_pInst+1,_pPeepActual+1
  8458                           
  8459                           ;main.c: 801:                     if (initExpSubState) {
  8460  001F68  0101               	movlb	1	; () banked
  8461  001F6A  51C7               	movf	_initExpSubState& (0+255),w,b
  8462  001F6C  B4D8               	btfsc	status,2,c
  8463  001F6E  D10A               	goto	l20930
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;main.c: 807:                         aCaptGetResult(Flt1PSensor, &pAvgShort);
  8467  001F70  0EED               	movlw	low _pAvgShort
  8468  001F72  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8469  001F74  0E01               	movlw	high _pAvgShort
  8470  001F76  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8471  001F78  0E04               	movlw	4
  8472  001F7A  EC83  F031         	call	_aCaptGetResult
  8473                           
  8474                           ;main.c: 811:                         tmpVal = intPEEP - pExpOS;
  8475  001F7E  0101               	movlb	1	; () banked
  8476  001F80  51E1               	movf	_pExpOS& (0+255),w,b
  8477  001F82  5DB1               	subwf	_intPEEP& (0+255),w,b
  8478  001F84  0103               	movlb	3	; () banked
  8479  001F86  6FBF               	movwf	main@tmpVal& (0+255),b
  8480  001F88  0101               	movlb	1	; () banked
  8481  001F8A  51E2               	movf	(_pExpOS+1)& (0+255),w,b
  8482  001F8C  59B2               	subwfb	(_intPEEP+1)& (0+255),w,b
  8483  001F8E  0103               	movlb	3	; () banked
  8484  001F90  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8485                           
  8486                           ; BSR set to: 3
  8487                           ;main.c: 812:                         if (tmpVal <= ((int16_t) ((0.045*4096+2)/5)*1)) {
  8488  001F92  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  8489  001F94  D006               	goto	u22650
  8490  001F96  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8491  001F98  E108               	bnz	l20898
  8492  001F9A  0E26               	movlw	38
  8493  001F9C  5DBF               	subwf	main@tmpVal& (0+255),w,b
  8494  001F9E  B0D8               	btfsc	status,0,c
  8495  001FA0  D004               	goto	l20898
  8496  001FA2                     u22650:
  8497                           
  8498                           ; BSR set to: 3
  8499                           ;main.c: 813:                             tmpVal = ((int16_t) ((0.045*4096+2)/5)*1);
  8500  001FA2  0E00               	movlw	0
  8501  001FA4  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8502  001FA6  0E25               	movlw	37
  8503  001FA8  6FBF               	movwf	main@tmpVal& (0+255),b
  8504  001FAA                     l20898:
  8505                           
  8506                           ; BSR set to: 3
  8507                           ;main.c: 815:                         if (pAvgShort < tmpVal) {
  8508  001FAA  51BF               	movf	main@tmpVal& (0+255),w,b
  8509  001FAC  0101               	movlb	1	; () banked
  8510  001FAE  5DED               	subwf	_pAvgShort& (0+255),w,b
  8511  001FB0  51EE               	movf	(_pAvgShort+1)& (0+255),w,b
  8512  001FB2  0A80               	xorlw	128
  8513  001FB4  0103               	movlb	3	; () banked
  8514  001FB6  6F9F               	movwf	??_main& (0+255),b
  8515  001FB8  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8516  001FBA  0A80               	xorlw	128
  8517  001FBC  599F               	subwfb	??_main& (0+255),w,b
  8518  001FBE  B0D8               	btfsc	status,0,c
  8519  001FC0  D06D               	goto	l20912
  8520                           
  8521                           ; BSR set to: 3
  8522                           ;main.c: 816:                             LATAbits.LATA3 = 1;
  8523  001FC2  86BA               	bsf	186,3,c	;volatile
  8524                           
  8525                           ; BSR set to: 3
  8526                           ;main.c: 817:                             initExpSubState = 0;
  8527  001FC4  0E00               	movlw	0
  8528  001FC6  0101               	movlb	1	; () banked
  8529  001FC8  6FC7               	movwf	_initExpSubState& (0+255),b
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;main.c: 818:                             rValveActuationTstamp = timeGet();
  8533  001FCA  ECFA  F050         	call	_timeGet	;wreg free
  8534  001FCE  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8535  001FD4  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;main.c: 819:                             pValveActuation = pInst;
  8539  001FDA  C1EF  F1E5         	movff	_pInst,_pValveActuation
  8540  001FDE  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;main.c: 820:                             OSCheck = 1;
  8544  001FE2  0E01               	movlw	1
  8545  001FE4  0101               	movlb	1	; () banked
  8546  001FE6  6FC3               	movwf	_OSCheck& (0+255),b
  8547                           
  8548                           ; BSR set to: 1
  8549                           ;main.c: 821:                             printf ("PEI end T %d - Pi %d OS %d\n", timeDi
      +                          ff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int2
      +                          4_t) pExpOS))>>8)));
  8550  001FE8  0E4A               	movlw	low STR_22
  8551  001FEA  6F46               	movwf	printf@fmt& (0+255),b
  8552  001FEC  0EFC               	movlw	high STR_22
  8553  001FEE  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8554  001FF0  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8555  001FF6  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8556  001FFC  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  8557  002002  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  8558  002008  EC8C  F04C         	call	_timeDiff	;wreg free
  8559  00200C  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8560  002012  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8561  002018  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8562  00201E  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8563  002024  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8564  002026  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8565  002028  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8566  00202A  0E45               	movlw	69
  8567  00202C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8568  00202E  0E00               	movlw	0
  8569  002030  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8570  002032  0E00               	movlw	0
  8571  002034  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8572  002036  EC46  F049         	call	___tmul	;wreg free
  8573  00203A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8574  002040  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8575  002046  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8576  002048  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8577  00204A  698D               	setf	(?___tmul+2)& (0+255),b
  8578  00204C  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8579  002052  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8580  002058  0060  F784  F08B   	movff	_pExpOS,___tmul@multiplier
  8581  00205E  0060  F788  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  8582  002064  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8583  002066  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8584  002068  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8585  00206A  0E45               	movlw	69
  8586  00206C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8587  00206E  0E00               	movlw	0
  8588  002070  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8589  002072  0E00               	movlw	0
  8590  002074  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8591  002076  EC46  F049         	call	___tmul	;wreg free
  8592  00207A  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8593  002080  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8594  002086  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8595  002088  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8596  00208A  698D               	setf	(?___tmul+2)& (0+255),b
  8597  00208C  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8598  002092  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8599  002098  EC68  F04E         	call	_printf	;wreg free
  8600  00209C                     l20912:
  8601                           
  8602                           ;main.c: 826:                         if (sv3DelayCheck) {
  8603  00209C  0101               	movlb	1	; () banked
  8604  00209E  51C4               	movf	_sv3DelayCheck& (0+255),w,b
  8605  0020A0  B4D8               	btfsc	status,2,c
  8606  0020A2  D383               	goto	l21016
  8607                           
  8608                           ; BSR set to: 1
  8609                           ;main.c: 829:                             if ((pInst <= ((intPEEP + pPlatInsp) >> 1)) ||
      +                           (pInst < (pAvgShort - ((int16_t) ((0.045*4096+2)/5)*3)))) {
  8610  0020A4  51E3               	movf	_pPlatInsp& (0+255),w,b
  8611  0020A6  25B1               	addwf	_intPEEP& (0+255),w,b
  8612  0020A8  0103               	movlb	3	; () banked
  8613  0020AA  6F9F               	movwf	??_main& (0+255),b
  8614  0020AC  0101               	movlb	1	; () banked
  8615  0020AE  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
  8616  0020B0  21B2               	addwfc	(_intPEEP+1)& (0+255),w,b
  8617  0020B2  0103               	movlb	3	; () banked
  8618  0020B4  6FA0               	movwf	(??_main+1)& (0+255),b
  8619  0020B6  35A0               	rlcf	(??_main+1)& (0+255),w,b
  8620  0020B8  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8621  0020BA  6FA2               	movwf	(??_main+3)& (0+255),b
  8622  0020BC  319F               	rrcf	??_main& (0+255),w,b
  8623  0020BE  6FA1               	movwf	(??_main+2)& (0+255),b
  8624  0020C0  0101               	movlb	1	; () banked
  8625  0020C2  51EF               	movf	_pInst& (0+255),w,b
  8626  0020C4  0103               	movlb	3	; () banked
  8627  0020C6  5DA1               	subwf	(??_main+2)& (0+255),w,b
  8628  0020C8  51A2               	movf	(??_main+3)& (0+255),w,b
  8629  0020CA  0A80               	xorlw	128
  8630  0020CC  6FA3               	movwf	(??_main+4)& (0+255),b
  8631  0020CE  0101               	movlb	1	; () banked
  8632  0020D0  51F0               	movf	(_pInst+1)& (0+255),w,b
  8633  0020D2  0A80               	xorlw	128
  8634  0020D4  0103               	movlb	3	; () banked
  8635  0020D6  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8636  0020D8  B0D8               	btfsc	status,0,c
  8637  0020DA  D01A               	goto	u22690
  8638                           
  8639                           ; BSR set to: 3
  8640  0020DC  0E91               	movlw	145
  8641  0020DE  6F9F               	movwf	??_main& (0+255),b
  8642  0020E0  0EFF               	movlw	255
  8643  0020E2  6FA0               	movwf	(??_main+1)& (0+255),b
  8644  0020E4  0060  F7B4  F3A1   	movff	_pAvgShort,??_main+2
  8645  0020EA  0060  F7B8  F3A2   	movff	_pAvgShort+1,??_main+3
  8646  0020F0  519F               	movf	??_main& (0+255),w,b
  8647  0020F2  27A1               	addwf	(??_main+2)& (0+255),f,b
  8648  0020F4  51A0               	movf	(??_main+1)& (0+255),w,b
  8649  0020F6  23A2               	addwfc	(??_main+3)& (0+255),f,b
  8650  0020F8  51A1               	movf	(??_main+2)& (0+255),w,b
  8651  0020FA  0101               	movlb	1	; () banked
  8652  0020FC  5DEF               	subwf	_pInst& (0+255),w,b
  8653  0020FE  51F0               	movf	(_pInst+1)& (0+255),w,b
  8654  002100  0A80               	xorlw	128
  8655  002102  0103               	movlb	3	; () banked
  8656  002104  6FA3               	movwf	(??_main+4)& (0+255),b
  8657  002106  51A2               	movf	(??_main+3)& (0+255),w,b
  8658  002108  0A80               	xorlw	128
  8659  00210A  59A3               	subwfb	(??_main+4)& (0+255),w,b
  8660  00210C  B0D8               	btfsc	status,0,c
  8661  00210E  D34D               	goto	l21016
  8662  002110                     u22690:
  8663                           
  8664                           ; BSR set to: 3
  8665                           ;main.c: 830:                                 sv3DelayCheck = 0;
  8666  002110  0E00               	movlw	0
  8667  002112  0101               	movlb	1	; () banked
  8668  002114  6FC4               	movwf	_sv3DelayCheck& (0+255),b
  8669                           
  8670                           ; BSR set to: 1
  8671                           ;main.c: 832:                                 rTimeTmp = timeDiff(rValveDelayStart, time
      +                          Get());
  8672  002116  0060  F65C  F095   	movff	_rValveDelayStart,timeDiff@startT
  8673  00211C  0060  F660  F096   	movff	_rValveDelayStart+1,timeDiff@startT+1
  8674  002122  ECFA  F050         	call	_timeGet	;wreg free
  8675  002126  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8676  00212C  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8677  002132  EC8C  F04C         	call	_timeDiff	;wreg free
  8678  002136  0060  F254  F195   	movff	?_timeDiff,_rTimeTmp
  8679  00213C  0060  F258  F196   	movff	?_timeDiff+1,_rTimeTmp+1
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;main.c: 833:                                 if (rTimeTmp < ((time_t) 600*1)) {
  8683  002142  0E58               	movlw	88
  8684  002144  0101               	movlb	1	; () banked
  8685  002146  5D95               	subwf	_rTimeTmp& (0+255),w,b
  8686  002148  0E02               	movlw	2
  8687  00214A  5996               	subwfb	(_rTimeTmp+1)& (0+255),w,b
  8688  00214C  B0D8               	btfsc	status,0,c
  8689  00214E  D016               	goto	l20928
  8690                           
  8691                           ; BSR set to: 1
  8692                           ;main.c: 835:                                     rSV3ValveORT = (rSV3ValveORT + rTimeTm
      +                          p) >> 1;
  8693  002150  5195               	movf	_rTimeTmp& (0+255),w,b
  8694  002152  2599               	addwf	_rSV3ValveORT& (0+255),w,b
  8695  002154  0103               	movlb	3	; () banked
  8696  002156  6F9F               	movwf	??_main& (0+255),b
  8697  002158  0101               	movlb	1	; () banked
  8698  00215A  5196               	movf	(_rTimeTmp+1)& (0+255),w,b
  8699  00215C  219A               	addwfc	(_rSV3ValveORT+1)& (0+255),w,b
  8700  00215E  0103               	movlb	3	; () banked
  8701  002160  6FA0               	movwf	(??_main+1)& (0+255),b
  8702  002162  90D8               	bcf	status,0,c
  8703  002164  31A0               	rrcf	(??_main+1)& (0+255),w,b
  8704  002166  6FA1               	movwf	(??_main+2)& (0+255),b
  8705  002168  319F               	rrcf	??_main& (0+255),w,b
  8706  00216A  0101               	movlb	1	; () banked
  8707  00216C  6F99               	movwf	_rSV3ValveORT& (0+255),b
  8708  00216E  0060  FE84  F19A   	movff	??_main+2,_rSV3ValveORT+1
  8709                           
  8710                           ; BSR set to: 1
  8711                           ;main.c: 837:                                     MonitorErrorClr(MON_SV3E);
  8712  002174  0E40               	movlw	64
  8713  002176  EC0C  F051         	call	_MonitorErrorClr
  8714                           
  8715                           ;main.c: 838:                                 } else {
  8716  00217A  D317               	goto	l21016
  8717  00217C                     l20928:
  8718                           
  8719                           ; BSR set to: 1
  8720                           ;main.c: 840:                                     MonitorErrorSet(MON_SV3E);
  8721  00217C  0E40               	movlw	64
  8722  00217E  EC03  F051         	call	_MonitorErrorSet
  8723  002182  D313               	goto	l21016
  8724  002184                     l20930:
  8725                           
  8726                           ; BSR set to: 1
  8727                           ;main.c: 846:                         MonitorErrorClr(MON_EPE);
  8728  002184  0E10               	movlw	16
  8729  002186  EC0C  F051         	call	_MonitorErrorClr
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;main.c: 847:                         if ((LATAbits.LATA2|LATCbits.LATC3) && (timeElapse
      +                          d(rValveActuationTstamp, ((time_t) 15*1)) || (pInst > intMaxP))) {
  8733  00218A  0E00               	movlw	0
  8734  00218C  B4BA               	btfsc	186,2,c	;volatile
  8735  00218E  0E01               	movlw	1
  8736  002190  B6BC               	btfsc	188,3,c	;volatile
  8737  002192  0E01               	movlw	1
  8738  002194  A0E8               	btfss	wreg,0,c
  8739  002196  D004               	goto	u22710
  8740  002198  0103               	movlb	3	; () banked
  8741  00219A  6B9F               	clrf	??_main& (0+255),b
  8742  00219C  2B9F               	incf	??_main& (0+255),f,b
  8743  00219E  D002               	goto	u22718
  8744  0021A0                     u22710:
  8745  0021A0  0103               	movlb	3	; () banked
  8746  0021A2  6B9F               	clrf	??_main& (0+255),b
  8747  0021A4                     u22718:
  8748  0021A4  519F               	movf	??_main& (0+255),w,b
  8749  0021A6  B4D8               	btfsc	status,2,c
  8750  0021A8  D06E               	goto	l20944
  8751                           
  8752                           ; BSR set to: 3
  8753  0021AA  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8754  0021B0  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8755  0021B6  0E00               	movlw	0
  8756  0021B8  0100               	movlb	0	; () banked
  8757  0021BA  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8758  0021BC  0E0F               	movlw	15
  8759  0021BE  6F95               	movwf	timeElapsed@duration& (0+255),b
  8760  0021C0  EC09  F04D         	call	_timeElapsed	;wreg free
  8761  0021C4  0900               	iorlw	0
  8762  0021C6  A4D8               	btfss	status,2,c
  8763  0021C8  D00E               	goto	u22740
  8764                           
  8765                           ; BSR set to: 0
  8766  0021CA  0101               	movlb	1	; () banked
  8767  0021CC  51EF               	movf	_pInst& (0+255),w,b
  8768  0021CE  5DF3               	subwf	_intMaxP& (0+255),w,b
  8769  0021D0  51F4               	movf	(_intMaxP+1)& (0+255),w,b
  8770  0021D2  0A80               	xorlw	128
  8771  0021D4  0103               	movlb	3	; () banked
  8772  0021D6  6F9F               	movwf	??_main& (0+255),b
  8773  0021D8  0101               	movlb	1	; () banked
  8774  0021DA  51F0               	movf	(_pInst+1)& (0+255),w,b
  8775  0021DC  0A80               	xorlw	128
  8776  0021DE  0103               	movlb	3	; () banked
  8777  0021E0  599F               	subwfb	??_main& (0+255),w,b
  8778  0021E2  B0D8               	btfsc	status,0,c
  8779  0021E4  D050               	goto	l20944
  8780  0021E6                     u22740:
  8781                           
  8782                           ;main.c: 848:                             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
  8783  0021E6  94BA               	bcf	186,2,c	;volatile
  8784  0021E8  96BC               	bcf	188,3,c	;volatile
  8785                           
  8786                           ;main.c: 849:                             rValveActuationTstamp = timeGet();
  8787  0021EA  ECFA  F050         	call	_timeGet	;wreg free
  8788  0021EE  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  8789  0021F4  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;main.c: 850:                             aCaptGetResult(MainPSensor, &pInst);
  8793  0021FA  0EEF               	movlw	low _pInst
  8794  0021FC  0101               	movlb	1	; () banked
  8795  0021FE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8796  002200  0E01               	movlw	high _pInst
  8797  002202  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8798  002204  0E00               	movlw	0
  8799  002206  EC83  F031         	call	_aCaptGetResult
  8800                           
  8801                           ;main.c: 851:                             printf ("PE VC T %d - Pi %d\n", timeDiff(rCycl
      +                          eTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) pInst
      +                          ))>>8)));
  8802  00220A  0ECC               	movlw	low STR_23
  8803  00220C  0101               	movlb	1	; () banked
  8804  00220E  6F46               	movwf	printf@fmt& (0+255),b
  8805  002210  0EFC               	movlw	high STR_23
  8806  002212  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8807  002214  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8808  00221A  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8809  002220  ECFA  F050         	call	_timeGet	;wreg free
  8810  002224  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8811  00222A  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8812  002230  EC8C  F04C         	call	_timeDiff	;wreg free
  8813  002234  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8814  00223A  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8815  002240  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8816  002246  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8817  00224C  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8818  00224E  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8819  002250  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8820  002252  0E45               	movlw	69
  8821  002254  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8822  002256  0E00               	movlw	0
  8823  002258  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8824  00225A  0E00               	movlw	0
  8825  00225C  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8826  00225E  EC46  F049         	call	___tmul	;wreg free
  8827  002262  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8828  002268  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8829  00226E  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8830  002270  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8831  002272  698D               	setf	(?___tmul+2)& (0+255),b
  8832  002274  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8833  00227A  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8834  002280  EC68  F04E         	call	_printf	;wreg free
  8835                           
  8836                           ;main.c: 852:                         } else {
  8837  002284  D28E               	goto	l1877
  8838  002286                     l20944:
  8839                           
  8840                           ; BSR set to: 3
  8841                           ;main.c: 853:                             if (OSCheck) {
  8842  002286  0101               	movlb	1	; () banked
  8843  002288  51C3               	movf	_OSCheck& (0+255),w,b
  8844  00228A  B4D8               	btfsc	status,2,c
  8845  00228C  D0BF               	goto	l20964
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;main.c: 854:                                 if (timeElapsed(rValveActuationTstamp, ((t
      +                          ime_t) 350*1) + (rSV2ValveCRT << 1))) {
  8849  00228E  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  8850  002294  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  8851  00229A  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  8852  0022A0  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  8853  0022A6  90D8               	bcf	status,0,c
  8854  0022A8  0103               	movlb	3	; () banked
  8855  0022AA  379F               	rlcf	??_main& (0+255),f,b
  8856  0022AC  37A0               	rlcf	(??_main+1)& (0+255),f,b
  8857  0022AE  0E5E               	movlw	94
  8858  0022B0  259F               	addwf	??_main& (0+255),w,b
  8859  0022B2  0100               	movlb	0	; () banked
  8860  0022B4  6F95               	movwf	timeElapsed@duration& (0+255),b
  8861  0022B6  0E01               	movlw	1
  8862  0022B8  0103               	movlb	3	; () banked
  8863  0022BA  21A0               	addwfc	(??_main+1)& (0+255),w,b
  8864  0022BC  0100               	movlb	0	; () banked
  8865  0022BE  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
  8866  0022C0  EC09  F04D         	call	_timeElapsed	;wreg free
  8867  0022C4  0900               	iorlw	0
  8868  0022C6  B4D8               	btfsc	status,2,c
  8869  0022C8  D26C               	goto	l1877
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;main.c: 856:                                     aCaptGetResult(Flt0PSensor, &pAvgUShor
      +                          t);
  8873  0022CA  0EEB               	movlw	low _pAvgUShort
  8874  0022CC  0101               	movlb	1	; () banked
  8875  0022CE  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  8876  0022D0  0E01               	movlw	high _pAvgUShort
  8877  0022D2  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  8878  0022D4  0E03               	movlw	3
  8879  0022D6  EC83  F031         	call	_aCaptGetResult
  8880                           
  8881                           ;main.c: 857:                                     pPlatExp = pAvgUShort;
  8882  0022DA  C1EB  F2CF         	movff	_pAvgUShort,_pPlatExp
  8883  0022DE  C1EC  F2D0         	movff	_pAvgUShort+1,_pPlatExp+1
  8884                           
  8885                           ;main.c: 859:                                     tmpVal = pPlatExp - pValveActuation;
  8886  0022E2  0101               	movlb	1	; () banked
  8887  0022E4  51E5               	movf	_pValveActuation& (0+255),w,b
  8888  0022E6  0102               	movlb	2	; () banked
  8889  0022E8  5DCF               	subwf	_pPlatExp& (0+255),w,b
  8890  0022EA  0103               	movlb	3	; () banked
  8891  0022EC  6FBF               	movwf	main@tmpVal& (0+255),b
  8892  0022EE  0101               	movlb	1	; () banked
  8893  0022F0  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  8894  0022F2  0102               	movlb	2	; () banked
  8895  0022F4  59D0               	subwfb	(_pPlatExp+1)& (0+255),w,b
  8896  0022F6  0103               	movlb	3	; () banked
  8897  0022F8  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  8898                           
  8899                           ; BSR set to: 3
  8900                           ;main.c: 860:                                     pExpOS = (3 * pExpOS + tmpVal) / 4;
  8901  0022FA  0060  F784  F09B   	movff	_pExpOS,___wmul@multiplier
  8902  002300  0060  F788  F09C   	movff	_pExpOS+1,___wmul@multiplier+1
  8903  002306  0E00               	movlw	0
  8904  002308  0100               	movlb	0	; () banked
  8905  00230A  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8906  00230C  0E03               	movlw	3
  8907  00230E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8908  002310  EC21  F04D         	call	___wmul	;wreg free
  8909  002314  0103               	movlb	3	; () banked
  8910  002316  51BF               	movf	main@tmpVal& (0+255),w,b
  8911  002318  0100               	movlb	0	; () banked
  8912  00231A  259B               	addwf	?___wmul& (0+255),w,b
  8913  00231C  6FA1               	movwf	___awdiv@dividend& (0+255),b
  8914  00231E  0103               	movlb	3	; () banked
  8915  002320  51C0               	movf	(main@tmpVal+1)& (0+255),w,b
  8916  002322  0100               	movlb	0	; () banked
  8917  002324  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  8918  002326  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  8919  002328  0E00               	movlw	0
  8920  00232A  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  8921  00232C  0E04               	movlw	4
  8922  00232E  6FA3               	movwf	___awdiv@divisor& (0+255),b
  8923  002330  EC78  F042         	call	___awdiv	;wreg free
  8924  002334  0060  F284  F1E1   	movff	?___awdiv,_pExpOS
  8925  00233A  0060  F288  F1E2   	movff	?___awdiv+1,_pExpOS+1
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;main.c: 862:                                     aCaptRstFlt(Flt2PSensor);
  8929  002340  0E05               	movlw	5
  8930  002342  EC6C  F03B         	call	_aCaptRstFlt
  8931                           
  8932                           ; BSR set to: 57
  8933                           ;main.c: 863:                                     aCaptRstFlt(Flt3PSensor);
  8934  002346  0E06               	movlw	6
  8935  002348  EC6C  F03B         	call	_aCaptRstFlt
  8936                           
  8937                           ; BSR set to: 57
  8938                           ;main.c: 864:                                     OSCheck = 0;
  8939  00234C  0E00               	movlw	0
  8940  00234E  0101               	movlb	1	; () banked
  8941  002350  6FC3               	movwf	_OSCheck& (0+255),b
  8942                           
  8943                           ; BSR set to: 1
  8944                           ;main.c: 865:                                     printf ("PE OSC T %d - Pi %d P0 %d\n",
      +                           timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*(
      +                          (int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) 
      +                          pAvgUShort))>>8)));
  8945  002352  0E81               	movlw	low STR_24
  8946  002354  6F46               	movwf	printf@fmt& (0+255),b
  8947  002356  0EFC               	movlw	high STR_24
  8948  002358  6F47               	movwf	(printf@fmt+1)& (0+255),b
  8949  00235A  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  8950  002360  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  8951  002366  ECFA  F050         	call	_timeGet	;wreg free
  8952  00236A  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  8953  002370  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  8954  002376  EC8C  F04C         	call	_timeDiff	;wreg free
  8955  00237A  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  8956  002380  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  8957  002386  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  8958  00238C  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  8959  002392  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8960  002394  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8961  002396  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8962  002398  0E45               	movlw	69
  8963  00239A  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8964  00239C  0E00               	movlw	0
  8965  00239E  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8966  0023A0  0E00               	movlw	0
  8967  0023A2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8968  0023A4  EC46  F049         	call	___tmul	;wreg free
  8969  0023A8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8970  0023AE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8971  0023B4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8972  0023B6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8973  0023B8  698D               	setf	(?___tmul+2)& (0+255),b
  8974  0023BA  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  8975  0023C0  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  8976  0023C6  0060  F7AC  F08B   	movff	_pAvgUShort,___tmul@multiplier
  8977  0023CC  0060  F7B0  F08C   	movff	_pAvgUShort+1,___tmul@multiplier+1
  8978  0023D2  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  8979  0023D4  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  8980  0023D6  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  8981  0023D8  0E45               	movlw	69
  8982  0023DA  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  8983  0023DC  0E00               	movlw	0
  8984  0023DE  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  8985  0023E0  0E00               	movlw	0
  8986  0023E2  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  8987  0023E4  EC46  F049         	call	___tmul	;wreg free
  8988  0023E8  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  8989  0023EE  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  8990  0023F4  6B8D               	clrf	(?___tmul+2)& (0+255),b
  8991  0023F6  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  8992  0023F8  698D               	setf	(?___tmul+2)& (0+255),b
  8993  0023FA  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  8994  002400  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  8995  002406  EC68  F04E         	call	_printf	;wreg free
  8996  00240A  D1CB               	goto	l1877
  8997  00240C                     l20964:
  8998                           
  8999                           ; BSR set to: 1
  9000                           ;main.c: 871:                                 aCaptGetResult(Flt2PSensor, &bdP1);
  9001  00240C  0EE9               	movlw	low _bdP1
  9002  00240E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9003  002410  0E01               	movlw	high _bdP1
  9004  002412  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9005  002414  0E05               	movlw	5
  9006  002416  EC83  F031         	call	_aCaptGetResult
  9007                           
  9008                           ;main.c: 872:                                 aCaptGetResult(Flt3PSensor, &bdP2);
  9009  00241A  0ED2               	movlw	low _bdP2
  9010  00241C  0101               	movlb	1	; () banked
  9011  00241E  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9012  002420  6B61               	clrf	(aCaptGetResult@outVal+1)& (0+255),b
  9013  002422  0E06               	movlw	6
  9014  002424  EC83  F031         	call	_aCaptGetResult
  9015                           
  9016                           ;main.c: 873:                                 if (((bdP1 + intBdTrig) < bdP2) || (keyPee
      +                          k() == 4)) {
  9017  002428  0102               	movlb	2	; () banked
  9018  00242A  514A               	movf	_intBdTrig& (0+255),w,b
  9019  00242C  0101               	movlb	1	; () banked
  9020  00242E  25E9               	addwf	_bdP1& (0+255),w,b
  9021  002430  0103               	movlb	3	; () banked
  9022  002432  6F9F               	movwf	??_main& (0+255),b
  9023  002434  0102               	movlb	2	; () banked
  9024  002436  514B               	movf	(_intBdTrig+1)& (0+255),w,b
  9025  002438  0101               	movlb	1	; () banked
  9026  00243A  21EA               	addwfc	(_bdP1+1)& (0+255),w,b
  9027  00243C  0103               	movlb	3	; () banked
  9028  00243E  6FA0               	movwf	(??_main+1)& (0+255),b
  9029  002440  0100               	movlb	0	; () banked
  9030  002442  51D2               	movf	_bdP2& (0+255),w,b
  9031  002444  0103               	movlb	3	; () banked
  9032  002446  5D9F               	subwf	??_main& (0+255),w,b
  9033  002448  51A0               	movf	(??_main+1)& (0+255),w,b
  9034  00244A  0A80               	xorlw	128
  9035  00244C  6FA1               	movwf	(??_main+2)& (0+255),b
  9036  00244E  0100               	movlb	0	; () banked
  9037  002450  51D3               	movf	(_bdP2+1)& (0+255),w,b
  9038  002452  0A80               	xorlw	128
  9039  002454  0103               	movlb	3	; () banked
  9040  002456  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9041  002458  A0D8               	btfss	status,0,c
  9042  00245A  D005               	goto	u22780
  9043                           
  9044                           ; BSR set to: 3
  9045  00245C  EC15  F046         	call	_keyPeek	;wreg free
  9046  002460  0A04               	xorlw	4
  9047  002462  A4D8               	btfss	status,2,c
  9048  002464  D0A6               	goto	l20982
  9049  002466                     u22780:
  9050                           
  9051                           ;main.c: 875:                                     printf ("BD VO T %d - Pi %d P50 %d P20
      +                          00 %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int24_t) bd
      +                          P1))>>8)));
  9052  002466  0EE9               	movlw	low STR_25
  9053  002468  0101               	movlb	1	; () banked
  9054  00246A  6F46               	movwf	printf@fmt& (0+255),b
  9055  00246C  0EFB               	movlw	high STR_25
  9056  00246E  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9057  002470  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9058  002476  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9059  00247C  ECFA  F050         	call	_timeGet	;wreg free
  9060  002480  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9061  002486  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9062  00248C  EC8C  F04C         	call	_timeDiff	;wreg free
  9063  002490  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9064  002496  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9065  00249C  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9066  0024A2  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9067  0024A8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9068  0024AA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9069  0024AC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9070  0024AE  0E45               	movlw	69
  9071  0024B0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9072  0024B2  0E00               	movlw	0
  9073  0024B4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9074  0024B6  0E00               	movlw	0
  9075  0024B8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9076  0024BA  EC46  F049         	call	___tmul	;wreg free
  9077  0024BE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9078  0024C4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9079  0024CA  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9080  0024CC  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9081  0024CE  698D               	setf	(?___tmul+2)& (0+255),b
  9082  0024D0  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9083  0024D6  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9084  0024DC  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9085  0024E2  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9086  0024E8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9087  0024EA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9088  0024EC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9089  0024EE  0E45               	movlw	69
  9090  0024F0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9091  0024F2  0E00               	movlw	0
  9092  0024F4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9093  0024F6  0E00               	movlw	0
  9094  0024F8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9095  0024FA  EC46  F049         	call	___tmul	;wreg free
  9096  0024FE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9097  002504  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9098  00250A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9099  00250C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9100  00250E  698D               	setf	(?___tmul+2)& (0+255),b
  9101  002510  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9102  002516  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9103  00251C  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9104  002522  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9105  002528  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9106  00252A  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9107  00252C  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9108  00252E  0E45               	movlw	69
  9109  002530  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9110  002532  0E00               	movlw	0
  9111  002534  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9112  002536  0E00               	movlw	0
  9113  002538  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9114  00253A  EC46  F049         	call	___tmul	;wreg free
  9115  00253E  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9116  002544  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9117  00254A  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9118  00254C  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9119  00254E  698D               	setf	(?___tmul+2)& (0+255),b
  9120  002550  0060  F22C  F14E   	movff	?___tmul,?_printf+8
  9121  002556  0060  F230  F14F   	movff	?___tmul+1,?_printf+9
  9122  00255C  EC68  F04E         	call	_printf	;wreg free
  9123                           
  9124                           ; BSR set to: 2
  9125                           ;main.c: 876:                                     LATDbits.LATD6 = 1;
  9126  002560  8CBD               	bsf	189,6,c	;volatile
  9127                           
  9128                           ; BSR set to: 2
  9129                           ;main.c: 877:                                     if ((bdP1 + intBdTrig) < bdP2) {
  9130  002562  514A               	movf	_intBdTrig& (0+255),w,b
  9131  002564  0101               	movlb	1	; () banked
  9132  002566  25E9               	addwf	_bdP1& (0+255),w,b
  9133  002568  0103               	movlb	3	; () banked
  9134  00256A  6F9F               	movwf	??_main& (0+255),b
  9135  00256C  0102               	movlb	2	; () banked
  9136  00256E  514B               	movf	(_intBdTrig+1)& (0+255),w,b
  9137  002570  0101               	movlb	1	; () banked
  9138  002572  21EA               	addwfc	(_bdP1+1)& (0+255),w,b
  9139  002574  0103               	movlb	3	; () banked
  9140  002576  6FA0               	movwf	(??_main+1)& (0+255),b
  9141  002578  0100               	movlb	0	; () banked
  9142  00257A  51D2               	movf	_bdP2& (0+255),w,b
  9143  00257C  0103               	movlb	3	; () banked
  9144  00257E  5D9F               	subwf	??_main& (0+255),w,b
  9145  002580  51A0               	movf	(??_main+1)& (0+255),w,b
  9146  002582  0A80               	xorlw	128
  9147  002584  6FA1               	movwf	(??_main+2)& (0+255),b
  9148  002586  0100               	movlb	0	; () banked
  9149  002588  51D3               	movf	(_bdP2+1)& (0+255),w,b
  9150  00258A  0A80               	xorlw	128
  9151  00258C  0103               	movlb	3	; () banked
  9152  00258E  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9153  002590  B0D8               	btfsc	status,0,c
  9154  002592  D204               	goto	l21020
  9155                           
  9156                           ; BSR set to: 3
  9157                           ;main.c: 878:                                         sBreath = 1;
  9158  002594  0E01               	movlw	1
  9159  002596  0101               	movlb	1	; () banked
  9160  002598  6FC9               	movwf	_sBreath& (0+255),b
  9161                           
  9162                           ; BSR set to: 1
  9163                           ;main.c: 879:                                         rCycleTime = timeGet();
  9164  00259A  ECFA  F050         	call	_timeGet	;wreg free
  9165  00259E  0060  F24C  F1CF   	movff	?_timeGet,_rCycleTime
  9166  0025A4  0060  F250  F1D0   	movff	?_timeGet+1,_rCycleTime+1
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;main.c: 880:                                         bRateUpdt(1);
  9170  0025AA  0E01               	movlw	1
  9171  0025AC  EC2D  F03E         	call	_bRateUpdt
  9172  0025B0  D1F5               	goto	l21020
  9173  0025B2                     l20982:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;main.c: 886:                                 if (timeElapsed(rValveActuationTstamp, rSV
      +                          2ValveCRT << 2)) {
  9177  0025B2  0060  F684  F093   	movff	_rValveActuationTstamp,timeElapsed@prevTime
  9178  0025B8  0060  F688  F094   	movff	_rValveActuationTstamp+1,timeElapsed@prevTime+1
  9179  0025BE  0060  F66C  F39F   	movff	_rSV2ValveCRT,??_main
  9180  0025C4  0060  F670  F3A0   	movff	_rSV2ValveCRT+1,??_main+1
  9181  0025CA  0103               	movlb	3	; () banked
  9182  0025CC  90D8               	bcf	status,0,c
  9183  0025CE  379F               	rlcf	??_main& (0+255),f,b
  9184  0025D0  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9185  0025D2  90D8               	bcf	status,0,c
  9186  0025D4  379F               	rlcf	??_main& (0+255),f,b
  9187  0025D6  37A0               	rlcf	(??_main+1)& (0+255),f,b
  9188  0025D8  0060  FE7C  F095   	movff	??_main,timeElapsed@duration
  9189  0025DE  0060  FE80  F096   	movff	??_main+1,timeElapsed@duration+1
  9190  0025E4  EC09  F04D         	call	_timeElapsed	;wreg free
  9191  0025E8  0900               	iorlw	0
  9192  0025EA  B4D8               	btfsc	status,2,c
  9193  0025EC  D0DA               	goto	l1877
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;main.c: 887:                                     if (QuantaCheck) {
  9197  0025EE  0101               	movlb	1	; () banked
  9198  0025F0  51C2               	movf	_QuantaCheck& (0+255),w,b
  9199  0025F2  B4D8               	btfsc	status,2,c
  9200  0025F4  D041               	goto	l21000
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;main.c: 888:                                         QuantaCheck = 0;
  9204  0025F6  0E00               	movlw	0
  9205  0025F8  6FC2               	movwf	_QuantaCheck& (0+255),b
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;main.c: 889:                                         tmpVal = (bdP1 - pValveActuation);
  9209  0025FA  51E5               	movf	_pValveActuation& (0+255),w,b
  9210  0025FC  5DE9               	subwf	_bdP1& (0+255),w,b
  9211  0025FE  0103               	movlb	3	; () banked
  9212  002600  6FBF               	movwf	main@tmpVal& (0+255),b
  9213  002602  0101               	movlb	1	; () banked
  9214  002604  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
  9215  002606  59EA               	subwfb	(_bdP1+1)& (0+255),w,b
  9216  002608  0103               	movlb	3	; () banked
  9217  00260A  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  9218                           
  9219                           ; BSR set to: 3
  9220                           ;main.c: 890:                                         if (tmpVal > ((int16_t) ((0.045*40
      +                          96+2)/5)*8)) {
  9221  00260C  BFC0               	btfsc	(main@tmpVal+1)& (0+255),7,b
  9222  00260E  D00A               	goto	l20994
  9223  002610  0E29               	movlw	41
  9224  002612  5DBF               	subwf	main@tmpVal& (0+255),w,b
  9225  002614  0E01               	movlw	1
  9226  002616  59C0               	subwfb	(main@tmpVal+1)& (0+255),w,b
  9227  002618  A0D8               	btfss	status,0,c
  9228  00261A  D004               	goto	l20994
  9229                           
  9230                           ; BSR set to: 3
  9231                           ;main.c: 891:                                             tmpVal = ((int16_t) ((0.045*40
      +                          96+2)/5)*8);
  9232  00261C  0E01               	movlw	1
  9233  00261E  6FC0               	movwf	(main@tmpVal+1)& (0+255),b
  9234  002620  0E28               	movlw	40
  9235  002622  6FBF               	movwf	main@tmpVal& (0+255),b
  9236  002624                     l20994:
  9237                           
  9238                           ; BSR set to: 3
  9239                           ;main.c: 894:                                         pQuantaExp = (3 * tmpVal + pQuanta
      +                          Exp) / 4;
  9240  002624  0060  FEFC  F09B   	movff	main@tmpVal,___wmul@multiplier
  9241  00262A  0060  FF00  F09C   	movff	main@tmpVal+1,___wmul@multiplier+1
  9242  002630  0E00               	movlw	0
  9243  002632  0100               	movlb	0	; () banked
  9244  002634  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9245  002636  0E03               	movlw	3
  9246  002638  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  9247  00263A  EC21  F04D         	call	___wmul	;wreg free
  9248  00263E  0101               	movlb	1	; () banked
  9249  002640  51D3               	movf	_pQuantaExp& (0+255),w,b
  9250  002642  0100               	movlb	0	; () banked
  9251  002644  259B               	addwf	?___wmul& (0+255),w,b
  9252  002646  6FA1               	movwf	___awdiv@dividend& (0+255),b
  9253  002648  0101               	movlb	1	; () banked
  9254  00264A  51D4               	movf	(_pQuantaExp+1)& (0+255),w,b
  9255  00264C  0100               	movlb	0	; () banked
  9256  00264E  219C               	addwfc	(?___wmul+1)& (0+255),w,b
  9257  002650  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
  9258  002652  0E00               	movlw	0
  9259  002654  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  9260  002656  0E04               	movlw	4
  9261  002658  6FA3               	movwf	___awdiv@divisor& (0+255),b
  9262  00265A  EC78  F042         	call	___awdiv	;wreg free
  9263  00265E  0060  F284  F1D3   	movff	?___awdiv,_pQuantaExp
  9264  002664  0060  F288  F1D4   	movff	?___awdiv+1,_pQuantaExp+1
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;main.c: 895:                                         if (pQuantaExp < 0) {
  9268  00266A  0101               	movlb	1	; () banked
  9269  00266C  AFD4               	btfss	(_pQuantaExp+1)& (0+255),7,b
  9270  00266E  D004               	goto	l21000
  9271                           
  9272                           ; BSR set to: 1
  9273                           ;main.c: 896:                                             pQuantaExp = 0;
  9274  002670  0E00               	movlw	0
  9275  002672  6FD4               	movwf	(_pQuantaExp+1)& (0+255),b
  9276  002674  0E00               	movlw	0
  9277  002676  6FD3               	movwf	_pQuantaExp& (0+255),b
  9278  002678                     l21000:
  9279                           
  9280                           ; BSR set to: 1
  9281                           ;main.c: 899:                                     if ((bdP1 + (pQuantaExp >> 1)) < (intP
      +                          EEP - ((int16_t) ((0.045*4096+2)/5)*1))) {
  9282  002678  0EDB               	movlw	219
  9283  00267A  0103               	movlb	3	; () banked
  9284  00267C  6F9F               	movwf	??_main& (0+255),b
  9285  00267E  0EFF               	movlw	255
  9286  002680  6FA0               	movwf	(??_main+1)& (0+255),b
  9287  002682  0060  F6C4  F3A1   	movff	_intPEEP,??_main+2
  9288  002688  0060  F6C8  F3A2   	movff	_intPEEP+1,??_main+3
  9289  00268E  519F               	movf	??_main& (0+255),w,b
  9290  002690  27A1               	addwf	(??_main+2)& (0+255),f,b
  9291  002692  51A0               	movf	(??_main+1)& (0+255),w,b
  9292  002694  23A2               	addwfc	(??_main+3)& (0+255),f,b
  9293  002696  0101               	movlb	1	; () banked
  9294  002698  35D4               	rlcf	(_pQuantaExp+1)& (0+255),w,b
  9295  00269A  31D4               	rrcf	(_pQuantaExp+1)& (0+255),w,b
  9296  00269C  0103               	movlb	3	; () banked
  9297  00269E  6FA4               	movwf	(??_main+5)& (0+255),b
  9298  0026A0  0101               	movlb	1	; () banked
  9299  0026A2  31D3               	rrcf	_pQuantaExp& (0+255),w,b
  9300  0026A4  0103               	movlb	3	; () banked
  9301  0026A6  6FA3               	movwf	(??_main+4)& (0+255),b
  9302  0026A8  0101               	movlb	1	; () banked
  9303  0026AA  51E9               	movf	_bdP1& (0+255),w,b
  9304  0026AC  0103               	movlb	3	; () banked
  9305  0026AE  27A3               	addwf	(??_main+4)& (0+255),f,b
  9306  0026B0  0101               	movlb	1	; () banked
  9307  0026B2  51EA               	movf	(_bdP1+1)& (0+255),w,b
  9308  0026B4  0103               	movlb	3	; () banked
  9309  0026B6  23A4               	addwfc	(??_main+5)& (0+255),f,b
  9310  0026B8  51A1               	movf	(??_main+2)& (0+255),w,b
  9311  0026BA  5DA3               	subwf	(??_main+4)& (0+255),w,b
  9312  0026BC  51A4               	movf	(??_main+5)& (0+255),w,b
  9313  0026BE  0A80               	xorlw	128
  9314  0026C0  6FA5               	movwf	(??_main+6)& (0+255),b
  9315  0026C2  51A2               	movf	(??_main+3)& (0+255),w,b
  9316  0026C4  0A80               	xorlw	128
  9317  0026C6  59A5               	subwfb	(??_main+6)& (0+255),w,b
  9318  0026C8  B0D8               	btfsc	status,0,c
  9319  0026CA  D06B               	goto	l1877
  9320                           
  9321                           ; BSR set to: 3
  9322                           ;main.c: 900:                                         LATAbits.LATA2 = 1;LATCbits.LATC3 
      +                          = 0;
  9323  0026CC  84BA               	bsf	186,2,c	;volatile
  9324  0026CE  96BC               	bcf	188,3,c	;volatile
  9325                           
  9326                           ; BSR set to: 3
  9327                           ;main.c: 901:                                         rValveActuationTstamp = timeGet();
  9328  0026D0  ECFA  F050         	call	_timeGet	;wreg free
  9329  0026D4  0060  F24C  F1A1   	movff	?_timeGet,_rValveActuationTstamp
  9330  0026DA  0060  F250  F1A2   	movff	?_timeGet+1,_rValveActuationTstamp+1
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;main.c: 902:                                         QuantaCheck = 1;
  9334  0026E0  0E01               	movlw	1
  9335  0026E2  0101               	movlb	1	; () banked
  9336  0026E4  6FC2               	movwf	_QuantaCheck& (0+255),b
  9337                           
  9338                           ; BSR set to: 1
  9339                           ;main.c: 903:                                         pValveActuation = pInst;
  9340  0026E6  C1EF  F1E5         	movff	_pInst,_pValveActuation
  9341  0026EA  C1F0  F1E6         	movff	_pInst+1,_pValveActuation+1
  9342                           
  9343                           ; BSR set to: 1
  9344                           ;main.c: 904:                                         printf ("PE VO T %d - Pi %d\n", ti
      +                          meDiff(rCycleTime, rValveActuationTstamp), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)
      +                          /5)*1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((
      +                          int24_t) bdP1))>>8)));
  9345  0026EE  0EF4               	movlw	low STR_26
  9346  0026F0  6F46               	movwf	printf@fmt& (0+255),b
  9347  0026F2  0EFC               	movlw	high STR_26
  9348  0026F4  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9349  0026F6  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9350  0026FC  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9351  002702  0060  F684  F097   	movff	_rValveActuationTstamp,timeDiff@endT
  9352  002708  0060  F688  F098   	movff	_rValveActuationTstamp+1,timeDiff@endT+1
  9353  00270E  EC8C  F04C         	call	_timeDiff	;wreg free
  9354  002712  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9355  002718  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9356  00271E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9357  002724  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9358  00272A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9359  00272C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9360  00272E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9361  002730  0E45               	movlw	69
  9362  002732  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9363  002734  0E00               	movlw	0
  9364  002736  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9365  002738  0E00               	movlw	0
  9366  00273A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9367  00273C  EC46  F049         	call	___tmul	;wreg free
  9368  002740  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9369  002746  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9370  00274C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9371  00274E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9372  002750  698D               	setf	(?___tmul+2)& (0+255),b
  9373  002752  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9374  002758  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9375  00275E  0060  F7A4  F08B   	movff	_bdP1,___tmul@multiplier
  9376  002764  0060  F7A8  F08C   	movff	_bdP1+1,___tmul@multiplier+1
  9377  00276A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9378  00276C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9379  00276E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9380  002770  0E45               	movlw	69
  9381  002772  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9382  002774  0E00               	movlw	0
  9383  002776  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9384  002778  0E00               	movlw	0
  9385  00277A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9386  00277C  EC46  F049         	call	___tmul	;wreg free
  9387  002780  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9388  002786  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9389  00278C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9390  00278E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9391  002790  698D               	setf	(?___tmul+2)& (0+255),b
  9392  002792  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9393  002798  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9394  00279E  EC68  F04E         	call	_printf	;wreg free
  9395  0027A2                     l1877:
  9396                           
  9397                           ;main.c: 912:                         screenMng();
  9398                           
  9399                           ; BSR set to: 3
  9400  0027A2  ECD8  F014         	call	_screenMng	;wreg free
  9401                           
  9402                           ;main.c: 913:                         MenuMng();
  9403  0027A6  EC6B  F018         	call	_MenuMng	;wreg free
  9404  0027AA                     l21016:
  9405                           
  9406                           ;main.c: 917:                 if (timeElapsedR(&printTime, ((time_t) 20*1))) {
  9407  0027AA  0EB4               	movlw	low main@printTime
  9408  0027AC  0100               	movlb	0	; () banked
  9409  0027AE  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
  9410  0027B0  0E03               	movlw	high main@printTime
  9411  0027B2  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
  9412  0027B4  0E00               	movlw	0
  9413  0027B6  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
  9414  0027B8  0E14               	movlw	20
  9415  0027BA  6F95               	movwf	timeElapsedR@duration& (0+255),b
  9416  0027BC  ECE5  F045         	call	_timeElapsedR	;wreg free
  9417  0027C0  0900               	iorlw	0
  9418  0027C2  B4D8               	btfsc	status,2,c
  9419  0027C4  EF61  F00F         	goto	l20862
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;main.c: 918:                     aCaptGetResult(MainPSensor, &pInst);
  9423  0027C8  0EEF               	movlw	low _pInst
  9424  0027CA  0101               	movlb	1	; () banked
  9425  0027CC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9426  0027CE  0E01               	movlw	high _pInst
  9427  0027D0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9428  0027D2  0E00               	movlw	0
  9429  0027D4  EC83  F031         	call	_aCaptGetResult
  9430                           
  9431                           ;main.c: 919:                     aCaptGetResult(Flt1PSensor, &pAvgShort);
  9432  0027D8  0EED               	movlw	low _pAvgShort
  9433  0027DA  0101               	movlb	1	; () banked
  9434  0027DC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
  9435  0027DE  0E01               	movlw	high _pAvgShort
  9436  0027E0  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
  9437  0027E2  0E04               	movlw	4
  9438  0027E4  EC83  F031         	call	_aCaptGetResult
  9439                           
  9440                           ;main.c: 920:                     printf ("PE T %d - Pi %d Pd %d. R %d Pep %d POS %d PQ 
      +                          %d\n", timeDiff(rCycleTime, timeGet()), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)
      +                          *1))*((int24_t) pInst))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int
      +                          24_t) pInst - pAvgShort))>>8)), rSV3ValveORT, ((int16_t) (((2560/((int16_t) ((0.045*4096
      +                          +2)/5)*1))*((int24_t) pPlatExp))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*
      +                          1))*((int24_t) pExpOS))>>8)), ((int16_t) (((2560/((int16_t) ((0.045*4096+2)/5)*1))*((int
      +                          24_t) pQuantaExp))>>8)) );
  9441  0027E8  0E16               	movlw	low STR_27
  9442  0027EA  0101               	movlb	1	; () banked
  9443  0027EC  6F46               	movwf	printf@fmt& (0+255),b
  9444  0027EE  0EFB               	movlw	high STR_27
  9445  0027F0  6F47               	movwf	(printf@fmt+1)& (0+255),b
  9446  0027F2  0060  F73C  F095   	movff	_rCycleTime,timeDiff@startT
  9447  0027F8  0060  F740  F096   	movff	_rCycleTime+1,timeDiff@startT+1
  9448  0027FE  ECFA  F050         	call	_timeGet	;wreg free
  9449  002802  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
  9450  002808  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
  9451  00280E  EC8C  F04C         	call	_timeDiff	;wreg free
  9452  002812  0060  F254  F148   	movff	?_timeDiff,?_printf+2
  9453  002818  0060  F258  F149   	movff	?_timeDiff+1,?_printf+3
  9454  00281E  0060  F7BC  F08B   	movff	_pInst,___tmul@multiplier
  9455  002824  0060  F7C0  F08C   	movff	_pInst+1,___tmul@multiplier+1
  9456  00282A  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9457  00282C  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9458  00282E  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9459  002830  0E45               	movlw	69
  9460  002832  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9461  002834  0E00               	movlw	0
  9462  002836  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9463  002838  0E00               	movlw	0
  9464  00283A  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9465  00283C  EC46  F049         	call	___tmul	;wreg free
  9466  002840  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9467  002846  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9468  00284C  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9469  00284E  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9470  002850  698D               	setf	(?___tmul+2)& (0+255),b
  9471  002852  0060  F22C  F14A   	movff	?___tmul,?_printf+4
  9472  002858  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
  9473  00285E  0060  F7BC  F39F   	movff	_pInst,??_main
  9474  002864  0060  F7C0  F3A0   	movff	_pInst+1,??_main+1
  9475  00286A  0103               	movlb	3	; () banked
  9476  00286C  6BA1               	clrf	(??_main+2)& (0+255),b
  9477  00286E  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  9478  002870  69A1               	setf	(??_main+2)& (0+255),b
  9479  002872  0101               	movlb	1	; () banked
  9480  002874  51ED               	movf	_pAvgShort& (0+255),w,b
  9481  002876  0103               	movlb	3	; () banked
  9482  002878  5D9F               	subwf	??_main& (0+255),w,b
  9483  00287A  0100               	movlb	0	; () banked
  9484  00287C  6F8B               	movwf	___tmul@multiplier& (0+255),b
  9485  00287E  0101               	movlb	1	; () banked
  9486  002880  51EE               	movf	(_pAvgShort+1)& (0+255),w,b
  9487  002882  0103               	movlb	3	; () banked
  9488  002884  59A0               	subwfb	(??_main+1)& (0+255),w,b
  9489  002886  0100               	movlb	0	; () banked
  9490  002888  6F8C               	movwf	(___tmul@multiplier+1)& (0+255),b
  9491  00288A  0E00               	movlw	0
  9492  00288C  0101               	movlb	1	; () banked
  9493  00288E  BFEE               	btfsc	(_pAvgShort+1)& (0+255),7,b
  9494  002890  0EFF               	movlw	255
  9495  002892  0103               	movlb	3	; () banked
  9496  002894  59A1               	subwfb	(??_main+2)& (0+255),w,b
  9497  002896  0100               	movlb	0	; () banked
  9498  002898  6F8D               	movwf	(___tmul@multiplier+2)& (0+255),b
  9499  00289A  0E45               	movlw	69
  9500  00289C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9501  00289E  0E00               	movlw	0
  9502  0028A0  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9503  0028A2  0E00               	movlw	0
  9504  0028A4  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9505  0028A6  EC46  F049         	call	___tmul	;wreg free
  9506  0028AA  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9507  0028B0  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9508  0028B6  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9509  0028B8  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9510  0028BA  698D               	setf	(?___tmul+2)& (0+255),b
  9511  0028BC  0060  F22C  F14C   	movff	?___tmul,?_printf+6
  9512  0028C2  0060  F230  F14D   	movff	?___tmul+1,?_printf+7
  9513  0028C8  0060  F664  F14E   	movff	_rSV3ValveORT,?_printf+8
  9514  0028CE  0060  F668  F14F   	movff	_rSV3ValveORT+1,?_printf+9
  9515  0028D4  0060  FB3C  F08B   	movff	_pPlatExp,___tmul@multiplier
  9516  0028DA  0060  FB40  F08C   	movff	_pPlatExp+1,___tmul@multiplier+1
  9517  0028E0  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9518  0028E2  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9519  0028E4  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9520  0028E6  0E45               	movlw	69
  9521  0028E8  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9522  0028EA  0E00               	movlw	0
  9523  0028EC  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9524  0028EE  0E00               	movlw	0
  9525  0028F0  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9526  0028F2  EC46  F049         	call	___tmul	;wreg free
  9527  0028F6  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9528  0028FC  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9529  002902  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9530  002904  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9531  002906  698D               	setf	(?___tmul+2)& (0+255),b
  9532  002908  0060  F22C  F150   	movff	?___tmul,?_printf+10
  9533  00290E  0060  F230  F151   	movff	?___tmul+1,?_printf+11
  9534  002914  0060  F784  F08B   	movff	_pExpOS,___tmul@multiplier
  9535  00291A  0060  F788  F08C   	movff	_pExpOS+1,___tmul@multiplier+1
  9536  002920  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9537  002922  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9538  002924  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9539  002926  0E45               	movlw	69
  9540  002928  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9541  00292A  0E00               	movlw	0
  9542  00292C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9543  00292E  0E00               	movlw	0
  9544  002930  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9545  002932  EC46  F049         	call	___tmul	;wreg free
  9546  002936  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9547  00293C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9548  002942  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9549  002944  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9550  002946  698D               	setf	(?___tmul+2)& (0+255),b
  9551  002948  0060  F22C  F152   	movff	?___tmul,?_printf+12
  9552  00294E  0060  F230  F153   	movff	?___tmul+1,?_printf+13
  9553  002954  0060  F74C  F08B   	movff	_pQuantaExp,___tmul@multiplier
  9554  00295A  0060  F750  F08C   	movff	_pQuantaExp+1,___tmul@multiplier+1
  9555  002960  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
  9556  002962  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  9557  002964  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
  9558  002966  0E45               	movlw	69
  9559  002968  6F8E               	movwf	___tmul@multiplicand& (0+255),b
  9560  00296A  0E00               	movlw	0
  9561  00296C  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
  9562  00296E  0E00               	movlw	0
  9563  002970  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
  9564  002972  EC46  F049         	call	___tmul	;wreg free
  9565  002976  0060  F230  F08B   	movff	?___tmul+1,?___tmul
  9566  00297C  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
  9567  002982  6B8D               	clrf	(?___tmul+2)& (0+255),b
  9568  002984  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
  9569  002986  698D               	setf	(?___tmul+2)& (0+255),b
  9570  002988  0060  F22C  F154   	movff	?___tmul,?_printf+14
  9571  00298E  0060  F230  F155   	movff	?___tmul+1,?_printf+15
  9572  002994  EC68  F04E         	call	_printf	;wreg free
  9573  002998  EF61  F00F         	goto	l20862
  9574  00299C                     l21020:
  9575                           
  9576                           ;main.c: 352:         while (ctrlStatus != CTRL_SLEEP) {
  9577  00299C  0E03               	movlw	3
  9578  00299E  0101               	movlb	1	; () banked
  9579  0029A0  19C8               	xorwf	_ctrlStatus& (0+255),w,b
  9580  0029A2  A4D8               	btfss	status,2,c
  9581  0029A4  EF9E  F001         	goto	l1739
  9582                           
  9583                           ; BSR set to: 1
  9584                           ;main.c: 964:         CtrlPowerOff();
  9585  0029A8  ECA8  F040         	call	_CtrlPowerOff	;wreg free
  9586  0029AC  EF7F  F000         	goto	l20274
  9587  0029B0                     __end_of_main:
  9588                           	opt callstack 0
  9589                           
  9590 ;; *************** function _vMeasureInit *****************
  9591 ;; Defined at:
  9592 ;;		line 35 in file "vMeasure.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;		None
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;		None
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 3F/1
  9603 ;;		On exit  : 3F/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;Total ram usage:        0 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:   18
  9613 ;; This function calls:
  9614 ;;		_TMR2_SetInterruptHandler
  9615 ;;		_TMR2_Start
  9616 ;; This function is called by:
  9617 ;;		_main
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           	psect	text1
  9622  009D4E                     __ptext1:
  9623                           	opt callstack 0
  9624  009D4E                     _vMeasureInit:
  9625                           	opt callstack 12
  9626                           
  9627                           ; BSR set to: 1
  9628                           ;vMeasure.c: 36:     volume = 0;
  9629                           
  9630                           ; BSR set to: 1
  9631                           ;incstack = 0
  9632  009D4E  0E00               	movlw	0
  9633  009D50  0102               	movlb	2	; () banked
  9634  009D52  6F2B               	movwf	_volume& (0+255),b
  9635  009D54  0E00               	movlw	0
  9636  009D56  6F2C               	movwf	(_volume+1)& (0+255),b
  9637  009D58  0E00               	movlw	0
  9638  009D5A  6F2D               	movwf	(_volume+2)& (0+255),b
  9639  009D5C  0E00               	movlw	0
  9640  009D5E  6F2E               	movwf	(_volume+3)& (0+255),b
  9641                           
  9642                           ; BSR set to: 2
  9643                           ;vMeasure.c: 37:     TMR2_SetInterruptHandler(vMeasureIsr);
  9644  009D60  0E3E               	movlw	low _vMeasureIsr
  9645  009D62  0100               	movlb	0	; () banked
  9646  009D64  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9647  009D66  0E83               	movlw	high _vMeasureIsr
  9648  009D68  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9649  009D6A  EC87  F051         	call	_TMR2_SetInterruptHandler	;wreg free
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;vMeasure.c: 38:     TMR2_Start();
  9653  009D6E  EC5E  F052         	call	_TMR2_Start	;wreg free
  9654                           
  9655                           ; BSR set to: 0
  9656  009D72  0012               	return		;funcret
  9657  009D74                     __end_of_vMeasureInit:
  9658                           	opt callstack 0
  9659                           
  9660 ;; *************** function _TMR2_Start *****************
  9661 ;; Defined at:
  9662 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		None
  9671 ;; Tracked objects:
  9672 ;;		On entry : 3F/0
  9673 ;;		On exit  : 3F/0
  9674 ;;		Unchanged: 3F/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        0 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:   17
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_vMeasureInit
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text2
  9691  00A4BC                     __ptext2:
  9692                           	opt callstack 0
  9693  00A4BC                     _TMR2_Start:
  9694                           	opt callstack 12
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;incstack = 0
  9701  00A4BC  8EAC               	bsf	172,7,c	;volatile
  9702                           
  9703                           ; BSR set to: 0
  9704  00A4BE  0012               	return		;funcret
  9705  00A4C0                     __end_of_TMR2_Start:
  9706                           	opt callstack 0
  9707                           
  9708 ;; *************** function _timeInit *****************
  9709 ;; Defined at:
  9710 ;;		line 7 in file "time.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 3F/39
  9721 ;;		On exit  : 3F/39
  9722 ;;		Unchanged: 3E/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:   18
  9731 ;; This function calls:
  9732 ;;		_TMR0_StartTimer
  9733 ;;		_TMR1_StartTimer
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text3
  9740  00A404                     __ptext3:
  9741                           	opt callstack 0
  9742  00A404                     _timeInit:
  9743                           	opt callstack 12
  9744                           
  9745                           ; BSR set to: 57
  9746                           ;time.c: 8:     TMR0_StartTimer();
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;incstack = 0
  9750  00A404  EC62  F052         	call	_TMR0_StartTimer	;wreg free
  9751                           
  9752                           ;time.c: 9:     TMR1_StartTimer();
  9753  00A408  EC60  F052         	call	_TMR1_StartTimer	;wreg free
  9754                           
  9755                           ; BSR set to: 57
  9756  00A40C  0012               	return		;funcret
  9757  00A40E                     __end_of_timeInit:
  9758                           	opt callstack 0
  9759                           
  9760 ;; *************** function _TMR1_StartTimer *****************
  9761 ;; Defined at:
  9762 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;		None
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		None
  9771 ;; Tracked objects:
  9772 ;;		On entry : 3F/39
  9773 ;;		On exit  : 3F/39
  9774 ;;		Unchanged: 3E/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;Total ram usage:        0 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:   17
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_timeInit
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text4
  9791  00A4C0                     __ptext4:
  9792                           	opt callstack 0
  9793  00A4C0                     _TMR1_StartTimer:
  9794                           	opt callstack 12
  9795                           
  9796                           ; BSR set to: 57
  9797                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  9798                           
  9799                           ; BSR set to: 57
  9800                           ;incstack = 0
  9801  00A4C0  80B2               	bsf	178,0,c	;volatile
  9802                           
  9803                           ; BSR set to: 57
  9804  00A4C2  0012               	return		;funcret
  9805  00A4C4                     __end_of_TMR1_StartTimer:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function _TMR0_StartTimer *****************
  9809 ;; Defined at:
  9810 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		None
  9819 ;; Tracked objects:
  9820 ;;		On entry : 3F/39
  9821 ;;		On exit  : 3F/39
  9822 ;;		Unchanged: 3E/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:   17
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_timeInit
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text5
  9839  00A4C4                     __ptext5:
  9840                           	opt callstack 0
  9841  00A4C4                     _TMR0_StartTimer:
  9842                           	opt callstack 12
  9843                           
  9844                           ; BSR set to: 57
  9845                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
  9846                           
  9847                           ; BSR set to: 57
  9848                           ;incstack = 0
  9849  00A4C4  8EB8               	bsf	184,7,c	;volatile
  9850                           
  9851                           ; BSR set to: 57
  9852  00A4C6  0012               	return		;funcret
  9853  00A4C8                     __end_of_TMR0_StartTimer:
  9854                           	opt callstack 0
  9855                           
  9856 ;; *************** function _screenInit *****************
  9857 ;; Defined at:
  9858 ;;		line 335 in file "menu.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;		None
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9867 ;; Tracked objects:
  9868 ;;		On entry : 3F/0
  9869 ;;		On exit  : 6/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;Total ram usage:        0 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:   23
  9879 ;; This function calls:
  9880 ;;		_LcdI2CInit
  9881 ;;		_blink
  9882 ;;		_clear
  9883 ;;		_printstrblock
  9884 ;;		_setCursor
  9885 ;;		_timeDelayMs
  9886 ;; This function is called by:
  9887 ;;		_main
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text6
  9892  008DA2                     __ptext6:
  9893                           	opt callstack 0
  9894  008DA2                     _screenInit:
  9895                           	opt callstack 7
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;menu.c: 336:     LcdI2CInit(0x27, 16, 2);
  9899                           
  9900                           ; BSR set to: 57
  9901                           ;incstack = 0
  9902  008DA2  0E10               	movlw	16
  9903  008DA4  6F9F               	movwf	LcdI2CInit@lcd_cols& (0+255),b
  9904  008DA6  0E02               	movlw	2
  9905  008DA8  6FA0               	movwf	LcdI2CInit@lcd_rows& (0+255),b
  9906  008DAA  0E27               	movlw	39
  9907  008DAC  ECDA  F03A         	call	_LcdI2CInit
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;menu.c: 337:     setCursor(0, 0);
  9911  008DB0  0E00               	movlw	0
  9912  008DB2  6F92               	movwf	setCursor@row& (0+255),b
  9913  008DB4  0E00               	movlw	0
  9914  008DB6  ECD4  F04A         	call	_setCursor
  9915                           
  9916                           ;menu.c: 338:     printstrblock("OxyVitaEmergency");
  9917  008DBA  0ED2               	movlw	low STR_35
  9918  008DBC  0100               	movlb	0	; () banked
  9919  008DBE  6F8F               	movwf	printstrblock@c& (0+255),b
  9920  008DC0  0EFE               	movlw	high STR_35
  9921  008DC2  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  9922  008DC4  ECCD  F04E         	call	_printstrblock	;wreg free
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;menu.c: 339:     setCursor(0, 1);
  9926  008DC8  0E01               	movlw	1
  9927  008DCA  6F92               	movwf	setCursor@row& (0+255),b
  9928  008DCC  0E00               	movlw	0
  9929  008DCE  ECD4  F04A         	call	_setCursor
  9930                           
  9931                           ;menu.c: 340:     printstrblock("Ventilator V1.0 ");
  9932  008DD2  0EB0               	movlw	low STR_36
  9933  008DD4  0100               	movlb	0	; () banked
  9934  008DD6  6F8F               	movwf	printstrblock@c& (0+255),b
  9935  008DD8  0EFE               	movlw	high STR_36
  9936  008DDA  6F90               	movwf	(printstrblock@c+1)& (0+255),b
  9937  008DDC  ECCD  F04E         	call	_printstrblock	;wreg free
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;menu.c: 341:     timeDelayMs(((time_t) 2000*1));
  9941  008DE0  0E07               	movlw	7
  9942  008DE2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
  9943  008DE4  0ED0               	movlw	208
  9944  008DE6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
  9945  008DE8  EC0A  F04C         	call	_timeDelayMs	;wreg free
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;menu.c: 342:     clear();
  9949  008DEC  EC92  F050         	call	_clear	;wreg free
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;menu.c: 343:     lcdPrintTR = 1;
  9953  008DF0  0E01               	movlw	1
  9954  008DF2  0101               	movlb	1	; () banked
  9955  008DF4  6FCE               	movwf	_lcdPrintTR& (0+255),b
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;menu.c: 344:     blink();
  9959  008DF6  EC56  F051         	call	_blink	;wreg free
  9960  008DFA  0012               	return		;funcret
  9961  008DFC                     __end_of_screenInit:
  9962                           	opt callstack 0
  9963                           
  9964 ;; *************** function _blink *****************
  9965 ;; Defined at:
  9966 ;;		line 266 in file "LiquidCrystal_I2C.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;		None
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;		None
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 3F/1
  9977 ;;		On exit  : 6/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;Total ram usage:        0 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:   21
  9987 ;; This function calls:
  9988 ;;		_command
  9989 ;; This function is called by:
  9990 ;;		_screenInit
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           	psect	text7
  9995  00A2AC                     __ptext7:
  9996                           	opt callstack 0
  9997  00A2AC                     _blink:
  9998                           	opt callstack 8
  9999                           
 10000                           ; BSR set to: 1
 10001                           ;LiquidCrystal_I2C.c: 267:  _displaycontrol |= 0x01;
 10002                           
 10003                           ;incstack = 0
 10004  00A2AC  0100               	movlb	0	; () banked
 10005  00A2AE  81C7               	bsf	__displaycontrol& (0+255),0,b
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;LiquidCrystal_I2C.c: 268:  command(0x08 | _displaycontrol);
 10009  00A2B0  51C7               	movf	__displaycontrol& (0+255),w,b
 10010  00A2B2  0908               	iorlw	8
 10011  00A2B4  EC26  F051         	call	_command
 10012  00A2B8  0012               	return		;funcret
 10013  00A2BA                     __end_of_blink:
 10014                           	opt callstack 0
 10015                           
 10016 ;; *************** function _LcdI2CInit *****************
 10017 ;; Defined at:
 10018 ;;		line 159 in file "LiquidCrystal_I2C.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  lcd_Addr        1    wreg     unsigned char 
 10021 ;;  lcd_cols        1   63[BANK0 ] unsigned char 
 10022 ;;  lcd_rows        1   64[BANK0 ] unsigned char 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  lcd_Addr        1   65[BANK0 ] unsigned char 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 3F/0
 10031 ;;		On exit  : 3F/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;Total ram usage:        3 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:   22
 10041 ;; This function calls:
 10042 ;;		_TMR6_SetInterruptHandler
 10043 ;;		_clear
 10044 ;;		_command
 10045 ;;		_display
 10046 ;;		_expanderWriteBlock
 10047 ;;		_home
 10048 ;;		_send4bits
 10049 ;;		_timeDelayMs
 10050 ;; This function is called by:
 10051 ;;		_screenInit
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text8
 10056  0075B4                     __ptext8:
 10057                           	opt callstack 0
 10058  0075B4                     _LcdI2CInit:
 10059                           	opt callstack 7
 10060                           
 10061                           ;incstack = 0
 10062                           ;LcdI2CInit@lcd_Addr stored from wreg
 10063  0075B4  6FA1               	movwf	LcdI2CInit@lcd_Addr& (0+255),b
 10064                           
 10065                           ;LiquidCrystal_I2C.c: 160:     _Addr = lcd_Addr;
 10066  0075B6  0060  F284  F1C0   	movff	LcdI2CInit@lcd_Addr,__Addr
 10067                           
 10068                           ;LiquidCrystal_I2C.c: 161:     _cols = lcd_cols;
 10069  0075BC  0060  F27C  F252   	movff	LcdI2CInit@lcd_cols,__cols
 10070                           
 10071                           ;LiquidCrystal_I2C.c: 162:     _rows = lcd_rows;
 10072  0075C2  0060  F280  F251   	movff	LcdI2CInit@lcd_rows,__rows
 10073                           
 10074                           ;LiquidCrystal_I2C.c: 163:     _backlightval = 0x08;
 10075  0075C8  0E08               	movlw	8
 10076  0075CA  0100               	movlb	0	; () banked
 10077  0075CC  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;LiquidCrystal_I2C.c: 164:     _numlines = 2;
 10081  0075CE  0E02               	movlw	2
 10082  0075D0  6FC5               	movwf	__numlines& (0+255),b
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;LiquidCrystal_I2C.c: 166:     _displayfunction = 0x00 | 0x08 | 0x00;
 10086  0075D2  0E08               	movlw	8
 10087  0075D4  6FC8               	movwf	__displayfunction& (0+255),b
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;LiquidCrystal_I2C.c: 168:     parBuffPtr = 0;
 10091  0075D6  0E00               	movlw	0
 10092  0075D8  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;LiquidCrystal_I2C.c: 169:     parBuffLen = 0;
 10096  0075DA  0E00               	movlw	0
 10097  0075DC  6FC2               	movwf	_parBuffLen& (0+255),b	;volatile
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;LiquidCrystal_I2C.c: 170:     lcdBusy = 0;
 10101  0075DE  0E00               	movlw	0
 10102  0075E0  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;LiquidCrystal_I2C.c: 171:     TMR6_SetInterruptHandler(lcdIrqHandler);
 10106  0075E2  0E00               	movlw	low _lcdIrqHandler
 10107  0075E4  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 10108  0075E6  0E79               	movlw	high _lcdIrqHandler
 10109  0075E8  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10110  0075EA  EC79  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;LiquidCrystal_I2C.c: 176:     timeDelayMs(50);
 10114  0075EE  0E00               	movlw	0
 10115  0075F0  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10116  0075F2  0E32               	movlw	50
 10117  0075F4  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10118  0075F6  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;LiquidCrystal_I2C.c: 179:     expanderWriteBlock(_backlightval);
 10122  0075FA  51C4               	movf	__backlightval& (0+255),w,b	;volatile
 10123  0075FC  EC1E  F051         	call	_expanderWriteBlock
 10124                           
 10125                           ;LiquidCrystal_I2C.c: 180:     timeDelayMs(20);
 10126  007600  0E00               	movlw	0
 10127  007602  0100               	movlb	0	; () banked
 10128  007604  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10129  007606  0E14               	movlw	20
 10130  007608  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10131  00760A  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;LiquidCrystal_I2C.c: 183:     send4bits(0x03 << 4, 0x4);
 10135  00760E  0E04               	movlw	4
 10136  007610  6F8B               	movwf	send4bits@mode& (0+255),b
 10137  007612  0E30               	movlw	48
 10138  007614  EC2B  F047         	call	_send4bits
 10139  007618                     l18766:
 10140  007618  0100               	movlb	0	; () banked
 10141  00761A  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10142  00761C  A4D8               	btfss	status,2,c
 10143  00761E  D7FC               	goto	l18766
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;LiquidCrystal_I2C.c: 185:     timeDelayMs(20);
 10147  007620  0E00               	movlw	0
 10148  007622  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10149  007624  0E14               	movlw	20
 10150  007626  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10151  007628  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;LiquidCrystal_I2C.c: 186:     send4bits(0x03 << 4, 0x4);
 10155  00762C  0E04               	movlw	4
 10156  00762E  6F8B               	movwf	send4bits@mode& (0+255),b
 10157  007630  0E30               	movlw	48
 10158  007632  EC2B  F047         	call	_send4bits
 10159  007636                     l18772:
 10160  007636  0100               	movlb	0	; () banked
 10161  007638  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10162  00763A  A4D8               	btfss	status,2,c
 10163  00763C  D7FC               	goto	l18772
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;LiquidCrystal_I2C.c: 188:     timeDelayMs(20);
 10167  00763E  0E00               	movlw	0
 10168  007640  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10169  007642  0E14               	movlw	20
 10170  007644  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10171  007646  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;LiquidCrystal_I2C.c: 189:     send4bits(0x03 << 4, 0x4);
 10175  00764A  0E04               	movlw	4
 10176  00764C  6F8B               	movwf	send4bits@mode& (0+255),b
 10177  00764E  0E30               	movlw	48
 10178  007650  EC2B  F047         	call	_send4bits
 10179  007654                     l18778:
 10180  007654  0100               	movlb	0	; () banked
 10181  007656  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10182  007658  A4D8               	btfss	status,2,c
 10183  00765A  D7FC               	goto	l18778
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;LiquidCrystal_I2C.c: 191:     timeDelayMs(20);
 10187  00765C  0E00               	movlw	0
 10188  00765E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10189  007660  0E14               	movlw	20
 10190  007662  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10191  007664  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;LiquidCrystal_I2C.c: 194:     send4bits(0x02 << 4, 0x4);
 10195  007668  0E04               	movlw	4
 10196  00766A  6F8B               	movwf	send4bits@mode& (0+255),b
 10197  00766C  0E20               	movlw	32
 10198  00766E  EC2B  F047         	call	_send4bits
 10199  007672                     l18784:
 10200  007672  0100               	movlb	0	; () banked
 10201  007674  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10202  007676  A4D8               	btfss	status,2,c
 10203  007678  D7FC               	goto	l18784
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;LiquidCrystal_I2C.c: 196:     timeDelayMs(20);
 10207  00767A  0E00               	movlw	0
 10208  00767C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10209  00767E  0E14               	movlw	20
 10210  007680  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10211  007682  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;LiquidCrystal_I2C.c: 199:     command(0x20 | _displayfunction);
 10215  007686  0E28               	movlw	40
 10216  007688  EC26  F051         	call	_command
 10217  00768C                     l18790:
 10218  00768C  0100               	movlb	0	; () banked
 10219  00768E  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10220  007690  A4D8               	btfss	status,2,c
 10221  007692  D7FC               	goto	l18790
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;LiquidCrystal_I2C.c: 201:     timeDelayMs(20);
 10225  007694  0E00               	movlw	0
 10226  007696  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10227  007698  0E14               	movlw	20
 10228  00769A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10229  00769C  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;LiquidCrystal_I2C.c: 204:     _displaycontrol = 0x04 | 0x00 | 0x00;
 10233  0076A0  0E04               	movlw	4
 10234  0076A2  6FC7               	movwf	__displaycontrol& (0+255),b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;LiquidCrystal_I2C.c: 205:     display();
 10238  0076A4  ECC6  F051         	call	_display	;wreg free
 10239  0076A8                     l18798:
 10240  0076A8  0100               	movlb	0	; () banked
 10241  0076AA  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10242  0076AC  A4D8               	btfss	status,2,c
 10243  0076AE  D7FC               	goto	l18798
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;LiquidCrystal_I2C.c: 209:     clear();
 10247  0076B0  EC92  F050         	call	_clear	;wreg free
 10248  0076B4                     l18802:
 10249                           
 10250                           ; BSR set to: 0
 10251  0076B4  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10252  0076B6  A4D8               	btfss	status,2,c
 10253  0076B8  D7FD               	goto	l18802
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;LiquidCrystal_I2C.c: 213:     _displaymode = 0x02 | 0x00;
 10257  0076BA  0E02               	movlw	2
 10258  0076BC  6FC6               	movwf	__displaymode& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;LiquidCrystal_I2C.c: 216:     command(0x04 | _displaymode);
 10262  0076BE  0E06               	movlw	6
 10263  0076C0  EC26  F051         	call	_command
 10264  0076C4                     l18808:
 10265  0076C4  0100               	movlb	0	; () banked
 10266  0076C6  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10267  0076C8  A4D8               	btfss	status,2,c
 10268  0076CA  D7FC               	goto	l18808
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;LiquidCrystal_I2C.c: 219:     home();
 10272  0076CC  EC87  F050         	call	_home	;wreg free
 10273  0076D0                     l18812:
 10274                           
 10275                           ; BSR set to: 0
 10276  0076D0  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 10277  0076D2  B4D8               	btfsc	status,2,c
 10278  0076D4  0012               	return	
 10279  0076D6  D7FC               	goto	l18812
 10280  0076D8                     __end_of_LcdI2CInit:
 10281                           	opt callstack 0
 10282                           
 10283 ;; *************** function _home *****************
 10284 ;; Defined at:
 10285 ;;		line 228 in file "LiquidCrystal_I2C.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10294 ;; Tracked objects:
 10295 ;;		On entry : 3F/0
 10296 ;;		On exit  : 3F/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:   21
 10306 ;; This function calls:
 10307 ;;		_command
 10308 ;;		_timeDelayMs
 10309 ;; This function is called by:
 10310 ;;		_LcdI2CInit
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text9
 10315  00A10E                     __ptext9:
 10316                           	opt callstack 0
 10317  00A10E                     _home:
 10318                           	opt callstack 7
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;LiquidCrystal_I2C.c: 229:  command(0x02);
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;incstack = 0
 10325  00A10E  0E02               	movlw	2
 10326  00A110  EC26  F051         	call	_command
 10327                           
 10328                           ;LiquidCrystal_I2C.c: 230:  timeDelayMs(10);
 10329  00A114  0E00               	movlw	0
 10330  00A116  0100               	movlb	0	; () banked
 10331  00A118  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10332  00A11A  0E0A               	movlw	10
 10333  00A11C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10334  00A11E  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10335                           
 10336                           ; BSR set to: 0
 10337  00A122  0012               	return		;funcret
 10338  00A124                     __end_of_home:
 10339                           	opt callstack 0
 10340                           
 10341 ;; *************** function _display *****************
 10342 ;; Defined at:
 10343 ;;		line 246 in file "LiquidCrystal_I2C.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 3F/0
 10354 ;;		On exit  : 6/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:   21
 10364 ;; This function calls:
 10365 ;;		_command
 10366 ;; This function is called by:
 10367 ;;		_LcdI2CInit
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text10
 10372  00A38C                     __ptext10:
 10373                           	opt callstack 0
 10374  00A38C                     _display:
 10375                           	opt callstack 7
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;LiquidCrystal_I2C.c: 247:  _displaycontrol |= 0x04;
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;incstack = 0
 10382  00A38C  85C7               	bsf	__displaycontrol& (0+255),2,b
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;LiquidCrystal_I2C.c: 248:  command(0x08 | _displaycontrol);
 10386  00A38E  51C7               	movf	__displaycontrol& (0+255),w,b
 10387  00A390  0908               	iorlw	8
 10388  00A392  EC26  F051         	call	_command
 10389  00A396  0012               	return		;funcret
 10390  00A398                     __end_of_display:
 10391                           	opt callstack 0
 10392                           
 10393 ;; *************** function _clear *****************
 10394 ;; Defined at:
 10395 ;;		line 223 in file "LiquidCrystal_I2C.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;		None
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 3F/0
 10406 ;;		On exit  : 3F/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;Total ram usage:        0 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:   21
 10416 ;; This function calls:
 10417 ;;		_command
 10418 ;;		_timeDelayMs
 10419 ;; This function is called by:
 10420 ;;		_LcdI2CInit
 10421 ;;		_screenInit
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text11
 10426  00A124                     __ptext11:
 10427                           	opt callstack 0
 10428  00A124                     _clear:
 10429                           	opt callstack 8
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;LiquidCrystal_I2C.c: 224:  command(0x01);
 10433                           
 10434                           ;incstack = 0
 10435  00A124  0E01               	movlw	1
 10436  00A126  EC26  F051         	call	_command
 10437                           
 10438                           ;LiquidCrystal_I2C.c: 225:  timeDelayMs(10);
 10439  00A12A  0E00               	movlw	0
 10440  00A12C  0100               	movlb	0	; () banked
 10441  00A12E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 10442  00A130  0E0A               	movlw	10
 10443  00A132  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 10444  00A134  EC0A  F04C         	call	_timeDelayMs	;wreg free
 10445                           
 10446                           ; BSR set to: 0
 10447  00A138  0012               	return		;funcret
 10448  00A13A                     __end_of_clear:
 10449                           	opt callstack 0
 10450                           
 10451 ;; *************** function _inspOSMeasure *****************
 10452 ;; Defined at:
 10453 ;;		line 97 in file "main.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  tmpVal          2  107[BANK1 ] short 
 10458 ;;  tmpUVal         2  104[BANK1 ] unsigned short 
 10459 ;;  setScale        1  106[BANK1 ] char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 3D/1
 10466 ;;		On exit  : 3F/2
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;Total ram usage:       13 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   26
 10476 ;; This function calls:
 10477 ;;		___lmul
 10478 ;;		___ltdiv
 10479 ;;		___tmul
 10480 ;;		___wmul
 10481 ;;		_printf
 10482 ;;		_vMeasureGet
 10483 ;; This function is called by:
 10484 ;;		_main
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text12
 10489  004CFA                     __ptext12:
 10490                           	opt callstack 0
 10491  004CFA                     _inspOSMeasure:
 10492                           	opt callstack 4
 10493                           
 10494                           ;main.c: 98:     uint16_t tmpUVal;;main.c: 99:     int16_t tmpVal;;main.c: 100:     int8
      +                          _t setScale;;main.c: 102:     switch (pInspOSVSet) {
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;incstack = 0
 10498  004CFA  D009               	goto	l19130
 10499  004CFC                     l19122:
 10500                           
 10501                           ; BSR set to: 1
 10502                           ;main.c: 104:             setScale = 3*2;
 10503  004CFC  0E06               	movlw	6
 10504  004CFE  D005               	goto	L8
 10505  004D00                     l19124:
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;main.c: 107:             setScale = 3*2/2;
 10509  004D00  0E03               	movlw	3
 10510  004D02  D003               	goto	L8
 10511  004D04                     l19126:
 10512                           
 10513                           ; BSR set to: 1
 10514                           ;main.c: 110:             setScale = 3*2/3;
 10515  004D04  0E02               	movlw	2
 10516  004D06  D001               	goto	L8
 10517  004D08                     l19128:
 10518                           
 10519                           ; BSR set to: 1
 10520                           ;main.c: 113:           setScale = 0;
 10521  004D08  0E00               	movlw	0
 10522  004D0A                     L8:
 10523  004D0A  6F6A               	movwf	inspOSMeasure@setScale& (0+255),b
 10524                           
 10525                           ;main.c: 114:     }
 10526  004D0C  D016               	goto	l19132
 10527  004D0E                     l19130:
 10528  004D0E  0060  F900  F160   	movff	_pInspOSVSet,??_inspOSMeasure
 10529  004D14  0060  F904  F161   	movff	_pInspOSVSet+1,??_inspOSMeasure+1
 10530                           
 10531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10532                           ; Switch size 1, requested type "simple"
 10533                           ; Number of cases is 1, Range of values is 0 to 0
 10534                           ; switch strategies available:
 10535                           ; Name         Instructions Cycles
 10536                           ; simple_byte            4     3 (average)
 10537                           ;	Chosen strategy is simple_byte
 10538  004D1A  0101               	movlb	1	; () banked
 10539  004D1C  5161               	movf	(??_inspOSMeasure+1)& (0+255),w,b
 10540  004D1E  0A00               	xorlw	0	; case 0
 10541  004D20  A4D8               	btfss	status,2,c
 10542  004D22  D7F2               	goto	l19128
 10543                           
 10544                           ; BSR set to: 1
 10545                           ; Switch size 1, requested type "simple"
 10546                           ; Number of cases is 3, Range of values is 1 to 3
 10547                           ; switch strategies available:
 10548                           ; Name         Instructions Cycles
 10549                           ; simple_byte           10     6 (average)
 10550                           ;	Chosen strategy is simple_byte
 10551  004D24  5160               	movf	??_inspOSMeasure& (0+255),w,b
 10552  004D26  0A01               	xorlw	1	; case 1
 10553  004D28  B4D8               	btfsc	status,2,c
 10554  004D2A  D7E8               	goto	l19122
 10555  004D2C  0A03               	xorlw	3	; case 2
 10556  004D2E  B4D8               	btfsc	status,2,c
 10557  004D30  D7E7               	goto	l19124
 10558  004D32  0A01               	xorlw	1	; case 3
 10559  004D34  B4D8               	btfsc	status,2,c
 10560  004D36  D7E6               	goto	l19126
 10561  004D38  D7E7               	goto	l19128
 10562  004D3A                     l19132:
 10563                           
 10564                           ; BSR set to: 1
 10565                           ;main.c: 118:     tmpVal = (setScale*(pPlatMax - pValveActuation))>>1;
 10566  004D3A  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10567  004D3C  0100               	movlb	0	; () banked
 10568  004D3E  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10569  004D40  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10570  004D42  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 10571  004D44  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 10572  004D46  0101               	movlb	1	; () banked
 10573  004D48  51E5               	movf	_pValveActuation& (0+255),w,b
 10574  004D4A  5DAB               	subwf	_pPlatMax& (0+255),w,b
 10575  004D4C  0100               	movlb	0	; () banked
 10576  004D4E  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10577  004D50  0101               	movlb	1	; () banked
 10578  004D52  51E6               	movf	(_pValveActuation+1)& (0+255),w,b
 10579  004D54  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
 10580  004D56  0100               	movlb	0	; () banked
 10581  004D58  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10582  004D5A  EC21  F04D         	call	___wmul	;wreg free
 10583  004D5E  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10584  004D60  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 10585  004D62  0101               	movlb	1	; () banked
 10586  004D64  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10587  004D66  0100               	movlb	0	; () banked
 10588  004D68  319B               	rrcf	?___wmul& (0+255),w,b
 10589  004D6A  0101               	movlb	1	; () banked
 10590  004D6C  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10591  004D6E  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 10592                           
 10593                           ; BSR set to: 1
 10594                           ;main.c: 119:     if (pInspOS == 0){
 10595  004D74  0100               	movlb	0	; () banked
 10596  004D76  51D0               	movf	_pInspOS& (0+255),w,b
 10597  004D78  11D1               	iorwf	(_pInspOS+1)& (0+255),w,b
 10598  004D7A  A4D8               	btfss	status,2,c
 10599  004D7C  D00D               	goto	l19138
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;main.c: 120:         pInspOS = (3*tmpVal)>>2;
 10603  004D7E  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 10604  004D84  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 10605  004D8A  0E00               	movlw	0
 10606  004D8C  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10607  004D8E  0E03               	movlw	3
 10608  004D90  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10609  004D92  EC21  F04D         	call	___wmul	;wreg free
 10610  004D96  D014               	goto	L9
 10611  004D98                     l19138:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;main.c: 122:         pInspOS = (3 * pInspOS + tmpVal) >> 2;
 10615  004D98  0060  F340  F09B   	movff	_pInspOS,___wmul@multiplier
 10616  004D9E  0060  F344  F09C   	movff	_pInspOS+1,___wmul@multiplier+1
 10617  004DA4  0E00               	movlw	0
 10618  004DA6  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10619  004DA8  0E03               	movlw	3
 10620  004DAA  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10621  004DAC  EC21  F04D         	call	___wmul	;wreg free
 10622  004DB0  0101               	movlb	1	; () banked
 10623  004DB2  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10624  004DB4  0100               	movlb	0	; () banked
 10625  004DB6  279B               	addwf	?___wmul& (0+255),f,b
 10626  004DB8  0101               	movlb	1	; () banked
 10627  004DBA  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10628  004DBC  0100               	movlb	0	; () banked
 10629  004DBE  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10630  004DC0                     L9:
 10631  004DC0  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10632  004DC2  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10633  004DC4  339B               	rrcf	?___wmul& (0+255),f,b
 10634  004DC6  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10635  004DC8  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10636  004DCA  339B               	rrcf	?___wmul& (0+255),f,b
 10637  004DCC  0060  F26C  F0D0   	movff	?___wmul,_pInspOS
 10638  004DD2  0060  F270  F0D1   	movff	?___wmul+1,_pInspOS+1
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;main.c: 124:     if (vInspOS < 0) {
 10642  004DD8  0101               	movlb	1	; () banked
 10643  004DDA  AFDA               	btfss	(_vInspOS+1)& (0+255),7,b
 10644  004DDC  D004               	goto	l19144
 10645                           
 10646                           ; BSR set to: 1
 10647                           ;main.c: 126:         vInspOS = 0;
 10648  004DDE  0E00               	movlw	0
 10649  004DE0  6FDA               	movwf	(_vInspOS+1)& (0+255),b
 10650  004DE2  0E00               	movlw	0
 10651  004DE4  6FD9               	movwf	_vInspOS& (0+255),b
 10652  004DE6                     l19144:
 10653                           
 10654                           ; BSR set to: 1
 10655                           ;main.c: 129:     tmpVal = vMeasureGet();
 10656  004DE6  ECFE  F046         	call	_vMeasureGet	;wreg free
 10657  004DEA  0060  F290  F16B   	movff	?_vMeasureGet,inspOSMeasure@tmpVal
 10658  004DF0  0060  F294  F16C   	movff	?_vMeasureGet+1,inspOSMeasure@tmpVal+1
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;main.c: 131:     if ((pPlatInsp > ((int16_t) ((0.045*4096+2)/5)*4)) && (tmpVal < 2047))
      +                           {
 10662  004DF6  0101               	movlb	1	; () banked
 10663  004DF8  BFE4               	btfsc	(_pPlatInsp+1)& (0+255),7,b
 10664  004DFA  D07B               	goto	l1684
 10665  004DFC  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
 10666  004DFE  E104               	bnz	u19870
 10667  004E00  0E95               	movlw	149
 10668  004E02  5DE3               	subwf	_pPlatInsp& (0+255),w,b
 10669  004E04  A0D8               	btfss	status,0,c
 10670  004E06  D075               	goto	l1684
 10671  004E08                     u19870:
 10672                           
 10673                           ; BSR set to: 1
 10674  004E08  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10675  004E0A  D005               	goto	u19880
 10676  004E0C  296B               	incf	inspOSMeasure@tmpVal& (0+255),w,b
 10677  004E0E  0E07               	movlw	7
 10678  004E10  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10679  004E12  B0D8               	btfsc	status,0,c
 10680  004E14  D06E               	goto	l1684
 10681  004E16                     u19880:
 10682                           
 10683                           ; BSR set to: 1
 10684                           ;main.c: 132:         tmpUVal = (pPlatInsp - pPeepActual) >> 1;
 10685  004E16  51A9               	movf	_pPeepActual& (0+255),w,b
 10686  004E18  5DE3               	subwf	_pPlatInsp& (0+255),w,b
 10687  004E1A  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10688  004E1C  51AA               	movf	(_pPeepActual+1)& (0+255),w,b
 10689  004E1E  59E4               	subwfb	(_pPlatInsp+1)& (0+255),w,b
 10690  004E20  6F61               	movwf	(??_inspOSMeasure+1)& (0+255),b
 10691  004E22  3561               	rlcf	(??_inspOSMeasure+1)& (0+255),w,b
 10692  004E24  3161               	rrcf	(??_inspOSMeasure+1)& (0+255),w,b
 10693  004E26  6F62               	movwf	(??_inspOSMeasure+2)& (0+255),b
 10694  004E28  3160               	rrcf	??_inspOSMeasure& (0+255),w,b
 10695  004E2A  6F68               	movwf	inspOSMeasure@tmpUVal& (0+255),b
 10696  004E2C  0060  F588  F169   	movff	??_inspOSMeasure+2,inspOSMeasure@tmpUVal+1
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;main.c: 133:         tmpUVal = (((uint24_t) tmpVal) << 6) / tmpUVal;
 10700  004E32  0E06               	movlw	6
 10701  004E34  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10702  004E36  0060  F5AC  F161   	movff	inspOSMeasure@tmpVal,??_inspOSMeasure+1
 10703  004E3C  0060  F5B0  F162   	movff	inspOSMeasure@tmpVal+1,??_inspOSMeasure+2
 10704  004E42  6B63               	clrf	(??_inspOSMeasure+3)& (0+255),b
 10705  004E44  BF62               	btfsc	(??_inspOSMeasure+2)& (0+255),7,b
 10706  004E46  6963               	setf	(??_inspOSMeasure+3)& (0+255),b
 10707  004E48  2960               	incf	??_inspOSMeasure& (0+255),w,b
 10708  004E4A  D004               	goto	u19890
 10709  004E4C                     u19895:
 10710  004E4C  90D8               	bcf	status,0,c
 10711  004E4E  3761               	rlcf	(??_inspOSMeasure+1)& (0+255),f,b
 10712  004E50  3762               	rlcf	(??_inspOSMeasure+2)& (0+255),f,b
 10713  004E52  3763               	rlcf	(??_inspOSMeasure+3)& (0+255),f,b
 10714  004E54                     u19890:
 10715  004E54  2EE8               	decfsz	wreg,f,c
 10716  004E56  D7FA               	goto	u19895
 10717  004E58  0060  F584  F08B   	movff	??_inspOSMeasure+1,___ltdiv@dividend
 10718  004E5E  0060  F588  F08C   	movff	??_inspOSMeasure+2,___ltdiv@dividend+1
 10719  004E64  0060  F58C  F08D   	movff	??_inspOSMeasure+3,___ltdiv@dividend+2
 10720  004E6A  0060  F5A0  F08E   	movff	inspOSMeasure@tmpUVal,___ltdiv@divisor
 10721  004E70  0060  F5A4  F08F   	movff	inspOSMeasure@tmpUVal+1,___ltdiv@divisor+1
 10722  004E76  0100               	movlb	0	; () banked
 10723  004E78  6B90               	clrf	(___ltdiv@divisor+2)& (0+255),b
 10724  004E7A  EC75  F044         	call	___ltdiv	;wreg free
 10725  004E7E  0060  F22C  F168   	movff	?___ltdiv,inspOSMeasure@tmpUVal
 10726  004E84  0060  F230  F169   	movff	?___ltdiv+1,inspOSMeasure@tmpUVal+1
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;main.c: 135:         if (lungC == 0){
 10730  004E8A  0101               	movlb	1	; () banked
 10731  004E8C  51DF               	movf	_lungC& (0+255),w,b
 10732  004E8E  11E0               	iorwf	(_lungC+1)& (0+255),w,b
 10733  004E90  A4D8               	btfss	status,2,c
 10734  004E92  D00E               	goto	l19158
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;main.c: 136:             lungC = (3*tmpUVal)>>2;
 10738  004E94  0060  F5A0  F09B   	movff	inspOSMeasure@tmpUVal,___wmul@multiplier
 10739  004E9A  0060  F5A4  F09C   	movff	inspOSMeasure@tmpUVal+1,___wmul@multiplier+1
 10740  004EA0  0E00               	movlw	0
 10741  004EA2  0100               	movlb	0	; () banked
 10742  004EA4  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10743  004EA6  0E03               	movlw	3
 10744  004EA8  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10745  004EAA  EC21  F04D         	call	___wmul	;wreg free
 10746  004EAE  D015               	goto	L10
 10747  004EB0                     l19158:
 10748                           
 10749                           ; BSR set to: 1
 10750                           ;main.c: 138:             lungC = (3 * lungC + tmpUVal) >> 2;
 10751  004EB0  0060  F77C  F09B   	movff	_lungC,___wmul@multiplier
 10752  004EB6  0060  F780  F09C   	movff	_lungC+1,___wmul@multiplier+1
 10753  004EBC  0E00               	movlw	0
 10754  004EBE  0100               	movlb	0	; () banked
 10755  004EC0  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10756  004EC2  0E03               	movlw	3
 10757  004EC4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10758  004EC6  EC21  F04D         	call	___wmul	;wreg free
 10759  004ECA  0101               	movlb	1	; () banked
 10760  004ECC  5168               	movf	inspOSMeasure@tmpUVal& (0+255),w,b
 10761  004ECE  0100               	movlb	0	; () banked
 10762  004ED0  279B               	addwf	?___wmul& (0+255),f,b
 10763  004ED2  0101               	movlb	1	; () banked
 10764  004ED4  5169               	movf	(inspOSMeasure@tmpUVal+1)& (0+255),w,b
 10765  004ED6  0100               	movlb	0	; () banked
 10766  004ED8  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10767  004EDA                     L10:
 10768  004EDA  90D8               	bcf	status,0,c
 10769  004EDC  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10770  004EDE  339B               	rrcf	?___wmul& (0+255),f,b
 10771  004EE0  90D8               	bcf	status,0,c
 10772  004EE2  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10773  004EE4  339B               	rrcf	?___wmul& (0+255),f,b
 10774  004EE6  0060  F26C  F1DF   	movff	?___wmul,_lungC
 10775  004EEC  0060  F270  F1E0   	movff	?___wmul+1,_lungC+1
 10776  004EF2                     l1684:
 10777                           
 10778                           ;main.c: 142:     tmpVal = (setScale*(tmpVal - vValveActuation))>>1;
 10779  004EF2  0101               	movlb	1	; () banked
 10780  004EF4  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10781  004EF6  0100               	movlb	0	; () banked
 10782  004EF8  6F9B               	movwf	___wmul@multiplier& (0+255),b
 10783  004EFA  6B9C               	clrf	(___wmul@multiplier+1)& (0+255),b
 10784  004EFC  BF9B               	btfsc	___wmul@multiplier& (0+255),7,b
 10785  004EFE  079C               	decf	(___wmul@multiplier+1)& (0+255),f,b
 10786  004F00  0101               	movlb	1	; () banked
 10787  004F02  51A7               	movf	_vValveActuation& (0+255),w,b
 10788  004F04  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10789  004F06  0100               	movlb	0	; () banked
 10790  004F08  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10791  004F0A  0101               	movlb	1	; () banked
 10792  004F0C  51A8               	movf	(_vValveActuation+1)& (0+255),w,b
 10793  004F0E  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10794  004F10  0100               	movlb	0	; () banked
 10795  004F12  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10796  004F14  EC21  F04D         	call	___wmul	;wreg free
 10797  004F18  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10798  004F1A  319C               	rrcf	(?___wmul+1)& (0+255),w,b
 10799  004F1C  0101               	movlb	1	; () banked
 10800  004F1E  6F60               	movwf	??_inspOSMeasure& (0+255),b
 10801  004F20  0100               	movlb	0	; () banked
 10802  004F22  319B               	rrcf	?___wmul& (0+255),w,b
 10803  004F24  0101               	movlb	1	; () banked
 10804  004F26  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10805  004F28  0060  F580  F16C   	movff	??_inspOSMeasure,inspOSMeasure@tmpVal+1
 10806                           
 10807                           ; BSR set to: 1
 10808                           ;main.c: 143:     if (vInspOS == 0){
 10809  004F2E  51D9               	movf	_vInspOS& (0+255),w,b
 10810  004F30  11DA               	iorwf	(_vInspOS+1)& (0+255),w,b
 10811  004F32  A4D8               	btfss	status,2,c
 10812  004F34  D00E               	goto	l19164
 10813                           
 10814                           ; BSR set to: 1
 10815                           ;main.c: 144:         vInspOS = (3*tmpVal)>>2;
 10816  004F36  0060  F5AC  F09B   	movff	inspOSMeasure@tmpVal,___wmul@multiplier
 10817  004F3C  0060  F5B0  F09C   	movff	inspOSMeasure@tmpVal+1,___wmul@multiplier+1
 10818  004F42  0E00               	movlw	0
 10819  004F44  0100               	movlb	0	; () banked
 10820  004F46  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10821  004F48  0E03               	movlw	3
 10822  004F4A  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10823  004F4C  EC21  F04D         	call	___wmul	;wreg free
 10824  004F50  D015               	goto	L11
 10825  004F52                     l19164:
 10826                           
 10827                           ; BSR set to: 1
 10828                           ;main.c: 146:         vInspOS = (3 * vInspOS + tmpVal) >> 2;
 10829  004F52  0060  F764  F09B   	movff	_vInspOS,___wmul@multiplier
 10830  004F58  0060  F768  F09C   	movff	_vInspOS+1,___wmul@multiplier+1
 10831  004F5E  0E00               	movlw	0
 10832  004F60  0100               	movlb	0	; () banked
 10833  004F62  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10834  004F64  0E03               	movlw	3
 10835  004F66  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10836  004F68  EC21  F04D         	call	___wmul	;wreg free
 10837  004F6C  0101               	movlb	1	; () banked
 10838  004F6E  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10839  004F70  0100               	movlb	0	; () banked
 10840  004F72  279B               	addwf	?___wmul& (0+255),f,b
 10841  004F74  0101               	movlb	1	; () banked
 10842  004F76  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10843  004F78  0100               	movlb	0	; () banked
 10844  004F7A  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10845  004F7C                     L11:
 10846  004F7C  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10847  004F7E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10848  004F80  339B               	rrcf	?___wmul& (0+255),f,b
 10849  004F82  359C               	rlcf	(?___wmul+1)& (0+255),w,b
 10850  004F84  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10851  004F86  339B               	rrcf	?___wmul& (0+255),f,b
 10852  004F88  0060  F26C  F1D9   	movff	?___wmul,_vInspOS
 10853  004F8E  0060  F270  F1DA   	movff	?___wmul+1,_vInspOS+1
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;main.c: 151:     tmpVal = pPlatMax - pPlatInsp;
 10857  004F94  0101               	movlb	1	; () banked
 10858  004F96  51E3               	movf	_pPlatInsp& (0+255),w,b
 10859  004F98  5DAB               	subwf	_pPlatMax& (0+255),w,b
 10860  004F9A  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10861  004F9C  51E4               	movf	(_pPlatInsp+1)& (0+255),w,b
 10862  004F9E  59AC               	subwfb	(_pPlatMax+1)& (0+255),w,b
 10863  004FA0  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10864                           
 10865                           ; BSR set to: 1
 10866                           ;main.c: 152:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 10867  004FA2  516A               	movf	inspOSMeasure@setScale& (0+255),w,b
 10868  004FA4  0100               	movlb	0	; () banked
 10869  004FA6  6F8B               	movwf	___lmul@multiplier& (0+255),b
 10870  004FA8  0E00               	movlw	0
 10871  004FAA  BF8B               	btfsc	___lmul@multiplier& (0+255),7,b
 10872  004FAC  0EFF               	movlw	-1
 10873  004FAE  6F8C               	movwf	(___lmul@multiplier+1)& (0+255),b
 10874  004FB0  6F8D               	movwf	(___lmul@multiplier+2)& (0+255),b
 10875  004FB2  6F8E               	movwf	(___lmul@multiplier+3)& (0+255),b
 10876  004FB4  0060  F5AC  F08F   	movff	inspOSMeasure@tmpVal,___lmul@multiplicand
 10877  004FBA  0060  F5B0  F090   	movff	inspOSMeasure@tmpVal+1,___lmul@multiplicand+1
 10878  004FC0  0E00               	movlw	0
 10879  004FC2  BF90               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 10880  004FC4  0EFF               	movlw	-1
 10881  004FC6  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10882  004FC8  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10883  004FCA  EC45  F046         	call	___lmul	;wreg free
 10884  004FCE  0060  F22C  F164   	movff	?___lmul,_inspOSMeasure$6099
 10885  004FD4  0060  F230  F165   	movff	?___lmul+1,_inspOSMeasure$6099+1
 10886  004FDA  0060  F234  F166   	movff	?___lmul+2,_inspOSMeasure$6099+2
 10887  004FE0  0060  F238  F167   	movff	?___lmul+3,_inspOSMeasure$6099+3
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;main.c: 152:     tmpVal = ((uint32_t) setScale*tmpVal*effectiveFlowRateInv)>>9;
 10891  004FE6  0060  F590  F08B   	movff	_inspOSMeasure$6099,___lmul@multiplier
 10892  004FEC  0060  F594  F08C   	movff	_inspOSMeasure$6099+1,___lmul@multiplier+1
 10893  004FF2  0060  F598  F08D   	movff	_inspOSMeasure$6099+2,___lmul@multiplier+2
 10894  004FF8  0060  F59C  F08E   	movff	_inspOSMeasure$6099+3,___lmul@multiplier+3
 10895  004FFE  0060  F744  F08F   	movff	_effectiveFlowRateInv,___lmul@multiplicand
 10896  005004  0060  F748  F090   	movff	_effectiveFlowRateInv+1,___lmul@multiplicand+1
 10897  00500A  6B91               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10898  00500C  6B92               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10899  00500E  EC45  F046         	call	___lmul	;wreg free
 10900  005012  0E0A               	movlw	10
 10901  005014  D005               	goto	u19920
 10902  005016                     u19925:
 10903  005016  90D8               	bcf	status,0,c
 10904  005018  338E               	rrcf	(?___lmul+3)& (0+255),f,b
 10905  00501A  338D               	rrcf	(?___lmul+2)& (0+255),f,b
 10906  00501C  338C               	rrcf	(?___lmul+1)& (0+255),f,b
 10907  00501E  338B               	rrcf	?___lmul& (0+255),f,b
 10908  005020                     u19920:
 10909  005020  2EE8               	decfsz	wreg,f,c
 10910  005022  D7F9               	goto	u19925
 10911  005024  0060  F22C  F16B   	movff	?___lmul,inspOSMeasure@tmpVal
 10912  00502A  0060  F230  F16C   	movff	?___lmul+1,inspOSMeasure@tmpVal+1
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;main.c: 153:     if (tmpVal > (200*((int16_t) ((0.045*4096+2)/5)*1))){
 10916  005030  0101               	movlb	1	; () banked
 10917  005032  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10918  005034  D00A               	goto	l19176
 10919  005036  0EE9               	movlw	233
 10920  005038  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10921  00503A  0E1C               	movlw	28
 10922  00503C  596C               	subwfb	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10923  00503E  A0D8               	btfss	status,0,c
 10924  005040  D004               	goto	l19176
 10925                           
 10926                           ; BSR set to: 1
 10927                           ;main.c: 154:         tmpVal = 200;
 10928  005042  0E00               	movlw	0
 10929  005044  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10930  005046  0EC8               	movlw	200
 10931  005048  D00B               	goto	L12
 10932  00504A                     l19176:
 10933                           
 10934                           ; BSR set to: 1
 10935  00504A  BF6C               	btfsc	(inspOSMeasure@tmpVal+1)& (0+255),7,b
 10936  00504C  D006               	goto	u19940
 10937  00504E  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10938  005050  E108               	bnz	l19180
 10939  005052  0E4A               	movlw	74
 10940  005054  5D6B               	subwf	inspOSMeasure@tmpVal& (0+255),w,b
 10941  005056  B0D8               	btfsc	status,0,c
 10942  005058  D004               	goto	l19180
 10943  00505A                     u19940:
 10944                           
 10945                           ; BSR set to: 1
 10946                           ;main.c: 156:         tmpVal = 2;
 10947  00505A  0E00               	movlw	0
 10948  00505C  6F6C               	movwf	(inspOSMeasure@tmpVal+1)& (0+255),b
 10949  00505E  0E02               	movlw	2
 10950  005060                     L12:
 10951  005060  6F6B               	movwf	inspOSMeasure@tmpVal& (0+255),b
 10952  005062                     l19180:
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;main.c: 158:     lungR = (3*lungR + tmpVal)>>2;
 10956  005062  0060  FB34  F09B   	movff	_lungR,___wmul@multiplier
 10957  005068  0060  FB38  F09C   	movff	_lungR+1,___wmul@multiplier+1
 10958  00506E  0E00               	movlw	0
 10959  005070  0100               	movlb	0	; () banked
 10960  005072  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10961  005074  0E03               	movlw	3
 10962  005076  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 10963  005078  EC21  F04D         	call	___wmul	;wreg free
 10964  00507C  0101               	movlb	1	; () banked
 10965  00507E  516B               	movf	inspOSMeasure@tmpVal& (0+255),w,b
 10966  005080  0100               	movlb	0	; () banked
 10967  005082  279B               	addwf	?___wmul& (0+255),f,b
 10968  005084  0101               	movlb	1	; () banked
 10969  005086  516C               	movf	(inspOSMeasure@tmpVal+1)& (0+255),w,b
 10970  005088  0100               	movlb	0	; () banked
 10971  00508A  239C               	addwfc	(?___wmul+1)& (0+255),f,b
 10972  00508C  90D8               	bcf	status,0,c
 10973  00508E  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10974  005090  339B               	rrcf	?___wmul& (0+255),f,b
 10975  005092  90D8               	bcf	status,0,c
 10976  005094  339C               	rrcf	(?___wmul+1)& (0+255),f,b
 10977  005096  339B               	rrcf	?___wmul& (0+255),f,b
 10978  005098  0060  F26C  F2CD   	movff	?___wmul,_lungR
 10979  00509E  0060  F270  F2CE   	movff	?___wmul+1,_lungR+1
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;main.c: 160:     printf ("\nIPOS LC %d Plat %d FI %d\n", lungC,((int16_t) (((2560/((int
      +                          16_t) ((0.045*4096+2)/5)*1))*((int24_t) pPlatInsp))>>8)), effectiveFlowRateInv);
 10983  0050A4  0E9C               	movlw	low STR_1
 10984  0050A6  0101               	movlb	1	; () banked
 10985  0050A8  6F46               	movwf	printf@fmt& (0+255),b
 10986  0050AA  0EFC               	movlw	high STR_1
 10987  0050AC  6F47               	movwf	(printf@fmt+1)& (0+255),b
 10988  0050AE  0060  F77C  F148   	movff	_lungC,?_printf+2
 10989  0050B4  0060  F780  F149   	movff	_lungC+1,?_printf+3
 10990  0050BA  0060  F78C  F08B   	movff	_pPlatInsp,___tmul@multiplier
 10991  0050C0  0060  F790  F08C   	movff	_pPlatInsp+1,___tmul@multiplier+1
 10992  0050C6  0100               	movlb	0	; () banked
 10993  0050C8  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 10994  0050CA  BF8C               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
 10995  0050CC  078D               	decf	(___tmul@multiplier+2)& (0+255),f,b
 10996  0050CE  0E45               	movlw	69
 10997  0050D0  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 10998  0050D2  0E00               	movlw	0
 10999  0050D4  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 11000  0050D6  0E00               	movlw	0
 11001  0050D8  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 11002  0050DA  EC46  F049         	call	___tmul	;wreg free
 11003  0050DE  0060  F230  F08B   	movff	?___tmul+1,?___tmul
 11004  0050E4  0060  F234  F08C   	movff	?___tmul+2,?___tmul+1
 11005  0050EA  6B8D               	clrf	(?___tmul+2)& (0+255),b
 11006  0050EC  BF8C               	btfsc	(?___tmul+1)& (0+255),7,b
 11007  0050EE  698D               	setf	(?___tmul+2)& (0+255),b
 11008  0050F0  0060  F22C  F14A   	movff	?___tmul,?_printf+4
 11009  0050F6  0060  F230  F14B   	movff	?___tmul+1,?_printf+5
 11010  0050FC  0060  F744  F14C   	movff	_effectiveFlowRateInv,?_printf+6
 11011  005102  0060  F748  F14D   	movff	_effectiveFlowRateInv+1,?_printf+7
 11012  005108  EC68  F04E         	call	_printf	;wreg free
 11013                           
 11014                           ; BSR set to: 2
 11015  00510C  0012               	return		;funcret
 11016  00510E                     __end_of_inspOSMeasure:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function ___ltdiv *****************
 11020 ;; Defined at:
 11021 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/ltdiv.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  dividend        3   43[BANK0 ] unsigned um
 11024 ;;  divisor         3   46[BANK0 ] unsigned um
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  quotient        3   49[BANK0 ] unsigned um
 11027 ;;  counter         1   52[BANK0 ] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  3   43[BANK0 ] unsigned um
 11030 ;; Registers used:
 11031 ;;		wreg, status,2, status,0
 11032 ;; Tracked objects:
 11033 ;;		On entry : 3F/0
 11034 ;;		On exit  : 3F/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;Total ram usage:       10 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:   17
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_inspOSMeasure
 11048 ;;		_main
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text13
 11053  0088EA                     __ptext13:
 11054                           	opt callstack 0
 11055  0088EA                     ___ltdiv:
 11056                           	opt callstack 12
 11057                           
 11058                           ; BSR set to: 0
 11059                           
 11060                           ; BSR set to: 2
 11061                           ;incstack = 0
 11062  0088EA  0E00               	movlw	0
 11063  0088EC  6F91               	movwf	___ltdiv@quotient& (0+255),b
 11064  0088EE  0E00               	movlw	0
 11065  0088F0  6F92               	movwf	(___ltdiv@quotient+1)& (0+255),b
 11066  0088F2  0E00               	movlw	0
 11067  0088F4  6F93               	movwf	(___ltdiv@quotient+2)& (0+255),b
 11068                           
 11069                           ; BSR set to: 0
 11070  0088F6  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11071  0088F8  118F               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 11072  0088FA  1190               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 11073  0088FC  B4D8               	btfsc	status,2,c
 11074  0088FE  D023               	goto	l3618
 11075                           
 11076                           ; BSR set to: 0
 11077  008900  0E01               	movlw	1
 11078  008902  6F94               	movwf	___ltdiv@counter& (0+255),b
 11079  008904  D005               	goto	l19066
 11080  008906                     l19064:
 11081                           
 11082                           ; BSR set to: 0
 11083  008906  90D8               	bcf	status,0,c
 11084  008908  378E               	rlcf	___ltdiv@divisor& (0+255),f,b
 11085  00890A  378F               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 11086  00890C  3790               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 11087  00890E  2B94               	incf	___ltdiv@counter& (0+255),f,b
 11088  008910                     l19066:
 11089                           
 11090                           ; BSR set to: 0
 11091  008910  AF90               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 11092  008912  D7F9               	goto	l19064
 11093  008914                     u19790:
 11094                           
 11095                           ; BSR set to: 0
 11096  008914  90D8               	bcf	status,0,c
 11097  008916  3791               	rlcf	___ltdiv@quotient& (0+255),f,b
 11098  008918  3792               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 11099  00891A  3793               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 11100                           
 11101                           ; BSR set to: 0
 11102  00891C  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11103  00891E  5D8B               	subwf	___ltdiv@dividend& (0+255),w,b
 11104  008920  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11105  008922  598C               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 11106  008924  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11107  008926  598D               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 11108  008928  A0D8               	btfss	status,0,c
 11109  00892A  D007               	goto	l3623
 11110                           
 11111                           ; BSR set to: 0
 11112  00892C  518E               	movf	___ltdiv@divisor& (0+255),w,b
 11113  00892E  5F8B               	subwf	___ltdiv@dividend& (0+255),f,b
 11114  008930  518F               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 11115  008932  5B8C               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 11116  008934  5190               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 11117  008936  5B8D               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 11118                           
 11119                           ; BSR set to: 0
 11120  008938  8191               	bsf	___ltdiv@quotient& (0+255),0,b
 11121  00893A                     l3623:
 11122                           
 11123                           ; BSR set to: 0
 11124  00893A  90D8               	bcf	status,0,c
 11125  00893C  3390               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 11126  00893E  338F               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 11127  008940  338E               	rrcf	___ltdiv@divisor& (0+255),f,b
 11128                           
 11129                           ; BSR set to: 0
 11130  008942  2F94               	decfsz	___ltdiv@counter& (0+255),f,b
 11131  008944  D7E7               	goto	u19790
 11132  008946                     l3618:
 11133                           
 11134                           ; BSR set to: 0
 11135  008946  0060  F244  F08B   	movff	___ltdiv@quotient,?___ltdiv
 11136  00894C  0060  F248  F08C   	movff	___ltdiv@quotient+1,?___ltdiv+1
 11137  008952  0060  F24C  F08D   	movff	___ltdiv@quotient+2,?___ltdiv+2
 11138                           
 11139                           ; BSR set to: 0
 11140  008958  0012               	return		;funcret
 11141  00895A                     __end_of___ltdiv:
 11142                           	opt callstack 0
 11143                           
 11144 ;; *************** function _bRateUpdt *****************
 11145 ;; Defined at:
 11146 ;;		line 22 in file "brate.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  triggered       1    wreg     _Bool 
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;  triggered       1   46[BANK0 ] _Bool 
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0
 11155 ;; Tracked objects:
 11156 ;;		On entry : 3E/1
 11157 ;;		On exit  : 3F/2
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;Total ram usage:        4 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; Hardware stack levels required when called:   17
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_main
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text14
 11175  007C5A                     __ptext14:
 11176                           	opt callstack 0
 11177  007C5A                     _bRateUpdt:
 11178                           	opt callstack 13
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;incstack = 0
 11182                           ;bRateUpdt@triggered stored from wreg
 11183  007C5A  0100               	movlb	0	; () banked
 11184  007C5C  6F8E               	movwf	bRateUpdt@triggered& (0+255),b
 11185                           
 11186                           ;brate.c: 23:     bRatePtr = bRatePtr << 1;
 11187  007C5E  0060  F2BC  F08B   	movff	_bRatePtr,??_bRateUpdt
 11188  007C64  0060  F2C0  F08C   	movff	_bRatePtr+1,??_bRateUpdt+1
 11189  007C6A  0060  F2C4  F08D   	movff	_bRatePtr+2,??_bRateUpdt+2
 11190  007C70  0100               	movlb	0	; () banked
 11191  007C72  90D8               	bcf	status,0,c
 11192  007C74  378B               	rlcf	??_bRateUpdt& (0+255),f,b
 11193  007C76  378C               	rlcf	(??_bRateUpdt+1)& (0+255),f,b
 11194  007C78  378D               	rlcf	(??_bRateUpdt+2)& (0+255),f,b
 11195  007C7A  0060  F22C  F0AF   	movff	??_bRateUpdt,_bRatePtr
 11196  007C80  0060  F230  F0B0   	movff	??_bRateUpdt+1,_bRatePtr+1
 11197  007C86  0060  F234  F0B1   	movff	??_bRateUpdt+2,_bRatePtr+2
 11198                           
 11199                           ;brate.c: 24:     bRateCnt++;
 11200  007C8C  2BBE               	incf	_bRateCnt& (0+255),f,b
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;brate.c: 25:     if (bRateCnt > 20){
 11204  007C8E  0E14               	movlw	20
 11205  007C90  65BE               	cpfsgt	_bRateCnt& (0+255),b
 11206  007C92  D002               	goto	l19914
 11207                           
 11208                           ; BSR set to: 0
 11209                           ;brate.c: 26:         bRateCnt = 20;
 11210  007C94  0E14               	movlw	20
 11211  007C96  6FBE               	movwf	_bRateCnt& (0+255),b
 11212  007C98                     l19914:
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;brate.c: 28:     if (bRatePtr == (0x1L << 20)) {
 11216  007C98  0E10               	movlw	16
 11217  007C9A  19B1               	xorwf	(_bRatePtr+2)& (0+255),w,b
 11218  007C9C  11AF               	iorwf	_bRatePtr& (0+255),w,b
 11219  007C9E  11B0               	iorwf	(_bRatePtr+1)& (0+255),w,b
 11220  007CA0  A4D8               	btfss	status,2,c
 11221  007CA2  D006               	goto	l19918
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;brate.c: 29:         bRatePtr = 1;
 11225  007CA4  0E01               	movlw	1
 11226  007CA6  6FAF               	movwf	_bRatePtr& (0+255),b
 11227  007CA8  0E00               	movlw	0
 11228  007CAA  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11229  007CAC  0E00               	movlw	0
 11230  007CAE  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11231  007CB0                     l19918:
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;brate.c: 32:     if (bRateHist & bRatePtr) {
 11235  007CB0  51AF               	movf	_bRatePtr& (0+255),w,b
 11236  007CB2  0102               	movlb	2	; () banked
 11237  007CB4  152F               	andwf	_bRateHist& (0+255),w,b
 11238  007CB6  0100               	movlb	0	; () banked
 11239  007CB8  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11240  007CBA  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11241  007CBC  0102               	movlb	2	; () banked
 11242  007CBE  1530               	andwf	(_bRateHist+1)& (0+255),w,b
 11243  007CC0  0100               	movlb	0	; () banked
 11244  007CC2  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11245  007CC4  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11246  007CC6  0102               	movlb	2	; () banked
 11247  007CC8  1531               	andwf	(_bRateHist+2)& (0+255),w,b
 11248  007CCA  0100               	movlb	0	; () banked
 11249  007CCC  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11250  007CCE  518B               	movf	??_bRateUpdt& (0+255),w,b
 11251  007CD0  118C               	iorwf	(??_bRateUpdt+1)& (0+255),w,b
 11252  007CD2  118D               	iorwf	(??_bRateUpdt+2)& (0+255),w,b
 11253  007CD4  B4D8               	btfsc	status,2,c
 11254  007CD6  D002               	goto	l19922
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;brate.c: 33:         eBRate -= 5;
 11258  007CD8  0E05               	movlw	5
 11259  007CDA  5FBF               	subwf	_eBRate& (0+255),f,b
 11260  007CDC                     l19922:
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;brate.c: 35:     if (triggered) {
 11264  007CDC  518E               	movf	bRateUpdt@triggered& (0+255),w,b
 11265  007CDE  B4D8               	btfsc	status,2,c
 11266  007CE0  D00E               	goto	l19928
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;brate.c: 36:         eBRate += 5;
 11270  007CE2  0E05               	movlw	5
 11271  007CE4  27BF               	addwf	_eBRate& (0+255),f,b
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;brate.c: 37:         bRateHist |= bRatePtr;
 11275  007CE6  51AF               	movf	_bRatePtr& (0+255),w,b
 11276  007CE8  0102               	movlb	2	; () banked
 11277  007CEA  132F               	iorwf	_bRateHist& (0+255),f,b
 11278  007CEC  0100               	movlb	0	; () banked
 11279  007CEE  51B0               	movf	(_bRatePtr+1)& (0+255),w,b
 11280  007CF0  0102               	movlb	2	; () banked
 11281  007CF2  1330               	iorwf	(_bRateHist+1)& (0+255),f,b
 11282  007CF4  0100               	movlb	0	; () banked
 11283  007CF6  51B1               	movf	(_bRatePtr+2)& (0+255),w,b
 11284  007CF8  0102               	movlb	2	; () banked
 11285  007CFA  1331               	iorwf	(_bRateHist+2)& (0+255),f,b
 11286                           
 11287                           ;brate.c: 38:     } else {
 11288  007CFC  0012               	return	
 11289  007CFE                     l19928:
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;brate.c: 39:         bRateHist &= ~bRatePtr;
 11293  007CFE  1DAF               	comf	_bRatePtr& (0+255),w,b
 11294  007D00  6F8B               	movwf	??_bRateUpdt& (0+255),b
 11295  007D02  1DB0               	comf	(_bRatePtr+1)& (0+255),w,b
 11296  007D04  6F8C               	movwf	(??_bRateUpdt+1)& (0+255),b
 11297  007D06  1DB1               	comf	(_bRatePtr+2)& (0+255),w,b
 11298  007D08  6F8D               	movwf	(??_bRateUpdt+2)& (0+255),b
 11299  007D0A  518B               	movf	??_bRateUpdt& (0+255),w,b
 11300  007D0C  0102               	movlb	2	; () banked
 11301  007D0E  172F               	andwf	_bRateHist& (0+255),f,b
 11302  007D10  0100               	movlb	0	; () banked
 11303  007D12  518C               	movf	(??_bRateUpdt+1)& (0+255),w,b
 11304  007D14  0102               	movlb	2	; () banked
 11305  007D16  1730               	andwf	(_bRateHist+1)& (0+255),f,b
 11306  007D18  0100               	movlb	0	; () banked
 11307  007D1A  518D               	movf	(??_bRateUpdt+2)& (0+255),w,b
 11308  007D1C  0102               	movlb	2	; () banked
 11309  007D1E  1731               	andwf	(_bRateHist+2)& (0+255),f,b
 11310                           
 11311                           ; BSR set to: 2
 11312  007D20  0012               	return		;funcret
 11313  007D22                     __end_of_bRateUpdt:
 11314                           	opt callstack 0
 11315                           
 11316 ;; *************** function _bRateInit *****************
 11317 ;; Defined at:
 11318 ;;		line 15 in file "brate.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;		None
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      void 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2
 11327 ;; Tracked objects:
 11328 ;;		On entry : 3F/2
 11329 ;;		On exit  : 3F/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;Total ram usage:        0 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   17
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		_main
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           	psect	text15
 11347  009E32                     __ptext15:
 11348                           	opt callstack 0
 11349  009E32                     _bRateInit:
 11350                           	opt callstack 13
 11351                           
 11352                           ; BSR set to: 2
 11353                           ;brate.c: 16:     bRateHist = 0;
 11354                           
 11355                           ; BSR set to: 2
 11356                           ;incstack = 0
 11357  009E32  0E00               	movlw	0
 11358  009E34  6F2F               	movwf	_bRateHist& (0+255),b
 11359  009E36  0E00               	movlw	0
 11360  009E38  6F30               	movwf	(_bRateHist+1)& (0+255),b
 11361  009E3A  0E00               	movlw	0
 11362  009E3C  6F31               	movwf	(_bRateHist+2)& (0+255),b
 11363                           
 11364                           ;brate.c: 17:     bRatePtr = 1;
 11365  009E3E  0E01               	movlw	1
 11366  009E40  0100               	movlb	0	; () banked
 11367  009E42  6FAF               	movwf	_bRatePtr& (0+255),b
 11368  009E44  0E00               	movlw	0
 11369  009E46  6FB0               	movwf	(_bRatePtr+1)& (0+255),b
 11370  009E48  0E00               	movlw	0
 11371  009E4A  6FB1               	movwf	(_bRatePtr+2)& (0+255),b
 11372                           
 11373                           ;brate.c: 18:     eBRate = 0;
 11374  009E4C  0E00               	movlw	0
 11375  009E4E  6FBF               	movwf	_eBRate& (0+255),b
 11376                           
 11377                           ;brate.c: 19:     bRateCnt = 0;
 11378  009E50  0E00               	movlw	0
 11379  009E52  6FBE               	movwf	_bRateCnt& (0+255),b
 11380                           
 11381                           ; BSR set to: 0
 11382  009E54  0012               	return		;funcret
 11383  009E56                     __end_of_bRateInit:
 11384                           	opt callstack 0
 11385                           
 11386 ;; *************** function _aCaptureInit *****************
 11387 ;; Defined at:
 11388 ;;		line 101 in file "aCapture.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;		None
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  idx             2   99[BANK1 ] int 
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 3F/0
 11399 ;;		On exit  : 3F/39
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11403 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;Total ram usage:        2 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:   27
 11409 ;; This function calls:
 11410 ;;		_ADCC_SetADTIInterruptHandler
 11411 ;;		_ADCC_StartConversion
 11412 ;;		_adcGetCh
 11413 ;; This function is called by:
 11414 ;;		_main
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text16
 11419  00915C                     __ptext16:
 11420                           	opt callstack 0
 11421  00915C                     _aCaptureInit:
 11422                           	opt callstack 3
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;aCapture.c: 102:     int idx;;aCapture.c: 103:     curASrc=MainPSensor;
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;incstack = 0
 11429  00915C  0E00               	movlw	0
 11430  00915E  6FCC               	movwf	_curASrc& (0+255),b
 11431                           
 11432                           ;aCapture.c: 105:     for (idx=0;idx<3;idx++)
 11433  009160  0E00               	movlw	0
 11434  009162  0101               	movlb	1	; () banked
 11435  009164  6F64               	movwf	(aCaptureInit@idx+1)& (0+255),b
 11436  009166  0E00               	movlw	0
 11437  009168  6F63               	movwf	aCaptureInit@idx& (0+255),b
 11438  00916A                     l19236:
 11439                           
 11440                           ; BSR set to: 1
 11441                           ;aCapture.c: 106:         resultTblVal[idx]=0;
 11442  00916A  0E24               	movlw	low _resultTblVal
 11443  00916C  2563               	addwf	aCaptureInit@idx& (0+255),w,b
 11444  00916E  6ED9               	movwf	fsr2l,c
 11445  009170  0E02               	movlw	high _resultTblVal
 11446  009172  2164               	addwfc	(aCaptureInit@idx+1)& (0+255),w,b
 11447  009174  6EDA               	movwf	fsr2h,c
 11448  009176  0E00               	movlw	0
 11449  009178  6EDF               	movwf	indf2,c
 11450                           
 11451                           ; BSR set to: 1
 11452  00917A  4B63               	infsnz	aCaptureInit@idx& (0+255),f,b
 11453  00917C  2B64               	incf	(aCaptureInit@idx+1)& (0+255),f,b
 11454                           
 11455                           ; BSR set to: 1
 11456  00917E  BF64               	btfsc	(aCaptureInit@idx+1)& (0+255),7,b
 11457  009180  D7F4               	goto	l19236
 11458  009182  5164               	movf	(aCaptureInit@idx+1)& (0+255),w,b
 11459  009184  E104               	bnz	u19970
 11460  009186  0E03               	movlw	3
 11461  009188  5D63               	subwf	aCaptureInit@idx& (0+255),w,b
 11462  00918A  A0D8               	btfss	status,0,c
 11463  00918C  D7EE               	goto	l19236
 11464  00918E                     u19970:
 11465                           
 11466                           ; BSR set to: 1
 11467                           ;aCapture.c: 108:     ADCC_SetADTIInterruptHandler(adcCaptureIsr);
 11468  00918E  0EB2               	movlw	low _adcCaptureIsr
 11469  009190  0100               	movlb	0	; () banked
 11470  009192  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 11471  009194  0E57               	movlw	high _adcCaptureIsr
 11472  009196  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 11473  009198  EC8E  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;aCapture.c: 111:     ADCC_StartConversion(adcGetCh(curASrc));
 11477  00919C  51CC               	movf	_curASrc& (0+255),w,b
 11478  00919E  ECB1  F047         	call	_adcGetCh
 11479  0091A2  ECF1  F050         	call	_ADCC_StartConversion
 11480                           
 11481                           ; BSR set to: 62
 11482                           ;aCapture.c: 113:     PIE1bits.ADTIE = 1;
 11483  0091A6  0139               	movlb	57	; () banked
 11484  0091A8  8791               	bsf	145,3,b	;volatile
 11485                           
 11486                           ; BSR set to: 57
 11487  0091AA  0012               	return		;funcret
 11488  0091AC                     __end_of_aCaptureInit:
 11489                           	opt callstack 0
 11490                           
 11491 ;; *************** function _adcGetCh *****************
 11492 ;; Defined at:
 11493 ;;		line 25 in file "aCapture.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  sel             1    wreg     enum E16104
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;  sel             1   98[BANK1 ] enum E16104
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      enum E16053
 11500 ;; Registers used:
 11501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 3F/0
 11504 ;;		On exit  : 3C/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;Total ram usage:        3 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:   26
 11514 ;; This function calls:
 11515 ;;		_printf
 11516 ;; This function is called by:
 11517 ;;		_aCaptureInit
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           	psect	text17
 11522  008F62                     __ptext17:
 11523                           	opt callstack 0
 11524  008F62                     _adcGetCh:
 11525                           	opt callstack 3
 11526                           
 11527                           ; BSR set to: 57
 11528                           ;incstack = 0
 11529                           ;adcGetCh@sel stored from wreg
 11530  008F62  0101               	movlb	1	; () banked
 11531  008F64  6F62               	movwf	adcGetCh@sel& (0+255),b
 11532                           
 11533                           ;aCapture.c: 26:     switch (sel){
 11534  008F66  D015               	goto	l18686
 11535  008F68                     l18660:
 11536                           
 11537                           ; BSR set to: 1
 11538                           ;aCapture.c: 28:             return channel_ANE1;
 11539  008F68  0E21               	movlw	33
 11540  008F6A  0012               	return	
 11541  008F6C                     l18666:
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;aCapture.c: 31:             return channel_ANE2;
 11545  008F6C  0E22               	movlw	34
 11546  008F6E  0012               	return	
 11547  008F70                     l18672:
 11548                           
 11549                           ; BSR set to: 1
 11550                           ;aCapture.c: 34:             return channel_ANE0;
 11551  008F70  0E20               	movlw	32
 11552  008F72  0012               	return	
 11553  008F74                     l1935:
 11554                           
 11555                           ; BSR set to: 1
 11556                           ;aCapture.c: 38:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 11557  008F74  94BA               	bcf	186,2,c	;volatile
 11558  008F76  96BC               	bcf	188,3,c	;volatile
 11559  008F78  96BA               	bcf	186,3,c	;volatile
 11560                           
 11561                           ; BSR set to: 1
 11562  008F7A  0EB1               	movlw	low STR_28
 11563  008F7C  6F46               	movwf	printf@fmt& (0+255),b
 11564  008F7E  0EFF               	movlw	high STR_28
 11565  008F80  6F47               	movwf	(printf@fmt+1)& (0+255),b
 11566  008F82  0E00               	movlw	0
 11567  008F84  6F49               	movwf	(?_printf+3)& (0+255),b
 11568  008F86  0E64               	movlw	100
 11569  008F88  6F48               	movwf	(?_printf+2)& (0+255),b
 11570  008F8A  EC68  F04E         	call	_printf	;wreg free
 11571                           
 11572                           ; BSR set to: 2
 11573                           ;aCapture.c: 39:            return -1;
 11574  008F8E  0EFF               	movlw	255
 11575  008F90  0012               	return	
 11576  008F92                     l18686:
 11577  008F92  0101               	movlb	1	; () banked
 11578  008F94  5162               	movf	adcGetCh@sel& (0+255),w,b
 11579  008F96  6F60               	movwf	??_adcGetCh& (0+255),b
 11580  008F98  6B61               	clrf	(??_adcGetCh+1)& (0+255),b
 11581                           
 11582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11583                           ; Switch size 1, requested type "simple"
 11584                           ; Number of cases is 1, Range of values is 0 to 0
 11585                           ; switch strategies available:
 11586                           ; Name         Instructions Cycles
 11587                           ; simple_byte            4     3 (average)
 11588                           ;	Chosen strategy is simple_byte
 11589  008F9A  5161               	movf	(??_adcGetCh+1)& (0+255),w,b
 11590  008F9C  0A00               	xorlw	0	; case 0
 11591  008F9E  A4D8               	btfss	status,2,c
 11592  008FA0  D7E9               	goto	l1935
 11593                           
 11594                           ; BSR set to: 1
 11595                           ; Switch size 1, requested type "simple"
 11596                           ; Number of cases is 3, Range of values is 0 to 2
 11597                           ; switch strategies available:
 11598                           ; Name         Instructions Cycles
 11599                           ; simple_byte           10     6 (average)
 11600                           ;	Chosen strategy is simple_byte
 11601  008FA2  5160               	movf	??_adcGetCh& (0+255),w,b
 11602  008FA4  0A00               	xorlw	0	; case 0
 11603  008FA6  B4D8               	btfsc	status,2,c
 11604  008FA8  D7DF               	goto	l18660
 11605  008FAA  0A01               	xorlw	1	; case 1
 11606  008FAC  B4D8               	btfsc	status,2,c
 11607  008FAE  D7DE               	goto	l18666
 11608  008FB0  0A03               	xorlw	3	; case 2
 11609  008FB2  B4D8               	btfsc	status,2,c
 11610  008FB4  D7DD               	goto	l18672
 11611  008FB6  D7DE               	goto	l1935
 11612  008FB8                     __end_of_adcGetCh:
 11613                           	opt callstack 0
 11614                           
 11615 ;; *************** function _ADCC_StartConversion *****************
 11616 ;; Defined at:
 11617 ;;		line 120 in file "mcc_generated_files/adcc.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  channel         1    wreg     enum E16053
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;  channel         1   43[BANK0 ] enum E16053
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg
 11626 ;; Tracked objects:
 11627 ;;		On entry : 3C/0
 11628 ;;		On exit  : 3F/3E
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;Total ram usage:        1 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:   17
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_aCaptureInit
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text18
 11646  00A1E2                     __ptext18:
 11647                           	opt callstack 0
 11648  00A1E2                     _ADCC_StartConversion:
 11649                           	opt callstack 12
 11650                           
 11651                           ;incstack = 0
 11652                           ;ADCC_StartConversion@channel stored from wreg
 11653  00A1E2  0100               	movlb	0	; () banked
 11654  00A1E4  6F8B               	movwf	ADCC_StartConversion@channel& (0+255),b
 11655                           
 11656                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 11657  00A1E6  0060  F22F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11658                           
 11659                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 11660  00A1EC  013E               	movlb	62	; () banked
 11661  00A1EE  8FF8               	bsf	248,7,b	;volatile
 11662                           
 11663                           ; BSR set to: 62
 11664                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 11665  00A1F0  81F8               	bsf	248,0,b	;volatile
 11666                           
 11667                           ; BSR set to: 62
 11668  00A1F2  0012               	return		;funcret
 11669  00A1F4                     __end_of_ADCC_StartConversion:
 11670                           	opt callstack 0
 11671                           
 11672 ;; *************** function ___fltol *****************
 11673 ;; Defined at:
 11674 ;;		line 43 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  f1              4   73[BANK0 ] void 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  exp1            1   78[BANK0 ] unsigned char 
 11679 ;;  sign1           1   77[BANK0 ] unsigned char 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  4   73[BANK0 ] long 
 11682 ;; Registers used:
 11683 ;;		wreg, status,2, status,0
 11684 ;; Tracked objects:
 11685 ;;		On entry : 3F/0
 11686 ;;		On exit  : 3F/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11691 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;Total ram usage:       10 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:   17
 11696 ;; This function calls:
 11697 ;;		Nothing
 11698 ;; This function is called by:
 11699 ;;		_main
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text19
 11704  007B8C                     __ptext19:
 11705                           	opt callstack 0
 11706  007B8C                     ___fltol:
 11707                           	opt callstack 13
 11708                           
 11709                           ; BSR set to: 0
 11710                           
 11711                           ; BSR set to: 62
 11712                           ;incstack = 0
 11713  007B8C  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11714  007B8E  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11715  007B90  6FAE               	movwf	___fltol@exp1& (0+255),b
 11716  007B92  51AE               	movf	___fltol@exp1& (0+255),w,b
 11717  007B94  A4D8               	btfss	status,2,c
 11718  007B96  D009               	goto	l20138
 11719  007B98                     u21230:
 11720                           
 11721                           ; BSR set to: 0
 11722  007B98  0E00               	movlw	0
 11723  007B9A  6FA9               	movwf	?___fltol& (0+255),b
 11724  007B9C  0E00               	movlw	0
 11725  007B9E  6FAA               	movwf	(?___fltol+1)& (0+255),b
 11726  007BA0  0E00               	movlw	0
 11727  007BA2  6FAB               	movwf	(?___fltol+2)& (0+255),b
 11728  007BA4  0E00               	movlw	0
 11729  007BA6  6FAC               	movwf	(?___fltol+3)& (0+255),b
 11730  007BA8  0012               	return	
 11731  007BAA                     l20138:
 11732                           
 11733                           ; BSR set to: 0
 11734  007BAA  0060  F2A4  F100   	movff	___fltol@f1,??___fltol
 11735  007BB0  0060  F2A8  F101   	movff	___fltol@f1+1,??___fltol+1
 11736  007BB6  0060  F2AC  F102   	movff	___fltol@f1+2,??___fltol+2
 11737  007BBC  0060  F2B0  F103   	movff	___fltol@f1+3,??___fltol+3
 11738  007BC2  0E20               	movlw	32
 11739  007BC4  D006               	goto	u21240
 11740  007BC6                     u21245:
 11741  007BC6  0101               	movlb	1	; () banked
 11742  007BC8  90D8               	bcf	status,0,c
 11743  007BCA  3303               	rrcf	(??___fltol+3)& (0+255),f,b
 11744  007BCC  3302               	rrcf	(??___fltol+2)& (0+255),f,b
 11745  007BCE  3301               	rrcf	(??___fltol+1)& (0+255),f,b
 11746  007BD0  3300               	rrcf	??___fltol& (0+255),f,b
 11747  007BD2                     u21240:
 11748  007BD2  2EE8               	decfsz	wreg,f,c
 11749  007BD4  D7F8               	goto	u21245
 11750  007BD6  5100               	movf	??___fltol& (0+255),w,b
 11751  007BD8  0100               	movlb	0	; () banked
 11752  007BDA  6FAD               	movwf	___fltol@sign1& (0+255),b
 11753                           
 11754                           ; BSR set to: 0
 11755  007BDC  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 11756                           
 11757                           ; BSR set to: 0
 11758  007BDE  0EFF               	movlw	255
 11759  007BE0  17A9               	andwf	___fltol@f1& (0+255),f,b
 11760  007BE2  0EFF               	movlw	255
 11761  007BE4  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 11762  007BE6  0EFF               	movlw	255
 11763  007BE8  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 11764  007BEA  0E00               	movlw	0
 11765  007BEC  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 11766                           
 11767                           ; BSR set to: 0
 11768  007BEE  0E96               	movlw	150
 11769  007BF0  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  007BF2  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 11773  007BF4  D00D               	goto	l20158
 11774                           
 11775                           ; BSR set to: 0
 11776  007BF6  51AE               	movf	___fltol@exp1& (0+255),w,b
 11777  007BF8  0A80               	xorlw	128
 11778  007BFA  0F97               	addlw	151
 11779  007BFC  A0D8               	btfss	status,0,c
 11780  007BFE  D7CC               	goto	u21230
 11781  007C00                     l20154:
 11782                           
 11783                           ; BSR set to: 0
 11784  007C00  90D8               	bcf	status,0,c
 11785  007C02  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11786  007C04  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11787  007C06  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11788  007C08  33A9               	rrcf	___fltol@f1& (0+255),f,b
 11789                           
 11790                           ; BSR set to: 0
 11791  007C0A  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 11792  007C0C  D7F9               	goto	l20154
 11793  007C0E  D00D               	goto	u21280
 11794  007C10                     l20158:
 11795                           
 11796                           ; BSR set to: 0
 11797  007C10  0E1F               	movlw	31
 11798  007C12  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 11799  007C14  D007               	goto	l20166
 11800  007C16  D7C0               	goto	u21230
 11801  007C18                     l20164:
 11802                           
 11803                           ; BSR set to: 0
 11804  007C18  90D8               	bcf	status,0,c
 11805  007C1A  37A9               	rlcf	___fltol@f1& (0+255),f,b
 11806  007C1C  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11807  007C1E  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11808  007C20  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11809  007C22  07AE               	decf	___fltol@exp1& (0+255),f,b
 11810  007C24                     l20166:
 11811                           
 11812                           ; BSR set to: 0
 11813  007C24  51AE               	movf	___fltol@exp1& (0+255),w,b
 11814  007C26  A4D8               	btfss	status,2,c
 11815  007C28  D7F7               	goto	l20164
 11816  007C2A                     u21280:
 11817                           
 11818                           ; BSR set to: 0
 11819  007C2A  51AD               	movf	___fltol@sign1& (0+255),w,b
 11820  007C2C  B4D8               	btfsc	status,2,c
 11821  007C2E  D008               	goto	l20172
 11822                           
 11823                           ; BSR set to: 0
 11824  007C30  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 11825  007C32  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 11826  007C34  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 11827  007C36  6DA9               	negf	___fltol@f1& (0+255),b
 11828  007C38  0E00               	movlw	0
 11829  007C3A  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11830  007C3C  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11831  007C3E  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11832  007C40                     l20172:
 11833                           
 11834                           ; BSR set to: 0
 11835  007C40  0060  F2A4  F0A9   	movff	___fltol@f1,?___fltol
 11836  007C46  0060  F2A8  F0AA   	movff	___fltol@f1+1,?___fltol+1
 11837  007C4C  0060  F2AC  F0AB   	movff	___fltol@f1+2,?___fltol+2
 11838  007C52  0060  F2B0  F0AC   	movff	___fltol@f1+3,?___fltol+3
 11839                           
 11840                           ; BSR set to: 0
 11841  007C58  0012               	return		;funcret
 11842  007C5A                     __end_of___fltol:
 11843                           	opt callstack 0
 11844                           
 11845 ;; *************** function ___fladd *****************
 11846 ;; Defined at:
 11847 ;;		line 10 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  b               4   57[BANK0 ] long 
 11850 ;;  a               4   61[BANK0 ] long 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  grs             1   72[BANK0 ] unsigned char 
 11853 ;;  bexp            1   71[BANK0 ] unsigned char 
 11854 ;;  aexp            1   70[BANK0 ] unsigned char 
 11855 ;;  signs           1   69[BANK0 ] unsigned char 
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  4   57[BANK0 ] unsigned char 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0
 11860 ;; Tracked objects:
 11861 ;;		On entry : 3F/0
 11862 ;;		On exit  : 3F/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;Total ram usage:       16 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:   17
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_main
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text20
 11880  00546A                     __ptext20:
 11881                           	opt callstack 0
 11882  00546A                     ___fladd:
 11883                           	opt callstack 13
 11884                           
 11885                           ; BSR set to: 0
 11886                           
 11887                           ; BSR set to: 0
 11888                           ;incstack = 0
 11889  00546A  519C               	movf	(___fladd@b+3)& (0+255),w,b
 11890  00546C  0B80               	andlw	128
 11891  00546E  6FA5               	movwf	___fladd@signs& (0+255),b
 11892  005470  519C               	movf	(___fladd@b+3)& (0+255),w,b
 11893  005472  259C               	addwf	(___fladd@b+3)& (0+255),w,b
 11894  005474  6FA7               	movwf	___fladd@bexp& (0+255),b
 11895                           
 11896                           ; BSR set to: 0
 11897  005476  BF9B               	btfsc	(___fladd@b+2)& (0+255),7,b
 11898                           
 11899                           ; BSR set to: 0
 11900  005478  81A7               	bsf	___fladd@bexp& (0+255),0,b
 11901                           
 11902                           ; BSR set to: 0
 11903  00547A  51A7               	movf	___fladd@bexp& (0+255),w,b
 11904  00547C  B4D8               	btfsc	status,2,c
 11905  00547E  D00D               	goto	l19946
 11906                           
 11907                           ; BSR set to: 0
 11908  005480  29A7               	incf	___fladd@bexp& (0+255),w,b
 11909  005482  A4D8               	btfss	status,2,c
 11910  005484  D008               	goto	l19942
 11911                           
 11912                           ; BSR set to: 0
 11913  005486  0E00               	movlw	0
 11914  005488  6F99               	movwf	___fladd@b& (0+255),b
 11915  00548A  0E00               	movlw	0
 11916  00548C  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 11917  00548E  0E00               	movlw	0
 11918  005490  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 11919  005492  0E00               	movlw	0
 11920  005494  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 11921  005496                     l19942:
 11922                           
 11923                           ; BSR set to: 0
 11924  005496  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 11925  005498  D006               	goto	L13
 11926  00549A                     l19946:
 11927                           
 11928                           ; BSR set to: 0
 11929  00549A  0E00               	movlw	0
 11930  00549C  6F99               	movwf	___fladd@b& (0+255),b
 11931  00549E  0E00               	movlw	0
 11932  0054A0  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 11933  0054A2  0E00               	movlw	0
 11934  0054A4  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 11935  0054A6                     L13:
 11936  0054A6  0E00               	movlw	0
 11937  0054A8  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 11938                           
 11939                           ; BSR set to: 0
 11940  0054AA  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 11941  0054AC  0B80               	andlw	128
 11942  0054AE  6FA6               	movwf	___fladd@aexp& (0+255),b
 11943                           
 11944                           ; BSR set to: 0
 11945  0054B0  51A5               	movf	___fladd@signs& (0+255),w,b
 11946  0054B2  19A6               	xorwf	___fladd@aexp& (0+255),w,b
 11947  0054B4  A4D8               	btfss	status,2,c
 11948                           
 11949                           ; BSR set to: 0
 11950  0054B6  8DA5               	bsf	___fladd@signs& (0+255),6,b
 11951                           
 11952                           ; BSR set to: 0
 11953  0054B8  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 11954  0054BA  25A0               	addwf	(___fladd@a+3)& (0+255),w,b
 11955  0054BC  6FA6               	movwf	___fladd@aexp& (0+255),b
 11956                           
 11957                           ; BSR set to: 0
 11958  0054BE  BF9F               	btfsc	(___fladd@a+2)& (0+255),7,b
 11959                           
 11960                           ; BSR set to: 0
 11961  0054C0  81A6               	bsf	___fladd@aexp& (0+255),0,b
 11962                           
 11963                           ; BSR set to: 0
 11964  0054C2  51A6               	movf	___fladd@aexp& (0+255),w,b
 11965  0054C4  B4D8               	btfsc	status,2,c
 11966  0054C6  D00D               	goto	l19970
 11967                           
 11968                           ; BSR set to: 0
 11969  0054C8  29A6               	incf	___fladd@aexp& (0+255),w,b
 11970  0054CA  A4D8               	btfss	status,2,c
 11971  0054CC  D008               	goto	l19966
 11972                           
 11973                           ; BSR set to: 0
 11974  0054CE  0E00               	movlw	0
 11975  0054D0  6F9D               	movwf	___fladd@a& (0+255),b
 11976  0054D2  0E00               	movlw	0
 11977  0054D4  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 11978  0054D6  0E00               	movlw	0
 11979  0054D8  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 11980  0054DA  0E00               	movlw	0
 11981  0054DC  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 11982  0054DE                     l19966:
 11983                           
 11984                           ; BSR set to: 0
 11985  0054DE  8F9F               	bsf	(___fladd@a+2)& (0+255),7,b
 11986  0054E0  D006               	goto	L14
 11987  0054E2                     l19970:
 11988                           
 11989                           ; BSR set to: 0
 11990  0054E2  0E00               	movlw	0
 11991  0054E4  6F9D               	movwf	___fladd@a& (0+255),b
 11992  0054E6  0E00               	movlw	0
 11993  0054E8  6F9E               	movwf	(___fladd@a+1)& (0+255),b
 11994  0054EA  0E00               	movlw	0
 11995  0054EC  6F9F               	movwf	(___fladd@a+2)& (0+255),b
 11996  0054EE                     L14:
 11997  0054EE  0E00               	movlw	0
 11998  0054F0  6FA0               	movwf	(___fladd@a+3)& (0+255),b
 11999                           
 12000                           ; BSR set to: 0
 12001  0054F2  51A7               	movf	___fladd@bexp& (0+255),w,b
 12002  0054F4  5DA6               	subwf	___fladd@aexp& (0+255),w,b
 12003  0054F6  B0D8               	btfsc	status,0,c
 12004  0054F8  D031               	goto	l20008
 12005                           
 12006                           ; BSR set to: 0
 12007  0054FA  ADA5               	btfss	___fladd@signs& (0+255),6,b
 12008  0054FC  D002               	goto	l19978
 12009                           
 12010                           ; BSR set to: 0
 12011  0054FE  0E80               	movlw	128
 12012  005500  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12013  005502                     l19978:
 12014                           
 12015                           ; BSR set to: 0
 12016  005502  0060  F29C  F0A8   	movff	___fladd@bexp,___fladd@grs
 12017                           
 12018                           ; BSR set to: 0
 12019  005508  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12020                           
 12021                           ; BSR set to: 0
 12022  00550E  0060  F2A0  F0A6   	movff	___fladd@grs,___fladd@aexp
 12023                           
 12024                           ; BSR set to: 0
 12025  005514  0060  F264  F0A8   	movff	___fladd@b,___fladd@grs
 12026                           
 12027                           ; BSR set to: 0
 12028  00551A  0060  F274  F099   	movff	___fladd@a,___fladd@b
 12029                           
 12030                           ; BSR set to: 0
 12031  005520  0060  F2A0  F09D   	movff	___fladd@grs,___fladd@a
 12032                           
 12033                           ; BSR set to: 0
 12034  005526  0060  F268  F0A8   	movff	___fladd@b+1,___fladd@grs
 12035                           
 12036                           ; BSR set to: 0
 12037  00552C  0060  F278  F09A   	movff	___fladd@a+1,___fladd@b+1
 12038                           
 12039                           ; BSR set to: 0
 12040  005532  0060  F2A0  F09E   	movff	___fladd@grs,___fladd@a+1
 12041                           
 12042                           ; BSR set to: 0
 12043  005538  0060  F26C  F0A8   	movff	___fladd@b+2,___fladd@grs
 12044                           
 12045                           ; BSR set to: 0
 12046  00553E  0060  F27C  F09B   	movff	___fladd@a+2,___fladd@b+2
 12047                           
 12048                           ; BSR set to: 0
 12049  005544  0060  F2A0  F09F   	movff	___fladd@grs,___fladd@a+2
 12050                           
 12051                           ; BSR set to: 0
 12052  00554A  0060  F270  F0A8   	movff	___fladd@b+3,___fladd@grs
 12053                           
 12054                           ; BSR set to: 0
 12055  005550  0060  F280  F09C   	movff	___fladd@a+3,___fladd@b+3
 12056                           
 12057                           ; BSR set to: 0
 12058  005556  0060  F2A0  F0A0   	movff	___fladd@grs,___fladd@a+3
 12059  00555C                     l20008:
 12060                           
 12061                           ; BSR set to: 0
 12062  00555C  0E00               	movlw	0
 12063  00555E  6FA8               	movwf	___fladd@grs& (0+255),b
 12064                           
 12065                           ; BSR set to: 0
 12066  005560  51A7               	movf	___fladd@bexp& (0+255),w,b
 12067  005562  0060  F298  F0A1   	movff	___fladd@aexp,??___fladd
 12068  005568  6BA2               	clrf	(??___fladd+1)& (0+255),b
 12069  00556A  5FA1               	subwf	??___fladd& (0+255),f,b
 12070  00556C  0E00               	movlw	0
 12071  00556E  5BA2               	subwfb	(??___fladd+1)& (0+255),f,b
 12072  005570  BFA2               	btfsc	(??___fladd+1)& (0+255),7,b
 12073  005572  D02D               	goto	l3681
 12074  005574  51A2               	movf	(??___fladd+1)& (0+255),w,b
 12075  005576  E104               	bnz	u20930
 12076  005578  0E1A               	movlw	26
 12077  00557A  5DA1               	subwf	??___fladd& (0+255),w,b
 12078  00557C  A0D8               	btfss	status,0,c
 12079  00557E  D027               	goto	l3681
 12080  005580                     u20930:
 12081                           
 12082                           ; BSR set to: 0
 12083  005580  5199               	movf	___fladd@b& (0+255),w,b
 12084  005582  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12085  005584  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12086  005586  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12087  005588  B4D8               	btfsc	status,2,c
 12088  00558A  D002               	goto	u20940
 12089  00558C  0E01               	movlw	1
 12090  00558E  D001               	goto	u20950
 12091  005590                     u20940:
 12092  005590  0E00               	movlw	0
 12093  005592                     u20950:
 12094  005592  6FA8               	movwf	___fladd@grs& (0+255),b
 12095                           
 12096                           ; BSR set to: 0
 12097  005594  0E00               	movlw	0
 12098  005596  6F99               	movwf	___fladd@b& (0+255),b
 12099  005598  0E00               	movlw	0
 12100  00559A  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12101  00559C  0E00               	movlw	0
 12102  00559E  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12103  0055A0  0E00               	movlw	0
 12104  0055A2  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12105                           
 12106                           ; BSR set to: 0
 12107  0055A4  0060  F298  F0A7   	movff	___fladd@aexp,___fladd@bexp
 12108  0055AA  D015               	goto	u20980
 12109  0055AC                     l3682:
 12110                           
 12111                           ; BSR set to: 0
 12112  0055AC  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12113  0055AE  D005               	goto	l20020
 12114                           
 12115                           ; BSR set to: 0
 12116  0055B0  90D8               	bcf	status,0,c
 12117  0055B2  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12118  0055B4  0901               	iorlw	1
 12119  0055B6  6FA8               	movwf	___fladd@grs& (0+255),b
 12120  0055B8  D002               	goto	l20022
 12121  0055BA                     l20020:
 12122                           
 12123                           ; BSR set to: 0
 12124  0055BA  90D8               	bcf	status,0,c
 12125  0055BC  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12126  0055BE                     l20022:
 12127                           
 12128                           ; BSR set to: 0
 12129  0055BE  B199               	btfsc	___fladd@b& (0+255),0,b
 12130                           
 12131                           ; BSR set to: 0
 12132  0055C0  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12133                           
 12134                           ; BSR set to: 0
 12135  0055C2  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12136  0055C4  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12137  0055C6  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12138  0055C8  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12139  0055CA  3399               	rrcf	___fladd@b& (0+255),f,b
 12140                           
 12141                           ; BSR set to: 0
 12142  0055CC  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12143  0055CE                     l3681:
 12144                           
 12145                           ; BSR set to: 0
 12146  0055CE  51A6               	movf	___fladd@aexp& (0+255),w,b
 12147  0055D0  5DA7               	subwf	___fladd@bexp& (0+255),w,b
 12148  0055D2  A0D8               	btfss	status,0,c
 12149  0055D4  D7EB               	goto	l3682
 12150  0055D6                     u20980:
 12151                           
 12152                           ; BSR set to: 0
 12153  0055D6  BDA5               	btfsc	___fladd@signs& (0+255),6,b
 12154  0055D8  D028               	goto	l20054
 12155                           
 12156                           ; BSR set to: 0
 12157  0055DA  51A7               	movf	___fladd@bexp& (0+255),w,b
 12158  0055DC  A4D8               	btfss	status,2,c
 12159  0055DE  D009               	goto	l20036
 12160                           
 12161                           ; BSR set to: 0
 12162  0055E0  0E00               	movlw	0
 12163  0055E2  6F99               	movwf	?___fladd& (0+255),b
 12164  0055E4  0E00               	movlw	0
 12165  0055E6  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12166  0055E8  0E00               	movlw	0
 12167  0055EA  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12168  0055EC  0E00               	movlw	0
 12169  0055EE  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12170  0055F0  0012               	return	
 12171  0055F2                     l20036:
 12172                           
 12173                           ; BSR set to: 0
 12174  0055F2  519D               	movf	___fladd@a& (0+255),w,b
 12175  0055F4  2799               	addwf	___fladd@b& (0+255),f,b
 12176  0055F6  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12177  0055F8  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12178  0055FA  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12179  0055FC  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12180  0055FE  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12181  005600  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12182                           
 12183                           ; BSR set to: 0
 12184  005602  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12185  005604  D071               	goto	u21110
 12186                           
 12187                           ; BSR set to: 0
 12188  005606  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12189  005608  D005               	goto	l20044
 12190                           
 12191                           ; BSR set to: 0
 12192  00560A  90D8               	bcf	status,0,c
 12193  00560C  31A8               	rrcf	___fladd@grs& (0+255),w,b
 12194  00560E  0901               	iorlw	1
 12195  005610  6FA8               	movwf	___fladd@grs& (0+255),b
 12196  005612  D002               	goto	l20046
 12197  005614                     l20044:
 12198                           
 12199                           ; BSR set to: 0
 12200  005614  90D8               	bcf	status,0,c
 12201  005616  33A8               	rrcf	___fladd@grs& (0+255),f,b
 12202  005618                     l20046:
 12203                           
 12204                           ; BSR set to: 0
 12205  005618  B199               	btfsc	___fladd@b& (0+255),0,b
 12206                           
 12207                           ; BSR set to: 0
 12208  00561A  8FA8               	bsf	___fladd@grs& (0+255),7,b
 12209                           
 12210                           ; BSR set to: 0
 12211  00561C  359C               	rlcf	(___fladd@b+3)& (0+255),w,b
 12212  00561E  339C               	rrcf	(___fladd@b+3)& (0+255),f,b
 12213  005620  339B               	rrcf	(___fladd@b+2)& (0+255),f,b
 12214  005622  339A               	rrcf	(___fladd@b+1)& (0+255),f,b
 12215  005624  3399               	rrcf	___fladd@b& (0+255),f,b
 12216                           
 12217                           ; BSR set to: 0
 12218  005626  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12219  005628  D05F               	goto	u21110
 12220  00562A                     l20054:
 12221                           
 12222                           ; BSR set to: 0
 12223  00562A  519D               	movf	___fladd@a& (0+255),w,b
 12224  00562C  5D99               	subwf	___fladd@b& (0+255),w,b
 12225  00562E  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12226  005630  599A               	subwfb	(___fladd@b+1)& (0+255),w,b
 12227  005632  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12228  005634  599B               	subwfb	(___fladd@b+2)& (0+255),w,b
 12229  005636  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12230  005638  0A80               	xorlw	128
 12231  00563A  6FA1               	movwf	??___fladd& (0+255),b
 12232  00563C  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12233  00563E  0A80               	xorlw	128
 12234  005640  59A1               	subwfb	??___fladd& (0+255),w,b
 12235  005642  B0D8               	btfsc	status,0,c
 12236  005644  D025               	goto	l20064
 12237                           
 12238                           ; BSR set to: 0
 12239  005646  5199               	movf	___fladd@b& (0+255),w,b
 12240  005648  5D9D               	subwf	___fladd@a& (0+255),w,b
 12241  00564A  6FA1               	movwf	??___fladd& (0+255),b
 12242  00564C  519A               	movf	(___fladd@b+1)& (0+255),w,b
 12243  00564E  599E               	subwfb	(___fladd@a+1)& (0+255),w,b
 12244  005650  6FA2               	movwf	(??___fladd+1)& (0+255),b
 12245  005652  519B               	movf	(___fladd@b+2)& (0+255),w,b
 12246  005654  599F               	subwfb	(___fladd@a+2)& (0+255),w,b
 12247  005656  6FA3               	movwf	(??___fladd+2)& (0+255),b
 12248  005658  519C               	movf	(___fladd@b+3)& (0+255),w,b
 12249  00565A  59A0               	subwfb	(___fladd@a+3)& (0+255),w,b
 12250  00565C  6FA4               	movwf	(??___fladd+3)& (0+255),b
 12251  00565E  0EFF               	movlw	255
 12252  005660  25A1               	addwf	??___fladd& (0+255),w,b
 12253  005662  6F99               	movwf	___fladd@b& (0+255),b
 12254  005664  0EFF               	movlw	255
 12255  005666  21A2               	addwfc	(??___fladd+1)& (0+255),w,b
 12256  005668  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12257  00566A  0EFF               	movlw	255
 12258  00566C  21A3               	addwfc	(??___fladd+2)& (0+255),w,b
 12259  00566E  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12260  005670  0EFF               	movlw	255
 12261  005672  21A4               	addwfc	(??___fladd+3)& (0+255),w,b
 12262  005674  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12263  005676  0E80               	movlw	128
 12264  005678  1BA5               	xorwf	___fladd@signs& (0+255),f,b
 12265                           
 12266                           ; BSR set to: 0
 12267  00567A  6DA8               	negf	___fladd@grs& (0+255),b
 12268                           
 12269                           ; BSR set to: 0
 12270  00567C  51A8               	movf	___fladd@grs& (0+255),w,b
 12271  00567E  A4D8               	btfss	status,2,c
 12272  005680  D00F               	goto	l3697
 12273                           
 12274                           ; BSR set to: 0
 12275  005682  0E01               	movlw	1
 12276  005684  2799               	addwf	___fladd@b& (0+255),f,b
 12277  005686  0E00               	movlw	0
 12278  005688  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12279  00568A  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12280  00568C  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12281  00568E  D008               	goto	l3697
 12282  005690                     l20064:
 12283                           
 12284                           ; BSR set to: 0
 12285  005690  519D               	movf	___fladd@a& (0+255),w,b
 12286  005692  5F99               	subwf	___fladd@b& (0+255),f,b
 12287  005694  519E               	movf	(___fladd@a+1)& (0+255),w,b
 12288  005696  5B9A               	subwfb	(___fladd@b+1)& (0+255),f,b
 12289  005698  519F               	movf	(___fladd@a+2)& (0+255),w,b
 12290  00569A  5B9B               	subwfb	(___fladd@b+2)& (0+255),f,b
 12291  00569C  51A0               	movf	(___fladd@a+3)& (0+255),w,b
 12292  00569E  5B9C               	subwfb	(___fladd@b+3)& (0+255),f,b
 12293  0056A0                     l3697:
 12294                           
 12295                           ; BSR set to: 0
 12296  0056A0  5199               	movf	___fladd@b& (0+255),w,b
 12297  0056A2  119A               	iorwf	(___fladd@b+1)& (0+255),w,b
 12298  0056A4  119B               	iorwf	(___fladd@b+2)& (0+255),w,b
 12299  0056A6  119C               	iorwf	(___fladd@b+3)& (0+255),w,b
 12300  0056A8  A4D8               	btfss	status,2,c
 12301  0056AA  D01C               	goto	l20088
 12302                           
 12303                           ; BSR set to: 0
 12304  0056AC  51A8               	movf	___fladd@grs& (0+255),w,b
 12305  0056AE  A4D8               	btfss	status,2,c
 12306  0056B0  D019               	goto	l20088
 12307                           
 12308                           ; BSR set to: 0
 12309  0056B2  0E00               	movlw	0
 12310  0056B4  6F99               	movwf	?___fladd& (0+255),b
 12311  0056B6  0E00               	movlw	0
 12312  0056B8  6F9A               	movwf	(?___fladd+1)& (0+255),b
 12313  0056BA  0E00               	movlw	0
 12314  0056BC  6F9B               	movwf	(?___fladd+2)& (0+255),b
 12315  0056BE  0E00               	movlw	0
 12316  0056C0  6F9C               	movwf	(?___fladd+3)& (0+255),b
 12317  0056C2  0012               	return	
 12318  0056C4                     l20072:
 12319                           
 12320                           ; BSR set to: 0
 12321  0056C4  90D8               	bcf	status,0,c
 12322  0056C6  3799               	rlcf	___fladd@b& (0+255),f,b
 12323  0056C8  379A               	rlcf	(___fladd@b+1)& (0+255),f,b
 12324  0056CA  379B               	rlcf	(___fladd@b+2)& (0+255),f,b
 12325  0056CC  379C               	rlcf	(___fladd@b+3)& (0+255),f,b
 12326                           
 12327                           ; BSR set to: 0
 12328  0056CE  BFA8               	btfsc	___fladd@grs& (0+255),7,b
 12329                           
 12330                           ; BSR set to: 0
 12331  0056D0  8199               	bsf	___fladd@b& (0+255),0,b
 12332                           
 12333                           ; BSR set to: 0
 12334  0056D2  A1A8               	btfss	___fladd@grs& (0+255),0,b
 12335  0056D4  D002               	goto	l20082
 12336                           
 12337                           ; BSR set to: 0
 12338  0056D6  80D8               	bsf	status,0,c
 12339  0056D8  D001               	goto	L15
 12340  0056DA                     l20082:
 12341                           
 12342                           ; BSR set to: 0
 12343  0056DA  90D8               	bcf	status,0,c
 12344  0056DC                     L15:
 12345  0056DC  37A8               	rlcf	___fladd@grs& (0+255),f,b
 12346                           
 12347                           ; BSR set to: 0
 12348  0056DE  51A7               	movf	___fladd@bexp& (0+255),w,b
 12349  0056E0  A4D8               	btfss	status,2,c
 12350                           
 12351                           ; BSR set to: 0
 12352  0056E2  07A7               	decf	___fladd@bexp& (0+255),f,b
 12353  0056E4                     l20088:
 12354                           
 12355                           ; BSR set to: 0
 12356  0056E4  AF9B               	btfss	(___fladd@b+2)& (0+255),7,b
 12357  0056E6  D7EE               	goto	l20072
 12358  0056E8                     u21110:
 12359                           
 12360                           ; BSR set to: 0
 12361  0056E8  0E00               	movlw	0
 12362  0056EA  6FA6               	movwf	___fladd@aexp& (0+255),b
 12363                           
 12364                           ; BSR set to: 0
 12365  0056EC  AFA8               	btfss	___fladd@grs& (0+255),7,b
 12366  0056EE  D00C               	goto	l3706
 12367                           
 12368                           ; BSR set to: 0
 12369  0056F0  0060  F2A0  F0A1   	movff	___fladd@grs,??___fladd
 12370  0056F6  0E7F               	movlw	127
 12371  0056F8  17A1               	andwf	??___fladd& (0+255),f,b
 12372  0056FA  B4D8               	btfsc	status,2,c
 12373  0056FC  D003               	goto	l3707
 12374  0056FE                     u21130:
 12375                           
 12376                           ; BSR set to: 0
 12377  0056FE  0E01               	movlw	1
 12378  005700  6FA6               	movwf	___fladd@aexp& (0+255),b
 12379  005702  D002               	goto	l3706
 12380  005704                     l3707:
 12381                           
 12382                           ; BSR set to: 0
 12383  005704  B199               	btfsc	___fladd@b& (0+255),0,b
 12384  005706  D7FB               	goto	u21130
 12385  005708                     l3706:
 12386                           
 12387                           ; BSR set to: 0
 12388  005708  51A6               	movf	___fladd@aexp& (0+255),w,b
 12389  00570A  B4D8               	btfsc	status,2,c
 12390  00570C  D028               	goto	l20108
 12391                           
 12392                           ; BSR set to: 0
 12393  00570E  0E01               	movlw	1
 12394  005710  2799               	addwf	___fladd@b& (0+255),f,b
 12395  005712  0E00               	movlw	0
 12396  005714  239A               	addwfc	(___fladd@b+1)& (0+255),f,b
 12397  005716  239B               	addwfc	(___fladd@b+2)& (0+255),f,b
 12398  005718  239C               	addwfc	(___fladd@b+3)& (0+255),f,b
 12399                           
 12400                           ; BSR set to: 0
 12401  00571A  A19C               	btfss	(___fladd@b+3)& (0+255),0,b
 12402  00571C  D020               	goto	l20108
 12403                           
 12404                           ; BSR set to: 0
 12405  00571E  0060  F264  F0A1   	movff	___fladd@b,??___fladd
 12406  005724  0060  F268  F0A2   	movff	___fladd@b+1,??___fladd+1
 12407  00572A  0060  F26C  F0A3   	movff	___fladd@b+2,??___fladd+2
 12408  005730  0060  F270  F0A4   	movff	___fladd@b+3,??___fladd+3
 12409  005736  35A4               	rlcf	(??___fladd+3)& (0+255),w,b
 12410  005738  33A4               	rrcf	(??___fladd+3)& (0+255),f,b
 12411  00573A  33A3               	rrcf	(??___fladd+2)& (0+255),f,b
 12412  00573C  33A2               	rrcf	(??___fladd+1)& (0+255),f,b
 12413  00573E  33A1               	rrcf	??___fladd& (0+255),f,b
 12414  005740  0060  F284  F099   	movff	??___fladd,___fladd@b
 12415  005746  0060  F288  F09A   	movff	??___fladd+1,___fladd@b+1
 12416  00574C  0060  F28C  F09B   	movff	??___fladd+2,___fladd@b+2
 12417  005752  0060  F290  F09C   	movff	??___fladd+3,___fladd@b+3
 12418  005758  29A7               	incf	___fladd@bexp& (0+255),w,b
 12419  00575A  A4D8               	btfss	status,2,c
 12420                           
 12421                           ; BSR set to: 0
 12422  00575C  2BA7               	incf	___fladd@bexp& (0+255),f,b
 12423  00575E                     l20108:
 12424                           
 12425                           ; BSR set to: 0
 12426  00575E  29A7               	incf	___fladd@bexp& (0+255),w,b
 12427  005760  B4D8               	btfsc	status,2,c
 12428  005762  D003               	goto	u21190
 12429                           
 12430                           ; BSR set to: 0
 12431  005764  51A7               	movf	___fladd@bexp& (0+255),w,b
 12432  005766  A4D8               	btfss	status,2,c
 12433  005768  D00D               	goto	l20116
 12434  00576A                     u21190:
 12435                           
 12436                           ; BSR set to: 0
 12437  00576A  0E00               	movlw	0
 12438  00576C  6F99               	movwf	___fladd@b& (0+255),b
 12439  00576E  0E00               	movlw	0
 12440  005770  6F9A               	movwf	(___fladd@b+1)& (0+255),b
 12441  005772  0E00               	movlw	0
 12442  005774  6F9B               	movwf	(___fladd@b+2)& (0+255),b
 12443  005776  0E00               	movlw	0
 12444  005778  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12445  00577A  51A7               	movf	___fladd@bexp& (0+255),w,b
 12446  00577C  A4D8               	btfss	status,2,c
 12447  00577E  D002               	goto	l20116
 12448                           
 12449                           ; BSR set to: 0
 12450  005780  0E00               	movlw	0
 12451  005782  6FA5               	movwf	___fladd@signs& (0+255),b
 12452  005784                     l20116:
 12453                           
 12454                           ; BSR set to: 0
 12455  005784  A1A7               	btfss	___fladd@bexp& (0+255),0,b
 12456  005786  D002               	goto	l20120
 12457                           
 12458                           ; BSR set to: 0
 12459  005788  8F9B               	bsf	(___fladd@b+2)& (0+255),7,b
 12460  00578A  D001               	goto	l20122
 12461  00578C                     l20120:
 12462                           
 12463                           ; BSR set to: 0
 12464  00578C  9F9B               	bcf	(___fladd@b+2)& (0+255),7,b
 12465  00578E                     l20122:
 12466                           
 12467                           ; BSR set to: 0
 12468  00578E  90D8               	bcf	status,0,c
 12469  005790  31A7               	rrcf	___fladd@bexp& (0+255),w,b
 12470  005792  6F9C               	movwf	(___fladd@b+3)& (0+255),b
 12471                           
 12472                           ; BSR set to: 0
 12473  005794  BFA5               	btfsc	___fladd@signs& (0+255),7,b
 12474                           
 12475                           ; BSR set to: 0
 12476  005796  8F9C               	bsf	(___fladd@b+3)& (0+255),7,b
 12477                           
 12478                           ; BSR set to: 0
 12479  005798  0060  F264  F099   	movff	___fladd@b,?___fladd
 12480  00579E  0060  F268  F09A   	movff	___fladd@b+1,?___fladd+1
 12481  0057A4  0060  F26C  F09B   	movff	___fladd@b+2,?___fladd+2
 12482  0057AA  0060  F270  F09C   	movff	___fladd@b+3,?___fladd+3
 12483                           
 12484                           ; BSR set to: 0
 12485  0057B0  0012               	return		;funcret
 12486  0057B2                     __end_of___fladd:
 12487                           	opt callstack 0
 12488                           
 12489 ;; *************** function _TMR4_Start *****************
 12490 ;; Defined at:
 12491 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;		None
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  1    wreg      void 
 12498 ;; Registers used:
 12499 ;;		None
 12500 ;; Tracked objects:
 12501 ;;		On entry : 3F/1
 12502 ;;		On exit  : 3F/1
 12503 ;;		Unchanged: 3F/0
 12504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12509 ;;Total ram usage:        0 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:   17
 12512 ;; This function calls:
 12513 ;;		Nothing
 12514 ;; This function is called by:
 12515 ;;		_main
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text21
 12520  00A4C8                     __ptext21:
 12521                           	opt callstack 0
 12522  00A4C8                     _TMR4_Start:
 12523                           	opt callstack 13
 12524                           
 12525                           ; BSR set to: 1
 12526                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;incstack = 0
 12530  00A4C8  8EA0               	bsf	160,7,c	;volatile
 12531                           
 12532                           ; BSR set to: 1
 12533  00A4CA  0012               	return		;funcret
 12534  00A4CC                     __end_of_TMR4_Start:
 12535                           	opt callstack 0
 12536                           
 12537 ;; *************** function _SelfTest *****************
 12538 ;; Defined at:
 12539 ;;		line 207 in file "selftest.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  tstScreen       1    wreg     _Bool 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;  tstScreen       1    0[BANK3 ] _Bool 
 12544 ;;  vddVal          2   12[BANK3 ] short 
 12545 ;;  vddValMin       2   10[BANK3 ] short 
 12546 ;;  vddValMax       2    8[BANK3 ] short 
 12547 ;;  tstamp          2    6[BANK3 ] unsigned short 
 12548 ;;  cIdx            2    4[BANK3 ] int 
 12549 ;;  idx             2    2[BANK3 ] int 
 12550 ;;  aPValMean       2    0        short 
 12551 ;;  aPValMin        2    0        short 
 12552 ;;  aPValMax        2    0        short 
 12553 ;;  aPVal           2    0        short 
 12554 ;;  initOk          1   14[BANK3 ] _Bool 
 12555 ;;  lcdBLight       1    1[BANK3 ] _Bool 
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  1    wreg      _Bool 
 12558 ;; Registers used:
 12559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12560 ;; Tracked objects:
 12561 ;;		On entry : 3F/3
 12562 ;;		On exit  : 3F/3
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Locals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Totals:         0       0       0       4      15       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;Total ram usage:       19 bytes
 12570 ;; Hardware stack levels used:    1
 12571 ;; Hardware stack levels required when called:   33
 12572 ;; This function calls:
 12573 ;;		_MonitorMsgSendBlock
 12574 ;;		_aCaptGetResult
 12575 ;;		_aCaptureOffSet
 12576 ;;		_flowChk
 12577 ;;		_keyPeek
 12578 ;;		_keyReadEC
 12579 ;;		_keyReadInit
 12580 ;;		_pressureSensorChk
 12581 ;;		_printf
 12582 ;;		_printstrblock
 12583 ;;		_setBacklight
 12584 ;;		_setCursor
 12585 ;;		_sprintf
 12586 ;;		_timeDelayMs
 12587 ;;		_timeElapsedR
 12588 ;;		_timeGet
 12589 ;; This function is called by:
 12590 ;;		_main
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text22
 12595  0037D2                     __ptext22:
 12596                           	opt callstack 0
 12597  0037D2                     _SelfTest:
 12598                           	opt callstack 0
 12599                           
 12600                           ; BSR set to: 1
 12601                           ;incstack = 0
 12602 ;; hardware stack exceeded
 12603                           ;SelfTest@tstScreen stored from wreg
 12604  0037D2  6F90               	movwf	SelfTest@tstScreen& (0+255),b
 12605                           
 12606                           ;selftest.c: 208:   int idx, cIdx;;selftest.c: 209:   int16_t vddVal, vddValMax, vddValM
      +                          in;;selftest.c: 210:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 211:   
      +                          _Bool lcdBLight;;selftest.c: 212:   time_t tstamp;;selftest.c: 213:   _Bool initOk;;self
      +                          test.c: 215:   ctrlStatus = CTRL_UNCAL;
 12607  0037D4  0E00               	movlw	0
 12608  0037D6  0101               	movlb	1	; () banked
 12609  0037D8  6FC8               	movwf	_ctrlStatus& (0+255),b
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;selftest.c: 216:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 12613  0037DA  94BA               	bcf	186,2,c	;volatile
 12614                           
 12615                           ; BSR set to: 1
 12616  0037DC  96BC               	bcf	188,3,c	;volatile
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;selftest.c: 217:   LATAbits.LATA3 = 0;
 12620  0037DE  96BA               	bcf	186,3,c	;volatile
 12621                           
 12622                           ; BSR set to: 1
 12623                           ;selftest.c: 219:     if (tstScreen) {
 12624  0037E0  0103               	movlb	3	; () banked
 12625  0037E2  5190               	movf	SelfTest@tstScreen& (0+255),w,b
 12626  0037E4  B4D8               	btfsc	status,2,c
 12627  0037E6  D065               	goto	u20000
 12628                           
 12629                           ; BSR set to: 3
 12630                           ;selftest.c: 220:         setCursor(0, 1);
 12631  0037E8  0E01               	movlw	1
 12632  0037EA  0100               	movlb	0	; () banked
 12633  0037EC  6F92               	movwf	setCursor@row& (0+255),b
 12634  0037EE  0E00               	movlw	0
 12635  0037F0  ECD4  F04A         	call	_setCursor
 12636                           
 12637                           ;selftest.c: 221:         printstrblock("SELF-TEST       ");
 12638  0037F4  0EB1               	movlw	low STR_78
 12639  0037F6  0100               	movlb	0	; () banked
 12640  0037F8  6F8F               	movwf	printstrblock@c& (0+255),b
 12641  0037FA  0EFD               	movlw	high STR_78
 12642  0037FC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12643  0037FE  ECCD  F04E         	call	_printstrblock	;wreg free
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;selftest.c: 222:         setCursor(0, 0);
 12647  003802  0E00               	movlw	0
 12648  003804  6F92               	movwf	setCursor@row& (0+255),b
 12649  003806  0E00               	movlw	0
 12650  003808  ECD4  F04A         	call	_setCursor
 12651                           
 12652                           ;selftest.c: 223:         printstrblock("DISPLAY TEST    ");
 12653  00380C  0EE4               	movlw	low STR_79
 12654  00380E  0100               	movlb	0	; () banked
 12655  003810  6F8F               	movwf	printstrblock@c& (0+255),b
 12656  003812  0EFD               	movlw	high STR_79
 12657  003814  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12658  003816  ECCD  F04E         	call	_printstrblock	;wreg free
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;selftest.c: 224:         for (idx = 0; idx < 10; idx++) {
 12662  00381A  0E00               	movlw	0
 12663  00381C  0103               	movlb	3	; () banked
 12664  00381E  6F93               	movwf	(SelfTest@idx+1)& (0+255),b
 12665  003820  0E00               	movlw	0
 12666  003822  6F92               	movwf	SelfTest@idx& (0+255),b
 12667  003824                     l19298:
 12668                           
 12669                           ; BSR set to: 3
 12670                           ;selftest.c: 225:             setCursor(0, 0);
 12671  003824  0E00               	movlw	0
 12672  003826  0100               	movlb	0	; () banked
 12673  003828  6F92               	movwf	setCursor@row& (0+255),b
 12674  00382A  0E00               	movlw	0
 12675  00382C  ECD4  F04A         	call	_setCursor
 12676                           
 12677                           ;selftest.c: 226:             lcdTopRow[0] = 0x30 + idx;
 12678  003830  0103               	movlb	3	; () banked
 12679  003832  5192               	movf	SelfTest@idx& (0+255),w,b
 12680  003834  0F30               	addlw	48
 12681  003836  0102               	movlb	2	; () banked
 12682  003838  6FA3               	movwf	_lcdTopRow& (0+255),b
 12683                           
 12684                           ; BSR set to: 2
 12685                           ;selftest.c: 227:             for (cIdx = 1; cIdx < 16; cIdx++) {
 12686  00383A  0E00               	movlw	0
 12687  00383C  0103               	movlb	3	; () banked
 12688  00383E  6F95               	movwf	(SelfTest@cIdx+1)& (0+255),b
 12689  003840  0E01               	movlw	1
 12690  003842  6F94               	movwf	SelfTest@cIdx& (0+255),b
 12691  003844                     l19308:
 12692                           
 12693                           ; BSR set to: 3
 12694                           ;selftest.c: 228:                 lcdTopRow[cIdx] = lcdTopRow[0];
 12695  003844  0EA3               	movlw	low _lcdTopRow
 12696  003846  2594               	addwf	SelfTest@cIdx& (0+255),w,b
 12697  003848  6ED9               	movwf	fsr2l,c
 12698  00384A  0E02               	movlw	high _lcdTopRow
 12699  00384C  2195               	addwfc	(SelfTest@cIdx+1)& (0+255),w,b
 12700  00384E  6EDA               	movwf	fsr2h,c
 12701  003850  0060  FA8F  FFDF   	movff	_lcdTopRow,indf2
 12702                           
 12703                           ; BSR set to: 3
 12704                           ;selftest.c: 229:             }
 12705  003856  4B94               	infsnz	SelfTest@cIdx& (0+255),f,b
 12706  003858  2B95               	incf	(SelfTest@cIdx+1)& (0+255),f,b
 12707                           
 12708                           ; BSR set to: 3
 12709  00385A  BF95               	btfsc	(SelfTest@cIdx+1)& (0+255),7,b
 12710  00385C  D7F3               	goto	l19308
 12711  00385E  5195               	movf	(SelfTest@cIdx+1)& (0+255),w,b
 12712  003860  E104               	bnz	u19990
 12713  003862  0E10               	movlw	16
 12714  003864  5D94               	subwf	SelfTest@cIdx& (0+255),w,b
 12715  003866  A0D8               	btfss	status,0,c
 12716  003868  D7ED               	goto	l19308
 12717  00386A                     u19990:
 12718                           
 12719                           ; BSR set to: 3
 12720                           ;selftest.c: 230:             printstrblock(lcdTopRow);
 12721  00386A  0EA3               	movlw	low _lcdTopRow
 12722  00386C  0100               	movlb	0	; () banked
 12723  00386E  6F8F               	movwf	printstrblock@c& (0+255),b
 12724  003870  0E02               	movlw	high _lcdTopRow
 12725  003872  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12726  003874  ECCD  F04E         	call	_printstrblock	;wreg free
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;selftest.c: 231:             setCursor(0, 1);
 12730  003878  0E01               	movlw	1
 12731  00387A  6F92               	movwf	setCursor@row& (0+255),b
 12732  00387C  0E00               	movlw	0
 12733  00387E  ECD4  F04A         	call	_setCursor
 12734                           
 12735                           ;selftest.c: 232:             printstrblock(lcdTopRow);
 12736  003882  0EA3               	movlw	low _lcdTopRow
 12737  003884  0100               	movlb	0	; () banked
 12738  003886  6F8F               	movwf	printstrblock@c& (0+255),b
 12739  003888  0E02               	movlw	high _lcdTopRow
 12740  00388A  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12741  00388C  ECCD  F04E         	call	_printstrblock	;wreg free
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;selftest.c: 233:             timeDelayMs(350);
 12745  003890  0E01               	movlw	1
 12746  003892  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12747  003894  0E5E               	movlw	94
 12748  003896  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12749  003898  EC0A  F04C         	call	_timeDelayMs	;wreg free
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;selftest.c: 234:         }
 12753  00389C  0103               	movlb	3	; () banked
 12754  00389E  4B92               	infsnz	SelfTest@idx& (0+255),f,b
 12755  0038A0  2B93               	incf	(SelfTest@idx+1)& (0+255),f,b
 12756                           
 12757                           ; BSR set to: 3
 12758  0038A2  BF93               	btfsc	(SelfTest@idx+1)& (0+255),7,b
 12759  0038A4  D7BF               	goto	l19298
 12760  0038A6  5193               	movf	(SelfTest@idx+1)& (0+255),w,b
 12761  0038A8  E104               	bnz	u20000
 12762  0038AA  0E0A               	movlw	10
 12763  0038AC  5D92               	subwf	SelfTest@idx& (0+255),w,b
 12764  0038AE  A0D8               	btfss	status,0,c
 12765  0038B0  D7B9               	goto	l19298
 12766  0038B2                     u20000:
 12767                           
 12768                           ; BSR set to: 3
 12769                           ;selftest.c: 237:   setCursor(0, 0);
 12770  0038B2  0E00               	movlw	0
 12771  0038B4  0100               	movlb	0	; () banked
 12772  0038B6  6F92               	movwf	setCursor@row& (0+255),b
 12773  0038B8  0E00               	movlw	0
 12774  0038BA  ECD4  F04A         	call	_setCursor
 12775                           
 12776                           ;selftest.c: 238:   printstrblock("SELF-TEST. LEAVE");
 12777  0038BE  0E5B               	movlw	low STR_80
 12778  0038C0  0100               	movlb	0	; () banked
 12779  0038C2  6F8F               	movwf	printstrblock@c& (0+255),b
 12780  0038C4  0EFE               	movlw	high STR_80
 12781  0038C6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12782  0038C8  ECCD  F04E         	call	_printstrblock	;wreg free
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;selftest.c: 239:   setCursor(0, 1);
 12786  0038CC  0E01               	movlw	1
 12787  0038CE  6F92               	movwf	setCursor@row& (0+255),b
 12788  0038D0  0E00               	movlw	0
 12789  0038D2  ECD4  F04A         	call	_setCursor
 12790                           
 12791                           ;selftest.c: 240:   printstrblock("AIRWAY OPEN     ");
 12792  0038D6  0ED3               	movlw	low STR_81
 12793  0038D8  0100               	movlb	0	; () banked
 12794  0038DA  6F8F               	movwf	printstrblock@c& (0+255),b
 12795  0038DC  0EFD               	movlw	high STR_81
 12796  0038DE  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12797  0038E0  ECCD  F04E         	call	_printstrblock	;wreg free
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;selftest.c: 241:   timeDelayMs(1000);
 12801  0038E4  0E03               	movlw	3
 12802  0038E6  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12803  0038E8  0EE8               	movlw	232
 12804  0038EA  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12805  0038EC  EC0A  F04C         	call	_timeDelayMs	;wreg free
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;selftest.c: 243:   vddValMin = 8000;
 12809  0038F0  0E1F               	movlw	31
 12810  0038F2  0103               	movlb	3	; () banked
 12811  0038F4  6F9B               	movwf	(SelfTest@vddValMin+1)& (0+255),b
 12812  0038F6  0E40               	movlw	64
 12813  0038F8  6F9A               	movwf	SelfTest@vddValMin& (0+255),b
 12814                           
 12815                           ; BSR set to: 3
 12816                           ;selftest.c: 244:   vddValMax = 0;
 12817  0038FA  0E00               	movlw	0
 12818  0038FC  6F99               	movwf	(SelfTest@vddValMax+1)& (0+255),b
 12819  0038FE  0E00               	movlw	0
 12820  003900  6F98               	movwf	SelfTest@vddValMax& (0+255),b
 12821                           
 12822                           ; BSR set to: 3
 12823                           ;selftest.c: 245:   initOk = 1;
 12824  003902  0E01               	movlw	1
 12825  003904  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12826                           
 12827                           ; BSR set to: 3
 12828                           ;selftest.c: 247:   if (!MonitorMsgSendBlock(MONSTATE_INIT)) {
 12829  003906  0E20               	movlw	32
 12830  003908  ECE0  F04E         	call	_MonitorMsgSendBlock
 12831  00390C  0900               	iorlw	0
 12832  00390E  A4D8               	btfss	status,2,c
 12833  003910  D01D               	goto	l19352
 12834                           
 12835                           ; BSR set to: 1
 12836                           ;selftest.c: 248:     initOk = 0;
 12837  003912  0E00               	movlw	0
 12838  003914  0103               	movlb	3	; () banked
 12839  003916  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12840                           
 12841                           ; BSR set to: 3
 12842                           ;selftest.c: 249:     printf ("Mon error");
 12843  003918  0E80               	movlw	low STR_70
 12844  00391A  0101               	movlb	1	; () banked
 12845  00391C  6F46               	movwf	printf@fmt& (0+255),b
 12846  00391E  0EFF               	movlw	high STR_70
 12847  003920  6F47               	movwf	(printf@fmt+1)& (0+255),b
 12848  003922  EC68  F04E         	call	_printf	;wreg free
 12849                           
 12850                           ; BSR set to: 2
 12851                           ;selftest.c: 250:     setCursor(0, 0);
 12852  003926  0E00               	movlw	0
 12853  003928  0100               	movlb	0	; () banked
 12854  00392A  6F92               	movwf	setCursor@row& (0+255),b
 12855  00392C  0E00               	movlw	0
 12856  00392E  ECD4  F04A         	call	_setCursor
 12857                           
 12858                           ;selftest.c: 251:     printstrblock("MONITOR ERROR");
 12859  003932  0E15               	movlw	low STR_71
 12860  003934  0100               	movlb	0	; () banked
 12861  003936  6F8F               	movwf	printstrblock@c& (0+255),b
 12862  003938  0EFF               	movlw	high STR_71
 12863  00393A  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 12864  00393C  ECCD  F04E         	call	_printstrblock	;wreg free
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;selftest.c: 252:     timeDelayMs(500);
 12868  003940  0E01               	movlw	1
 12869  003942  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 12870  003944  0EF4               	movlw	244
 12871  003946  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 12872  003948  EC0A  F04C         	call	_timeDelayMs	;wreg free
 12873  00394C                     l19352:
 12874                           
 12875                           ;selftest.c: 255:   aCaptureOffSet(MainPSensor, 0);
 12876  00394C  0E00               	movlw	0
 12877  00394E  0101               	movlb	1	; () banked
 12878  003950  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 12879  003952  0E00               	movlw	0
 12880  003954  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 12881  003956  0E00               	movlw	0
 12882  003958  ECFC  F048         	call	_aCaptureOffSet
 12883                           
 12884                           ;selftest.c: 256:   aCaptureOffSet(VolPSensor, 0);
 12885  00395C  0E00               	movlw	0
 12886  00395E  0101               	movlb	1	; () banked
 12887  003960  6F61               	movwf	(aCaptureOffSet@offVal+1)& (0+255),b
 12888  003962  0E00               	movlw	0
 12889  003964  6F60               	movwf	aCaptureOffSet@offVal& (0+255),b
 12890  003966  0E01               	movlw	1
 12891  003968  ECFC  F048         	call	_aCaptureOffSet
 12892                           
 12893                           ;selftest.c: 258:   tstamp = timeGet();
 12894  00396C  ECFA  F050         	call	_timeGet	;wreg free
 12895  003970  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 12896  003976  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 12897                           
 12898                           ;selftest.c: 260:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12899  00397C  D045               	goto	l19372
 12900  00397E                     l19358:
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;selftest.c: 261:     if (aCaptGetResult(VddSensor, &vddVal)) {
 12904  00397E  0E9C               	movlw	low SelfTest@vddVal
 12905  003980  0101               	movlb	1	; () banked
 12906  003982  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 12907  003984  0E03               	movlw	high SelfTest@vddVal
 12908  003986  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 12909  003988  0E02               	movlw	2
 12910  00398A  EC83  F031         	call	_aCaptGetResult
 12911  00398E  0900               	iorlw	0
 12912  003990  B4D8               	btfsc	status,2,c
 12913  003992  D029               	goto	l2819
 12914                           
 12915                           ;selftest.c: 262:       if (vddVal > vddValMax) {
 12916  003994  0103               	movlb	3	; () banked
 12917  003996  519C               	movf	SelfTest@vddVal& (0+255),w,b
 12918  003998  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 12919  00399A  5199               	movf	(SelfTest@vddValMax+1)& (0+255),w,b
 12920  00399C  0A80               	xorlw	128
 12921  00399E  0102               	movlb	2	; () banked
 12922  0039A0  6FFA               	movwf	??_SelfTest& (0+255),b
 12923  0039A2  0103               	movlb	3	; () banked
 12924  0039A4  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 12925  0039A6  0A80               	xorlw	128
 12926  0039A8  0102               	movlb	2	; () banked
 12927  0039AA  59FA               	subwfb	??_SelfTest& (0+255),w,b
 12928  0039AC  B0D8               	btfsc	status,0,c
 12929  0039AE  D006               	goto	l19364
 12930                           
 12931                           ; BSR set to: 2
 12932                           ;selftest.c: 263:  vddValMax = vddVal;
 12933  0039B0  0060  FE70  F398   	movff	SelfTest@vddVal,SelfTest@vddValMax
 12934  0039B6  0060  FE74  F399   	movff	SelfTest@vddVal+1,SelfTest@vddValMax+1
 12935  0039BC                     l19364:
 12936                           
 12937                           ; BSR set to: 2
 12938                           ;selftest.c: 265:       if (vddVal < vddValMin) {
 12939  0039BC  0103               	movlb	3	; () banked
 12940  0039BE  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 12941  0039C0  5D9C               	subwf	SelfTest@vddVal& (0+255),w,b
 12942  0039C2  519D               	movf	(SelfTest@vddVal+1)& (0+255),w,b
 12943  0039C4  0A80               	xorlw	128
 12944  0039C6  0102               	movlb	2	; () banked
 12945  0039C8  6FFA               	movwf	??_SelfTest& (0+255),b
 12946  0039CA  0103               	movlb	3	; () banked
 12947  0039CC  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 12948  0039CE  0A80               	xorlw	128
 12949  0039D0  0102               	movlb	2	; () banked
 12950  0039D2  59FA               	subwfb	??_SelfTest& (0+255),w,b
 12951  0039D4  B0D8               	btfsc	status,0,c
 12952  0039D6  D018               	goto	l19372
 12953                           
 12954                           ; BSR set to: 2
 12955                           ;selftest.c: 266:  vddValMin = vddVal;
 12956  0039D8  0060  FE70  F39A   	movff	SelfTest@vddVal,SelfTest@vddValMin
 12957  0039DE  0060  FE74  F39B   	movff	SelfTest@vddVal+1,SelfTest@vddValMin+1
 12958  0039E4  D011               	goto	l19372
 12959  0039E6                     l2819:
 12960                           
 12961                           ;selftest.c: 269:       LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;printf(
      +                          "Fatal %d",22);
 12962  0039E6  94BA               	bcf	186,2,c	;volatile
 12963  0039E8  96BC               	bcf	188,3,c	;volatile
 12964  0039EA  96BA               	bcf	186,3,c	;volatile
 12965  0039EC  0EB1               	movlw	low STR_28
 12966  0039EE  0101               	movlb	1	; () banked
 12967  0039F0  6F46               	movwf	printf@fmt& (0+255),b
 12968  0039F2  0EFF               	movlw	high STR_28
 12969  0039F4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 12970  0039F6  0E00               	movlw	0
 12971  0039F8  6F49               	movwf	(?_printf+3)& (0+255),b
 12972  0039FA  0E16               	movlw	22
 12973  0039FC  6F48               	movwf	(?_printf+2)& (0+255),b
 12974  0039FE  EC68  F04E         	call	_printf	;wreg free
 12975                           
 12976                           ; BSR set to: 2
 12977                           ;selftest.c: 270:             initOk = 0;
 12978  003A02  0E00               	movlw	0
 12979  003A04  0103               	movlb	3	; () banked
 12980  003A06  6F9E               	movwf	SelfTest@initOk& (0+255),b
 12981  003A08                     l19372:
 12982                           
 12983                           ;selftest.c: 260:   while (!timeElapsedR(&tstamp, ((time_t) 500*1))) {
 12984  003A08  0E96               	movlw	low SelfTest@tstamp
 12985  003A0A  0100               	movlb	0	; () banked
 12986  003A0C  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 12987  003A0E  0E03               	movlw	high SelfTest@tstamp
 12988  003A10  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 12989  003A12  0E01               	movlw	1
 12990  003A14  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 12991  003A16  0EF4               	movlw	244
 12992  003A18  6F95               	movwf	timeElapsedR@duration& (0+255),b
 12993  003A1A  ECE5  F045         	call	_timeElapsedR	;wreg free
 12994  003A1E  0900               	iorlw	0
 12995  003A20  B4D8               	btfsc	status,2,c
 12996  003A22  D7AD               	goto	l19358
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;selftest.c: 274:   if (!initOk) {
 13000  003A24  0103               	movlb	3	; () banked
 13001  003A26  519E               	movf	SelfTest@initOk& (0+255),w,b
 13002  003A28  A4D8               	btfss	status,2,c
 13003  003A2A  D003               	goto	l19380
 13004  003A2C                     u20060:
 13005                           
 13006                           ;selftest.c: 275:     return initOk;
 13007  003A2C  0103               	movlb	3	; () banked
 13008  003A2E  519E               	movf	SelfTest@initOk& (0+255),w,b
 13009  003A30  0012               	return	
 13010  003A32                     l19380:
 13011                           
 13012                           ; BSR set to: 3
 13013                           ;selftest.c: 279:   vddValMean = (vddValMax + vddValMin) >> 1;
 13014  003A32  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13015  003A34  2598               	addwf	SelfTest@vddValMax& (0+255),w,b
 13016  003A36  0102               	movlb	2	; () banked
 13017  003A38  6FFA               	movwf	??_SelfTest& (0+255),b
 13018  003A3A  0103               	movlb	3	; () banked
 13019  003A3C  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13020  003A3E  2199               	addwfc	(SelfTest@vddValMax+1)& (0+255),w,b
 13021  003A40  0102               	movlb	2	; () banked
 13022  003A42  6FFB               	movwf	(??_SelfTest+1)& (0+255),b
 13023  003A44  35FB               	rlcf	(??_SelfTest+1)& (0+255),w,b
 13024  003A46  31FB               	rrcf	(??_SelfTest+1)& (0+255),w,b
 13025  003A48  6FFC               	movwf	(??_SelfTest+2)& (0+255),b
 13026  003A4A  31FA               	rrcf	??_SelfTest& (0+255),w,b
 13027  003A4C  0101               	movlb	1	; () banked
 13028  003A4E  6F91               	movwf	_vddValMean& (0+255),b
 13029  003A50  0060  FBF0  F192   	movff	??_SelfTest+2,_vddValMean+1
 13030                           
 13031                           ; BSR set to: 1
 13032                           ;selftest.c: 280:   printf ("VDD Min %d Max %d MEAN %d\n", vddValMin, vddValMax, vddValM
      +                          ean);
 13033  003A56  0E66               	movlw	low STR_85
 13034  003A58  6F46               	movwf	printf@fmt& (0+255),b
 13035  003A5A  0EFC               	movlw	high STR_85
 13036  003A5C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13037  003A5E  0060  FE68  F148   	movff	SelfTest@vddValMin,?_printf+2
 13038  003A64  0060  FE6C  F149   	movff	SelfTest@vddValMin+1,?_printf+3
 13039  003A6A  0060  FE60  F14A   	movff	SelfTest@vddValMax,?_printf+4
 13040  003A70  0060  FE64  F14B   	movff	SelfTest@vddValMax+1,?_printf+5
 13041  003A76  0060  F644  F14C   	movff	_vddValMean,?_printf+6
 13042  003A7C  0060  F648  F14D   	movff	_vddValMean+1,?_printf+7
 13043  003A82  EC68  F04E         	call	_printf	;wreg free
 13044                           
 13045                           ; BSR set to: 2
 13046                           ;selftest.c: 282:   if ((vddValMean > 5250) || (vddValMean < 4750)) {
 13047  003A86  0101               	movlb	1	; () banked
 13048  003A88  BF92               	btfsc	(_vddValMean+1)& (0+255),7,b
 13049  003A8A  D006               	goto	u20070
 13050  003A8C  0E83               	movlw	131
 13051  003A8E  5D91               	subwf	_vddValMean& (0+255),w,b
 13052  003A90  0E14               	movlw	20
 13053  003A92  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 13054  003A94  B0D8               	btfsc	status,0,c
 13055  003A96  D008               	goto	u20080
 13056  003A98                     u20070:
 13057                           
 13058                           ; BSR set to: 1
 13059  003A98  BF92               	btfsc	(_vddValMean+1)& (0+255),7,b
 13060  003A9A  D006               	goto	u20080
 13061  003A9C  0E8E               	movlw	142
 13062  003A9E  5D91               	subwf	_vddValMean& (0+255),w,b
 13063  003AA0  0E12               	movlw	18
 13064  003AA2  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 13065  003AA4  B0D8               	btfsc	status,0,c
 13066  003AA6  D02E               	goto	l19400
 13067  003AA8                     u20080:
 13068                           
 13069                           ; BSR set to: 1
 13070                           ;selftest.c: 284:     setCursor(0, 0);
 13071  003AA8  0E00               	movlw	0
 13072  003AAA  0100               	movlb	0	; () banked
 13073  003AAC  6F92               	movwf	setCursor@row& (0+255),b
 13074  003AAE  0E00               	movlw	0
 13075  003AB0  ECD4  F04A         	call	_setCursor
 13076                           
 13077                           ;selftest.c: 285:     printstrblock("INTERNAL ERROR  ");
 13078  003AB4  0E28               	movlw	low STR_86
 13079  003AB6  0100               	movlb	0	; () banked
 13080  003AB8  6F8F               	movwf	printstrblock@c& (0+255),b
 13081  003ABA  0EFE               	movlw	high STR_86
 13082  003ABC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13083  003ABE  ECCD  F04E         	call	_printstrblock	;wreg free
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;selftest.c: 286:     setCursor(0, 1);
 13087  003AC2  0E01               	movlw	1
 13088  003AC4  6F92               	movwf	setCursor@row& (0+255),b
 13089  003AC6  0E00               	movlw	0
 13090  003AC8  ECD4  F04A         	call	_setCursor
 13091                           
 13092                           ;selftest.c: 287:     sprintf(lcdTopRow, "VDD OOL: % 3d mV", vddValMean);
 13093  003ACC  0EA3               	movlw	low _lcdTopRow
 13094  003ACE  0101               	movlb	1	; () banked
 13095  003AD0  6F46               	movwf	sprintf@s& (0+255),b
 13096  003AD2  0E02               	movlw	high _lcdTopRow
 13097  003AD4  6F47               	movwf	(sprintf@s+1)& (0+255),b
 13098  003AD6  0E7D               	movlw	low STR_87
 13099  003AD8  6F48               	movwf	sprintf@fmt& (0+255),b
 13100  003ADA  0EFE               	movlw	high STR_87
 13101  003ADC  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 13102  003ADE  0060  F644  F14A   	movff	_vddValMean,?_sprintf+4
 13103  003AE4  0060  F648  F14B   	movff	_vddValMean+1,?_sprintf+5
 13104  003AEA  EC58  F047         	call	_sprintf	;wreg free
 13105                           
 13106                           ; BSR set to: 1
 13107                           ;selftest.c: 288:     printstrblock(lcdTopRow);
 13108  003AEE  0EA3               	movlw	low _lcdTopRow
 13109  003AF0  0100               	movlb	0	; () banked
 13110  003AF2  6F8F               	movwf	printstrblock@c& (0+255),b
 13111  003AF4  0E02               	movlw	high _lcdTopRow
 13112  003AF6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13113  003AF8  ECCD  F04E         	call	_printstrblock	;wreg free
 13114  003AFC                     l19398:
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;selftest.c: 289:     initOk = 0;
 13118  003AFC  0E00               	movlw	0
 13119  003AFE  0103               	movlb	3	; () banked
 13120  003B00  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13121                           
 13122                           ;selftest.c: 290:   } else if ((vddValMax - vddValMin) > 100) {
 13123  003B02  D02C               	goto	l19410
 13124  003B04                     l19400:
 13125                           
 13126                           ; BSR set to: 1
 13127  003B04  0103               	movlb	3	; () banked
 13128  003B06  519A               	movf	SelfTest@vddValMin& (0+255),w,b
 13129  003B08  5D98               	subwf	SelfTest@vddValMax& (0+255),w,b
 13130  003B0A  0102               	movlb	2	; () banked
 13131  003B0C  6FFA               	movwf	??_SelfTest& (0+255),b
 13132  003B0E  0103               	movlb	3	; () banked
 13133  003B10  519B               	movf	(SelfTest@vddValMin+1)& (0+255),w,b
 13134  003B12  5999               	subwfb	(SelfTest@vddValMax+1)& (0+255),w,b
 13135  003B14  0102               	movlb	2	; () banked
 13136  003B16  6FFB               	movwf	(??_SelfTest+1)& (0+255),b
 13137  003B18  BFFB               	btfsc	(??_SelfTest+1)& (0+255),7,b
 13138  003B1A  D020               	goto	l19410
 13139  003B1C  51FB               	movf	(??_SelfTest+1)& (0+255),w,b
 13140  003B1E  E104               	bnz	u20090
 13141  003B20  0E65               	movlw	101
 13142  003B22  5DFA               	subwf	??_SelfTest& (0+255),w,b
 13143  003B24  A0D8               	btfss	status,0,c
 13144  003B26  D01A               	goto	l19410
 13145  003B28                     u20090:
 13146                           
 13147                           ; BSR set to: 2
 13148                           ;selftest.c: 292:     setCursor(0, 0);
 13149  003B28  0E00               	movlw	0
 13150  003B2A  0100               	movlb	0	; () banked
 13151  003B2C  6F92               	movwf	setCursor@row& (0+255),b
 13152  003B2E  0E00               	movlw	0
 13153  003B30  ECD4  F04A         	call	_setCursor
 13154                           
 13155                           ;selftest.c: 293:     printstrblock("INTERNAL ERROR  ");
 13156  003B34  0E28               	movlw	low STR_86
 13157  003B36  0100               	movlb	0	; () banked
 13158  003B38  6F8F               	movwf	printstrblock@c& (0+255),b
 13159  003B3A  0EFE               	movlw	high STR_86
 13160  003B3C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13161  003B3E  ECCD  F04E         	call	_printstrblock	;wreg free
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;selftest.c: 294:     setCursor(0, 1);
 13165  003B42  0E01               	movlw	1
 13166  003B44  6F92               	movwf	setCursor@row& (0+255),b
 13167  003B46  0E00               	movlw	0
 13168  003B48  ECD4  F04A         	call	_setCursor
 13169                           
 13170                           ;selftest.c: 295:     printstrblock("VDD NOISY       ");
 13171  003B4C  0EC2               	movlw	low STR_89
 13172  003B4E  0100               	movlb	0	; () banked
 13173  003B50  6F8F               	movwf	printstrblock@c& (0+255),b
 13174  003B52  0EFD               	movlw	high STR_89
 13175  003B54  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13176  003B56  ECCD  F04E         	call	_printstrblock	;wreg free
 13177  003B5A  D7D0               	goto	l19398
 13178  003B5C                     l19410:
 13179                           
 13180                           ;selftest.c: 299:   if (!initOk) {
 13181  003B5C  0103               	movlb	3	; () banked
 13182  003B5E  519E               	movf	SelfTest@initOk& (0+255),w,b
 13183  003B60  B4D8               	btfsc	status,2,c
 13184  003B62  D764               	goto	u20060
 13185  003B64  D0A9               	goto	l19470
 13186  003B66                     l2833:
 13187                           
 13188                           ; BSR set to: 1
 13189                           ;selftest.c: 304:     LATDbits.LATD6 = 0;
 13190  003B66  9CBD               	bcf	189,6,c	;volatile
 13191                           
 13192                           ;selftest.c: 306:     while (keyPeek() != -1)
 13193  003B68  D00E               	goto	l19418
 13194  003B6A                     l19416:
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;selftest.c: 307:       printf ("KP %d\n", keyPeek());
 13198  003B6A  0ED9               	movlw	low STR_90
 13199  003B6C  0101               	movlb	1	; () banked
 13200  003B6E  6F46               	movwf	printf@fmt& (0+255),b
 13201  003B70  0EFF               	movlw	high STR_90
 13202  003B72  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13203  003B74  EC15  F046         	call	_keyPeek	;wreg free
 13204  003B78  0101               	movlb	1	; () banked
 13205  003B7A  6F48               	movwf	(?_printf+2)& (0+255),b
 13206  003B7C  6B49               	clrf	(?_printf+3)& (0+255),b
 13207  003B7E  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 13208  003B80  0749               	decf	(?_printf+3)& (0+255),f,b
 13209  003B82  EC68  F04E         	call	_printf	;wreg free
 13210  003B86                     l19418:
 13211                           
 13212                           ;selftest.c: 306:     while (keyPeek() != -1)
 13213  003B86  EC15  F046         	call	_keyPeek	;wreg free
 13214  003B8A  0AFF               	xorlw	255
 13215  003B8C  A4D8               	btfss	status,2,c
 13216  003B8E  D7ED               	goto	l19416
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;selftest.c: 309:     keyReadInit();
 13220  003B90  ECC9  F050         	call	_keyReadInit	;wreg free
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;selftest.c: 313:     LATDbits.LATD6 = 1;
 13224  003B94  8CBD               	bsf	189,6,c	;volatile
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;selftest.c: 314:     setCursor(0, 0);
 13228  003B96  0E00               	movlw	0
 13229  003B98  6F92               	movwf	setCursor@row& (0+255),b
 13230  003B9A  0E00               	movlw	0
 13231  003B9C  ECD4  F04A         	call	_setCursor
 13232                           
 13233                           ;selftest.c: 315:     printstrblock("CAL PRESS BREATH");
 13234  003BA0  0E6C               	movlw	low STR_91
 13235  003BA2  0100               	movlb	0	; () banked
 13236  003BA4  6F8F               	movwf	printstrblock@c& (0+255),b
 13237  003BA6  0EFE               	movlw	high STR_91
 13238  003BA8  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13239  003BAA  ECCD  F04E         	call	_printstrblock	;wreg free
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;selftest.c: 316:     tstamp = timeGet();
 13243  003BAE  ECFA  F050         	call	_timeGet	;wreg free
 13244  003BB2  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13245  003BB8  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;selftest.c: 317:     lcdBLight = 1;
 13249  003BBE  0E01               	movlw	1
 13250  003BC0  0103               	movlb	3	; () banked
 13251  003BC2  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13252                           
 13253                           ; BSR set to: 3
 13254                           ;selftest.c: 319:     tstamp = timeGet();
 13255  003BC4  ECFA  F050         	call	_timeGet	;wreg free
 13256  003BC8  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13257  003BCE  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13258  003BD4                     l19434:
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;selftest.c: 321:       if (timeElapsedR(&tstamp, ((time_t) 500*1))) {
 13262  003BD4  0E96               	movlw	low SelfTest@tstamp
 13263  003BD6  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 13264  003BD8  0E03               	movlw	high SelfTest@tstamp
 13265  003BDA  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 13266  003BDC  0E01               	movlw	1
 13267  003BDE  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 13268  003BE0  0EF4               	movlw	244
 13269  003BE2  6F95               	movwf	timeElapsedR@duration& (0+255),b
 13270  003BE4  ECE5  F045         	call	_timeElapsedR	;wreg free
 13271  003BE8  0900               	iorlw	0
 13272  003BEA  B4D8               	btfsc	status,2,c
 13273  003BEC  D00C               	goto	l19440
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;selftest.c: 322:  setBacklight(lcdBLight);
 13277  003BEE  0103               	movlb	3	; () banked
 13278  003BF0  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13279  003BF2  EC7B  F050         	call	_setBacklight
 13280                           
 13281                           ;selftest.c: 323:  lcdBLight = !lcdBLight;
 13282  003BF6  0103               	movlb	3	; () banked
 13283  003BF8  5191               	movf	SelfTest@lcdBLight& (0+255),w,b
 13284  003BFA  A4D8               	btfss	status,2,c
 13285  003BFC  D002               	goto	u20130
 13286  003BFE  0E01               	movlw	1
 13287  003C00  D001               	goto	u20140
 13288  003C02                     u20130:
 13289  003C02  0E00               	movlw	0
 13290  003C04                     u20140:
 13291  003C04  6F91               	movwf	SelfTest@lcdBLight& (0+255),b
 13292  003C06                     l19440:
 13293                           
 13294                           ;selftest.c: 327:       if (keyReadEC() == -100) {
 13295  003C06  EC34  F042         	call	_keyReadEC	;wreg free
 13296  003C0A  0A9C               	xorlw	156
 13297  003C0C  A4D8               	btfss	status,2,c
 13298  003C0E  D7E2               	goto	l19434
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;selftest.c: 328:  if (keyPeek() == 4) {
 13302  003C10  EC15  F046         	call	_keyPeek	;wreg free
 13303  003C14  0A04               	xorlw	4
 13304  003C16  A4D8               	btfss	status,2,c
 13305  003C18  D7DD               	goto	l19434
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;selftest.c: 330:    setBacklight(1);
 13309  003C1A  0E01               	movlw	1
 13310  003C1C  EC7B  F050         	call	_setBacklight
 13311                           
 13312                           ;selftest.c: 336:     LATDbits.LATD6 = 0;
 13313                           
 13314                           ;selftest.c: 331:    break;
 13315  003C20  9CBD               	bcf	189,6,c	;volatile
 13316                           
 13317                           ;selftest.c: 337:     printf ("CALP\n");
 13318  003C22  0EEE               	movlw	low STR_92
 13319  003C24  0101               	movlb	1	; () banked
 13320  003C26  6F46               	movwf	printf@fmt& (0+255),b
 13321  003C28  0EFF               	movlw	high STR_92
 13322  003C2A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13323  003C2C  EC68  F04E         	call	_printf	;wreg free
 13324                           
 13325                           ; BSR set to: 2
 13326                           ;selftest.c: 338:     if (!MonitorMsgSendBlock(MONSTATE_CALP)){
 13327  003C30  0E40               	movlw	64
 13328  003C32  ECE0  F04E         	call	_MonitorMsgSendBlock
 13329  003C36  0900               	iorlw	0
 13330  003C38  A4D8               	btfss	status,2,c
 13331  003C3A  D01D               	goto	l19460
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;selftest.c: 339:       initOk=0;
 13335  003C3C  0E00               	movlw	0
 13336  003C3E  0103               	movlb	3	; () banked
 13337  003C40  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13338                           
 13339                           ; BSR set to: 3
 13340                           ;selftest.c: 340:       printf ("Mon error");
 13341  003C42  0E80               	movlw	low STR_70
 13342  003C44  0101               	movlb	1	; () banked
 13343  003C46  6F46               	movwf	printf@fmt& (0+255),b
 13344  003C48  0EFF               	movlw	high STR_70
 13345  003C4A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13346  003C4C  EC68  F04E         	call	_printf	;wreg free
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;selftest.c: 341:       setCursor(0, 0);
 13350  003C50  0E00               	movlw	0
 13351  003C52  0100               	movlb	0	; () banked
 13352  003C54  6F92               	movwf	setCursor@row& (0+255),b
 13353  003C56  0E00               	movlw	0
 13354  003C58  ECD4  F04A         	call	_setCursor
 13355                           
 13356                           ;selftest.c: 342:       printstrblock("MONITOR ERROR   ");
 13357  003C5C  0E17               	movlw	low STR_94
 13358  003C5E  0100               	movlb	0	; () banked
 13359  003C60  6F8F               	movwf	printstrblock@c& (0+255),b
 13360  003C62  0EFE               	movlw	high STR_94
 13361  003C64  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13362  003C66  ECCD  F04E         	call	_printstrblock	;wreg free
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;selftest.c: 343:       timeDelayMs(500);
 13366  003C6A  0E01               	movlw	1
 13367  003C6C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13368  003C6E  0EF4               	movlw	244
 13369  003C70  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13370  003C72  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13371  003C76                     l19460:
 13372                           
 13373                           ;selftest.c: 346:     if (pressureSensorChk(1, 500)) {
 13374  003C76  0E01               	movlw	1
 13375  003C78  0101               	movlb	1	; () banked
 13376  003C7A  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13377  003C7C  0EF4               	movlw	244
 13378  003C7E  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13379  003C80  0E01               	movlw	1
 13380  003C82  EC46  F01F         	call	_pressureSensorChk
 13381  003C86  0900               	iorlw	0
 13382  003C88  B4D8               	btfsc	status,2,c
 13383  003C8A  D003               	goto	l19464
 13384                           
 13385                           ; BSR set to: 1
 13386                           ;selftest.c: 348:       ctrlStatus = CTRL_STOP;
 13387  003C8C  0E01               	movlw	1
 13388  003C8E  6FC8               	movwf	_ctrlStatus& (0+255),b
 13389                           
 13390                           ;selftest.c: 349:     } else {
 13391  003C90  D013               	goto	l19470
 13392  003C92                     l19464:
 13393                           
 13394                           ; BSR set to: 1
 13395                           ;selftest.c: 350:       setCursor(0, 0);
 13396  003C92  0E00               	movlw	0
 13397  003C94  0100               	movlb	0	; () banked
 13398  003C96  6F92               	movwf	setCursor@row& (0+255),b
 13399  003C98  0E00               	movlw	0
 13400  003C9A  ECD4  F04A         	call	_setCursor
 13401                           
 13402                           ;selftest.c: 351:       printstrblock("CAL ERROR. RETRY ");
 13403  003C9E  0E8D               	movlw	low STR_95
 13404  003CA0  0100               	movlb	0	; () banked
 13405  003CA2  6F8F               	movwf	printstrblock@c& (0+255),b
 13406  003CA4  0EFD               	movlw	high STR_95
 13407  003CA6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13408  003CA8  ECCD  F04E         	call	_printstrblock	;wreg free
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;selftest.c: 352:       timeDelayMs(500);
 13412  003CAC  0E01               	movlw	1
 13413  003CAE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13414  003CB0  0EF4               	movlw	244
 13415  003CB2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13416  003CB4  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13417  003CB8                     l19470:
 13418                           
 13419                           ;selftest.c: 303:   while (ctrlStatus == CTRL_UNCAL) {
 13420  003CB8  0101               	movlb	1	; () banked
 13421  003CBA  51C8               	movf	_ctrlStatus& (0+255),w,b
 13422  003CBC  B4D8               	btfsc	status,2,c
 13423  003CBE  D753               	goto	l2833
 13424                           
 13425                           ; BSR set to: 1
 13426                           ;selftest.c: 356:   if (!initOk) {
 13427  003CC0  0103               	movlb	3	; () banked
 13428  003CC2  519E               	movf	SelfTest@initOk& (0+255),w,b
 13429  003CC4  B4D8               	btfsc	status,2,c
 13430  003CC6  D6B2               	goto	u20060
 13431                           
 13432                           ; BSR set to: 3
 13433                           ;selftest.c: 361:   printf ("CHKSV2\n");
 13434  003CC8  0EC2               	movlw	low STR_96
 13435  003CCA  0101               	movlb	1	; () banked
 13436  003CCC  6F46               	movwf	printf@fmt& (0+255),b
 13437  003CCE  0EFF               	movlw	high STR_96
 13438  003CD0  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13439  003CD2  EC68  F04E         	call	_printf	;wreg free
 13440                           
 13441                           ; BSR set to: 2
 13442                           ;selftest.c: 363:   if (!MonitorMsgSendBlock(MONSTATE_SV2CHK)) {
 13443  003CD6  0E60               	movlw	96
 13444  003CD8  ECE0  F04E         	call	_MonitorMsgSendBlock
 13445  003CDC  0900               	iorlw	0
 13446  003CDE  A4D8               	btfss	status,2,c
 13447  003CE0  D01D               	goto	l19492
 13448                           
 13449                           ; BSR set to: 1
 13450                           ;selftest.c: 364:         initOk = 0;
 13451  003CE2  0E00               	movlw	0
 13452  003CE4  0103               	movlb	3	; () banked
 13453  003CE6  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13454                           
 13455                           ; BSR set to: 3
 13456                           ;selftest.c: 365:         printf ("Mon error");
 13457  003CE8  0E80               	movlw	low STR_70
 13458  003CEA  0101               	movlb	1	; () banked
 13459  003CEC  6F46               	movwf	printf@fmt& (0+255),b
 13460  003CEE  0EFF               	movlw	high STR_70
 13461  003CF0  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13462  003CF2  EC68  F04E         	call	_printf	;wreg free
 13463                           
 13464                           ; BSR set to: 2
 13465                           ;selftest.c: 366:         setCursor(0, 0);
 13466  003CF6  0E00               	movlw	0
 13467  003CF8  0100               	movlb	0	; () banked
 13468  003CFA  6F92               	movwf	setCursor@row& (0+255),b
 13469  003CFC  0E00               	movlw	0
 13470  003CFE  ECD4  F04A         	call	_setCursor
 13471                           
 13472                           ;selftest.c: 367:         printstrblock("MONITOR ERROR   ");
 13473  003D02  0E17               	movlw	low STR_94
 13474  003D04  0100               	movlb	0	; () banked
 13475  003D06  6F8F               	movwf	printstrblock@c& (0+255),b
 13476  003D08  0EFE               	movlw	high STR_94
 13477  003D0A  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13478  003D0C  ECCD  F04E         	call	_printstrblock	;wreg free
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;selftest.c: 368:         timeDelayMs(500);
 13482  003D10  0E01               	movlw	1
 13483  003D12  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13484  003D14  0EF4               	movlw	244
 13485  003D16  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13486  003D18  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13487  003D1C                     l19492:
 13488                           
 13489                           ;selftest.c: 371:   LATDbits.LATD0 = 1;
 13490  003D1C  80BD               	bsf	189,0,c	;volatile
 13491                           
 13492                           ;selftest.c: 373:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 13493  003D1E  94BA               	bcf	186,2,c	;volatile
 13494  003D20  96BC               	bcf	188,3,c	;volatile
 13495                           
 13496                           ;selftest.c: 374:   timeDelayMs(200);
 13497  003D22  0E00               	movlw	0
 13498  003D24  0100               	movlb	0	; () banked
 13499  003D26  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13500  003D28  0EC8               	movlw	200
 13501  003D2A  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13502  003D2C  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;selftest.c: 375:   if (!pressureSensorChk(0, 100)) {
 13506  003D30  0E00               	movlw	0
 13507  003D32  0101               	movlb	1	; () banked
 13508  003D34  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13509  003D36  0E64               	movlw	100
 13510  003D38  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13511  003D3A  0E00               	movlw	0
 13512  003D3C  EC46  F01F         	call	_pressureSensorChk
 13513  003D40  0900               	iorlw	0
 13514  003D42  A4D8               	btfss	status,2,c
 13515  003D44  D016               	goto	l19510
 13516                           
 13517                           ; BSR set to: 1
 13518                           ;selftest.c: 376:     initOk=0;
 13519  003D46  0E00               	movlw	0
 13520  003D48  0103               	movlb	3	; () banked
 13521  003D4A  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13522                           
 13523                           ; BSR set to: 3
 13524                           ;selftest.c: 377:  setCursor(0, 0);
 13525  003D4C  0E00               	movlw	0
 13526  003D4E  0100               	movlb	0	; () banked
 13527  003D50  6F92               	movwf	setCursor@row& (0+255),b
 13528  003D52  0E00               	movlw	0
 13529  003D54  ECD4  F04A         	call	_setCursor
 13530                           
 13531                           ;selftest.c: 378:     printstrblock("SV2 Valve error ");
 13532  003D58  0E4A               	movlw	low STR_99
 13533  003D5A  0100               	movlb	0	; () banked
 13534  003D5C  6F8F               	movwf	printstrblock@c& (0+255),b
 13535  003D5E  0EFE               	movlw	high STR_99
 13536  003D60  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13537  003D62  ECCD  F04E         	call	_printstrblock	;wreg free
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;selftest.c: 379:     timeDelayMs(500);
 13541  003D66  0E01               	movlw	1
 13542  003D68  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13543  003D6A  0EF4               	movlw	244
 13544  003D6C  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13545  003D6E  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13546  003D72                     l19510:
 13547                           
 13548                           ;selftest.c: 383:   LATDbits.LATD0 = 0;
 13549  003D72  90BD               	bcf	189,0,c	;volatile
 13550                           
 13551                           ;selftest.c: 384:   printf ("CHKSV1\n");
 13552  003D74  0EBA               	movlw	low STR_100
 13553  003D76  0101               	movlb	1	; () banked
 13554  003D78  6F46               	movwf	printf@fmt& (0+255),b
 13555  003D7A  0EFF               	movlw	high STR_100
 13556  003D7C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13557  003D7E  EC68  F04E         	call	_printf	;wreg free
 13558                           
 13559                           ; BSR set to: 2
 13560                           ;selftest.c: 385:     if (!MonitorMsgSendBlock(MONSTATE_SV1CHK)) {
 13561  003D82  0E80               	movlw	128
 13562  003D84  ECE0  F04E         	call	_MonitorMsgSendBlock
 13563  003D88  0900               	iorlw	0
 13564  003D8A  A4D8               	btfss	status,2,c
 13565  003D8C  D01D               	goto	l19526
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;selftest.c: 386:         initOk = 0;
 13569  003D8E  0E00               	movlw	0
 13570  003D90  0103               	movlb	3	; () banked
 13571  003D92  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13572                           
 13573                           ; BSR set to: 3
 13574                           ;selftest.c: 387:         printf ("Mon error");
 13575  003D94  0E80               	movlw	low STR_70
 13576  003D96  0101               	movlb	1	; () banked
 13577  003D98  6F46               	movwf	printf@fmt& (0+255),b
 13578  003D9A  0EFF               	movlw	high STR_70
 13579  003D9C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13580  003D9E  EC68  F04E         	call	_printf	;wreg free
 13581                           
 13582                           ; BSR set to: 2
 13583                           ;selftest.c: 388:         setCursor(0, 0);
 13584  003DA2  0E00               	movlw	0
 13585  003DA4  0100               	movlb	0	; () banked
 13586  003DA6  6F92               	movwf	setCursor@row& (0+255),b
 13587  003DA8  0E00               	movlw	0
 13588  003DAA  ECD4  F04A         	call	_setCursor
 13589                           
 13590                           ;selftest.c: 389:         printstrblock("MONITOR ERROR   ");
 13591  003DAE  0E17               	movlw	low STR_94
 13592  003DB0  0100               	movlb	0	; () banked
 13593  003DB2  6F8F               	movwf	printstrblock@c& (0+255),b
 13594  003DB4  0EFE               	movlw	high STR_94
 13595  003DB6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13596  003DB8  ECCD  F04E         	call	_printstrblock	;wreg free
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;selftest.c: 390:         timeDelayMs(500);
 13600  003DBC  0E01               	movlw	1
 13601  003DBE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13602  003DC0  0EF4               	movlw	244
 13603  003DC2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13604  003DC4  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13605  003DC8                     l19526:
 13606                           
 13607                           ;selftest.c: 392:   timeDelayMs(100);
 13608  003DC8  0E00               	movlw	0
 13609  003DCA  0100               	movlb	0	; () banked
 13610  003DCC  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13611  003DCE  0E64               	movlw	100
 13612  003DD0  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13613  003DD2  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;selftest.c: 393:   LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 13617  003DD6  84BA               	bsf	186,2,c	;volatile
 13618                           
 13619                           ; BSR set to: 0
 13620  003DD8  86BC               	bsf	188,3,c	;volatile
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;selftest.c: 394:   timeDelayMs(300);
 13624  003DDA  0E01               	movlw	1
 13625  003DDC  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13626  003DDE  0E2C               	movlw	44
 13627  003DE0  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13628  003DE2  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;selftest.c: 395:   if (!pressureSensorChk(0, 100)) {
 13632  003DE6  0E00               	movlw	0
 13633  003DE8  0101               	movlb	1	; () banked
 13634  003DEA  6F6D               	movwf	(pressureSensorChk@time+1)& (0+255),b
 13635  003DEC  0E64               	movlw	100
 13636  003DEE  6F6C               	movwf	pressureSensorChk@time& (0+255),b
 13637  003DF0  0E00               	movlw	0
 13638  003DF2  EC46  F01F         	call	_pressureSensorChk
 13639  003DF6  0900               	iorlw	0
 13640  003DF8  A4D8               	btfss	status,2,c
 13641  003DFA  D016               	goto	l19544
 13642                           
 13643                           ; BSR set to: 1
 13644                           ;selftest.c: 396:     initOk=0;
 13645  003DFC  0E00               	movlw	0
 13646  003DFE  0103               	movlb	3	; () banked
 13647  003E00  6F9E               	movwf	SelfTest@initOk& (0+255),b
 13648                           
 13649                           ; BSR set to: 3
 13650                           ;selftest.c: 397:  setCursor(0, 0);
 13651  003E02  0E00               	movlw	0
 13652  003E04  0100               	movlb	0	; () banked
 13653  003E06  6F92               	movwf	setCursor@row& (0+255),b
 13654  003E08  0E00               	movlw	0
 13655  003E0A  ECD4  F04A         	call	_setCursor
 13656                           
 13657                           ;selftest.c: 398:     printstrblock("SV1 Valve error ");
 13658  003E0E  0E39               	movlw	low STR_103
 13659  003E10  0100               	movlb	0	; () banked
 13660  003E12  6F8F               	movwf	printstrblock@c& (0+255),b
 13661  003E14  0EFE               	movlw	high STR_103
 13662  003E16  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 13663  003E18  ECCD  F04E         	call	_printstrblock	;wreg free
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;selftest.c: 399:     timeDelayMs(500);
 13667  003E1C  0E01               	movlw	1
 13668  003E1E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 13669  003E20  0EF4               	movlw	244
 13670  003E22  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 13671  003E24  EC0A  F04C         	call	_timeDelayMs	;wreg free
 13672  003E28                     l19544:
 13673                           
 13674                           ;selftest.c: 403:   printf ("CHK FLOW\n");
 13675  003E28  0E76               	movlw	low STR_104
 13676  003E2A  0101               	movlb	1	; () banked
 13677  003E2C  6F46               	movwf	printf@fmt& (0+255),b
 13678  003E2E  0EFF               	movlw	high STR_104
 13679  003E30  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13680  003E32  EC68  F04E         	call	_printf	;wreg free
 13681                           
 13682                           ; BSR set to: 2
 13683                           ;selftest.c: 404:   tstamp = timeGet();
 13684  003E36  ECFA  F050         	call	_timeGet	;wreg free
 13685  003E3A  0060  F24C  F396   	movff	?_timeGet,SelfTest@tstamp
 13686  003E40  0060  F250  F397   	movff	?_timeGet+1,SelfTest@tstamp+1
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;selftest.c: 407:   initOk &= flowChk(FCHK_LOW);
 13690  003E46  0E00               	movlw	0
 13691  003E48  EC87  F028         	call	_flowChk
 13692  003E4C  0102               	movlb	2	; () banked
 13693  003E4E  6FFA               	movwf	??_SelfTest& (0+255),b
 13694  003E50  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13695  003E52  51FA               	movf	??_SelfTest& (0+255),w,b
 13696  003E54  0103               	movlb	3	; () banked
 13697  003E56  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13698                           
 13699                           ; BSR set to: 3
 13700                           ;selftest.c: 408:   initOk &= flowChk(FCHK_MED);
 13701  003E58  0E01               	movlw	1
 13702  003E5A  EC87  F028         	call	_flowChk
 13703  003E5E  0102               	movlb	2	; () banked
 13704  003E60  6FFA               	movwf	??_SelfTest& (0+255),b
 13705  003E62  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13706  003E64  51FA               	movf	??_SelfTest& (0+255),w,b
 13707  003E66  0103               	movlb	3	; () banked
 13708  003E68  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13709                           
 13710                           ; BSR set to: 3
 13711                           ;selftest.c: 409:   initOk &= flowChk(FCHK_HIGH);
 13712  003E6A  0E02               	movlw	2
 13713  003E6C  EC87  F028         	call	_flowChk
 13714  003E70  0102               	movlb	2	; () banked
 13715  003E72  6FFA               	movwf	??_SelfTest& (0+255),b
 13716  003E74  6BFB               	clrf	(??_SelfTest+1)& (0+255),b
 13717  003E76  51FA               	movf	??_SelfTest& (0+255),w,b
 13718  003E78  0103               	movlb	3	; () banked
 13719  003E7A  179E               	andwf	SelfTest@initOk& (0+255),f,b
 13720  003E7C                     l19554:
 13721                           
 13722                           ;selftest.c: 412:   while (keyPeek() != -1)
 13723  003E7C  EC15  F046         	call	_keyPeek	;wreg free
 13724  003E80  0AFF               	xorlw	255
 13725  003E82  A4D8               	btfss	status,2,c
 13726  003E84  D7FB               	goto	l19554
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;selftest.c: 414:   keyReadInit();
 13730  003E86  ECC9  F050         	call	_keyReadInit	;wreg free
 13731  003E8A  D5D0               	goto	u20060
 13732  003E8C                     __end_of_SelfTest:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _pressureSensorChk *****************
 13736 ;; Defined at:
 13737 ;;		line 27 in file "selftest.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  offsetCal       1    wreg     _Bool 
 13740 ;;  time            2  108[BANK1 ] unsigned short 
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;  offsetCal       1  121[BANK1 ] _Bool 
 13743 ;;  aPValMean       4  137[BANK1 ] long 
 13744 ;;  mPValMean       4  133[BANK1 ] long 
 13745 ;;  aPVal           2  143[BANK1 ] short 
 13746 ;;  mPVal           2  141[BANK1 ] short 
 13747 ;;  aPValMin        2  131[BANK1 ] short 
 13748 ;;  aPValMax        2  129[BANK1 ] short 
 13749 ;;  mPValMin        2  127[BANK1 ] short 
 13750 ;;  mPValMax        2  125[BANK1 ] short 
 13751 ;;  tstamp          2  122[BANK1 ] unsigned short 
 13752 ;;  chkResult       1  124[BANK1 ] _Bool 
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      _Bool 
 13755 ;; Registers used:
 13756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13757 ;; Tracked objects:
 13758 ;;		On entry : 3F/1
 13759 ;;		On exit  : 3F/1
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13762 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13763 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;Total ram usage:       37 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:   27
 13769 ;; This function calls:
 13770 ;;		___lmul
 13771 ;;		_aCaptGetResult
 13772 ;;		_aCaptRstFlt
 13773 ;;		_aCaptureOffSet
 13774 ;;		_printf
 13775 ;;		_printstrblock
 13776 ;;		_setCursor
 13777 ;;		_sprintf
 13778 ;;		_timeDelayMs
 13779 ;;		_timeElapsedR
 13780 ;;		_timeGet
 13781 ;; This function is called by:
 13782 ;;		_SelfTest
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text23
 13787  003E8C                     __ptext23:
 13788                           	opt callstack 0
 13789  003E8C                     _pressureSensorChk:
 13790                           	opt callstack 2
 13791                           
 13792                           ; BSR set to: 3
 13793                           ;incstack = 0
 13794                           ;pressureSensorChk@offsetCal stored from wreg
 13795  003E8C  6F79               	movwf	pressureSensorChk@offsetCal& (0+255),b
 13796                           
 13797                           ;selftest.c: 28:     int16_t mPVal, mPValMax, mPValMin;;selftest.c: 29:     int32_t mPVa
      +                          lMean, aPValMean;;selftest.c: 30:     int16_t aPVal, aPValMax, aPValMin;;selftest.c: 31:
      +                               time_t tstamp;;selftest.c: 32:     _Bool chkResult;;selftest.c: 34:     chkResult =
      +                           1;
 13798  003E8E  0E01               	movlw	1
 13799  003E90  0101               	movlb	1	; () banked
 13800  003E92  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 13801                           
 13802                           ;selftest.c: 37:     mPValMin = 4096;
 13803  003E94  0E10               	movlw	16
 13804  003E96  6F80               	movwf	(pressureSensorChk@mPValMin+1)& (0+255),b
 13805  003E98  0E00               	movlw	0
 13806  003E9A  6F7F               	movwf	pressureSensorChk@mPValMin& (0+255),b
 13807                           
 13808                           ;selftest.c: 38:     aPValMin = 4096;
 13809  003E9C  0E10               	movlw	16
 13810  003E9E  6F84               	movwf	(pressureSensorChk@aPValMin+1)& (0+255),b
 13811  003EA0  0E00               	movlw	0
 13812  003EA2  6F83               	movwf	pressureSensorChk@aPValMin& (0+255),b
 13813                           
 13814                           ;selftest.c: 39:     mPValMax = 0;
 13815  003EA4  0E00               	movlw	0
 13816  003EA6  6F7E               	movwf	(pressureSensorChk@mPValMax+1)& (0+255),b
 13817  003EA8  0E00               	movlw	0
 13818  003EAA  6F7D               	movwf	pressureSensorChk@mPValMax& (0+255),b
 13819                           
 13820                           ;selftest.c: 40:     aPValMax = 0;
 13821  003EAC  0E00               	movlw	0
 13822  003EAE  6F82               	movwf	(pressureSensorChk@aPValMax+1)& (0+255),b
 13823  003EB0  0E00               	movlw	0
 13824  003EB2  6F81               	movwf	pressureSensorChk@aPValMax& (0+255),b
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;selftest.c: 41:     tstamp = timeGet();
 13828  003EB4  ECFA  F050         	call	_timeGet	;wreg free
 13829  003EB8  0060  F24C  F17A   	movff	?_timeGet,pressureSensorChk@tstamp
 13830  003EBE  0060  F250  F17B   	movff	?_timeGet+1,pressureSensorChk@tstamp+1
 13831                           
 13832                           ;selftest.c: 43:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 13833  003EC4  D131               	goto	l18874
 13834  003EC6                     l18836:
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;selftest.c: 44:         if (aCaptGetResult(MainPSensor, &mPVal)) {
 13838  003EC6  0E8D               	movlw	low pressureSensorChk@mPVal
 13839  003EC8  0101               	movlb	1	; () banked
 13840  003ECA  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 13841  003ECC  0E01               	movlw	high pressureSensorChk@mPVal
 13842  003ECE  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 13843  003ED0  0E00               	movlw	0
 13844  003ED2  EC83  F031         	call	_aCaptGetResult
 13845  003ED6  0900               	iorlw	0
 13846  003ED8  B4D8               	btfsc	status,2,c
 13847  003EDA  D07D               	goto	l2770
 13848                           
 13849                           ;selftest.c: 45:             if (mPVal > mPValMax) {
 13850  003EDC  0101               	movlb	1	; () banked
 13851  003EDE  518D               	movf	pressureSensorChk@mPVal& (0+255),w,b
 13852  003EE0  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 13853  003EE2  517E               	movf	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 13854  003EE4  0A80               	xorlw	128
 13855  003EE6  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13856  003EE8  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 13857  003EEA  0A80               	xorlw	128
 13858  003EEC  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 13859  003EEE  B0D8               	btfsc	status,0,c
 13860  003EF0  D006               	goto	l18842
 13861                           
 13862                           ; BSR set to: 1
 13863                           ;selftest.c: 46:                 mPValMax = mPVal;
 13864  003EF2  0060  F634  F17D   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMax
 13865  003EF8  0060  F638  F17E   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMax+1
 13866  003EFE                     l18842:
 13867                           
 13868                           ; BSR set to: 1
 13869                           ;selftest.c: 48:             if (mPVal < mPValMin) {
 13870  003EFE  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 13871  003F00  5D8D               	subwf	pressureSensorChk@mPVal& (0+255),w,b
 13872  003F02  518E               	movf	(pressureSensorChk@mPVal+1)& (0+255),w,b
 13873  003F04  0A80               	xorlw	128
 13874  003F06  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13875  003F08  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 13876  003F0A  0A80               	xorlw	128
 13877  003F0C  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 13878  003F0E  B0D8               	btfsc	status,0,c
 13879  003F10  D006               	goto	l18846
 13880                           
 13881                           ; BSR set to: 1
 13882                           ;selftest.c: 49:                 mPValMin = mPVal;
 13883  003F12  0060  F634  F17F   	movff	pressureSensorChk@mPVal,pressureSensorChk@mPValMin
 13884  003F18  0060  F638  F180   	movff	pressureSensorChk@mPVal+1,pressureSensorChk@mPValMin+1
 13885  003F1E                     l18846:
 13886                           
 13887                           ; BSR set to: 1
 13888                           ;selftest.c: 51:             mPValMean = (31*mPValMean + 32*mPVal)>>5;
 13889  003F1E  0E05               	movlw	5
 13890  003F20  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 13891  003F22  0060  F634  F16F   	movff	pressureSensorChk@mPVal,??_pressureSensorChk+1
 13892  003F28  0060  F638  F170   	movff	pressureSensorChk@mPVal+1,??_pressureSensorChk+2
 13893  003F2E  0E05               	movlw	5
 13894  003F30                     u19475:
 13895  003F30  90D8               	bcf	status,0,c
 13896  003F32  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 13897  003F34  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 13898  003F36  2EE8               	decfsz	wreg,f,c
 13899  003F38  D7FB               	goto	u19475
 13900  003F3A  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 13901  003F40  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 13902  003F46  0E00               	movlw	0
 13903  003F48  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 13904  003F4A  0EFF               	movlw	255
 13905  003F4C  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 13906  003F4E  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 13907  003F50  0060  F614  F08B   	movff	pressureSensorChk@mPValMean,___lmul@multiplier
 13908  003F56  0060  F618  F08C   	movff	pressureSensorChk@mPValMean+1,___lmul@multiplier+1
 13909  003F5C  0060  F61C  F08D   	movff	pressureSensorChk@mPValMean+2,___lmul@multiplier+2
 13910  003F62  0060  F620  F08E   	movff	pressureSensorChk@mPValMean+3,___lmul@multiplier+3
 13911  003F68  0E1F               	movlw	31
 13912  003F6A  0100               	movlb	0	; () banked
 13913  003F6C  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 13914  003F6E  0E00               	movlw	0
 13915  003F70  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13916  003F72  0E00               	movlw	0
 13917  003F74  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13918  003F76  0E00               	movlw	0
 13919  003F78  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13920  003F7A  EC45  F046         	call	___lmul	;wreg free
 13921  003F7E  0101               	movlb	1	; () banked
 13922  003F80  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 13923  003F82  0100               	movlb	0	; () banked
 13924  003F84  258B               	addwf	?___lmul& (0+255),w,b
 13925  003F86  0101               	movlb	1	; () banked
 13926  003F88  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 13927  003F8A  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 13928  003F8C  0100               	movlb	0	; () banked
 13929  003F8E  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 13930  003F90  0101               	movlb	1	; () banked
 13931  003F92  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 13932  003F94  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 13933  003F96  0100               	movlb	0	; () banked
 13934  003F98  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 13935  003F9A  0101               	movlb	1	; () banked
 13936  003F9C  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 13937  003F9E  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 13938  003FA0  0100               	movlb	0	; () banked
 13939  003FA2  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 13940  003FA4  0101               	movlb	1	; () banked
 13941  003FA6  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 13942  003FA8                     u19485:
 13943  003FA8  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 13944  003FAA  D001               	goto	u19486
 13945  003FAC  D007               	goto	u19487
 13946  003FAE                     u19486:
 13947  003FAE  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 13948  003FB0  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 13949  003FB2  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 13950  003FB4  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 13951  003FB6  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 13952  003FB8  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 13953  003FBA  D7F6               	goto	u19485
 13954  003FBC                     u19487:
 13955  003FBC  0060  F5D4  F185   	movff	??_pressureSensorChk+7,pressureSensorChk@mPValMean
 13956  003FC2  0060  F5D8  F186   	movff	??_pressureSensorChk+8,pressureSensorChk@mPValMean+1
 13957  003FC8  0060  F5DC  F187   	movff	??_pressureSensorChk+9,pressureSensorChk@mPValMean+2
 13958  003FCE  0060  F5E0  F188   	movff	??_pressureSensorChk+10,pressureSensorChk@mPValMean+3
 13959                           
 13960                           ;selftest.c: 52:         } else {
 13961  003FD4  D011               	goto	l18852
 13962  003FD6                     l2770:
 13963                           
 13964                           ;selftest.c: 53:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",20);
 13965  003FD6  94BA               	bcf	186,2,c	;volatile
 13966  003FD8  96BC               	bcf	188,3,c	;volatile
 13967  003FDA  96BA               	bcf	186,3,c	;volatile
 13968  003FDC  0EB1               	movlw	low STR_28
 13969  003FDE  0101               	movlb	1	; () banked
 13970  003FE0  6F46               	movwf	printf@fmt& (0+255),b
 13971  003FE2  0EFF               	movlw	high STR_28
 13972  003FE4  6F47               	movwf	(printf@fmt+1)& (0+255),b
 13973  003FE6  0E00               	movlw	0
 13974  003FE8  6F49               	movwf	(?_printf+3)& (0+255),b
 13975  003FEA  0E14               	movlw	20
 13976  003FEC  6F48               	movwf	(?_printf+2)& (0+255),b
 13977  003FEE  EC68  F04E         	call	_printf	;wreg free
 13978                           
 13979                           ; BSR set to: 2
 13980                           ;selftest.c: 54:             chkResult = 0;
 13981  003FF2  0E00               	movlw	0
 13982  003FF4  0101               	movlb	1	; () banked
 13983  003FF6  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 13984  003FF8                     l18852:
 13985                           
 13986                           ;selftest.c: 57:         if (aCaptGetResult(VolPSensor, &aPVal)) {
 13987  003FF8  0E8F               	movlw	low pressureSensorChk@aPVal
 13988  003FFA  0101               	movlb	1	; () banked
 13989  003FFC  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 13990  003FFE  0E01               	movlw	high pressureSensorChk@aPVal
 13991  004000  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 13992  004002  0E01               	movlw	1
 13993  004004  EC83  F031         	call	_aCaptGetResult
 13994  004008  0900               	iorlw	0
 13995  00400A  B4D8               	btfsc	status,2,c
 13996  00400C  D07D               	goto	l18864
 13997                           
 13998                           ;selftest.c: 58:             if (aPVal > aPValMax) {
 13999  00400E  0101               	movlb	1	; () banked
 14000  004010  518F               	movf	pressureSensorChk@aPVal& (0+255),w,b
 14001  004012  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14002  004014  5182               	movf	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14003  004016  0A80               	xorlw	128
 14004  004018  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14005  00401A  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14006  00401C  0A80               	xorlw	128
 14007  00401E  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14008  004020  B0D8               	btfsc	status,0,c
 14009  004022  D006               	goto	l18858
 14010                           
 14011                           ; BSR set to: 1
 14012                           ;selftest.c: 59:                 aPValMax = aPVal;
 14013  004024  0060  F63C  F181   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMax
 14014  00402A  0060  F640  F182   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMax+1
 14015  004030                     l18858:
 14016                           
 14017                           ; BSR set to: 1
 14018                           ;selftest.c: 61:             if (aPVal < aPValMin) {
 14019  004030  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14020  004032  5D8F               	subwf	pressureSensorChk@aPVal& (0+255),w,b
 14021  004034  5190               	movf	(pressureSensorChk@aPVal+1)& (0+255),w,b
 14022  004036  0A80               	xorlw	128
 14023  004038  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14024  00403A  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14025  00403C  0A80               	xorlw	128
 14026  00403E  596E               	subwfb	??_pressureSensorChk& (0+255),w,b
 14027  004040  B0D8               	btfsc	status,0,c
 14028  004042  D006               	goto	l18862
 14029                           
 14030                           ; BSR set to: 1
 14031                           ;selftest.c: 62:                 aPValMin = aPVal;
 14032  004044  0060  F63C  F183   	movff	pressureSensorChk@aPVal,pressureSensorChk@aPValMin
 14033  00404A  0060  F640  F184   	movff	pressureSensorChk@aPVal+1,pressureSensorChk@aPValMin+1
 14034  004050                     l18862:
 14035                           
 14036                           ; BSR set to: 1
 14037                           ;selftest.c: 64:             aPValMean = (31*aPValMean + 32*aPVal)>>5;
 14038  004050  0E05               	movlw	5
 14039  004052  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14040  004054  0060  F63C  F16F   	movff	pressureSensorChk@aPVal,??_pressureSensorChk+1
 14041  00405A  0060  F640  F170   	movff	pressureSensorChk@aPVal+1,??_pressureSensorChk+2
 14042  004060  0E05               	movlw	5
 14043  004062                     u19525:
 14044  004062  90D8               	bcf	status,0,c
 14045  004064  376F               	rlcf	(??_pressureSensorChk+1)& (0+255),f,b
 14046  004066  3770               	rlcf	(??_pressureSensorChk+2)& (0+255),f,b
 14047  004068  2EE8               	decfsz	wreg,f,c
 14048  00406A  D7FB               	goto	u19525
 14049  00406C  0060  F5BC  F171   	movff	??_pressureSensorChk+1,??_pressureSensorChk+3
 14050  004072  0060  F5C0  F172   	movff	??_pressureSensorChk+2,??_pressureSensorChk+4
 14051  004078  0E00               	movlw	0
 14052  00407A  BF72               	btfsc	(??_pressureSensorChk+4)& (0+255),7,b
 14053  00407C  0EFF               	movlw	255
 14054  00407E  6F73               	movwf	(??_pressureSensorChk+5)& (0+255),b
 14055  004080  6F74               	movwf	(??_pressureSensorChk+6)& (0+255),b
 14056  004082  0060  F624  F08B   	movff	pressureSensorChk@aPValMean,___lmul@multiplier
 14057  004088  0060  F628  F08C   	movff	pressureSensorChk@aPValMean+1,___lmul@multiplier+1
 14058  00408E  0060  F62C  F08D   	movff	pressureSensorChk@aPValMean+2,___lmul@multiplier+2
 14059  004094  0060  F630  F08E   	movff	pressureSensorChk@aPValMean+3,___lmul@multiplier+3
 14060  00409A  0E1F               	movlw	31
 14061  00409C  0100               	movlb	0	; () banked
 14062  00409E  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 14063  0040A0  0E00               	movlw	0
 14064  0040A2  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14065  0040A4  0E00               	movlw	0
 14066  0040A6  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14067  0040A8  0E00               	movlw	0
 14068  0040AA  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14069  0040AC  EC45  F046         	call	___lmul	;wreg free
 14070  0040B0  0101               	movlb	1	; () banked
 14071  0040B2  5171               	movf	(??_pressureSensorChk+3)& (0+255),w,b
 14072  0040B4  0100               	movlb	0	; () banked
 14073  0040B6  258B               	addwf	?___lmul& (0+255),w,b
 14074  0040B8  0101               	movlb	1	; () banked
 14075  0040BA  6F75               	movwf	(??_pressureSensorChk+7)& (0+255),b
 14076  0040BC  5172               	movf	(??_pressureSensorChk+4)& (0+255),w,b
 14077  0040BE  0100               	movlb	0	; () banked
 14078  0040C0  218C               	addwfc	(?___lmul+1)& (0+255),w,b
 14079  0040C2  0101               	movlb	1	; () banked
 14080  0040C4  6F76               	movwf	(??_pressureSensorChk+8)& (0+255),b
 14081  0040C6  5173               	movf	(??_pressureSensorChk+5)& (0+255),w,b
 14082  0040C8  0100               	movlb	0	; () banked
 14083  0040CA  218D               	addwfc	(?___lmul+2)& (0+255),w,b
 14084  0040CC  0101               	movlb	1	; () banked
 14085  0040CE  6F77               	movwf	(??_pressureSensorChk+9)& (0+255),b
 14086  0040D0  5174               	movf	(??_pressureSensorChk+6)& (0+255),w,b
 14087  0040D2  0100               	movlb	0	; () banked
 14088  0040D4  218E               	addwfc	(?___lmul+3)& (0+255),w,b
 14089  0040D6  0101               	movlb	1	; () banked
 14090  0040D8  6F78               	movwf	(??_pressureSensorChk+10)& (0+255),b
 14091  0040DA                     u19535:
 14092  0040DA  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14093  0040DC  D001               	goto	u19536
 14094  0040DE  D007               	goto	u19537
 14095  0040E0                     u19536:
 14096  0040E0  3578               	rlcf	(??_pressureSensorChk+10)& (0+255),w,b
 14097  0040E2  3378               	rrcf	(??_pressureSensorChk+10)& (0+255),f,b
 14098  0040E4  3377               	rrcf	(??_pressureSensorChk+9)& (0+255),f,b
 14099  0040E6  3376               	rrcf	(??_pressureSensorChk+8)& (0+255),f,b
 14100  0040E8  3375               	rrcf	(??_pressureSensorChk+7)& (0+255),f,b
 14101  0040EA  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14102  0040EC  D7F6               	goto	u19535
 14103  0040EE                     u19537:
 14104  0040EE  0060  F5D4  F189   	movff	??_pressureSensorChk+7,pressureSensorChk@aPValMean
 14105  0040F4  0060  F5D8  F18A   	movff	??_pressureSensorChk+8,pressureSensorChk@aPValMean+1
 14106  0040FA  0060  F5DC  F18B   	movff	??_pressureSensorChk+9,pressureSensorChk@aPValMean+2
 14107  004100  0060  F5E0  F18C   	movff	??_pressureSensorChk+10,pressureSensorChk@aPValMean+3
 14108                           
 14109                           ;selftest.c: 65:         } else {
 14110  004106  D010               	goto	l18874
 14111  004108                     l18864:
 14112                           
 14113                           ;selftest.c: 66:             chkResult = 0;
 14114  004108  0E00               	movlw	0
 14115  00410A  0101               	movlb	1	; () banked
 14116  00410C  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14117                           
 14118                           ; BSR set to: 1
 14119                           ;selftest.c: 67:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pr
      +                          intf("Fatal %d",21);
 14120  00410E  94BA               	bcf	186,2,c	;volatile
 14121                           
 14122                           ; BSR set to: 1
 14123  004110  96BC               	bcf	188,3,c	;volatile
 14124                           
 14125                           ; BSR set to: 1
 14126  004112  96BA               	bcf	186,3,c	;volatile
 14127                           
 14128                           ; BSR set to: 1
 14129  004114  0EB1               	movlw	low STR_28
 14130  004116  6F46               	movwf	printf@fmt& (0+255),b
 14131  004118  0EFF               	movlw	high STR_28
 14132  00411A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14133  00411C  0E00               	movlw	0
 14134  00411E  6F49               	movwf	(?_printf+3)& (0+255),b
 14135  004120  0E15               	movlw	21
 14136  004122  6F48               	movwf	(?_printf+2)& (0+255),b
 14137  004124  EC68  F04E         	call	_printf	;wreg free
 14138  004128                     l18874:
 14139                           
 14140                           ;selftest.c: 43:     while (!timeElapsedR(&tstamp, ((time_t) time*1))) {
 14141  004128  0E7A               	movlw	low pressureSensorChk@tstamp
 14142  00412A  0100               	movlb	0	; () banked
 14143  00412C  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 14144  00412E  0E01               	movlw	high pressureSensorChk@tstamp
 14145  004130  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 14146  004132  0060  F5B0  F095   	movff	pressureSensorChk@time,timeElapsedR@duration
 14147  004138  0060  F5B4  F096   	movff	pressureSensorChk@time+1,timeElapsedR@duration+1
 14148  00413E  ECE5  F045         	call	_timeElapsedR	;wreg free
 14149  004142  0900               	iorlw	0
 14150  004144  B4D8               	btfsc	status,2,c
 14151  004146  D6BF               	goto	l18836
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;selftest.c: 72:     mPValMean = mPValMean>>5;
 14155  004148  0E05               	movlw	5
 14156  00414A  0101               	movlb	1	; () banked
 14157  00414C  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14158  00414E  0060  F614  F16F   	movff	pressureSensorChk@mPValMean,??_pressureSensorChk+1
 14159  004154  0060  F618  F170   	movff	pressureSensorChk@mPValMean+1,??_pressureSensorChk+2
 14160  00415A  0060  F61C  F171   	movff	pressureSensorChk@mPValMean+2,??_pressureSensorChk+3
 14161  004160  0060  F620  F172   	movff	pressureSensorChk@mPValMean+3,??_pressureSensorChk+4
 14162  004166                     u19555:
 14163  004166  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14164  004168  D001               	goto	u19556
 14165  00416A  D007               	goto	u19557
 14166  00416C                     u19556:
 14167  00416C  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14168  00416E  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14169  004170  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14170  004172  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14171  004174  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14172  004176  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14173  004178  D7F6               	goto	u19555
 14174  00417A                     u19557:
 14175  00417A  0060  F5BC  F185   	movff	??_pressureSensorChk+1,pressureSensorChk@mPValMean
 14176  004180  0060  F5C0  F186   	movff	??_pressureSensorChk+2,pressureSensorChk@mPValMean+1
 14177  004186  0060  F5C4  F187   	movff	??_pressureSensorChk+3,pressureSensorChk@mPValMean+2
 14178  00418C  0060  F5C8  F188   	movff	??_pressureSensorChk+4,pressureSensorChk@mPValMean+3
 14179                           
 14180                           ;selftest.c: 73:     aPValMean = aPValMean>>5;
 14181  004192  0E05               	movlw	5
 14182  004194  0101               	movlb	1	; () banked
 14183  004196  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14184  004198  0060  F624  F16F   	movff	pressureSensorChk@aPValMean,??_pressureSensorChk+1
 14185  00419E  0060  F628  F170   	movff	pressureSensorChk@aPValMean+1,??_pressureSensorChk+2
 14186  0041A4  0060  F62C  F171   	movff	pressureSensorChk@aPValMean+2,??_pressureSensorChk+3
 14187  0041AA  0060  F630  F172   	movff	pressureSensorChk@aPValMean+3,??_pressureSensorChk+4
 14188  0041B0                     u19565:
 14189  0041B0  676E               	tstfsz	??_pressureSensorChk& (0+255),b
 14190  0041B2  D001               	goto	u19566
 14191  0041B4  D007               	goto	u19567
 14192  0041B6                     u19566:
 14193  0041B6  3572               	rlcf	(??_pressureSensorChk+4)& (0+255),w,b
 14194  0041B8  3372               	rrcf	(??_pressureSensorChk+4)& (0+255),f,b
 14195  0041BA  3371               	rrcf	(??_pressureSensorChk+3)& (0+255),f,b
 14196  0041BC  3370               	rrcf	(??_pressureSensorChk+2)& (0+255),f,b
 14197  0041BE  336F               	rrcf	(??_pressureSensorChk+1)& (0+255),f,b
 14198  0041C0  2F6E               	decfsz	??_pressureSensorChk& (0+255),f,b
 14199  0041C2  D7F6               	goto	u19565
 14200  0041C4                     u19567:
 14201  0041C4  0060  F5BC  F189   	movff	??_pressureSensorChk+1,pressureSensorChk@aPValMean
 14202  0041CA  0060  F5C0  F18A   	movff	??_pressureSensorChk+2,pressureSensorChk@aPValMean+1
 14203  0041D0  0060  F5C4  F18B   	movff	??_pressureSensorChk+3,pressureSensorChk@aPValMean+2
 14204  0041D6  0060  F5C8  F18C   	movff	??_pressureSensorChk+4,pressureSensorChk@aPValMean+3
 14205                           
 14206                           ;selftest.c: 74:     sprintf(lcdTopRow, "MS: % 3d AS: % 3d ", mPValMean, aPValMean);
 14207  0041DC  0EA3               	movlw	low _lcdTopRow
 14208  0041DE  0101               	movlb	1	; () banked
 14209  0041E0  6F46               	movwf	sprintf@s& (0+255),b
 14210  0041E2  0E02               	movlw	high _lcdTopRow
 14211  0041E4  6F47               	movwf	(sprintf@s+1)& (0+255),b
 14212  0041E6  0E2F               	movlw	low STR_64
 14213  0041E8  6F48               	movwf	sprintf@fmt& (0+255),b
 14214  0041EA  0EFD               	movlw	high STR_64
 14215  0041EC  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 14216  0041EE  0060  F614  F14A   	movff	pressureSensorChk@mPValMean,?_sprintf+4
 14217  0041F4  0060  F618  F14B   	movff	pressureSensorChk@mPValMean+1,?_sprintf+5
 14218  0041FA  0060  F61C  F14C   	movff	pressureSensorChk@mPValMean+2,?_sprintf+6
 14219  004200  0060  F620  F14D   	movff	pressureSensorChk@mPValMean+3,?_sprintf+7
 14220  004206  0060  F624  F14E   	movff	pressureSensorChk@aPValMean,?_sprintf+8
 14221  00420C  0060  F628  F14F   	movff	pressureSensorChk@aPValMean+1,?_sprintf+9
 14222  004212  0060  F62C  F150   	movff	pressureSensorChk@aPValMean+2,?_sprintf+10
 14223  004218  0060  F630  F151   	movff	pressureSensorChk@aPValMean+3,?_sprintf+11
 14224  00421E  EC58  F047         	call	_sprintf	;wreg free
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;selftest.c: 75:     printf ("MAIN PRESSURE. Min %d Max %d MEAN %d\n", mPValMin, mPValMa
      +                          x, mPValMean);
 14228  004222  0E9E               	movlw	low STR_65
 14229  004224  6F46               	movwf	printf@fmt& (0+255),b
 14230  004226  0EFB               	movlw	high STR_65
 14231  004228  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14232  00422A  0060  F5FC  F148   	movff	pressureSensorChk@mPValMin,?_printf+2
 14233  004230  0060  F600  F149   	movff	pressureSensorChk@mPValMin+1,?_printf+3
 14234  004236  0060  F5F4  F14A   	movff	pressureSensorChk@mPValMax,?_printf+4
 14235  00423C  0060  F5F8  F14B   	movff	pressureSensorChk@mPValMax+1,?_printf+5
 14236  004242  0060  F614  F14C   	movff	pressureSensorChk@mPValMean,?_printf+6
 14237  004248  0060  F618  F14D   	movff	pressureSensorChk@mPValMean+1,?_printf+7
 14238  00424E  0060  F61C  F14E   	movff	pressureSensorChk@mPValMean+2,?_printf+8
 14239  004254  0060  F620  F14F   	movff	pressureSensorChk@mPValMean+3,?_printf+9
 14240  00425A  EC68  F04E         	call	_printf	;wreg free
 14241                           
 14242                           ; BSR set to: 2
 14243                           ;selftest.c: 76:     printf ("AUX PRESSURE. Min %d Max %d MEAN %d\n", aPValMin, aPValMax
      +                          , aPValMean);
 14244  00425E  0EC4               	movlw	low STR_66
 14245  004260  0101               	movlb	1	; () banked
 14246  004262  6F46               	movwf	printf@fmt& (0+255),b
 14247  004264  0EFB               	movlw	high STR_66
 14248  004266  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14249  004268  0060  F60C  F148   	movff	pressureSensorChk@aPValMin,?_printf+2
 14250  00426E  0060  F610  F149   	movff	pressureSensorChk@aPValMin+1,?_printf+3
 14251  004274  0060  F604  F14A   	movff	pressureSensorChk@aPValMax,?_printf+4
 14252  00427A  0060  F608  F14B   	movff	pressureSensorChk@aPValMax+1,?_printf+5
 14253  004280  0060  F624  F14C   	movff	pressureSensorChk@aPValMean,?_printf+6
 14254  004286  0060  F628  F14D   	movff	pressureSensorChk@aPValMean+1,?_printf+7
 14255  00428C  0060  F62C  F14E   	movff	pressureSensorChk@aPValMean+2,?_printf+8
 14256  004292  0060  F630  F14F   	movff	pressureSensorChk@aPValMean+3,?_printf+9
 14257  004298  EC68  F04E         	call	_printf	;wreg free
 14258                           
 14259                           ; BSR set to: 2
 14260                           ;selftest.c: 77:     setCursor(0, 0);
 14261  00429C  0E00               	movlw	0
 14262  00429E  0100               	movlb	0	; () banked
 14263  0042A0  6F92               	movwf	setCursor@row& (0+255),b
 14264  0042A2  0E00               	movlw	0
 14265  0042A4  ECD4  F04A         	call	_setCursor
 14266                           
 14267                           ;selftest.c: 78:     printstrblock(lcdTopRow);
 14268  0042A8  0EA3               	movlw	low _lcdTopRow
 14269  0042AA  0100               	movlb	0	; () banked
 14270  0042AC  6F8F               	movwf	printstrblock@c& (0+255),b
 14271  0042AE  0E02               	movlw	high _lcdTopRow
 14272  0042B0  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 14273  0042B2  ECCD  F04E         	call	_printstrblock	;wreg free
 14274                           
 14275                           ; BSR set to: 0
 14276                           ;selftest.c: 79:     timeDelayMs(1000);
 14277  0042B6  0E03               	movlw	3
 14278  0042B8  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14279  0042BA  0EE8               	movlw	232
 14280  0042BC  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14281  0042BE  EC0A  F04C         	call	_timeDelayMs	;wreg free
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;selftest.c: 82:     if (offsetCal) {
 14285  0042C2  0101               	movlb	1	; () banked
 14286  0042C4  5179               	movf	pressureSensorChk@offsetCal& (0+255),w,b
 14287  0042C6  B4D8               	btfsc	status,2,c
 14288  0042C8  D07D               	goto	l18914
 14289                           
 14290                           ; BSR set to: 1
 14291                           ;selftest.c: 83:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 16
      +                          ) || (mPValMean > 350) || (mPValMean < 40) || (aPValMean < 600) || (aPValMean > 1030)) {
 14292  0042CA  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14293  0042CC  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14294  0042CE  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14295  0042D0  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14296  0042D2  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14297  0042D4  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14298  0042D6  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14299  0042D8  D006               	goto	u19580
 14300  0042DA  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14301  0042DC  E13D               	bnz	l18904
 14302  0042DE  0E11               	movlw	17
 14303  0042E0  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14304  0042E2  B0D8               	btfsc	status,0,c
 14305  0042E4  D039               	goto	u19630
 14306  0042E6                     u19580:
 14307                           
 14308                           ; BSR set to: 1
 14309  0042E6  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14310  0042E8  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14311  0042EA  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14312  0042EC  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14313  0042EE  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14314  0042F0  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14315  0042F2  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14316  0042F4  D006               	goto	u19590
 14317  0042F6  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14318  0042F8  E12F               	bnz	l18904
 14319  0042FA  0E11               	movlw	17
 14320  0042FC  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14321  0042FE  B0D8               	btfsc	status,0,c
 14322  004300  D02B               	goto	u19630
 14323  004302                     u19590:
 14324                           
 14325                           ; BSR set to: 1
 14326  004302  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14327  004304  D009               	goto	u19600
 14328  004306  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14329  004308  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14330  00430A  E126               	bnz	l18904
 14331  00430C  0E5F               	movlw	95
 14332  00430E  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14333  004310  0E01               	movlw	1
 14334  004312  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14335  004314  B0D8               	btfsc	status,0,c
 14336  004316  D020               	goto	u19630
 14337  004318                     u19600:
 14338                           
 14339                           ; BSR set to: 1
 14340  004318  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14341  00431A  D01E               	goto	u19630
 14342  00431C  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14343  00431E  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14344  004320  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14345  004322  E104               	bnz	u19610
 14346  004324  0E28               	movlw	40
 14347  004326  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14348  004328  A0D8               	btfss	status,0,c
 14349  00432A  D016               	goto	u19630
 14350  00432C                     u19610:
 14351                           
 14352                           ; BSR set to: 1
 14353  00432C  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14354  00432E  D014               	goto	u19630
 14355  004330  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14356  004332  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14357  004334  E106               	bnz	u19620
 14358  004336  0E58               	movlw	88
 14359  004338  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14360  00433A  0E02               	movlw	2
 14361  00433C  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14362  00433E  A0D8               	btfss	status,0,c
 14363  004340  D00B               	goto	u19630
 14364  004342                     u19620:
 14365                           
 14366                           ; BSR set to: 1
 14367  004342  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14368  004344  D019               	goto	l18910
 14369  004346  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14370  004348  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14371  00434A  E106               	bnz	u19630
 14372  00434C  0E07               	movlw	7
 14373  00434E  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14374  004350  0E04               	movlw	4
 14375  004352  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14376  004354  A0D8               	btfss	status,0,c
 14377  004356  D010               	goto	l18910
 14378  004358                     u19630:
 14379  004358                     l18904:
 14380                           
 14381                           ; BSR set to: 1
 14382                           ;selftest.c: 85:             setCursor(0, 0);
 14383  004358  0E00               	movlw	0
 14384  00435A  0100               	movlb	0	; () banked
 14385  00435C  6F92               	movwf	setCursor@row& (0+255),b
 14386  00435E  0E00               	movlw	0
 14387  004360  ECD4  F04A         	call	_setCursor
 14388                           
 14389                           ;selftest.c: 86:             chkResult = 0;
 14390  004364  0E00               	movlw	0
 14391  004366  0101               	movlb	1	; () banked
 14392  004368  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14393                           
 14394                           ; BSR set to: 1
 14395                           ;selftest.c: 87:             printf ("PRESSURE CALIBRATION ERROR\n");
 14396  00436A  0E2E               	movlw	low STR_67
 14397  00436C  6F46               	movwf	printf@fmt& (0+255),b
 14398  00436E  0EFC               	movlw	high STR_67
 14399  004370  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14400  004372  EC68  F04E         	call	_printf	;wreg free
 14401                           
 14402                           ;selftest.c: 88:         } else {
 14403  004376  D077               	goto	l18930
 14404  004378                     l18910:
 14405                           
 14406                           ; BSR set to: 1
 14407                           ;selftest.c: 90:             aCaptureOffSet(MainPSensor, mPValMean);
 14408  004378  0060  F614  F160   	movff	pressureSensorChk@mPValMean,aCaptureOffSet@offVal
 14409  00437E  0060  F618  F161   	movff	pressureSensorChk@mPValMean+1,aCaptureOffSet@offVal+1
 14410  004384  0E00               	movlw	0
 14411  004386  ECFC  F048         	call	_aCaptureOffSet
 14412                           
 14413                           ;selftest.c: 91:             aCaptureOffSet(VolPSensor, aPValMean);
 14414  00438A  0060  F624  F160   	movff	pressureSensorChk@aPValMean,aCaptureOffSet@offVal
 14415  004390  0060  F628  F161   	movff	pressureSensorChk@aPValMean+1,aCaptureOffSet@offVal+1
 14416  004396  0E01               	movlw	1
 14417  004398  ECFC  F048         	call	_aCaptureOffSet
 14418                           
 14419                           ;selftest.c: 93:             aCaptRstFlt(Flt0PSensor);
 14420  00439C  0E03               	movlw	3
 14421  00439E  EC6C  F03B         	call	_aCaptRstFlt
 14422                           
 14423                           ;selftest.c: 94:             aCaptRstFlt(Flt1PSensor);
 14424  0043A2  0E04               	movlw	4
 14425  0043A4  EC6C  F03B         	call	_aCaptRstFlt
 14426                           
 14427                           ;selftest.c: 95:             aCaptRstFlt(Flt2PSensor);
 14428  0043A8  0E05               	movlw	5
 14429  0043AA  EC6C  F03B         	call	_aCaptRstFlt
 14430                           
 14431                           ;selftest.c: 96:             aCaptRstFlt(Flt3PSensor);
 14432  0043AE  0E06               	movlw	6
 14433  0043B0  EC6C  F03B         	call	_aCaptRstFlt
 14434                           
 14435                           ; BSR set to: 57
 14436                           ;selftest.c: 97:             timeDelayMs(50);
 14437  0043B4  0E00               	movlw	0
 14438  0043B6  0100               	movlb	0	; () banked
 14439  0043B8  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 14440  0043BA  0E32               	movlw	50
 14441  0043BC  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 14442  0043BE  EC0A  F04C         	call	_timeDelayMs	;wreg free
 14443  0043C2  D051               	goto	l18930
 14444  0043C4                     l18914:
 14445                           
 14446                           ; BSR set to: 1
 14447                           ;selftest.c: 100:         if (((aPValMax - aPValMin) > 16) || ((mPValMax - mPValMin) > 1
      +                          6) || (mPValMean > 10) || (mPValMean < -10) || (aPValMean < -10) || (aPValMean > 10)) {
 14448  0043C4  5183               	movf	pressureSensorChk@aPValMin& (0+255),w,b
 14449  0043C6  5D81               	subwf	pressureSensorChk@aPValMax& (0+255),w,b
 14450  0043C8  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14451  0043CA  5184               	movf	(pressureSensorChk@aPValMin+1)& (0+255),w,b
 14452  0043CC  5982               	subwfb	(pressureSensorChk@aPValMax+1)& (0+255),w,b
 14453  0043CE  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14454  0043D0  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14455  0043D2  D006               	goto	u19640
 14456  0043D4  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14457  0043D6  E13E               	bnz	l18926
 14458  0043D8  0E11               	movlw	17
 14459  0043DA  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14460  0043DC  B0D8               	btfsc	status,0,c
 14461  0043DE  D03A               	goto	u19690
 14462  0043E0                     u19640:
 14463                           
 14464                           ; BSR set to: 1
 14465  0043E0  517F               	movf	pressureSensorChk@mPValMin& (0+255),w,b
 14466  0043E2  5D7D               	subwf	pressureSensorChk@mPValMax& (0+255),w,b
 14467  0043E4  6F6E               	movwf	??_pressureSensorChk& (0+255),b
 14468  0043E6  5180               	movf	(pressureSensorChk@mPValMin+1)& (0+255),w,b
 14469  0043E8  597E               	subwfb	(pressureSensorChk@mPValMax+1)& (0+255),w,b
 14470  0043EA  6F6F               	movwf	(??_pressureSensorChk+1)& (0+255),b
 14471  0043EC  BF6F               	btfsc	(??_pressureSensorChk+1)& (0+255),7,b
 14472  0043EE  D006               	goto	u19650
 14473  0043F0  516F               	movf	(??_pressureSensorChk+1)& (0+255),w,b
 14474  0043F2  E130               	bnz	l18926
 14475  0043F4  0E11               	movlw	17
 14476  0043F6  5D6E               	subwf	??_pressureSensorChk& (0+255),w,b
 14477  0043F8  B0D8               	btfsc	status,0,c
 14478  0043FA  D02C               	goto	u19690
 14479  0043FC                     u19650:
 14480                           
 14481                           ; BSR set to: 1
 14482  0043FC  BF88               	btfsc	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14483  0043FE  D008               	goto	u19660
 14484  004400  5188               	movf	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14485  004402  1187               	iorwf	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14486  004404  1186               	iorwf	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14487  004406  E126               	bnz	l18926
 14488  004408  0E0B               	movlw	11
 14489  00440A  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14490  00440C  B0D8               	btfsc	status,0,c
 14491  00440E  D022               	goto	u19690
 14492  004410                     u19660:
 14493                           
 14494                           ; BSR set to: 1
 14495  004410  AF88               	btfss	(pressureSensorChk@mPValMean+3)& (0+255),7,b
 14496  004412  D00A               	goto	u19670
 14497  004414  0EF6               	movlw	246
 14498  004416  5D85               	subwf	pressureSensorChk@mPValMean& (0+255),w,b
 14499  004418  0EFF               	movlw	255
 14500  00441A  5986               	subwfb	(pressureSensorChk@mPValMean+1)& (0+255),w,b
 14501  00441C  0EFF               	movlw	255
 14502  00441E  5987               	subwfb	(pressureSensorChk@mPValMean+2)& (0+255),w,b
 14503  004420  0EFF               	movlw	255
 14504  004422  5988               	subwfb	(pressureSensorChk@mPValMean+3)& (0+255),w,b
 14505  004424  A0D8               	btfss	status,0,c
 14506  004426  D016               	goto	u19690
 14507  004428                     u19670:
 14508                           
 14509                           ; BSR set to: 1
 14510  004428  AF8C               	btfss	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14511  00442A  D00A               	goto	u19680
 14512  00442C  0EF6               	movlw	246
 14513  00442E  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14514  004430  0EFF               	movlw	255
 14515  004432  598A               	subwfb	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14516  004434  0EFF               	movlw	255
 14517  004436  598B               	subwfb	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14518  004438  0EFF               	movlw	255
 14519  00443A  598C               	subwfb	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14520  00443C  A0D8               	btfss	status,0,c
 14521  00443E  D00A               	goto	u19690
 14522  004440                     u19680:
 14523                           
 14524                           ; BSR set to: 1
 14525  004440  BF8C               	btfsc	(pressureSensorChk@aPValMean+3)& (0+255),7,b
 14526  004442  D011               	goto	l18930
 14527  004444  518C               	movf	(pressureSensorChk@aPValMean+3)& (0+255),w,b
 14528  004446  118B               	iorwf	(pressureSensorChk@aPValMean+2)& (0+255),w,b
 14529  004448  118A               	iorwf	(pressureSensorChk@aPValMean+1)& (0+255),w,b
 14530  00444A  E104               	bnz	u19690
 14531  00444C  0E0B               	movlw	11
 14532  00444E  5D89               	subwf	pressureSensorChk@aPValMean& (0+255),w,b
 14533  004450  A0D8               	btfss	status,0,c
 14534  004452  D009               	goto	l18930
 14535  004454                     u19690:
 14536  004454                     l18926:
 14537                           
 14538                           ; BSR set to: 1
 14539                           ;selftest.c: 101:             printf ("VALVE CHECK ERROR\n");
 14540  004454  0E1C               	movlw	low STR_68
 14541  004456  6F46               	movwf	printf@fmt& (0+255),b
 14542  004458  0EFD               	movlw	high STR_68
 14543  00445A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14544  00445C  EC68  F04E         	call	_printf	;wreg free
 14545                           
 14546                           ; BSR set to: 2
 14547                           ;selftest.c: 102:             chkResult = 0;
 14548  004460  0E00               	movlw	0
 14549  004462  0101               	movlb	1	; () banked
 14550  004464  6F7C               	movwf	pressureSensorChk@chkResult& (0+255),b
 14551  004466                     l18930:
 14552                           
 14553                           ;selftest.c: 105:     return chkResult;
 14554  004466  0101               	movlb	1	; () banked
 14555  004468  517C               	movf	pressureSensorChk@chkResult& (0+255),w,b
 14556                           
 14557                           ; BSR set to: 1
 14558  00446A  0012               	return		;funcret
 14559  00446C                     __end_of_pressureSensorChk:
 14560                           	opt callstack 0
 14561                           
 14562 ;; *************** function _aCaptureOffSet *****************
 14563 ;; Defined at:
 14564 ;;		line 116 in file "aCapture.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  sel             1    wreg     enum E16104
 14567 ;;  offVal          2   96[BANK1 ] short 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  sel             1   98[BANK1 ] enum E16104
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      void 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 3C/1
 14576 ;;		On exit  : 3C/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14579 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14580 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14582 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14583 ;;Total ram usage:        3 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:   26
 14586 ;; This function calls:
 14587 ;;		_printf
 14588 ;; This function is called by:
 14589 ;;		_pressureSensorChk
 14590 ;;		_SelfTest
 14591 ;; This function uses a non-reentrant model
 14592 ;;
 14593                           
 14594                           	psect	text24
 14595  0091F8                     __ptext24:
 14596                           	opt callstack 0
 14597  0091F8                     _aCaptureOffSet:
 14598                           	opt callstack 2
 14599                           
 14600                           ; BSR set to: 1
 14601                           ;incstack = 0
 14602                           ;aCaptureOffSet@sel stored from wreg
 14603  0091F8  0101               	movlb	1	; () banked
 14604  0091FA  6F62               	movwf	aCaptureOffSet@sel& (0+255),b
 14605                           
 14606                           ;aCapture.c: 117:     if (sel == MainPSensor) {
 14607  0091FC  0101               	movlb	1	; () banked
 14608  0091FE  5162               	movf	aCaptureOffSet@sel& (0+255),w,b
 14609  009200  A4D8               	btfss	status,2,c
 14610  009202  D007               	goto	l18004
 14611                           
 14612                           ; BSR set to: 1
 14613                           ;aCapture.c: 118:         mainPSensCal = offVal;
 14614  009204  0060  F580  F1F5   	movff	aCaptureOffSet@offVal,_mainPSensCal
 14615  00920A  0060  F584  F1F6   	movff	aCaptureOffSet@offVal+1,_mainPSensCal+1
 14616                           
 14617                           ;aCapture.c: 119:     } else if (sel == VolPSensor) {
 14618  009210  0012               	return	
 14619  009212                     l18004:
 14620                           
 14621                           ; BSR set to: 1
 14622  009212  0562               	decf	aCaptureOffSet@sel& (0+255),w,b
 14623  009214  A4D8               	btfss	status,2,c
 14624  009216  D007               	goto	l1955
 14625                           
 14626                           ; BSR set to: 1
 14627                           ;aCapture.c: 120:         auxPSensCal = offVal;
 14628  009218  0060  F580  F2E6   	movff	aCaptureOffSet@offVal,_auxPSensCal
 14629  00921E  0060  F584  F2E7   	movff	aCaptureOffSet@offVal+1,_auxPSensCal+1
 14630                           
 14631                           ;aCapture.c: 121:     } else {
 14632  009224  0012               	return	
 14633  009226                     l1955:
 14634                           
 14635                           ; BSR set to: 1
 14636                           ;aCapture.c: 122:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 14637  009226  94BA               	bcf	186,2,c	;volatile
 14638  009228  96BC               	bcf	188,3,c	;volatile
 14639  00922A  96BA               	bcf	186,3,c	;volatile
 14640                           
 14641                           ; BSR set to: 1
 14642  00922C  0EB1               	movlw	low STR_28
 14643  00922E  6F46               	movwf	printf@fmt& (0+255),b
 14644  009230  0EFF               	movlw	high STR_28
 14645  009232  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14646  009234  0E00               	movlw	0
 14647  009236  6F49               	movwf	(?_printf+3)& (0+255),b
 14648  009238  0E66               	movlw	102
 14649  00923A  6F48               	movwf	(?_printf+2)& (0+255),b
 14650  00923C  EC68  F04E         	call	_printf	;wreg free
 14651  009240  0012               	return		;funcret
 14652  009242                     __end_of_aCaptureOffSet:
 14653                           	opt callstack 0
 14654                           
 14655 ;; *************** function _aCaptRstFlt *****************
 14656 ;; Defined at:
 14657 ;;		line 136 in file "aCapture.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;  sel             1    wreg     enum E16104
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  sel             1  100[BANK1 ] enum E16104
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1    wreg      void 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14666 ;; Tracked objects:
 14667 ;;		On entry : 4/2
 14668 ;;		On exit  : 3F/39
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14673 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14674 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;Total ram usage:        5 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:   26
 14678 ;; This function calls:
 14679 ;;		_printf
 14680 ;; This function is called by:
 14681 ;;		_main
 14682 ;;		_pressureSensorChk
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text25
 14687  0076D8                     __ptext25:
 14688                           	opt callstack 0
 14689  0076D8                     _aCaptRstFlt:
 14690                           	opt callstack 4
 14691                           
 14692                           ;incstack = 0
 14693                           ;aCaptRstFlt@sel stored from wreg
 14694  0076D8  0101               	movlb	1	; () banked
 14695  0076DA  6F64               	movwf	aCaptRstFlt@sel& (0+255),b
 14696                           
 14697                           ;aCapture.c: 137:     switch (sel) {
 14698  0076DC  D076               	goto	l17992
 14699  0076DE                     l17982:
 14700                           
 14701                           ; BSR set to: 1
 14702                           ;aCapture.c: 140:             resultTbl[sel] = resultTbl[MainPSensor]<<9;
 14703  0076DE  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14704  0076E4  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14705  0076EA  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14706  0076F0  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14707  0076F6  0E09               	movlw	9
 14708  0076F8                     u18335:
 14709  0076F8  90D8               	bcf	status,0,c
 14710  0076FA  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14711  0076FC  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14712  0076FE  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14713  007700  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14714  007702  2EE8               	decfsz	wreg,f,c
 14715  007704  D7F9               	goto	u18335
 14716  007706  D03E               	goto	L18
 14717  007708                     l17984:
 14718                           
 14719                           ; BSR set to: 1
 14720                           ;aCapture.c: 143:             resultTbl[sel] = resultTbl[MainPSensor]<<6;
 14721  007708  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14722  00770E  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14723  007714  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14724  00771A  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14725  007720  0E06               	movlw	6
 14726  007722                     u18345:
 14727  007722  90D8               	bcf	status,0,c
 14728  007724  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14729  007726  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14730  007728  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14731  00772A  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14732  00772C  2EE8               	decfsz	wreg,f,c
 14733  00772E  D7F9               	goto	u18345
 14734  007730  D029               	goto	L18
 14735  007732                     l17986:
 14736                           
 14737                           ; BSR set to: 1
 14738                           ;aCapture.c: 146:             resultTbl[sel] = resultTbl[MainPSensor]<<4;
 14739  007732  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14740  007738  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14741  00773E  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14742  007744  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14743  00774A  0E04               	movlw	4
 14744  00774C                     u18355:
 14745  00774C  90D8               	bcf	status,0,c
 14746  00774E  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14747  007750  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14748  007752  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14749  007754  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14750  007756  2EE8               	decfsz	wreg,f,c
 14751  007758  D7F9               	goto	u18355
 14752  00775A  D014               	goto	L18
 14753  00775C                     l17988:
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;aCapture.c: 149:             resultTbl[sel] = resultTbl[MainPSensor]<<2;
 14757  00775C  0060  F9CC  F160   	movff	_resultTbl,??_aCaptRstFlt
 14758  007762  0060  F9D0  F161   	movff	_resultTbl+1,??_aCaptRstFlt+1
 14759  007768  0060  F9D4  F162   	movff	_resultTbl+2,??_aCaptRstFlt+2
 14760  00776E  0060  F9D8  F163   	movff	_resultTbl+3,??_aCaptRstFlt+3
 14761  007774  0E02               	movlw	2
 14762  007776                     u18365:
 14763  007776  90D8               	bcf	status,0,c
 14764  007778  3760               	rlcf	??_aCaptRstFlt& (0+255),f,b
 14765  00777A  3761               	rlcf	(??_aCaptRstFlt+1)& (0+255),f,b
 14766  00777C  3762               	rlcf	(??_aCaptRstFlt+2)& (0+255),f,b
 14767  00777E  3763               	rlcf	(??_aCaptRstFlt+3)& (0+255),f,b
 14768  007780  2EE8               	decfsz	wreg,f,c
 14769  007782  D7F9               	goto	u18365
 14770  007784                     L18:
 14771  007784  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 14772  007786  0D04               	mullw	4
 14773  007788  0E73               	movlw	low _resultTbl
 14774  00778A  24F3               	addwf	243,w,c
 14775  00778C  6ED9               	movwf	fsr2l,c
 14776  00778E  0E02               	movlw	high _resultTbl
 14777  007790  20F4               	addwfc	prodh,w,c
 14778  007792  6EDA               	movwf	fsr2h,c
 14779  007794  0060  F583  FFDE   	movff	??_aCaptRstFlt,postinc2
 14780  00779A  0060  F587  FFDE   	movff	??_aCaptRstFlt+1,postinc2
 14781  0077A0  0060  F58B  FFDE   	movff	??_aCaptRstFlt+2,postinc2
 14782  0077A6  0060  F58F  FFDE   	movff	??_aCaptRstFlt+3,postinc2
 14783                           
 14784                           ;aCapture.c: 150:             break;
 14785  0077AC  D024               	goto	l1969
 14786  0077AE                     l1973:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;aCapture.c: 153:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",103);
 14790  0077AE  94BA               	bcf	186,2,c	;volatile
 14791  0077B0  96BC               	bcf	188,3,c	;volatile
 14792  0077B2  96BA               	bcf	186,3,c	;volatile
 14793                           
 14794                           ; BSR set to: 1
 14795  0077B4  0EB1               	movlw	low STR_28
 14796  0077B6  6F46               	movwf	printf@fmt& (0+255),b
 14797  0077B8  0EFF               	movlw	high STR_28
 14798  0077BA  6F47               	movwf	(printf@fmt+1)& (0+255),b
 14799  0077BC  0E00               	movlw	0
 14800  0077BE  6F49               	movwf	(?_printf+3)& (0+255),b
 14801  0077C0  0E67               	movlw	103
 14802  0077C2  6F48               	movwf	(?_printf+2)& (0+255),b
 14803  0077C4  EC68  F04E         	call	_printf	;wreg free
 14804                           
 14805                           ;aCapture.c: 154:     }
 14806  0077C8  D016               	goto	l1969
 14807  0077CA                     l17992:
 14808  0077CA  0101               	movlb	1	; () banked
 14809  0077CC  5164               	movf	aCaptRstFlt@sel& (0+255),w,b
 14810  0077CE  6F60               	movwf	??_aCaptRstFlt& (0+255),b
 14811  0077D0  6B61               	clrf	(??_aCaptRstFlt+1)& (0+255),b
 14812                           
 14813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14814                           ; Switch size 1, requested type "simple"
 14815                           ; Number of cases is 1, Range of values is 0 to 0
 14816                           ; switch strategies available:
 14817                           ; Name         Instructions Cycles
 14818                           ; simple_byte            4     3 (average)
 14819                           ;	Chosen strategy is simple_byte
 14820  0077D2  5161               	movf	(??_aCaptRstFlt+1)& (0+255),w,b
 14821  0077D4  0A00               	xorlw	0	; case 0
 14822  0077D6  A4D8               	btfss	status,2,c
 14823  0077D8  D7EA               	goto	l1973
 14824                           
 14825                           ; BSR set to: 1
 14826                           ; Switch size 1, requested type "simple"
 14827                           ; Number of cases is 4, Range of values is 3 to 6
 14828                           ; switch strategies available:
 14829                           ; Name         Instructions Cycles
 14830                           ; simple_byte           13     7 (average)
 14831                           ;	Chosen strategy is simple_byte
 14832  0077DA  5160               	movf	??_aCaptRstFlt& (0+255),w,b
 14833  0077DC  0A03               	xorlw	3	; case 3
 14834  0077DE  B4D8               	btfsc	status,2,c
 14835  0077E0  D7BD               	goto	l17988
 14836  0077E2  0A07               	xorlw	7	; case 4
 14837  0077E4  B4D8               	btfsc	status,2,c
 14838  0077E6  D7A5               	goto	l17986
 14839  0077E8  0A01               	xorlw	1	; case 5
 14840  0077EA  B4D8               	btfsc	status,2,c
 14841  0077EC  D78D               	goto	l17984
 14842  0077EE  0A03               	xorlw	3	; case 6
 14843  0077F0  B4D8               	btfsc	status,2,c
 14844  0077F2  D775               	goto	l17982
 14845  0077F4  D7DC               	goto	l1973
 14846  0077F6                     l1969:
 14847                           
 14848                           ;aCapture.c: 155:             PIE1bits.ADTIE = 1;
 14849  0077F6  0139               	movlb	57	; () banked
 14850  0077F8  8791               	bsf	145,3,b	;volatile
 14851                           
 14852                           ; BSR set to: 57
 14853  0077FA  0012               	return		;funcret
 14854  0077FC                     __end_of_aCaptRstFlt:
 14855                           	opt callstack 0
 14856                           
 14857 ;; *************** function _keyReadInit *****************
 14858 ;; Defined at:
 14859 ;;		line 29 in file "keyRead.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;		None
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      void 
 14866 ;; Registers used:
 14867 ;;		wreg, status,2
 14868 ;; Tracked objects:
 14869 ;;		On entry : 3F/0
 14870 ;;		On exit  : 3F/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:   17
 14880 ;; This function calls:
 14881 ;;		Nothing
 14882 ;; This function is called by:
 14883 ;;		_main
 14884 ;;		_SelfTest
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888                           	psect	text26
 14889  00A192                     __ptext26:
 14890                           	opt callstack 0
 14891  00A192                     _keyReadInit:
 14892                           	opt callstack 13
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;keyRead.c: 30:     pressMills = 0;
 14896                           
 14897                           ; BSR set to: 57
 14898                           ;incstack = 0
 14899  00A192  0E00               	movlw	0
 14900  00A194  0102               	movlb	2	; () banked
 14901  00A196  6F3B               	movwf	(_pressMills+1)& (0+255),b
 14902  00A198  0E00               	movlw	0
 14903  00A19A  6F3A               	movwf	_pressMills& (0+255),b
 14904                           
 14905                           ; BSR set to: 2
 14906                           ;keyRead.c: 31:     lastkey = -1;
 14907  00A19C  0100               	movlb	0	; () banked
 14908  00A19E  69CB               	setf	_lastkey& (0+255),b
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;keyRead.c: 32:     lastkeyEC = -1;
 14912  00A1A0  69CA               	setf	_lastkeyEC& (0+255),b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;keyRead.c: 33:     keyFilter = -1;
 14916  00A1A2  69C9               	setf	_keyFilter& (0+255),b
 14917                           
 14918                           ; BSR set to: 0
 14919  00A1A4  0012               	return		;funcret
 14920  00A1A6                     __end_of_keyReadInit:
 14921                           	opt callstack 0
 14922                           
 14923 ;; *************** function _keyReadEC *****************
 14924 ;; Defined at:
 14925 ;;		line 52 in file "keyRead.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;		None
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  longPress       1   59[BANK0 ] _Bool 
 14930 ;;  ch              1   61[BANK0 ] char 
 14931 ;; Return value:  Size  Location     Type
 14932 ;;                  1    wreg      char 
 14933 ;; Registers used:
 14934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14935 ;; Tracked objects:
 14936 ;;		On entry : 3C/1
 14937 ;;		On exit  : 3F/0
 14938 ;;		Unchanged: 0/0
 14939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14941 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;Total ram usage:        3 bytes
 14945 ;; Hardware stack levels used:    1
 14946 ;; Hardware stack levels required when called:   19
 14947 ;; This function calls:
 14948 ;;		_keyPeek
 14949 ;;		_timeDiff
 14950 ;;		_timeGet
 14951 ;; This function is called by:
 14952 ;;		_main
 14953 ;;		_SelfTest
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957                           	psect	text27
 14958  008468                     __ptext27:
 14959                           	opt callstack 0
 14960  008468                     _keyReadEC:
 14961                           	opt callstack 11
 14962                           
 14963                           ;keyRead.c: 53:     int8_t ch = keyPeek();
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;incstack = 0
 14967  008468  EC15  F046         	call	_keyPeek	;wreg free
 14968  00846C  6F9D               	movwf	keyReadEC@ch& (0+255),b
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;keyRead.c: 54:     if (lastkeyEC == -1) {
 14972  00846E  29CA               	incf	_lastkeyEC& (0+255),w,b
 14973  008470  A4D8               	btfss	status,2,c
 14974  008472  D00C               	goto	l18636
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;keyRead.c: 55:         lastkeyEC = ch;
 14978  008474  0060  F274  F0CA   	movff	keyReadEC@ch,_lastkeyEC
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;keyRead.c: 56:         pressMills = timeGet();
 14982  00847A  ECFA  F050         	call	_timeGet	;wreg free
 14983  00847E  0060  F24C  F23A   	movff	?_timeGet,_pressMills
 14984  008484  0060  F250  F23B   	movff	?_timeGet+1,_pressMills+1
 14985                           
 14986                           ;keyRead.c: 57:     } else if ((ch != -1) && (ch == lastkeyEC)) {
 14987  00848A  D030               	goto	l18654
 14988  00848C                     l18636:
 14989                           
 14990                           ; BSR set to: 0
 14991  00848C  299D               	incf	keyReadEC@ch& (0+255),w,b
 14992  00848E  B4D8               	btfsc	status,2,c
 14993  008490  D02A               	goto	l18650
 14994                           
 14995                           ; BSR set to: 0
 14996  008492  51CA               	movf	_lastkeyEC& (0+255),w,b
 14997  008494  199D               	xorwf	keyReadEC@ch& (0+255),w,b
 14998  008496  A4D8               	btfss	status,2,c
 14999  008498  D026               	goto	l18650
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;keyRead.c: 58:         _Bool longPress = 2000 && (timeDiff(pressMills,timeGet())>2000);
 15003  00849A  0E00               	movlw	0
 15004  00849C  6F9C               	movwf	_keyReadEC$4077& (0+255),b
 15005                           
 15006                           ; BSR set to: 0
 15007  00849E  0060  F8E8  F095   	movff	_pressMills,timeDiff@startT
 15008  0084A4  0060  F8EC  F096   	movff	_pressMills+1,timeDiff@startT+1
 15009  0084AA  ECFA  F050         	call	_timeGet	;wreg free
 15010  0084AE  0060  F24C  F097   	movff	?_timeGet,timeDiff@endT
 15011  0084B4  0060  F250  F098   	movff	?_timeGet+1,timeDiff@endT+1
 15012  0084BA  EC8C  F04C         	call	_timeDiff	;wreg free
 15013  0084BE  0ED1               	movlw	209
 15014  0084C0  5D95               	subwf	?_timeDiff& (0+255),w,b
 15015  0084C2  0E07               	movlw	7
 15016  0084C4  5996               	subwfb	(?_timeDiff+1)& (0+255),w,b
 15017  0084C6  A0D8               	btfss	status,0,c
 15018  0084C8  D002               	goto	l2082
 15019                           
 15020                           ; BSR set to: 0
 15021  0084CA  0E01               	movlw	1
 15022  0084CC  6F9C               	movwf	_keyReadEC$4077& (0+255),b
 15023  0084CE                     l2082:
 15024                           
 15025                           ; BSR set to: 0
 15026  0084CE  519C               	movf	_keyReadEC$4077& (0+255),w,b
 15027  0084D0  B4D8               	btfsc	status,2,c
 15028  0084D2  D002               	goto	u19150
 15029  0084D4  0E01               	movlw	1
 15030  0084D6  D001               	goto	u19160
 15031  0084D8                     u19150:
 15032  0084D8  0E00               	movlw	0
 15033  0084DA                     u19160:
 15034  0084DA  6F9B               	movwf	keyReadEC@longPress& (0+255),b
 15035                           
 15036                           ;keyRead.c: 59:         if (longPress) {
 15037  0084DC  519B               	movf	keyReadEC@longPress& (0+255),w,b
 15038  0084DE  B4D8               	btfsc	status,2,c
 15039  0084E0  D005               	goto	l18654
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;keyRead.c: 60:             return -100;
 15043  0084E2  0E9C               	movlw	156
 15044  0084E4  0012               	return	
 15045  0084E6                     l18650:
 15046                           
 15047                           ; BSR set to: 0
 15048  0084E6  299D               	incf	keyReadEC@ch& (0+255),w,b
 15049  0084E8  B4D8               	btfsc	status,2,c
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;keyRead.c: 63:         lastkeyEC = -1;
 15053  0084EA  69CA               	setf	_lastkeyEC& (0+255),b
 15054  0084EC                     l18654:
 15055                           
 15056                           ; BSR set to: 0
 15057                           ;keyRead.c: 65:     return -1;
 15058  0084EC  0EFF               	movlw	255
 15059                           
 15060                           ; BSR set to: 0
 15061  0084EE  0012               	return		;funcret
 15062  0084F0                     __end_of_keyReadEC:
 15063                           	opt callstack 0
 15064                           
 15065 ;; *************** function _timeDiff *****************
 15066 ;; Defined at:
 15067 ;;		line 18 in file "time.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;  startT          2   53[BANK0 ] unsigned short 
 15070 ;;  endT            2   55[BANK0 ] unsigned short 
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;  intDur          2   57[BANK0 ] unsigned short 
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  2   53[BANK0 ] unsigned short 
 15075 ;; Registers used:
 15076 ;;		wreg, status,2, status,0
 15077 ;; Tracked objects:
 15078 ;;		On entry : 3E/0
 15079 ;;		On exit  : 3F/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15083 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15086 ;;Total ram usage:        6 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:   17
 15089 ;; This function calls:
 15090 ;;		Nothing
 15091 ;; This function is called by:
 15092 ;;		_main
 15093 ;;		_keyReadEC
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           	psect	text28
 15098  009918                     __ptext28:
 15099                           	opt callstack 0
 15100  009918                     _timeDiff:
 15101                           	opt callstack 13
 15102                           
 15103                           ;time.c: 19:     time_t intDur;;time.c: 21:     intDur = endT - startT;
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;incstack = 0
 15107  009918  0100               	movlb	0	; () banked
 15108  00991A  5195               	movf	timeDiff@startT& (0+255),w,b
 15109  00991C  5D97               	subwf	timeDiff@endT& (0+255),w,b
 15110  00991E  6F99               	movwf	timeDiff@intDur& (0+255),b
 15111  009920  5196               	movf	(timeDiff@startT+1)& (0+255),w,b
 15112  009922  5998               	subwfb	(timeDiff@endT+1)& (0+255),w,b
 15113  009924  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15114                           
 15115                           ;time.c: 22:     if (intDur>0x8000){
 15116  009926  0599               	decf	timeDiff@intDur& (0+255),w,b
 15117  009928  0E80               	movlw	128
 15118  00992A  599A               	subwfb	(timeDiff@intDur+1)& (0+255),w,b
 15119  00992C  A0D8               	btfss	status,0,c
 15120  00992E  D006               	goto	l17974
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;time.c: 24:         intDur = startT-endT;
 15124  009930  5197               	movf	timeDiff@endT& (0+255),w,b
 15125  009932  5D95               	subwf	timeDiff@startT& (0+255),w,b
 15126  009934  6F99               	movwf	timeDiff@intDur& (0+255),b
 15127  009936  5198               	movf	(timeDiff@endT+1)& (0+255),w,b
 15128  009938  5996               	subwfb	(timeDiff@startT+1)& (0+255),w,b
 15129  00993A  6F9A               	movwf	(timeDiff@intDur+1)& (0+255),b
 15130  00993C                     l17974:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;time.c: 26:     return intDur;
 15134  00993C  0060  F264  F095   	movff	timeDiff@intDur,?_timeDiff
 15135  009942  0060  F268  F096   	movff	timeDiff@intDur+1,?_timeDiff+1
 15136                           
 15137                           ; BSR set to: 0
 15138  009948  0012               	return		;funcret
 15139  00994A                     __end_of_timeDiff:
 15140                           	opt callstack 0
 15141                           
 15142 ;; *************** function _flowChk *****************
 15143 ;; Defined at:
 15144 ;;		line 109 in file "selftest.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;  flowVal         1    wreg     enum E17018
 15147 ;; Auto vars:     Size  Location     Type
 15148 ;;  flowVal         1  117[BANK1 ] enum E17018
 15149 ;;  aPVal           2  131[BANK1 ] short 
 15150 ;;  minFlowL        2  128[BANK1 ] short 
 15151 ;;  aPValMax        2  126[BANK1 ] short 
 15152 ;;  tstamp          2  124[BANK1 ] unsigned short 
 15153 ;;  aPValMin        2  122[BANK1 ] short 
 15154 ;;  maxFlowL        2  120[BANK1 ] short 
 15155 ;;  aPValMean       2  118[BANK1 ] short 
 15156 ;;  initOk          1  130[BANK1 ] _Bool 
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      _Bool 
 15159 ;; Registers used:
 15160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 3C/0
 15163 ;;		On exit  : 3F/1
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;Total ram usage:       18 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:   32
 15173 ;; This function calls:
 15174 ;;		_MonitorMsgSendBlock
 15175 ;;		___flge
 15176 ;;		___lldiv
 15177 ;;		___lmul
 15178 ;;		___xxtofl
 15179 ;;		_aCaptGetResult
 15180 ;;		_aCaptureOffGet
 15181 ;;		_printf
 15182 ;;		_printstrblock
 15183 ;;		_setCursor
 15184 ;;		_sprintf
 15185 ;;		_timeDelayMs
 15186 ;;		_timeElapsedR
 15187 ;;		_timeGet
 15188 ;;		_vMeasureGet
 15189 ;;		_vMeasureRst
 15190 ;; This function is called by:
 15191 ;;		_SelfTest
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text29
 15196  00510E                     __ptext29:
 15197                           	opt callstack 0
 15198  00510E                     _flowChk:
 15199                           	opt callstack 0
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;incstack = 0
 15203 ;; hardware stack exceeded
 15204                           ;flowChk@flowVal stored from wreg
 15205  00510E  0101               	movlb	1	; () banked
 15206  005110  6F75               	movwf	flowChk@flowVal& (0+255),b
 15207                           
 15208                           ;selftest.c: 110:   int16_t aPVal, aPValMax, aPValMin, aPValMean;;selftest.c: 111:   int
      +                          16_t minFlowL, maxFlowL;;selftest.c: 112:   _Bool initOk;;selftest.c: 113:   time_t tsta
      +                          mp;;selftest.c: 115:   initOk = 1;
 15209  005112  0E01               	movlw	1
 15210  005114  0101               	movlb	1	; () banked
 15211  005116  6F82               	movwf	flowChk@initOk& (0+255),b
 15212                           
 15213                           ; BSR set to: 1
 15214                           ;selftest.c: 118:   setCursor(0, 0);
 15215  005118  0E00               	movlw	0
 15216  00511A  0100               	movlb	0	; () banked
 15217  00511C  6F92               	movwf	setCursor@row& (0+255),b
 15218  00511E  0E00               	movlw	0
 15219  005120  ECD4  F04A         	call	_setCursor
 15220                           
 15221                           ;selftest.c: 119:   printstrblock("FLOW RATE        ");
 15222  005124  0E7B               	movlw	low STR_69
 15223  005126  0100               	movlb	0	; () banked
 15224  005128  6F8F               	movwf	printstrblock@c& (0+255),b
 15225  00512A  0EFD               	movlw	high STR_69
 15226  00512C  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15227  00512E  ECCD  F04E         	call	_printstrblock	;wreg free
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;selftest.c: 120:   aPValMin = 4096;
 15231  005132  0E10               	movlw	16
 15232  005134  0101               	movlb	1	; () banked
 15233  005136  6F7B               	movwf	(flowChk@aPValMin+1)& (0+255),b
 15234  005138  0E00               	movlw	0
 15235  00513A  6F7A               	movwf	flowChk@aPValMin& (0+255),b
 15236                           
 15237                           ; BSR set to: 1
 15238                           ;selftest.c: 121:   aPValMax = 0;
 15239  00513C  0E00               	movlw	0
 15240  00513E  6F7F               	movwf	(flowChk@aPValMax+1)& (0+255),b
 15241  005140  0E00               	movlw	0
 15242  005142  6F7E               	movwf	flowChk@aPValMax& (0+255),b
 15243                           
 15244                           ; BSR set to: 1
 15245                           ;selftest.c: 123:   if (!MonitorMsgSendBlock(MONSTATE_CALF)){
 15246  005144  0EA0               	movlw	160
 15247  005146  ECE0  F04E         	call	_MonitorMsgSendBlock
 15248  00514A  0900               	iorlw	0
 15249  00514C  A4D8               	btfss	status,2,c
 15250  00514E  D02F               	goto	l18964
 15251                           
 15252                           ; BSR set to: 1
 15253                           ;selftest.c: 124:     initOk=0;
 15254  005150  0E00               	movlw	0
 15255  005152  6F82               	movwf	flowChk@initOk& (0+255),b
 15256                           
 15257                           ; BSR set to: 1
 15258                           ;selftest.c: 125:     printf ("Mon error");
 15259  005154  0E80               	movlw	low STR_70
 15260  005156  6F46               	movwf	printf@fmt& (0+255),b
 15261  005158  0EFF               	movlw	high STR_70
 15262  00515A  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15263  00515C  EC68  F04E         	call	_printf	;wreg free
 15264                           
 15265                           ; BSR set to: 2
 15266                           ;selftest.c: 126:     setCursor(0, 0);
 15267  005160  0E00               	movlw	0
 15268  005162  0100               	movlb	0	; () banked
 15269  005164  6F92               	movwf	setCursor@row& (0+255),b
 15270  005166  0E00               	movlw	0
 15271  005168  ECD4  F04A         	call	_setCursor
 15272                           
 15273                           ;selftest.c: 127:     printstrblock("MONITOR ERROR");
 15274  00516C  0E15               	movlw	low STR_71
 15275  00516E  0100               	movlb	0	; () banked
 15276  005170  6F8F               	movwf	printstrblock@c& (0+255),b
 15277  005172  0EFF               	movlw	high STR_71
 15278  005174  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15279  005176  ECCD  F04E         	call	_printstrblock	;wreg free
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;selftest.c: 128:     timeDelayMs(500);
 15283  00517A  0E01               	movlw	1
 15284  00517C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15285  00517E  0EF4               	movlw	244
 15286  005180  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15287  005182  EC0A  F04C         	call	_timeDelayMs	;wreg free
 15288  005186  D013               	goto	l18964
 15289  005188                     l2793:
 15290                           
 15291                           ; BSR set to: 1
 15292                           ;selftest.c: 134:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
 15293  005188  84BA               	bsf	186,2,c	;volatile
 15294  00518A  96BC               	bcf	188,3,c	;volatile
 15295                           
 15296                           ; BSR set to: 1
 15297                           ;selftest.c: 135:     minFlowL = 250;
 15298  00518C  0E00               	movlw	0
 15299  00518E  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15300  005190  0EFA               	movlw	250
 15301  005192  D00B               	goto	L20
 15302  005194                     l2795:
 15303                           
 15304                           ; BSR set to: 1
 15305                           ;selftest.c: 138:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 1;
 15306  005194  94BA               	bcf	186,2,c	;volatile
 15307  005196  86BC               	bsf	188,3,c	;volatile
 15308                           
 15309                           ; BSR set to: 1
 15310                           ;selftest.c: 139:     minFlowL = 400;
 15311  005198  0E01               	movlw	1
 15312  00519A  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15313  00519C  0E90               	movlw	144
 15314  00519E  D005               	goto	L20
 15315  0051A0                     l2796:
 15316                           
 15317                           ; BSR set to: 1
 15318                           ;selftest.c: 142:     LATAbits.LATA2 = 1;LATCbits.LATC3 = 1;
 15319  0051A0  84BA               	bsf	186,2,c	;volatile
 15320  0051A2  86BC               	bsf	188,3,c	;volatile
 15321                           
 15322                           ; BSR set to: 1
 15323                           ;selftest.c: 143:     minFlowL = 600;
 15324  0051A4  0E02               	movlw	2
 15325  0051A6  6F81               	movwf	(flowChk@minFlowL+1)& (0+255),b
 15326  0051A8  0E58               	movlw	88
 15327  0051AA                     L20:
 15328  0051AA  6F80               	movwf	flowChk@minFlowL& (0+255),b
 15329                           
 15330                           ;selftest.c: 144:     break;
 15331  0051AC  D012               	goto	l18966
 15332  0051AE                     l18964:
 15333  0051AE  0101               	movlb	1	; () banked
 15334  0051B0  5175               	movf	flowChk@flowVal& (0+255),w,b
 15335  0051B2  6F73               	movwf	??_flowChk& (0+255),b
 15336  0051B4  6B74               	clrf	(??_flowChk+1)& (0+255),b
 15337                           
 15338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15339                           ; Switch size 1, requested type "simple"
 15340                           ; Number of cases is 1, Range of values is 0 to 0
 15341                           ; switch strategies available:
 15342                           ; Name         Instructions Cycles
 15343                           ; simple_byte            4     3 (average)
 15344                           ;	Chosen strategy is simple_byte
 15345  0051B6  5174               	movf	(??_flowChk+1)& (0+255),w,b
 15346  0051B8  0A00               	xorlw	0	; case 0
 15347  0051BA  A4D8               	btfss	status,2,c
 15348  0051BC  D00A               	goto	l18966
 15349                           
 15350                           ; BSR set to: 1
 15351                           ; Switch size 1, requested type "simple"
 15352                           ; Number of cases is 3, Range of values is 0 to 2
 15353                           ; switch strategies available:
 15354                           ; Name         Instructions Cycles
 15355                           ; simple_byte           10     6 (average)
 15356                           ;	Chosen strategy is simple_byte
 15357  0051BE  5173               	movf	??_flowChk& (0+255),w,b
 15358  0051C0  0A00               	xorlw	0	; case 0
 15359  0051C2  B4D8               	btfsc	status,2,c
 15360  0051C4  D7E1               	goto	l2793
 15361  0051C6  0A01               	xorlw	1	; case 1
 15362  0051C8  B4D8               	btfsc	status,2,c
 15363  0051CA  D7E4               	goto	l2795
 15364  0051CC  0A03               	xorlw	3	; case 2
 15365  0051CE  B4D8               	btfsc	status,2,c
 15366  0051D0  D7E7               	goto	l2796
 15367  0051D2                     l18966:
 15368                           
 15369                           ; BSR set to: 1
 15370                           ;selftest.c: 146:   maxFlowL = 2*minFlowL;
 15371  0051D2  90D8               	bcf	status,0,c
 15372  0051D4  3580               	rlcf	flowChk@minFlowL& (0+255),w,b
 15373  0051D6  6F78               	movwf	flowChk@maxFlowL& (0+255),b
 15374  0051D8  3581               	rlcf	(flowChk@minFlowL+1)& (0+255),w,b
 15375  0051DA  6F79               	movwf	(flowChk@maxFlowL+1)& (0+255),b
 15376                           
 15377                           ; BSR set to: 1
 15378                           ;selftest.c: 147:   LATAbits.LATA3 = 1;
 15379  0051DC  86BA               	bsf	186,3,c	;volatile
 15380                           
 15381                           ; BSR set to: 1
 15382                           ;selftest.c: 149:   timeDelayMs(250);
 15383  0051DE  0E00               	movlw	0
 15384  0051E0  0100               	movlb	0	; () banked
 15385  0051E2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15386  0051E4  0EFA               	movlw	250
 15387  0051E6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15388  0051E8  EC0A  F04C         	call	_timeDelayMs	;wreg free
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;selftest.c: 150:   vMeasureRst();
 15392  0051EC  EC54  F050         	call	_vMeasureRst	;wreg free
 15393                           
 15394                           ; BSR set to: 57
 15395                           ;selftest.c: 151:   tstamp = timeGet();
 15396  0051F0  ECFA  F050         	call	_timeGet	;wreg free
 15397  0051F4  0060  F24C  F17C   	movff	?_timeGet,flowChk@tstamp
 15398  0051FA  0060  F250  F17D   	movff	?_timeGet+1,flowChk@tstamp+1
 15399                           
 15400                           ;selftest.c: 152:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15401  005200  D029               	goto	l18986
 15402  005202                     l18976:
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;selftest.c: 153:     aCaptGetResult(VolPSensor, &aPVal);
 15406  005202  0E83               	movlw	low flowChk@aPVal
 15407  005204  0101               	movlb	1	; () banked
 15408  005206  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 15409  005208  0E01               	movlw	high flowChk@aPVal
 15410  00520A  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 15411  00520C  0E01               	movlw	1
 15412  00520E  EC83  F031         	call	_aCaptGetResult
 15413                           
 15414                           ;selftest.c: 154:     if (aPVal > aPValMax) {
 15415  005212  0101               	movlb	1	; () banked
 15416  005214  5183               	movf	flowChk@aPVal& (0+255),w,b
 15417  005216  5D7E               	subwf	flowChk@aPValMax& (0+255),w,b
 15418  005218  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15419  00521A  0A80               	xorlw	128
 15420  00521C  6F73               	movwf	??_flowChk& (0+255),b
 15421  00521E  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15422  005220  0A80               	xorlw	128
 15423  005222  5973               	subwfb	??_flowChk& (0+255),w,b
 15424  005224  B0D8               	btfsc	status,0,c
 15425  005226  D006               	goto	l18982
 15426                           
 15427                           ; BSR set to: 1
 15428                           ;selftest.c: 155:       aPValMax = aPVal;
 15429  005228  0060  F60C  F17E   	movff	flowChk@aPVal,flowChk@aPValMax
 15430  00522E  0060  F610  F17F   	movff	flowChk@aPVal+1,flowChk@aPValMax+1
 15431  005234                     l18982:
 15432                           
 15433                           ; BSR set to: 1
 15434                           ;selftest.c: 157:     if (aPVal < aPValMin) {
 15435  005234  517A               	movf	flowChk@aPValMin& (0+255),w,b
 15436  005236  5D83               	subwf	flowChk@aPVal& (0+255),w,b
 15437  005238  5184               	movf	(flowChk@aPVal+1)& (0+255),w,b
 15438  00523A  0A80               	xorlw	128
 15439  00523C  6F73               	movwf	??_flowChk& (0+255),b
 15440  00523E  517B               	movf	(flowChk@aPValMin+1)& (0+255),w,b
 15441  005240  0A80               	xorlw	128
 15442  005242  5973               	subwfb	??_flowChk& (0+255),w,b
 15443  005244  B0D8               	btfsc	status,0,c
 15444  005246  D006               	goto	l18986
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;selftest.c: 158:       aPValMin = aPVal;
 15448  005248  0060  F60C  F17A   	movff	flowChk@aPVal,flowChk@aPValMin
 15449  00524E  0060  F610  F17B   	movff	flowChk@aPVal+1,flowChk@aPValMin+1
 15450  005254                     l18986:
 15451                           
 15452                           ;selftest.c: 152:   while (!timeElapsedR(&tstamp, ((time_t) 250*1))) {
 15453  005254  0E7C               	movlw	low flowChk@tstamp
 15454  005256  0100               	movlb	0	; () banked
 15455  005258  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 15456  00525A  0E01               	movlw	high flowChk@tstamp
 15457  00525C  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 15458  00525E  0E00               	movlw	0
 15459  005260  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 15460  005262  0EFA               	movlw	250
 15461  005264  6F95               	movwf	timeElapsedR@duration& (0+255),b
 15462  005266  ECE5  F045         	call	_timeElapsedR	;wreg free
 15463  00526A  0900               	iorlw	0
 15464  00526C  B4D8               	btfsc	status,2,c
 15465  00526E  D7C9               	goto	l18976
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;selftest.c: 162:   freeFlowRateL = vMeasureGet()<<2;
 15469  005270  ECFE  F046         	call	_vMeasureGet	;wreg free
 15470  005274  90D8               	bcf	status,0,c
 15471  005276  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15472  005278  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15473  00527A  90D8               	bcf	status,0,c
 15474  00527C  37A4               	rlcf	?_vMeasureGet& (0+255),f,b
 15475  00527E  37A5               	rlcf	(?_vMeasureGet+1)& (0+255),f,b
 15476  005280  0060  F290  F234   	movff	?_vMeasureGet,_freeFlowRateL
 15477  005286  0060  F294  F235   	movff	?_vMeasureGet+1,_freeFlowRateL+1
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;selftest.c: 163:   if (!MonitorMsgSendBlock(MONSTATE_STOP)){
 15481  00528C  0E00               	movlw	0
 15482  00528E  ECE0  F04E         	call	_MonitorMsgSendBlock
 15483  005292  0900               	iorlw	0
 15484  005294  A4D8               	btfss	status,2,c
 15485  005296  D01B               	goto	l19002
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;selftest.c: 164:     initOk=0;
 15489  005298  0E00               	movlw	0
 15490  00529A  6F82               	movwf	flowChk@initOk& (0+255),b
 15491                           
 15492                           ; BSR set to: 1
 15493                           ;selftest.c: 165:     printf ("Mon error");
 15494  00529C  0E80               	movlw	low STR_70
 15495  00529E  6F46               	movwf	printf@fmt& (0+255),b
 15496  0052A0  0EFF               	movlw	high STR_70
 15497  0052A2  6F47               	movwf	(printf@fmt+1)& (0+255),b
 15498  0052A4  EC68  F04E         	call	_printf	;wreg free
 15499                           
 15500                           ; BSR set to: 2
 15501                           ;selftest.c: 166:     setCursor(0, 0);
 15502  0052A8  0E00               	movlw	0
 15503  0052AA  0100               	movlb	0	; () banked
 15504  0052AC  6F92               	movwf	setCursor@row& (0+255),b
 15505  0052AE  0E00               	movlw	0
 15506  0052B0  ECD4  F04A         	call	_setCursor
 15507                           
 15508                           ;selftest.c: 167:     printstrblock("MONITOR ERROR");
 15509  0052B4  0E15               	movlw	low STR_71
 15510  0052B6  0100               	movlb	0	; () banked
 15511  0052B8  6F8F               	movwf	printstrblock@c& (0+255),b
 15512  0052BA  0EFF               	movlw	high STR_71
 15513  0052BC  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15514  0052BE  ECCD  F04E         	call	_printstrblock	;wreg free
 15515                           
 15516                           ; BSR set to: 0
 15517                           ;selftest.c: 168:     timeDelayMs(500);
 15518  0052C2  0E01               	movlw	1
 15519  0052C4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15520  0052C6  0EF4               	movlw	244
 15521  0052C8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15522  0052CA  EC0A  F04C         	call	_timeDelayMs	;wreg free
 15523  0052CE                     l19002:
 15524                           
 15525                           ;selftest.c: 170:   LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 15526  0052CE  94BA               	bcf	186,2,c	;volatile
 15527  0052D0  96BC               	bcf	188,3,c	;volatile
 15528                           
 15529                           ;selftest.c: 171:   LATAbits.LATA3 = 0;
 15530  0052D2  96BA               	bcf	186,3,c	;volatile
 15531                           
 15532                           ;selftest.c: 173:   aPValMean=aCaptureOffGet(VolPSensor);
 15533  0052D4  0E01               	movlw	1
 15534  0052D6  EC21  F049         	call	_aCaptureOffGet
 15535  0052DA  0060  F580  F176   	movff	?_aCaptureOffGet,flowChk@aPValMean
 15536  0052E0  0060  F584  F177   	movff	?_aCaptureOffGet+1,flowChk@aPValMean+1
 15537                           
 15538                           ;selftest.c: 175:   if ((aPValMean + aPValMax)>= (0.95*8192)) {
 15539  0052E6  0101               	movlb	1	; () banked
 15540  0052E8  517E               	movf	flowChk@aPValMax& (0+255),w,b
 15541  0052EA  2576               	addwf	flowChk@aPValMean& (0+255),w,b
 15542  0052EC  6F73               	movwf	??_flowChk& (0+255),b
 15543  0052EE  517F               	movf	(flowChk@aPValMax+1)& (0+255),w,b
 15544  0052F0  2177               	addwfc	(flowChk@aPValMean+1)& (0+255),w,b
 15545  0052F2  6F74               	movwf	(??_flowChk+1)& (0+255),b
 15546  0052F4  0060  F5CC  F08B   	movff	??_flowChk,___xxtofl@val
 15547  0052FA  0060  F5D0  F08C   	movff	??_flowChk+1,___xxtofl@val+1
 15548  005300  0100               	movlb	0	; () banked
 15549  005302  0E00               	movlw	0
 15550  005304  BF8C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15551  005306  0EFF               	movlw	-1
 15552  005308  6F8D               	movwf	(___xxtofl@val+2)& (0+255),b
 15553  00530A  6F8E               	movwf	(___xxtofl@val+3)& (0+255),b
 15554  00530C  0E01               	movlw	1
 15555  00530E  EC9B  F037         	call	___xxtofl
 15556  005312  0060  F22C  F099   	movff	?___xxtofl,___flge@ff1
 15557  005318  0060  F230  F09A   	movff	?___xxtofl+1,___flge@ff1+1
 15558  00531E  0060  F234  F09B   	movff	?___xxtofl+2,___flge@ff1+2
 15559  005324  0060  F238  F09C   	movff	?___xxtofl+3,___flge@ff1+3
 15560  00532A  0E33               	movlw	51
 15561  00532C  6F9D               	movwf	___flge@ff2& (0+255),b
 15562  00532E  0E33               	movlw	51
 15563  005330  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 15564  005332  0EF3               	movlw	243
 15565  005334  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 15566  005336  0E45               	movlw	69
 15567  005338  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 15568  00533A  EC5E  F03D         	call	___flge	;wreg free
 15569  00533E  A0D8               	btfss	status,0,c
 15570  005340  D016               	goto	l19020
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;selftest.c: 177:     setCursor(0, 0);
 15574  005342  0E00               	movlw	0
 15575  005344  6F92               	movwf	setCursor@row& (0+255),b
 15576  005346  0E00               	movlw	0
 15577  005348  ECD4  F04A         	call	_setCursor
 15578                           
 15579                           ;selftest.c: 178:     printstrblock("FLOW TOO HIGH   ");
 15580  00534C  0E06               	movlw	low STR_74
 15581  00534E  0100               	movlb	0	; () banked
 15582  005350  6F8F               	movwf	printstrblock@c& (0+255),b
 15583  005352  0EFE               	movlw	high STR_74
 15584  005354  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15585  005356  ECCD  F04E         	call	_printstrblock	;wreg free
 15586  00535A                     l19016:
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;selftest.c: 179:     timeDelayMs(1000);
 15590  00535A  0E03               	movlw	3
 15591  00535C  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15592  00535E  0EE8               	movlw	232
 15593  005360  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15594  005362  EC0A  F04C         	call	_timeDelayMs	;wreg free
 15595                           
 15596                           ; BSR set to: 0
 15597                           ;selftest.c: 180:     initOk = 0;
 15598  005366  0E00               	movlw	0
 15599  005368  0101               	movlb	1	; () banked
 15600  00536A  6F82               	movwf	flowChk@initOk& (0+255),b
 15601                           
 15602                           ;selftest.c: 181:   } else {
 15603  00536C  D07C               	goto	l19048
 15604  00536E                     l19020:
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;selftest.c: 182:     sprintf(lcdTopRow, "FLOW: % 3d L/min ", (int16_t) ((uint32_t) ((ui
      +                          nt32_t) 60 * freeFlowRateL) / 1000));
 15608  00536E  0EA3               	movlw	low _lcdTopRow
 15609  005370  0101               	movlb	1	; () banked
 15610  005372  6F46               	movwf	sprintf@s& (0+255),b
 15611  005374  0E02               	movlw	high _lcdTopRow
 15612  005376  6F47               	movwf	(sprintf@s+1)& (0+255),b
 15613  005378  0E9F               	movlw	low STR_75
 15614  00537A  6F48               	movwf	sprintf@fmt& (0+255),b
 15615  00537C  0EFD               	movlw	high STR_75
 15616  00537E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 15617  005380  0060  F8D0  F08B   	movff	_freeFlowRateL,___lmul@multiplier
 15618  005386  0060  F8D4  F08C   	movff	_freeFlowRateL+1,___lmul@multiplier+1
 15619  00538C  0100               	movlb	0	; () banked
 15620  00538E  6B8D               	clrf	(___lmul@multiplier+2)& (0+255),b
 15621  005390  6B8E               	clrf	(___lmul@multiplier+3)& (0+255),b
 15622  005392  0E3C               	movlw	60
 15623  005394  6F8F               	movwf	___lmul@multiplicand& (0+255),b
 15624  005396  0E00               	movlw	0
 15625  005398  6F90               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15626  00539A  0E00               	movlw	0
 15627  00539C  6F91               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15628  00539E  0E00               	movlw	0
 15629  0053A0  6F92               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15630  0053A2  EC45  F046         	call	___lmul	;wreg free
 15631  0053A6  0060  F22C  F097   	movff	?___lmul,___lldiv@dividend
 15632  0053AC  0060  F230  F098   	movff	?___lmul+1,___lldiv@dividend+1
 15633  0053B2  0060  F234  F099   	movff	?___lmul+2,___lldiv@dividend+2
 15634  0053B8  0060  F238  F09A   	movff	?___lmul+3,___lldiv@dividend+3
 15635  0053BE  0EE8               	movlw	232
 15636  0053C0  6F9B               	movwf	___lldiv@divisor& (0+255),b
 15637  0053C2  0E03               	movlw	3
 15638  0053C4  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 15639  0053C6  0E00               	movlw	0
 15640  0053C8  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 15641  0053CA  0E00               	movlw	0
 15642  0053CC  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 15643  0053CE  ECEF  F041         	call	___lldiv	;wreg free
 15644  0053D2  0060  F25C  F14A   	movff	?___lldiv,?_sprintf+4
 15645  0053D8  0060  F260  F14B   	movff	?___lldiv+1,?_sprintf+5
 15646  0053DE  EC58  F047         	call	_sprintf	;wreg free
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;selftest.c: 183:     setCursor(0, 0);
 15650  0053E2  0E00               	movlw	0
 15651  0053E4  0100               	movlb	0	; () banked
 15652  0053E6  6F92               	movwf	setCursor@row& (0+255),b
 15653  0053E8  0E00               	movlw	0
 15654  0053EA  ECD4  F04A         	call	_setCursor
 15655                           
 15656                           ;selftest.c: 184:     printstrblock(lcdTopRow);
 15657  0053EE  0EA3               	movlw	low _lcdTopRow
 15658  0053F0  0100               	movlb	0	; () banked
 15659  0053F2  6F8F               	movwf	printstrblock@c& (0+255),b
 15660  0053F4  0E02               	movlw	high _lcdTopRow
 15661  0053F6  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15662  0053F8  ECCD  F04E         	call	_printstrblock	;wreg free
 15663                           
 15664                           ; BSR set to: 0
 15665                           ;selftest.c: 185:     timeDelayMs(4000);
 15666  0053FC  0E0F               	movlw	15
 15667  0053FE  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 15668  005400  0EA0               	movlw	160
 15669  005402  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 15670  005404  EC0A  F04C         	call	_timeDelayMs	;wreg free
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;selftest.c: 187:     if (freeFlowRateL < minFlowL) {
 15674  005408  0101               	movlb	1	; () banked
 15675  00540A  5180               	movf	flowChk@minFlowL& (0+255),w,b
 15676  00540C  0102               	movlb	2	; () banked
 15677  00540E  5D34               	subwf	_freeFlowRateL& (0+255),w,b
 15678  005410  0101               	movlb	1	; () banked
 15679  005412  5181               	movf	(flowChk@minFlowL+1)& (0+255),w,b
 15680  005414  0102               	movlb	2	; () banked
 15681  005416  5935               	subwfb	(_freeFlowRateL+1)& (0+255),w,b
 15682  005418  B0D8               	btfsc	status,0,c
 15683  00541A  D00E               	goto	l19038
 15684                           
 15685                           ; BSR set to: 2
 15686                           ;selftest.c: 189:       setCursor(0, 0);
 15687  00541C  0E00               	movlw	0
 15688  00541E  0100               	movlb	0	; () banked
 15689  005420  6F92               	movwf	setCursor@row& (0+255),b
 15690  005422  0E00               	movlw	0
 15691  005424  ECD4  F04A         	call	_setCursor
 15692                           
 15693                           ;selftest.c: 190:       printstrblock("FLOW TOO LOW    ");
 15694  005428  0EF5               	movlw	low STR_76
 15695  00542A  0100               	movlb	0	; () banked
 15696  00542C  6F8F               	movwf	printstrblock@c& (0+255),b
 15697  00542E  0EFD               	movlw	high STR_76
 15698  005430  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15699  005432  ECCD  F04E         	call	_printstrblock	;wreg free
 15700  005436  D791               	goto	l19016
 15701  005438                     l19038:
 15702                           
 15703                           ; BSR set to: 2
 15704  005438  5134               	movf	_freeFlowRateL& (0+255),w,b
 15705  00543A  0101               	movlb	1	; () banked
 15706  00543C  5D78               	subwf	flowChk@maxFlowL& (0+255),w,b
 15707  00543E  0102               	movlb	2	; () banked
 15708  005440  5135               	movf	(_freeFlowRateL+1)& (0+255),w,b
 15709  005442  0101               	movlb	1	; () banked
 15710  005444  5979               	subwfb	(flowChk@maxFlowL+1)& (0+255),w,b
 15711  005446  B0D8               	btfsc	status,0,c
 15712  005448  D00E               	goto	l19048
 15713                           
 15714                           ; BSR set to: 1
 15715                           ;selftest.c: 195:       setCursor(0, 0);
 15716  00544A  0E00               	movlw	0
 15717  00544C  0100               	movlb	0	; () banked
 15718  00544E  6F92               	movwf	setCursor@row& (0+255),b
 15719  005450  0E00               	movlw	0
 15720  005452  ECD4  F04A         	call	_setCursor
 15721                           
 15722                           ;selftest.c: 196:       printstrblock("FLOW TOO HIGH   ");
 15723  005456  0E06               	movlw	low STR_74
 15724  005458  0100               	movlb	0	; () banked
 15725  00545A  6F8F               	movwf	printstrblock@c& (0+255),b
 15726  00545C  0EFE               	movlw	high STR_74
 15727  00545E  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 15728  005460  ECCD  F04E         	call	_printstrblock	;wreg free
 15729  005464  D77A               	goto	l19016
 15730  005466                     l19048:
 15731                           
 15732                           ; BSR set to: 1
 15733                           ;selftest.c: 201:   return initOk;
 15734  005466  5182               	movf	flowChk@initOk& (0+255),w,b
 15735                           
 15736                           ; BSR set to: 1
 15737  005468  0012               	return		;funcret
 15738  00546A                     __end_of_flowChk:
 15739                           	opt callstack 0
 15740                           
 15741 ;; *************** function _vMeasureRst *****************
 15742 ;; Defined at:
 15743 ;;		line 29 in file "vMeasure.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;		None
 15746 ;; Auto vars:     Size  Location     Type
 15747 ;;		None
 15748 ;; Return value:  Size  Location     Type
 15749 ;;                  1    wreg      void 
 15750 ;; Registers used:
 15751 ;;		wreg, status,2
 15752 ;; Tracked objects:
 15753 ;;		On entry : 3F/0
 15754 ;;		On exit  : 3F/39
 15755 ;;		Unchanged: 0/0
 15756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15761 ;;Total ram usage:        0 bytes
 15762 ;; Hardware stack levels used:    1
 15763 ;; Hardware stack levels required when called:   17
 15764 ;; This function calls:
 15765 ;;		Nothing
 15766 ;; This function is called by:
 15767 ;;		_main
 15768 ;;		_flowChk
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text30
 15773  00A0A8                     __ptext30:
 15774                           	opt callstack 0
 15775  00A0A8                     _vMeasureRst:
 15776                           	opt callstack 13
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;vMeasure.c: 30:     PIE4bits.TMR2IE = 0;
 15780                           
 15781                           ; BSR set to: 1
 15782                           ;incstack = 0
 15783  00A0A8  0139               	movlb	57	; () banked
 15784  00A0AA  9594               	bcf	148,2,b	;volatile
 15785                           
 15786                           ; BSR set to: 57
 15787                           ;vMeasure.c: 31:     volume = 0;
 15788  00A0AC  0E00               	movlw	0
 15789  00A0AE  0102               	movlb	2	; () banked
 15790  00A0B0  6F2B               	movwf	_volume& (0+255),b
 15791  00A0B2  0E00               	movlw	0
 15792  00A0B4  6F2C               	movwf	(_volume+1)& (0+255),b
 15793  00A0B6  0E00               	movlw	0
 15794  00A0B8  6F2D               	movwf	(_volume+2)& (0+255),b
 15795  00A0BA  0E00               	movlw	0
 15796  00A0BC  6F2E               	movwf	(_volume+3)& (0+255),b
 15797                           
 15798                           ; BSR set to: 2
 15799                           ;vMeasure.c: 32:     PIE4bits.TMR2IE = 1;
 15800  00A0BE  0139               	movlb	57	; () banked
 15801  00A0C0  8594               	bsf	148,2,b	;volatile
 15802                           
 15803                           ; BSR set to: 57
 15804  00A0C2  0012               	return		;funcret
 15805  00A0C4                     __end_of_vMeasureRst:
 15806                           	opt callstack 0
 15807                           
 15808 ;; *************** function _vMeasureGet *****************
 15809 ;; Defined at:
 15810 ;;		line 42 in file "vMeasure.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;  rawV            4   70[BANK0 ] unsigned long 
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  2   68[BANK0 ] unsigned short 
 15817 ;; Registers used:
 15818 ;;		wreg, status,2, status,0, cstack
 15819 ;; Tracked objects:
 15820 ;;		On entry : 3C/1
 15821 ;;		On exit  : 3F/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;Total ram usage:        6 bytes
 15829 ;; Hardware stack levels used:    1
 15830 ;; Hardware stack levels required when called:   18
 15831 ;; This function calls:
 15832 ;;		___lldiv
 15833 ;; This function is called by:
 15834 ;;		_inspOSMeasure
 15835 ;;		_main
 15836 ;;		_flowChk
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text31
 15841  008DFC                     __ptext31:
 15842                           	opt callstack 0
 15843  008DFC                     _vMeasureGet:
 15844                           	opt callstack 12
 15845                           
 15846                           ;vMeasure.c: 43:     uint32_t rawV;;vMeasure.c: 44:     PIE4bits.TMR2IE = 0;
 15847                           
 15848                           ; BSR set to: 57
 15849                           ;incstack = 0
 15850  008DFC  0139               	movlb	57	; () banked
 15851  008DFE  9594               	bcf	148,2,b	;volatile
 15852                           
 15853                           ;vMeasure.c: 45:     rawV=volume;
 15854  008E00  0060  F8AC  F0A6   	movff	_volume,vMeasureGet@rawV
 15855  008E06  0060  F8B0  F0A7   	movff	_volume+1,vMeasureGet@rawV+1
 15856  008E0C  0060  F8B4  F0A8   	movff	_volume+2,vMeasureGet@rawV+2
 15857  008E12  0060  F8B8  F0A9   	movff	_volume+3,vMeasureGet@rawV+3
 15858                           
 15859                           ;vMeasure.c: 46:     PIE4bits.TMR2IE = 1;
 15860  008E18  8594               	bsf	148,2,b	;volatile
 15861                           
 15862                           ; BSR set to: 57
 15863                           ;vMeasure.c: 48:     return rawV/60;
 15864  008E1A  0060  F298  F097   	movff	vMeasureGet@rawV,___lldiv@dividend
 15865  008E20  0060  F29C  F098   	movff	vMeasureGet@rawV+1,___lldiv@dividend+1
 15866  008E26  0060  F2A0  F099   	movff	vMeasureGet@rawV+2,___lldiv@dividend+2
 15867  008E2C  0060  F2A4  F09A   	movff	vMeasureGet@rawV+3,___lldiv@dividend+3
 15868  008E32  0E3C               	movlw	60
 15869  008E34  0100               	movlb	0	; () banked
 15870  008E36  6F9B               	movwf	___lldiv@divisor& (0+255),b
 15871  008E38  0E00               	movlw	0
 15872  008E3A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 15873  008E3C  0E00               	movlw	0
 15874  008E3E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 15875  008E40  0E00               	movlw	0
 15876  008E42  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 15877  008E44  ECEF  F041         	call	___lldiv	;wreg free
 15878  008E48  0060  F25C  F0A4   	movff	?___lldiv,?_vMeasureGet
 15879  008E4E  0060  F260  F0A5   	movff	?___lldiv+1,?_vMeasureGet+1
 15880                           
 15881                           ; BSR set to: 0
 15882  008E54  0012               	return		;funcret
 15883  008E56                     __end_of_vMeasureGet:
 15884                           	opt callstack 0
 15885                           
 15886 ;; *************** function ___lldiv *****************
 15887 ;; Defined at:
 15888 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 15889 ;; Parameters:    Size  Location     Type
 15890 ;;  dividend        4   55[BANK0 ] unsigned long 
 15891 ;;  divisor         4   59[BANK0 ] unsigned long 
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;  quotient        4   63[BANK0 ] unsigned long 
 15894 ;;  counter         1   67[BANK0 ] unsigned char 
 15895 ;; Return value:  Size  Location     Type
 15896 ;;                  4   55[BANK0 ] unsigned long 
 15897 ;; Registers used:
 15898 ;;		wreg, status,2, status,0
 15899 ;; Tracked objects:
 15900 ;;		On entry : 3F/0
 15901 ;;		On exit  : 3F/0
 15902 ;;		Unchanged: 0/0
 15903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;Total ram usage:       13 bytes
 15909 ;; Hardware stack levels used:    1
 15910 ;; Hardware stack levels required when called:   17
 15911 ;; This function calls:
 15912 ;;		Nothing
 15913 ;; This function is called by:
 15914 ;;		_vMeasureGet
 15915 ;;		_flowChk
 15916 ;; This function uses a non-reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text32
 15920  0083DE                     __ptext32:
 15921                           	opt callstack 0
 15922  0083DE                     ___lldiv:
 15923                           	opt callstack 12
 15924                           
 15925                           ; BSR set to: 0
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;incstack = 0
 15929  0083DE  0E00               	movlw	0
 15930  0083E0  6F9F               	movwf	___lldiv@quotient& (0+255),b
 15931  0083E2  0E00               	movlw	0
 15932  0083E4  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 15933  0083E6  0E00               	movlw	0
 15934  0083E8  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 15935  0083EA  0E00               	movlw	0
 15936  0083EC  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 15937                           
 15938                           ; BSR set to: 0
 15939  0083EE  519B               	movf	___lldiv@divisor& (0+255),w,b
 15940  0083F0  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15941  0083F2  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15942  0083F4  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15943  0083F6  B4D8               	btfsc	status,2,c
 15944  0083F8  D02A               	goto	l3179
 15945                           
 15946                           ; BSR set to: 0
 15947  0083FA  0E01               	movlw	1
 15948  0083FC  6FA3               	movwf	___lldiv@counter& (0+255),b
 15949  0083FE  D006               	goto	l17714
 15950  008400                     l17712:
 15951                           
 15952                           ; BSR set to: 0
 15953  008400  90D8               	bcf	status,0,c
 15954  008402  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 15955  008404  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15956  008406  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15957  008408  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15958  00840A  2BA3               	incf	___lldiv@counter& (0+255),f,b
 15959  00840C                     l17714:
 15960                           
 15961                           ; BSR set to: 0
 15962  00840C  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15963  00840E  D7F8               	goto	l17712
 15964  008410                     u18090:
 15965                           
 15966                           ; BSR set to: 0
 15967  008410  90D8               	bcf	status,0,c
 15968  008412  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 15969  008414  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15970  008416  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15971  008418  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15972                           
 15973                           ; BSR set to: 0
 15974  00841A  519B               	movf	___lldiv@divisor& (0+255),w,b
 15975  00841C  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 15976  00841E  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15977  008420  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15978  008422  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15979  008424  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15980  008426  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15981  008428  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15982  00842A  A0D8               	btfss	status,0,c
 15983  00842C  D009               	goto	l17724
 15984                           
 15985                           ; BSR set to: 0
 15986  00842E  519B               	movf	___lldiv@divisor& (0+255),w,b
 15987  008430  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 15988  008432  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15989  008434  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15990  008436  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15991  008438  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15992  00843A  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15993  00843C  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15994                           
 15995                           ; BSR set to: 0
 15996  00843E  819F               	bsf	___lldiv@quotient& (0+255),0,b
 15997  008440                     l17724:
 15998                           
 15999                           ; BSR set to: 0
 16000  008440  90D8               	bcf	status,0,c
 16001  008442  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16002  008444  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16003  008446  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16004  008448  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 16005                           
 16006                           ; BSR set to: 0
 16007  00844A  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 16008  00844C  D7E1               	goto	u18090
 16009  00844E                     l3179:
 16010                           
 16011                           ; BSR set to: 0
 16012  00844E  0060  F27C  F097   	movff	___lldiv@quotient,?___lldiv
 16013  008454  0060  F280  F098   	movff	___lldiv@quotient+1,?___lldiv+1
 16014  00845A  0060  F284  F099   	movff	___lldiv@quotient+2,?___lldiv+2
 16015  008460  0060  F288  F09A   	movff	___lldiv@quotient+3,?___lldiv+3
 16016                           
 16017                           ; BSR set to: 0
 16018  008466  0012               	return		;funcret
 16019  008468                     __end_of___lldiv:
 16020                           	opt callstack 0
 16021                           
 16022 ;; *************** function _aCaptureOffGet *****************
 16023 ;; Defined at:
 16024 ;;		line 126 in file "aCapture.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;  sel             1    wreg     enum E16104
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;  sel             1   98[BANK1 ] enum E16104
 16029 ;; Return value:  Size  Location     Type
 16030 ;;                  2   96[BANK1 ] short 
 16031 ;; Registers used:
 16032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16033 ;; Tracked objects:
 16034 ;;		On entry : 3E/1
 16035 ;;		On exit  : 3C/0
 16036 ;;		Unchanged: 0/0
 16037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16038 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;Total ram usage:        3 bytes
 16043 ;; Hardware stack levels used:    1
 16044 ;; Hardware stack levels required when called:   26
 16045 ;; This function calls:
 16046 ;;		_printf
 16047 ;; This function is called by:
 16048 ;;		_flowChk
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           	psect	text33
 16053  009242                     __ptext33:
 16054                           	opt callstack 0
 16055  009242                     _aCaptureOffGet:
 16056                           	opt callstack 2
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;incstack = 0
 16060                           ;aCaptureOffGet@sel stored from wreg
 16061  009242  0101               	movlb	1	; () banked
 16062  009244  6F62               	movwf	aCaptureOffGet@sel& (0+255),b
 16063                           
 16064                           ;aCapture.c: 127:     if (sel == MainPSensor) {
 16065  009246  0101               	movlb	1	; () banked
 16066  009248  5162               	movf	aCaptureOffGet@sel& (0+255),w,b
 16067  00924A  A4D8               	btfss	status,2,c
 16068  00924C  D007               	goto	l18016
 16069                           
 16070                           ; BSR set to: 1
 16071                           ;aCapture.c: 128:         return mainPSensCal;
 16072  00924E  0060  F7D4  F160   	movff	_mainPSensCal,?_aCaptureOffGet
 16073  009254  0060  F7D8  F161   	movff	_mainPSensCal+1,?_aCaptureOffGet+1
 16074  00925A  0012               	return	
 16075  00925C                     l18016:
 16076                           
 16077                           ; BSR set to: 1
 16078  00925C  0562               	decf	aCaptureOffGet@sel& (0+255),w,b
 16079  00925E  A4D8               	btfss	status,2,c
 16080  009260  D007               	goto	l1963
 16081                           
 16082                           ; BSR set to: 1
 16083                           ;aCapture.c: 130:         return auxPSensCal;
 16084  009262  0060  FB98  F160   	movff	_auxPSensCal,?_aCaptureOffGet
 16085  009268  0060  FB9C  F161   	movff	_auxPSensCal+1,?_aCaptureOffGet+1
 16086  00926E  0012               	return	
 16087  009270                     l1963:
 16088                           
 16089                           ; BSR set to: 1
 16090                           ;aCapture.c: 132:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;print
      +                          f("Fatal %d",102);
 16091  009270  94BA               	bcf	186,2,c	;volatile
 16092  009272  96BC               	bcf	188,3,c	;volatile
 16093  009274  96BA               	bcf	186,3,c	;volatile
 16094                           
 16095                           ; BSR set to: 1
 16096  009276  0EB1               	movlw	low STR_28
 16097  009278  6F46               	movwf	printf@fmt& (0+255),b
 16098  00927A  0EFF               	movlw	high STR_28
 16099  00927C  6F47               	movwf	(printf@fmt+1)& (0+255),b
 16100  00927E  0E00               	movlw	0
 16101  009280  6F49               	movwf	(?_printf+3)& (0+255),b
 16102  009282  0E66               	movlw	102
 16103  009284  6F48               	movwf	(?_printf+2)& (0+255),b
 16104  009286  EC68  F04E         	call	_printf	;wreg free
 16105  00928A  0012               	return		;funcret
 16106  00928C                     __end_of_aCaptureOffGet:
 16107                           	opt callstack 0
 16108                           
 16109 ;; *************** function ___xxtofl *****************
 16110 ;; Defined at:
 16111 ;;		line 10 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  sign            1    wreg     unsigned char 
 16114 ;;  val             4   43[BANK0 ] long 
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;  sign            1   51[BANK0 ] unsigned char 
 16117 ;;  arg             4   53[BANK0 ] unsigned long 
 16118 ;;  exp             1   52[BANK0 ] unsigned char 
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  4   43[BANK0 ] unsigned char 
 16121 ;; Registers used:
 16122 ;;		wreg, status,2, status,0
 16123 ;; Tracked objects:
 16124 ;;		On entry : 3F/0
 16125 ;;		On exit  : 3F/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16132 ;;Total ram usage:       14 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; Hardware stack levels required when called:   17
 16135 ;; This function calls:
 16136 ;;		Nothing
 16137 ;; This function is called by:
 16138 ;;		_main
 16139 ;;		_flowChk
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text34
 16144  006F36                     __ptext34:
 16145                           	opt callstack 0
 16146  006F36                     ___xxtofl:
 16147                           	opt callstack 13
 16148                           
 16149                           ;incstack = 0
 16150                           ;___xxtofl@sign stored from wreg
 16151  006F36  6F93               	movwf	___xxtofl@sign& (0+255),b
 16152  006F38  0100               	movlb	0	; () banked
 16153  006F3A  5193               	movf	___xxtofl@sign& (0+255),w,b
 16154  006F3C  A4D8               	btfss	status,2,c
 16155                           
 16156                           ; BSR set to: 0
 16157  006F3E  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16158  006F40  D022               	goto	l3807
 16159                           
 16160                           ; BSR set to: 0
 16161  006F42  0060  F22C  F08F   	movff	___xxtofl@val,??___xxtofl
 16162  006F48  0060  F230  F090   	movff	___xxtofl@val+1,??___xxtofl+1
 16163  006F4E  0060  F234  F091   	movff	___xxtofl@val+2,??___xxtofl+2
 16164  006F54  0060  F238  F092   	movff	___xxtofl@val+3,??___xxtofl+3
 16165  006F5A  1F8F               	comf	??___xxtofl& (0+255),f,b
 16166  006F5C  1F90               	comf	(??___xxtofl+1)& (0+255),f,b
 16167  006F5E  1F91               	comf	(??___xxtofl+2)& (0+255),f,b
 16168  006F60  1F92               	comf	(??___xxtofl+3)& (0+255),f,b
 16169  006F62  2B8F               	incf	??___xxtofl& (0+255),f,b
 16170  006F64  0E00               	movlw	0
 16171  006F66  2390               	addwfc	(??___xxtofl+1)& (0+255),f,b
 16172  006F68  2391               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16173  006F6A  2392               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16174  006F6C  0060  F23C  F095   	movff	??___xxtofl,___xxtofl@arg
 16175  006F72  0060  F240  F096   	movff	??___xxtofl+1,___xxtofl@arg+1
 16176  006F78  0060  F244  F097   	movff	??___xxtofl+2,___xxtofl@arg+2
 16177  006F7E  0060  F248  F098   	movff	??___xxtofl+3,___xxtofl@arg+3
 16178  006F84  D00C               	goto	l18114
 16179  006F86                     l3807:
 16180                           
 16181                           ; BSR set to: 0
 16182  006F86  0060  F22C  F095   	movff	___xxtofl@val,___xxtofl@arg
 16183  006F8C  0060  F230  F096   	movff	___xxtofl@val+1,___xxtofl@arg+1
 16184  006F92  0060  F234  F097   	movff	___xxtofl@val+2,___xxtofl@arg+2
 16185  006F98  0060  F238  F098   	movff	___xxtofl@val+3,___xxtofl@arg+3
 16186  006F9E                     l18114:
 16187                           
 16188                           ; BSR set to: 0
 16189  006F9E  518B               	movf	___xxtofl@val& (0+255),w,b
 16190  006FA0  118C               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16191  006FA2  118D               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16192  006FA4  118E               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16193  006FA6  A4D8               	btfss	status,2,c
 16194  006FA8  D009               	goto	l18120
 16195                           
 16196                           ; BSR set to: 0
 16197  006FAA  0E00               	movlw	0
 16198  006FAC  6F8B               	movwf	?___xxtofl& (0+255),b
 16199  006FAE  0E00               	movlw	0
 16200  006FB0  6F8C               	movwf	(?___xxtofl+1)& (0+255),b
 16201  006FB2  0E00               	movlw	0
 16202  006FB4  6F8D               	movwf	(?___xxtofl+2)& (0+255),b
 16203  006FB6  0E00               	movlw	0
 16204  006FB8  6F8E               	movwf	(?___xxtofl+3)& (0+255),b
 16205  006FBA  0012               	return	
 16206  006FBC                     l18120:
 16207                           
 16208                           ; BSR set to: 0
 16209  006FBC  0E96               	movlw	150
 16210  006FBE  6F94               	movwf	___xxtofl@exp& (0+255),b
 16211  006FC0  D006               	goto	l18124
 16212  006FC2                     l18122:
 16213                           
 16214                           ; BSR set to: 0
 16215  006FC2  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16216  006FC4  90D8               	bcf	status,0,c
 16217  006FC6  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16218  006FC8  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16219  006FCA  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16220  006FCC  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16221  006FCE                     l18124:
 16222                           
 16223                           ; BSR set to: 0
 16224  006FCE  0E00               	movlw	0
 16225  006FD0  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16226  006FD2  6F8F               	movwf	??___xxtofl& (0+255),b
 16227  006FD4  0E00               	movlw	0
 16228  006FD6  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16229  006FD8  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16230  006FDA  0E00               	movlw	0
 16231  006FDC  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16232  006FDE  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16233  006FE0  0EFE               	movlw	254
 16234  006FE2  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16235  006FE4  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16236  006FE6  518F               	movf	??___xxtofl& (0+255),w,b
 16237  006FE8  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16238  006FEA  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16239  006FEC  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16240  006FEE  B4D8               	btfsc	status,2,c
 16241  006FF0  D00D               	goto	l3814
 16242  006FF2  D7E7               	goto	l18122
 16243  006FF4                     l18126:
 16244                           
 16245                           ; BSR set to: 0
 16246  006FF4  2B94               	incf	___xxtofl@exp& (0+255),f,b
 16247                           
 16248                           ; BSR set to: 0
 16249  006FF6  0E01               	movlw	1
 16250  006FF8  2795               	addwf	___xxtofl@arg& (0+255),f,b
 16251  006FFA  0E00               	movlw	0
 16252  006FFC  2396               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16253  006FFE  2397               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16254  007000  2398               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16255                           
 16256                           ; BSR set to: 0
 16257  007002  90D8               	bcf	status,0,c
 16258  007004  3398               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16259  007006  3397               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16260  007008  3396               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16261  00700A  3395               	rrcf	___xxtofl@arg& (0+255),f,b
 16262  00700C                     l3814:
 16263                           
 16264                           ; BSR set to: 0
 16265  00700C  0E00               	movlw	0
 16266  00700E  1595               	andwf	___xxtofl@arg& (0+255),w,b
 16267  007010  6F8F               	movwf	??___xxtofl& (0+255),b
 16268  007012  0E00               	movlw	0
 16269  007014  1596               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16270  007016  6F90               	movwf	(??___xxtofl+1)& (0+255),b
 16271  007018  0E00               	movlw	0
 16272  00701A  1597               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16273  00701C  6F91               	movwf	(??___xxtofl+2)& (0+255),b
 16274  00701E  0EFF               	movlw	255
 16275  007020  1598               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16276  007022  6F92               	movwf	(??___xxtofl+3)& (0+255),b
 16277  007024  518F               	movf	??___xxtofl& (0+255),w,b
 16278  007026  1190               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16279  007028  1191               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16280  00702A  1192               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16281  00702C  B4D8               	btfsc	status,2,c
 16282  00702E  D007               	goto	l18134
 16283  007030  D7E1               	goto	l18126
 16284  007032                     l18132:
 16285                           
 16286                           ; BSR set to: 0
 16287  007032  0794               	decf	___xxtofl@exp& (0+255),f,b
 16288  007034  90D8               	bcf	status,0,c
 16289  007036  3795               	rlcf	___xxtofl@arg& (0+255),f,b
 16290  007038  3796               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16291  00703A  3797               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16292  00703C  3798               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16293  00703E                     l18134:
 16294                           
 16295                           ; BSR set to: 0
 16296  00703E  BF97               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16297  007040  D003               	goto	u18590
 16298                           
 16299                           ; BSR set to: 0
 16300  007042  0E02               	movlw	2
 16301  007044  6194               	cpfslt	___xxtofl@exp& (0+255),b
 16302  007046  D7F5               	goto	l18132
 16303  007048                     u18590:
 16304                           
 16305                           ; BSR set to: 0
 16306  007048  A194               	btfss	___xxtofl@exp& (0+255),0,b
 16307                           
 16308                           ; BSR set to: 0
 16309  00704A  9F97               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16310                           
 16311                           ; BSR set to: 0
 16312  00704C  90D8               	bcf	status,0,c
 16313  00704E  3394               	rrcf	___xxtofl@exp& (0+255),f,b
 16314                           
 16315                           ; BSR set to: 0
 16316  007050  0060  F250  F08F   	movff	___xxtofl@exp,??___xxtofl
 16317  007056  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16318  007058  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16319  00705A  6B92               	clrf	(??___xxtofl+3)& (0+255),b
 16320  00705C  0060  F23C  F092   	movff	??___xxtofl,??___xxtofl+3
 16321  007062  6B91               	clrf	(??___xxtofl+2)& (0+255),b
 16322  007064  6B90               	clrf	(??___xxtofl+1)& (0+255),b
 16323  007066  6B8F               	clrf	??___xxtofl& (0+255),b
 16324  007068  518F               	movf	??___xxtofl& (0+255),w,b
 16325  00706A  1395               	iorwf	___xxtofl@arg& (0+255),f,b
 16326  00706C  5190               	movf	(??___xxtofl+1)& (0+255),w,b
 16327  00706E  1396               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16328  007070  5191               	movf	(??___xxtofl+2)& (0+255),w,b
 16329  007072  1397               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16330  007074  5192               	movf	(??___xxtofl+3)& (0+255),w,b
 16331  007076  1398               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16332                           
 16333                           ; BSR set to: 0
 16334  007078  5193               	movf	___xxtofl@sign& (0+255),w,b
 16335  00707A  A4D8               	btfss	status,2,c
 16336                           
 16337                           ; BSR set to: 0
 16338  00707C  AF8E               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16339  00707E  D001               	goto	l18150
 16340                           
 16341                           ; BSR set to: 0
 16342  007080  8F98               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16343  007082                     l18150:
 16344                           
 16345                           ; BSR set to: 0
 16346  007082  0060  F254  F08B   	movff	___xxtofl@arg,?___xxtofl
 16347  007088  0060  F258  F08C   	movff	___xxtofl@arg+1,?___xxtofl+1
 16348  00708E  0060  F25C  F08D   	movff	___xxtofl@arg+2,?___xxtofl+2
 16349  007094  0060  F260  F08E   	movff	___xxtofl@arg+3,?___xxtofl+3
 16350                           
 16351                           ; BSR set to: 0
 16352  00709A  0012               	return		;funcret
 16353  00709C                     __end_of___xxtofl:
 16354                           	opt callstack 0
 16355                           
 16356 ;; *************** function ___lmul *****************
 16357 ;; Defined at:
 16358 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  multiplier      4   43[BANK0 ] unsigned long 
 16361 ;;  multiplicand    4   47[BANK0 ] unsigned long 
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;  product         4   51[BANK0 ] unsigned long 
 16364 ;; Return value:  Size  Location     Type
 16365 ;;                  4   43[BANK0 ] unsigned long 
 16366 ;; Registers used:
 16367 ;;		wreg, status,2, status,0
 16368 ;; Tracked objects:
 16369 ;;		On entry : 3F/0
 16370 ;;		On exit  : 3F/0
 16371 ;;		Unchanged: 0/0
 16372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16373 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;Total ram usage:       12 bytes
 16378 ;; Hardware stack levels used:    1
 16379 ;; Hardware stack levels required when called:   17
 16380 ;; This function calls:
 16381 ;;		Nothing
 16382 ;; This function is called by:
 16383 ;;		_inspOSMeasure
 16384 ;;		_pressureSensorChk
 16385 ;;		_flowChk
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text35
 16390  008C8A                     __ptext35:
 16391                           	opt callstack 0
 16392  008C8A                     ___lmul:
 16393                           	opt callstack 12
 16394                           
 16395                           ; BSR set to: 0
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;incstack = 0
 16399  008C8A  0E00               	movlw	0
 16400  008C8C  6F93               	movwf	___lmul@product& (0+255),b
 16401  008C8E  0E00               	movlw	0
 16402  008C90  6F94               	movwf	(___lmul@product+1)& (0+255),b
 16403  008C92  0E00               	movlw	0
 16404  008C94  6F95               	movwf	(___lmul@product+2)& (0+255),b
 16405  008C96  0E00               	movlw	0
 16406  008C98  6F96               	movwf	(___lmul@product+3)& (0+255),b
 16407  008C9A                     l18056:
 16408                           
 16409                           ; BSR set to: 0
 16410  008C9A  A18B               	btfss	___lmul@multiplier& (0+255),0,b
 16411  008C9C  D008               	goto	l18060
 16412                           
 16413                           ; BSR set to: 0
 16414  008C9E  518F               	movf	___lmul@multiplicand& (0+255),w,b
 16415  008CA0  2793               	addwf	___lmul@product& (0+255),f,b
 16416  008CA2  5190               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16417  008CA4  2394               	addwfc	(___lmul@product+1)& (0+255),f,b
 16418  008CA6  5191               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16419  008CA8  2395               	addwfc	(___lmul@product+2)& (0+255),f,b
 16420  008CAA  5192               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16421  008CAC  2396               	addwfc	(___lmul@product+3)& (0+255),f,b
 16422  008CAE                     l18060:
 16423                           
 16424                           ; BSR set to: 0
 16425  008CAE  90D8               	bcf	status,0,c
 16426  008CB0  378F               	rlcf	___lmul@multiplicand& (0+255),f,b
 16427  008CB2  3790               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16428  008CB4  3791               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16429  008CB6  3792               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16430                           
 16431                           ; BSR set to: 0
 16432  008CB8  90D8               	bcf	status,0,c
 16433  008CBA  338E               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16434  008CBC  338D               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16435  008CBE  338C               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16436  008CC0  338B               	rrcf	___lmul@multiplier& (0+255),f,b
 16437  008CC2  518B               	movf	___lmul@multiplier& (0+255),w,b
 16438  008CC4  118C               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16439  008CC6  118D               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16440  008CC8  118E               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16441  008CCA  A4D8               	btfss	status,2,c
 16442  008CCC  D7E6               	goto	l18056
 16443                           
 16444                           ; BSR set to: 0
 16445  008CCE  0060  F24C  F08B   	movff	___lmul@product,?___lmul
 16446  008CD4  0060  F250  F08C   	movff	___lmul@product+1,?___lmul+1
 16447  008CDA  0060  F254  F08D   	movff	___lmul@product+2,?___lmul+2
 16448  008CE0  0060  F258  F08E   	movff	___lmul@product+3,?___lmul+3
 16449                           
 16450                           ; BSR set to: 0
 16451  008CE6  0012               	return		;funcret
 16452  008CE8                     __end_of___lmul:
 16453                           	opt callstack 0
 16454                           
 16455 ;; *************** function ___flge *****************
 16456 ;; Defined at:
 16457 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;  ff1             4   57[BANK0 ] unsigned long 
 16460 ;;  ff2             4   61[BANK0 ] unsigned long 
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;		None
 16463 ;; Return value:  Size  Location     Type
 16464 ;;		None               void
 16465 ;; Registers used:
 16466 ;;		wreg, status,2, status,0
 16467 ;; Tracked objects:
 16468 ;;		On entry : 3F/0
 16469 ;;		On exit  : 3F/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;Total ram usage:       12 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:   17
 16479 ;; This function calls:
 16480 ;;		Nothing
 16481 ;; This function is called by:
 16482 ;;		_flowChk
 16483 ;; This function uses a non-reentrant model
 16484 ;;
 16485                           
 16486                           	psect	text36
 16487  007ABC                     __ptext36:
 16488                           	opt callstack 0
 16489  007ABC                     ___flge:
 16490                           	opt callstack 11
 16491                           
 16492                           ; BSR set to: 0
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;incstack = 0
 16496  007ABC  0E00               	movlw	0
 16497  007ABE  1599               	andwf	___flge@ff1& (0+255),w,b
 16498  007AC0  6FA1               	movwf	??___flge& (0+255),b
 16499  007AC2  0E00               	movlw	0
 16500  007AC4  159A               	andwf	(___flge@ff1+1)& (0+255),w,b
 16501  007AC6  6FA2               	movwf	(??___flge+1)& (0+255),b
 16502  007AC8  0E80               	movlw	128
 16503  007ACA  159B               	andwf	(___flge@ff1+2)& (0+255),w,b
 16504  007ACC  6FA3               	movwf	(??___flge+2)& (0+255),b
 16505  007ACE  0E7F               	movlw	127
 16506  007AD0  159C               	andwf	(___flge@ff1+3)& (0+255),w,b
 16507  007AD2  6FA4               	movwf	(??___flge+3)& (0+255),b
 16508  007AD4  51A1               	movf	??___flge& (0+255),w,b
 16509  007AD6  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16510  007AD8  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16511  007ADA  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16512  007ADC  A4D8               	btfss	status,2,c
 16513  007ADE  D008               	goto	l18068
 16514                           
 16515                           ; BSR set to: 0
 16516  007AE0  0E00               	movlw	0
 16517  007AE2  6F99               	movwf	___flge@ff1& (0+255),b
 16518  007AE4  0E00               	movlw	0
 16519  007AE6  6F9A               	movwf	(___flge@ff1+1)& (0+255),b
 16520  007AE8  0E00               	movlw	0
 16521  007AEA  6F9B               	movwf	(___flge@ff1+2)& (0+255),b
 16522  007AEC  0E00               	movlw	0
 16523  007AEE  6F9C               	movwf	(___flge@ff1+3)& (0+255),b
 16524  007AF0                     l18068:
 16525                           
 16526                           ; BSR set to: 0
 16527  007AF0  0E00               	movlw	0
 16528  007AF2  159D               	andwf	___flge@ff2& (0+255),w,b
 16529  007AF4  6FA1               	movwf	??___flge& (0+255),b
 16530  007AF6  0E00               	movlw	0
 16531  007AF8  159E               	andwf	(___flge@ff2+1)& (0+255),w,b
 16532  007AFA  6FA2               	movwf	(??___flge+1)& (0+255),b
 16533  007AFC  0E80               	movlw	128
 16534  007AFE  159F               	andwf	(___flge@ff2+2)& (0+255),w,b
 16535  007B00  6FA3               	movwf	(??___flge+2)& (0+255),b
 16536  007B02  0E7F               	movlw	127
 16537  007B04  15A0               	andwf	(___flge@ff2+3)& (0+255),w,b
 16538  007B06  6FA4               	movwf	(??___flge+3)& (0+255),b
 16539  007B08  51A1               	movf	??___flge& (0+255),w,b
 16540  007B0A  11A2               	iorwf	(??___flge+1)& (0+255),w,b
 16541  007B0C  11A3               	iorwf	(??___flge+2)& (0+255),w,b
 16542  007B0E  11A4               	iorwf	(??___flge+3)& (0+255),w,b
 16543  007B10  A4D8               	btfss	status,2,c
 16544  007B12  D008               	goto	l18072
 16545                           
 16546                           ; BSR set to: 0
 16547  007B14  0E00               	movlw	0
 16548  007B16  6F9D               	movwf	___flge@ff2& (0+255),b
 16549  007B18  0E00               	movlw	0
 16550  007B1A  6F9E               	movwf	(___flge@ff2+1)& (0+255),b
 16551  007B1C  0E00               	movlw	0
 16552  007B1E  6F9F               	movwf	(___flge@ff2+2)& (0+255),b
 16553  007B20  0E00               	movlw	0
 16554  007B22  6FA0               	movwf	(___flge@ff2+3)& (0+255),b
 16555  007B24                     l18072:
 16556                           
 16557                           ; BSR set to: 0
 16558  007B24  AF9C               	btfss	(___flge@ff1+3)& (0+255),7,b
 16559  007B26  D009               	goto	l18076
 16560                           
 16561                           ; BSR set to: 0
 16562  007B28  6D99               	negf	___flge@ff1& (0+255),b
 16563  007B2A  1F9A               	comf	(___flge@ff1+1)& (0+255),f,b
 16564  007B2C  B0D8               	btfsc	status,0,c
 16565  007B2E  2B9A               	incf	(___flge@ff1+1)& (0+255),f,b
 16566  007B30  1F9B               	comf	(___flge@ff1+2)& (0+255),f,b
 16567  007B32  B0D8               	btfsc	status,0,c
 16568  007B34  2B9B               	incf	(___flge@ff1+2)& (0+255),f,b
 16569  007B36  0E80               	movlw	128
 16570  007B38  579C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 16571  007B3A                     l18076:
 16572                           
 16573                           ; BSR set to: 0
 16574  007B3A  AFA0               	btfss	(___flge@ff2+3)& (0+255),7,b
 16575  007B3C  D009               	goto	l3417
 16576                           
 16577                           ; BSR set to: 0
 16578  007B3E  6D9D               	negf	___flge@ff2& (0+255),b
 16579  007B40  1F9E               	comf	(___flge@ff2+1)& (0+255),f,b
 16580  007B42  B0D8               	btfsc	status,0,c
 16581  007B44  2B9E               	incf	(___flge@ff2+1)& (0+255),f,b
 16582  007B46  1F9F               	comf	(___flge@ff2+2)& (0+255),f,b
 16583  007B48  B0D8               	btfsc	status,0,c
 16584  007B4A  2B9F               	incf	(___flge@ff2+2)& (0+255),f,b
 16585  007B4C  0E80               	movlw	128
 16586  007B4E  57A0               	subfwb	(___flge@ff2+3)& (0+255),f,b
 16587  007B50                     l3417:
 16588                           
 16589                           ; BSR set to: 0
 16590  007B50  0E00               	movlw	0
 16591  007B52  1B99               	xorwf	___flge@ff1& (0+255),f,b
 16592  007B54  0E00               	movlw	0
 16593  007B56  1B9A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 16594  007B58  0E00               	movlw	0
 16595  007B5A  1B9B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 16596  007B5C  0E80               	movlw	128
 16597  007B5E  1B9C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 16598  007B60  0E00               	movlw	0
 16599  007B62  1B9D               	xorwf	___flge@ff2& (0+255),f,b
 16600  007B64  0E00               	movlw	0
 16601  007B66  1B9E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 16602  007B68  0E00               	movlw	0
 16603  007B6A  1B9F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 16604  007B6C  0E80               	movlw	128
 16605  007B6E  1BA0               	xorwf	(___flge@ff2+3)& (0+255),f,b
 16606  007B70  519D               	movf	___flge@ff2& (0+255),w,b
 16607  007B72  5D99               	subwf	___flge@ff1& (0+255),w,b
 16608  007B74  519E               	movf	(___flge@ff2+1)& (0+255),w,b
 16609  007B76  599A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 16610  007B78  519F               	movf	(___flge@ff2+2)& (0+255),w,b
 16611  007B7A  599B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 16612  007B7C  51A0               	movf	(___flge@ff2+3)& (0+255),w,b
 16613  007B7E  599C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 16614  007B80  B0D8               	btfsc	status,0,c
 16615  007B82  D002               	goto	l18082
 16616                           
 16617                           ; BSR set to: 0
 16618  007B84  90D8               	bcf	status,0,c
 16619  007B86  0012               	return	
 16620  007B88                     l18082:
 16621                           
 16622                           ; BSR set to: 0
 16623  007B88  80D8               	bsf	status,0,c
 16624                           
 16625                           ; BSR set to: 0
 16626  007B8A  0012               	return		;funcret
 16627  007B8C                     __end_of___flge:
 16628                           	opt callstack 0
 16629                           
 16630 ;; *************** function _SYSTEM_Initialize *****************
 16631 ;; Defined at:
 16632 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;		None
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;		None
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  1    wreg      void 
 16639 ;; Registers used:
 16640 ;;		wreg, status,2, status,0, cstack
 16641 ;; Tracked objects:
 16642 ;;		On entry : 3F/3
 16643 ;;		On exit  : 3F/3D
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16650 ;;Total ram usage:        0 bytes
 16651 ;; Hardware stack levels used:    1
 16652 ;; Hardware stack levels required when called:   19
 16653 ;; This function calls:
 16654 ;;		_ADCC_Initialize
 16655 ;;		_FVR_Initialize
 16656 ;;		_I2C2_Initialize
 16657 ;;		_INTERRUPT_Initialize
 16658 ;;		_OSCILLATOR_Initialize
 16659 ;;		_PIN_MANAGER_Initialize
 16660 ;;		_PMD_Initialize
 16661 ;;		_TMR0_Initialize
 16662 ;;		_TMR1_Initialize
 16663 ;;		_TMR2_Initialize
 16664 ;;		_TMR4_Initialize
 16665 ;;		_TMR6_Initialize
 16666 ;;		_UART1_Initialize
 16667 ;; This function is called by:
 16668 ;;		_main
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           	psect	text37
 16673  009706                     __ptext37:
 16674                           	opt callstack 0
 16675  009706                     _SYSTEM_Initialize:
 16676                           	opt callstack 11
 16677                           
 16678                           ; BSR set to: 3
 16679                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;incstack = 0
 16683  009706  EC66  F052         	call	_INTERRUPT_Initialize	;wreg free
 16684                           
 16685                           ; BSR set to: 3
 16686                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16687  00970A  EC2B  F04F         	call	_PMD_Initialize	;wreg free
 16688                           
 16689                           ; BSR set to: 57
 16690                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16691  00970E  EC91  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
 16692                           
 16693                           ; BSR set to: 58
 16694                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16695  009712  EC6F  F050         	call	_OSCILLATOR_Initialize	;wreg free
 16696                           
 16697                           ; BSR set to: 57
 16698                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 16699  009716  EC25  F052         	call	_FVR_Initialize	;wreg free
 16700                           
 16701                           ; BSR set to: 62
 16702                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 16703  00971A  ECB1  F04D         	call	_TMR6_Initialize	;wreg free
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 16707  00971E  ECAD  F044         	call	_ADCC_Initialize	;wreg free
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
 16711  009722  ECC8  F04D         	call	_TMR4_Initialize	;wreg free
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 16715  009726  ECDF  F04D         	call	_TMR2_Initialize	;wreg free
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;mcc_generated_files/mcc.c: 61:     TMR1_Initialize();
 16719  00972A  EC37  F04A         	call	_TMR1_Initialize	;wreg free
 16720                           
 16721                           ; BSR set to: 2
 16722                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 16723  00972E  EC9D  F050         	call	_TMR0_Initialize	;wreg free
 16724                           
 16725                           ; BSR set to: 57
 16726                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 16727  009732  ECFF  F042         	call	_UART1_Initialize	;wreg free
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;mcc_generated_files/mcc.c: 64:     I2C2_Initialize();
 16731  009736  EC3D  F04F         	call	_I2C2_Initialize	;wreg free
 16732                           
 16733                           ; BSR set to: 61
 16734  00973A  0012               	return		;funcret
 16735  00973C                     __end_of_SYSTEM_Initialize:
 16736                           	opt callstack 0
 16737                           
 16738 ;; *************** function _UART1_Initialize *****************
 16739 ;; Defined at:
 16740 ;;		line 81 in file "mcc_generated_files/uart1.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;		None
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;		None
 16745 ;; Return value:  Size  Location     Type
 16746 ;;                  1    wreg      void 
 16747 ;; Registers used:
 16748 ;;		wreg, status,2, status,0, cstack
 16749 ;; Tracked objects:
 16750 ;;		On entry : 3F/39
 16751 ;;		On exit  : 3F/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16758 ;;Total ram usage:        0 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:   18
 16761 ;; This function calls:
 16762 ;;		_UART1_SetErrorHandler
 16763 ;;		_UART1_SetFramingErrorHandler
 16764 ;;		_UART1_SetOverrunErrorHandler
 16765 ;;		_UART1_SetTxInterruptHandler
 16766 ;; This function is called by:
 16767 ;;		_SYSTEM_Initialize
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           
 16771                           	psect	text38
 16772  0085FE                     __ptext38:
 16773                           	opt callstack 0
 16774  0085FE                     _UART1_Initialize:
 16775                           	opt callstack 11
 16776                           
 16777                           ; BSR set to: 57
 16778                           ;mcc_generated_files/uart1.c: 84:     PIE3bits.U1TXIE = 0;
 16779                           
 16780                           ; BSR set to: 61
 16781                           ;incstack = 0
 16782  0085FE  9993               	bcf	147,4,b	;volatile
 16783                           
 16784                           ; BSR set to: 57
 16785                           ;mcc_generated_files/uart1.c: 85:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 16786  008600  0E7C               	movlw	low _UART1_Transmit_ISR
 16787  008602  0100               	movlb	0	; () banked
 16788  008604  6F8B               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 16789  008606  0E99               	movlw	high _UART1_Transmit_ISR
 16790  008608  6F8C               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 16791  00860A  EC5D  F051         	call	_UART1_SetTxInterruptHandler	;wreg free
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;mcc_generated_files/uart1.c: 90:     U1P1L = 0x00;
 16795  00860E  0E00               	movlw	0
 16796  008610  013D               	movlb	61	; () banked
 16797  008612  6FEC               	movwf	236,b	;volatile
 16798                           
 16799                           ; BSR set to: 61
 16800                           ;mcc_generated_files/uart1.c: 93:     U1P1H = 0x00;
 16801  008614  0E00               	movlw	0
 16802  008616  6FED               	movwf	237,b	;volatile
 16803                           
 16804                           ; BSR set to: 61
 16805                           ;mcc_generated_files/uart1.c: 96:     U1P2L = 0x00;
 16806  008618  0E00               	movlw	0
 16807  00861A  6FEE               	movwf	238,b	;volatile
 16808                           
 16809                           ; BSR set to: 61
 16810                           ;mcc_generated_files/uart1.c: 99:     U1P2H = 0x00;
 16811  00861C  0E00               	movlw	0
 16812  00861E  6FEF               	movwf	239,b	;volatile
 16813                           
 16814                           ; BSR set to: 61
 16815                           ;mcc_generated_files/uart1.c: 102:     U1P3L = 0x00;
 16816  008620  0E00               	movlw	0
 16817  008622  6FF0               	movwf	240,b	;volatile
 16818                           
 16819                           ; BSR set to: 61
 16820                           ;mcc_generated_files/uart1.c: 105:     U1P3H = 0x00;
 16821  008624  0E00               	movlw	0
 16822  008626  6FF1               	movwf	241,b	;volatile
 16823                           
 16824                           ; BSR set to: 61
 16825                           ;mcc_generated_files/uart1.c: 108:     U1CON0 = 0xB0;
 16826  008628  0EB0               	movlw	176
 16827  00862A  6FF2               	movwf	242,b	;volatile
 16828                           
 16829                           ; BSR set to: 61
 16830                           ;mcc_generated_files/uart1.c: 111:     U1CON1 = 0x80;
 16831  00862C  0E80               	movlw	128
 16832  00862E  6FF3               	movwf	243,b	;volatile
 16833                           
 16834                           ; BSR set to: 61
 16835                           ;mcc_generated_files/uart1.c: 114:     U1CON2 = 0x00;
 16836  008630  0E00               	movlw	0
 16837  008632  6FF4               	movwf	244,b	;volatile
 16838                           
 16839                           ; BSR set to: 61
 16840                           ;mcc_generated_files/uart1.c: 117:     U1BRGL = 0x22;
 16841  008634  0E22               	movlw	34
 16842  008636  6FF5               	movwf	245,b	;volatile
 16843                           
 16844                           ; BSR set to: 61
 16845                           ;mcc_generated_files/uart1.c: 120:     U1BRGH = 0x00;
 16846  008638  0E00               	movlw	0
 16847  00863A  6FF6               	movwf	246,b	;volatile
 16848                           
 16849                           ; BSR set to: 61
 16850                           ;mcc_generated_files/uart1.c: 123:     U1FIFO = 0x00;
 16851  00863C  0E00               	movlw	0
 16852  00863E  6FF7               	movwf	247,b	;volatile
 16853                           
 16854                           ; BSR set to: 61
 16855                           ;mcc_generated_files/uart1.c: 126:     U1UIR = 0x00;
 16856  008640  0E00               	movlw	0
 16857  008642  6FF8               	movwf	248,b	;volatile
 16858                           
 16859                           ; BSR set to: 61
 16860                           ;mcc_generated_files/uart1.c: 129:     U1ERRIR = 0x00;
 16861  008644  0E00               	movlw	0
 16862  008646  6FF9               	movwf	249,b	;volatile
 16863                           
 16864                           ; BSR set to: 61
 16865                           ;mcc_generated_files/uart1.c: 132:     U1ERRIE = 0x00;
 16866  008648  0E00               	movlw	0
 16867  00864A  6FFA               	movwf	250,b	;volatile
 16868                           
 16869                           ; BSR set to: 61
 16870                           ;mcc_generated_files/uart1.c: 135:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 16871  00864C  0E00               	movlw	0
 16872  00864E  0100               	movlb	0	; () banked
 16873  008650  6F8B               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 16874  008652  0E00               	movlw	0
 16875  008654  6F8C               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 16876  008656  EC6B  F051         	call	_UART1_SetFramingErrorHandler	;wreg free
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;mcc_generated_files/uart1.c: 136:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 16880  00865A  0E00               	movlw	0
 16881  00865C  6F8B               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 16882  00865E  0E00               	movlw	0
 16883  008660  6F8C               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 16884  008662  EC64  F051         	call	_UART1_SetOverrunErrorHandler	;wreg free
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;mcc_generated_files/uart1.c: 137:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 16888  008666  0E00               	movlw	0
 16889  008668  6F8B               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 16890  00866A  0E00               	movlw	0
 16891  00866C  6F8C               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 16892  00866E  EC72  F051         	call	_UART1_SetErrorHandler	;wreg free
 16893                           
 16894                           ;mcc_generated_files/uart1.c: 139:     uart1RxLastError.status = 0;
 16895  008672  0E00               	movlw	0
 16896  008674  6FCD               	movwf	_uart1RxLastError& (0+255),b	;volatile
 16897                           
 16898                           ;mcc_generated_files/uart1.c: 142:     uart1TxHead = 0;
 16899  008676  0E00               	movlw	0
 16900  008678  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 16901                           
 16902                           ;mcc_generated_files/uart1.c: 143:     uart1TxTail = 0;
 16903  00867A  0E00               	movlw	0
 16904  00867C  6FCE               	movwf	_uart1TxTail& (0+255),b	;volatile
 16905                           
 16906                           ;mcc_generated_files/uart1.c: 144:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 16907  00867E  0E40               	movlw	64
 16908  008680  6FD4               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 16909                           
 16910                           ; BSR set to: 0
 16911  008682  0012               	return		;funcret
 16912  008684                     __end_of_UART1_Initialize:
 16913                           	opt callstack 0
 16914                           
 16915 ;; *************** function _UART1_SetTxInterruptHandler *****************
 16916 ;; Defined at:
 16917 ;;		line 260 in file "mcc_generated_files/uart1.c"
 16918 ;; Parameters:    Size  Location     Type
 16919 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 16920 ;;		 -> UART1_Transmit_ISR(1), 
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;		None
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg, status,2, status,0
 16927 ;; Tracked objects:
 16928 ;;		On entry : 3F/0
 16929 ;;		On exit  : 3F/0
 16930 ;;		Unchanged: 3F/0
 16931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16935 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16936 ;;Total ram usage:        2 bytes
 16937 ;; Hardware stack levels used:    1
 16938 ;; Hardware stack levels required when called:   17
 16939 ;; This function calls:
 16940 ;;		Nothing
 16941 ;; This function is called by:
 16942 ;;		_UART1_Initialize
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           	psect	text39
 16947  00A2BA                     __ptext39:
 16948                           	opt callstack 0
 16949  00A2BA                     _UART1_SetTxInterruptHandler:
 16950                           	opt callstack 11
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;mcc_generated_files/uart1.c: 261:     UART1_TxInterruptHandler = InterruptHandler;
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;incstack = 0
 16957  00A2BA  0060  F22C  F2F6   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 16958  00A2C0  0060  F230  F2F7   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 16959                           
 16960                           ; BSR set to: 0
 16961  00A2C6  0012               	return		;funcret
 16962  00A2C8                     __end_of_UART1_SetTxInterruptHandler:
 16963                           	opt callstack 0
 16964                           
 16965 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 16966 ;; Defined at:
 16967 ;;		line 249 in file "mcc_generated_files/uart1.c"
 16968 ;; Parameters:    Size  Location     Type
 16969 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 16970 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;		None
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      void 
 16975 ;; Registers used:
 16976 ;;		wreg, status,2, status,0
 16977 ;; Tracked objects:
 16978 ;;		On entry : 3F/0
 16979 ;;		On exit  : 3F/0
 16980 ;;		Unchanged: 3F/0
 16981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;Total ram usage:        2 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:   17
 16989 ;; This function calls:
 16990 ;;		Nothing
 16991 ;; This function is called by:
 16992 ;;		_UART1_Initialize
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           	psect	text40
 16997  00A2C8                     __ptext40:
 16998                           	opt callstack 0
 16999  00A2C8                     _UART1_SetOverrunErrorHandler:
 17000                           	opt callstack 11
 17001                           
 17002                           ; BSR set to: 0
 17003                           ;mcc_generated_files/uart1.c: 250:     UART1_OverrunErrorHandler = interruptHandler;
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;incstack = 0
 17007  00A2C8  0060  F22C  F2F2   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 17008  00A2CE  0060  F230  F2F3   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 17009                           
 17010                           ; BSR set to: 0
 17011  00A2D4  0012               	return		;funcret
 17012  00A2D6                     __end_of_UART1_SetOverrunErrorHandler:
 17013                           	opt callstack 0
 17014                           
 17015 ;; *************** function _UART1_SetFramingErrorHandler *****************
 17016 ;; Defined at:
 17017 ;;		line 245 in file "mcc_generated_files/uart1.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17020 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;		None
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      void 
 17025 ;; Registers used:
 17026 ;;		wreg, status,2, status,0
 17027 ;; Tracked objects:
 17028 ;;		On entry : 3F/0
 17029 ;;		On exit  : 3F/0
 17030 ;;		Unchanged: 3F/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17036 ;;Total ram usage:        2 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:   17
 17039 ;; This function calls:
 17040 ;;		Nothing
 17041 ;; This function is called by:
 17042 ;;		_UART1_Initialize
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text41
 17047  00A2D6                     __ptext41:
 17048                           	opt callstack 0
 17049  00A2D6                     _UART1_SetFramingErrorHandler:
 17050                           	opt callstack 11
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;mcc_generated_files/uart1.c: 246:     UART1_FramingErrorHandler = interruptHandler;
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;incstack = 0
 17057  00A2D6  0060  F22C  F2F4   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 17058  00A2DC  0060  F230  F2F5   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 17059                           
 17060                           ; BSR set to: 0
 17061  00A2E2  0012               	return		;funcret
 17062  00A2E4                     __end_of_UART1_SetFramingErrorHandler:
 17063                           	opt callstack 0
 17064                           
 17065 ;; *************** function _UART1_SetErrorHandler *****************
 17066 ;; Defined at:
 17067 ;;		line 253 in file "mcc_generated_files/uart1.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;  interruptHan    2   43[BANK0 ] PTR FTN()void 
 17070 ;;		 -> UART1_DefaultErrorHandler(1), 
 17071 ;; Auto vars:     Size  Location     Type
 17072 ;;		None
 17073 ;; Return value:  Size  Location     Type
 17074 ;;                  1    wreg      void 
 17075 ;; Registers used:
 17076 ;;		wreg, status,2, status,0
 17077 ;; Tracked objects:
 17078 ;;		On entry : 3F/0
 17079 ;;		On exit  : 3F/0
 17080 ;;		Unchanged: 3F/0
 17081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;Total ram usage:        2 bytes
 17087 ;; Hardware stack levels used:    1
 17088 ;; Hardware stack levels required when called:   17
 17089 ;; This function calls:
 17090 ;;		Nothing
 17091 ;; This function is called by:
 17092 ;;		_UART1_Initialize
 17093 ;; This function uses a non-reentrant model
 17094 ;;
 17095                           
 17096                           	psect	text42
 17097  00A2E4                     __ptext42:
 17098                           	opt callstack 0
 17099  00A2E4                     _UART1_SetErrorHandler:
 17100                           	opt callstack 11
 17101                           
 17102                           ; BSR set to: 0
 17103                           ;mcc_generated_files/uart1.c: 254:     UART1_ErrorHandler = interruptHandler;
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;incstack = 0
 17107  00A2E4  0060  F22C  F2F0   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 17108  00A2EA  0060  F230  F2F1   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 17109                           
 17110                           ; BSR set to: 0
 17111  00A2F0  0012               	return		;funcret
 17112  00A2F2                     __end_of_UART1_SetErrorHandler:
 17113                           	opt callstack 0
 17114                           
 17115 ;; *************** function _TMR6_Initialize *****************
 17116 ;; Defined at:
 17117 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 17118 ;; Parameters:    Size  Location     Type
 17119 ;;		None
 17120 ;; Auto vars:     Size  Location     Type
 17121 ;;		None
 17122 ;; Return value:  Size  Location     Type
 17123 ;;                  1    wreg      void 
 17124 ;; Registers used:
 17125 ;;		wreg, status,2, status,0, cstack
 17126 ;; Tracked objects:
 17127 ;;		On entry : 3F/3E
 17128 ;;		On exit  : 3F/0
 17129 ;;		Unchanged: 0/0
 17130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17135 ;;Total ram usage:        0 bytes
 17136 ;; Hardware stack levels used:    1
 17137 ;; Hardware stack levels required when called:   18
 17138 ;; This function calls:
 17139 ;;		_TMR6_SetInterruptHandler
 17140 ;; This function is called by:
 17141 ;;		_SYSTEM_Initialize
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text43
 17146  009B62                     __ptext43:
 17147                           	opt callstack 0
 17148  009B62                     _TMR6_Initialize:
 17149                           	opt callstack 11
 17150                           
 17151                           ; BSR set to: 62
 17152                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x06;
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;incstack = 0
 17156  009B62  0E06               	movlw	6
 17157  009B64  6E96               	movwf	150,c	;volatile
 17158                           
 17159                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x08;
 17160  009B66  0E08               	movlw	8
 17161  009B68  6E95               	movwf	149,c	;volatile
 17162                           
 17163                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
 17164  009B6A  0E00               	movlw	0
 17165  009B6C  6E97               	movwf	151,c	;volatile
 17166                           
 17167                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x01;
 17168  009B6E  0E01               	movlw	1
 17169  009B70  6E93               	movwf	147,c	;volatile
 17170                           
 17171                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
 17172  009B72  0E00               	movlw	0
 17173  009B74  6E92               	movwf	146,c	;volatile
 17174                           
 17175                           ; BSR set to: 62
 17176                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
 17177  009B76  0139               	movlb	57	; () banked
 17178  009B78  91A9               	bcf	169,0,b	;volatile
 17179                           
 17180                           ; BSR set to: 57
 17181                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
 17182  009B7A  8199               	bsf	153,0,b	;volatile
 17183                           
 17184                           ; BSR set to: 57
 17185                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 17186  009B7C  0EFA               	movlw	low _TMR6_DefaultInterruptHandler
 17187  009B7E  0100               	movlb	0	; () banked
 17188  009B80  6F8B               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17189  009B82  0EA4               	movlw	high _TMR6_DefaultInterruptHandler
 17190  009B84  6F8C               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17191  009B86  EC79  F051         	call	_TMR6_SetInterruptHandler	;wreg free
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0x50;
 17195  009B8A  0E50               	movlw	80
 17196  009B8C  6E94               	movwf	148,c	;volatile
 17197                           
 17198                           ; BSR set to: 0
 17199  009B8E  0012               	return		;funcret
 17200  009B90                     __end_of_TMR6_Initialize:
 17201                           	opt callstack 0
 17202                           
 17203 ;; *************** function _TMR6_SetInterruptHandler *****************
 17204 ;; Defined at:
 17205 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17208 ;;		 -> lcdIrqHandler(1), TMR6_DefaultInterruptHandler(1), 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;		None
 17211 ;; Return value:  Size  Location     Type
 17212 ;;                  1    wreg      void 
 17213 ;; Registers used:
 17214 ;;		wreg, status,2, status,0
 17215 ;; Tracked objects:
 17216 ;;		On entry : 3F/0
 17217 ;;		On exit  : 3F/0
 17218 ;;		Unchanged: 3F/0
 17219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17224 ;;Total ram usage:        2 bytes
 17225 ;; Hardware stack levels used:    1
 17226 ;; Hardware stack levels required when called:   17
 17227 ;; This function calls:
 17228 ;;		Nothing
 17229 ;; This function is called by:
 17230 ;;		_TMR6_Initialize
 17231 ;;		_LcdI2CInit
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235                           	psect	text44
 17236  00A2F2                     __ptext44:
 17237                           	opt callstack 0
 17238  00A2F2                     _TMR6_SetInterruptHandler:
 17239                           	opt callstack 11
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;incstack = 0
 17246  00A2F2  0060  F22C  F2E8   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17247  00A2F8  0060  F230  F2E9   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17248                           
 17249                           ; BSR set to: 0
 17250  00A2FE  0012               	return		;funcret
 17251  00A300                     __end_of_TMR6_SetInterruptHandler:
 17252                           	opt callstack 0
 17253                           
 17254 ;; *************** function _TMR4_Initialize *****************
 17255 ;; Defined at:
 17256 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 17257 ;; Parameters:    Size  Location     Type
 17258 ;;		None
 17259 ;; Auto vars:     Size  Location     Type
 17260 ;;		None
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  1    wreg      void 
 17263 ;; Registers used:
 17264 ;;		wreg, status,2, status,0, cstack
 17265 ;; Tracked objects:
 17266 ;;		On entry : 3F/0
 17267 ;;		On exit  : 3F/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;Total ram usage:        0 bytes
 17275 ;; Hardware stack levels used:    1
 17276 ;; Hardware stack levels required when called:   18
 17277 ;; This function calls:
 17278 ;;		_TMR4_SetInterruptHandler
 17279 ;; This function is called by:
 17280 ;;		_SYSTEM_Initialize
 17281 ;; This function uses a non-reentrant model
 17282 ;;
 17283                           
 17284                           	psect	text45
 17285  009B90                     __ptext45:
 17286                           	opt callstack 0
 17287  009B90                     _TMR4_Initialize:
 17288                           	opt callstack 11
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x06;
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;incstack = 0
 17295  009B90  0E06               	movlw	6
 17296  009B92  6EA2               	movwf	162,c	;volatile
 17297                           
 17298                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
 17299  009B94  0E08               	movlw	8
 17300  009B96  6EA1               	movwf	161,c	;volatile
 17301                           
 17302                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
 17303  009B98  0E00               	movlw	0
 17304  009B9A  6EA3               	movwf	163,c	;volatile
 17305                           
 17306                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x21;
 17307  009B9C  0E21               	movlw	33
 17308  009B9E  6E9F               	movwf	159,c	;volatile
 17309                           
 17310                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
 17311  009BA0  0E00               	movlw	0
 17312  009BA2  6E9E               	movwf	158,c	;volatile
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
 17316  009BA4  0139               	movlb	57	; () banked
 17317  009BA6  91A7               	bcf	167,0,b	;volatile
 17318                           
 17319                           ; BSR set to: 57
 17320                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
 17321  009BA8  8197               	bsf	151,0,b	;volatile
 17322                           
 17323                           ; BSR set to: 57
 17324                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 17325  009BAA  0EFC               	movlw	low _TMR4_DefaultInterruptHandler
 17326  009BAC  0100               	movlb	0	; () banked
 17327  009BAE  6F8B               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17328  009BB0  0EA4               	movlw	high _TMR4_DefaultInterruptHandler
 17329  009BB2  6F8C               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17330  009BB4  EC80  F051         	call	_TMR4_SetInterruptHandler	;wreg free
 17331                           
 17332                           ; BSR set to: 0
 17333                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0x50;
 17334  009BB8  0E50               	movlw	80
 17335  009BBA  6EA0               	movwf	160,c	;volatile
 17336                           
 17337                           ; BSR set to: 0
 17338  009BBC  0012               	return		;funcret
 17339  009BBE                     __end_of_TMR4_Initialize:
 17340                           	opt callstack 0
 17341                           
 17342 ;; *************** function _TMR4_SetInterruptHandler *****************
 17343 ;; Defined at:
 17344 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17347 ;;		 -> SV2DelayOpen(1), TMR4_DefaultInterruptHandler(1), 
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, status,2, status,0
 17354 ;; Tracked objects:
 17355 ;;		On entry : 3F/0
 17356 ;;		On exit  : 3F/0
 17357 ;;		Unchanged: 3F/0
 17358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;Total ram usage:        2 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:   17
 17366 ;; This function calls:
 17367 ;;		Nothing
 17368 ;; This function is called by:
 17369 ;;		_TMR4_Initialize
 17370 ;;		_main
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374                           	psect	text46
 17375  00A300                     __ptext46:
 17376                           	opt callstack 0
 17377  00A300                     _TMR4_SetInterruptHandler:
 17378                           	opt callstack 13
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;incstack = 0
 17385  00A300  0060  F22C  F2EA   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 17386  00A306  0060  F230  F2EB   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 17387                           
 17388                           ; BSR set to: 0
 17389  00A30C  0012               	return		;funcret
 17390  00A30E                     __end_of_TMR4_SetInterruptHandler:
 17391                           	opt callstack 0
 17392                           
 17393 ;; *************** function _TMR2_Initialize *****************
 17394 ;; Defined at:
 17395 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17396 ;; Parameters:    Size  Location     Type
 17397 ;;		None
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      void 
 17402 ;; Registers used:
 17403 ;;		wreg, status,2, status,0, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 3F/0
 17406 ;;		On exit  : 3F/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17413 ;;Total ram usage:        0 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:   18
 17416 ;; This function calls:
 17417 ;;		_TMR2_SetInterruptHandler
 17418 ;; This function is called by:
 17419 ;;		_SYSTEM_Initialize
 17420 ;; This function uses a non-reentrant model
 17421 ;;
 17422                           
 17423                           	psect	text47
 17424  009BBE                     __ptext47:
 17425                           	opt callstack 0
 17426  009BBE                     _TMR2_Initialize:
 17427                           	opt callstack 11
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
 17431                           
 17432                           ; BSR set to: 0
 17433                           ;incstack = 0
 17434  009BBE  0E03               	movlw	3
 17435  009BC0  6EAE               	movwf	174,c	;volatile
 17436                           
 17437                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 17438  009BC2  0E00               	movlw	0
 17439  009BC4  6EAD               	movwf	173,c	;volatile
 17440                           
 17441                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 17442  009BC6  0E00               	movlw	0
 17443  009BC8  6EAF               	movwf	175,c	;volatile
 17444                           
 17445                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
 17446  009BCA  0EF9               	movlw	249
 17447  009BCC  6EAB               	movwf	171,c	;volatile
 17448                           
 17449                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 17450  009BCE  0E00               	movlw	0
 17451  009BD0  6EAA               	movwf	170,c	;volatile
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 17455  009BD2  0139               	movlb	57	; () banked
 17456  009BD4  95A4               	bcf	164,2,b	;volatile
 17457                           
 17458                           ; BSR set to: 57
 17459                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 17460  009BD6  8594               	bsf	148,2,b	;volatile
 17461                           
 17462                           ; BSR set to: 57
 17463                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17464  009BD8  0EFE               	movlw	low _TMR2_DefaultInterruptHandler
 17465  009BDA  0100               	movlb	0	; () banked
 17466  009BDC  6F8B               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 17467  009BDE  0EA4               	movlw	high _TMR2_DefaultInterruptHandler
 17468  009BE0  6F8C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17469  009BE2  EC87  F051         	call	_TMR2_SetInterruptHandler	;wreg free
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xDF;
 17473  009BE6  0EDF               	movlw	223
 17474  009BE8  6EAC               	movwf	172,c	;volatile
 17475                           
 17476                           ; BSR set to: 0
 17477  009BEA  0012               	return		;funcret
 17478  009BEC                     __end_of_TMR2_Initialize:
 17479                           	opt callstack 0
 17480                           
 17481 ;; *************** function _TMR2_SetInterruptHandler *****************
 17482 ;; Defined at:
 17483 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 17486 ;;		 -> vMeasureIsr(1), TMR2_DefaultInterruptHandler(1), 
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;		None
 17489 ;; Return value:  Size  Location     Type
 17490 ;;                  1    wreg      void 
 17491 ;; Registers used:
 17492 ;;		wreg, status,2, status,0
 17493 ;; Tracked objects:
 17494 ;;		On entry : 3F/0
 17495 ;;		On exit  : 3F/0
 17496 ;;		Unchanged: 3F/0
 17497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;Total ram usage:        2 bytes
 17503 ;; Hardware stack levels used:    1
 17504 ;; Hardware stack levels required when called:   17
 17505 ;; This function calls:
 17506 ;;		Nothing
 17507 ;; This function is called by:
 17508 ;;		_TMR2_Initialize
 17509 ;;		_vMeasureInit
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           	psect	text48
 17514  00A30E                     __ptext48:
 17515                           	opt callstack 0
 17516  00A30E                     _TMR2_SetInterruptHandler:
 17517                           	opt callstack 12
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;incstack = 0
 17524  00A30E  0060  F22C  F2EC   	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17525  00A314  0060  F230  F2ED   	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17526                           
 17527                           ; BSR set to: 0
 17528  00A31A  0012               	return		;funcret
 17529  00A31C                     __end_of_TMR2_SetInterruptHandler:
 17530                           	opt callstack 0
 17531                           
 17532 ;; *************** function _TMR1_Initialize *****************
 17533 ;; Defined at:
 17534 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17535 ;; Parameters:    Size  Location     Type
 17536 ;;		None
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;		None
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      void 
 17541 ;; Registers used:
 17542 ;;		wreg, status,2, status,0
 17543 ;; Tracked objects:
 17544 ;;		On entry : 3F/0
 17545 ;;		On exit  : 3F/2
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;Total ram usage:        2 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:   17
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		_SYSTEM_Initialize
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562                           	psect	text49
 17563  00946E                     __ptext49:
 17564                           	opt callstack 0
 17565  00946E                     _TMR1_Initialize:
 17566                           	opt callstack 12
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;incstack = 0
 17573  00946E  0E00               	movlw	0
 17574  009470  6EB3               	movwf	179,c	;volatile
 17575                           
 17576                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
 17577  009472  0E00               	movlw	0
 17578  009474  6EB4               	movwf	180,c	;volatile
 17579                           
 17580                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x09;
 17581  009476  0E09               	movlw	9
 17582  009478  6EB5               	movwf	181,c	;volatile
 17583                           
 17584                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x00;
 17585  00947A  0E00               	movlw	0
 17586  00947C  6EB1               	movwf	177,c	;volatile
 17587                           
 17588                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
 17589  00947E  0E00               	movlw	0
 17590  009480  6EB0               	movwf	176,c	;volatile
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;mcc_generated_files/tmr1.c: 83:     PIR4bits.TMR1IF = 0;
 17594  009482  0139               	movlb	57	; () banked
 17595  009484  91A4               	bcf	164,0,b	;volatile
 17596                           
 17597                           ; BSR set to: 57
 17598                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17599  009486  50B0               	movf	176,w,c	;volatile
 17600  009488  006F FEC4  F08B    	movff	16305,??_TMR1_Initialize	;volatile
 17601  00948E  0100               	movlb	0	; () banked
 17602  009490  6B8C               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17603  009492  0060  F22C  F08C   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17604  009498  6B8B               	clrf	??_TMR1_Initialize& (0+255),b
 17605  00949A  118B               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17606  00949C  0102               	movlb	2	; () banked
 17607  00949E  6FEE               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17608  0094A0  0100               	movlb	0	; () banked
 17609  0094A2  518C               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17610  0094A4  0102               	movlb	2	; () banked
 17611  0094A6  6FEF               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17612                           
 17613                           ; BSR set to: 2
 17614                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x03;
 17615  0094A8  0E03               	movlw	3
 17616  0094AA  6EB2               	movwf	178,c	;volatile
 17617                           
 17618                           ; BSR set to: 2
 17619  0094AC  0012               	return		;funcret
 17620  0094AE                     __end_of_TMR1_Initialize:
 17621                           	opt callstack 0
 17622                           
 17623 ;; *************** function _TMR0_Initialize *****************
 17624 ;; Defined at:
 17625 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 17626 ;; Parameters:    Size  Location     Type
 17627 ;;		None
 17628 ;; Auto vars:     Size  Location     Type
 17629 ;;		None
 17630 ;; Return value:  Size  Location     Type
 17631 ;;                  1    wreg      void 
 17632 ;; Registers used:
 17633 ;;		wreg, status,2
 17634 ;; Tracked objects:
 17635 ;;		On entry : 3F/2
 17636 ;;		On exit  : 3F/39
 17637 ;;		Unchanged: 0/0
 17638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17643 ;;Total ram usage:        0 bytes
 17644 ;; Hardware stack levels used:    1
 17645 ;; Hardware stack levels required when called:   17
 17646 ;; This function calls:
 17647 ;;		Nothing
 17648 ;; This function is called by:
 17649 ;;		_SYSTEM_Initialize
 17650 ;; This function uses a non-reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text50
 17654  00A13A                     __ptext50:
 17655                           	opt callstack 0
 17656  00A13A                     _TMR0_Initialize:
 17657                           	opt callstack 12
 17658                           
 17659                           ; BSR set to: 2
 17660                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0xA1;
 17661                           
 17662                           ; BSR set to: 2
 17663                           ;incstack = 0
 17664  00A13A  0EA1               	movlw	161
 17665  00A13C  6EB9               	movwf	185,c	;volatile
 17666                           
 17667                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0xF9;
 17668  00A13E  0EF9               	movlw	249
 17669  00A140  6EB7               	movwf	183,c	;volatile
 17670                           
 17671                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
 17672  00A142  0E00               	movlw	0
 17673  00A144  6EB6               	movwf	182,c	;volatile
 17674                           
 17675                           ; BSR set to: 2
 17676                           ;mcc_generated_files/tmr0.c: 74:     PIR3bits.TMR0IF = 0;
 17677  00A146  0139               	movlb	57	; () banked
 17678  00A148  9FA3               	bcf	163,7,b	;volatile
 17679                           
 17680                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
 17681  00A14A  0E80               	movlw	128
 17682  00A14C  6EB8               	movwf	184,c	;volatile
 17683                           
 17684                           ; BSR set to: 57
 17685  00A14E  0012               	return		;funcret
 17686  00A150                     __end_of_TMR0_Initialize:
 17687                           	opt callstack 0
 17688                           
 17689 ;; *************** function _PMD_Initialize *****************
 17690 ;; Defined at:
 17691 ;;		line 81 in file "mcc_generated_files/mcc.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;		None
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;		None
 17696 ;; Return value:  Size  Location     Type
 17697 ;;                  1    wreg      void 
 17698 ;; Registers used:
 17699 ;;		wreg, status,2
 17700 ;; Tracked objects:
 17701 ;;		On entry : 3F/3
 17702 ;;		On exit  : 3F/39
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17709 ;;Total ram usage:        0 bytes
 17710 ;; Hardware stack levels used:    1
 17711 ;; Hardware stack levels required when called:   17
 17712 ;; This function calls:
 17713 ;;		Nothing
 17714 ;; This function is called by:
 17715 ;;		_SYSTEM_Initialize
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text51
 17720  009E56                     __ptext51:
 17721                           	opt callstack 0
 17722  009E56                     _PMD_Initialize:
 17723                           	opt callstack 12
 17724                           
 17725                           ; BSR set to: 3
 17726                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
 17727                           
 17728                           ; BSR set to: 57
 17729                           ;incstack = 0
 17730  009E56  0E00               	movlw	0
 17731  009E58  0139               	movlb	57	; () banked
 17732  009E5A  6FC0               	movwf	192,b	;volatile
 17733                           
 17734                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
 17735  009E5C  0E00               	movlw	0
 17736  009E5E  6FC1               	movwf	193,b	;volatile
 17737                           
 17738                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
 17739  009E60  0E00               	movlw	0
 17740  009E62  6FC2               	movwf	194,b	;volatile
 17741                           
 17742                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
 17743  009E64  0E00               	movlw	0
 17744  009E66  6FC3               	movwf	195,b	;volatile
 17745                           
 17746                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
 17747  009E68  0E00               	movlw	0
 17748  009E6A  6FC4               	movwf	196,b	;volatile
 17749                           
 17750                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
 17751  009E6C  0E00               	movlw	0
 17752  009E6E  6FC5               	movwf	197,b	;volatile
 17753                           
 17754                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
 17755  009E70  0E00               	movlw	0
 17756  009E72  6FC6               	movwf	198,b	;volatile
 17757                           
 17758                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
 17759  009E74  0E00               	movlw	0
 17760  009E76  6FC7               	movwf	199,b	;volatile
 17761                           
 17762                           ; BSR set to: 57
 17763  009E78  0012               	return		;funcret
 17764  009E7A                     __end_of_PMD_Initialize:
 17765                           	opt callstack 0
 17766                           
 17767 ;; *************** function _PIN_MANAGER_Initialize *****************
 17768 ;; Defined at:
 17769 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17770 ;; Parameters:    Size  Location     Type
 17771 ;;		None
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;		None
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  1    wreg      void 
 17776 ;; Registers used:
 17777 ;;		wreg, status,2
 17778 ;; Tracked objects:
 17779 ;;		On entry : 3F/39
 17780 ;;		On exit  : 3F/3A
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17787 ;;Total ram usage:        0 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; Hardware stack levels required when called:   17
 17790 ;; This function calls:
 17791 ;;		Nothing
 17792 ;; This function is called by:
 17793 ;;		_SYSTEM_Initialize
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797                           	psect	text52
 17798  007D22                     __ptext52:
 17799                           	opt callstack 0
 17800  007D22                     _PIN_MANAGER_Initialize:
 17801                           	opt callstack 12
 17802                           
 17803                           ; BSR set to: 57
 17804                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 17805                           
 17806                           ; BSR set to: 57
 17807                           ;incstack = 0
 17808  007D22  0E00               	movlw	0
 17809  007D24  6EBE               	movwf	190,c	;volatile
 17810                           
 17811                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 17812  007D26  0E00               	movlw	0
 17813  007D28  6EBD               	movwf	189,c	;volatile
 17814                           
 17815                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 17816  007D2A  0E00               	movlw	0
 17817  007D2C  6EBA               	movwf	186,c	;volatile
 17818                           
 17819                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 17820  007D2E  0E00               	movlw	0
 17821  007D30  6EBB               	movwf	187,c	;volatile
 17822                           
 17823                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 17824  007D32  0E00               	movlw	0
 17825  007D34  6EBC               	movwf	188,c	;volatile
 17826                           
 17827                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 17828  007D36  0E07               	movlw	7
 17829  007D38  6EC6               	movwf	198,c	;volatile
 17830                           
 17831                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
 17832  007D3A  0E00               	movlw	0
 17833  007D3C  6EC2               	movwf	194,c	;volatile
 17834                           
 17835                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
 17836  007D3E  0EC0               	movlw	192
 17837  007D40  6EC3               	movwf	195,c	;volatile
 17838                           
 17839                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xF5;
 17840  007D42  0EF5               	movlw	245
 17841  007D44  6EC4               	movwf	196,c	;volatile
 17842                           
 17843                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xBE;
 17844  007D46  0EBE               	movlw	190
 17845  007D48  6EC5               	movwf	197,c	;volatile
 17846                           
 17847                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 17848  007D4A  0E00               	movlw	0
 17849  007D4C  013A               	movlb	58	; () banked
 17850  007D4E  6F70               	movwf	112,b	;volatile
 17851                           
 17852                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 17853  007D50  0E00               	movlw	0
 17854  007D52  6F60               	movwf	96,b	;volatile
 17855                           
 17856                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x59;
 17857  007D54  0E59               	movlw	89
 17858  007D56  6F50               	movwf	80,b	;volatile
 17859                           
 17860                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 17861  007D58  0E07               	movlw	7
 17862  007D5A  6F80               	movwf	128,b	;volatile
 17863                           
 17864                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
 17865  007D5C  0E00               	movlw	0
 17866  007D5E  6F40               	movwf	64,b	;volatile
 17867                           
 17868                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0xBE;
 17869  007D60  0EBE               	movlw	190
 17870  007D62  6F71               	movwf	113,b	;volatile
 17871                           
 17872                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 17873  007D64  0E00               	movlw	0
 17874  007D66  6F81               	movwf	129,b	;volatile
 17875                           
 17876                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 17877  007D68  0E00               	movlw	0
 17878  007D6A  6F51               	movwf	81,b	;volatile
 17879                           
 17880                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 17881  007D6C  0E00               	movlw	0
 17882  007D6E  6F41               	movwf	65,b	;volatile
 17883                           
 17884                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0xF4;
 17885  007D70  0EF4               	movlw	244
 17886  007D72  6F61               	movwf	97,b	;volatile
 17887                           
 17888                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 17889  007D74  0E00               	movlw	0
 17890  007D76  6F5A               	movwf	90,b	;volatile
 17891                           
 17892                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 17893  007D78  0E00               	movlw	0
 17894  007D7A  6F5B               	movwf	91,b	;volatile
 17895                           
 17896                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 17897  007D7C  0E00               	movlw	0
 17898  007D7E  6F6A               	movwf	106,b	;volatile
 17899                           
 17900                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 17901  007D80  0E00               	movlw	0
 17902  007D82  6F6B               	movwf	107,b	;volatile
 17903                           
 17904                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 17905  007D84  0E00               	movlw	0
 17906  007D86  6F7A               	movwf	122,b	;volatile
 17907                           
 17908                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 17909  007D88  0E00               	movlw	0
 17910  007D8A  6F7B               	movwf	123,b	;volatile
 17911                           
 17912                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 17913  007D8C  0E00               	movlw	0
 17914  007D8E  6F82               	movwf	130,b	;volatile
 17915                           
 17916                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 17917  007D90  0E00               	movlw	0
 17918  007D92  6F42               	movwf	66,b	;volatile
 17919                           
 17920                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x06;
 17921  007D94  0E06               	movlw	6
 17922  007D96  6F52               	movwf	82,b	;volatile
 17923                           
 17924                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 17925  007D98  0E00               	movlw	0
 17926  007D9A  6F62               	movwf	98,b	;volatile
 17927                           
 17928                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 17929  007D9C  0E00               	movlw	0
 17930  007D9E  6F72               	movwf	114,b	;volatile
 17931                           
 17932                           ; BSR set to: 58
 17933                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 17934  007DA0  6943               	setf	67,b	;volatile
 17935                           
 17936                           ; BSR set to: 58
 17937                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 17938  007DA2  6953               	setf	83,b	;volatile
 17939                           
 17940                           ; BSR set to: 58
 17941                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 17942  007DA4  6963               	setf	99,b	;volatile
 17943                           
 17944                           ; BSR set to: 58
 17945                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 17946  007DA6  6973               	setf	115,b	;volatile
 17947                           
 17948                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 17949  007DA8  0E07               	movlw	7
 17950  007DAA  6F83               	movwf	131,b	;volatile
 17951                           
 17952                           ; BSR set to: 58
 17953                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 17954  007DAC  6944               	setf	68,b	;volatile
 17955                           
 17956                           ; BSR set to: 58
 17957                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 17958  007DAE  6954               	setf	84,b	;volatile
 17959                           
 17960                           ; BSR set to: 58
 17961                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 17962  007DB0  6964               	setf	100,b	;volatile
 17963                           
 17964                           ; BSR set to: 58
 17965                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 17966  007DB2  6974               	setf	116,b	;volatile
 17967                           
 17968                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 17969  007DB4  0E0F               	movlw	15
 17970  007DB6  6F84               	movwf	132,b	;volatile
 17971                           
 17972                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x09;
 17973  007DB8  0E09               	movlw	9
 17974  007DBA  6FE3               	movwf	227,b	;volatile
 17975                           
 17976                           ;mcc_generated_files/pin_manager.c: 138:     RB1PPS = 0x23;
 17977  007DBC  0E23               	movlw	35
 17978  007DBE  6F09               	movwf	9,b	;volatile
 17979                           
 17980                           ;mcc_generated_files/pin_manager.c: 139:     T6INPPS = 0x0F;
 17981  007DC0  0E0F               	movlw	15
 17982  007DC2  6FCC               	movwf	204,b	;volatile
 17983                           
 17984                           ;mcc_generated_files/pin_manager.c: 140:     RB2PPS = 0x24;
 17985  007DC4  0E24               	movlw	36
 17986  007DC6  6F0A               	movwf	10,b	;volatile
 17987                           
 17988                           ;mcc_generated_files/pin_manager.c: 141:     RC1PPS = 0x13;
 17989  007DC8  0E13               	movlw	19
 17990  007DCA  6F11               	movwf	17,b	;volatile
 17991                           
 17992                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
 17993  007DCC  0E10               	movlw	16
 17994  007DCE  6FE5               	movwf	229,b	;volatile
 17995                           
 17996                           ;mcc_generated_files/pin_manager.c: 143:     T4INPPS = 0x15;
 17997  007DD0  0E15               	movlw	21
 17998  007DD2  6FCB               	movwf	203,b	;volatile
 17999                           
 18000                           ;mcc_generated_files/pin_manager.c: 144:     I2C2SDAPPS = 0x0A;
 18001  007DD4  0E0A               	movlw	10
 18002  007DD6  6FE4               	movwf	228,b	;volatile
 18003                           
 18004                           ; BSR set to: 58
 18005  007DD8  0012               	return		;funcret
 18006  007DDA                     __end_of_PIN_MANAGER_Initialize:
 18007                           	opt callstack 0
 18008                           
 18009 ;; *************** function _OSCILLATOR_Initialize *****************
 18010 ;; Defined at:
 18011 ;;		line 67 in file "mcc_generated_files/mcc.c"
 18012 ;; Parameters:    Size  Location     Type
 18013 ;;		None
 18014 ;; Auto vars:     Size  Location     Type
 18015 ;;		None
 18016 ;; Return value:  Size  Location     Type
 18017 ;;                  1    wreg      void 
 18018 ;; Registers used:
 18019 ;;		wreg, status,2
 18020 ;; Tracked objects:
 18021 ;;		On entry : 3F/3A
 18022 ;;		On exit  : 3F/39
 18023 ;;		Unchanged: 0/0
 18024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;Total ram usage:        0 bytes
 18030 ;; Hardware stack levels used:    1
 18031 ;; Hardware stack levels required when called:   17
 18032 ;; This function calls:
 18033 ;;		Nothing
 18034 ;; This function is called by:
 18035 ;;		_SYSTEM_Initialize
 18036 ;; This function uses a non-reentrant model
 18037 ;;
 18038                           
 18039                           	psect	text53
 18040  00A0DE                     __ptext53:
 18041                           	opt callstack 0
 18042  00A0DE                     _OSCILLATOR_Initialize:
 18043                           	opt callstack 12
 18044                           
 18045                           ; BSR set to: 58
 18046                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x60;
 18047                           
 18048                           ; BSR set to: 58
 18049                           ;incstack = 0
 18050  00A0DE  0E60               	movlw	96
 18051  00A0E0  0139               	movlb	57	; () banked
 18052  00A0E2  6FD9               	movwf	217,b	;volatile
 18053                           
 18054                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 18055  00A0E4  0E00               	movlw	0
 18056  00A0E6  6FDB               	movwf	219,b	;volatile
 18057                           
 18058                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 18059  00A0E8  0E00               	movlw	0
 18060  00A0EA  6FDD               	movwf	221,b	;volatile
 18061                           
 18062                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
 18063  00A0EC  0E08               	movlw	8
 18064  00A0EE  6FDF               	movwf	223,b	;volatile
 18065                           
 18066                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 18067  00A0F0  0E00               	movlw	0
 18068  00A0F2  6FDE               	movwf	222,b	;volatile
 18069                           
 18070                           ; BSR set to: 57
 18071  00A0F4  0012               	return		;funcret
 18072  00A0F6                     __end_of_OSCILLATOR_Initialize:
 18073                           	opt callstack 0
 18074                           
 18075 ;; *************** function _INTERRUPT_Initialize *****************
 18076 ;; Defined at:
 18077 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;		None
 18080 ;; Auto vars:     Size  Location     Type
 18081 ;;		None
 18082 ;; Return value:  Size  Location     Type
 18083 ;;                  1    wreg      void 
 18084 ;; Registers used:
 18085 ;;		None
 18086 ;; Tracked objects:
 18087 ;;		On entry : 3F/3
 18088 ;;		On exit  : 3F/3
 18089 ;;		Unchanged: 3E/0
 18090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18095 ;;Total ram usage:        0 bytes
 18096 ;; Hardware stack levels used:    1
 18097 ;; Hardware stack levels required when called:   17
 18098 ;; This function calls:
 18099 ;;		Nothing
 18100 ;; This function is called by:
 18101 ;;		_SYSTEM_Initialize
 18102 ;; This function uses a non-reentrant model
 18103 ;;
 18104                           
 18105                           	psect	text54
 18106  00A4CC                     __ptext54:
 18107                           	opt callstack 0
 18108  00A4CC                     _INTERRUPT_Initialize:
 18109                           	opt callstack 12
 18110                           
 18111                           ; BSR set to: 3
 18112                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
 18113                           
 18114                           ; BSR set to: 57
 18115                           ;incstack = 0
 18116  00A4CC  9AD2               	bcf	210,5,c	;volatile
 18117                           
 18118                           ; BSR set to: 3
 18119  00A4CE  0012               	return		;funcret
 18120  00A4D0                     __end_of_INTERRUPT_Initialize:
 18121                           	opt callstack 0
 18122                           
 18123 ;; *************** function _I2C2_Initialize *****************
 18124 ;; Defined at:
 18125 ;;		line 183 in file "mcc_generated_files/i2c2_master.c"
 18126 ;; Parameters:    Size  Location     Type
 18127 ;;		None
 18128 ;; Auto vars:     Size  Location     Type
 18129 ;;		None
 18130 ;; Return value:  Size  Location     Type
 18131 ;;                  1    wreg      void 
 18132 ;; Registers used:
 18133 ;;		wreg, status,2
 18134 ;; Tracked objects:
 18135 ;;		On entry : 3F/0
 18136 ;;		On exit  : 3F/3D
 18137 ;;		Unchanged: 0/0
 18138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;Total ram usage:        0 bytes
 18144 ;; Hardware stack levels used:    1
 18145 ;; Hardware stack levels required when called:   17
 18146 ;; This function calls:
 18147 ;;		Nothing
 18148 ;; This function is called by:
 18149 ;;		_SYSTEM_Initialize
 18150 ;; This function uses a non-reentrant model
 18151 ;;
 18152                           
 18153                           	psect	text55
 18154  009E7A                     __ptext55:
 18155                           	opt callstack 0
 18156  009E7A                     _I2C2_Initialize:
 18157                           	opt callstack 12
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;mcc_generated_files/i2c2_master.c: 186:     I2C2CON0 = 0x04;
 18161                           
 18162                           ; BSR set to: 3
 18163                           ;incstack = 0
 18164  009E7A  0E04               	movlw	4
 18165  009E7C  013D               	movlb	61	; () banked
 18166  009E7E  6F5D               	movwf	93,b	;volatile
 18167                           
 18168                           ;mcc_generated_files/i2c2_master.c: 188:     I2C2CON1 = 0x80;
 18169  009E80  0E80               	movlw	128
 18170  009E82  6F5E               	movwf	94,b	;volatile
 18171                           
 18172                           ;mcc_generated_files/i2c2_master.c: 190:     I2C2CON2 = 0x18;
 18173  009E84  0E18               	movlw	24
 18174  009E86  6F5F               	movwf	95,b	;volatile
 18175                           
 18176                           ;mcc_generated_files/i2c2_master.c: 192:     I2C2CLK = 0x03;
 18177  009E88  0E03               	movlw	3
 18178  009E8A  6F65               	movwf	101,b	;volatile
 18179                           
 18180                           ;mcc_generated_files/i2c2_master.c: 194:     I2C2PIR = 0x00;
 18181  009E8C  0E00               	movlw	0
 18182  009E8E  6F63               	movwf	99,b	;volatile
 18183                           
 18184                           ;mcc_generated_files/i2c2_master.c: 196:     I2C2PIE = 0x00;
 18185  009E90  0E00               	movlw	0
 18186  009E92  6F64               	movwf	100,b	;volatile
 18187                           
 18188                           ;mcc_generated_files/i2c2_master.c: 198:     I2C2ERR = 0x00;
 18189  009E94  0E00               	movlw	0
 18190  009E96  6F60               	movwf	96,b	;volatile
 18191                           
 18192                           ; BSR set to: 61
 18193                           ;mcc_generated_files/i2c2_master.c: 200:     I2C2CNT = 0xFF;
 18194  009E98  6956               	setf	86,b	;volatile
 18195                           
 18196                           ; BSR set to: 61
 18197  009E9A  0012               	return		;funcret
 18198  009E9C                     __end_of_I2C2_Initialize:
 18199                           	opt callstack 0
 18200                           
 18201 ;; *************** function _FVR_Initialize *****************
 18202 ;; Defined at:
 18203 ;;		line 58 in file "mcc_generated_files/fvr.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;		None
 18206 ;; Auto vars:     Size  Location     Type
 18207 ;;		None
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  1    wreg      void 
 18210 ;; Registers used:
 18211 ;;		wreg, status,2
 18212 ;; Tracked objects:
 18213 ;;		On entry : 3F/39
 18214 ;;		On exit  : 3F/3E
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18221 ;;Total ram usage:        0 bytes
 18222 ;; Hardware stack levels used:    1
 18223 ;; Hardware stack levels required when called:   17
 18224 ;; This function calls:
 18225 ;;		Nothing
 18226 ;; This function is called by:
 18227 ;;		_SYSTEM_Initialize
 18228 ;; This function uses a non-reentrant model
 18229 ;;
 18230                           
 18231                           	psect	text56
 18232  00A44A                     __ptext56:
 18233                           	opt callstack 0
 18234  00A44A                     _FVR_Initialize:
 18235                           	opt callstack 12
 18236                           
 18237                           ; BSR set to: 57
 18238                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x83;
 18239                           
 18240                           ; BSR set to: 61
 18241                           ;incstack = 0
 18242  00A44A  0E83               	movlw	131
 18243  00A44C  013E               	movlb	62	; () banked
 18244  00A44E  6FC1               	movwf	193,b	;volatile
 18245                           
 18246                           ; BSR set to: 62
 18247  00A450  0012               	return		;funcret
 18248  00A452                     __end_of_FVR_Initialize:
 18249                           	opt callstack 0
 18250                           
 18251 ;; *************** function _ADCC_Initialize *****************
 18252 ;; Defined at:
 18253 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;		None
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;		None
 18258 ;; Return value:  Size  Location     Type
 18259 ;;                  1    wreg      void 
 18260 ;; Registers used:
 18261 ;;		wreg, status,2, status,0, cstack
 18262 ;; Tracked objects:
 18263 ;;		On entry : 3F/0
 18264 ;;		On exit  : 3F/0
 18265 ;;		Unchanged: 0/0
 18266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;Total ram usage:        0 bytes
 18272 ;; Hardware stack levels used:    1
 18273 ;; Hardware stack levels required when called:   18
 18274 ;; This function calls:
 18275 ;;		_ADCC_SetADTIInterruptHandler
 18276 ;; This function is called by:
 18277 ;;		_SYSTEM_Initialize
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281                           	psect	text57
 18282  00895A                     __ptext57:
 18283                           	opt callstack 0
 18284  00895A                     _ADCC_Initialize:
 18285                           	opt callstack 11
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0xFF;
 18289                           
 18290                           ; BSR set to: 62
 18291                           ;incstack = 0
 18292  00895A  013E               	movlb	62	; () banked
 18293  00895C  69DE               	setf	222,b	;volatile
 18294                           
 18295                           ; BSR set to: 62
 18296                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x7F;
 18297  00895E  0E7F               	movlw	127
 18298  008960  6FDF               	movwf	223,b	;volatile
 18299                           
 18300                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 18301  008962  0E00               	movlw	0
 18302  008964  6FE0               	movwf	224,b	;volatile
 18303                           
 18304                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x80;
 18305  008966  0E80               	movlw	128
 18306  008968  6FE1               	movwf	225,b	;volatile
 18307                           
 18308                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 18309  00896A  0E00               	movlw	0
 18310  00896C  6FE4               	movwf	228,b	;volatile
 18311                           
 18312                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 18313  00896E  0E00               	movlw	0
 18314  008970  6FE5               	movwf	229,b	;volatile
 18315                           
 18316                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 18317  008972  0E00               	movlw	0
 18318  008974  6FEA               	movwf	234,b	;volatile
 18319                           
 18320                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x10;
 18321  008976  0E10               	movlw	16
 18322  008978  6FEC               	movwf	236,b	;volatile
 18323                           
 18324                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 18325  00897A  0E00               	movlw	0
 18326  00897C  6FF1               	movwf	241,b	;volatile
 18327                           
 18328                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x80;
 18329  00897E  0E80               	movlw	128
 18330  008980  6FF3               	movwf	243,b	;volatile
 18331                           
 18332                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 18333  008982  0E00               	movlw	0
 18334  008984  6FF4               	movwf	244,b	;volatile
 18335                           
 18336                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 18337  008986  0E00               	movlw	0
 18338  008988  6FF5               	movwf	245,b	;volatile
 18339                           
 18340                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 18341  00898A  0E00               	movlw	0
 18342  00898C  6FF6               	movwf	246,b	;volatile
 18343                           
 18344                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 18345  00898E  0E00               	movlw	0
 18346  008990  6FF7               	movwf	247,b	;volatile
 18347                           
 18348                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 18349  008992  0E00               	movlw	0
 18350  008994  6FF9               	movwf	249,b	;volatile
 18351                           
 18352                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x43;
 18353  008996  0E43               	movlw	67
 18354  008998  6FFA               	movwf	250,b	;volatile
 18355                           
 18356                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x27;
 18357  00899A  0E27               	movlw	39
 18358  00899C  6FFB               	movwf	251,b	;volatile
 18359                           
 18360                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 18361  00899E  0E00               	movlw	0
 18362  0089A0  6FFC               	movwf	252,b	;volatile
 18363                           
 18364                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 18365  0089A2  0E03               	movlw	3
 18366  0089A4  6FFD               	movwf	253,b	;volatile
 18367                           
 18368                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 18369  0089A6  0E00               	movlw	0
 18370  0089A8  6FFE               	movwf	254,b	;volatile
 18371                           
 18372                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x33;
 18373  0089AA  0E33               	movlw	51
 18374  0089AC  6FFF               	movwf	255,b	;volatile
 18375                           
 18376                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 18377  0089AE  0E84               	movlw	132
 18378  0089B0  6FF8               	movwf	248,b	;volatile
 18379                           
 18380                           ; BSR set to: 62
 18381                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADTIF = 0;
 18382  0089B2  0139               	movlb	57	; () banked
 18383  0089B4  97A1               	bcf	161,3,b	;volatile
 18384                           
 18385                           ; BSR set to: 57
 18386                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADTIE = 1;
 18387  0089B6  8791               	bsf	145,3,b	;volatile
 18388                           
 18389                           ; BSR set to: 57
 18390                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 18391  0089B8  0E00               	movlw	low _ADCC_DefaultInterruptHandler
 18392  0089BA  0100               	movlb	0	; () banked
 18393  0089BC  6F8B               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 18394  0089BE  0EA5               	movlw	high _ADCC_DefaultInterruptHandler
 18395  0089C0  6F8C               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 18396  0089C2  EC8E  F051         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 18397                           
 18398                           ; BSR set to: 0
 18399  0089C6  0012               	return		;funcret
 18400  0089C8                     __end_of_ADCC_Initialize:
 18401                           	opt callstack 0
 18402                           
 18403 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 18404 ;; Defined at:
 18405 ;;		line 316 in file "mcc_generated_files/adcc.c"
 18406 ;; Parameters:    Size  Location     Type
 18407 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 18408 ;;		 -> adcCaptureIsr(1), ADCC_DefaultInterruptHandler(1), 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;		None
 18411 ;; Return value:  Size  Location     Type
 18412 ;;                  1    wreg      void 
 18413 ;; Registers used:
 18414 ;;		wreg, status,2, status,0
 18415 ;; Tracked objects:
 18416 ;;		On entry : 3F/0
 18417 ;;		On exit  : 3F/0
 18418 ;;		Unchanged: 3F/0
 18419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18424 ;;Total ram usage:        2 bytes
 18425 ;; Hardware stack levels used:    1
 18426 ;; Hardware stack levels required when called:   17
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_ADCC_Initialize
 18431 ;;		_aCaptureInit
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text58
 18436  00A31C                     __ptext58:
 18437                           	opt callstack 0
 18438  00A31C                     _ADCC_SetADTIInterruptHandler:
 18439                           	opt callstack 12
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;incstack = 0
 18446  00A31C  0060  F22C  F2F8   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 18447  00A322  0060  F230  F2F9   	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 18448                           
 18449                           ; BSR set to: 0
 18450  00A328  0012               	return		;funcret
 18451  00A32A                     __end_of_ADCC_SetADTIInterruptHandler:
 18452                           	opt callstack 0
 18453                           
 18454 ;; *************** function _MonitorMsgSend *****************
 18455 ;; Defined at:
 18456 ;;		line 127 in file "monComm.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;  state           1    wreg     enum E16832
 18459 ;; Auto vars:     Size  Location     Type
 18460 ;;  state           1  114[BANK1 ] enum E16832
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  1    wreg      void 
 18463 ;; Registers used:
 18464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18465 ;; Tracked objects:
 18466 ;;		On entry : 3D/3
 18467 ;;		On exit  : 3E/0
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18473 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18474 ;;Total ram usage:        1 bytes
 18475 ;; Hardware stack levels used:    1
 18476 ;; Hardware stack levels required when called:   31
 18477 ;; This function calls:
 18478 ;;		_MonitorMsgForcedSend
 18479 ;;		_timeElapsedR
 18480 ;; This function is called by:
 18481 ;;		_main
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           	psect	text59
 18486  009CFC                     __ptext59:
 18487                           	opt callstack 0
 18488  009CFC                     _MonitorMsgSend:
 18489                           	opt callstack 0
 18490                           
 18491                           ; BSR set to: 0
 18492                           ;incstack = 0
 18493 ;; hardware stack exceeded
 18494                           ;MonitorMsgSend@state stored from wreg
 18495  009CFC  0101               	movlb	1	; () banked
 18496  009CFE  6F72               	movwf	MonitorMsgSend@state& (0+255),b
 18497                           
 18498                           ;monComm.c: 128:     if (timeElapsedR(&monTstamp, ((time_t) 50*1))) {
 18499  009D00  0ECB               	movlw	low _monTstamp
 18500  009D02  0100               	movlb	0	; () banked
 18501  009D04  6F93               	movwf	timeElapsedR@prevTime& (0+255),b
 18502  009D06  0E02               	movlw	high _monTstamp
 18503  009D08  6F94               	movwf	(timeElapsedR@prevTime+1)& (0+255),b
 18504  009D0A  0E00               	movlw	0
 18505  009D0C  6F96               	movwf	(timeElapsedR@duration+1)& (0+255),b
 18506  009D0E  0E32               	movlw	50
 18507  009D10  6F95               	movwf	timeElapsedR@duration& (0+255),b
 18508  009D12  ECE5  F045         	call	_timeElapsedR	;wreg free
 18509  009D16  0900               	iorlw	0
 18510  009D18  B4D8               	btfsc	status,2,c
 18511  009D1A  0012               	return	
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;monComm.c: 129:         MonitorMsgForcedSend(state);
 18515  009D1C  0101               	movlb	1	; () banked
 18516  009D1E  5172               	movf	MonitorMsgSend@state& (0+255),w,b
 18517  009D20  EC52  F035         	call	_MonitorMsgForcedSend
 18518  009D24  0012               	return		;funcret
 18519  009D26                     __end_of_MonitorMsgSend:
 18520                           	opt callstack 0
 18521                           
 18522 ;; *************** function _timeElapsedR *****************
 18523 ;; Defined at:
 18524 ;;		line 30 in file "time.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;  prevTime        2   51[BANK0 ] PTR unsigned short 
 18527 ;;		 -> monTstamp(2), SelfTest@tstamp(2), flowChk@tstamp(2), pressureSensorChk@tstamp(2), 
 18528 ;;		 -> main@printTime(2), rCycleTime(2), 
 18529 ;;  duration        2   53[BANK0 ] unsigned short 
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;  intTime         2   59[BANK0 ] unsigned short 
 18532 ;;  intDur          2   57[BANK0 ] unsigned short 
 18533 ;; Return value:  Size  Location     Type
 18534 ;;                  1    wreg      _Bool 
 18535 ;; Registers used:
 18536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18537 ;; Tracked objects:
 18538 ;;		On entry : 3F/0
 18539 ;;		On exit  : 3F/0
 18540 ;;		Unchanged: 0/0
 18541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18542 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18545 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18546 ;;Total ram usage:       10 bytes
 18547 ;; Hardware stack levels used:    1
 18548 ;; Hardware stack levels required when called:   18
 18549 ;; This function calls:
 18550 ;;		_TMR1_ReadTimer
 18551 ;; This function is called by:
 18552 ;;		_main
 18553 ;;		_pressureSensorChk
 18554 ;;		_flowChk
 18555 ;;		_SelfTest
 18556 ;;		_MonitorMsgSend
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           	psect	text60
 18561  008BCA                     __ptext60:
 18562                           	opt callstack 0
 18563  008BCA                     _timeElapsedR:
 18564                           	opt callstack 12
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;time.c: 31:     time_t intTime, intDur;;time.c: 32:     intTime = TMR1_ReadTimer();
 18568                           
 18569                           ;incstack = 0
 18570  008BCA  EC52  F04E         	call	_TMR1_ReadTimer	;wreg free
 18571  008BCE  0060  F22C  F09B   	movff	?_TMR1_ReadTimer,timeElapsedR@intTime
 18572  008BD4  0060  F230  F09C   	movff	?_TMR1_ReadTimer+1,timeElapsedR@intTime+1
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;time.c: 33:     intDur = intTime - *prevTime;
 18576  008BDA  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18577  008BE0  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18578  008BE6  006F FF78  F097    	movff	postinc2,??_timeElapsedR
 18579  008BEC  006F FF74  F098    	movff	postdec2,??_timeElapsedR+1
 18580  008BF2  5197               	movf	??_timeElapsedR& (0+255),w,b
 18581  008BF4  5D9B               	subwf	timeElapsedR@intTime& (0+255),w,b
 18582  008BF6  6F99               	movwf	timeElapsedR@intDur& (0+255),b
 18583  008BF8  5198               	movf	(??_timeElapsedR+1)& (0+255),w,b
 18584  008BFA  599C               	subwfb	(timeElapsedR@intTime+1)& (0+255),w,b
 18585  008BFC  6F9A               	movwf	(timeElapsedR@intDur+1)& (0+255),b
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;time.c: 34:     if (intDur < duration) {
 18589  008BFE  5195               	movf	timeElapsedR@duration& (0+255),w,b
 18590  008C00  5D99               	subwf	timeElapsedR@intDur& (0+255),w,b
 18591  008C02  5196               	movf	(timeElapsedR@duration+1)& (0+255),w,b
 18592  008C04  599A               	subwfb	(timeElapsedR@intDur+1)& (0+255),w,b
 18593  008C06  B0D8               	btfsc	status,0,c
 18594  008C08  D002               	goto	l17964
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;time.c: 35:         return 0;
 18598  008C0A  0E00               	movlw	0
 18599  008C0C  0012               	return	
 18600  008C0E                     l17964:
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;time.c: 37:         *prevTime = intTime;
 18604  008C0E  0060  F24F  FFD9   	movff	timeElapsedR@prevTime,fsr2l
 18605  008C14  0060  F253  FFDA   	movff	timeElapsedR@prevTime+1,fsr2h
 18606  008C1A  0060  F26F  FFDE   	movff	timeElapsedR@intTime,postinc2
 18607  008C20  0060  F273  FFDD   	movff	timeElapsedR@intTime+1,postdec2
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;time.c: 38:         return 1;
 18611  008C26  0E01               	movlw	1
 18612                           
 18613                           ; BSR set to: 0
 18614  008C28  0012               	return		;funcret
 18615  008C2A                     __end_of_timeElapsedR:
 18616                           	opt callstack 0
 18617                           
 18618 ;; *************** function _MonitorInit *****************
 18619 ;; Defined at:
 18620 ;;		line 17 in file "monComm.c"
 18621 ;; Parameters:    Size  Location     Type
 18622 ;;		None
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;		None
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  1    wreg      void 
 18627 ;; Registers used:
 18628 ;;		None
 18629 ;; Tracked objects:
 18630 ;;		On entry : 3F/1
 18631 ;;		On exit  : 3F/1
 18632 ;;		Unchanged: 3F/0
 18633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18638 ;;Total ram usage:        0 bytes
 18639 ;; Hardware stack levels used:    1
 18640 ;; Hardware stack levels required when called:   17
 18641 ;; This function calls:
 18642 ;;		Nothing
 18643 ;; This function is called by:
 18644 ;;		_main
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text61
 18649  00A4F8                     __ptext61:
 18650                           	opt callstack 0
 18651  00A4F8                     _MonitorInit:
 18652                           	opt callstack 13
 18653                           
 18654                           ; BSR set to: 1
 18655                           
 18656                           ; BSR set to: 0
 18657                           ;incstack = 0
 18658  00A4F8  0012               	return		;funcret
 18659  00A4FA                     __end_of_MonitorInit:
 18660                           	opt callstack 0
 18661                           
 18662 ;; *************** function _MenuMng *****************
 18663 ;; Defined at:
 18664 ;;		line 46 in file "menu.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;		None
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;  keyPress        1  108[BANK1 ] char 
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  1    wreg      void 
 18671 ;; Registers used:
 18672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/1
 18675 ;;		On exit  : 3E/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18679 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18680 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;Total ram usage:       13 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; Hardware stack levels required when called:   26
 18685 ;; This function calls:
 18686 ;;		___awdiv
 18687 ;;		___lwdiv
 18688 ;;		_keyRead
 18689 ;;		_printf
 18690 ;;		_timeElapsed
 18691 ;;		_timeGet
 18692 ;; This function is called by:
 18693 ;;		_main
 18694 ;; This function uses a non-reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text62
 18698  0030D6                     __ptext62:
 18699                           	opt callstack 0
 18700  0030D6                     _MenuMng:
 18701                           	opt callstack 4
 18702                           
 18703                           ;menu.c: 48:     int8_t keyPress;;menu.c: 49:     keyPress = keyRead();
 18704                           
 18705                           ; BSR set to: 1
 18706                           ;incstack = 0
 18707  0030D6  EC6B  F049         	call	_keyRead	;wreg free
 18708  0030DA  0101               	movlb	1	; () banked
 18709  0030DC  6F6C               	movwf	MenuMng@keyPress& (0+255),b
 18710                           
 18711                           ; BSR set to: 1
 18712                           ;menu.c: 52:     if ((menuStatus == CFG_IDLE) && (keyPress == 3)){
 18713  0030DE  51B7               	movf	_menuStatus& (0+255),w,b
 18714  0030E0  A4D8               	btfss	status,2,c
 18715  0030E2  D012               	goto	l19578
 18716                           
 18717                           ; BSR set to: 1
 18718  0030E4  0E03               	movlw	3
 18719  0030E6  196C               	xorwf	MenuMng@keyPress& (0+255),w,b
 18720  0030E8  A4D8               	btfss	status,2,c
 18721  0030EA  D00E               	goto	l19578
 18722                           
 18723                           ; BSR set to: 1
 18724                           ;menu.c: 53:         menuStatus = CFG_ENGMODE;
 18725  0030EC  0E08               	movlw	8
 18726  0030EE  6FB7               	movwf	_menuStatus& (0+255),b
 18727                           
 18728                           ; BSR set to: 1
 18729                           ;menu.c: 54:         menuTstamp = timeGet();
 18730  0030F0  ECFA  F050         	call	_timeGet	;wreg free
 18731  0030F4  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 18732  0030FA  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;menu.c: 55:         lcdPrintBR = 1;
 18736  003100  0E01               	movlw	1
 18737  003102  0101               	movlb	1	; () banked
 18738  003104  6FCD               	movwf	_lcdPrintBR& (0+255),b
 18739                           
 18740                           ;menu.c: 56:     } else if ((keyPress >= 0) && (keyPress != 4)) {
 18741  003106  0012               	return	
 18742  003108                     l19578:
 18743                           
 18744                           ; BSR set to: 1
 18745  003108  BF6C               	btfsc	MenuMng@keyPress& (0+255),7,b
 18746  00310A  D348               	goto	l19880
 18747                           
 18748                           ; BSR set to: 1
 18749  00310C  0E04               	movlw	4
 18750  00310E  196C               	xorwf	MenuMng@keyPress& (0+255),w,b
 18751  003110  B4D8               	btfsc	status,2,c
 18752  003112  D344               	goto	l19880
 18753                           
 18754                           ; BSR set to: 1
 18755                           ;menu.c: 57:         lcdPrintTR = 1;
 18756  003114  0E01               	movlw	1
 18757  003116  6FCE               	movwf	_lcdPrintTR& (0+255),b
 18758                           
 18759                           ;menu.c: 58:         lcdPrintBR = 1;
 18760  003118  0E01               	movlw	1
 18761  00311A  6FCD               	movwf	_lcdPrintBR& (0+255),b
 18762                           
 18763                           ; BSR set to: 1
 18764                           ;menu.c: 59:         printf ("KEY! %d\n", keyPress);
 18765  00311C  0EA8               	movlw	low STR_34
 18766  00311E  6F46               	movwf	printf@fmt& (0+255),b
 18767  003120  0EFF               	movlw	high STR_34
 18768  003122  6F47               	movwf	(printf@fmt+1)& (0+255),b
 18769  003124  516C               	movf	MenuMng@keyPress& (0+255),w,b
 18770  003126  6F48               	movwf	(?_printf+2)& (0+255),b
 18771  003128  6B49               	clrf	(?_printf+3)& (0+255),b
 18772  00312A  BF48               	btfsc	(?_printf+2)& (0+255),7,b
 18773  00312C  0749               	decf	(?_printf+3)& (0+255),f,b
 18774  00312E  EC68  F04E         	call	_printf	;wreg free
 18775                           
 18776                           ; BSR set to: 2
 18777                           ;menu.c: 61:         if (menuStatus == CFG_POWEROFF) {
 18778  003132  0E0C               	movlw	12
 18779  003134  0101               	movlb	1	; () banked
 18780  003136  19B7               	xorwf	_menuStatus& (0+255),w,b
 18781  003138  A4D8               	btfss	status,2,c
 18782  00313A  D301               	goto	l19876
 18783                           
 18784                           ; BSR set to: 1
 18785                           ;menu.c: 62:             menuStatus = CFG_IDLE;
 18786  00313C  0E00               	movlw	0
 18787  00313E  6FB7               	movwf	_menuStatus& (0+255),b
 18788                           
 18789                           ; BSR set to: 1
 18790                           ;menu.c: 63:             if (keyPress == 2) {
 18791  003140  0E02               	movlw	2
 18792  003142  196C               	xorwf	MenuMng@keyPress& (0+255),w,b
 18793  003144  A4D8               	btfss	status,2,c
 18794  003146  D324               	goto	l19878
 18795                           
 18796                           ; BSR set to: 1
 18797                           ;menu.c: 65:                 ctrlStatus = CTRL_SLEEP;
 18798  003148  0E03               	movlw	3
 18799  00314A  6FC8               	movwf	_ctrlStatus& (0+255),b
 18800                           
 18801                           ; BSR set to: 1
 18802                           ;menu.c: 69:         } else {
 18803                           
 18804                           ;menu.c: 68:             }
 18805                           
 18806                           ;menu.c: 66:             } else {
 18807  00314C  D321               	goto	l19878
 18808  00314E                     l19594:
 18809                           
 18810                           ; BSR set to: 1
 18811                           ;menu.c: 72:                     if (menuStatus == CFG_IDLE) {
 18812  00314E  51B7               	movf	_menuStatus& (0+255),w,b
 18813  003150  A4D8               	btfss	status,2,c
 18814  003152  D024               	goto	l19604
 18815                           
 18816                           ; BSR set to: 1
 18817                           ;menu.c: 73:                         menuStatus = CFG_IP;
 18818  003154  0E01               	movlw	1
 18819  003156  6FB7               	movwf	_menuStatus& (0+255),b
 18820                           
 18821                           ;menu.c: 74:                         if (VentMode == VMODE_PRESSURE) {
 18822  003158  51F8               	movf	_VentMode& (0+255),w,b
 18823  00315A  A4D8               	btfss	status,2,c
 18824  00315C  D003               	goto	l19600
 18825                           
 18826                           ; BSR set to: 1
 18827                           ;menu.c: 75:                             menuVal = IP;
 18828  00315E  C1FB  F193         	movff	_IP,_menuVal
 18829  003162  D110               	goto	L31
 18830  003164                     l19600:
 18831                           
 18832                           ; BSR set to: 1
 18833                           ;menu.c: 77:                             menuVal = intIP/((int16_t) ((0.045*4096+2)/5)*1
      +                          );
 18834  003164  0060  F6CC  F0A1   	movff	_intIP,___awdiv@dividend
 18835  00316A  0060  F6D0  F0A2   	movff	_intIP+1,___awdiv@dividend+1
 18836  003170  0E00               	movlw	0
 18837  003172  0100               	movlb	0	; () banked
 18838  003174  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
 18839  003176  0E25               	movlw	37
 18840  003178  6FA3               	movwf	___awdiv@divisor& (0+255),b
 18841  00317A  EC78  F042         	call	___awdiv	;wreg free
 18842  00317E  0060  F284  F193   	movff	?___awdiv,_menuVal
 18843  003184  0060  F288  F194   	movff	?___awdiv+1,_menuVal+1
 18844  00318A                     l19602:
 18845                           
 18846                           ;menu.c: 79:                         menuTstamp = timeGet();
 18847  00318A  ECFA  F050         	call	_timeGet	;wreg free
 18848  00318E  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 18849  003194  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 18850                           
 18851                           ;menu.c: 80:                     } else if (menuStatus == CFG_IP) {
 18852  00319A  D2FA               	goto	l19878
 18853  00319C                     l19604:
 18854                           
 18855                           ; BSR set to: 1
 18856  00319C  05B7               	decf	_menuStatus& (0+255),w,b
 18857  00319E  A4D8               	btfss	status,2,c
 18858  0031A0  D013               	goto	l19620
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;menu.c: 82:                         IP = menuVal;
 18862  0031A2  C193  F1FB         	movff	_menuVal,_IP
 18863                           
 18864                           ; BSR set to: 1
 18865                           ;menu.c: 83:                         chIP = 1;
 18866  0031A6  0E01               	movlw	1
 18867  0031A8  6FBE               	movwf	_chIP& (0+255),b
 18868                           
 18869                           ; BSR set to: 1
 18870                           ;menu.c: 84:                         if (VentMode == VMODE_VOLUME) {
 18871  0031AA  05F8               	decf	_VentMode& (0+255),w,b
 18872  0031AC  A4D8               	btfss	status,2,c
 18873  0031AE  D005               	goto	l19614
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;menu.c: 85:                             VentMode = VMODE_PRESSURE;
 18877  0031B0  0E00               	movlw	0
 18878  0031B2  6FF8               	movwf	_VentMode& (0+255),b
 18879                           
 18880                           ;menu.c: 86:                             chVentMode = 1;
 18881  0031B4  0E01               	movlw	1
 18882  0031B6  0102               	movlb	2	; () banked
 18883  0031B8  6F4F               	movwf	_chVentMode& (0+255),b
 18884  0031BA                     l19614:
 18885                           
 18886                           ;menu.c: 89:                         MaxP = menuVal + 2;
 18887  0031BA  0101               	movlb	1	; () banked
 18888  0031BC  5193               	movf	_menuVal& (0+255),w,b
 18889  0031BE  0F02               	addlw	2
 18890  0031C0  6FFF               	movwf	_MaxP& (0+255),b
 18891                           
 18892                           ; BSR set to: 1
 18893                           ;menu.c: 90:                         chMaxP = 1;
 18894  0031C2  0E01               	movlw	1
 18895  0031C4  6FBD               	movwf	_chMaxP& (0+255),b
 18896  0031C6  D012               	goto	L22
 18897  0031C8                     l19620:
 18898                           
 18899                           ; BSR set to: 1
 18900  0031C8  0E08               	movlw	8
 18901  0031CA  19B7               	xorwf	_menuStatus& (0+255),w,b
 18902  0031CC  A4D8               	btfss	status,2,c
 18903  0031CE  D005               	goto	l19628
 18904                           
 18905                           ; BSR set to: 1
 18906                           ;menu.c: 93:                         menuStatus = CFG_ENGTRIG;
 18907  0031D0  0E0B               	movlw	11
 18908  0031D2  6FB7               	movwf	_menuStatus& (0+255),b
 18909                           
 18910                           ; BSR set to: 1
 18911                           ;menu.c: 94:                         menuVal = BdTrig;
 18912  0031D4  C1F9  F193         	movff	_BdTrig,_menuVal
 18913  0031D8  D0D5               	goto	L31
 18914  0031DA                     l19628:
 18915                           
 18916                           ; BSR set to: 1
 18917  0031DA  0E0B               	movlw	11
 18918  0031DC  19B7               	xorwf	_menuStatus& (0+255),w,b
 18919  0031DE  A4D8               	btfss	status,2,c
 18920  0031E0  D005               	goto	L22
 18921                           
 18922                           ; BSR set to: 1
 18923                           ;menu.c: 97:                         BdTrig = menuVal;
 18924  0031E2  C193  F1F9         	movff	_menuVal,_BdTrig
 18925                           
 18926                           ; BSR set to: 1
 18927                           ;menu.c: 98:                         chBdTrig = 1;
 18928  0031E6  0E01               	movlw	1
 18929  0031E8  0102               	movlb	2	; () banked
 18930  0031EA  6F50               	movwf	_chBdTrig& (0+255),b
 18931  0031EC                     L22:
 18932                           
 18933                           ;menu.c: 99:                         menuStatus = CFG_IDLE;
 18934  0031EC  0E00               	movlw	0
 18935  0031EE  0101               	movlb	1	; () banked
 18936  0031F0  D054               	goto	L24
 18937  0031F2                     l19636:
 18938                           
 18939                           ; BSR set to: 1
 18940                           ;menu.c: 106:                     if (menuStatus == CFG_IDLE) {
 18941  0031F2  51B7               	movf	_menuStatus& (0+255),w,b
 18942  0031F4  A4D8               	btfss	status,2,c
 18943  0031F6  D005               	goto	l19644
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;menu.c: 107:                         menuStatus = CFG_BPM;
 18947  0031F8  0E02               	movlw	2
 18948  0031FA  6FB7               	movwf	_menuStatus& (0+255),b
 18949                           
 18950                           ; BSR set to: 1
 18951                           ;menu.c: 108:                         menuVal = BPM;
 18952  0031FC  C1FC  F193         	movff	_BPM,_menuVal
 18953  003200  D0C1               	goto	L31
 18954  003202                     l19644:
 18955                           
 18956                           ; BSR set to: 1
 18957  003202  0E02               	movlw	2
 18958  003204  19B7               	xorwf	_menuStatus& (0+255),w,b
 18959  003206  A4D8               	btfss	status,2,c
 18960  003208  D031               	goto	l19656
 18961                           
 18962                           ; BSR set to: 1
 18963                           ;menu.c: 112:                         BPM = menuVal;
 18964  00320A  C193  F1FC         	movff	_menuVal,_BPM
 18965                           
 18966                           ; BSR set to: 1
 18967                           ;menu.c: 113:                         chBPM = 1;
 18968  00320E  0E01               	movlw	1
 18969  003210  6FBF               	movwf	_chBPM& (0+255),b
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;menu.c: 114:                         IDuration = ((uint16_t) 60 * 1000) / (3 * BPM);
 18973  003212  0EEA               	movlw	234
 18974  003214  0100               	movlb	0	; () banked
 18975  003216  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 18976  003218  0E60               	movlw	96
 18977  00321A  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 18978  00321C  0101               	movlb	1	; () banked
 18979  00321E  51FC               	movf	_BPM& (0+255),w,b
 18980  003220  0D03               	mullw	3
 18981  003222  006F FFCC  F08D    	movff	prodl,___lwdiv@divisor
 18982  003228  006F FFD0  F08E    	movff	prodh,___lwdiv@divisor+1
 18983  00322E  EC85  F047         	call	___lwdiv	;wreg free
 18984  003232  0060  F22C  F1AD   	movff	?___lwdiv,_IDuration
 18985  003238  0060  F230  F1AE   	movff	?___lwdiv+1,_IDuration+1
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;menu.c: 115:                         EDuration = ((uint16_t) 60 * 1000 / BPM) - IDurati
      +                          on;
 18989  00323E  0EEA               	movlw	234
 18990  003240  6F8C               	movwf	(___lwdiv@dividend+1)& (0+255),b
 18991  003242  0E60               	movlw	96
 18992  003244  6F8B               	movwf	___lwdiv@dividend& (0+255),b
 18993  003246  0060  F7F0  F08D   	movff	_BPM,___lwdiv@divisor
 18994  00324C  6B8E               	clrf	(___lwdiv@divisor+1)& (0+255),b
 18995  00324E  EC85  F047         	call	___lwdiv	;wreg free
 18996  003252  0101               	movlb	1	; () banked
 18997  003254  51AD               	movf	_IDuration& (0+255),w,b
 18998  003256  0100               	movlb	0	; () banked
 18999  003258  5D8B               	subwf	?___lwdiv& (0+255),w,b
 19000  00325A  0102               	movlb	2	; () banked
 19001  00325C  6F46               	movwf	_EDuration& (0+255),b
 19002  00325E  0101               	movlb	1	; () banked
 19003  003260  51AE               	movf	(_IDuration+1)& (0+255),w,b
 19004  003262  0100               	movlb	0	; () banked
 19005  003264  598C               	subwfb	(?___lwdiv+1)& (0+255),w,b
 19006  003266  0102               	movlb	2	; () banked
 19007  003268  6F47               	movwf	(_EDuration+1)& (0+255),b
 19008  00326A  D7C0               	goto	L22
 19009  00326C                     l19656:
 19010                           
 19011                           ; BSR set to: 1
 19012  00326C  0E08               	movlw	8
 19013  00326E  19B7               	xorwf	_menuStatus& (0+255),w,b
 19014  003270  A4D8               	btfss	status,2,c
 19015  003272  D7BC               	goto	L22
 19016                           
 19017                           ; BSR set to: 1
 19018                           ;menu.c: 118:                         menuStatus = CFG_ENGVSTATS;
 19019  003274  0E09               	movlw	9
 19020  003276  D018               	goto	L26
 19021  003278                     l19664:
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;menu.c: 126:                     if (menuStatus == CFG_IDLE) {
 19025  003278  51B7               	movf	_menuStatus& (0+255),w,b
 19026  00327A  A4D8               	btfss	status,2,c
 19027  00327C  D005               	goto	l19672
 19028                           
 19029                           ; BSR set to: 1
 19030                           ;menu.c: 127:                         menuStatus = CFG_PEEP;
 19031  00327E  0E03               	movlw	3
 19032  003280  6FB7               	movwf	_menuStatus& (0+255),b
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;menu.c: 128:                         menuVal = PEEP;
 19036  003282  C1FA  F193         	movff	_PEEP,_menuVal
 19037  003286  D07E               	goto	L31
 19038  003288                     l19672:
 19039                           
 19040                           ; BSR set to: 1
 19041  003288  0E03               	movlw	3
 19042  00328A  19B7               	xorwf	_menuStatus& (0+255),w,b
 19043  00328C  A4D8               	btfss	status,2,c
 19044  00328E  D007               	goto	l19678
 19045                           
 19046                           ; BSR set to: 1
 19047                           ;menu.c: 132:                         PEEP = menuVal;
 19048  003290  C193  F1FA         	movff	_menuVal,_PEEP
 19049                           
 19050                           ; BSR set to: 1
 19051                           ;menu.c: 133:                         chPEEP = 1;
 19052  003294  0E01               	movlw	1
 19053  003296  6FBC               	movwf	_chPEEP& (0+255),b
 19054  003298  D07F               	goto	L40
 19055  00329A                     L24:
 19056  00329A  6FB7               	movwf	_menuStatus& (0+255),b
 19057                           
 19058                           ;menu.c: 135:                     } else if (menuStatus == CFG_ENGMODE) {
 19059  00329C  D279               	goto	l19878
 19060  00329E                     l19678:
 19061                           
 19062                           ; BSR set to: 1
 19063  00329E  0E08               	movlw	8
 19064  0032A0  19B7               	xorwf	_menuStatus& (0+255),w,b
 19065  0032A2  A4D8               	btfss	status,2,c
 19066  0032A4  D7A3               	goto	L22
 19067                           
 19068                           ; BSR set to: 1
 19069                           ;menu.c: 136:                         menuStatus = CFG_ENGLSTATS;
 19070  0032A6  0E0A               	movlw	10
 19071  0032A8                     L26:
 19072  0032A8  6FB7               	movwf	_menuStatus& (0+255),b
 19073  0032AA  D76F               	goto	l19602
 19074  0032AC                     l19686:
 19075                           
 19076                           ; BSR set to: 1
 19077                           ;menu.c: 144:                     if (menuStatus == CFG_IDLE) {
 19078  0032AC  51B7               	movf	_menuStatus& (0+255),w,b
 19079  0032AE  A4D8               	btfss	status,2,c
 19080  0032B0  D005               	goto	l19694
 19081                           
 19082                           ; BSR set to: 1
 19083                           ;menu.c: 145:                         menuStatus = CFG_MAXP;
 19084  0032B2  0E04               	movlw	4
 19085  0032B4  6FB7               	movwf	_menuStatus& (0+255),b
 19086                           
 19087                           ; BSR set to: 1
 19088                           ;menu.c: 146:                         menuVal = MaxP;
 19089  0032B6  C1FF  F193         	movff	_MaxP,_menuVal
 19090  0032BA  D064               	goto	L31
 19091  0032BC                     l19694:
 19092                           
 19093                           ; BSR set to: 1
 19094  0032BC  0E04               	movlw	4
 19095  0032BE  19B7               	xorwf	_menuStatus& (0+255),w,b
 19096  0032C0  A4D8               	btfss	status,2,c
 19097  0032C2  D794               	goto	L22
 19098                           
 19099                           ; BSR set to: 1
 19100                           ;menu.c: 150:                         MaxP = menuVal;
 19101  0032C4  C193  F1FF         	movff	_menuVal,_MaxP
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;menu.c: 151:                         chMaxP = 1;
 19105  0032C8  0E01               	movlw	1
 19106  0032CA  6FBD               	movwf	_chMaxP& (0+255),b
 19107  0032CC  D065               	goto	L40
 19108  0032CE                     l19702:
 19109                           
 19110                           ; BSR set to: 1
 19111                           ;menu.c: 159:                     if (menuStatus == CFG_IDLE) {
 19112  0032CE  51B7               	movf	_menuStatus& (0+255),w,b
 19113  0032D0  A4D8               	btfss	status,2,c
 19114  0032D2  D020               	goto	l19710
 19115                           
 19116                           ; BSR set to: 1
 19117                           ;menu.c: 160:                         menuStatus = CFG_MAXV;
 19118  0032D4  0E05               	movlw	5
 19119  0032D6  6FB7               	movwf	_menuStatus& (0+255),b
 19120                           
 19121                           ;menu.c: 161:                         if (VentMode == VMODE_PRESSURE) {
 19122  0032D8  51F8               	movf	_VentMode& (0+255),w,b
 19123  0032DA  A4D8               	btfss	status,2,c
 19124  0032DC  D018               	goto	l2446
 19125                           
 19126                           ; BSR set to: 1
 19127                           ;menu.c: 162:                             menuVal = 2*((intMaxV+10)/20);
 19128  0032DE  0E0A               	movlw	10
 19129  0032E0  25F1               	addwf	_intMaxV& (0+255),w,b
 19130  0032E2  0100               	movlb	0	; () banked
 19131  0032E4  6FA1               	movwf	___awdiv@dividend& (0+255),b
 19132  0032E6  0E00               	movlw	0
 19133  0032E8  0101               	movlb	1	; () banked
 19134  0032EA  21F2               	addwfc	(_intMaxV+1)& (0+255),w,b
 19135  0032EC  0100               	movlb	0	; () banked
 19136  0032EE  6FA2               	movwf	(___awdiv@dividend+1)& (0+255),b
 19137  0032F0  0E00               	movlw	0
 19138  0032F2  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
 19139  0032F4  0E14               	movlw	20
 19140  0032F6  6FA3               	movwf	___awdiv@divisor& (0+255),b
 19141  0032F8  EC78  F042         	call	___awdiv	;wreg free
 19142  0032FC  90D8               	bcf	status,0,c
 19143  0032FE  35A1               	rlcf	?___awdiv& (0+255),w,b
 19144  003300  0101               	movlb	1	; () banked
 19145  003302  6F93               	movwf	_menuVal& (0+255),b
 19146  003304  0100               	movlb	0	; () banked
 19147  003306  35A2               	rlcf	(?___awdiv+1)& (0+255),w,b
 19148  003308  0101               	movlb	1	; () banked
 19149  00330A  6F94               	movwf	(_menuVal+1)& (0+255),b
 19150                           
 19151                           ;menu.c: 163:                         } else {
 19152  00330C  D73E               	goto	l19602
 19153  00330E                     l2446:
 19154                           
 19155                           ; BSR set to: 1
 19156                           ;menu.c: 164:                             menuVal = MaxV;
 19157  00330E  C1FE  F193         	movff	_MaxV,_menuVal
 19158  003312  D038               	goto	L31
 19159  003314                     l19710:
 19160                           
 19161                           ; BSR set to: 1
 19162  003314  0E05               	movlw	5
 19163  003316  19B7               	xorwf	_menuStatus& (0+255),w,b
 19164  003318  A4D8               	btfss	status,2,c
 19165  00331A  D768               	goto	L22
 19166                           
 19167                           ; BSR set to: 1
 19168                           ;menu.c: 171:                         HighVAlarm += (menuVal - MaxV);
 19169  00331C  51FE               	movf	_MaxV& (0+255),w,b
 19170  00331E  5D93               	subwf	_menuVal& (0+255),w,b
 19171  003320  27FD               	addwf	_HighVAlarm& (0+255),f,b
 19172                           
 19173                           ;menu.c: 172:                         LowVAlarm += (menuVal - MaxV);
 19174  003322  51FE               	movf	_MaxV& (0+255),w,b
 19175  003324  5D93               	subwf	_menuVal& (0+255),w,b
 19176  003326  27F7               	addwf	_LowVAlarm& (0+255),f,b
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;menu.c: 173:                         MaxV = menuVal;
 19180  003328  C193  F1FE         	movff	_menuVal,_MaxV
 19181                           
 19182                           ; BSR set to: 1
 19183                           ;menu.c: 174:                         chHighVAlarm = 1;
 19184  00332C  0E01               	movlw	1
 19185  00332E  6FBA               	movwf	_chHighVAlarm& (0+255),b
 19186                           
 19187                           ; BSR set to: 1
 19188                           ;menu.c: 175:                         chLowVAlarm = 1;
 19189  003330  0E01               	movlw	1
 19190  003332  6FBB               	movwf	_chLowVAlarm& (0+255),b
 19191                           
 19192                           ; BSR set to: 1
 19193                           ;menu.c: 176:                         chMaxV = 1;
 19194  003334  0E01               	movlw	1
 19195  003336  6FB9               	movwf	_chMaxV& (0+255),b
 19196                           
 19197                           ; BSR set to: 1
 19198                           ;menu.c: 177:                         if (VentMode == VMODE_PRESSURE) {
 19199  003338  51F8               	movf	_VentMode& (0+255),w,b
 19200  00333A  A4D8               	btfss	status,2,c
 19201  00333C  D757               	goto	L22
 19202                           
 19203                           ; BSR set to: 1
 19204                           ;menu.c: 178:                             VentMode = VMODE_VOLUME;
 19205  00333E  0E01               	movlw	1
 19206  003340  6FF8               	movwf	_VentMode& (0+255),b
 19207                           
 19208                           ;menu.c: 179:                             chVentMode = 1;
 19209  003342  0E01               	movlw	1
 19210  003344  0102               	movlb	2	; () banked
 19211  003346  6F4F               	movwf	_chVentMode& (0+255),b
 19212                           
 19213                           ;menu.c: 181:                             MaxP = 35;
 19214  003348  0E23               	movlw	35
 19215  00334A  0101               	movlb	1	; () banked
 19216  00334C  6FFF               	movwf	_MaxP& (0+255),b
 19217                           
 19218                           ;menu.c: 182:                             chMaxP = 1;
 19219  00334E  0E01               	movlw	1
 19220  003350  6FBD               	movwf	_chMaxP& (0+255),b
 19221  003352  D74C               	goto	L22
 19222  003354                     l19728:
 19223                           
 19224                           ; BSR set to: 1
 19225                           ;menu.c: 191:                     if (menuStatus == CFG_IDLE) {
 19226  003354  51B7               	movf	_menuStatus& (0+255),w,b
 19227  003356  A4D8               	btfss	status,2,c
 19228  003358  D005               	goto	l19736
 19229                           
 19230                           ; BSR set to: 1
 19231                           ;menu.c: 192:                         menuStatus = CFG_HIGHVA;
 19232  00335A  0E07               	movlw	7
 19233  00335C  6FB7               	movwf	_menuStatus& (0+255),b
 19234                           
 19235                           ; BSR set to: 1
 19236                           ;menu.c: 193:                         menuVal = HighVAlarm;
 19237  00335E  C1FD  F193         	movff	_HighVAlarm,_menuVal
 19238  003362  D010               	goto	L31
 19239  003364                     l19736:
 19240                           
 19241                           ; BSR set to: 1
 19242  003364  0E07               	movlw	7
 19243  003366  19B7               	xorwf	_menuStatus& (0+255),w,b
 19244  003368  A4D8               	btfss	status,2,c
 19245  00336A  D740               	goto	L22
 19246                           
 19247                           ; BSR set to: 1
 19248                           ;menu.c: 197:                         HighVAlarm = menuVal;
 19249  00336C  C193  F1FD         	movff	_menuVal,_HighVAlarm
 19250                           
 19251                           ; BSR set to: 1
 19252                           ;menu.c: 198:                         chHighVAlarm = 1;
 19253  003370  0E01               	movlw	1
 19254  003372  6FBA               	movwf	_chHighVAlarm& (0+255),b
 19255  003374  D011               	goto	L40
 19256  003376                     l19744:
 19257                           
 19258                           ; BSR set to: 1
 19259                           ;menu.c: 206:                     if (menuStatus == CFG_IDLE) {
 19260  003376  51B7               	movf	_menuStatus& (0+255),w,b
 19261  003378  A4D8               	btfss	status,2,c
 19262  00337A  D006               	goto	l19752
 19263                           
 19264                           ; BSR set to: 1
 19265                           ;menu.c: 207:                         menuStatus = CFG_LOWVA;
 19266  00337C  0E06               	movlw	6
 19267  00337E  6FB7               	movwf	_menuStatus& (0+255),b
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;menu.c: 208:                         menuVal = LowVAlarm;
 19271  003380  C1F7  F193         	movff	_LowVAlarm,_menuVal
 19272  003384                     L31:
 19273  003384  6B94               	clrf	(_menuVal+1)& (0+255),b
 19274  003386  D701               	goto	l19602
 19275  003388                     l19752:
 19276                           
 19277                           ; BSR set to: 1
 19278  003388  0E06               	movlw	6
 19279  00338A  19B7               	xorwf	_menuStatus& (0+255),w,b
 19280  00338C  A4D8               	btfss	status,2,c
 19281  00338E  D72E               	goto	L22
 19282                           
 19283                           ; BSR set to: 1
 19284                           ;menu.c: 212:                         LowVAlarm = menuVal;
 19285  003390  C193  F1F7         	movff	_menuVal,_LowVAlarm
 19286                           
 19287                           ; BSR set to: 1
 19288                           ;menu.c: 213:                         chLowVAlarm = 1;
 19289  003394  0E01               	movlw	1
 19290  003396  6FBB               	movwf	_chLowVAlarm& (0+255),b
 19291  003398                     L40:
 19292                           
 19293                           ;menu.c: 214:                         menuStatus = CFG_IDLE;
 19294  003398  0E00               	movlw	0
 19295  00339A  D77F               	goto	L24
 19296  00339C                     l19760:
 19297                           
 19298                           ; BSR set to: 1
 19299                           ;menu.c: 221:                     if (menuStatus != CFG_IDLE) {
 19300  00339C  51B7               	movf	_menuStatus& (0+255),w,b
 19301  00339E  B4D8               	btfsc	status,2,c
 19302  0033A0  D1F7               	goto	l19878
 19303                           
 19304                           ; BSR set to: 1
 19305                           ;menu.c: 222:                         menuTstamp = timeGet();
 19306  0033A2  ECFA  F050         	call	_timeGet	;wreg free
 19307  0033A6  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19308  0033AC  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19309                           
 19310                           ;menu.c: 224:                         switch (menuStatus) {
 19311  0033B2  D0A5               	goto	l19810
 19312  0033B4                     l19764:
 19313                           
 19314                           ; BSR set to: 1
 19315                           ;menu.c: 226:                                 menuVal = menuVal + 1;
 19316  0033B4  0E01               	movlw	1
 19317  0033B6  2593               	addwf	_menuVal& (0+255),w,b
 19318  0033B8  6F93               	movwf	_menuVal& (0+255),b
 19319  0033BA  0E00               	movlw	0
 19320  0033BC  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19321  0033BE  6F94               	movwf	(_menuVal+1)& (0+255),b
 19322                           
 19323                           ;menu.c: 227:                                 if (menuVal > 60) {
 19324  0033C0  5194               	movf	(_menuVal+1)& (0+255),w,b
 19325  0033C2  E104               	bnz	u20560
 19326  0033C4  0E3D               	movlw	61
 19327  0033C6  5D93               	subwf	_menuVal& (0+255),w,b
 19328  0033C8  A0D8               	btfss	status,0,c
 19329  0033CA  D1E2               	goto	l19878
 19330  0033CC                     u20560:
 19331  0033CC                     l19766:
 19332                           
 19333                           ; BSR set to: 1
 19334                           ;menu.c: 228:                                     menuVal = 60;
 19335  0033CC  0E00               	movlw	0
 19336  0033CE  6F94               	movwf	(_menuVal+1)& (0+255),b
 19337  0033D0  0E3C               	movlw	60
 19338  0033D2  D10E               	goto	L38
 19339  0033D4                     l19768:
 19340                           
 19341                           ; BSR set to: 1
 19342                           ;menu.c: 232:                                 menuVal = menuVal + 1;
 19343  0033D4  0E01               	movlw	1
 19344  0033D6  2593               	addwf	_menuVal& (0+255),w,b
 19345  0033D8  6F93               	movwf	_menuVal& (0+255),b
 19346  0033DA  0E00               	movlw	0
 19347  0033DC  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19348  0033DE  6F94               	movwf	(_menuVal+1)& (0+255),b
 19349                           
 19350                           ;menu.c: 233:                                 if (menuVal > 60) {
 19351  0033E0  5194               	movf	(_menuVal+1)& (0+255),w,b
 19352  0033E2  E1F4               	bnz	l19766
 19353  0033E4  0E3D               	movlw	61
 19354  0033E6  5D93               	subwf	_menuVal& (0+255),w,b
 19355  0033E8  B0D8               	btfsc	status,0,c
 19356  0033EA  D7F0               	goto	u20560
 19357  0033EC  D1D1               	goto	l19878
 19358  0033EE                     l19772:
 19359                           
 19360                           ; BSR set to: 1
 19361                           ;menu.c: 238:                                 menuVal = menuVal + 1;
 19362  0033EE  0E01               	movlw	1
 19363  0033F0  2593               	addwf	_menuVal& (0+255),w,b
 19364  0033F2  6F93               	movwf	_menuVal& (0+255),b
 19365  0033F4  0E00               	movlw	0
 19366  0033F6  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19367  0033F8  6F94               	movwf	(_menuVal+1)& (0+255),b
 19368                           
 19369                           ;menu.c: 239:                                 if (menuVal > 25) {
 19370  0033FA  5194               	movf	(_menuVal+1)& (0+255),w,b
 19371  0033FC  E104               	bnz	u20580
 19372  0033FE  0E1A               	movlw	26
 19373  003400  5D93               	subwf	_menuVal& (0+255),w,b
 19374  003402  A0D8               	btfss	status,0,c
 19375  003404  D1C5               	goto	l19878
 19376  003406                     u20580:
 19377                           
 19378                           ; BSR set to: 1
 19379                           ;menu.c: 240:                                     menuVal = 25;
 19380  003406  0E00               	movlw	0
 19381  003408  6F94               	movwf	(_menuVal+1)& (0+255),b
 19382  00340A  0E19               	movlw	25
 19383  00340C  D0F1               	goto	L38
 19384  00340E                     l19776:
 19385                           
 19386                           ; BSR set to: 1
 19387                           ;menu.c: 244:                                 menuVal = menuVal + 1;
 19388  00340E  0E01               	movlw	1
 19389  003410  2593               	addwf	_menuVal& (0+255),w,b
 19390  003412  6F93               	movwf	_menuVal& (0+255),b
 19391  003414  0E00               	movlw	0
 19392  003416  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19393  003418  6F94               	movwf	(_menuVal+1)& (0+255),b
 19394                           
 19395                           ;menu.c: 245:                                 if (menuVal > 30) {
 19396  00341A  5194               	movf	(_menuVal+1)& (0+255),w,b
 19397  00341C  E104               	bnz	u20590
 19398  00341E  0E1F               	movlw	31
 19399  003420  5D93               	subwf	_menuVal& (0+255),w,b
 19400  003422  A0D8               	btfss	status,0,c
 19401  003424  D1B5               	goto	l19878
 19402  003426                     u20590:
 19403                           
 19404                           ; BSR set to: 1
 19405                           ;menu.c: 246:                                     menuVal = 30;
 19406  003426  0E00               	movlw	0
 19407  003428  6F94               	movwf	(_menuVal+1)& (0+255),b
 19408  00342A  0E1E               	movlw	30
 19409  00342C  D0E1               	goto	L38
 19410  00342E                     l19780:
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;menu.c: 250:                                 menuVal = menuVal + 1;
 19414  00342E  0E01               	movlw	1
 19415  003430  2593               	addwf	_menuVal& (0+255),w,b
 19416  003432  6F93               	movwf	_menuVal& (0+255),b
 19417  003434  0E00               	movlw	0
 19418  003436  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19419  003438  6F94               	movwf	(_menuVal+1)& (0+255),b
 19420                           
 19421                           ;menu.c: 251:                                 if (menuVal > 8) {
 19422  00343A  5194               	movf	(_menuVal+1)& (0+255),w,b
 19423  00343C  E104               	bnz	u20600
 19424  00343E  0E09               	movlw	9
 19425  003440  5D93               	subwf	_menuVal& (0+255),w,b
 19426  003442  A0D8               	btfss	status,0,c
 19427  003444  D1A5               	goto	l19878
 19428  003446                     u20600:
 19429                           
 19430                           ; BSR set to: 1
 19431                           ;menu.c: 252:                                     menuVal = 8;
 19432  003446  0E00               	movlw	0
 19433  003448  6F94               	movwf	(_menuVal+1)& (0+255),b
 19434  00344A  0E08               	movlw	8
 19435  00344C  D0D1               	goto	L38
 19436  00344E                     l19784:
 19437                           
 19438                           ; BSR set to: 1
 19439                           ;menu.c: 256:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (100/10))? (100/10) : menuVal + 2));
 19440  00344E  0E02               	movlw	2
 19441  003450  2593               	addwf	_menuVal& (0+255),w,b
 19442  003452  6F60               	movwf	??_MenuMng& (0+255),b
 19443  003454  0E00               	movlw	0
 19444  003456  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19445  003458  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19446  00345A  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19447  00345C  E122               	bnz	l19794
 19448  00345E  0E97               	movlw	151
 19449  003460  5D60               	subwf	??_MenuMng& (0+255),w,b
 19450  003462  B0D8               	btfsc	status,0,c
 19451  003464  D01E               	goto	l19794
 19452                           
 19453                           ; BSR set to: 1
 19454  003466  0E02               	movlw	2
 19455  003468  2593               	addwf	_menuVal& (0+255),w,b
 19456  00346A  6F60               	movwf	??_MenuMng& (0+255),b
 19457  00346C  0E00               	movlw	0
 19458  00346E  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19459  003470  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19460  003472  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19461  003474  E104               	bnz	u20620
 19462  003476  0E0A               	movlw	10
 19463  003478  5D60               	subwf	??_MenuMng& (0+255),w,b
 19464  00347A  A0D8               	btfss	status,0,c
 19465  00347C  D007               	goto	l19790
 19466  00347E                     u20620:
 19467                           
 19468                           ; BSR set to: 1
 19469  00347E  0E02               	movlw	2
 19470  003480  2593               	addwf	_menuVal& (0+255),w,b
 19471  003482  6F64               	movwf	_MenuMng$4363& (0+255),b
 19472  003484  0E00               	movlw	0
 19473  003486  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19474  003488  6F65               	movwf	(_MenuMng$4363+1)& (0+255),b
 19475  00348A  D004               	goto	l19792
 19476  00348C                     l19790:
 19477                           
 19478                           ; BSR set to: 1
 19479  00348C  0E00               	movlw	0
 19480  00348E  6F65               	movwf	(_MenuMng$4363+1)& (0+255),b
 19481  003490  0E0A               	movlw	10
 19482  003492  6F64               	movwf	_MenuMng$4363& (0+255),b
 19483  003494                     l19792:
 19484                           
 19485                           ; BSR set to: 1
 19486  003494  0060  F590  F193   	movff	_MenuMng$4363,_menuVal
 19487  00349A  0060  F594  F194   	movff	_MenuMng$4363+1,_menuVal+1
 19488  0034A0  D177               	goto	l19878
 19489  0034A2                     l19794:
 19490                           
 19491                           ; BSR set to: 1
 19492  0034A2  0E00               	movlw	0
 19493  0034A4  6F94               	movwf	(_menuVal+1)& (0+255),b
 19494  0034A6  0E96               	movlw	150
 19495  0034A8  D0A3               	goto	L38
 19496  0034AA                     l19796:
 19497                           
 19498                           ; BSR set to: 1
 19499                           ;menu.c: 260:                                 menuVal = ((menuVal + 2 > (1500/10))? (150
      +                          0/10) : ((menuVal + 2 < (50/10))? (50/10) : menuVal + 2));
 19500  0034AA  0E02               	movlw	2
 19501  0034AC  2593               	addwf	_menuVal& (0+255),w,b
 19502  0034AE  6F60               	movwf	??_MenuMng& (0+255),b
 19503  0034B0  0E00               	movlw	0
 19504  0034B2  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19505  0034B4  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19506  0034B6  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19507  0034B8  E1F4               	bnz	l19794
 19508  0034BA  0E97               	movlw	151
 19509  0034BC  5D60               	subwf	??_MenuMng& (0+255),w,b
 19510  0034BE  B0D8               	btfsc	status,0,c
 19511  0034C0  D7F0               	goto	l19794
 19512                           
 19513                           ; BSR set to: 1
 19514  0034C2  0E02               	movlw	2
 19515  0034C4  2593               	addwf	_menuVal& (0+255),w,b
 19516  0034C6  6F60               	movwf	??_MenuMng& (0+255),b
 19517  0034C8  0E00               	movlw	0
 19518  0034CA  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19519  0034CC  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19520  0034CE  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19521  0034D0  E104               	bnz	u20640
 19522  0034D2  0E05               	movlw	5
 19523  0034D4  5D60               	subwf	??_MenuMng& (0+255),w,b
 19524  0034D6  A0D8               	btfss	status,0,c
 19525  0034D8  D007               	goto	l19802
 19526  0034DA                     u20640:
 19527                           
 19528                           ; BSR set to: 1
 19529  0034DA  0E02               	movlw	2
 19530  0034DC  2593               	addwf	_menuVal& (0+255),w,b
 19531  0034DE  6F66               	movwf	_MenuMng$4364& (0+255),b
 19532  0034E0  0E00               	movlw	0
 19533  0034E2  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19534  0034E4  6F67               	movwf	(_MenuMng$4364+1)& (0+255),b
 19535  0034E6  D004               	goto	l19804
 19536  0034E8                     l19802:
 19537                           
 19538                           ; BSR set to: 1
 19539  0034E8  0E00               	movlw	0
 19540  0034EA  6F67               	movwf	(_MenuMng$4364+1)& (0+255),b
 19541  0034EC  0E05               	movlw	5
 19542  0034EE  6F66               	movwf	_MenuMng$4364& (0+255),b
 19543  0034F0                     l19804:
 19544                           
 19545                           ; BSR set to: 1
 19546  0034F0  0060  F598  F193   	movff	_MenuMng$4364,_menuVal
 19547  0034F6  0060  F59C  F194   	movff	_MenuMng$4364+1,_menuVal+1
 19548  0034FC  D149               	goto	l19878
 19549  0034FE                     l19810:
 19550                           
 19551                           ; BSR set to: 0
 19552  0034FE  0101               	movlb	1	; () banked
 19553  003500  51B7               	movf	_menuStatus& (0+255),w,b
 19554  003502  6F60               	movwf	??_MenuMng& (0+255),b
 19555  003504  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19556                           
 19557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19558                           ; Switch size 1, requested type "simple"
 19559                           ; Number of cases is 1, Range of values is 0 to 0
 19560                           ; switch strategies available:
 19561                           ; Name         Instructions Cycles
 19562                           ; simple_byte            4     3 (average)
 19563                           ;	Chosen strategy is simple_byte
 19564  003506  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19565  003508  0A00               	xorlw	0	; case 0
 19566  00350A  A4D8               	btfss	status,2,c
 19567  00350C  D141               	goto	l19878
 19568                           
 19569                           ; BSR set to: 1
 19570                           ; Switch size 1, requested type "simple"
 19571                           ; Number of cases is 8, Range of values is 1 to 11
 19572                           ; switch strategies available:
 19573                           ; Name         Instructions Cycles
 19574                           ; simple_byte           25    13 (average)
 19575                           ;	Chosen strategy is simple_byte
 19576  00350E  5160               	movf	??_MenuMng& (0+255),w,b
 19577  003510  0A01               	xorlw	1	; case 1
 19578  003512  B4D8               	btfsc	status,2,c
 19579  003514  D74F               	goto	l19764
 19580  003516  0A03               	xorlw	3	; case 2
 19581  003518  B4D8               	btfsc	status,2,c
 19582  00351A  D779               	goto	l19776
 19583  00351C  0A01               	xorlw	1	; case 3
 19584  00351E  B4D8               	btfsc	status,2,c
 19585  003520  D766               	goto	l19772
 19586  003522  0A07               	xorlw	7	; case 4
 19587  003524  B4D8               	btfsc	status,2,c
 19588  003526  D756               	goto	l19768
 19589  003528  0A01               	xorlw	1	; case 5
 19590  00352A  B4D8               	btfsc	status,2,c
 19591  00352C  D790               	goto	l19784
 19592  00352E  0A03               	xorlw	3	; case 6
 19593  003530  B4D8               	btfsc	status,2,c
 19594  003532  D7BB               	goto	l19796
 19595  003534  0A01               	xorlw	1	; case 7
 19596  003536  B4D8               	btfsc	status,2,c
 19597  003538  D7B8               	goto	l19796
 19598  00353A  0A0C               	xorlw	12	; case 11
 19599  00353C  B4D8               	btfsc	status,2,c
 19600  00353E  D777               	goto	l19780
 19601  003540  D127               	goto	l19878
 19602  003542                     l19812:
 19603                           
 19604                           ; BSR set to: 1
 19605                           ;menu.c: 269:                     if (menuStatus != CFG_IDLE) {
 19606  003542  51B7               	movf	_menuStatus& (0+255),w,b
 19607  003544  B4D8               	btfsc	status,2,c
 19608  003546  D124               	goto	l19878
 19609                           
 19610                           ; BSR set to: 1
 19611                           ;menu.c: 270:                         menuTstamp = timeGet();
 19612  003548  ECFA  F050         	call	_timeGet	;wreg free
 19613  00354C  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19614  003552  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19615                           
 19616                           ;menu.c: 272:                         switch (menuStatus) {
 19617  003558  D0C1               	goto	l19866
 19618  00355A                     l19816:
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;menu.c: 275:                                 menuVal = menuVal - 1;
 19622  00355A  0EFF               	movlw	255
 19623  00355C  2593               	addwf	_menuVal& (0+255),w,b
 19624  00355E  6F93               	movwf	_menuVal& (0+255),b
 19625  003560  0EFF               	movlw	255
 19626  003562  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19627  003564  6F94               	movwf	(_menuVal+1)& (0+255),b
 19628                           
 19629                           ;menu.c: 276:                                 if (menuVal < 4) {
 19630  003566  5194               	movf	(_menuVal+1)& (0+255),w,b
 19631  003568  E108               	bnz	l19820
 19632  00356A  0E04               	movlw	4
 19633  00356C  5D93               	subwf	_menuVal& (0+255),w,b
 19634  00356E  B0D8               	btfsc	status,0,c
 19635  003570  D004               	goto	l19820
 19636  003572                     u20660:
 19637                           
 19638                           ; BSR set to: 1
 19639                           ;menu.c: 277:                                     menuVal = 4;
 19640  003572  0E00               	movlw	0
 19641  003574  6F94               	movwf	(_menuVal+1)& (0+255),b
 19642  003576  0E04               	movlw	4
 19643  003578  D03B               	goto	L38
 19644  00357A                     l19820:
 19645                           
 19646                           ; BSR set to: 1
 19647  00357A  0E04               	movlw	4
 19648  00357C  19B7               	xorwf	_menuStatus& (0+255),w,b
 19649  00357E  A4D8               	btfss	status,2,c
 19650  003580  D107               	goto	l19878
 19651                           
 19652                           ; BSR set to: 1
 19653  003582  51F8               	movf	_VentMode& (0+255),w,b
 19654  003584  A4D8               	btfss	status,2,c
 19655  003586  D104               	goto	l19878
 19656                           
 19657                           ; BSR set to: 1
 19658  003588  51FB               	movf	_IP& (0+255),w,b
 19659  00358A  5D93               	subwf	_menuVal& (0+255),w,b
 19660  00358C  0E00               	movlw	0
 19661  00358E  5994               	subwfb	(_menuVal+1)& (0+255),w,b
 19662  003590  B0D8               	btfsc	status,0,c
 19663  003592  D0FE               	goto	l19878
 19664                           
 19665                           ; BSR set to: 1
 19666                           ;menu.c: 279:                                     menuVal = IP;
 19667  003594  C1FB  F193         	movff	_IP,_menuVal
 19668  003598  6B94               	clrf	(_menuVal+1)& (0+255),b
 19669  00359A  D0FA               	goto	l19878
 19670  00359C                     l19828:
 19671                           
 19672                           ; BSR set to: 1
 19673                           ;menu.c: 283:                                 menuVal = menuVal - 1;
 19674  00359C  0EFF               	movlw	255
 19675  00359E  2593               	addwf	_menuVal& (0+255),w,b
 19676  0035A0  6F93               	movwf	_menuVal& (0+255),b
 19677  0035A2  0EFF               	movlw	255
 19678  0035A4  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19679  0035A6  6F94               	movwf	(_menuVal+1)& (0+255),b
 19680                           
 19681                           ;menu.c: 284:                                 if (menuVal < 4) {
 19682  0035A8  5194               	movf	(_menuVal+1)& (0+255),w,b
 19683  0035AA  E104               	bnz	u20701
 19684  0035AC  0E04               	movlw	4
 19685  0035AE  5D93               	subwf	_menuVal& (0+255),w,b
 19686  0035B0  A0D8               	btfss	status,0,c
 19687  0035B2  D7DF               	goto	u20660
 19688  0035B4                     u20701:
 19689  0035B4  D0ED               	goto	l19878
 19690  0035B6                     l19832:
 19691                           
 19692                           ; BSR set to: 1
 19693                           ;menu.c: 289:                                 menuVal = menuVal - 1;
 19694  0035B6  0EFF               	movlw	255
 19695  0035B8  2593               	addwf	_menuVal& (0+255),w,b
 19696  0035BA  6F93               	movwf	_menuVal& (0+255),b
 19697  0035BC  0EFF               	movlw	255
 19698  0035BE  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19699  0035C0  6F94               	movwf	(_menuVal+1)& (0+255),b
 19700                           
 19701                           ;menu.c: 290:                                 if (menuVal < 10) {
 19702  0035C2  5194               	movf	(_menuVal+1)& (0+255),w,b
 19703  0035C4  E103               	bnz	u20711
 19704  0035C6  0E0A               	movlw	10
 19705  0035C8  5D93               	subwf	_menuVal& (0+255),w,b
 19706  0035CA  B0D8               	btfsc	status,0,c
 19707  0035CC                     u20711:
 19708  0035CC  D0E1               	goto	l19878
 19709                           
 19710                           ; BSR set to: 1
 19711                           ;menu.c: 291:                                     menuVal = 10;
 19712  0035CE  0E00               	movlw	0
 19713  0035D0  6F94               	movwf	(_menuVal+1)& (0+255),b
 19714  0035D2  0E0A               	movlw	10
 19715  0035D4  D00D               	goto	L38
 19716  0035D6                     l19836:
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;menu.c: 295:                                 menuVal = menuVal - 1;
 19720  0035D6  0EFF               	movlw	255
 19721  0035D8  2593               	addwf	_menuVal& (0+255),w,b
 19722  0035DA  6F93               	movwf	_menuVal& (0+255),b
 19723  0035DC  0EFF               	movlw	255
 19724  0035DE  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19725  0035E0  6F94               	movwf	(_menuVal+1)& (0+255),b
 19726                           
 19727                           ;menu.c: 296:                                 if (menuVal < 1) {
 19728  0035E2  5193               	movf	_menuVal& (0+255),w,b
 19729  0035E4  1194               	iorwf	(_menuVal+1)& (0+255),w,b
 19730  0035E6  A4D8               	btfss	status,2,c
 19731  0035E8  D0D3               	goto	l19878
 19732                           
 19733                           ; BSR set to: 1
 19734                           ;menu.c: 297:                                     menuVal = 1;
 19735  0035EA  0E00               	movlw	0
 19736  0035EC  6F94               	movwf	(_menuVal+1)& (0+255),b
 19737  0035EE  0E01               	movlw	1
 19738  0035F0                     L38:
 19739  0035F0  6F93               	movwf	_menuVal& (0+255),b
 19740  0035F2  D0CE               	goto	l19878
 19741  0035F4                     l19840:
 19742                           
 19743                           ; BSR set to: 1
 19744                           ;menu.c: 301:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (100/10))? (100/10) : menuVal - 2));
 19745  0035F4  0EFE               	movlw	254
 19746  0035F6  6F60               	movwf	??_MenuMng& (0+255),b
 19747  0035F8  0EFF               	movlw	255
 19748  0035FA  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19749  0035FC  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19750  003602  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19751  003608  5160               	movf	??_MenuMng& (0+255),w,b
 19752  00360A  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19753  00360C  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19754  00360E  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19755  003610  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19756  003612  E103               	bnz	u20731
 19757  003614  0E97               	movlw	151
 19758  003616  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19759  003618  B0D8               	btfsc	status,0,c
 19760  00361A                     u20731:
 19761  00361A  D743               	goto	l19794
 19762                           
 19763                           ; BSR set to: 1
 19764  00361C  0EFE               	movlw	254
 19765  00361E  6F60               	movwf	??_MenuMng& (0+255),b
 19766  003620  0EFF               	movlw	255
 19767  003622  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19768  003624  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19769  00362A  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19770  003630  5160               	movf	??_MenuMng& (0+255),w,b
 19771  003632  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19772  003634  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19773  003636  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19774  003638  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19775  00363A  E104               	bnz	u20740
 19776  00363C  0E0A               	movlw	10
 19777  00363E  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19778  003640  A0D8               	btfss	status,0,c
 19779  003642  D007               	goto	l19846
 19780  003644                     u20740:
 19781                           
 19782                           ; BSR set to: 1
 19783  003644  0EFE               	movlw	254
 19784  003646  2593               	addwf	_menuVal& (0+255),w,b
 19785  003648  6F68               	movwf	_MenuMng$4365& (0+255),b
 19786  00364A  0EFF               	movlw	255
 19787  00364C  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19788  00364E  6F69               	movwf	(_MenuMng$4365+1)& (0+255),b
 19789  003650  D004               	goto	l19848
 19790  003652                     l19846:
 19791                           
 19792                           ; BSR set to: 1
 19793  003652  0E00               	movlw	0
 19794  003654  6F69               	movwf	(_MenuMng$4365+1)& (0+255),b
 19795  003656  0E0A               	movlw	10
 19796  003658  6F68               	movwf	_MenuMng$4365& (0+255),b
 19797  00365A                     l19848:
 19798                           
 19799                           ; BSR set to: 1
 19800  00365A  0060  F5A0  F193   	movff	_MenuMng$4365,_menuVal
 19801  003660  0060  F5A4  F194   	movff	_MenuMng$4365+1,_menuVal+1
 19802  003666  D094               	goto	l19878
 19803  003668                     l19852:
 19804                           
 19805                           ; BSR set to: 1
 19806                           ;menu.c: 305:                                 menuVal = ((menuVal - 2 > (1500/10))? (150
      +                          0/10) : ((menuVal - 2 < (50/10))? (50/10) : menuVal - 2));
 19807  003668  0EFE               	movlw	254
 19808  00366A  6F60               	movwf	??_MenuMng& (0+255),b
 19809  00366C  0EFF               	movlw	255
 19810  00366E  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19811  003670  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19812  003676  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19813  00367C  5160               	movf	??_MenuMng& (0+255),w,b
 19814  00367E  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19815  003680  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19816  003682  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19817  003684  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19818  003686  E103               	bnz	u20751
 19819  003688  0E97               	movlw	151
 19820  00368A  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19821  00368C  B0D8               	btfsc	status,0,c
 19822  00368E                     u20751:
 19823  00368E  D709               	goto	l19794
 19824                           
 19825                           ; BSR set to: 1
 19826  003690  0EFE               	movlw	254
 19827  003692  6F60               	movwf	??_MenuMng& (0+255),b
 19828  003694  0EFF               	movlw	255
 19829  003696  6F61               	movwf	(??_MenuMng+1)& (0+255),b
 19830  003698  0060  F64C  F162   	movff	_menuVal,??_MenuMng+2
 19831  00369E  0060  F650  F163   	movff	_menuVal+1,??_MenuMng+3
 19832  0036A4  5160               	movf	??_MenuMng& (0+255),w,b
 19833  0036A6  2762               	addwf	(??_MenuMng+2)& (0+255),f,b
 19834  0036A8  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19835  0036AA  2363               	addwfc	(??_MenuMng+3)& (0+255),f,b
 19836  0036AC  5163               	movf	(??_MenuMng+3)& (0+255),w,b
 19837  0036AE  E104               	bnz	u20760
 19838  0036B0  0E05               	movlw	5
 19839  0036B2  5D62               	subwf	(??_MenuMng+2)& (0+255),w,b
 19840  0036B4  A0D8               	btfss	status,0,c
 19841  0036B6  D007               	goto	l19858
 19842  0036B8                     u20760:
 19843                           
 19844                           ; BSR set to: 1
 19845  0036B8  0EFE               	movlw	254
 19846  0036BA  2593               	addwf	_menuVal& (0+255),w,b
 19847  0036BC  6F6A               	movwf	_MenuMng$4366& (0+255),b
 19848  0036BE  0EFF               	movlw	255
 19849  0036C0  2194               	addwfc	(_menuVal+1)& (0+255),w,b
 19850  0036C2  6F6B               	movwf	(_MenuMng$4366+1)& (0+255),b
 19851  0036C4  D004               	goto	l19860
 19852  0036C6                     l19858:
 19853                           
 19854                           ; BSR set to: 1
 19855  0036C6  0E00               	movlw	0
 19856  0036C8  6F6B               	movwf	(_MenuMng$4366+1)& (0+255),b
 19857  0036CA  0E05               	movlw	5
 19858  0036CC  6F6A               	movwf	_MenuMng$4366& (0+255),b
 19859  0036CE                     l19860:
 19860                           
 19861                           ; BSR set to: 1
 19862  0036CE  0060  F5A8  F193   	movff	_MenuMng$4366,_menuVal
 19863  0036D4  0060  F5AC  F194   	movff	_MenuMng$4366+1,_menuVal+1
 19864  0036DA  D05A               	goto	l19878
 19865  0036DC                     l19866:
 19866                           
 19867                           ; BSR set to: 0
 19868  0036DC  0101               	movlb	1	; () banked
 19869  0036DE  51B7               	movf	_menuStatus& (0+255),w,b
 19870  0036E0  6F60               	movwf	??_MenuMng& (0+255),b
 19871  0036E2  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19872                           
 19873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19874                           ; Switch size 1, requested type "simple"
 19875                           ; Number of cases is 1, Range of values is 0 to 0
 19876                           ; switch strategies available:
 19877                           ; Name         Instructions Cycles
 19878                           ; simple_byte            4     3 (average)
 19879                           ;	Chosen strategy is simple_byte
 19880  0036E4  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19881  0036E6  0A00               	xorlw	0	; case 0
 19882  0036E8  A4D8               	btfss	status,2,c
 19883  0036EA  D052               	goto	l19878
 19884                           
 19885                           ; BSR set to: 1
 19886                           ; Switch size 1, requested type "simple"
 19887                           ; Number of cases is 8, Range of values is 1 to 11
 19888                           ; switch strategies available:
 19889                           ; Name         Instructions Cycles
 19890                           ; simple_byte           25    13 (average)
 19891                           ;	Chosen strategy is simple_byte
 19892  0036EC  5160               	movf	??_MenuMng& (0+255),w,b
 19893  0036EE  0A01               	xorlw	1	; case 1
 19894  0036F0  B4D8               	btfsc	status,2,c
 19895  0036F2  D733               	goto	l19816
 19896  0036F4  0A03               	xorlw	3	; case 2
 19897  0036F6  B4D8               	btfsc	status,2,c
 19898  0036F8  D75E               	goto	l19832
 19899  0036FA  0A01               	xorlw	1	; case 3
 19900  0036FC  B4D8               	btfsc	status,2,c
 19901  0036FE  D74E               	goto	l19828
 19902  003700  0A07               	xorlw	7	; case 4
 19903  003702  B4D8               	btfsc	status,2,c
 19904  003704  D72A               	goto	l19816
 19905  003706  0A01               	xorlw	1	; case 5
 19906  003708  B4D8               	btfsc	status,2,c
 19907  00370A  D774               	goto	l19840
 19908  00370C  0A03               	xorlw	3	; case 6
 19909  00370E  B4D8               	btfsc	status,2,c
 19910  003710  D7AB               	goto	l19852
 19911  003712  0A01               	xorlw	1	; case 7
 19912  003714  B4D8               	btfsc	status,2,c
 19913  003716  D7A8               	goto	l19852
 19914  003718  0A0C               	xorlw	12	; case 11
 19915  00371A  B4D8               	btfsc	status,2,c
 19916  00371C  D75C               	goto	l19836
 19917  00371E  D038               	goto	l19878
 19918  003720                     l19868:
 19919                           
 19920                           ; BSR set to: 1
 19921                           ;menu.c: 314:                     if (menuStatus == CFG_IDLE) {
 19922  003720  51B7               	movf	_menuStatus& (0+255),w,b
 19923  003722  A4D8               	btfss	status,2,c
 19924  003724  D035               	goto	l19878
 19925                           
 19926                           ; BSR set to: 1
 19927                           ;menu.c: 316:                         menuStatus = CFG_POWEROFF;
 19928  003726  0E0C               	movlw	12
 19929  003728  6FB7               	movwf	_menuStatus& (0+255),b
 19930                           
 19931                           ; BSR set to: 1
 19932                           ;menu.c: 317:                         menuTstamp = timeGet();
 19933  00372A  ECFA  F050         	call	_timeGet	;wreg free
 19934  00372E  0060  F24C  F238   	movff	?_timeGet,_menuTstamp
 19935  003734  0060  F250  F239   	movff	?_timeGet+1,_menuTstamp+1
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;menu.c: 318:                         LATDbits.LATD0 = 1;
 19939  00373A  80BD               	bsf	189,0,c	;volatile
 19940  00373C  D029               	goto	l19878
 19941  00373E                     l19876:
 19942                           
 19943                           ; BSR set to: 1
 19944  00373E  0060  F5B0  F160   	movff	MenuMng@keyPress,??_MenuMng
 19945  003744  6B61               	clrf	(??_MenuMng+1)& (0+255),b
 19946  003746  BF60               	btfsc	??_MenuMng& (0+255),7,b
 19947  003748  0761               	decf	(??_MenuMng+1)& (0+255),f,b
 19948                           
 19949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19950                           ; Switch size 1, requested type "simple"
 19951                           ; Number of cases is 1, Range of values is 0 to 0
 19952                           ; switch strategies available:
 19953                           ; Name         Instructions Cycles
 19954                           ; simple_byte            4     3 (average)
 19955                           ;	Chosen strategy is simple_byte
 19956  00374A  5161               	movf	(??_MenuMng+1)& (0+255),w,b
 19957  00374C  0A00               	xorlw	0	; case 0
 19958  00374E  A4D8               	btfss	status,2,c
 19959  003750  D01F               	goto	l19878
 19960                           
 19961                           ; BSR set to: 1
 19962                           ; Switch size 1, requested type "simple"
 19963                           ; Number of cases is 10, Range of values is 0 to 10
 19964                           ; switch strategies available:
 19965                           ; Name         Instructions Cycles
 19966                           ; simple_byte           31    16 (average)
 19967                           ;	Chosen strategy is simple_byte
 19968  003752  5160               	movf	??_MenuMng& (0+255),w,b
 19969  003754  0A00               	xorlw	0	; case 0
 19970  003756  B4D8               	btfsc	status,2,c
 19971  003758  D4FA               	goto	l19594
 19972  00375A  0A01               	xorlw	1	; case 1
 19973  00375C  B4D8               	btfsc	status,2,c
 19974  00375E  D58C               	goto	l19664
 19975  003760  0A03               	xorlw	3	; case 2
 19976  003762  B4D8               	btfsc	status,2,c
 19977  003764  D546               	goto	l19636
 19978  003766  0A01               	xorlw	1	; case 3
 19979  003768  B4D8               	btfsc	status,2,c
 19980  00376A  D618               	goto	l19760
 19981  00376C  0A06               	xorlw	6	; case 5
 19982  00376E  B4D8               	btfsc	status,2,c
 19983  003770  D6E8               	goto	l19812
 19984  003772  0A03               	xorlw	3	; case 6
 19985  003774  B4D8               	btfsc	status,2,c
 19986  003776  D5AB               	goto	l19702
 19987  003778  0A01               	xorlw	1	; case 7
 19988  00377A  B4D8               	btfsc	status,2,c
 19989  00377C  D597               	goto	l19686
 19990  00377E  0A0F               	xorlw	15	; case 8
 19991  003780  B4D8               	btfsc	status,2,c
 19992  003782  D5E8               	goto	l19728
 19993  003784  0A01               	xorlw	1	; case 9
 19994  003786  B4D8               	btfsc	status,2,c
 19995  003788  D5F6               	goto	l19744
 19996  00378A  0A03               	xorlw	3	; case 10
 19997  00378C  B4D8               	btfsc	status,2,c
 19998  00378E  D7C8               	goto	l19868
 19999  003790                     l19878:
 20000                           
 20001                           ;menu.c: 322:         lcdPrintBR = 1;
 20002  003790  0E01               	movlw	1
 20003  003792  0101               	movlb	1	; () banked
 20004  003794  6FCD               	movwf	_lcdPrintBR& (0+255),b
 20005                           
 20006                           ;menu.c: 323:         lcdPrintTR = 1;
 20007  003796  0E01               	movlw	1
 20008  003798  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20009                           
 20010                           ;menu.c: 324:     } else {
 20011  00379A  0012               	return	
 20012  00379C                     l19880:
 20013                           
 20014                           ; BSR set to: 1
 20015                           ;menu.c: 325:         if ((menuStatus != CFG_IDLE) && (timeElapsed(menuTstamp, ((time_t)
      +                           (5*1000))))) {
 20016  00379C  51B7               	movf	_menuStatus& (0+255),w,b
 20017  00379E  B4D8               	btfsc	status,2,c
 20018  0037A0  0012               	return	
 20019                           
 20020                           ; BSR set to: 1
 20021  0037A2  0060  F8E0  F093   	movff	_menuTstamp,timeElapsed@prevTime
 20022  0037A8  0060  F8E4  F094   	movff	_menuTstamp+1,timeElapsed@prevTime+1
 20023  0037AE  0E13               	movlw	19
 20024  0037B0  0100               	movlb	0	; () banked
 20025  0037B2  6F96               	movwf	(timeElapsed@duration+1)& (0+255),b
 20026  0037B4  0E88               	movlw	136
 20027  0037B6  6F95               	movwf	timeElapsed@duration& (0+255),b
 20028  0037B8  EC09  F04D         	call	_timeElapsed	;wreg free
 20029  0037BC  0900               	iorlw	0
 20030  0037BE  B4D8               	btfsc	status,2,c
 20031  0037C0  0012               	return	
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;menu.c: 327:             lcdPrintTR = 1;
 20035  0037C2  0E01               	movlw	1
 20036  0037C4  0101               	movlb	1	; () banked
 20037  0037C6  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20038                           
 20039                           ;menu.c: 328:             lcdPrintBR = 1;
 20040  0037C8  0E01               	movlw	1
 20041  0037CA  6FCD               	movwf	_lcdPrintBR& (0+255),b
 20042                           
 20043                           ;menu.c: 329:             menuStatus = CFG_IDLE;
 20044  0037CC  0E00               	movlw	0
 20045  0037CE  6FB7               	movwf	_menuStatus& (0+255),b
 20046  0037D0  0012               	return		;funcret
 20047  0037D2                     __end_of_MenuMng:
 20048                           	opt callstack 0
 20049                           
 20050 ;; *************** function _I2C2_MuxInit *****************
 20051 ;; Defined at:
 20052 ;;		line 23 in file "i2c2_mux.c"
 20053 ;; Parameters:    Size  Location     Type
 20054 ;;		None
 20055 ;; Auto vars:     Size  Location     Type
 20056 ;;		None
 20057 ;; Return value:  Size  Location     Type
 20058 ;;                  1    wreg      void 
 20059 ;; Registers used:
 20060 ;;		wreg, status,2
 20061 ;; Tracked objects:
 20062 ;;		On entry : 6/0
 20063 ;;		On exit  : 3F/1
 20064 ;;		Unchanged: 0/0
 20065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20070 ;;Total ram usage:        0 bytes
 20071 ;; Hardware stack levels used:    1
 20072 ;; Hardware stack levels required when called:   17
 20073 ;; This function calls:
 20074 ;;		Nothing
 20075 ;; This function is called by:
 20076 ;;		_main
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text63
 20081  009FAC                     __ptext63:
 20082                           	opt callstack 0
 20083  009FAC                     _I2C2_MuxInit:
 20084                           	opt callstack 13
 20085                           
 20086                           ;i2c2_mux.c: 24:     lastI2C2MAckResponse = 1;
 20087                           
 20088                           ;incstack = 0
 20089  009FAC  0E01               	movlw	1
 20090  009FAE  0101               	movlb	1	; () banked
 20091  009FB0  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 20092                           
 20093                           ;i2c2_mux.c: 25:     lastI2C2LAckResponse = 1;
 20094  009FB2  0E01               	movlw	1
 20095  009FB4  0102               	movlb	2	; () banked
 20096  009FB6  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 20097                           
 20098                           ;i2c2_mux.c: 26:     lastI2C2MTrfResponse = I2C2_NOERR;
 20099  009FB8  0E00               	movlw	0
 20100  009FBA  0100               	movlb	0	; () banked
 20101  009FBC  6FC0               	movwf	_lastI2C2MTrfResponse& (0+255),b
 20102                           
 20103                           ;i2c2_mux.c: 27:     lastI2C2LTrfResponse = I2C2_NOERR;
 20104  009FBE  0E00               	movlw	0
 20105  009FC0  0102               	movlb	2	; () banked
 20106  009FC2  6F4E               	movwf	_lastI2C2LTrfResponse& (0+255),b
 20107                           
 20108                           ;i2c2_mux.c: 28:     currentTrfAddr = 0x0;
 20109  009FC4  0E00               	movlw	0
 20110  009FC6  0101               	movlb	1	; () banked
 20111  009FC8  6FB6               	movwf	_currentTrfAddr& (0+255),b
 20112                           
 20113                           ; BSR set to: 1
 20114  009FCA  0012               	return		;funcret
 20115  009FCC                     __end_of_I2C2_MuxInit:
 20116                           	opt callstack 0
 20117                           
 20118 ;; *************** function _CtrlPowerOff *****************
 20119 ;; Defined at:
 20120 ;;		line 172 in file "main.c"
 20121 ;; Parameters:    Size  Location     Type
 20122 ;;		None
 20123 ;; Auto vars:     Size  Location     Type
 20124 ;;		None
 20125 ;; Return value:  Size  Location     Type
 20126 ;;                  1    wreg      void 
 20127 ;; Registers used:
 20128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20129 ;; Tracked objects:
 20130 ;;		On entry : 3F/1
 20131 ;;		On exit  : 3F/1
 20132 ;;		Unchanged: 0/0
 20133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20138 ;;Total ram usage:        0 bytes
 20139 ;; Hardware stack levels used:    1
 20140 ;; Hardware stack levels required when called:   32
 20141 ;; This function calls:
 20142 ;;		_MonitorMsgSendBlock
 20143 ;;		_PrintStrBusy
 20144 ;;		_keyRead
 20145 ;;		_printf
 20146 ;;		_printstrblock
 20147 ;;		_screenMng
 20148 ;;		_setBacklight
 20149 ;;		_setCursor
 20150 ;;		_timeDelayMs
 20151 ;; This function is called by:
 20152 ;;		_main
 20153 ;; This function uses a non-reentrant model
 20154 ;;
 20155                           
 20156                           	psect	text64
 20157  008150                     __ptext64:
 20158                           	opt callstack 0
 20159  008150                     _CtrlPowerOff:
 20160                           	opt callstack 0
 20161                           
 20162                           ; BSR set to: 1
 20163                           ;main.c: 174:     setCursor(0, 1);
 20164                           
 20165                           ; BSR set to: 1
 20166                           ;incstack = 0
 20167 ;; hardware stack exceeded
 20168  008150  0E01               	movlw	1
 20169  008152  0100               	movlb	0	; () banked
 20170  008154  6F92               	movwf	setCursor@row& (0+255),b
 20171  008156  0E00               	movlw	0
 20172  008158  ECD4  F04A         	call	_setCursor
 20173                           
 20174                           ;main.c: 175:     printstrblock("                ");
 20175  00815C  0EE3               	movlw	low STR_2
 20176  00815E  0100               	movlb	0	; () banked
 20177  008160  6F8F               	movwf	printstrblock@c& (0+255),b
 20178  008162  0EFE               	movlw	high STR_2
 20179  008164  6F90               	movwf	(printstrblock@c+1)& (0+255),b
 20180  008166  ECCD  F04E         	call	_printstrblock	;wreg free
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;main.c: 176:     printf ("POWER-OFF\n");
 20184  00816A  0E6B               	movlw	low STR_3
 20185  00816C  0101               	movlb	1	; () banked
 20186  00816E  6F46               	movwf	printf@fmt& (0+255),b
 20187  008170  0EFF               	movlw	high STR_3
 20188  008172  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20189  008174  EC68  F04E         	call	_printf	;wreg free
 20190                           
 20191                           ; BSR set to: 2
 20192                           ;main.c: 178:     LATDbits.LATD0 = 0;
 20193  008178  90BD               	bcf	189,0,c	;volatile
 20194                           
 20195                           ; BSR set to: 2
 20196                           ;main.c: 179:     LATAbits.LATA3 = 0;
 20197  00817A  96BA               	bcf	186,3,c	;volatile
 20198                           
 20199                           ; BSR set to: 2
 20200                           ;main.c: 180:     LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;
 20201  00817C  94BA               	bcf	186,2,c	;volatile
 20202                           
 20203                           ; BSR set to: 2
 20204  00817E  96BC               	bcf	188,3,c	;volatile
 20205                           
 20206                           ; BSR set to: 2
 20207                           ;main.c: 181:     LATDbits.LATD6 = 0;
 20208  008180  9CBD               	bcf	189,6,c	;volatile
 20209                           
 20210                           ; BSR set to: 2
 20211                           ;main.c: 183:     lcdPrintTR = 1;
 20212  008182  0E01               	movlw	1
 20213  008184  0101               	movlb	1	; () banked
 20214  008186  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20215                           
 20216                           ; BSR set to: 1
 20217                           ;main.c: 184:     screenMng();
 20218  008188  ECD8  F014         	call	_screenMng	;wreg free
 20219  00818C                     l19208:
 20220  00818C  EC3D  F052         	call	_PrintStrBusy	;wreg free
 20221  008190  0900               	iorlw	0
 20222  008192  A4D8               	btfss	status,2,c
 20223  008194  D7FB               	goto	l19208
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;main.c: 186:     screenMng();
 20227  008196  ECD8  F014         	call	_screenMng	;wreg free
 20228                           
 20229                           ;main.c: 187:     timeDelayMs(50);
 20230  00819A  0E00               	movlw	0
 20231  00819C  0100               	movlb	0	; () banked
 20232  00819E  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20233  0081A0  0E32               	movlw	50
 20234  0081A2  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20235  0081A4  EC0A  F04C         	call	_timeDelayMs	;wreg free
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;main.c: 189:     MonitorMsgSendBlock(MONSTATE_SLEEP);
 20239  0081A8  0E08               	movlw	8
 20240  0081AA  ECE0  F04E         	call	_MonitorMsgSendBlock
 20241                           
 20242                           ; BSR set to: 1
 20243                           ;main.c: 190:     timeDelayMs(50);
 20244  0081AE  0E00               	movlw	0
 20245  0081B0  0100               	movlb	0	; () banked
 20246  0081B2  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20247  0081B4  0E32               	movlw	50
 20248  0081B6  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20249  0081B8  EC0A  F04C         	call	_timeDelayMs	;wreg free
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;main.c: 191:     setBacklight(0);
 20253  0081BC  0E00               	movlw	0
 20254  0081BE  EC7B  F050         	call	_setBacklight
 20255                           
 20256                           ;main.c: 193:     printf ("Wait for key press\n");
 20257  0081C2  0E08               	movlw	low STR_4
 20258  0081C4  0101               	movlb	1	; () banked
 20259  0081C6  6F46               	movwf	printf@fmt& (0+255),b
 20260  0081C8  0EFD               	movlw	high STR_4
 20261  0081CA  6F47               	movwf	(printf@fmt+1)& (0+255),b
 20262  0081CC  EC68  F04E         	call	_printf	;wreg free
 20263  0081D0                     l19222:
 20264  0081D0  EC6B  F049         	call	_keyRead	;wreg free
 20265  0081D4  0A0A               	xorlw	10
 20266  0081D6  A4D8               	btfss	status,2,c
 20267  0081D8  D7FB               	goto	l19222
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;main.c: 196:     ctrlStatus = CTRL_STOP;
 20271  0081DA  0E01               	movlw	1
 20272  0081DC  0101               	movlb	1	; () banked
 20273  0081DE  6FC8               	movwf	_ctrlStatus& (0+255),b
 20274                           
 20275                           ; BSR set to: 1
 20276                           ;main.c: 197:     timeDelayMs(50);
 20277  0081E0  0E00               	movlw	0
 20278  0081E2  0100               	movlb	0	; () banked
 20279  0081E4  6F9C               	movwf	(timeDelayMs@delms+1)& (0+255),b
 20280  0081E6  0E32               	movlw	50
 20281  0081E8  6F9B               	movwf	timeDelayMs@delms& (0+255),b
 20282  0081EA  EC0A  F04C         	call	_timeDelayMs	;wreg free
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;main.c: 198:     MonitorMsgSendBlock(MONSTATE_STOP);
 20286  0081EE  0E00               	movlw	0
 20287  0081F0  ECE0  F04E         	call	_MonitorMsgSendBlock
 20288                           
 20289                           ; BSR set to: 1
 20290  0081F4  0012               	return		;funcret
 20291  0081F6                     __end_of_CtrlPowerOff:
 20292                           	opt callstack 0
 20293                           
 20294 ;; *************** function _timeDelayMs *****************
 20295 ;; Defined at:
 20296 ;;		line 54 in file "time.c"
 20297 ;; Parameters:    Size  Location     Type
 20298 ;;  delms           2   59[BANK0 ] unsigned short 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;  tstamp          2   61[BANK0 ] unsigned short 
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  1    wreg      void 
 20303 ;; Registers used:
 20304 ;;		wreg, status,2, status,0, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : 3F/0
 20307 ;;		On exit  : 3F/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20314 ;;Total ram usage:        4 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:   19
 20317 ;; This function calls:
 20318 ;;		_timeElapsed
 20319 ;;		_timeGet
 20320 ;; This function is called by:
 20321 ;;		_CtrlPowerOff
 20322 ;;		_main
 20323 ;;		_LcdI2CInit
 20324 ;;		_clear
 20325 ;;		_home
 20326 ;;		_screenInit
 20327 ;;		_pressureSensorChk
 20328 ;;		_flowChk
 20329 ;;		_SelfTest
 20330 ;; This function uses a non-reentrant model
 20331 ;;
 20332                           
 20333                           	psect	text65
 20334  009814                     __ptext65:
 20335                           	opt callstack 0
 20336  009814                     _timeDelayMs:
 20337                           	opt callstack 11
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;time.c: 55:     time_t tstamp;;time.c: 56:     tstamp=timeGet();
 20341                           
 20342                           ; BSR set to: 1
 20343                           ;incstack = 0
 20344  009814  ECFA  F050         	call	_timeGet	;wreg free
 20345  009818  0060  F24C  F09D   	movff	?_timeGet,timeDelayMs@tstamp
 20346  00981E  0060  F250  F09E   	movff	?_timeGet+1,timeDelayMs@tstamp+1
 20347  009824                     l17568:
 20348                           
 20349                           ; BSR set to: 0
 20350  009824  0060  F274  F093   	movff	timeDelayMs@tstamp,timeElapsed@prevTime
 20351  00982A  0060  F278  F094   	movff	timeDelayMs@tstamp+1,timeElapsed@prevTime+1
 20352  009830  0060  F26C  F095   	movff	timeDelayMs@delms,timeElapsed@duration
 20353  009836  0060  F270  F096   	movff	timeDelayMs@delms+1,timeElapsed@duration+1
 20354  00983C  EC09  F04D         	call	_timeElapsed	;wreg free
 20355  009840  0900               	iorlw	0
 20356  009842  A4D8               	btfss	status,2,c
 20357  009844  0012               	return	
 20358  009846  D7EE               	goto	l17568
 20359  009848                     __end_of_timeDelayMs:
 20360                           	opt callstack 0
 20361                           
 20362 ;; *************** function _timeElapsed *****************
 20363 ;; Defined at:
 20364 ;;		line 43 in file "time.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;  prevTime        2   51[BANK0 ] unsigned short 
 20367 ;;  duration        2   53[BANK0 ] unsigned short 
 20368 ;; Auto vars:     Size  Location     Type
 20369 ;;  intDur          2   57[BANK0 ] unsigned short 
 20370 ;;  intTime         2   55[BANK0 ] unsigned short 
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      _Bool 
 20373 ;; Registers used:
 20374 ;;		wreg, status,2, status,0, cstack
 20375 ;; Tracked objects:
 20376 ;;		On entry : 3C/0
 20377 ;;		On exit  : 3F/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20381 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20384 ;;Total ram usage:        8 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:   18
 20387 ;; This function calls:
 20388 ;;		_TMR1_ReadTimer
 20389 ;; This function is called by:
 20390 ;;		_main
 20391 ;;		_timeDelayMs
 20392 ;;		_MenuMng
 20393 ;; This function uses a non-reentrant model
 20394 ;;
 20395                           
 20396                           	psect	text66
 20397  009A12                     __ptext66:
 20398                           	opt callstack 0
 20399  009A12                     _timeElapsed:
 20400                           	opt callstack 12
 20401                           
 20402                           ;time.c: 44:     time_t intTime, intDur;;time.c: 45:     intTime = TMR1_ReadTimer();
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;incstack = 0
 20406  009A12  EC52  F04E         	call	_TMR1_ReadTimer	;wreg free
 20407  009A16  0060  F22C  F097   	movff	?_TMR1_ReadTimer,timeElapsed@intTime
 20408  009A1C  0060  F230  F098   	movff	?_TMR1_ReadTimer+1,timeElapsed@intTime+1
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;time.c: 46:     intDur = intTime - prevTime;
 20412  009A22  5193               	movf	timeElapsed@prevTime& (0+255),w,b
 20413  009A24  5D97               	subwf	timeElapsed@intTime& (0+255),w,b
 20414  009A26  6F99               	movwf	timeElapsed@intDur& (0+255),b
 20415  009A28  5194               	movf	(timeElapsed@prevTime+1)& (0+255),w,b
 20416  009A2A  5998               	subwfb	(timeElapsed@intTime+1)& (0+255),w,b
 20417  009A2C  6F9A               	movwf	(timeElapsed@intDur+1)& (0+255),b
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;time.c: 47:     if (intDur < duration) {
 20421  009A2E  5195               	movf	timeElapsed@duration& (0+255),w,b
 20422  009A30  5D99               	subwf	timeElapsed@intDur& (0+255),w,b
 20423  009A32  5196               	movf	(timeElapsed@duration+1)& (0+255),w,b
 20424  009A34  599A               	subwfb	(timeElapsed@intDur+1)& (0+255),w,b
 20425  009A36  B0D8               	btfsc	status,0,c
 20426  009A38  D002               	goto	l17456
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;time.c: 48:         return 0;
 20430  009A3A  0E00               	movlw	0
 20431  009A3C  0012               	return	
 20432  009A3E                     l17456:
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;time.c: 50:         return 1;
 20436  009A3E  0E01               	movlw	1
 20437                           
 20438                           ; BSR set to: 0
 20439  009A40  0012               	return		;funcret
 20440  009A42                     __end_of_timeElapsed:
 20441                           	opt callstack 0
 20442                           
 20443 ;; *************** function _setBacklight *****************
 20444 ;; Defined at:
 20445 ;;		line 328 in file "LiquidCrystal_I2C.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;  new_val         1    wreg     _Bool 
 20448 ;; Auto vars:     Size  Location     Type
 20449 ;;  new_val         1   48[BANK0 ] _Bool 
 20450 ;; Return value:  Size  Location     Type
 20451 ;;                  1    wreg      void 
 20452 ;; Registers used:
 20453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20454 ;; Tracked objects:
 20455 ;;		On entry : 3C/0
 20456 ;;		On exit  : 6/0
 20457 ;;		Unchanged: 0/0
 20458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20462 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20463 ;;Total ram usage:        1 bytes
 20464 ;; Hardware stack levels used:    1
 20465 ;; Hardware stack levels required when called:   21
 20466 ;; This function calls:
 20467 ;;		_backlight
 20468 ;;		_noBacklight
 20469 ;; This function is called by:
 20470 ;;		_CtrlPowerOff
 20471 ;;		_main
 20472 ;;		_SelfTest
 20473 ;; This function uses a non-reentrant model
 20474 ;;
 20475                           
 20476                           	psect	text67
 20477  00A0F6                     __ptext67:
 20478                           	opt callstack 0
 20479  00A0F6                     _setBacklight:
 20480                           	opt callstack 9
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;incstack = 0
 20484                           ;setBacklight@new_val stored from wreg
 20485  00A0F6  0100               	movlb	0	; () banked
 20486  00A0F8  6F90               	movwf	setBacklight@new_val& (0+255),b
 20487                           
 20488                           ;LiquidCrystal_I2C.c: 329:  if(new_val){
 20489  00A0FA  0100               	movlb	0	; () banked
 20490  00A0FC  5190               	movf	setBacklight@new_val& (0+255),w,b
 20491  00A0FE  B4D8               	btfsc	status,2,c
 20492  00A100  D003               	goto	l18592
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;LiquidCrystal_I2C.c: 330:   backlight();
 20496  00A102  ECD2  F051         	call	_backlight	;wreg free
 20497                           
 20498                           ;LiquidCrystal_I2C.c: 331:  }else{
 20499  00A106  0012               	return	
 20500  00A108                     l18592:
 20501                           
 20502                           ; BSR set to: 0
 20503                           ;LiquidCrystal_I2C.c: 332:   noBacklight();
 20504  00A108  ECCC  F051         	call	_noBacklight	;wreg free
 20505  00A10C  0012               	return		;funcret
 20506  00A10E                     __end_of_setBacklight:
 20507                           	opt callstack 0
 20508                           
 20509 ;; *************** function _noBacklight *****************
 20510 ;; Defined at:
 20511 ;;		line 314 in file "LiquidCrystal_I2C.c"
 20512 ;; Parameters:    Size  Location     Type
 20513 ;;		None
 20514 ;; Auto vars:     Size  Location     Type
 20515 ;;		None
 20516 ;; Return value:  Size  Location     Type
 20517 ;;                  1    wreg      void 
 20518 ;; Registers used:
 20519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20520 ;; Tracked objects:
 20521 ;;		On entry : 3F/0
 20522 ;;		On exit  : 6/0
 20523 ;;		Unchanged: 0/0
 20524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20529 ;;Total ram usage:        0 bytes
 20530 ;; Hardware stack levels used:    1
 20531 ;; Hardware stack levels required when called:   20
 20532 ;; This function calls:
 20533 ;;		_expanderWriteBlock
 20534 ;; This function is called by:
 20535 ;;		_setBacklight
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           	psect	text68
 20540  00A398                     __ptext68:
 20541                           	opt callstack 0
 20542  00A398                     _noBacklight:
 20543                           	opt callstack 9
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;LiquidCrystal_I2C.c: 315:  _backlightval=0x00;
 20547                           
 20548                           ;incstack = 0
 20549  00A398  0E00               	movlw	0
 20550  00A39A  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 20551                           
 20552                           ; BSR set to: 0
 20553                           ;LiquidCrystal_I2C.c: 316:  expanderWriteBlock(0);
 20554  00A39C  0E00               	movlw	0
 20555  00A39E  EC1E  F051         	call	_expanderWriteBlock
 20556  00A3A2  0012               	return		;funcret
 20557  00A3A4                     __end_of_noBacklight:
 20558                           	opt callstack 0
 20559                           
 20560 ;; *************** function _backlight *****************
 20561 ;; Defined at:
 20562 ;;		line 319 in file "LiquidCrystal_I2C.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;		None
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1    wreg      void 
 20569 ;; Registers used:
 20570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20571 ;; Tracked objects:
 20572 ;;		On entry : 3F/0
 20573 ;;		On exit  : 6/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20580 ;;Total ram usage:        0 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:   20
 20583 ;; This function calls:
 20584 ;;		_expanderWriteBlock
 20585 ;; This function is called by:
 20586 ;;		_setBacklight
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text69
 20591  00A3A4                     __ptext69:
 20592                           	opt callstack 0
 20593  00A3A4                     _backlight:
 20594                           	opt callstack 9
 20595                           
 20596                           ; BSR set to: 0
 20597                           ;LiquidCrystal_I2C.c: 320:  _backlightval=0x08;
 20598                           
 20599                           ;incstack = 0
 20600  00A3A4  0E08               	movlw	8
 20601  00A3A6  6FC4               	movwf	__backlightval& (0+255),b	;volatile
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;LiquidCrystal_I2C.c: 321:  expanderWriteBlock(0);
 20605  00A3A8  0E00               	movlw	0
 20606  00A3AA  EC1E  F051         	call	_expanderWriteBlock
 20607  00A3AE  0012               	return		;funcret
 20608  00A3B0                     __end_of_backlight:
 20609                           	opt callstack 0
 20610                           
 20611 ;; *************** function _expanderWriteBlock *****************
 20612 ;; Defined at:
 20613 ;;		line 87 in file "LiquidCrystal_I2C.c"
 20614 ;; Parameters:    Size  Location     Type
 20615 ;;  data            1    wreg     unsigned char 
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;  data            1   47[BANK0 ] unsigned char 
 20618 ;; Return value:  Size  Location     Type
 20619 ;;                  1    wreg      void 
 20620 ;; Registers used:
 20621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20622 ;; Tracked objects:
 20623 ;;		On entry : 3F/0
 20624 ;;		On exit  : 6/0
 20625 ;;		Unchanged: 0/0
 20626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20631 ;;Total ram usage:        1 bytes
 20632 ;; Hardware stack levels used:    1
 20633 ;; Hardware stack levels required when called:   19
 20634 ;; This function calls:
 20635 ;;		_send4bits
 20636 ;; This function is called by:
 20637 ;;		_LcdI2CInit
 20638 ;;		_noBacklight
 20639 ;;		_backlight
 20640 ;; This function uses a non-reentrant model
 20641 ;;
 20642                           
 20643                           	psect	text70
 20644  00A23C                     __ptext70:
 20645                           	opt callstack 0
 20646  00A23C                     _expanderWriteBlock:
 20647                           	opt callstack 9
 20648                           
 20649                           ;incstack = 0
 20650                           ;expanderWriteBlock@data stored from wreg
 20651  00A23C  6F8F               	movwf	expanderWriteBlock@data& (0+255),b
 20652                           
 20653                           ;LiquidCrystal_I2C.c: 88:     send4bits(data, 0);
 20654  00A23E  0E00               	movlw	0
 20655  00A240  0100               	movlb	0	; () banked
 20656  00A242  6F8B               	movwf	send4bits@mode& (0+255),b
 20657  00A244  518F               	movf	expanderWriteBlock@data& (0+255),w,b
 20658  00A246  EC2B  F047         	call	_send4bits
 20659  00A24A  0012               	return		;funcret
 20660  00A24C                     __end_of_expanderWriteBlock:
 20661                           	opt callstack 0
 20662                           
 20663 ;; *************** function _screenMng *****************
 20664 ;; Defined at:
 20665 ;;		line 347 in file "menu.c"
 20666 ;; Parameters:    Size  Location     Type
 20667 ;;		None
 20668 ;; Auto vars:     Size  Location     Type
 20669 ;;		None
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  1    wreg      void 
 20672 ;; Registers used:
 20673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/1
 20676 ;;		On exit  : 6/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20680 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20681 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20682 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20683 ;;Total ram usage:        4 bytes
 20684 ;; Hardware stack levels used:    1
 20685 ;; Hardware stack levels required when called:   26
 20686 ;; This function calls:
 20687 ;;		_PrintStrBusy
 20688 ;;		___lwdiv
 20689 ;;		___tmul
 20690 ;;		___wmul
 20691 ;;		_printstr
 20692 ;;		_setCursor
 20693 ;;		_sprintf
 20694 ;; This function is called by:
 20695 ;;		_CtrlPowerOff
 20696 ;;		_main
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text71
 20701  0029B0                     __ptext71:
 20702                           	opt callstack 0
 20703  0029B0                     _screenMng:
 20704                           	opt callstack 4
 20705                           
 20706                           ;menu.c: 349:     if (lcdPrintTR && !PrintStrBusy()) {
 20707                           
 20708                           ;incstack = 0
 20709  0029B0  0101               	movlb	1	; () banked
 20710  0029B2  51CE               	movf	_lcdPrintTR& (0+255),w,b
 20711  0029B4  B4D8               	btfsc	status,2,c
 20712  0029B6  D222               	goto	l18492
 20713                           
 20714                           ; BSR set to: 1
 20715  0029B8  EC3D  F052         	call	_PrintStrBusy	;wreg free
 20716  0029BC  0900               	iorlw	0
 20717  0029BE  A4D8               	btfss	status,2,c
 20718  0029C0  D21D               	goto	l18492
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;menu.c: 350:         lcdPrintTR = 0;
 20722  0029C2  0E00               	movlw	0
 20723  0029C4  0101               	movlb	1	; () banked
 20724  0029C6  6FCE               	movwf	_lcdPrintTR& (0+255),b
 20725                           
 20726                           ;menu.c: 351:         if ((menuStatus == CFG_IDLE) || (menuStatus == CFG_LOWVA) || (menu
      +                          Status == CFG_HIGHVA)) {
 20727  0029C8  51B7               	movf	_menuStatus& (0+255),w,b
 20728  0029CA  B4D8               	btfsc	status,2,c
 20729  0029CC  D008               	goto	u18760
 20730                           
 20731                           ; BSR set to: 1
 20732  0029CE  0E06               	movlw	6
 20733  0029D0  19B7               	xorwf	_menuStatus& (0+255),w,b
 20734  0029D2  B4D8               	btfsc	status,2,c
 20735  0029D4  D004               	goto	u18760
 20736                           
 20737                           ; BSR set to: 1
 20738  0029D6  0E07               	movlw	7
 20739  0029D8  19B7               	xorwf	_menuStatus& (0+255),w,b
 20740  0029DA  A4D8               	btfss	status,2,c
 20741  0029DC  D04C               	goto	l18434
 20742  0029DE                     u18760:
 20743                           
 20744                           ; BSR set to: 1
 20745                           ;menu.c: 352:             if (ctrlStatus != CTRL_SLEEP) {
 20746  0029DE  0E03               	movlw	3
 20747  0029E0  19C8               	xorwf	_ctrlStatus& (0+255),w,b
 20748  0029E2  B4D8               	btfsc	status,2,c
 20749  0029E4  D03D               	goto	l18432
 20750                           
 20751                           ; BSR set to: 1
 20752                           ;menu.c: 353:                 if (VentMode == VMODE_PRESSURE) {
 20753  0029E6  51F8               	movf	_VentMode& (0+255),w,b
 20754  0029E8  A4D8               	btfss	status,2,c
 20755  0029EA  D01B               	goto	l18430
 20756                           
 20757                           ; BSR set to: 1
 20758                           ;menu.c: 354:                     sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, 
      +                          IP, MaxP);
 20759  0029EC  0EA3               	movlw	low _lcdTopRow
 20760  0029EE  6F46               	movwf	sprintf@s& (0+255),b
 20761  0029F0  0E02               	movlw	high _lcdTopRow
 20762  0029F2  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20763  0029F4  0EB7               	movlw	low STR_37
 20764  0029F6  6F48               	movwf	sprintf@fmt& (0+255),b
 20765  0029F8  0EFC               	movlw	high STR_37
 20766  0029FA  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20767  0029FC  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20768  002A02  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20769  002A04  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20770  002A0A  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20771  002A0C  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 20772  002A12  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20773  002A14  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 20774  002A1A  6B51               	clrf	(?_sprintf+11)& (0+255),b
 20775  002A1C  EC58  F047         	call	_sprintf	;wreg free
 20776                           
 20777                           ;menu.c: 355:                 } else {
 20778  002A20  D1D8               	goto	l18484
 20779  002A22                     l18430:
 20780                           
 20781                           ; BSR set to: 1
 20782                           ;menu.c: 356:                     sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 20783  002A22  0EA3               	movlw	low _lcdTopRow
 20784  002A24  6F46               	movwf	sprintf@s& (0+255),b
 20785  002A26  0E02               	movlw	high _lcdTopRow
 20786  002A28  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20787  002A2A  0E55               	movlw	low STR_38
 20788  002A2C  6F48               	movwf	sprintf@fmt& (0+255),b
 20789  002A2E  0EFD               	movlw	high STR_38
 20790  002A30  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20791  002A32  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20792  002A38  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20793  002A3A  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20794  002A40  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20795  002A42  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 20796  002A48  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20797  002A4A  51FE               	movf	_MaxV& (0+255),w,b
 20798  002A4C  0D0A               	mullw	10
 20799  002A4E  006F FFCC  F150    	movff	prodl,?_sprintf+10
 20800  002A54  006F FFD0  F151    	movff	prodh,?_sprintf+11
 20801  002A5A  EC58  F047         	call	_sprintf	;wreg free
 20802  002A5E  D1B9               	goto	l18484
 20803  002A60                     l18432:
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;menu.c: 359:                 sprintf(lcdTopRow, "----OFF-STATE---");
 20807  002A60  0EA3               	movlw	low _lcdTopRow
 20808  002A62  6F46               	movwf	sprintf@s& (0+255),b
 20809  002A64  0E02               	movlw	high _lcdTopRow
 20810  002A66  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20811  002A68  0EC1               	movlw	low STR_39
 20812  002A6A  6F48               	movwf	sprintf@fmt& (0+255),b
 20813  002A6C  0EFE               	movlw	high STR_39
 20814  002A6E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20815  002A70  EC58  F047         	call	_sprintf	;wreg free
 20816  002A74  D1AE               	goto	l18484
 20817  002A76                     l18434:
 20818                           
 20819                           ; BSR set to: 1
 20820  002A76  0E02               	movlw	2
 20821  002A78  19B7               	xorwf	_menuStatus& (0+255),w,b
 20822  002A7A  A4D8               	btfss	status,2,c
 20823  002A7C  D041               	goto	l18442
 20824                           
 20825                           ; BSR set to: 1
 20826                           ;menu.c: 362:             if (VentMode == VMODE_PRESSURE) {
 20827  002A7E  51F8               	movf	_VentMode& (0+255),w,b
 20828  002A80  A4D8               	btfss	status,2,c
 20829  002A82  D01D               	goto	l18440
 20830                           
 20831                           ; BSR set to: 1
 20832                           ;menu.c: 363:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", menuVal, PEEP, 
      +                          IP, MaxP);
 20833  002A84  0EA3               	movlw	low _lcdTopRow
 20834  002A86  6F46               	movwf	sprintf@s& (0+255),b
 20835  002A88  0E02               	movlw	high _lcdTopRow
 20836  002A8A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20837  002A8C  0EB7               	movlw	low STR_37
 20838  002A8E  6F48               	movwf	sprintf@fmt& (0+255),b
 20839  002A90  0EFC               	movlw	high STR_37
 20840  002A92  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20841  002A94  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 20842  002A9A  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 20843  002AA0  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20844  002AA6  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20845  002AA8  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 20846  002AAE  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20847  002AB0  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 20848  002AB6  6B51               	clrf	(?_sprintf+11)& (0+255),b
 20849  002AB8  EC58  F047         	call	_sprintf	;wreg free
 20850                           
 20851                           ;menu.c: 364:             } else {
 20852  002ABC  D18A               	goto	l18484
 20853  002ABE                     l18440:
 20854                           
 20855                           ; BSR set to: 1
 20856                           ;menu.c: 365:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", menuVal, PEEP, Ma
      +                          xP, 10 * ((uint16_t) MaxV));
 20857  002ABE  0EA3               	movlw	low _lcdTopRow
 20858  002AC0  6F46               	movwf	sprintf@s& (0+255),b
 20859  002AC2  0E02               	movlw	high _lcdTopRow
 20860  002AC4  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20861  002AC6  0E55               	movlw	low STR_38
 20862  002AC8  6F48               	movwf	sprintf@fmt& (0+255),b
 20863  002ACA  0EFD               	movlw	high STR_38
 20864  002ACC  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20865  002ACE  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 20866  002AD4  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 20867  002ADA  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20868  002AE0  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20869  002AE2  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 20870  002AE8  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20871  002AEA  51FE               	movf	_MaxV& (0+255),w,b
 20872  002AEC  0D0A               	mullw	10
 20873  002AEE  006F FFCC  F150    	movff	prodl,?_sprintf+10
 20874  002AF4  006F FFD0  F151    	movff	prodh,?_sprintf+11
 20875  002AFA  EC58  F047         	call	_sprintf	;wreg free
 20876  002AFE  D169               	goto	l18484
 20877  002B00                     l18442:
 20878                           
 20879                           ; BSR set to: 1
 20880  002B00  0E03               	movlw	3
 20881  002B02  19B7               	xorwf	_menuStatus& (0+255),w,b
 20882  002B04  A4D8               	btfss	status,2,c
 20883  002B06  D041               	goto	l18450
 20884                           
 20885                           ; BSR set to: 1
 20886                           ;menu.c: 368:             if (VentMode == VMODE_PRESSURE) {
 20887  002B08  51F8               	movf	_VentMode& (0+255),w,b
 20888  002B0A  A4D8               	btfss	status,2,c
 20889  002B0C  D01D               	goto	l18448
 20890                           
 20891                           ; BSR set to: 1
 20892                           ;menu.c: 369:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, menuVal, I
      +                          P, MaxP);
 20893  002B0E  0EA3               	movlw	low _lcdTopRow
 20894  002B10  6F46               	movwf	sprintf@s& (0+255),b
 20895  002B12  0E02               	movlw	high _lcdTopRow
 20896  002B14  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20897  002B16  0EB7               	movlw	low STR_37
 20898  002B18  6F48               	movwf	sprintf@fmt& (0+255),b
 20899  002B1A  0EFC               	movlw	high STR_37
 20900  002B1C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20901  002B1E  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20902  002B24  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20903  002B26  0060  F64C  F14C   	movff	_menuVal,?_sprintf+6
 20904  002B2C  0060  F650  F14D   	movff	_menuVal+1,?_sprintf+7
 20905  002B32  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 20906  002B38  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20907  002B3A  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 20908  002B40  6B51               	clrf	(?_sprintf+11)& (0+255),b
 20909  002B42  EC58  F047         	call	_sprintf	;wreg free
 20910                           
 20911                           ;menu.c: 370:             } else {
 20912  002B46  D145               	goto	l18484
 20913  002B48                     l18448:
 20914                           
 20915                           ; BSR set to: 1
 20916                           ;menu.c: 371:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, menuVal, Max
      +                          P, 10 * ((uint16_t) MaxV));
 20917  002B48  0EA3               	movlw	low _lcdTopRow
 20918  002B4A  6F46               	movwf	sprintf@s& (0+255),b
 20919  002B4C  0E02               	movlw	high _lcdTopRow
 20920  002B4E  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20921  002B50  0E55               	movlw	low STR_38
 20922  002B52  6F48               	movwf	sprintf@fmt& (0+255),b
 20923  002B54  0EFD               	movlw	high STR_38
 20924  002B56  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20925  002B58  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20926  002B5E  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20927  002B60  0060  F64C  F14C   	movff	_menuVal,?_sprintf+6
 20928  002B66  0060  F650  F14D   	movff	_menuVal+1,?_sprintf+7
 20929  002B6C  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 20930  002B72  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 20931  002B74  51FE               	movf	_MaxV& (0+255),w,b
 20932  002B76  0D0A               	mullw	10
 20933  002B78  006F FFCC  F150    	movff	prodl,?_sprintf+10
 20934  002B7E  006F FFD0  F151    	movff	prodh,?_sprintf+11
 20935  002B84  EC58  F047         	call	_sprintf	;wreg free
 20936                           
 20937                           ; BSR set to: 1
 20938                           ;menu.c: 373:         } else if (menuStatus == CFG_IP) {
 20939                           
 20940                           ;menu.c: 372:             }
 20941  002B88  D124               	goto	l18484
 20942  002B8A                     l18450:
 20943                           
 20944                           ; BSR set to: 1
 20945  002B8A  05B7               	decf	_menuStatus& (0+255),w,b
 20946  002B8C  A4D8               	btfss	status,2,c
 20947  002B8E  D01D               	goto	l18454
 20948                           
 20949                           ; BSR set to: 1
 20950                           ;menu.c: 374:             sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, menuVal,
      +                           MaxP);
 20951  002B90  0EA3               	movlw	low _lcdTopRow
 20952  002B92  6F46               	movwf	sprintf@s& (0+255),b
 20953  002B94  0E02               	movlw	high _lcdTopRow
 20954  002B96  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20955  002B98  0EB7               	movlw	low STR_37
 20956  002B9A  6F48               	movwf	sprintf@fmt& (0+255),b
 20957  002B9C  0EFC               	movlw	high STR_37
 20958  002B9E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20959  002BA0  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20960  002BA6  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20961  002BA8  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20962  002BAE  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20963  002BB0  0060  F64C  F14E   	movff	_menuVal,?_sprintf+8
 20964  002BB6  0060  F650  F14F   	movff	_menuVal+1,?_sprintf+9
 20965  002BBC  0060  F7FC  F150   	movff	_MaxP,?_sprintf+10
 20966  002BC2  6B51               	clrf	(?_sprintf+11)& (0+255),b
 20967  002BC4  EC58  F047         	call	_sprintf	;wreg free
 20968                           
 20969                           ;menu.c: 375:         } else if (menuStatus == CFG_MAXP) {
 20970  002BC8  D104               	goto	l18484
 20971  002BCA                     l18454:
 20972                           
 20973                           ; BSR set to: 1
 20974  002BCA  0E04               	movlw	4
 20975  002BCC  19B7               	xorwf	_menuStatus& (0+255),w,b
 20976  002BCE  A4D8               	btfss	status,2,c
 20977  002BD0  D041               	goto	l18462
 20978                           
 20979                           ; BSR set to: 1
 20980                           ;menu.c: 376:             if (VentMode == VMODE_PRESSURE) {
 20981  002BD2  51F8               	movf	_VentMode& (0+255),w,b
 20982  002BD4  A4D8               	btfss	status,2,c
 20983  002BD6  D01D               	goto	l18460
 20984                           
 20985                           ; BSR set to: 1
 20986                           ;menu.c: 377:                 sprintf(lcdTopRow, "%2d %2d %2d %2d ----", BPM, PEEP, IP, 
      +                          menuVal);
 20987  002BD8  0EA3               	movlw	low _lcdTopRow
 20988  002BDA  6F46               	movwf	sprintf@s& (0+255),b
 20989  002BDC  0E02               	movlw	high _lcdTopRow
 20990  002BDE  6F47               	movwf	(sprintf@s+1)& (0+255),b
 20991  002BE0  0EB7               	movlw	low STR_37
 20992  002BE2  6F48               	movwf	sprintf@fmt& (0+255),b
 20993  002BE4  0EFC               	movlw	high STR_37
 20994  002BE6  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 20995  002BE8  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 20996  002BEE  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 20997  002BF0  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 20998  002BF6  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 20999  002BF8  0060  F7EC  F14E   	movff	_IP,?_sprintf+8
 21000  002BFE  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21001  002C00  0060  F64C  F150   	movff	_menuVal,?_sprintf+10
 21002  002C06  0060  F650  F151   	movff	_menuVal+1,?_sprintf+11
 21003  002C0C  EC58  F047         	call	_sprintf	;wreg free
 21004                           
 21005                           ;menu.c: 378:             } else {
 21006  002C10  D0E0               	goto	l18484
 21007  002C12                     l18460:
 21008                           
 21009                           ; BSR set to: 1
 21010                           ;menu.c: 379:                 sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, menuVa
      +                          l, 10 * ((uint16_t) MaxV));
 21011  002C12  0EA3               	movlw	low _lcdTopRow
 21012  002C14  6F46               	movwf	sprintf@s& (0+255),b
 21013  002C16  0E02               	movlw	high _lcdTopRow
 21014  002C18  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21015  002C1A  0E55               	movlw	low STR_38
 21016  002C1C  6F48               	movwf	sprintf@fmt& (0+255),b
 21017  002C1E  0EFD               	movlw	high STR_38
 21018  002C20  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21019  002C22  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21020  002C28  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21021  002C2A  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21022  002C30  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21023  002C32  0060  F64C  F14E   	movff	_menuVal,?_sprintf+8
 21024  002C38  0060  F650  F14F   	movff	_menuVal+1,?_sprintf+9
 21025  002C3E  51FE               	movf	_MaxV& (0+255),w,b
 21026  002C40  0D0A               	mullw	10
 21027  002C42  006F FFCC  F150    	movff	prodl,?_sprintf+10
 21028  002C48  006F FFD0  F151    	movff	prodh,?_sprintf+11
 21029  002C4E  EC58  F047         	call	_sprintf	;wreg free
 21030  002C52  D0BF               	goto	l18484
 21031  002C54                     l18462:
 21032                           
 21033                           ; BSR set to: 1
 21034  002C54  0E05               	movlw	5
 21035  002C56  19B7               	xorwf	_menuStatus& (0+255),w,b
 21036  002C58  A4D8               	btfss	status,2,c
 21037  002C5A  D031               	goto	l18468
 21038                           
 21039                           ; BSR set to: 1
 21040                           ;menu.c: 382:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21041  002C5C  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21042  002C62  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21043  002C68  0E00               	movlw	0
 21044  002C6A  0100               	movlb	0	; () banked
 21045  002C6C  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21046  002C6E  0E0A               	movlw	10
 21047  002C70  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21048  002C72  EC21  F04D         	call	___wmul	;wreg free
 21049  002C76  0060  F26C  F15E   	movff	?___wmul,_screenMng$6102
 21050  002C7C  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6102+1
 21051                           
 21052                           ; BSR set to: 0
 21053                           ;menu.c: 382:             sprintf(lcdTopRow, "%2d %2d -- %2d %4d", BPM, PEEP, MaxP, 10 *
      +                           ((uint16_t) menuVal));
 21054  002C82  0EA3               	movlw	low _lcdTopRow
 21055  002C84  0101               	movlb	1	; () banked
 21056  002C86  6F46               	movwf	sprintf@s& (0+255),b
 21057  002C88  0E02               	movlw	high _lcdTopRow
 21058  002C8A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21059  002C8C  0E55               	movlw	low STR_38
 21060  002C8E  6F48               	movwf	sprintf@fmt& (0+255),b
 21061  002C90  0EFD               	movlw	high STR_38
 21062  002C92  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21063  002C94  0060  F7F0  F14A   	movff	_BPM,?_sprintf+4
 21064  002C9A  6B4B               	clrf	(?_sprintf+5)& (0+255),b
 21065  002C9C  0060  F7E8  F14C   	movff	_PEEP,?_sprintf+6
 21066  002CA2  6B4D               	clrf	(?_sprintf+7)& (0+255),b
 21067  002CA4  0060  F7FC  F14E   	movff	_MaxP,?_sprintf+8
 21068  002CAA  6B4F               	clrf	(?_sprintf+9)& (0+255),b
 21069  002CAC  0060  F578  F150   	movff	_screenMng$6102,?_sprintf+10
 21070  002CB2  0060  F57C  F151   	movff	_screenMng$6102+1,?_sprintf+11
 21071  002CB8  EC58  F047         	call	_sprintf	;wreg free
 21072                           
 21073                           ;menu.c: 383:         } else if (menuStatus == CFG_POWEROFF) {
 21074  002CBC  D08A               	goto	l18484
 21075  002CBE                     l18468:
 21076                           
 21077                           ; BSR set to: 1
 21078  002CBE  0E0C               	movlw	12
 21079  002CC0  19B7               	xorwf	_menuStatus& (0+255),w,b
 21080  002CC2  A4D8               	btfss	status,2,c
 21081  002CC4  D00B               	goto	l18472
 21082                           
 21083                           ; BSR set to: 1
 21084                           ;menu.c: 384:             sprintf(lcdTopRow, "PRESS BPM TO    ");
 21085  002CC6  0EA3               	movlw	low _lcdTopRow
 21086  002CC8  6F46               	movwf	sprintf@s& (0+255),b
 21087  002CCA  0E02               	movlw	high _lcdTopRow
 21088  002CCC  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21089  002CCE  0E9F               	movlw	low STR_48
 21090  002CD0  6F48               	movwf	sprintf@fmt& (0+255),b
 21091  002CD2  0EFE               	movlw	high STR_48
 21092  002CD4  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21093  002CD6  EC58  F047         	call	_sprintf	;wreg free
 21094                           
 21095                           ;menu.c: 385:         } else if (menuStatus == CFG_ENGVSTATS) {
 21096  002CDA  D07B               	goto	l18484
 21097  002CDC                     l18472:
 21098                           
 21099                           ; BSR set to: 1
 21100  002CDC  0E09               	movlw	9
 21101  002CDE  19B7               	xorwf	_menuStatus& (0+255),w,b
 21102  002CE0  A4D8               	btfss	status,2,c
 21103  002CE2  D01D               	goto	l18476
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;menu.c: 386:             sprintf(lcdTopRow, "%3d %3d %3d     ", rSV2ValveORT, rSV2Valve
      +                          CRT, rSV3ValveORT);
 21107  002CE4  0EA3               	movlw	low _lcdTopRow
 21108  002CE6  6F46               	movwf	sprintf@s& (0+255),b
 21109  002CE8  0E02               	movlw	high _lcdTopRow
 21110  002CEA  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21111  002CEC  0E8E               	movlw	low STR_49
 21112  002CEE  6F48               	movwf	sprintf@fmt& (0+255),b
 21113  002CF0  0EFE               	movlw	high STR_49
 21114  002CF2  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21115  002CF4  0060  F674  F14A   	movff	_rSV2ValveORT,?_sprintf+4
 21116  002CFA  0060  F678  F14B   	movff	_rSV2ValveORT+1,?_sprintf+5
 21117  002D00  0060  F66C  F14C   	movff	_rSV2ValveCRT,?_sprintf+6
 21118  002D06  0060  F670  F14D   	movff	_rSV2ValveCRT+1,?_sprintf+7
 21119  002D0C  0060  F664  F14E   	movff	_rSV3ValveORT,?_sprintf+8
 21120  002D12  0060  F668  F14F   	movff	_rSV3ValveORT+1,?_sprintf+9
 21121  002D18  EC58  F047         	call	_sprintf	;wreg free
 21122                           
 21123                           ;menu.c: 387:         } else if (menuStatus == CFG_ENGLSTATS) {
 21124  002D1C  D05A               	goto	l18484
 21125  002D1E                     l18476:
 21126                           
 21127                           ; BSR set to: 1
 21128  002D1E  0E0A               	movlw	10
 21129  002D20  19B7               	xorwf	_menuStatus& (0+255),w,b
 21130  002D22  A4D8               	btfss	status,2,c
 21131  002D24  D042               	goto	l18480
 21132                           
 21133                           ; BSR set to: 1
 21134                           ;menu.c: 388:             sprintf(lcdTopRow, "%3d   %3d  ", (uint16_t) ((((uint24_t) ((i
      +                          nt16_t) ((0.045*4096+2)/5)*1))*((uint24_t) lungC))>>7), lungR/((int16_t) ((0.045*4096+2)
      +                          /5)*1));
 21135  002D26  0EA3               	movlw	low _lcdTopRow
 21136  002D28  6F46               	movwf	sprintf@s& (0+255),b
 21137  002D2A  0E02               	movlw	high _lcdTopRow
 21138  002D2C  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21139  002D2E  0E3D               	movlw	low STR_50
 21140  002D30  6F48               	movwf	sprintf@fmt& (0+255),b
 21141  002D32  0EFF               	movlw	high STR_50
 21142  002D34  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21143  002D36  0E07               	movlw	7
 21144  002D38  6F5C               	movwf	??_screenMng& (0+255),b
 21145  002D3A  0060  F77C  F08B   	movff	_lungC,___tmul@multiplier
 21146  002D40  0060  F780  F08C   	movff	_lungC+1,___tmul@multiplier+1
 21147  002D46  0100               	movlb	0	; () banked
 21148  002D48  6B8D               	clrf	(___tmul@multiplier+2)& (0+255),b
 21149  002D4A  0E25               	movlw	37
 21150  002D4C  6F8E               	movwf	___tmul@multiplicand& (0+255),b
 21151  002D4E  0E00               	movlw	0
 21152  002D50  6F8F               	movwf	(___tmul@multiplicand+1)& (0+255),b
 21153  002D52  0E00               	movlw	0
 21154  002D54  6F90               	movwf	(___tmul@multiplicand+2)& (0+255),b
 21155  002D56  EC46  F049         	call	___tmul	;wreg free
 21156  002D5A  0101               	movlb	1	; () banked
 21157  002D5C  295C               	incf	??_screenMng& (0+255),w,b
 21158  002D5E  6F5D               	movwf	(??_screenMng+1)& (0+255),b
 21159  002D60  D005               	goto	u18900
 21160  002D62                     u18905:
 21161  002D62  0100               	movlb	0	; () banked
 21162  002D64  90D8               	bcf	status,0,c
 21163  002D66  338D               	rrcf	(?___tmul+2)& (0+255),f,b
 21164  002D68  338C               	rrcf	(?___tmul+1)& (0+255),f,b
 21165  002D6A  338B               	rrcf	?___tmul& (0+255),f,b
 21166  002D6C                     u18900:
 21167  002D6C  0101               	movlb	1	; () banked
 21168  002D6E  2F5D               	decfsz	(??_screenMng+1)& (0+255),f,b
 21169  002D70  D7F8               	goto	u18905
 21170  002D72  0060  F22C  F14A   	movff	?___tmul,?_sprintf+4
 21171  002D78  0060  F230  F14B   	movff	?___tmul+1,?_sprintf+5
 21172  002D7E  0060  FB34  F08B   	movff	_lungR,___lwdiv@dividend
 21173  002D84  0060  FB38  F08C   	movff	_lungR+1,___lwdiv@dividend+1
 21174  002D8A  0E00               	movlw	0
 21175  002D8C  0100               	movlb	0	; () banked
 21176  002D8E  6F8E               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21177  002D90  0E25               	movlw	37
 21178  002D92  6F8D               	movwf	___lwdiv@divisor& (0+255),b
 21179  002D94  EC85  F047         	call	___lwdiv	;wreg free
 21180  002D98  0060  F22C  F14C   	movff	?___lwdiv,?_sprintf+6
 21181  002D9E  0060  F230  F14D   	movff	?___lwdiv+1,?_sprintf+7
 21182  002DA4  EC58  F047         	call	_sprintf	;wreg free
 21183                           
 21184                           ;menu.c: 389:         } else if (menuStatus == CFG_ENGTRIG) {
 21185  002DA8  D014               	goto	l18484
 21186  002DAA                     l18480:
 21187                           
 21188                           ; BSR set to: 1
 21189  002DAA  0E0B               	movlw	11
 21190  002DAC  19B7               	xorwf	_menuStatus& (0+255),w,b
 21191  002DAE  A4D8               	btfss	status,2,c
 21192  002DB0  D010               	goto	l18484
 21193                           
 21194                           ; BSR set to: 1
 21195                           ;menu.c: 390:             sprintf(lcdTopRow, "%1d               ", menuVal);
 21196  002DB2  0EA3               	movlw	low _lcdTopRow
 21197  002DB4  6F46               	movwf	sprintf@s& (0+255),b
 21198  002DB6  0E02               	movlw	high _lcdTopRow
 21199  002DB8  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21200  002DBA  0E42               	movlw	low STR_51
 21201  002DBC  6F48               	movwf	sprintf@fmt& (0+255),b
 21202  002DBE  0EFD               	movlw	high STR_51
 21203  002DC0  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21204  002DC2  0060  F64C  F14A   	movff	_menuVal,?_sprintf+4
 21205  002DC8  0060  F650  F14B   	movff	_menuVal+1,?_sprintf+5
 21206  002DCE  EC58  F047         	call	_sprintf	;wreg free
 21207  002DD2                     l18484:
 21208                           
 21209                           ; BSR set to: 1
 21210                           ;menu.c: 394:         setCursor(0, 0);
 21211  002DD2  0E00               	movlw	0
 21212  002DD4  0100               	movlb	0	; () banked
 21213  002DD6  6F92               	movwf	setCursor@row& (0+255),b
 21214  002DD8  0E00               	movlw	0
 21215  002DDA  ECD4  F04A         	call	_setCursor
 21216                           
 21217                           ;menu.c: 395:         printstr(lcdTopRow);
 21218  002DDE  0EA3               	movlw	low _lcdTopRow
 21219  002DE0  0100               	movlb	0	; () banked
 21220  002DE2  6F8B               	movwf	printstr@c& (0+255),b
 21221  002DE4  0E02               	movlw	high _lcdTopRow
 21222  002DE6  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21223  002DE8  ECFE  F03B         	call	_printstr	;wreg free
 21224  002DEC                     
 21225                           ;menu.c: 396:         if (menuStatus != CFG_IDLE) {
 21226  002DEC  0101               	movlb	1	; () banked
 21227  002DEE  51B7               	movf	_menuStatus& (0+255),w,b
 21228  002DF0  B4D8               	btfsc	status,2,c
 21229  002DF2  0012               	return	
 21230  002DF4                     u18920:
 21231                           
 21232                           ;menu.c: 397:             lcdBlink = 1;
 21233  002DF4  0E01               	movlw	1
 21234  002DF6  0101               	movlb	1	; () banked
 21235  002DF8  6FB8               	movwf	_lcdBlink& (0+255),b
 21236  002DFA  0012               	return	
 21237  002DFC                     l18492:
 21238  002DFC  0101               	movlb	1	; () banked
 21239  002DFE  51CC               	movf	_lcdPrintBRR& (0+255),w,b
 21240  002E00  B4D8               	btfsc	status,2,c
 21241  002E02  D016               	goto	l18506
 21242                           
 21243                           ; BSR set to: 1
 21244  002E04  EC3D  F052         	call	_PrintStrBusy	;wreg free
 21245  002E08  0900               	iorlw	0
 21246  002E0A  A4D8               	btfss	status,2,c
 21247  002E0C  D011               	goto	l18506
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;menu.c: 400:         lcdPrintBRR = 0;
 21251  002E0E  0E00               	movlw	0
 21252  002E10  0101               	movlb	1	; () banked
 21253  002E12  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 21254                           
 21255                           ; BSR set to: 1
 21256                           ;menu.c: 402:         setCursor(11, 1);
 21257  002E14  0E01               	movlw	1
 21258  002E16  0100               	movlb	0	; () banked
 21259  002E18  6F92               	movwf	setCursor@row& (0+255),b
 21260  002E1A  0E0B               	movlw	11
 21261  002E1C  ECD4  F04A         	call	_setCursor
 21262                           
 21263                           ;menu.c: 403:         printstr(lcdBtnRRow);
 21264  002E20  0EC1               	movlw	low _lcdBtnRRow
 21265  002E22  0100               	movlb	0	; () banked
 21266  002E24  6F8B               	movwf	printstr@c& (0+255),b
 21267  002E26  0E02               	movlw	high _lcdBtnRRow
 21268  002E28  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21269  002E2A  ECFE  F03B         	call	_printstr	;wreg free
 21270  002E2E  D7DE               	goto	L60
 21271  002E30                     l18506:
 21272  002E30  0101               	movlb	1	; () banked
 21273  002E32  51CD               	movf	_lcdPrintBR& (0+255),w,b
 21274  002E34  B4D8               	btfsc	status,2,c
 21275  002E36  D0EC               	goto	l18556
 21276                           
 21277                           ; BSR set to: 1
 21278  002E38  EC3D  F052         	call	_PrintStrBusy	;wreg free
 21279  002E3C  0900               	iorlw	0
 21280  002E3E  A4D8               	btfss	status,2,c
 21281  002E40  D0E7               	goto	l18556
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;menu.c: 408:         lcdPrintBR = 0;
 21285  002E42  0E00               	movlw	0
 21286  002E44  0101               	movlb	1	; () banked
 21287  002E46  6FCD               	movwf	_lcdPrintBR& (0+255),b
 21288                           
 21289                           ; BSR set to: 1
 21290                           ;menu.c: 409:         if (menuStatus == CFG_LOWVA) {
 21291  002E48  0E06               	movlw	6
 21292  002E4A  19B7               	xorwf	_menuStatus& (0+255),w,b
 21293  002E4C  A4D8               	btfss	status,2,c
 21294  002E4E  D02D               	goto	l18518
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;menu.c: 410:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21298  002E50  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21299  002E56  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21300  002E5C  0E00               	movlw	0
 21301  002E5E  0100               	movlb	0	; () banked
 21302  002E60  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21303  002E62  0E0A               	movlw	10
 21304  002E64  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21305  002E66  EC21  F04D         	call	___wmul	;wreg free
 21306  002E6A  0060  F26C  F15E   	movff	?___wmul,_screenMng$6102
 21307  002E70  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6102+1
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;menu.c: 410:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) menuVal), 10 
      +                          * ((uint16_t) HighVAlarm));
 21311  002E76  0E8F               	movlw	low _lcdBtnRow
 21312  002E78  0101               	movlb	1	; () banked
 21313  002E7A  6F46               	movwf	sprintf@s& (0+255),b
 21314  002E7C  0E02               	movlw	high _lcdBtnRow
 21315  002E7E  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21316  002E80  0E8A               	movlw	low STR_52
 21317  002E82  6F48               	movwf	sprintf@fmt& (0+255),b
 21318  002E84  0EFF               	movlw	high STR_52
 21319  002E86  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21320  002E88  0060  F578  F14A   	movff	_screenMng$6102,?_sprintf+4
 21321  002E8E  0060  F57C  F14B   	movff	_screenMng$6102+1,?_sprintf+5
 21322  002E94  51FD               	movf	_HighVAlarm& (0+255),w,b
 21323  002E96  0D0A               	mullw	10
 21324  002E98  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 21325  002E9E  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 21326  002EA4  EC58  F047         	call	_sprintf	;wreg free
 21327                           
 21328                           ;menu.c: 411:         } else if (menuStatus == CFG_HIGHVA) {
 21329  002EA8  D0A5               	goto	l18550
 21330  002EAA                     l18518:
 21331                           
 21332                           ; BSR set to: 1
 21333  002EAA  0E07               	movlw	7
 21334  002EAC  19B7               	xorwf	_menuStatus& (0+255),w,b
 21335  002EAE  A4D8               	btfss	status,2,c
 21336  002EB0  D02D               	goto	l18524
 21337                           
 21338                           ; BSR set to: 1
 21339                           ;menu.c: 412:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21340  002EB2  0060  F64C  F09B   	movff	_menuVal,___wmul@multiplier
 21341  002EB8  0060  F650  F09C   	movff	_menuVal+1,___wmul@multiplier+1
 21342  002EBE  0E00               	movlw	0
 21343  002EC0  0100               	movlb	0	; () banked
 21344  002EC2  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21345  002EC4  0E0A               	movlw	10
 21346  002EC6  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 21347  002EC8  EC21  F04D         	call	___wmul	;wreg free
 21348  002ECC  0060  F26C  F15E   	movff	?___wmul,_screenMng$6102
 21349  002ED2  0060  F270  F15F   	movff	?___wmul+1,_screenMng$6102+1
 21350                           
 21351                           ; BSR set to: 0
 21352                           ;menu.c: 412:             sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm), 1
      +                          0 * ((uint16_t) menuVal));
 21353  002ED8  0E8F               	movlw	low _lcdBtnRow
 21354  002EDA  0101               	movlb	1	; () banked
 21355  002EDC  6F46               	movwf	sprintf@s& (0+255),b
 21356  002EDE  0E02               	movlw	high _lcdBtnRow
 21357  002EE0  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21358  002EE2  0E8A               	movlw	low STR_52
 21359  002EE4  6F48               	movwf	sprintf@fmt& (0+255),b
 21360  002EE6  0EFF               	movlw	high STR_52
 21361  002EE8  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21362  002EEA  51F7               	movf	_LowVAlarm& (0+255),w,b
 21363  002EEC  0D0A               	mullw	10
 21364  002EEE  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 21365  002EF4  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 21366  002EFA  0060  F578  F14C   	movff	_screenMng$6102,?_sprintf+6
 21367  002F00  0060  F57C  F14D   	movff	_screenMng$6102+1,?_sprintf+7
 21368  002F06  EC58  F047         	call	_sprintf	;wreg free
 21369                           
 21370                           ;menu.c: 413:         } else if (menuStatus == CFG_POWEROFF) {
 21371  002F0A  D074               	goto	l18550
 21372  002F0C                     l18524:
 21373                           
 21374                           ; BSR set to: 1
 21375  002F0C  0E0C               	movlw	12
 21376  002F0E  19B7               	xorwf	_menuStatus& (0+255),w,b
 21377  002F10  A4D8               	btfss	status,2,c
 21378  002F12  D00B               	goto	l18528
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;menu.c: 414:                 sprintf(lcdBtnRow, "POWER OFF ");
 21382  002F14  0E8F               	movlw	low _lcdBtnRow
 21383  002F16  6F46               	movwf	sprintf@s& (0+255),b
 21384  002F18  0E02               	movlw	high _lcdBtnRow
 21385  002F1A  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21386  002F1C  0E55               	movlw	low STR_54
 21387  002F1E  6F48               	movwf	sprintf@fmt& (0+255),b
 21388  002F20  0EFF               	movlw	high STR_54
 21389  002F22  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21390  002F24  EC58  F047         	call	_sprintf	;wreg free
 21391                           
 21392                           ;menu.c: 415:         } else if (menuStatus == CFG_ENGMODE) {
 21393  002F28  D065               	goto	l18550
 21394  002F2A                     l18528:
 21395                           
 21396                           ; BSR set to: 1
 21397  002F2A  0E08               	movlw	8
 21398  002F2C  19B7               	xorwf	_menuStatus& (0+255),w,b
 21399  002F2E  A4D8               	btfss	status,2,c
 21400  002F30  D00B               	goto	l18532
 21401                           
 21402                           ; BSR set to: 1
 21403                           ;menu.c: 416:                 sprintf(lcdBtnRow, "VS LS BDT");
 21404  002F32  0E8F               	movlw	low _lcdBtnRow
 21405  002F34  6F46               	movwf	sprintf@s& (0+255),b
 21406  002F36  0E02               	movlw	high _lcdBtnRow
 21407  002F38  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21408  002F3A  0E9E               	movlw	low STR_55
 21409  002F3C  6F48               	movwf	sprintf@fmt& (0+255),b
 21410  002F3E  0EFF               	movlw	high STR_55
 21411  002F40  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21412  002F42  EC58  F047         	call	_sprintf	;wreg free
 21413                           
 21414                           ;menu.c: 417:         } else if (menuStatus == CFG_ENGTRIG) {
 21415  002F46  D056               	goto	l18550
 21416  002F48                     l18532:
 21417                           
 21418                           ; BSR set to: 1
 21419  002F48  0E0B               	movlw	11
 21420  002F4A  19B7               	xorwf	_menuStatus& (0+255),w,b
 21421  002F4C  A4D8               	btfss	status,2,c
 21422  002F4E  D00B               	goto	l18536
 21423                           
 21424                           ; BSR set to: 1
 21425                           ;menu.c: 418:                 sprintf(lcdBtnRow, "      BDT");
 21426  002F50  0E8F               	movlw	low _lcdBtnRow
 21427  002F52  6F46               	movwf	sprintf@s& (0+255),b
 21428  002F54  0E02               	movlw	high _lcdBtnRow
 21429  002F56  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21430  002F58  0E94               	movlw	low STR_56
 21431  002F5A  6F48               	movwf	sprintf@fmt& (0+255),b
 21432  002F5C  0EFF               	movlw	high STR_56
 21433  002F5E  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21434  002F60  EC58  F047         	call	_sprintf	;wreg free
 21435                           
 21436                           ;menu.c: 419:         } else if (menuStatus == CFG_ENGVSTATS) {
 21437  002F64  D047               	goto	l18550
 21438  002F66                     l18536:
 21439                           
 21440                           ; BSR set to: 1
 21441  002F66  0E09               	movlw	9
 21442  002F68  19B7               	xorwf	_menuStatus& (0+255),w,b
 21443  002F6A  A4D8               	btfss	status,2,c
 21444  002F6C  D00B               	goto	l18540
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;menu.c: 420:                 sprintf(lcdBtnRow, "S2O S2C S3C");
 21448  002F6E  0E8F               	movlw	low _lcdBtnRow
 21449  002F70  6F46               	movwf	sprintf@s& (0+255),b
 21450  002F72  0E02               	movlw	high _lcdBtnRow
 21451  002F74  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21452  002F76  0E49               	movlw	low STR_57
 21453  002F78  6F48               	movwf	sprintf@fmt& (0+255),b
 21454  002F7A  0EFF               	movlw	high STR_57
 21455  002F7C  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21456  002F7E  EC58  F047         	call	_sprintf	;wreg free
 21457                           
 21458                           ;menu.c: 421:         } else if (menuStatus == CFG_ENGLSTATS) {
 21459  002F82  D038               	goto	l18550
 21460  002F84                     l18540:
 21461                           
 21462                           ; BSR set to: 1
 21463  002F84  0E0A               	movlw	10
 21464  002F86  19B7               	xorwf	_menuStatus& (0+255),w,b
 21465  002F88  A4D8               	btfss	status,2,c
 21466  002F8A  D00B               	goto	l18544
 21467                           
 21468                           ; BSR set to: 1
 21469                           ;menu.c: 422:                 sprintf(lcdBtnRow, "LC    LR   ");
 21470  002F8C  0E8F               	movlw	low _lcdBtnRow
 21471  002F8E  6F46               	movwf	sprintf@s& (0+255),b
 21472  002F90  0E02               	movlw	high _lcdBtnRow
 21473  002F92  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21474  002F94  0E31               	movlw	low STR_58
 21475  002F96  6F48               	movwf	sprintf@fmt& (0+255),b
 21476  002F98  0EFF               	movlw	high STR_58
 21477  002F9A  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21478  002F9C  EC58  F047         	call	_sprintf	;wreg free
 21479                           
 21480                           ;menu.c: 423:         } else {
 21481  002FA0  D029               	goto	l18550
 21482  002FA2                     l18544:
 21483                           
 21484                           ; BSR set to: 1
 21485                           ;menu.c: 424:             if (ctrlStatus != CTRL_SLEEP) {
 21486  002FA2  0E03               	movlw	3
 21487  002FA4  19C8               	xorwf	_ctrlStatus& (0+255),w,b
 21488  002FA6  B4D8               	btfsc	status,2,c
 21489  002FA8  D01B               	goto	l18548
 21490                           
 21491                           ; BSR set to: 1
 21492                           ;menu.c: 425:                 sprintf(lcdBtnRow, "%4d %4d  ", 10 * ((uint16_t) LowVAlarm
      +                          ), 10 * ((uint16_t) HighVAlarm));
 21493  002FAA  0E8F               	movlw	low _lcdBtnRow
 21494  002FAC  6F46               	movwf	sprintf@s& (0+255),b
 21495  002FAE  0E02               	movlw	high _lcdBtnRow
 21496  002FB0  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21497  002FB2  0E8A               	movlw	low STR_52
 21498  002FB4  6F48               	movwf	sprintf@fmt& (0+255),b
 21499  002FB6  0EFF               	movlw	high STR_52
 21500  002FB8  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21501  002FBA  51F7               	movf	_LowVAlarm& (0+255),w,b
 21502  002FBC  0D0A               	mullw	10
 21503  002FBE  006F FFCC  F14A    	movff	prodl,?_sprintf+4
 21504  002FC4  006F FFD0  F14B    	movff	prodh,?_sprintf+5
 21505  002FCA  51FD               	movf	_HighVAlarm& (0+255),w,b
 21506  002FCC  0D0A               	mullw	10
 21507  002FCE  006F FFCC  F14C    	movff	prodl,?_sprintf+6
 21508  002FD4  006F FFD0  F14D    	movff	prodh,?_sprintf+7
 21509  002FDA  EC58  F047         	call	_sprintf	;wreg free
 21510                           
 21511                           ;menu.c: 426:             } else {
 21512  002FDE  D00A               	goto	l18550
 21513  002FE0                     l18548:
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;menu.c: 427:                 sprintf(lcdBtnRow, "PWR TO ON ");
 21517  002FE0  0E8F               	movlw	low _lcdBtnRow
 21518  002FE2  6F46               	movwf	sprintf@s& (0+255),b
 21519  002FE4  0E02               	movlw	high _lcdBtnRow
 21520  002FE6  6F47               	movwf	(sprintf@s+1)& (0+255),b
 21521  002FE8  0E60               	movlw	low STR_60
 21522  002FEA  6F48               	movwf	sprintf@fmt& (0+255),b
 21523  002FEC  0EFF               	movlw	high STR_60
 21524  002FEE  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 21525  002FF0  EC58  F047         	call	_sprintf	;wreg free
 21526  002FF4                     l18550:
 21527                           
 21528                           ; BSR set to: 1
 21529                           ;menu.c: 433:         setCursor(0, 1);
 21530  002FF4  0E01               	movlw	1
 21531  002FF6  0100               	movlb	0	; () banked
 21532  002FF8  6F92               	movwf	setCursor@row& (0+255),b
 21533  002FFA  0E00               	movlw	0
 21534  002FFC  ECD4  F04A         	call	_setCursor
 21535                           
 21536                           ;menu.c: 434:         printstr(lcdBtnRow);
 21537  003000  0E8F               	movlw	low _lcdBtnRow
 21538  003002  0100               	movlb	0	; () banked
 21539  003004  6F8B               	movwf	printstr@c& (0+255),b
 21540  003006  0E02               	movlw	high _lcdBtnRow
 21541  003008  6F8C               	movwf	(printstr@c+1)& (0+255),b
 21542  00300A  ECFE  F03B         	call	_printstr	;wreg free
 21543  00300E  D6F2               	goto	u18920
 21544  003010                     l18556:
 21545  003010  0101               	movlb	1	; () banked
 21546  003012  51B8               	movf	_lcdBlink& (0+255),w,b
 21547  003014  B4D8               	btfsc	status,2,c
 21548  003016  0012               	return	
 21549                           
 21550                           ; BSR set to: 1
 21551  003018  EC3D  F052         	call	_PrintStrBusy	;wreg free
 21552  00301C  0900               	iorlw	0
 21553  00301E  A4D8               	btfss	status,2,c
 21554  003020  0012               	return	
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;menu.c: 437:         lcdBlink = 0;
 21558  003022  0E00               	movlw	0
 21559  003024  0101               	movlb	1	; () banked
 21560  003026  6FB8               	movwf	_lcdBlink& (0+255),b
 21561                           
 21562                           ;menu.c: 438:         switch (menuStatus) {
 21563  003028  D038               	goto	l18580
 21564  00302A                     l18562:
 21565                           
 21566                           ; BSR set to: 1
 21567                           ;menu.c: 440:                 setCursor(1, 0);
 21568  00302A  0E00               	movlw	0
 21569  00302C  0100               	movlb	0	; () banked
 21570  00302E  6F92               	movwf	setCursor@row& (0+255),b
 21571  003030  0E01               	movlw	1
 21572  003032  ECD4  F04A         	call	_setCursor
 21573                           
 21574                           ;menu.c: 441:                 break;
 21575  003036  0012               	return	
 21576  003038                     l18564:
 21577                           
 21578                           ; BSR set to: 1
 21579                           ;menu.c: 443:                 setCursor(4, 0);
 21580  003038  0E00               	movlw	0
 21581  00303A  0100               	movlb	0	; () banked
 21582  00303C  6F92               	movwf	setCursor@row& (0+255),b
 21583  00303E  0E04               	movlw	4
 21584  003040  ECD4  F04A         	call	_setCursor
 21585                           
 21586                           ;menu.c: 444:                 break;
 21587  003044  0012               	return	
 21588  003046                     l18566:
 21589                           
 21590                           ; BSR set to: 1
 21591                           ;menu.c: 446:                 setCursor(7, 0);
 21592  003046  0E00               	movlw	0
 21593  003048  0100               	movlb	0	; () banked
 21594  00304A  6F92               	movwf	setCursor@row& (0+255),b
 21595  00304C  0E07               	movlw	7
 21596  00304E  ECD4  F04A         	call	_setCursor
 21597                           
 21598                           ;menu.c: 447:                 break;
 21599  003052  0012               	return	
 21600  003054                     l18568:
 21601                           
 21602                           ; BSR set to: 1
 21603                           ;menu.c: 449:                 setCursor(10, 0);
 21604  003054  0E00               	movlw	0
 21605  003056  0100               	movlb	0	; () banked
 21606  003058  6F92               	movwf	setCursor@row& (0+255),b
 21607  00305A  0E0A               	movlw	10
 21608  00305C  ECD4  F04A         	call	_setCursor
 21609                           
 21610                           ;menu.c: 450:                 break;
 21611  003060  0012               	return	
 21612  003062                     l18570:
 21613                           
 21614                           ; BSR set to: 1
 21615                           ;menu.c: 452:                 setCursor(15, 0);
 21616  003062  0E00               	movlw	0
 21617  003064  0100               	movlb	0	; () banked
 21618  003066  6F92               	movwf	setCursor@row& (0+255),b
 21619  003068  0E0F               	movlw	15
 21620  00306A  ECD4  F04A         	call	_setCursor
 21621                           
 21622                           ;menu.c: 453:                 break;
 21623  00306E  0012               	return	
 21624  003070                     l18572:
 21625                           
 21626                           ; BSR set to: 1
 21627                           ;menu.c: 455:                 setCursor(3, 1);
 21628  003070  0E01               	movlw	1
 21629  003072  0100               	movlb	0	; () banked
 21630  003074  6F92               	movwf	setCursor@row& (0+255),b
 21631  003076  0E03               	movlw	3
 21632  003078  ECD4  F04A         	call	_setCursor
 21633                           
 21634                           ;menu.c: 456:                 break;
 21635  00307C  0012               	return	
 21636  00307E                     l18574:
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;menu.c: 458:                 setCursor(8, 1);
 21640  00307E  0E01               	movlw	1
 21641  003080  0100               	movlb	0	; () banked
 21642  003082  6F92               	movwf	setCursor@row& (0+255),b
 21643  003084  0E08               	movlw	8
 21644  003086  ECD4  F04A         	call	_setCursor
 21645                           
 21646                           ;menu.c: 459:                 break;
 21647  00308A  0012               	return	
 21648  00308C                     l18576:
 21649                           
 21650                           ; BSR set to: 1
 21651                           ;menu.c: 461:                 setCursor(21, 0);
 21652  00308C  0E00               	movlw	0
 21653  00308E  0100               	movlb	0	; () banked
 21654  003090  6F92               	movwf	setCursor@row& (0+255),b
 21655  003092  0E15               	movlw	21
 21656  003094  ECD4  F04A         	call	_setCursor
 21657                           
 21658                           ;menu.c: 462:                 break;
 21659  003098  0012               	return	
 21660  00309A                     l18580:
 21661                           
 21662                           ; BSR set to: 1
 21663  00309A  51B7               	movf	_menuStatus& (0+255),w,b
 21664  00309C  6F5C               	movwf	??_screenMng& (0+255),b
 21665  00309E  6B5D               	clrf	(??_screenMng+1)& (0+255),b
 21666                           
 21667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21668                           ; Switch size 1, requested type "simple"
 21669                           ; Number of cases is 1, Range of values is 0 to 0
 21670                           ; switch strategies available:
 21671                           ; Name         Instructions Cycles
 21672                           ; simple_byte            4     3 (average)
 21673                           ;	Chosen strategy is simple_byte
 21674  0030A0  515D               	movf	(??_screenMng+1)& (0+255),w,b
 21675  0030A2  0A00               	xorlw	0	; case 0
 21676  0030A4  A4D8               	btfss	status,2,c
 21677  0030A6  D7F2               	goto	l18576
 21678                           
 21679                           ; BSR set to: 1
 21680                           ; Switch size 1, requested type "simple"
 21681                           ; Number of cases is 7, Range of values is 1 to 7
 21682                           ; switch strategies available:
 21683                           ; Name         Instructions Cycles
 21684                           ; simple_byte           22    12 (average)
 21685                           ;	Chosen strategy is simple_byte
 21686  0030A8  515C               	movf	??_screenMng& (0+255),w,b
 21687  0030AA  0A01               	xorlw	1	; case 1
 21688  0030AC  B4D8               	btfsc	status,2,c
 21689  0030AE  D7CB               	goto	l18566
 21690  0030B0  0A03               	xorlw	3	; case 2
 21691  0030B2  B4D8               	btfsc	status,2,c
 21692  0030B4  D7BA               	goto	l18562
 21693  0030B6  0A01               	xorlw	1	; case 3
 21694  0030B8  B4D8               	btfsc	status,2,c
 21695  0030BA  D7BE               	goto	l18564
 21696  0030BC  0A07               	xorlw	7	; case 4
 21697  0030BE  B4D8               	btfsc	status,2,c
 21698  0030C0  D7C9               	goto	l18568
 21699  0030C2  0A01               	xorlw	1	; case 5
 21700  0030C4  B4D8               	btfsc	status,2,c
 21701  0030C6  D7CD               	goto	l18570
 21702  0030C8  0A03               	xorlw	3	; case 6
 21703  0030CA  B4D8               	btfsc	status,2,c
 21704  0030CC  D7D1               	goto	l18572
 21705  0030CE  0A01               	xorlw	1	; case 7
 21706  0030D0  B4D8               	btfsc	status,2,c
 21707  0030D2  D7D5               	goto	l18574
 21708  0030D4  D7DB               	goto	l18576
 21709  0030D6                     __end_of_screenMng:
 21710                           	opt callstack 0
 21711                           
 21712 ;; *************** function _setCursor *****************
 21713 ;; Defined at:
 21714 ;;		line 233 in file "LiquidCrystal_I2C.c"
 21715 ;; Parameters:    Size  Location     Type
 21716 ;;  col             1    wreg     unsigned char 
 21717 ;;  row             1   50[BANK0 ] unsigned char 
 21718 ;; Auto vars:     Size  Location     Type
 21719 ;;  col             1   59[BANK0 ] unsigned char 
 21720 ;;  row_offsets     8   51[BANK0 ] int [4]
 21721 ;; Return value:  Size  Location     Type
 21722 ;;                  1    wreg      void 
 21723 ;; Registers used:
 21724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21725 ;; Tracked objects:
 21726 ;;		On entry : 3F/0
 21727 ;;		On exit  : 6/0
 21728 ;;		Unchanged: 0/0
 21729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21730 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21731 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21733 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21734 ;;Total ram usage:       10 bytes
 21735 ;; Hardware stack levels used:    1
 21736 ;; Hardware stack levels required when called:   21
 21737 ;; This function calls:
 21738 ;;		_command
 21739 ;; This function is called by:
 21740 ;;		_CtrlPowerOff
 21741 ;;		_main
 21742 ;;		_screenInit
 21743 ;;		_screenMng
 21744 ;;		_pressureSensorChk
 21745 ;;		_flowChk
 21746 ;;		_SelfTest
 21747 ;; This function uses a non-reentrant model
 21748 ;;
 21749                           
 21750                           	psect	text72
 21751  0095A8                     __ptext72:
 21752                           	opt callstack 0
 21753  0095A8                     _setCursor:
 21754                           	opt callstack 9
 21755                           
 21756                           ;incstack = 0
 21757                           ;setCursor@col stored from wreg
 21758  0095A8  6F9B               	movwf	setCursor@col& (0+255),b
 21759                           
 21760                           ;LiquidCrystal_I2C.c: 234:  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 21761  0095AA  EE20  F2D3         	lfsr	2,setCursor@F16920
 21762  0095AE  EE10  F093         	lfsr	1,setCursor@row_offsets
 21763  0095B2  0E07               	movlw	7
 21764  0095B4                     u18211:
 21765  0095B4  006F FF6F FFE3     	movff	plusw2,plusw1
 21766  0095BA  06E8               	decf	wreg,f,c
 21767  0095BC  E2FB               	bc	u18211
 21768                           
 21769                           ;LiquidCrystal_I2C.c: 235:  if ( row > _numlines ) {
 21770  0095BE  0100               	movlb	0	; () banked
 21771  0095C0  5192               	movf	setCursor@row& (0+255),w,b
 21772  0095C2  5DC5               	subwf	__numlines& (0+255),w,b
 21773  0095C4  B0D8               	btfsc	status,0,c
 21774  0095C6  D002               	goto	l17888
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;LiquidCrystal_I2C.c: 236:   row = _numlines-1;
 21778  0095C8  05C5               	decf	__numlines& (0+255),w,b
 21779  0095CA  6F92               	movwf	setCursor@row& (0+255),b
 21780  0095CC                     l17888:
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;LiquidCrystal_I2C.c: 238:  command(0x80 | (col + row_offsets[row]));
 21784  0095CC  5192               	movf	setCursor@row& (0+255),w,b
 21785  0095CE  0D02               	mullw	2
 21786  0095D0  50F3               	movf	243,w,c
 21787  0095D2  0F93               	addlw	low setCursor@row_offsets
 21788  0095D4  6ED9               	movwf	fsr2l,c
 21789  0095D6  6ADA               	clrf	fsr2h,c
 21790  0095D8  50DF               	movf	indf2,w,c
 21791  0095DA  259B               	addwf	setCursor@col& (0+255),w,b
 21792  0095DC  0980               	iorlw	128
 21793  0095DE  EC26  F051         	call	_command
 21794  0095E2  0012               	return		;funcret
 21795  0095E4                     __end_of_setCursor:
 21796                           	opt callstack 0
 21797                           
 21798 ;; *************** function _command *****************
 21799 ;; Defined at:
 21800 ;;		line 135 in file "LiquidCrystal_I2C.c"
 21801 ;; Parameters:    Size  Location     Type
 21802 ;;  value           1    wreg     unsigned char 
 21803 ;; Auto vars:     Size  Location     Type
 21804 ;;  value           1   49[BANK0 ] unsigned char 
 21805 ;; Return value:  Size  Location     Type
 21806 ;;                  1    wreg      void 
 21807 ;; Registers used:
 21808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21809 ;; Tracked objects:
 21810 ;;		On entry : 3F/0
 21811 ;;		On exit  : 6/0
 21812 ;;		Unchanged: 0/0
 21813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21818 ;;Total ram usage:        1 bytes
 21819 ;; Hardware stack levels used:    1
 21820 ;; Hardware stack levels required when called:   20
 21821 ;; This function calls:
 21822 ;;		_send
 21823 ;; This function is called by:
 21824 ;;		_LcdI2CInit
 21825 ;;		_clear
 21826 ;;		_home
 21827 ;;		_setCursor
 21828 ;;		_display
 21829 ;;		_blink
 21830 ;; This function uses a non-reentrant model
 21831 ;;
 21832                           
 21833                           	psect	text73
 21834  00A24C                     __ptext73:
 21835                           	opt callstack 0
 21836  00A24C                     _command:
 21837                           	opt callstack 9
 21838                           
 21839                           ;incstack = 0
 21840                           ;command@value stored from wreg
 21841  00A24C  6F91               	movwf	command@value& (0+255),b
 21842                           
 21843                           ;LiquidCrystal_I2C.c: 136:  send(value, 0x4);
 21844  00A24E  0E04               	movlw	4
 21845  00A250  0100               	movlb	0	; () banked
 21846  00A252  6F8F               	movwf	send@mode& (0+255),b
 21847  00A254  5191               	movf	command@value& (0+255),w,b
 21848  00A256  ECBA  F04E         	call	_send
 21849  00A25A  0012               	return		;funcret
 21850  00A25C                     __end_of_command:
 21851                           	opt callstack 0
 21852                           
 21853 ;; *************** function _send *****************
 21854 ;; Defined at:
 21855 ;;		line 81 in file "LiquidCrystal_I2C.c"
 21856 ;; Parameters:    Size  Location     Type
 21857 ;;  value           1    wreg     unsigned char 
 21858 ;;  mode            1   47[BANK0 ] unsigned char 
 21859 ;; Auto vars:     Size  Location     Type
 21860 ;;  value           1   48[BANK0 ] unsigned char 
 21861 ;; Return value:  Size  Location     Type
 21862 ;;                  1    wreg      void 
 21863 ;; Registers used:
 21864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21865 ;; Tracked objects:
 21866 ;;		On entry : 3F/0
 21867 ;;		On exit  : 6/0
 21868 ;;		Unchanged: 0/0
 21869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21870 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21873 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21874 ;;Total ram usage:        2 bytes
 21875 ;; Hardware stack levels used:    1
 21876 ;; Hardware stack levels required when called:   19
 21877 ;; This function calls:
 21878 ;;		_send4bits
 21879 ;; This function is called by:
 21880 ;;		_command
 21881 ;; This function uses a non-reentrant model
 21882 ;;
 21883                           
 21884                           	psect	text74
 21885  009D74                     __ptext74:
 21886                           	opt callstack 0
 21887  009D74                     _send:
 21888                           	opt callstack 9
 21889                           
 21890                           ;incstack = 0
 21891                           ;send@value stored from wreg
 21892  009D74  6F90               	movwf	send@value& (0+255),b
 21893                           
 21894                           ;LiquidCrystal_I2C.c: 82:     send4bits(value&0xf0, mode);
 21895  009D76  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 21896  009D7C  0100               	movlb	0	; () banked
 21897  009D7E  5190               	movf	send@value& (0+255),w,b
 21898  009D80  0BF0               	andlw	240
 21899  009D82  EC2B  F047         	call	_send4bits
 21900                           
 21901                           ;LiquidCrystal_I2C.c: 83:     send4bits((value<<4)&0xf0, mode);
 21902  009D86  0060  F23C  F08B   	movff	send@mode,send4bits@mode
 21903  009D8C  0100               	movlb	0	; () banked
 21904  009D8E  3990               	swapf	send@value& (0+255),w,b
 21905  009D90  0BF0               	andlw	240
 21906  009D92  0BF0               	andlw	240
 21907  009D94  EC2B  F047         	call	_send4bits
 21908  009D98  0012               	return		;funcret
 21909  009D9A                     __end_of_send:
 21910                           	opt callstack 0
 21911                           
 21912 ;; *************** function _send4bits *****************
 21913 ;; Defined at:
 21914 ;;		line 59 in file "LiquidCrystal_I2C.c"
 21915 ;; Parameters:    Size  Location     Type
 21916 ;;  value           1    wreg     unsigned char 
 21917 ;;  mode            1   43[BANK0 ] unsigned char 
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;  value           1   44[BANK0 ] unsigned char 
 21920 ;;  idx             2   45[BANK0 ] int 
 21921 ;; Return value:  Size  Location     Type
 21922 ;;                  1    wreg      void 
 21923 ;; Registers used:
 21924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21925 ;; Tracked objects:
 21926 ;;		On entry : 3F/0
 21927 ;;		On exit  : 6/0
 21928 ;;		Unchanged: 0/0
 21929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21930 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21933 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21934 ;;Total ram usage:        4 bytes
 21935 ;; Hardware stack levels used:    1
 21936 ;; Hardware stack levels required when called:   18
 21937 ;; This function calls:
 21938 ;;		_TMR6_Start
 21939 ;; This function is called by:
 21940 ;;		_send
 21941 ;;		_expanderWriteBlock
 21942 ;;		_LcdI2CInit
 21943 ;; This function uses a non-reentrant model
 21944 ;;
 21945                           
 21946                           	psect	text75
 21947  008E56                     __ptext75:
 21948                           	opt callstack 0
 21949  008E56                     _send4bits:
 21950                           	opt callstack 9
 21951                           
 21952                           ;incstack = 0
 21953                           ;send4bits@value stored from wreg
 21954  008E56  6F8C               	movwf	send4bits@value& (0+255),b
 21955                           
 21956                           ;LiquidCrystal_I2C.c: 60:     int idx;;LiquidCrystal_I2C.c: 62:     if (lcdBusy){
 21957  008E58  0100               	movlb	0	; () banked
 21958  008E5A  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 21959  008E5C  B4D8               	btfsc	status,2,c
 21960  008E5E  D008               	goto	l17246
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;LiquidCrystal_I2C.c: 63:         PIE9bits.TMR6IE = 0;
 21964  008E60  0139               	movlb	57	; () banked
 21965  008E62  9199               	bcf	153,0,b	;volatile
 21966                           
 21967                           ;LiquidCrystal_I2C.c: 64:         idx = parBuffLen;
 21968  008E64  0060  F308  F08D   	movff	_parBuffLen,send4bits@idx	;volatile
 21969  008E6A  0100               	movlb	0	; () banked
 21970  008E6C  6B8E               	clrf	(send4bits@idx+1)& (0+255),b
 21971                           
 21972                           ;LiquidCrystal_I2C.c: 65:     } else {
 21973  008E6E  D006               	goto	l17248
 21974  008E70                     l17246:
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;LiquidCrystal_I2C.c: 66:         idx = 0;
 21978  008E70  0E00               	movlw	0
 21979  008E72  6F8E               	movwf	(send4bits@idx+1)& (0+255),b
 21980  008E74  0E00               	movlw	0
 21981  008E76  6F8D               	movwf	send4bits@idx& (0+255),b
 21982                           
 21983                           ;LiquidCrystal_I2C.c: 67:         parBuffPtr=0;
 21984  008E78  0E00               	movlw	0
 21985  008E7A  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 21986  008E7C                     l17248:
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;LiquidCrystal_I2C.c: 69:     i2cBuff[idx++]=value | mode | _backlightval;
 21990  008E7C  0E00               	movlw	low _i2cBuff
 21991  008E7E  258D               	addwf	send4bits@idx& (0+255),w,b
 21992  008E80  6ED9               	movwf	fsr2l,c
 21993  008E82  0E03               	movlw	high _i2cBuff
 21994  008E84  218E               	addwfc	(send4bits@idx+1)& (0+255),w,b
 21995  008E86  6EDA               	movwf	fsr2h,c
 21996  008E88  518C               	movf	send4bits@value& (0+255),w,b
 21997  008E8A  118B               	iorwf	send4bits@mode& (0+255),w,b
 21998  008E8C  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 21999  008E8E  6EDF               	movwf	indf2,c
 22000                           
 22001                           ; BSR set to: 0
 22002  008E90  4B8D               	infsnz	send4bits@idx& (0+255),f,b
 22003  008E92  2B8E               	incf	(send4bits@idx+1)& (0+255),f,b
 22004                           
 22005                           ; BSR set to: 0
 22006                           ;LiquidCrystal_I2C.c: 71:     parBuffLen=idx;
 22007  008E94  0060  F234  F0C2   	movff	send4bits@idx,_parBuffLen	;volatile
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;LiquidCrystal_I2C.c: 72:     if (lcdBusy){
 22011  008E9A  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22012  008E9C  B4D8               	btfsc	status,2,c
 22013  008E9E  D003               	goto	l17258
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;LiquidCrystal_I2C.c: 73:         PIE9bits.TMR6IE = 1;
 22017  008EA0  0139               	movlb	57	; () banked
 22018  008EA2  8199               	bsf	153,0,b	;volatile
 22019                           
 22020                           ;LiquidCrystal_I2C.c: 74:     } else {
 22021  008EA4  0012               	return	
 22022  008EA6                     l17258:
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;LiquidCrystal_I2C.c: 75:         lcdBusy = 1;
 22026  008EA6  0E01               	movlw	1
 22027  008EA8  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;LiquidCrystal_I2C.c: 76:         TMR6_Start();
 22031  008EAA  EC68  F052         	call	_TMR6_Start	;wreg free
 22032  008EAE  0012               	return		;funcret
 22033  008EB0                     __end_of_send4bits:
 22034                           	opt callstack 0
 22035                           
 22036 ;; *************** function ___tmul *****************
 22037 ;; Defined at:
 22038 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul24.c"
 22039 ;; Parameters:    Size  Location     Type
 22040 ;;  multiplier      3   43[BANK0 ] unsigned um
 22041 ;;  multiplicand    3   46[BANK0 ] unsigned um
 22042 ;; Auto vars:     Size  Location     Type
 22043 ;;  product         3   49[BANK0 ] unsigned um
 22044 ;; Return value:  Size  Location     Type
 22045 ;;                  3   43[BANK0 ] unsigned um
 22046 ;; Registers used:
 22047 ;;		wreg, status,2, status,0
 22048 ;; Tracked objects:
 22049 ;;		On entry : 3F/0
 22050 ;;		On exit  : 3F/0
 22051 ;;		Unchanged: 0/0
 22052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22053 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22054 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22056 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22057 ;;Total ram usage:        9 bytes
 22058 ;; Hardware stack levels used:    1
 22059 ;; Hardware stack levels required when called:   17
 22060 ;; This function calls:
 22061 ;;		Nothing
 22062 ;; This function is called by:
 22063 ;;		_inspOSMeasure
 22064 ;;		_main
 22065 ;;		_screenMng
 22066 ;; This function uses a non-reentrant model
 22067 ;;
 22068                           
 22069                           	psect	text76
 22070  00928C                     __ptext76:
 22071                           	opt callstack 0
 22072  00928C                     ___tmul:
 22073                           	opt callstack 12
 22074                           
 22075                           ; BSR set to: 0
 22076                           
 22077                           ;incstack = 0
 22078  00928C  0E00               	movlw	0
 22079  00928E  6F91               	movwf	___tmul@product& (0+255),b
 22080  009290  0E00               	movlw	0
 22081  009292  6F92               	movwf	(___tmul@product+1)& (0+255),b
 22082  009294  0E00               	movlw	0
 22083  009296  6F93               	movwf	(___tmul@product+2)& (0+255),b
 22084  009298                     l18046:
 22085                           
 22086                           ; BSR set to: 0
 22087  009298  A18B               	btfss	___tmul@multiplier& (0+255),0,b
 22088  00929A  D006               	goto	l18050
 22089                           
 22090                           ; BSR set to: 0
 22091  00929C  518E               	movf	___tmul@multiplicand& (0+255),w,b
 22092  00929E  2791               	addwf	___tmul@product& (0+255),f,b
 22093  0092A0  518F               	movf	(___tmul@multiplicand+1)& (0+255),w,b
 22094  0092A2  2392               	addwfc	(___tmul@product+1)& (0+255),f,b
 22095  0092A4  5190               	movf	(___tmul@multiplicand+2)& (0+255),w,b
 22096  0092A6  2393               	addwfc	(___tmul@product+2)& (0+255),f,b
 22097  0092A8                     l18050:
 22098                           
 22099                           ; BSR set to: 0
 22100  0092A8  90D8               	bcf	status,0,c
 22101  0092AA  378E               	rlcf	___tmul@multiplicand& (0+255),f,b
 22102  0092AC  378F               	rlcf	(___tmul@multiplicand+1)& (0+255),f,b
 22103  0092AE  3790               	rlcf	(___tmul@multiplicand+2)& (0+255),f,b
 22104  0092B0  90D8               	bcf	status,0,c
 22105  0092B2  338D               	rrcf	(___tmul@multiplier+2)& (0+255),f,b
 22106  0092B4  338C               	rrcf	(___tmul@multiplier+1)& (0+255),f,b
 22107  0092B6  338B               	rrcf	___tmul@multiplier& (0+255),f,b
 22108                           
 22109                           ; BSR set to: 0
 22110  0092B8  518B               	movf	___tmul@multiplier& (0+255),w,b
 22111  0092BA  118C               	iorwf	(___tmul@multiplier+1)& (0+255),w,b
 22112  0092BC  118D               	iorwf	(___tmul@multiplier+2)& (0+255),w,b
 22113  0092BE  A4D8               	btfss	status,2,c
 22114  0092C0  D7EB               	goto	l18046
 22115                           
 22116                           ; BSR set to: 0
 22117  0092C2  0060  F244  F08B   	movff	___tmul@product,?___tmul
 22118  0092C8  0060  F248  F08C   	movff	___tmul@product+1,?___tmul+1
 22119  0092CE  0060  F24C  F08D   	movff	___tmul@product+2,?___tmul+2
 22120                           
 22121                           ; BSR set to: 0
 22122  0092D4  0012               	return		;funcret
 22123  0092D6                     __end_of___tmul:
 22124                           	opt callstack 0
 22125                           
 22126 ;; *************** function ___lwdiv *****************
 22127 ;; Defined at:
 22128 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 22129 ;; Parameters:    Size  Location     Type
 22130 ;;  dividend        2   43[BANK0 ] unsigned int 
 22131 ;;  divisor         2   45[BANK0 ] unsigned int 
 22132 ;; Auto vars:     Size  Location     Type
 22133 ;;  quotient        2   48[BANK0 ] unsigned int 
 22134 ;;  counter         1   47[BANK0 ] unsigned char 
 22135 ;; Return value:  Size  Location     Type
 22136 ;;                  2   43[BANK0 ] unsigned int 
 22137 ;; Registers used:
 22138 ;;		wreg, status,2, status,0
 22139 ;; Tracked objects:
 22140 ;;		On entry : 3E/1
 22141 ;;		On exit  : 3F/0
 22142 ;;		Unchanged: 0/0
 22143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22145 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22147 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22148 ;;Total ram usage:        7 bytes
 22149 ;; Hardware stack levels used:    1
 22150 ;; Hardware stack levels required when called:   17
 22151 ;; This function calls:
 22152 ;;		Nothing
 22153 ;; This function is called by:
 22154 ;;		_main
 22155 ;;		_MenuMng
 22156 ;;		_screenMng
 22157 ;; This function uses a non-reentrant model
 22158 ;;
 22159                           
 22160                           	psect	text77
 22161  008F0A                     __ptext77:
 22162                           	opt callstack 0
 22163  008F0A                     ___lwdiv:
 22164                           	opt callstack 12
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;incstack = 0
 22168  008F0A  0E00               	movlw	0
 22169  008F0C  0100               	movlb	0	; () banked
 22170  008F0E  6F91               	movwf	(___lwdiv@quotient+1)& (0+255),b
 22171  008F10  0E00               	movlw	0
 22172  008F12  6F90               	movwf	___lwdiv@quotient& (0+255),b
 22173                           
 22174                           ; BSR set to: 0
 22175  008F14  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22176  008F16  118E               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22177  008F18  B4D8               	btfsc	status,2,c
 22178  008F1A  D01C               	goto	l3643
 22179                           
 22180                           ; BSR set to: 0
 22181  008F1C  0E01               	movlw	1
 22182  008F1E  6F8F               	movwf	___lwdiv@counter& (0+255),b
 22183  008F20  D004               	goto	l18094
 22184  008F22                     l18092:
 22185                           
 22186                           ; BSR set to: 0
 22187  008F22  90D8               	bcf	status,0,c
 22188  008F24  378D               	rlcf	___lwdiv@divisor& (0+255),f,b
 22189  008F26  378E               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22190  008F28  2B8F               	incf	___lwdiv@counter& (0+255),f,b
 22191  008F2A                     l18094:
 22192                           
 22193                           ; BSR set to: 0
 22194  008F2A  AF8E               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22195  008F2C  D7FA               	goto	l18092
 22196  008F2E                     u18510:
 22197                           
 22198                           ; BSR set to: 0
 22199  008F2E  90D8               	bcf	status,0,c
 22200  008F30  3790               	rlcf	___lwdiv@quotient& (0+255),f,b
 22201  008F32  3791               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22202                           
 22203                           ; BSR set to: 0
 22204  008F34  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22205  008F36  5D8B               	subwf	___lwdiv@dividend& (0+255),w,b
 22206  008F38  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22207  008F3A  598C               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22208  008F3C  A0D8               	btfss	status,0,c
 22209  008F3E  D005               	goto	l18104
 22210                           
 22211                           ; BSR set to: 0
 22212  008F40  518D               	movf	___lwdiv@divisor& (0+255),w,b
 22213  008F42  5F8B               	subwf	___lwdiv@dividend& (0+255),f,b
 22214  008F44  518E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22215  008F46  5B8C               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22216                           
 22217                           ; BSR set to: 0
 22218  008F48  8190               	bsf	___lwdiv@quotient& (0+255),0,b
 22219  008F4A                     l18104:
 22220                           
 22221                           ; BSR set to: 0
 22222  008F4A  90D8               	bcf	status,0,c
 22223  008F4C  338E               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22224  008F4E  338D               	rrcf	___lwdiv@divisor& (0+255),f,b
 22225                           
 22226                           ; BSR set to: 0
 22227  008F50  2F8F               	decfsz	___lwdiv@counter& (0+255),f,b
 22228  008F52  D7ED               	goto	u18510
 22229  008F54                     l3643:
 22230                           
 22231                           ; BSR set to: 0
 22232  008F54  0060  F240  F08B   	movff	___lwdiv@quotient,?___lwdiv
 22233  008F5A  0060  F244  F08C   	movff	___lwdiv@quotient+1,?___lwdiv+1
 22234                           
 22235                           ; BSR set to: 0
 22236  008F60  0012               	return		;funcret
 22237  008F62                     __end_of___lwdiv:
 22238                           	opt callstack 0
 22239                           
 22240 ;; *************** function _printstrblock *****************
 22241 ;; Defined at:
 22242 ;;		line 127 in file "LiquidCrystal_I2C.c"
 22243 ;; Parameters:    Size  Location     Type
 22244 ;;  c               2   47[BANK0 ] PTR const unsigned char 
 22245 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22246 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22247 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22248 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22249 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22250 ;;		 -> STR_69(18), lcdTopRow(20), STR_36(17), STR_35(17), 
 22251 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 22252 ;;		 -> STR_5(19), STR_2(17), 
 22253 ;; Auto vars:     Size  Location     Type
 22254 ;;		None
 22255 ;; Return value:  Size  Location     Type
 22256 ;;                  1    wreg      void 
 22257 ;; Registers used:
 22258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22259 ;; Tracked objects:
 22260 ;;		On entry : 3F/0
 22261 ;;		On exit  : 3F/0
 22262 ;;		Unchanged: 0/0
 22263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22268 ;;Total ram usage:        2 bytes
 22269 ;; Hardware stack levels used:    1
 22270 ;; Hardware stack levels required when called:   19
 22271 ;; This function calls:
 22272 ;;		_PrintStrBusy
 22273 ;;		_printstr
 22274 ;; This function is called by:
 22275 ;;		_CtrlPowerOff
 22276 ;;		_main
 22277 ;;		_screenInit
 22278 ;;		_pressureSensorChk
 22279 ;;		_flowChk
 22280 ;;		_SelfTest
 22281 ;; This function uses a non-reentrant model
 22282 ;;
 22283                           
 22284                           	psect	text78
 22285  009D9A                     __ptext78:
 22286                           	opt callstack 0
 22287  009D9A                     _printstrblock:
 22288                           	opt callstack 10
 22289                           
 22290                           ; BSR set to: 0
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;LiquidCrystal_I2C.c: 128:     while(PrintStrBusy());
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;incstack = 0
 22297  009D9A  EC3D  F052         	call	_PrintStrBusy	;wreg free
 22298  009D9E  0900               	iorlw	0
 22299  009DA0  A4D8               	btfss	status,2,c
 22300  009DA2  D7FB               	goto	_printstrblock
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;LiquidCrystal_I2C.c: 129:     printstr(c);
 22304  009DA4  0060  F23C  F08B   	movff	printstrblock@c,printstr@c
 22305  009DAA  0060  F240  F08C   	movff	printstrblock@c+1,printstr@c+1
 22306  009DB0  ECFE  F03B         	call	_printstr	;wreg free
 22307  009DB4                     l17896:
 22308  009DB4  EC3D  F052         	call	_PrintStrBusy	;wreg free
 22309  009DB8  0900               	iorlw	0
 22310  009DBA  B4D8               	btfsc	status,2,c
 22311  009DBC  0012               	return	
 22312  009DBE  D7FA               	goto	l17896
 22313  009DC0                     __end_of_printstrblock:
 22314                           	opt callstack 0
 22315                           
 22316 ;; *************** function _printstr *****************
 22317 ;; Defined at:
 22318 ;;		line 95 in file "LiquidCrystal_I2C.c"
 22319 ;; Parameters:    Size  Location     Type
 22320 ;;  c               2   43[BANK0 ] PTR const unsigned char 
 22321 ;;		 -> STR_103(17), STR_102(17), STR_99(17), STR_98(17), 
 22322 ;;		 -> STR_95(18), STR_94(17), STR_91(17), STR_89(17), 
 22323 ;;		 -> STR_88(17), STR_86(17), STR_83(14), STR_81(17), 
 22324 ;;		 -> STR_80(17), STR_79(17), STR_78(17), STR_77(17), 
 22325 ;;		 -> STR_76(17), STR_74(17), STR_73(14), STR_71(14), 
 22326 ;;		 -> STR_69(18), lcdBtnRow(20), lcdTopRow(20), STR_36(17), 
 22327 ;;		 -> STR_35(17), lcdBtnRRow(10), STR_9(17), STR_8(17), 
 22328 ;;		 -> STR_7(17), STR_6(17), STR_5(19), STR_2(17), 
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;  idx             1   46[BANK0 ] unsigned char 
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1    wreg      void 
 22333 ;; Registers used:
 22334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22335 ;; Tracked objects:
 22336 ;;		On entry : 3F/0
 22337 ;;		On exit  : 6/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22343 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22344 ;;Total ram usage:        4 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:   18
 22347 ;; This function calls:
 22348 ;;		_TMR6_Start
 22349 ;; This function is called by:
 22350 ;;		_printstrblock
 22351 ;;		_screenMng
 22352 ;; This function uses a non-reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text79
 22356  0077FC                     __ptext79:
 22357                           	opt callstack 0
 22358  0077FC                     _printstr:
 22359                           	opt callstack 11
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;LiquidCrystal_I2C.c: 96:     uint8_t idx;;LiquidCrystal_I2C.c: 98:     if (lcdBusy){
 22363                           
 22364                           ; BSR set to: 0
 22365                           ;incstack = 0
 22366  0077FC  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22367  0077FE  B4D8               	btfsc	status,2,c
 22368  007800  D006               	goto	l17588
 22369                           
 22370                           ; BSR set to: 0
 22371                           ;LiquidCrystal_I2C.c: 99:         PIE9bits.TMR6IE = 0;
 22372  007802  0139               	movlb	57	; () banked
 22373  007804  9199               	bcf	153,0,b	;volatile
 22374                           
 22375                           ;LiquidCrystal_I2C.c: 100:         idx = parBuffLen;
 22376  007806  0060  F308  F08E   	movff	_parBuffLen,printstr@idx	;volatile
 22377                           
 22378                           ;LiquidCrystal_I2C.c: 101:     } else {
 22379  00780C  D052               	goto	l17600
 22380  00780E                     l17588:
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;LiquidCrystal_I2C.c: 102:         idx = 0;
 22384  00780E  0E00               	movlw	0
 22385  007810  6F8E               	movwf	printstr@idx& (0+255),b
 22386                           
 22387                           ;LiquidCrystal_I2C.c: 103:         parBuffPtr=0;
 22388  007812  0E00               	movlw	0
 22389  007814  6FC3               	movwf	_parBuffPtr& (0+255),b	;volatile
 22390  007816  D04D               	goto	l17600
 22391  007818                     l17590:
 22392                           
 22393                           ;LiquidCrystal_I2C.c: 106:         i2cBuff[idx++]=((*c)&0xF0) | 0x1 | 0x4 | _backlightva
      +                          l;
 22394  007818  0E00               	movlw	low _i2cBuff
 22395  00781A  0100               	movlb	0	; () banked
 22396  00781C  258E               	addwf	printstr@idx& (0+255),w,b
 22397  00781E  6ED9               	movwf	fsr2l,c
 22398  007820  6ADA               	clrf	fsr2h,c
 22399  007822  0E03               	movlw	high _i2cBuff
 22400  007824  22DA               	addwfc	fsr2h,f,c
 22401  007826  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22402  00782C  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22403  007832  0E00               	movlw	low (__mediumconst shr (0+16))
 22404  007834  6EF8               	movwf	tblptru,c
 22405  007836  0E0F               	movlw	(high __ramtop+-1)
 22406  007838  64F7               	cpfsgt	tblptrh,c
 22407  00783A  D003               	bra	u17887
 22408  00783C  0008               	tblrd		*
 22409  00783E  50F5               	movf	tablat,w,c
 22410  007840  D007               	bra	u17880
 22411  007842                     u17887:
 22412  007842  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22413  007848  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22414  00784E  50E7               	movf	indf1,w,c
 22415  007850                     u17880:
 22416  007850  0BF0               	andlw	240
 22417  007852  0100               	movlb	0	; () banked
 22418  007854  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 22419  007856  0905               	iorlw	5
 22420  007858  6EDF               	movwf	indf2,c
 22421                           
 22422                           ; BSR set to: 0
 22423  00785A  2B8E               	incf	printstr@idx& (0+255),f,b
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;LiquidCrystal_I2C.c: 107:         i2cBuff[idx++]=(((*c)&0x0F)<<4) | 0x1 | 0x4 | _backli
      +                          ghtval;
 22427  00785C  0E00               	movlw	low _i2cBuff
 22428  00785E  258E               	addwf	printstr@idx& (0+255),w,b
 22429  007860  6ED9               	movwf	fsr2l,c
 22430  007862  6ADA               	clrf	fsr2h,c
 22431  007864  0E03               	movlw	high _i2cBuff
 22432  007866  22DA               	addwfc	fsr2h,f,c
 22433  007868  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22434  00786E  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22435  007874  0E00               	movlw	low (__mediumconst shr (0+16))
 22436  007876  6EF8               	movwf	tblptru,c
 22437  007878  0E0F               	movlw	(high __ramtop+-1)
 22438  00787A  64F7               	cpfsgt	tblptrh,c
 22439  00787C  D003               	bra	u17897
 22440  00787E  0008               	tblrd		*
 22441  007880  50F5               	movf	tablat,w,c
 22442  007882  D007               	bra	u17890
 22443  007884                     u17897:
 22444  007884  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22445  00788A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22446  007890  50E7               	movf	indf1,w,c
 22447  007892                     u17890:
 22448  007892  0100               	movlb	0	; () banked
 22449  007894  6F8D               	movwf	??_printstr& (0+255),b
 22450  007896  0E0F               	movlw	15
 22451  007898  178D               	andwf	??_printstr& (0+255),f,b
 22452  00789A  398D               	swapf	??_printstr& (0+255),w,b
 22453  00789C  0BF0               	andlw	240
 22454  00789E  11C4               	iorwf	__backlightval& (0+255),w,b	;volatile
 22455  0078A0  0905               	iorlw	5
 22456  0078A2  6EDF               	movwf	indf2,c
 22457  0078A4  2B8E               	incf	printstr@idx& (0+255),f,b
 22458                           
 22459                           ;LiquidCrystal_I2C.c: 108:         c++;
 22460  0078A6  4B8B               	infsnz	printstr@c& (0+255),f,b
 22461  0078A8  2B8C               	incf	(printstr@c+1)& (0+255),f,b
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;LiquidCrystal_I2C.c: 109:         if (idx >=80) {
 22465  0078AA  0E4F               	movlw	79
 22466  0078AC  658E               	cpfsgt	printstr@idx& (0+255),b
 22467  0078AE  D001               	goto	l17600
 22468  0078B0  D018               	goto	u17920
 22469  0078B2                     l17600:
 22470                           
 22471                           ;LiquidCrystal_I2C.c: 105:     while (*c){
 22472  0078B2  0060  F22F  FFF6   	movff	printstr@c,tblptrl
 22473  0078B8  0060  F233  FFF7   	movff	printstr@c+1,tblptrh
 22474  0078BE  0E00               	movlw	low (__mediumconst shr (0+16))
 22475  0078C0  6EF8               	movwf	tblptru,c
 22476  0078C2  0E0F               	movlw	(high __ramtop+-1)
 22477  0078C4  64F7               	cpfsgt	tblptrh,c
 22478  0078C6  D003               	bra	u17917
 22479  0078C8  0008               	tblrd		*
 22480  0078CA  50F5               	movf	tablat,w,c
 22481  0078CC  D007               	bra	u17910
 22482  0078CE                     u17917:
 22483  0078CE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22484  0078D4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22485  0078DA  50E7               	movf	indf1,w,c
 22486  0078DC                     u17910:
 22487  0078DC  0900               	iorlw	0
 22488  0078DE  A4D8               	btfss	status,2,c
 22489  0078E0  D79B               	goto	l17590
 22490  0078E2                     u17920:
 22491                           
 22492                           ;LiquidCrystal_I2C.c: 114:     parBuffLen=idx;
 22493  0078E2  0060  F238  F0C2   	movff	printstr@idx,_parBuffLen	;volatile
 22494                           
 22495                           ;LiquidCrystal_I2C.c: 115:     if (lcdBusy){
 22496  0078E8  0100               	movlb	0	; () banked
 22497  0078EA  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22498  0078EC  B4D8               	btfsc	status,2,c
 22499  0078EE  D003               	goto	l17606
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;LiquidCrystal_I2C.c: 116:         PIE9bits.TMR6IE = 1;
 22503  0078F0  0139               	movlb	57	; () banked
 22504  0078F2  8199               	bsf	153,0,b	;volatile
 22505                           
 22506                           ;LiquidCrystal_I2C.c: 117:     } else {
 22507  0078F4  0012               	return	
 22508  0078F6                     l17606:
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;LiquidCrystal_I2C.c: 118:         lcdBusy = 1;
 22512  0078F6  0E01               	movlw	1
 22513  0078F8  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;LiquidCrystal_I2C.c: 119:         TMR6_Start();
 22517  0078FA  EC68  F052         	call	_TMR6_Start	;wreg free
 22518  0078FE  0012               	return		;funcret
 22519  007900                     __end_of_printstr:
 22520                           	opt callstack 0
 22521                           
 22522 ;; *************** function _TMR6_Start *****************
 22523 ;; Defined at:
 22524 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;		None
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;		None
 22529 ;; Return value:  Size  Location     Type
 22530 ;;                  1    wreg      void 
 22531 ;; Registers used:
 22532 ;;		None
 22533 ;; Tracked objects:
 22534 ;;		On entry : 3F/0
 22535 ;;		On exit  : 3F/0
 22536 ;;		Unchanged: 3F/0
 22537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22542 ;;Total ram usage:        0 bytes
 22543 ;; Hardware stack levels used:    1
 22544 ;; Hardware stack levels required when called:   17
 22545 ;; This function calls:
 22546 ;;		Nothing
 22547 ;; This function is called by:
 22548 ;;		_send4bits
 22549 ;;		_printstr
 22550 ;; This function uses a non-reentrant model
 22551 ;;
 22552                           
 22553                           	psect	text80
 22554  00A4D0                     __ptext80:
 22555                           	opt callstack 0
 22556  00A4D0                     _TMR6_Start:
 22557                           	opt callstack 9
 22558                           
 22559                           ; BSR set to: 0
 22560                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 22561                           
 22562                           ;incstack = 0
 22563  00A4D0  8E94               	bsf	148,7,c	;volatile
 22564                           
 22565                           ; BSR set to: 0
 22566  00A4D2  0012               	return		;funcret
 22567  00A4D4                     __end_of_TMR6_Start:
 22568                           	opt callstack 0
 22569                           
 22570 ;; *************** function _PrintStrBusy *****************
 22571 ;; Defined at:
 22572 ;;		line 123 in file "LiquidCrystal_I2C.c"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;		None
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;		None
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  1    wreg      _Bool 
 22579 ;; Registers used:
 22580 ;;		wreg, status,2
 22581 ;; Tracked objects:
 22582 ;;		On entry : 6/1
 22583 ;;		On exit  : 3F/0
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22590 ;;Total ram usage:        0 bytes
 22591 ;; Hardware stack levels used:    1
 22592 ;; Hardware stack levels required when called:   17
 22593 ;; This function calls:
 22594 ;;		Nothing
 22595 ;; This function is called by:
 22596 ;;		_CtrlPowerOff
 22597 ;;		_printstrblock
 22598 ;;		_screenMng
 22599 ;; This function uses a non-reentrant model
 22600 ;;
 22601                           
 22602                           	psect	text81
 22603  00A47A                     __ptext81:
 22604                           	opt callstack 0
 22605  00A47A                     _PrintStrBusy:
 22606                           	opt callstack 12
 22607                           
 22608                           ;LiquidCrystal_I2C.c: 124:     return lcdBusy;
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;incstack = 0
 22612  00A47A  0100               	movlb	0	; () banked
 22613  00A47C  51C1               	movf	_lcdBusy& (0+255),w,b	;volatile
 22614                           
 22615                           ; BSR set to: 0
 22616  00A47E  0012               	return		;funcret
 22617  00A480                     __end_of_PrintStrBusy:
 22618                           	opt callstack 0
 22619                           
 22620 ;; *************** function _keyRead *****************
 22621 ;; Defined at:
 22622 ;;		line 68 in file "keyRead.c"
 22623 ;; Parameters:    Size  Location     Type
 22624 ;;		None
 22625 ;; Auto vars:     Size  Location     Type
 22626 ;;  tmp             2   50[BANK0 ] int 
 22627 ;;  ch              1   52[BANK0 ] char 
 22628 ;; Return value:  Size  Location     Type
 22629 ;;                  1    wreg      char 
 22630 ;; Registers used:
 22631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22632 ;; Tracked objects:
 22633 ;;		On entry : 0/0
 22634 ;;		On exit  : 3F/0
 22635 ;;		Unchanged: 0/0
 22636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22639 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22640 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22641 ;;Total ram usage:        5 bytes
 22642 ;; Hardware stack levels used:    1
 22643 ;; Hardware stack levels required when called:   19
 22644 ;; This function calls:
 22645 ;;		_keyPeek
 22646 ;; This function is called by:
 22647 ;;		_CtrlPowerOff
 22648 ;;		_main
 22649 ;;		_MenuMng
 22650 ;; This function uses a non-reentrant model
 22651 ;;
 22652                           
 22653                           	psect	text82
 22654  0092D6                     __ptext82:
 22655                           	opt callstack 0
 22656  0092D6                     _keyRead:
 22657                           	opt callstack 11
 22658                           
 22659                           ;keyRead.c: 69:     int8_t ch = keyPeek();
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;incstack = 0
 22663  0092D6  EC15  F046         	call	_keyPeek	;wreg free
 22664  0092DA  6F94               	movwf	keyRead@ch& (0+255),b
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;keyRead.c: 70:     if (ch == lastkey) return -1;
 22668  0092DC  51CB               	movf	_lastkey& (0+255),w,b
 22669  0092DE  1994               	xorwf	keyRead@ch& (0+255),w,b
 22670  0092E0  A4D8               	btfss	status,2,c
 22671  0092E2  D002               	goto	l18602
 22672  0092E4                     u19090:
 22673                           
 22674                           ; BSR set to: 0
 22675  0092E4  0EFF               	movlw	255
 22676  0092E6  0012               	return	
 22677  0092E8                     l18602:
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;keyRead.c: 71:     int tmp = lastkey;
 22681  0092E8  51CB               	movf	_lastkey& (0+255),w,b
 22682  0092EA  6F92               	movwf	keyRead@tmp& (0+255),b
 22683  0092EC  6B93               	clrf	(keyRead@tmp+1)& (0+255),b
 22684  0092EE  BF92               	btfsc	keyRead@tmp& (0+255),7,b
 22685  0092F0  0793               	decf	(keyRead@tmp+1)& (0+255),f,b
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;keyRead.c: 72:     lastkey = ch;
 22689  0092F2  0060  F250  F0CB   	movff	keyRead@ch,_lastkey
 22690                           
 22691                           ; BSR set to: 0
 22692                           ;keyRead.c: 73:     if (tmp == keyFilter) {
 22693  0092F8  0060  F324  F090   	movff	_keyFilter,??_keyRead
 22694  0092FE  6B91               	clrf	(??_keyRead+1)& (0+255),b
 22695  009300  BF90               	btfsc	??_keyRead& (0+255),7,b
 22696  009302  0791               	decf	(??_keyRead+1)& (0+255),f,b
 22697  009304  5192               	movf	keyRead@tmp& (0+255),w,b
 22698  009306  1990               	xorwf	??_keyRead& (0+255),w,b
 22699  009308  E106               	bnz	l2091
 22700  00930A  5193               	movf	(keyRead@tmp+1)& (0+255),w,b
 22701  00930C  1991               	xorwf	(??_keyRead+1)& (0+255),w,b
 22702  00930E  A4D8               	btfss	status,2,c
 22703  009310  D002               	goto	l2091
 22704                           
 22705                           ; BSR set to: 0
 22706                           ;keyRead.c: 74:         keyFilter = -1;
 22707  009312  69C9               	setf	_keyFilter& (0+255),b
 22708  009314  D7E7               	goto	u19090
 22709  009316                     l2091:
 22710                           
 22711                           ; BSR set to: 0
 22712                           ;keyRead.c: 77:         keyFilter = -1;
 22713  009316  69C9               	setf	_keyFilter& (0+255),b
 22714                           
 22715                           ; BSR set to: 0
 22716                           ;keyRead.c: 78:         return tmp;
 22717  009318  5192               	movf	keyRead@tmp& (0+255),w,b
 22718                           
 22719                           ; BSR set to: 0
 22720  00931A  0012               	return		;funcret
 22721  00931C                     __end_of_keyRead:
 22722                           	opt callstack 0
 22723                           
 22724 ;; *************** function _keyPeek *****************
 22725 ;; Defined at:
 22726 ;;		line 37 in file "keyRead.c"
 22727 ;; Parameters:    Size  Location     Type
 22728 ;;		None
 22729 ;; Auto vars:     Size  Location     Type
 22730 ;;  n               1   47[BANK0 ] char 
 22731 ;;  n               1   46[BANK0 ] char 
 22732 ;; Return value:  Size  Location     Type
 22733 ;;                  1    wreg      char 
 22734 ;; Registers used:
 22735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22736 ;; Tracked objects:
 22737 ;;		On entry : 0/0
 22738 ;;		On exit  : 3F/0
 22739 ;;		Unchanged: 0/0
 22740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22745 ;;Total ram usage:        2 bytes
 22746 ;; Hardware stack levels used:    1
 22747 ;; Hardware stack levels required when called:   18
 22748 ;; This function calls:
 22749 ;;		_digitalReadC
 22750 ;;		_digitalReadD
 22751 ;; This function is called by:
 22752 ;;		_main
 22753 ;;		_keyReadEC
 22754 ;;		_keyRead
 22755 ;;		_SelfTest
 22756 ;; This function uses a non-reentrant model
 22757 ;;
 22758                           
 22759                           	psect	text83
 22760  008C2A                     __ptext83:
 22761                           	opt callstack 0
 22762  008C2A                     _keyPeek:
 22763                           	opt callstack 11
 22764                           
 22765                           ;keyRead.c: 38:     for (int8_t n = 0; n < 6; n++) {
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;incstack = 0
 22769  008C2A  0E00               	movlw	0
 22770  008C2C  0100               	movlb	0	; () banked
 22771  008C2E  6F8E               	movwf	keyPeek@n& (0+255),b
 22772  008C30                     l17916:
 22773                           
 22774                           ; BSR set to: 0
 22775                           ;keyRead.c: 39:         if (digitalReadD(keysD[n]) != 1) {
 22776  008C30  0EDB               	movlw	low _keysD
 22777  008C32  258E               	addwf	keyPeek@n& (0+255),w,b
 22778  008C34  6ED9               	movwf	fsr2l,c
 22779  008C36  6ADA               	clrf	fsr2h,c
 22780  008C38  0E02               	movlw	high _keysD
 22781  008C3A  22DA               	addwfc	fsr2h,f,c
 22782  008C3C  50DF               	movf	indf2,w,c
 22783  008C3E  ECF6  F04D         	call	_digitalReadD
 22784  008C42  06E8               	decf	wreg,f,c
 22785  008C44  B4D8               	btfsc	status,2,c
 22786  008C46  D002               	goto	l17922
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;keyRead.c: 40:             return n;
 22790  008C48  518E               	movf	keyPeek@n& (0+255),w,b
 22791  008C4A  0012               	return	
 22792  008C4C                     l17922:
 22793                           
 22794                           ; BSR set to: 0
 22795                           ;keyRead.c: 42:     }
 22796  008C4C  2B8E               	incf	keyPeek@n& (0+255),f,b
 22797                           
 22798                           ; BSR set to: 0
 22799  008C4E  518E               	movf	keyPeek@n& (0+255),w,b
 22800  008C50  0A80               	xorlw	128
 22801  008C52  0F7A               	addlw	-134
 22802  008C54  A0D8               	btfss	status,0,c
 22803  008C56  D7EC               	goto	l17916
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;keyRead.c: 43:     for (int8_t n = 0; n < 5; n++) {
 22807  008C58  0E00               	movlw	0
 22808  008C5A  6F8F               	movwf	keyPeek@n_4072& (0+255),b
 22809  008C5C                     l17932:
 22810                           
 22811                           ; BSR set to: 0
 22812                           ;keyRead.c: 44:         if (digitalReadC(keysC[n]) != 1) {
 22813  008C5C  0EE1               	movlw	low _keysC
 22814  008C5E  258F               	addwf	keyPeek@n_4072& (0+255),w,b
 22815  008C60  6ED9               	movwf	fsr2l,c
 22816  008C62  6ADA               	clrf	fsr2h,c
 22817  008C64  0E02               	movlw	high _keysC
 22818  008C66  22DA               	addwfc	fsr2h,f,c
 22819  008C68  50DF               	movf	indf2,w,c
 22820  008C6A  EC0D  F04E         	call	_digitalReadC
 22821  008C6E  06E8               	decf	wreg,f,c
 22822  008C70  B4D8               	btfsc	status,2,c
 22823  008C72  D003               	goto	l17938
 22824                           
 22825                           ; BSR set to: 0
 22826                           ;keyRead.c: 45:             return n+6;
 22827  008C74  518F               	movf	keyPeek@n_4072& (0+255),w,b
 22828  008C76  0F06               	addlw	6
 22829  008C78  0012               	return	
 22830  008C7A                     l17938:
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;keyRead.c: 47:     }
 22834  008C7A  2B8F               	incf	keyPeek@n_4072& (0+255),f,b
 22835                           
 22836                           ; BSR set to: 0
 22837  008C7C  518F               	movf	keyPeek@n_4072& (0+255),w,b
 22838  008C7E  0A80               	xorlw	128
 22839  008C80  0F7B               	addlw	-133
 22840  008C82  A0D8               	btfss	status,0,c
 22841  008C84  D7EB               	goto	l17932
 22842                           
 22843                           ; BSR set to: 0
 22844                           ;keyRead.c: 48:     return -1;
 22845  008C86  0EFF               	movlw	255
 22846                           
 22847                           ; BSR set to: 0
 22848  008C88  0012               	return		;funcret
 22849  008C8A                     __end_of_keyPeek:
 22850                           	opt callstack 0
 22851                           
 22852 ;; *************** function _digitalReadD *****************
 22853 ;; Defined at:
 22854 ;;		line 22 in file "keyRead.c"
 22855 ;; Parameters:    Size  Location     Type
 22856 ;;  pin             1    wreg     unsigned char 
 22857 ;; Auto vars:     Size  Location     Type
 22858 ;;  pin             1   45[BANK0 ] unsigned char 
 22859 ;; Return value:  Size  Location     Type
 22860 ;;                  1    wreg      unsigned char 
 22861 ;; Registers used:
 22862 ;;		wreg, status,2, status,0
 22863 ;; Tracked objects:
 22864 ;;		On entry : 3F/0
 22865 ;;		On exit  : 3F/0
 22866 ;;		Unchanged: 0/0
 22867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;Total ram usage:        3 bytes
 22873 ;; Hardware stack levels used:    1
 22874 ;; Hardware stack levels required when called:   17
 22875 ;; This function calls:
 22876 ;;		Nothing
 22877 ;; This function is called by:
 22878 ;;		_keyPeek
 22879 ;; This function uses a non-reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text84
 22883  009BEC                     __ptext84:
 22884                           	opt callstack 0
 22885  009BEC                     _digitalReadD:
 22886                           	opt callstack 11
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;incstack = 0
 22890                           ;digitalReadD@pin stored from wreg
 22891  009BEC  6F8D               	movwf	digitalReadD@pin& (0+255),b
 22892                           
 22893                           ;keyRead.c: 23:     return (PORTD&(1<<pin))!= 0;
 22894  009BEE  0060  F234  F08B   	movff	digitalReadD@pin,??_digitalReadD
 22895  009BF4  0E01               	movlw	1
 22896  009BF6  0100               	movlb	0	; () banked
 22897  009BF8  6F8C               	movwf	(??_digitalReadD+1)& (0+255),b
 22898  009BFA  2B8B               	incf	??_digitalReadD& (0+255),f,b
 22899  009BFC  D002               	goto	u17814
 22900  009BFE                     u17815:
 22901  009BFE  90D8               	bcf	status,0,c
 22902  009C00  378C               	rlcf	(??_digitalReadD+1)& (0+255),f,b
 22903  009C02                     u17814:
 22904  009C02  2F8B               	decfsz	??_digitalReadD& (0+255),f,b
 22905  009C04  D7FC               	goto	u17815
 22906  009C06  0100               	movlb	0	; () banked
 22907  009C08  518C               	movf	(??_digitalReadD+1)& (0+255),w,b
 22908  009C0A  14CD               	andwf	205,w,c	;volatile
 22909  009C0C  0900               	iorlw	0
 22910  009C0E  B4D8               	btfsc	status,2,c
 22911  009C10  D002               	goto	u17820
 22912  009C12  0E01               	movlw	1
 22913  009C14  0012               	return	
 22914  009C16                     u17820:
 22915  009C16  0E00               	movlw	0
 22916                           
 22917                           ; BSR set to: 0
 22918  009C18  0012               	return		;funcret
 22919  009C1A                     __end_of_digitalReadD:
 22920                           	opt callstack 0
 22921                           
 22922 ;; *************** function _digitalReadC *****************
 22923 ;; Defined at:
 22924 ;;		line 25 in file "keyRead.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;  pin             1    wreg     unsigned char 
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;  pin             1   45[BANK0 ] unsigned char 
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1    wreg      unsigned char 
 22931 ;; Registers used:
 22932 ;;		wreg, status,2, status,0
 22933 ;; Tracked objects:
 22934 ;;		On entry : 3F/0
 22935 ;;		On exit  : 3F/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22942 ;;Total ram usage:        3 bytes
 22943 ;; Hardware stack levels used:    1
 22944 ;; Hardware stack levels required when called:   17
 22945 ;; This function calls:
 22946 ;;		Nothing
 22947 ;; This function is called by:
 22948 ;;		_keyPeek
 22949 ;; This function uses a non-reentrant model
 22950 ;;
 22951                           
 22952                           	psect	text85
 22953  009C1A                     __ptext85:
 22954                           	opt callstack 0
 22955  009C1A                     _digitalReadC:
 22956                           	opt callstack 11
 22957                           
 22958                           ; BSR set to: 0
 22959                           ;incstack = 0
 22960                           ;digitalReadC@pin stored from wreg
 22961  009C1A  6F8D               	movwf	digitalReadC@pin& (0+255),b
 22962                           
 22963                           ;keyRead.c: 26:     return (PORTC&(1<<pin))!= 0;
 22964  009C1C  0060  F234  F08B   	movff	digitalReadC@pin,??_digitalReadC
 22965  009C22  0E01               	movlw	1
 22966  009C24  0100               	movlb	0	; () banked
 22967  009C26  6F8C               	movwf	(??_digitalReadC+1)& (0+255),b
 22968  009C28  2B8B               	incf	??_digitalReadC& (0+255),f,b
 22969  009C2A  D002               	goto	u17844
 22970  009C2C                     u17845:
 22971  009C2C  90D8               	bcf	status,0,c
 22972  009C2E  378C               	rlcf	(??_digitalReadC+1)& (0+255),f,b
 22973  009C30                     u17844:
 22974  009C30  2F8B               	decfsz	??_digitalReadC& (0+255),f,b
 22975  009C32  D7FC               	goto	u17845
 22976  009C34  0100               	movlb	0	; () banked
 22977  009C36  518C               	movf	(??_digitalReadC+1)& (0+255),w,b
 22978  009C38  14CC               	andwf	204,w,c	;volatile
 22979  009C3A  0900               	iorlw	0
 22980  009C3C  B4D8               	btfsc	status,2,c
 22981  009C3E  D002               	goto	u17850
 22982  009C40  0E01               	movlw	1
 22983  009C42  0012               	return	
 22984  009C44                     u17850:
 22985  009C44  0E00               	movlw	0
 22986                           
 22987                           ; BSR set to: 0
 22988  009C46  0012               	return		;funcret
 22989  009C48                     __end_of_digitalReadC:
 22990                           	opt callstack 0
 22991                           
 22992 ;; *************** function _MonitorMsgSendBlock *****************
 22993 ;; Defined at:
 22994 ;;		line 134 in file "monComm.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  state           1    wreg     enum E16832
 22997 ;; Auto vars:     Size  Location     Type
 22998 ;;  state           1  114[BANK1 ] enum E16832
 22999 ;; Return value:  Size  Location     Type
 23000 ;;                  1    wreg      _Bool 
 23001 ;; Registers used:
 23002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23003 ;; Tracked objects:
 23004 ;;		On entry : 3C/1
 23005 ;;		On exit  : 3F/1
 23006 ;;		Unchanged: 0/0
 23007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23009 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23011 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23012 ;;Total ram usage:        1 bytes
 23013 ;; Hardware stack levels used:    1
 23014 ;; Hardware stack levels required when called:   31
 23015 ;; This function calls:
 23016 ;;		_I2C2_MAck
 23017 ;;		_MonitorMsgBusy
 23018 ;;		_MonitorMsgForcedSend
 23019 ;; This function is called by:
 23020 ;;		_CtrlPowerOff
 23021 ;;		_main
 23022 ;;		_flowChk
 23023 ;;		_SelfTest
 23024 ;; This function uses a non-reentrant model
 23025 ;;
 23026                           
 23027                           	psect	text86
 23028  009DC0                     __ptext86:
 23029                           	opt callstack 0
 23030  009DC0                     _MonitorMsgSendBlock:
 23031                           	opt callstack 0
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;incstack = 0
 23035 ;; hardware stack exceeded
 23036                           ;MonitorMsgSendBlock@state stored from wreg
 23037  009DC0  0101               	movlb	1	; () banked
 23038  009DC2  6F72               	movwf	MonitorMsgSendBlock@state& (0+255),b
 23039  009DC4                     
 23040                           ;monComm.c: 135:     while (MonitorMsgBusy());
 23041  009DC4  EC15  F051         	call	_MonitorMsgBusy	;wreg free
 23042  009DC8  0900               	iorlw	0
 23043  009DCA  A4D8               	btfss	status,2,c
 23044  009DCC  D7FB               	goto	l17898
 23045                           
 23046                           ; BSR set to: 0
 23047                           ;monComm.c: 136:     MonitorMsgForcedSend(state);
 23048  009DCE  0101               	movlb	1	; () banked
 23049  009DD0  5172               	movf	MonitorMsgSendBlock@state& (0+255),w,b
 23050  009DD2  EC52  F035         	call	_MonitorMsgForcedSend
 23051  009DD6                     l17904:
 23052  009DD6  EC15  F051         	call	_MonitorMsgBusy	;wreg free
 23053  009DDA  0900               	iorlw	0
 23054  009DDC  A4D8               	btfss	status,2,c
 23055  009DDE  D7FB               	goto	l17904
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;monComm.c: 141:     return I2C2_MAck();
 23059  009DE0  EC46  F052         	call	_I2C2_MAck	;wreg free
 23060                           
 23061                           ; BSR set to: 1
 23062  009DE4  0012               	return		;funcret
 23063  009DE6                     __end_of_MonitorMsgSendBlock:
 23064                           	opt callstack 0
 23065                           
 23066 ;; *************** function _MonitorMsgForcedSend *****************
 23067 ;; Defined at:
 23068 ;;		line 32 in file "monComm.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  state           1    wreg     enum E16832
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  state           1  110[BANK1 ] enum E16832
 23073 ;;  vddVal          2  112[BANK1 ] short 
 23074 ;;  trfAck          1  111[BANK1 ] _Bool 
 23075 ;;  trfError        1  109[BANK1 ] enum E16385
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1    wreg      void 
 23078 ;; Registers used:
 23079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23080 ;; Tracked objects:
 23081 ;;		On entry : 3F/1
 23082 ;;		On exit  : 3F/1
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23086 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23087 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23088 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23089 ;;Total ram usage:        6 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:   30
 23092 ;; This function calls:
 23093 ;;		_I2C2_MAck
 23094 ;;		_I2C2_MClose
 23095 ;;		_I2C2_MOpen
 23096 ;;		_I2C2_MasterOperation
 23097 ;;		_I2C2_SetBuffer
 23098 ;;		_MonitorErrorClr
 23099 ;;		_MonitorErrorSet
 23100 ;;		_aCaptGetResult
 23101 ;;		_bRateGet
 23102 ;;		_sprintf
 23103 ;;		_timeGet
 23104 ;; This function is called by:
 23105 ;;		_MonitorMsgSend
 23106 ;;		_MonitorMsgSendBlock
 23107 ;; This function uses a non-reentrant model
 23108 ;;
 23109                           
 23110                           	psect	text87
 23111  006AA4                     __ptext87:
 23112                           	opt callstack 0
 23113  006AA4                     _MonitorMsgForcedSend:
 23114                           	opt callstack 0
 23115                           
 23116                           ; BSR set to: 1
 23117                           ;incstack = 0
 23118 ;; hardware stack exceeded
 23119                           ;MonitorMsgForcedSend@state stored from wreg
 23120  006AA4  6F6E               	movwf	MonitorMsgForcedSend@state& (0+255),b
 23121                           
 23122                           ;monComm.c: 33:     i2c2_error_t trfError;;monComm.c: 34:     _Bool trfAck;;monComm.c: 3
      +                          5:     int16_t vddVal;;monComm.c: 37:     monTstamp = timeGet();
 23123  006AA6  ECFA  F050         	call	_timeGet	;wreg free
 23124  006AAA  0060  F24C  F2CB   	movff	?_timeGet,_monTstamp
 23125  006AB0  0060  F250  F2CC   	movff	?_timeGet+1,_monTstamp+1
 23126                           
 23127                           ; BSR set to: 0
 23128                           ;monComm.c: 40:     trfError = I2C2_MClose();
 23129  006AB6  EC24  F04E         	call	_I2C2_MClose	;wreg free
 23130  006ABA  0101               	movlb	1	; () banked
 23131  006ABC  6F6D               	movwf	MonitorMsgForcedSend@trfError& (0+255),b
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;monComm.c: 41:     trfAck = I2C2_MAck();
 23135  006ABE  EC46  F052         	call	_I2C2_MAck	;wreg free
 23136  006AC2  6F6F               	movwf	MonitorMsgForcedSend@trfAck& (0+255),b
 23137                           
 23138                           ; BSR set to: 1
 23139                           ;monComm.c: 43:     if (!trfAck) {
 23140  006AC4  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23141  006AC6  A4D8               	btfss	status,2,c
 23142  006AC8  D011               	goto	l2945
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;monComm.c: 45:         sprintf(lcdBtnRRow, " M.ERR");
 23146  006ACA  0EC1               	movlw	low _lcdBtnRRow
 23147  006ACC  6F46               	movwf	sprintf@s& (0+255),b
 23148  006ACE  0E02               	movlw	high _lcdBtnRRow
 23149  006AD0  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23150  006AD2  0ED2               	movlw	low STR_105
 23151  006AD4  6F48               	movwf	sprintf@fmt& (0+255),b
 23152  006AD6  0EFF               	movlw	high STR_105
 23153  006AD8  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23154  006ADA  EC58  F047         	call	_sprintf	;wreg free
 23155                           
 23156                           ; BSR set to: 1
 23157                           ;monComm.c: 46:         lcdPrintBRR = 1;
 23158  006ADE  0E01               	movlw	1
 23159  006AE0  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 23160                           
 23161                           ; BSR set to: 1
 23162                           ;monComm.c: 47:         LATDbits.LATD0 = 1;
 23163  006AE2  80BD               	bsf	189,0,c	;volatile
 23164  006AE4                     l17626:
 23165                           
 23166                           ; BSR set to: 1
 23167                           ;monComm.c: 48:         lastI2CMonTrfResponse = 1;
 23168  006AE4  0E01               	movlw	1
 23169  006AE6  0102               	movlb	2	; () banked
 23170  006AE8  6F4C               	movwf	_lastI2CMonTrfResponse& (0+255),b
 23171                           
 23172                           ;monComm.c: 50:     } else if ((LATDbits.LATD0) && trfAck) {
 23173  006AEA  D013               	goto	l17638
 23174  006AEC                     l2945:
 23175                           
 23176                           ; BSR set to: 1
 23177  006AEC  A0BD               	btfss	189,0,c	;volatile
 23178  006AEE  D011               	goto	l17638
 23179                           
 23180                           ; BSR set to: 1
 23181  006AF0  516F               	movf	MonitorMsgForcedSend@trfAck& (0+255),w,b
 23182  006AF2  B4D8               	btfsc	status,2,c
 23183  006AF4  D00E               	goto	l17638
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;monComm.c: 52:         sprintf(lcdBtnRRow, "      ");
 23187  006AF6  0EC1               	movlw	low _lcdBtnRRow
 23188  006AF8  6F46               	movwf	sprintf@s& (0+255),b
 23189  006AFA  0E02               	movlw	high _lcdBtnRRow
 23190  006AFC  6F47               	movwf	(sprintf@s+1)& (0+255),b
 23191  006AFE  0EED               	movlw	low (STR_2+10)
 23192  006B00  6F48               	movwf	sprintf@fmt& (0+255),b
 23193  006B02  0EFE               	movlw	high (STR_2+10)
 23194  006B04  6F49               	movwf	(sprintf@fmt+1)& (0+255),b
 23195  006B06  EC58  F047         	call	_sprintf	;wreg free
 23196                           
 23197                           ; BSR set to: 1
 23198                           ;monComm.c: 53:         lcdPrintBRR = 1;
 23199  006B0A  0E01               	movlw	1
 23200  006B0C  6FCC               	movwf	_lcdPrintBRR& (0+255),b
 23201                           
 23202                           ; BSR set to: 1
 23203                           ;monComm.c: 54:         LATDbits.LATD0 = 0;
 23204  006B0E  90BD               	bcf	189,0,c	;volatile
 23205  006B10  D7E9               	goto	l17626
 23206  006B12                     l17638:
 23207                           
 23208                           ;monComm.c: 59:     if (trfError != I2C2_BUSY) {
 23209  006B12  0101               	movlb	1	; () banked
 23210  006B14  056D               	decf	MonitorMsgForcedSend@trfError& (0+255),w,b
 23211  006B16  B4D8               	btfsc	status,2,c
 23212  006B18  0012               	return	
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;monComm.c: 61:         aCaptGetResult(VddSensor, &vddVal);
 23216  006B1A  0E70               	movlw	low MonitorMsgForcedSend@vddVal
 23217  006B1C  6F60               	movwf	aCaptGetResult@outVal& (0+255),b
 23218  006B1E  0E01               	movlw	high MonitorMsgForcedSend@vddVal
 23219  006B20  6F61               	movwf	(aCaptGetResult@outVal+1)& (0+255),b
 23220  006B22  0E02               	movlw	2
 23221  006B24  EC83  F031         	call	_aCaptGetResult
 23222                           
 23223                           ;monComm.c: 62:         if (vddVal > vddValMean){
 23224  006B28  0101               	movlb	1	; () banked
 23225  006B2A  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23226  006B2C  5D91               	subwf	_vddValMean& (0+255),w,b
 23227  006B2E  5192               	movf	(_vddValMean+1)& (0+255),w,b
 23228  006B30  0A80               	xorlw	128
 23229  006B32  6F6C               	movwf	??_MonitorMsgForcedSend& (0+255),b
 23230  006B34  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23231  006B36  0A80               	xorlw	128
 23232  006B38  596C               	subwfb	??_MonitorMsgForcedSend& (0+255),w,b
 23233  006B3A  B0D8               	btfsc	status,0,c
 23234  006B3C  D006               	goto	l17646
 23235                           
 23236                           ; BSR set to: 1
 23237                           ;monComm.c: 63:             vddVal = vddVal - vddValMean;
 23238  006B3E  5191               	movf	_vddValMean& (0+255),w,b
 23239  006B40  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23240  006B42  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23241  006B44  5192               	movf	(_vddValMean+1)& (0+255),w,b
 23242  006B46  5971               	subwfb	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23243  006B48  D005               	goto	L41
 23244  006B4A                     l17646:
 23245                           
 23246                           ; BSR set to: 1
 23247                           ;monComm.c: 65:             vddVal = vddValMean - vddVal;
 23248  006B4A  5170               	movf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23249  006B4C  5D91               	subwf	_vddValMean& (0+255),w,b
 23250  006B4E  6F70               	movwf	MonitorMsgForcedSend@vddVal& (0+255),b
 23251  006B50  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23252  006B52  5992               	subwfb	(_vddValMean+1)& (0+255),w,b
 23253  006B54                     L41:
 23254  006B54  6F71               	movwf	(MonitorMsgForcedSend@vddVal+1)& (0+255),b
 23255                           
 23256                           ; BSR set to: 1
 23257                           ;monComm.c: 67:         if (vddVal > 150) {
 23258                           
 23259                           ;monComm.c: 66:         }
 23260  006B56  BF71               	btfsc	(MonitorMsgForcedSend@vddVal+1)& (0+255),7,b
 23261  006B58  D00A               	goto	l17650
 23262  006B5A  5171               	movf	(MonitorMsgForcedSend@vddVal+1)& (0+255),w,b
 23263  006B5C  E104               	bnz	u17990
 23264  006B5E  0E97               	movlw	151
 23265  006B60  5D70               	subwf	MonitorMsgForcedSend@vddVal& (0+255),w,b
 23266  006B62  A0D8               	btfss	status,0,c
 23267  006B64  D004               	goto	l17650
 23268  006B66                     u17990:
 23269                           
 23270                           ; BSR set to: 1
 23271                           ;monComm.c: 68:             MonitorErrorSet(MON_VDDE);
 23272  006B66  0E80               	movlw	128
 23273  006B68  EC03  F051         	call	_MonitorErrorSet
 23274                           
 23275                           ;monComm.c: 69:         } else {
 23276  006B6C  D003               	goto	l17652
 23277  006B6E                     l17650:
 23278                           
 23279                           ; BSR set to: 1
 23280                           ;monComm.c: 70:             MonitorErrorClr(MON_VDDE);
 23281  006B6E  0E80               	movlw	128
 23282  006B70  EC0C  F051         	call	_MonitorErrorClr
 23283  006B74                     l17652:
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;monComm.c: 74:         if (VentMode == VMODE_VOLUME) {
 23287  006B74  05F8               	decf	_VentMode& (0+255),w,b
 23288  006B76  A4D8               	btfss	status,2,c
 23289  006B78  D005               	goto	l2953
 23290                           
 23291                           ; BSR set to: 1
 23292                           ;monComm.c: 75:             monitorMsg[0] = state|0x4;
 23293  006B7A  516E               	movf	MonitorMsgForcedSend@state& (0+255),w,b
 23294  006B7C  0904               	iorlw	4
 23295  006B7E  0102               	movlb	2	; () banked
 23296  006B80  6FB7               	movwf	_monitorMsg& (0+255),b
 23297                           
 23298                           ;monComm.c: 76:         } else {
 23299  006B82  D003               	goto	l2954
 23300  006B84                     l2953:
 23301                           
 23302                           ; BSR set to: 1
 23303                           ;monComm.c: 77:             monitorMsg[0] = state;
 23304  006B84  0060  F5B8  F2B7   	movff	MonitorMsgForcedSend@state,_monitorMsg
 23305  006B8A                     l2954:
 23306                           
 23307                           ;monComm.c: 80:         monitorMsg[1] = IP;
 23308  006B8A  C1FB  F2B8         	movff	_IP,_monitorMsg+1
 23309                           
 23310                           ;monComm.c: 81:         if (chIP) {
 23311  006B8E  0101               	movlb	1	; () banked
 23312  006B90  51BE               	movf	_chIP& (0+255),w,b
 23313  006B92  B4D8               	btfsc	status,2,c
 23314  006B94  D002               	goto	l17660
 23315                           
 23316                           ; BSR set to: 1
 23317                           ;monComm.c: 82:             monitorMsg[1] |= 0x80;
 23318  006B96  0102               	movlb	2	; () banked
 23319  006B98  8FB8               	bsf	(_monitorMsg+1)& (0+255),7,b
 23320  006B9A                     l17660:
 23321                           
 23322                           ;monComm.c: 85:         monitorMsg[2] = PEEP;
 23323  006B9A  C1FA  F2B9         	movff	_PEEP,_monitorMsg+2
 23324                           
 23325                           ;monComm.c: 86:         if (chPEEP) {
 23326  006B9E  0101               	movlb	1	; () banked
 23327  006BA0  51BC               	movf	_chPEEP& (0+255),w,b
 23328  006BA2  B4D8               	btfsc	status,2,c
 23329  006BA4  D002               	goto	l17666
 23330                           
 23331                           ; BSR set to: 1
 23332                           ;monComm.c: 87:             monitorMsg[2] |= 0x80;
 23333  006BA6  0102               	movlb	2	; () banked
 23334  006BA8  8FB9               	bsf	(_monitorMsg+2)& (0+255),7,b
 23335  006BAA                     l17666:
 23336                           
 23337                           ;monComm.c: 90:         monitorMsg[3] = BPM;
 23338  006BAA  C1FC  F2BA         	movff	_BPM,_monitorMsg+3
 23339                           
 23340                           ;monComm.c: 91:         if (chBPM) {
 23341  006BAE  0101               	movlb	1	; () banked
 23342  006BB0  51BF               	movf	_chBPM& (0+255),w,b
 23343  006BB2  B4D8               	btfsc	status,2,c
 23344  006BB4  D002               	goto	l17672
 23345                           
 23346                           ; BSR set to: 1
 23347                           ;monComm.c: 92:             monitorMsg[3] |= 0x80;
 23348  006BB6  0102               	movlb	2	; () banked
 23349  006BB8  8FBA               	bsf	(_monitorMsg+3)& (0+255),7,b
 23350  006BBA                     l17672:
 23351                           
 23352                           ;monComm.c: 95:         monitorMsg[4] = MaxP;
 23353  006BBA  C1FF  F2BB         	movff	_MaxP,_monitorMsg+4
 23354                           
 23355                           ;monComm.c: 96:         if (chMaxP){
 23356  006BBE  0101               	movlb	1	; () banked
 23357  006BC0  51BD               	movf	_chMaxP& (0+255),w,b
 23358  006BC2  B4D8               	btfsc	status,2,c
 23359  006BC4  D002               	goto	l17678
 23360                           
 23361                           ; BSR set to: 1
 23362                           ;monComm.c: 97:             monitorMsg[3] |= 0x80;
 23363  006BC6  0102               	movlb	2	; () banked
 23364  006BC8  8FBA               	bsf	(_monitorMsg+3)& (0+255),7,b
 23365  006BCA                     l17678:
 23366                           
 23367                           ;monComm.c: 100:         monitorMsg[5] = MaxV>>1;
 23368  006BCA  0101               	movlb	1	; () banked
 23369  006BCC  90D8               	bcf	status,0,c
 23370  006BCE  31FE               	rrcf	_MaxV& (0+255),w,b
 23371  006BD0  0102               	movlb	2	; () banked
 23372  006BD2  6FBC               	movwf	(_monitorMsg+5)& (0+255),b
 23373                           
 23374                           ; BSR set to: 2
 23375                           ;monComm.c: 101:         if (chMaxV){
 23376  006BD4  0101               	movlb	1	; () banked
 23377  006BD6  51B9               	movf	_chMaxV& (0+255),w,b
 23378  006BD8  B4D8               	btfsc	status,2,c
 23379  006BDA  D002               	goto	l17684
 23380                           
 23381                           ; BSR set to: 1
 23382                           ;monComm.c: 102:             monitorMsg[5] |= 0x80;
 23383  006BDC  0102               	movlb	2	; () banked
 23384  006BDE  8FBC               	bsf	(_monitorMsg+5)& (0+255),7,b
 23385  006BE0                     l17684:
 23386                           
 23387                           ;monComm.c: 105:         monitorMsg[6] = LowVAlarm>>1;
 23388  006BE0  0101               	movlb	1	; () banked
 23389  006BE2  90D8               	bcf	status,0,c
 23390  006BE4  31F7               	rrcf	_LowVAlarm& (0+255),w,b
 23391  006BE6  0102               	movlb	2	; () banked
 23392  006BE8  6FBD               	movwf	(_monitorMsg+6)& (0+255),b
 23393                           
 23394                           ; BSR set to: 2
 23395                           ;monComm.c: 106:         if (chLowVAlarm){
 23396  006BEA  0101               	movlb	1	; () banked
 23397  006BEC  51BB               	movf	_chLowVAlarm& (0+255),w,b
 23398  006BEE  B4D8               	btfsc	status,2,c
 23399  006BF0  D002               	goto	l17690
 23400                           
 23401                           ; BSR set to: 1
 23402                           ;monComm.c: 107:             monitorMsg[6] |= 0x80;
 23403  006BF2  0102               	movlb	2	; () banked
 23404  006BF4  8FBD               	bsf	(_monitorMsg+6)& (0+255),7,b
 23405  006BF6                     l17690:
 23406                           
 23407                           ;monComm.c: 110:         monitorMsg[7] = HighVAlarm>>1;
 23408  006BF6  0101               	movlb	1	; () banked
 23409  006BF8  90D8               	bcf	status,0,c
 23410  006BFA  31FD               	rrcf	_HighVAlarm& (0+255),w,b
 23411  006BFC  0102               	movlb	2	; () banked
 23412  006BFE  6FBE               	movwf	(_monitorMsg+7)& (0+255),b
 23413                           
 23414                           ; BSR set to: 2
 23415                           ;monComm.c: 111:         if (chHighVAlarm){
 23416  006C00  0101               	movlb	1	; () banked
 23417  006C02  51BA               	movf	_chHighVAlarm& (0+255),w,b
 23418  006C04  B4D8               	btfsc	status,2,c
 23419  006C06  D002               	goto	l17696
 23420                           
 23421                           ; BSR set to: 1
 23422                           ;monComm.c: 112:             monitorMsg[7] |= 0x80;
 23423  006C08  0102               	movlb	2	; () banked
 23424  006C0A  8FBE               	bsf	(_monitorMsg+7)& (0+255),7,b
 23425  006C0C                     l17696:
 23426                           
 23427                           ;monComm.c: 115:         monitorMsg[8] = bRateGet();
 23428  006C0C  EC4E  F04F         	call	_bRateGet	;wreg free
 23429  006C10  0102               	movlb	2	; () banked
 23430  006C12  6FBF               	movwf	(_monitorMsg+8)& (0+255),b
 23431                           
 23432                           ; BSR set to: 2
 23433                           ;monComm.c: 116:         monitorMsg[9] = ctrlErrorStatus;
 23434  006C14  C1CB  F2C0         	movff	_ctrlErrorStatus,_monitorMsg+9
 23435                           
 23436                           ; BSR set to: 2
 23437  006C18  EC4F  F045         	call	_I2C2_MOpen	;wreg free
 23438                           
 23439                           ; BSR set to: 0
 23440                           ;monComm.c: 119:         I2C2_SetBuffer(monitorMsg, 10);
 23441  006C1C  0EB7               	movlw	low _monitorMsg
 23442  006C1E  6F8B               	movwf	I2C2_SetBuffer@buffer& (0+255),b
 23443  006C20  0E02               	movlw	high _monitorMsg
 23444  006C22  6F8C               	movwf	(I2C2_SetBuffer@buffer+1)& (0+255),b
 23445  006C24  0E00               	movlw	0
 23446  006C26  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 23447  006C28  0E0A               	movlw	10
 23448  006C2A  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 23449  006C2C  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 23450                           
 23451                           ; BSR set to: 2
 23452  006C30  0E00               	movlw	0
 23453  006C32  ECB1  F049         	call	_I2C2_MasterOperation
 23454                           
 23455                           ; BSR set to: 1
 23456                           
 23457                           ;monComm.c: 121:     } else {
 23458  006C36  0012               	return		;funcret
 23459  006C38                     __end_of_MonitorMsgForcedSend:
 23460                           	opt callstack 0
 23461                           
 23462 ;; *************** function _timeGet *****************
 23463 ;; Defined at:
 23464 ;;		line 13 in file "time.c"
 23465 ;; Parameters:    Size  Location     Type
 23466 ;;		None
 23467 ;; Auto vars:     Size  Location     Type
 23468 ;;		None
 23469 ;; Return value:  Size  Location     Type
 23470 ;;                  2   51[BANK0 ] unsigned short 
 23471 ;; Registers used:
 23472 ;;		wreg, status,2, cstack
 23473 ;; Tracked objects:
 23474 ;;		On entry : 0/1
 23475 ;;		On exit  : 3F/0
 23476 ;;		Unchanged: 0/0
 23477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23482 ;;Total ram usage:        2 bytes
 23483 ;; Hardware stack levels used:    1
 23484 ;; Hardware stack levels required when called:   18
 23485 ;; This function calls:
 23486 ;;		_TMR1_ReadTimer
 23487 ;; This function is called by:
 23488 ;;		_main
 23489 ;;		_timeDelayMs
 23490 ;;		_keyReadEC
 23491 ;;		_MenuMng
 23492 ;;		_pressureSensorChk
 23493 ;;		_flowChk
 23494 ;;		_SelfTest
 23495 ;;		_MonitorMsgForcedSend
 23496 ;; This function uses a non-reentrant model
 23497 ;;
 23498                           
 23499                           	psect	text88
 23500  00A1F4                     __ptext88:
 23501                           	opt callstack 0
 23502  00A1F4                     _timeGet:
 23503                           	opt callstack 12
 23504                           
 23505                           ;time.c: 14:     return TMR1_ReadTimer();
 23506                           
 23507                           ; BSR set to: 1
 23508                           ;incstack = 0
 23509  00A1F4  EC52  F04E         	call	_TMR1_ReadTimer	;wreg free
 23510  00A1F8  0060  F22C  F093   	movff	?_TMR1_ReadTimer,?_timeGet
 23511  00A1FE  0060  F230  F094   	movff	?_TMR1_ReadTimer+1,?_timeGet+1
 23512                           
 23513                           ; BSR set to: 0
 23514  00A204  0012               	return		;funcret
 23515  00A206                     __end_of_timeGet:
 23516                           	opt callstack 0
 23517                           
 23518 ;; *************** function _TMR1_ReadTimer *****************
 23519 ;; Defined at:
 23520 ;;		line 104 in file "mcc_generated_files/tmr1.c"
 23521 ;; Parameters:    Size  Location     Type
 23522 ;;		None
 23523 ;; Auto vars:     Size  Location     Type
 23524 ;;  readVal         2   47[BANK0 ] unsigned short 
 23525 ;;  readValLow      1   50[BANK0 ] unsigned char 
 23526 ;;  readValHigh     1   49[BANK0 ] unsigned char 
 23527 ;; Return value:  Size  Location     Type
 23528 ;;                  2   43[BANK0 ] unsigned short 
 23529 ;; Registers used:
 23530 ;;		wreg, status,2
 23531 ;; Tracked objects:
 23532 ;;		On entry : 0/0
 23533 ;;		On exit  : 3F/0
 23534 ;;		Unchanged: 0/0
 23535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23537 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23540 ;;Total ram usage:        8 bytes
 23541 ;; Hardware stack levels used:    1
 23542 ;; Hardware stack levels required when called:   17
 23543 ;; This function calls:
 23544 ;;		Nothing
 23545 ;; This function is called by:
 23546 ;;		_timeGet
 23547 ;;		_timeElapsedR
 23548 ;;		_timeElapsed
 23549 ;; This function uses a non-reentrant model
 23550 ;;
 23551                           
 23552                           	psect	text89
 23553  009CA4                     __ptext89:
 23554                           	opt callstack 0
 23555  009CA4                     _TMR1_ReadTimer:
 23556                           	opt callstack 12
 23557                           
 23558                           ;mcc_generated_files/tmr1.c: 106:     uint16_t readVal;;mcc_generated_files/tmr1.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 110:     T1CONbits.T1RD16 = 1;
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;incstack = 0
 23562  009CA4  82B2               	bsf	178,1,c	;volatile
 23563                           
 23564                           ;mcc_generated_files/tmr1.c: 112:     readValLow = TMR1L;
 23565  009CA6  006F FEC0  F092    	movff	16304,TMR1_ReadTimer@readValLow	;volatile
 23566                           
 23567                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
 23568  009CAC  006F FEC4  F091    	movff	16305,TMR1_ReadTimer@readValHigh	;volatile
 23569                           
 23570                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 23571  009CB2  0100               	movlb	0	; () banked
 23572  009CB4  5191               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 23573  009CB6  6F8D               	movwf	??_TMR1_ReadTimer& (0+255),b
 23574  009CB8  5192               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 23575  009CBA  6F8F               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 23576  009CBC  0060  F234  F090   	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
 23580  009CC2  0060  F23C  F08B   	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 23581  009CC8  0060  F240  F08C   	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 23582                           
 23583                           ; BSR set to: 0
 23584  009CCE  0012               	return		;funcret
 23585  009CD0                     __end_of_TMR1_ReadTimer:
 23586                           	opt callstack 0
 23587                           
 23588 ;; *************** function _sprintf *****************
 23589 ;; Defined at:
 23590 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23591 ;; Parameters:    Size  Location     Type
 23592 ;;  s               2   70[BANK1 ] PTR unsigned char 
 23593 ;;		 -> lcdBtnRow(20), lcdTopRow(20), lcdBtnRRow(10), 
 23594 ;;  fmt             2   72[BANK1 ] PTR const unsigned char 
 23595 ;;		 -> STR_106(7), STR_105(7), STR_87(17), STR_75(18), 
 23596 ;;		 -> STR_64(19), STR_60(11), STR_59(10), STR_58(12), 
 23597 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 23598 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 23599 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 23600 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 23601 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 23602 ;;		 -> STR_37(21), STR_20(6), 
 23603 ;; Auto vars:     Size  Location     Type
 23604 ;;  f               6   86[BANK1 ] struct _IO_FILE
 23605 ;;  ap              2   84[BANK1 ] PTR void [1]
 23606 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23607 ;;  ret             2    0        int 
 23608 ;; Return value:  Size  Location     Type
 23609 ;;                  2   70[BANK1 ] int 
 23610 ;; Registers used:
 23611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23612 ;; Tracked objects:
 23613 ;;		On entry : 3E/1
 23614 ;;		On exit  : 3F/1
 23615 ;;		Unchanged: 0/0
 23616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23617 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23618 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23620 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23621 ;;Total ram usage:       22 bytes
 23622 ;; Hardware stack levels used:    1
 23623 ;; Hardware stack levels required when called:   25
 23624 ;; This function calls:
 23625 ;;		_vfprintf
 23626 ;; This function is called by:
 23627 ;;		_main
 23628 ;;		_screenMng
 23629 ;;		_pressureSensorChk
 23630 ;;		_flowChk
 23631 ;;		_SelfTest
 23632 ;;		_MonitorMsgForcedSend
 23633 ;; This function uses a non-reentrant model
 23634 ;;
 23635                           
 23636                           	psect	text90
 23637  008EB0                     __ptext90:
 23638                           	opt callstack 0
 23639  008EB0                     _sprintf:
 23640                           	opt callstack 5
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;incstack = 0
 23644  008EB0  0E4A               	movlw	low (?_sprintf+4)
 23645  008EB2  0101               	movlb	1	; () banked
 23646  008EB4  6F54               	movwf	sprintf@ap& (0+255),b
 23647  008EB6  0E01               	movlw	high (?_sprintf+4)
 23648  008EB8  6F55               	movwf	(sprintf@ap+1)& (0+255),b
 23649  008EBA  0060  F518  F156   	movff	sprintf@s,sprintf@f
 23650  008EC0  0060  F51C  F157   	movff	sprintf@s+1,sprintf@f+1
 23651                           
 23652                           ; BSR set to: 1
 23653  008EC6  0E00               	movlw	0
 23654  008EC8  6F59               	movwf	(sprintf@f+3)& (0+255),b
 23655  008ECA  0E00               	movlw	0
 23656  008ECC  6F58               	movwf	(sprintf@f+2)& (0+255),b
 23657                           
 23658                           ; BSR set to: 1
 23659  008ECE  0E00               	movlw	0
 23660  008ED0  6F5B               	movwf	(sprintf@f+5)& (0+255),b
 23661  008ED2  0E00               	movlw	0
 23662  008ED4  6F5A               	movwf	(sprintf@f+4)& (0+255),b
 23663                           
 23664                           ; BSR set to: 1
 23665  008ED6  0E56               	movlw	low sprintf@f
 23666  008ED8  6F40               	movwf	vfprintf@fp& (0+255),b
 23667  008EDA  0E01               	movlw	high sprintf@f
 23668  008EDC  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 23669  008EDE  0060  F520  F142   	movff	sprintf@fmt,vfprintf@fmt
 23670  008EE4  0060  F524  F143   	movff	sprintf@fmt+1,vfprintf@fmt+1
 23671  008EEA  0E54               	movlw	low sprintf@ap
 23672  008EEC  6F44               	movwf	vfprintf@ap& (0+255),b
 23673  008EEE  0E01               	movlw	high sprintf@ap
 23674  008EF0  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 23675  008EF2  ECE4  F044         	call	_vfprintf	;wreg free
 23676                           
 23677                           ; BSR set to: 2
 23678  008EF6  0101               	movlb	1	; () banked
 23679  008EF8  5158               	movf	(sprintf@f+2)& (0+255),w,b
 23680  008EFA  2546               	addwf	sprintf@s& (0+255),w,b
 23681  008EFC  6ED9               	movwf	fsr2l,c
 23682  008EFE  5159               	movf	(sprintf@f+3)& (0+255),w,b
 23683  008F00  2147               	addwfc	(sprintf@s+1)& (0+255),w,b
 23684  008F02  6EDA               	movwf	fsr2h,c
 23685  008F04  0E00               	movlw	0
 23686  008F06  6EDF               	movwf	indf2,c
 23687                           
 23688                           ; BSR set to: 1
 23689  008F08  0012               	return		;funcret
 23690  008F0A                     __end_of_sprintf:
 23691                           	opt callstack 0
 23692                           
 23693 ;; *************** function _bRateGet *****************
 23694 ;; Defined at:
 23695 ;;		line 43 in file "brate.c"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;		None
 23698 ;; Auto vars:     Size  Location     Type
 23699 ;;		None
 23700 ;; Return value:  Size  Location     Type
 23701 ;;                  1    wreg      unsigned char 
 23702 ;; Registers used:
 23703 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23704 ;; Tracked objects:
 23705 ;;		On entry : 3C/1
 23706 ;;		On exit  : 3F/0
 23707 ;;		Unchanged: 0/0
 23708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23713 ;;Total ram usage:        0 bytes
 23714 ;; Hardware stack levels used:    1
 23715 ;; Hardware stack levels required when called:   18
 23716 ;; This function calls:
 23717 ;;		___awdiv
 23718 ;; This function is called by:
 23719 ;;		_main
 23720 ;;		_MonitorMsgForcedSend
 23721 ;; This function uses a non-reentrant model
 23722 ;;
 23723                           
 23724                           	psect	text91
 23725  009E9C                     __ptext91:
 23726                           	opt callstack 0
 23727  009E9C                     _bRateGet:
 23728                           	opt callstack 12
 23729                           
 23730                           ;brate.c: 44:     return eBRate*20/bRateCnt;
 23731                           
 23732                           ; BSR set to: 1
 23733                           ;incstack = 0
 23734  009E9C  0100               	movlb	0	; () banked
 23735  009E9E  51BF               	movf	_eBRate& (0+255),w,b
 23736  009EA0  0D14               	mullw	20
 23737  009EA2  006F FFCC  F0A1    	movff	prodl,___awdiv@dividend
 23738  009EA8  006F FFD0  F0A2    	movff	prodh,___awdiv@dividend+1
 23739  009EAE  0060  F2F8  F0A3   	movff	_bRateCnt,___awdiv@divisor
 23740  009EB4  6BA4               	clrf	(___awdiv@divisor+1)& (0+255),b
 23741  009EB6  EC78  F042         	call	___awdiv	;wreg free
 23742  009EBA  51A1               	movf	?___awdiv& (0+255),w,b
 23743                           
 23744                           ; BSR set to: 0
 23745  009EBC  0012               	return		;funcret
 23746  009EBE                     __end_of_bRateGet:
 23747                           	opt callstack 0
 23748                           
 23749 ;; *************** function ___awdiv *****************
 23750 ;; Defined at:
 23751 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23752 ;; Parameters:    Size  Location     Type
 23753 ;;  dividend        2   65[BANK0 ] int 
 23754 ;;  divisor         2   67[BANK0 ] int 
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;  quotient        2   71[BANK0 ] int 
 23757 ;;  sign            1   70[BANK0 ] unsigned char 
 23758 ;;  counter         1   69[BANK0 ] unsigned char 
 23759 ;; Return value:  Size  Location     Type
 23760 ;;                  2   65[BANK0 ] int 
 23761 ;; Registers used:
 23762 ;;		wreg, status,2, status,0
 23763 ;; Tracked objects:
 23764 ;;		On entry : 3F/0
 23765 ;;		On exit  : 3F/0
 23766 ;;		Unchanged: 0/0
 23767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23769 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23771 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23772 ;;Total ram usage:        8 bytes
 23773 ;; Hardware stack levels used:    1
 23774 ;; Hardware stack levels required when called:   17
 23775 ;; This function calls:
 23776 ;;		Nothing
 23777 ;; This function is called by:
 23778 ;;		_main
 23779 ;;		_MenuMng
 23780 ;;		_bRateGet
 23781 ;; This function uses a non-reentrant model
 23782 ;;
 23783                           
 23784                           	psect	text92
 23785  0084F0                     __ptext92:
 23786                           	opt callstack 0
 23787  0084F0                     ___awdiv:
 23788                           	opt callstack 12
 23789                           
 23790                           ; BSR set to: 0
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;incstack = 0
 23794  0084F0  0E00               	movlw	0
 23795  0084F2  6FA6               	movwf	___awdiv@sign& (0+255),b
 23796                           
 23797                           ; BSR set to: 0
 23798  0084F4  AFA4               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23799  0084F6  D006               	goto	l17270
 23800                           
 23801                           ; BSR set to: 0
 23802  0084F8  6DA3               	negf	___awdiv@divisor& (0+255),b
 23803  0084FA  1FA4               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23804  0084FC  B0D8               	btfsc	status,0,c
 23805  0084FE  2BA4               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23806                           
 23807                           ; BSR set to: 0
 23808  008500  0E01               	movlw	1
 23809  008502  6FA6               	movwf	___awdiv@sign& (0+255),b
 23810  008504                     l17270:
 23811                           
 23812                           ; BSR set to: 0
 23813  008504  AFA2               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23814  008506  D006               	goto	l17276
 23815                           
 23816                           ; BSR set to: 0
 23817  008508  6DA1               	negf	___awdiv@dividend& (0+255),b
 23818  00850A  1FA2               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23819  00850C  B0D8               	btfsc	status,0,c
 23820  00850E  2BA2               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23821                           
 23822                           ; BSR set to: 0
 23823  008510  0E01               	movlw	1
 23824  008512  1BA6               	xorwf	___awdiv@sign& (0+255),f,b
 23825  008514                     l17276:
 23826                           
 23827                           ; BSR set to: 0
 23828  008514  0E00               	movlw	0
 23829  008516  6FA8               	movwf	(___awdiv@quotient+1)& (0+255),b
 23830  008518  0E00               	movlw	0
 23831  00851A  6FA7               	movwf	___awdiv@quotient& (0+255),b
 23832                           
 23833                           ; BSR set to: 0
 23834  00851C  51A3               	movf	___awdiv@divisor& (0+255),w,b
 23835  00851E  11A4               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23836  008520  B4D8               	btfsc	status,2,c
 23837  008522  D01C               	goto	l17298
 23838                           
 23839                           ; BSR set to: 0
 23840  008524  0E01               	movlw	1
 23841  008526  6FA5               	movwf	___awdiv@counter& (0+255),b
 23842  008528  D004               	goto	l17284
 23843  00852A                     l17282:
 23844                           
 23845                           ; BSR set to: 0
 23846  00852A  90D8               	bcf	status,0,c
 23847  00852C  37A3               	rlcf	___awdiv@divisor& (0+255),f,b
 23848  00852E  37A4               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23849  008530  2BA5               	incf	___awdiv@counter& (0+255),f,b
 23850  008532                     l17284:
 23851                           
 23852                           ; BSR set to: 0
 23853  008532  AFA4               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23854  008534  D7FA               	goto	l17282
 23855  008536                     u17580:
 23856                           
 23857                           ; BSR set to: 0
 23858  008536  90D8               	bcf	status,0,c
 23859  008538  37A7               	rlcf	___awdiv@quotient& (0+255),f,b
 23860  00853A  37A8               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23861                           
 23862                           ; BSR set to: 0
 23863  00853C  51A3               	movf	___awdiv@divisor& (0+255),w,b
 23864  00853E  5DA1               	subwf	___awdiv@dividend& (0+255),w,b
 23865  008540  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23866  008542  59A2               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23867  008544  A0D8               	btfss	status,0,c
 23868  008546  D005               	goto	l17294
 23869                           
 23870                           ; BSR set to: 0
 23871  008548  51A3               	movf	___awdiv@divisor& (0+255),w,b
 23872  00854A  5FA1               	subwf	___awdiv@dividend& (0+255),f,b
 23873  00854C  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23874  00854E  5BA2               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23875                           
 23876                           ; BSR set to: 0
 23877  008550  81A7               	bsf	___awdiv@quotient& (0+255),0,b
 23878  008552                     l17294:
 23879                           
 23880                           ; BSR set to: 0
 23881  008552  90D8               	bcf	status,0,c
 23882  008554  33A4               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23883  008556  33A3               	rrcf	___awdiv@divisor& (0+255),f,b
 23884                           
 23885                           ; BSR set to: 0
 23886  008558  2FA5               	decfsz	___awdiv@counter& (0+255),f,b
 23887  00855A  D7ED               	goto	u17580
 23888  00855C                     l17298:
 23889                           
 23890                           ; BSR set to: 0
 23891  00855C  51A6               	movf	___awdiv@sign& (0+255),w,b
 23892  00855E  B4D8               	btfsc	status,2,c
 23893  008560  D004               	goto	l17302
 23894                           
 23895                           ; BSR set to: 0
 23896  008562  6DA7               	negf	___awdiv@quotient& (0+255),b
 23897  008564  1FA8               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23898  008566  B0D8               	btfsc	status,0,c
 23899  008568  2BA8               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23900  00856A                     l17302:
 23901                           
 23902                           ; BSR set to: 0
 23903  00856A  0060  F29C  F0A1   	movff	___awdiv@quotient,?___awdiv
 23904  008570  0060  F2A0  F0A2   	movff	___awdiv@quotient+1,?___awdiv+1
 23905                           
 23906                           ; BSR set to: 0
 23907  008576  0012               	return		;funcret
 23908  008578                     __end_of___awdiv:
 23909                           	opt callstack 0
 23910                           
 23911 ;; *************** function _aCaptGetResult *****************
 23912 ;; Defined at:
 23913 ;;		line 159 in file "aCapture.c"
 23914 ;; Parameters:    Size  Location     Type
 23915 ;;  sel             1    wreg     enum E16104
 23916 ;;  outVal          2   96[BANK1 ] PTR short 
 23917 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 23918 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), bdP2(2), bdP1(2), 
 23919 ;;		 -> pAvgShort(2), main@tmpVal(2), pAvgUShort(2), pInst(2), 
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;  sel             1  103[BANK1 ] enum E16104
 23922 ;;  lclRaw          4  104[BANK1 ] unsigned long 
 23923 ;;  lclValid        1  102[BANK1 ] unsigned char 
 23924 ;; Return value:  Size  Location     Type
 23925 ;;                  1    wreg      _Bool 
 23926 ;; Registers used:
 23927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23928 ;; Tracked objects:
 23929 ;;		On entry : 3F/1
 23930 ;;		On exit  : 3C/0
 23931 ;;		Unchanged: 0/0
 23932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23933 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23934 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23935 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23936 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23937 ;;Total ram usage:       12 bytes
 23938 ;; Hardware stack levels used:    1
 23939 ;; Hardware stack levels required when called:   26
 23940 ;; This function calls:
 23941 ;;		_printf
 23942 ;; This function is called by:
 23943 ;;		_main
 23944 ;;		_pressureSensorChk
 23945 ;;		_flowChk
 23946 ;;		_SelfTest
 23947 ;;		_MonitorMsgForcedSend
 23948 ;; This function uses a non-reentrant model
 23949 ;;
 23950                           
 23951                           	psect	text93
 23952  006306                     __ptext93:
 23953                           	opt callstack 0
 23954  006306                     _aCaptGetResult:
 23955                           	opt callstack 4
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;incstack = 0
 23959                           ;aCaptGetResult@sel stored from wreg
 23960  006306  6F67               	movwf	aCaptGetResult@sel& (0+255),b
 23961                           
 23962                           ;aCapture.c: 160:     uint32_t lclRaw;;aCapture.c: 161:     uint8_t lclValid;;aCapture.c
      +                          : 164:     PIE1bits.ADTIE = 0;
 23963  006308  0139               	movlb	57	; () banked
 23964  00630A  9791               	bcf	145,3,b	;volatile
 23965                           
 23966                           ; BSR set to: 57
 23967                           ;aCapture.c: 165:     lclRaw=resultTbl[sel];
 23968  00630C  0101               	movlb	1	; () banked
 23969  00630E  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 23970  006310  0D04               	mullw	4
 23971  006312  0E73               	movlw	low _resultTbl
 23972  006314  24F3               	addwf	243,w,c
 23973  006316  6ED9               	movwf	fsr2l,c
 23974  006318  0E02               	movlw	high _resultTbl
 23975  00631A  20F4               	addwfc	prodh,w,c
 23976  00631C  6EDA               	movwf	fsr2h,c
 23977  00631E  006F FF78  F168    	movff	postinc2,aCaptGetResult@lclRaw
 23978  006324  006F FF78  F169    	movff	postinc2,aCaptGetResult@lclRaw+1
 23979  00632A  006F FF78  F16A    	movff	postinc2,aCaptGetResult@lclRaw+2
 23980  006330  006F FF78  F16B    	movff	postinc2,aCaptGetResult@lclRaw+3
 23981                           
 23982                           ; BSR set to: 1
 23983                           ;aCapture.c: 166:     lclValid=resultTblVal[sel];
 23984  006336  0E24               	movlw	low _resultTblVal
 23985  006338  2567               	addwf	aCaptGetResult@sel& (0+255),w,b
 23986  00633A  6ED9               	movwf	fsr2l,c
 23987  00633C  6ADA               	clrf	fsr2h,c
 23988  00633E  0E02               	movlw	high _resultTblVal
 23989  006340  22DA               	addwfc	fsr2h,f,c
 23990  006342  50DF               	movf	indf2,w,c
 23991  006344  6F66               	movwf	aCaptGetResult@lclValid& (0+255),b
 23992                           
 23993                           ; BSR set to: 1
 23994                           ;aCapture.c: 167:     PIE1bits.ADTIE = 1;
 23995  006346  0139               	movlb	57	; () banked
 23996  006348  8791               	bsf	145,3,b	;volatile
 23997                           
 23998                           ; BSR set to: 57
 23999                           ;aCapture.c: 169:     if (lclValid == 0) {
 24000  00634A  0101               	movlb	1	; () banked
 24001  00634C  5166               	movf	aCaptGetResult@lclValid& (0+255),w,b
 24002  00634E  A4D8               	btfss	status,2,c
 24003  006350  D066               	goto	l17400
 24004                           
 24005                           ; BSR set to: 1
 24006                           ;aCapture.c: 170:         return 0;
 24007  006352  0E00               	movlw	0
 24008  006354  0012               	return	
 24009  006356                     l17390:
 24010                           
 24011                           ; BSR set to: 1
 24012                           ;aCapture.c: 177:             lclRaw=lclRaw>>9;
 24013  006356  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24014  00635C  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24015  006362  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24016  006368  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24017  00636E  0E0A               	movlw	10
 24018  006370  D005               	goto	u17660
 24019  006372                     u17665:
 24020  006372  90D8               	bcf	status,0,c
 24021  006374  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24022  006376  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24023  006378  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24024  00637A  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24025  00637C                     u17660:
 24026  00637C  2EE8               	decfsz	wreg,f,c
 24027  00637E  D7F9               	goto	u17665
 24028  006380  D041               	goto	L44
 24029  006382                     l17392:
 24030                           
 24031                           ; BSR set to: 1
 24032                           ;aCapture.c: 180:             lclRaw=lclRaw>>6;
 24033  006382  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24034  006388  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24035  00638E  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24036  006394  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24037  00639A  0E07               	movlw	7
 24038  00639C  D005               	goto	u17670
 24039  00639E                     u17675:
 24040  00639E  90D8               	bcf	status,0,c
 24041  0063A0  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24042  0063A2  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24043  0063A4  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24044  0063A6  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24045  0063A8                     u17670:
 24046  0063A8  2EE8               	decfsz	wreg,f,c
 24047  0063AA  D7F9               	goto	u17675
 24048  0063AC  D02B               	goto	L44
 24049  0063AE                     l17394:
 24050                           
 24051                           ; BSR set to: 1
 24052                           ;aCapture.c: 183:             lclRaw=lclRaw>>4;
 24053  0063AE  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24054  0063B4  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24055  0063BA  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24056  0063C0  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24057  0063C6  0E05               	movlw	5
 24058  0063C8  D005               	goto	u17680
 24059  0063CA                     u17685:
 24060  0063CA  90D8               	bcf	status,0,c
 24061  0063CC  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24062  0063CE  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24063  0063D0  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24064  0063D2  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24065  0063D4                     u17680:
 24066  0063D4  2EE8               	decfsz	wreg,f,c
 24067  0063D6  D7F9               	goto	u17685
 24068  0063D8  D015               	goto	L44
 24069  0063DA                     l17396:
 24070                           
 24071                           ; BSR set to: 1
 24072                           ;aCapture.c: 186:             lclRaw=lclRaw>>2;
 24073  0063DA  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24074  0063E0  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24075  0063E6  0060  F5A8  F164   	movff	aCaptGetResult@lclRaw+2,??_aCaptGetResult+2
 24076  0063EC  0060  F5AC  F165   	movff	aCaptGetResult@lclRaw+3,??_aCaptGetResult+3
 24077  0063F2  0E03               	movlw	3
 24078  0063F4  D005               	goto	u17690
 24079  0063F6                     u17695:
 24080  0063F6  90D8               	bcf	status,0,c
 24081  0063F8  3365               	rrcf	(??_aCaptGetResult+3)& (0+255),f,b
 24082  0063FA  3364               	rrcf	(??_aCaptGetResult+2)& (0+255),f,b
 24083  0063FC  3363               	rrcf	(??_aCaptGetResult+1)& (0+255),f,b
 24084  0063FE  3362               	rrcf	??_aCaptGetResult& (0+255),f,b
 24085  006400                     u17690:
 24086  006400  2EE8               	decfsz	wreg,f,c
 24087  006402  D7F9               	goto	u17695
 24088  006404                     L44:
 24089  006404  0060  F588  F168   	movff	??_aCaptGetResult,aCaptGetResult@lclRaw
 24090  00640A  0060  F58C  F169   	movff	??_aCaptGetResult+1,aCaptGetResult@lclRaw+1
 24091  006410  0060  F590  F16A   	movff	??_aCaptGetResult+2,aCaptGetResult@lclRaw+2
 24092  006416  0060  F594  F16B   	movff	??_aCaptGetResult+3,aCaptGetResult@lclRaw+3
 24093                           
 24094                           ;aCapture.c: 187:             break;
 24095  00641C  D0A0               	goto	l17430
 24096  00641E                     l17400:
 24097                           
 24098                           ; BSR set to: 1
 24099  00641E  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24100  006420  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24101  006422  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24102                           
 24103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24104                           ; Switch size 1, requested type "simple"
 24105                           ; Number of cases is 1, Range of values is 0 to 0
 24106                           ; switch strategies available:
 24107                           ; Name         Instructions Cycles
 24108                           ; simple_byte            4     3 (average)
 24109                           ;	Chosen strategy is simple_byte
 24110  006424  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24111  006426  0A00               	xorlw	0	; case 0
 24112  006428  A4D8               	btfss	status,2,c
 24113  00642A  D099               	goto	l17430
 24114                           
 24115                           ; BSR set to: 1
 24116                           ; Switch size 1, requested type "simple"
 24117                           ; Number of cases is 4, Range of values is 3 to 6
 24118                           ; switch strategies available:
 24119                           ; Name         Instructions Cycles
 24120                           ; simple_byte           13     7 (average)
 24121                           ;	Chosen strategy is simple_byte
 24122  00642C  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24123  00642E  0A03               	xorlw	3	; case 3
 24124  006430  B4D8               	btfsc	status,2,c
 24125  006432  D7D3               	goto	l17396
 24126  006434  0A07               	xorlw	7	; case 4
 24127  006436  B4D8               	btfsc	status,2,c
 24128  006438  D7BA               	goto	l17394
 24129  00643A  0A01               	xorlw	1	; case 5
 24130  00643C  B4D8               	btfsc	status,2,c
 24131  00643E  D7A1               	goto	l17392
 24132  006440  0A03               	xorlw	3	; case 6
 24133  006442  B4D8               	btfsc	status,2,c
 24134  006444  D788               	goto	l17390
 24135  006446  D08B               	goto	l17430
 24136  006448                     l1990:
 24137                           
 24138                           ; BSR set to: 1
 24139                           ;aCapture.c: 199:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 24140                           
 24141                           ; BSR set to: 1
 24142  006448  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24143  00644E  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24144  006454  0E00               	movlw	0
 24145  006456  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24146  006458  0EFF               	movlw	255
 24147  00645A  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24148  00645C  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24149  00645E  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24150  006460  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24151  006462  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24152  006464  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24153  006466  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24154  006468  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24155  00646A  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24156  00646C  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24157  00646E  B0D8               	btfsc	status,0,c
 24158  006470  D022               	goto	l17408
 24159                           
 24160                           ; BSR set to: 1
 24161  006472  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24162  006478  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24163  00647E  0E00               	movlw	0
 24164  006480  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24165  006482  0EFF               	movlw	255
 24166  006484  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24167  006486  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24168  006488  5168               	movf	aCaptGetResult@lclRaw& (0+255),w,b
 24169  00648A  5D62               	subwf	??_aCaptGetResult& (0+255),w,b
 24170  00648C  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24171  00648E  5169               	movf	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24172  006490  5963               	subwfb	(??_aCaptGetResult+1)& (0+255),w,b
 24173  006492  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24174  006494  516A               	movf	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24175  006496  5964               	subwfb	(??_aCaptGetResult+2)& (0+255),w,b
 24176  006498  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24177  00649A  516B               	movf	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24178  00649C  5965               	subwfb	(??_aCaptGetResult+3)& (0+255),w,b
 24179  00649E  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24180                           
 24181                           ; BSR set to: 1
 24182                           ;aCapture.c: 200:                 *outVal = - (lclRaw/1);
 24183  0064A0  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24184  0064A6  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24185  0064AC  1F62               	comf	??_aCaptGetResult& (0+255),f,b
 24186  0064AE  1F63               	comf	(??_aCaptGetResult+1)& (0+255),f,b
 24187  0064B0  4B62               	infsnz	??_aCaptGetResult& (0+255),f,b
 24188  0064B2  2B63               	incf	(??_aCaptGetResult+1)& (0+255),f,b
 24189  0064B4  D039               	goto	L46
 24190  0064B6                     l17408:
 24191                           
 24192                           ; BSR set to: 1
 24193                           ;aCapture.c: 202:                 lclRaw = lclRaw - mainPSensCal;
 24194  0064B6  0060  F7D4  F162   	movff	_mainPSensCal,??_aCaptGetResult
 24195  0064BC  0060  F7D8  F163   	movff	_mainPSensCal+1,??_aCaptGetResult+1
 24196  0064C2  0E00               	movlw	0
 24197  0064C4  BF63               	btfsc	(??_aCaptGetResult+1)& (0+255),7,b
 24198  0064C6  0EFF               	movlw	255
 24199  0064C8  6F64               	movwf	(??_aCaptGetResult+2)& (0+255),b
 24200  0064CA  6F65               	movwf	(??_aCaptGetResult+3)& (0+255),b
 24201  0064CC  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24202  0064CE  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24203  0064D0  6F68               	movwf	aCaptGetResult@lclRaw& (0+255),b
 24204  0064D2  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24205  0064D4  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24206  0064D6  6F69               	movwf	(aCaptGetResult@lclRaw+1)& (0+255),b
 24207  0064D8  5164               	movf	(??_aCaptGetResult+2)& (0+255),w,b
 24208  0064DA  596A               	subwfb	(aCaptGetResult@lclRaw+2)& (0+255),w,b
 24209  0064DC  6F6A               	movwf	(aCaptGetResult@lclRaw+2)& (0+255),b
 24210  0064DE  5165               	movf	(??_aCaptGetResult+3)& (0+255),w,b
 24211  0064E0  596B               	subwfb	(aCaptGetResult@lclRaw+3)& (0+255),w,b
 24212  0064E2  6F6B               	movwf	(aCaptGetResult@lclRaw+3)& (0+255),b
 24213                           
 24214                           ; BSR set to: 1
 24215                           ;aCapture.c: 203:                 *outVal=(lclRaw/1);
 24216  0064E4  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24217  0064EA  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24218  0064F0  0060  F5A3  FFDE   	movff	aCaptGetResult@lclRaw,postinc2
 24219  0064F6  0060  F5A7  FFDD   	movff	aCaptGetResult@lclRaw+1,postdec2
 24220  0064FC                     l17412:
 24221                           
 24222                           ; BSR set to: 1
 24223                           ;aCapture.c: 205:             return 1;
 24224  0064FC  0E01               	movlw	1
 24225  0064FE  0012               	return	
 24226  006500                     l17416:
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;aCapture.c: 207:             *outVal = (lclRaw - auxPSensCal)/1;
 24230  006500  0102               	movlb	2	; () banked
 24231  006502  51E6               	movf	_auxPSensCal& (0+255),w,b
 24232  006504  0101               	movlb	1	; () banked
 24233  006506  5D68               	subwf	aCaptGetResult@lclRaw& (0+255),w,b
 24234  006508  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24235  00650A  0102               	movlb	2	; () banked
 24236  00650C  51E7               	movf	(_auxPSensCal+1)& (0+255),w,b
 24237  00650E  0101               	movlb	1	; () banked
 24238  006510  5969               	subwfb	(aCaptGetResult@lclRaw+1)& (0+255),w,b
 24239  006512  6F63               	movwf	(??_aCaptGetResult+1)& (0+255),b
 24240  006514  D009               	goto	L46
 24241  006516                     l17422:
 24242                           
 24243                           ; BSR set to: 1
 24244                           ;aCapture.c: 210:             *outVal = lclRaw<<1;
 24245  006516  0060  F5A0  F162   	movff	aCaptGetResult@lclRaw,??_aCaptGetResult
 24246  00651C  0060  F5A4  F163   	movff	aCaptGetResult@lclRaw+1,??_aCaptGetResult+1
 24247  006522  90D8               	bcf	status,0,c
 24248  006524  3762               	rlcf	??_aCaptGetResult& (0+255),f,b
 24249  006526  3763               	rlcf	(??_aCaptGetResult+1)& (0+255),f,b
 24250  006528                     L46:
 24251  006528  0060  F583  FFD9   	movff	aCaptGetResult@outVal,fsr2l
 24252  00652E  0060  F587  FFDA   	movff	aCaptGetResult@outVal+1,fsr2h
 24253  006534  0060  F58B  FFDE   	movff	??_aCaptGetResult,postinc2
 24254  00653A  0060  F58F  FFDD   	movff	??_aCaptGetResult+1,postdec2
 24255  006540  D7DD               	goto	l17412
 24256  006542                     l1996:
 24257                           
 24258                           ; BSR set to: 1
 24259                           ;aCapture.c: 214:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 24260  006542  94BA               	bcf	186,2,c	;volatile
 24261  006544  96BC               	bcf	188,3,c	;volatile
 24262  006546  96BA               	bcf	186,3,c	;volatile
 24263                           
 24264                           ; BSR set to: 1
 24265  006548  0EB1               	movlw	low STR_28
 24266  00654A  6F46               	movwf	printf@fmt& (0+255),b
 24267  00654C  0EFF               	movlw	high STR_28
 24268  00654E  6F47               	movwf	(printf@fmt+1)& (0+255),b
 24269  006550  0E00               	movlw	0
 24270  006552  6F49               	movwf	(?_printf+3)& (0+255),b
 24271  006554  0E68               	movlw	104
 24272  006556  6F48               	movwf	(?_printf+2)& (0+255),b
 24273  006558  EC68  F04E         	call	_printf	;wreg free
 24274                           
 24275                           ;aCapture.c: 215:     }
 24276  00655C  0012               	return	
 24277  00655E                     l17430:
 24278                           
 24279                           ; BSR set to: 1
 24280  00655E  5167               	movf	aCaptGetResult@sel& (0+255),w,b
 24281  006560  6F62               	movwf	??_aCaptGetResult& (0+255),b
 24282  006562  6B63               	clrf	(??_aCaptGetResult+1)& (0+255),b
 24283                           
 24284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24285                           ; Switch size 1, requested type "simple"
 24286                           ; Number of cases is 1, Range of values is 0 to 0
 24287                           ; switch strategies available:
 24288                           ; Name         Instructions Cycles
 24289                           ; simple_byte            4     3 (average)
 24290                           ;	Chosen strategy is simple_byte
 24291  006564  5163               	movf	(??_aCaptGetResult+1)& (0+255),w,b
 24292  006566  0A00               	xorlw	0	; case 0
 24293  006568  A4D8               	btfss	status,2,c
 24294  00656A  D7EB               	goto	l1996
 24295                           
 24296                           ; BSR set to: 1
 24297                           ; Switch size 1, requested type "simple"
 24298                           ; Number of cases is 7, Range of values is 0 to 6
 24299                           ; switch strategies available:
 24300                           ; Name         Instructions Cycles
 24301                           ; simple_byte           22    12 (average)
 24302                           ;	Chosen strategy is simple_byte
 24303  00656C  5162               	movf	??_aCaptGetResult& (0+255),w,b
 24304  00656E  0A00               	xorlw	0	; case 0
 24305  006570  B4D8               	btfsc	status,2,c
 24306  006572  D76A               	goto	l1990
 24307  006574  0A01               	xorlw	1	; case 1
 24308  006576  B4D8               	btfsc	status,2,c
 24309  006578  D7C3               	goto	l17416
 24310  00657A  0A03               	xorlw	3	; case 2
 24311  00657C  B4D8               	btfsc	status,2,c
 24312  00657E  D7CB               	goto	l17422
 24313  006580  0A01               	xorlw	1	; case 3
 24314  006582  B4D8               	btfsc	status,2,c
 24315  006584  D761               	goto	l1990
 24316  006586  0A07               	xorlw	7	; case 4
 24317  006588  B4D8               	btfsc	status,2,c
 24318  00658A  D75E               	goto	l1990
 24319  00658C  0A01               	xorlw	1	; case 5
 24320  00658E  B4D8               	btfsc	status,2,c
 24321  006590  D75B               	goto	l1990
 24322  006592  0A03               	xorlw	3	; case 6
 24323  006594  B4D8               	btfsc	status,2,c
 24324  006596  D758               	goto	l1990
 24325  006598  D7D4               	goto	l1996
 24326  00659A                     __end_of_aCaptGetResult:
 24327                           	opt callstack 0
 24328                           
 24329 ;; *************** function _MonitorErrorSet *****************
 24330 ;; Defined at:
 24331 ;;		line 20 in file "monComm.c"
 24332 ;; Parameters:    Size  Location     Type
 24333 ;;  flag            1    wreg     enum E16825
 24334 ;; Auto vars:     Size  Location     Type
 24335 ;;  flag            1   43[BANK0 ] enum E16825
 24336 ;; Return value:  Size  Location     Type
 24337 ;;                  1    wreg      void 
 24338 ;; Registers used:
 24339 ;;		wreg, status,2, status,0
 24340 ;; Tracked objects:
 24341 ;;		On entry : 3F/1
 24342 ;;		On exit  : 3F/1
 24343 ;;		Unchanged: 0/0
 24344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24349 ;;Total ram usage:        1 bytes
 24350 ;; Hardware stack levels used:    1
 24351 ;; Hardware stack levels required when called:   17
 24352 ;; This function calls:
 24353 ;;		Nothing
 24354 ;; This function is called by:
 24355 ;;		_main
 24356 ;;		_MonitorMsgForcedSend
 24357 ;; This function uses a non-reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text94
 24361  00A206                     __ptext94:
 24362                           	opt callstack 0
 24363  00A206                     _MonitorErrorSet:
 24364                           	opt callstack 9
 24365                           
 24366                           ;incstack = 0
 24367                           ;MonitorErrorSet@flag stored from wreg
 24368  00A206  0100               	movlb	0	; () banked
 24369  00A208  6F8B               	movwf	MonitorErrorSet@flag& (0+255),b
 24370                           
 24371                           ;monComm.c: 21:     ctrlErrorStatus = ctrlErrorStatus|flag;
 24372  00A20A  0101               	movlb	1	; () banked
 24373  00A20C  51CB               	movf	_ctrlErrorStatus& (0+255),w,b
 24374  00A20E  0100               	movlb	0	; () banked
 24375  00A210  118B               	iorwf	MonitorErrorSet@flag& (0+255),w,b
 24376  00A212  0101               	movlb	1	; () banked
 24377  00A214  6FCB               	movwf	_ctrlErrorStatus& (0+255),b
 24378                           
 24379                           ; BSR set to: 1
 24380  00A216  0012               	return		;funcret
 24381  00A218                     __end_of_MonitorErrorSet:
 24382                           	opt callstack 0
 24383                           
 24384 ;; *************** function _MonitorErrorClr *****************
 24385 ;; Defined at:
 24386 ;;		line 24 in file "monComm.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;  flag            1    wreg     enum E16825
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;  flag            1   43[BANK0 ] enum E16825
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1    wreg      void 
 24393 ;; Registers used:
 24394 ;;		wreg, status,2, status,0
 24395 ;; Tracked objects:
 24396 ;;		On entry : 3C/1
 24397 ;;		On exit  : 3F/1
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;Total ram usage:        1 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:   17
 24407 ;; This function calls:
 24408 ;;		Nothing
 24409 ;; This function is called by:
 24410 ;;		_main
 24411 ;;		_MonitorMsgForcedSend
 24412 ;; This function uses a non-reentrant model
 24413 ;;
 24414                           
 24415                           	psect	text95
 24416  00A218                     __ptext95:
 24417                           	opt callstack 0
 24418  00A218                     _MonitorErrorClr:
 24419                           	opt callstack 9
 24420                           
 24421                           ; BSR set to: 1
 24422                           ;incstack = 0
 24423                           ;MonitorErrorClr@flag stored from wreg
 24424  00A218  0100               	movlb	0	; () banked
 24425  00A21A  6F8B               	movwf	MonitorErrorClr@flag& (0+255),b
 24426                           
 24427                           ;monComm.c: 25:     ctrlErrorStatus = ctrlErrorStatus&(~flag);
 24428  00A21C  0100               	movlb	0	; () banked
 24429  00A21E  518B               	movf	MonitorErrorClr@flag& (0+255),w,b
 24430  00A220  0AFF               	xorlw	255
 24431  00A222  0101               	movlb	1	; () banked
 24432  00A224  15CB               	andwf	_ctrlErrorStatus& (0+255),w,b
 24433  00A226  6FCB               	movwf	_ctrlErrorStatus& (0+255),b
 24434                           
 24435                           ; BSR set to: 1
 24436  00A228  0012               	return		;funcret
 24437  00A22A                     __end_of_MonitorErrorClr:
 24438                           	opt callstack 0
 24439                           
 24440 ;; *************** function _I2C2_MasterOperation *****************
 24441 ;; Defined at:
 24442 ;;		line 254 in file "mcc_generated_files/i2c2_master.c"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;  read            1    wreg     _Bool 
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;  read            1  100[BANK1 ] _Bool 
 24447 ;;  returnValue     1  101[BANK1 ] enum E353
 24448 ;; Return value:  Size  Location     Type
 24449 ;;                  1    wreg      enum E353
 24450 ;; Registers used:
 24451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24452 ;; Tracked objects:
 24453 ;;		On entry : 3F/2
 24454 ;;		On exit  : 3F/1
 24455 ;;		Unchanged: 0/0
 24456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24458 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24460 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24461 ;;Total ram usage:        2 bytes
 24462 ;; Hardware stack levels used:    1
 24463 ;; Hardware stack levels required when called:   29
 24464 ;; This function calls:
 24465 ;;		_I2C2_DO_SEND_ADR_READ
 24466 ;;		_I2C2_DO_SEND_ADR_WRITE
 24467 ;;		_I2C2_MasterSetCounter
 24468 ;; This function is called by:
 24469 ;;		_MonitorMsgForcedSend
 24470 ;; This function uses a non-reentrant model
 24471 ;;
 24472                           
 24473                           	psect	text96
 24474  009362                     __ptext96:
 24475                           	opt callstack 0
 24476  009362                     _I2C2_MasterOperation:
 24477                           	opt callstack 0
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;incstack = 0
 24481 ;; hardware stack exceeded
 24482                           ;I2C2_MasterOperation@read stored from wreg
 24483  009362  0101               	movlb	1	; () banked
 24484  009364  6F64               	movwf	I2C2_MasterOperation@read& (0+255),b
 24485                           
 24486                           ;mcc_generated_files/i2c2_master.c: 254: i2c2_error_t I2C2_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c2_master.c: 255: {;mcc_generated_files/i2c2_master.c: 256:     i2c
      +                          2_error_t returnValue = I2C2_BUSY;
 24487  009366  0E01               	movlw	1
 24488  009368  0101               	movlb	1	; () banked
 24489  00936A  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 24490                           
 24491                           ; BSR set to: 1
 24492                           ;mcc_generated_files/i2c2_master.c: 257:     if(!I2C2_Status.busy)
 24493  00936C  0102               	movlb	2	; () banked
 24494  00936E  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 24495  009370  D017               	goto	l17362
 24496                           
 24497                           ; BSR set to: 2
 24498                           ;mcc_generated_files/i2c2_master.c: 258:     {;mcc_generated_files/i2c2_master.c: 259:  
      +                                 I2C2_Status.busy = 1;
 24499  009372  8523               	bsf	(_I2C2_Status+35)& (0+255),2,b
 24500                           
 24501                           ; BSR set to: 2
 24502                           ;mcc_generated_files/i2c2_master.c: 260:         returnValue = I2C2_NOERR;
 24503  009374  0E00               	movlw	0
 24504  009376  0101               	movlb	1	; () banked
 24505  009378  6F65               	movwf	I2C2_MasterOperation@returnValue& (0+255),b
 24506                           
 24507                           ; BSR set to: 1
 24508                           ;mcc_generated_files/i2c2_master.c: 261:         I2C2_MasterSetCounter(I2C2_Status.data_
      +                          length);
 24509  00937A  0102               	movlb	2	; () banked
 24510  00937C  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 24511  00937E  ECDE  F051         	call	_I2C2_MasterSetCounter
 24512                           
 24513                           ;mcc_generated_files/i2c2_master.c: 263:         if(read)
 24514  009382  0101               	movlb	1	; () banked
 24515  009384  5164               	movf	I2C2_MasterOperation@read& (0+255),w,b
 24516  009386  B4D8               	btfsc	status,2,c
 24517  009388  D006               	goto	l17358
 24518                           
 24519                           ; BSR set to: 1
 24520                           ;mcc_generated_files/i2c2_master.c: 264:         {;mcc_generated_files/i2c2_master.c: 26
      +                          5:             I2C2_Status.state = I2C2_RX;
 24521  00938A  0E04               	movlw	4
 24522  00938C  0102               	movlb	2	; () banked
 24523  00938E  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24524                           
 24525                           ; BSR set to: 2
 24526                           ;mcc_generated_files/i2c2_master.c: 266:             I2C2_DO_SEND_ADR_READ();
 24527  009390  ECF3  F04E         	call	_I2C2_DO_SEND_ADR_READ	;wreg free
 24528                           
 24529                           ;mcc_generated_files/i2c2_master.c: 267:         }
 24530  009394  D005               	goto	l17362
 24531  009396                     l17358:
 24532                           
 24533                           ; BSR set to: 1
 24534                           ;mcc_generated_files/i2c2_master.c: 269:         {;mcc_generated_files/i2c2_master.c: 27
      +                          0:             I2C2_Status.state = I2C2_TX;
 24535  009396  0E03               	movlw	3
 24536  009398  0102               	movlb	2	; () banked
 24537  00939A  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 24538                           
 24539                           ; BSR set to: 2
 24540                           ;mcc_generated_files/i2c2_master.c: 271:             I2C2_DO_SEND_ADR_WRITE();
 24541  00939C  EC62  F050         	call	_I2C2_DO_SEND_ADR_WRITE	;wreg free
 24542  0093A0                     l17362:
 24543                           
 24544                           ;mcc_generated_files/i2c2_master.c: 274:     return returnValue;
 24545  0093A0  0101               	movlb	1	; () banked
 24546  0093A2  5165               	movf	I2C2_MasterOperation@returnValue& (0+255),w,b
 24547                           
 24548                           ; BSR set to: 1
 24549  0093A4  0012               	return		;funcret
 24550  0093A6                     __end_of_I2C2_MasterOperation:
 24551                           	opt callstack 0
 24552                           
 24553 ;; *************** function _I2C2_DO_SEND_ADR_WRITE *****************
 24554 ;; Defined at:
 24555 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 24556 ;; Parameters:    Size  Location     Type
 24557 ;;		None
 24558 ;; Auto vars:     Size  Location     Type
 24559 ;;		None
 24560 ;; Return value:  Size  Location     Type
 24561 ;;                  1    wreg      enum E16447
 24562 ;; Registers used:
 24563 ;;		wreg, status,2, status,0, cstack
 24564 ;; Tracked objects:
 24565 ;;		On entry : 3F/2
 24566 ;;		On exit  : 0/0
 24567 ;;		Unchanged: 0/0
 24568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24573 ;;Total ram usage:        0 bytes
 24574 ;; Hardware stack levels used:    1
 24575 ;; Hardware stack levels required when called:   18
 24576 ;; This function calls:
 24577 ;;		_I2C2_MasterSendTxData
 24578 ;; This function is called by:
 24579 ;;		_I2C2_MasterOperation
 24580 ;;		_I2C2_MasterFsm
 24581 ;; This function uses a non-reentrant model
 24582 ;;
 24583                           
 24584                           	psect	text97
 24585  00A0C4                     __ptext97:
 24586                           	opt callstack 0
 24587  00A0C4                     _I2C2_DO_SEND_ADR_WRITE:
 24588                           	opt callstack 0
 24589                           
 24590                           ; BSR set to: 1
 24591  0000                     
 24592                           ;Skip over the trampoline to the duplicate function for level 2
 24593  00A0C4  BED3               	btfsc	211,7,c
 24594  00A0C6  EFA8  F050         	goto	i2_I2C2_DO_SEND_ADR_WRITE
 24595  00A0CA                     _I2C2_DO_SEND_ADR_WRITE$intlevel0:
 24596                           	opt callstack 7
 24597                           
 24598                           ; BSR set to: 2
 24599                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 24600                           
 24601                           ;incstack = 0
 24602  00A0CA  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24603  00A0CC  0BFC               	andlw	-4
 24604  00A0CE  0902               	iorlw	2
 24605  00A0D0  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 24606                           
 24607                           ; BSR set to: 2
 24608                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 24609  00A0D2  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 24610  00A0D4  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 24611  00A0D6  ECD8  F051         	call	_I2C2_MasterSendTxData
 24612                           
 24613                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 24614  00A0DA  0E03               	movlw	3
 24615  00A0DC  0012               	return		;funcret
 24616  00A0DE                     __end_of_I2C2_DO_SEND_ADR_WRITE:
 24617                           	opt callstack 0
 24618                           
 24619 ;; *************** function _I2C2_DO_SEND_ADR_READ *****************
 24620 ;; Defined at:
 24621 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 24622 ;; Parameters:    Size  Location     Type
 24623 ;;		None
 24624 ;; Auto vars:     Size  Location     Type
 24625 ;;		None
 24626 ;; Return value:  Size  Location     Type
 24627 ;;                  1    wreg      enum E16447
 24628 ;; Registers used:
 24629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24630 ;; Tracked objects:
 24631 ;;		On entry : 3F/2
 24632 ;;		On exit  : 0/0
 24633 ;;		Unchanged: 0/0
 24634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24639 ;;Total ram usage:        0 bytes
 24640 ;; Hardware stack levels used:    1
 24641 ;; Hardware stack levels required when called:   28
 24642 ;; This function calls:
 24643 ;;		_I2C2_DO_RX_EMPTY
 24644 ;;		_I2C2_MasterSendTxData
 24645 ;; This function is called by:
 24646 ;;		_I2C2_MasterOperation
 24647 ;;		_I2C2_MasterFsm
 24648 ;; This function uses a non-reentrant model
 24649 ;;
 24650                           
 24651                           	psect	text98
 24652  009DE6                     __ptext98:
 24653                           	opt callstack 0
 24654  009DE6                     _I2C2_DO_SEND_ADR_READ:
 24655                           	opt callstack 0
 24656                           
 24657                           ;Skip over the trampoline to the duplicate function for level 2
 24658  009DE6  BED3               	btfsc	211,7,c
 24659  009DE8  EFB4  F04F         	goto	i2_I2C2_DO_SEND_ADR_READ
 24660  009DEC                     _I2C2_DO_SEND_ADR_READ$intlevel0:
 24661                           	opt callstack 0
 24662                           
 24663                           ; BSR set to: 2
 24664                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 24665                           
 24666                           ;incstack = 0
 24667 ;; hardware stack exceeded
 24668  009DEC  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 24669  009DEE  0BFC               	andlw	-4
 24670  009DF0  0902               	iorlw	2
 24671  009DF2  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 24672                           
 24673                           ; BSR set to: 2
 24674                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 24675  009DF4  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 24676  009DF6  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 24677  009DF8  B4D8               	btfsc	status,2,c
 24678                           
 24679                           ; BSR set to: 2
 24680                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 24681  009DFA  EC42  F043         	call	_I2C2_DO_RX_EMPTY	;wreg free
 24682                           
 24683                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 24684  009DFE  80D8               	bsf	status,0,c
 24685  009E00  0102               	movlb	2	; () banked
 24686  009E02  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 24687  009E04  ECD8  F051         	call	_I2C2_MasterSendTxData
 24688                           
 24689                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 24690  009E08  0E04               	movlw	4
 24691  009E0A  0012               	return		;funcret
 24692  009E0C                     __end_of_I2C2_DO_SEND_ADR_READ:
 24693                           	opt callstack 0
 24694                           
 24695 ;; *************** function _I2C2_MasterSendTxData *****************
 24696 ;; Defined at:
 24697 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 24698 ;; Parameters:    Size  Location     Type
 24699 ;;  data            1    wreg     unsigned char 
 24700 ;; Auto vars:     Size  Location     Type
 24701 ;;  data            1   43[BANK0 ] unsigned char 
 24702 ;; Return value:  Size  Location     Type
 24703 ;;                  1    wreg      void 
 24704 ;; Registers used:
 24705 ;;		wreg
 24706 ;; Tracked objects:
 24707 ;;		On entry : 3F/2
 24708 ;;		On exit  : 0/0
 24709 ;;		Unchanged: 0/0
 24710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24715 ;;Total ram usage:        1 bytes
 24716 ;; Hardware stack levels used:    1
 24717 ;; Hardware stack levels required when called:   17
 24718 ;; This function calls:
 24719 ;;		Nothing
 24720 ;; This function is called by:
 24721 ;;		_I2C2_DO_SEND_ADR_READ
 24722 ;;		_I2C2_DO_SEND_ADR_WRITE
 24723 ;; This function uses a non-reentrant model
 24724 ;;
 24725                           
 24726                           	psect	text99
 24727  00A3B0                     __ptext99:
 24728                           	opt callstack 0
 24729  00A3B0                     _I2C2_MasterSendTxData:
 24730                           	opt callstack 7
 24731                           
 24732                           ;incstack = 0
 24733                           ;I2C2_MasterSendTxData@data stored from wreg
 24734  00A3B0  0100               	movlb	0	; () banked
 24735  00A3B2  6F8B               	movwf	I2C2_MasterSendTxData@data& (0+255),b
 24736                           
 24737                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 24738  00A3B4  0060  F22F  FD55   	movff	I2C2_MasterSendTxData@data,15701	;volatile
 24739  00A3BA  0012               	return		;funcret
 24740  00A3BC                     __end_of_I2C2_MasterSendTxData:
 24741                           	opt callstack 0
 24742                           
 24743 ;; *************** function _I2C2_DO_RX_EMPTY *****************
 24744 ;; Defined at:
 24745 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 24746 ;; Parameters:    Size  Location     Type
 24747 ;;		None
 24748 ;; Auto vars:     Size  Location     Type
 24749 ;;		None
 24750 ;; Return value:  Size  Location     Type
 24751 ;;                  1    wreg      enum E16447
 24752 ;; Registers used:
 24753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24754 ;; Tracked objects:
 24755 ;;		On entry : 3F/2
 24756 ;;		On exit  : 0/0
 24757 ;;		Unchanged: 0/0
 24758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24761 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24762 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24763 ;;Total ram usage:        2 bytes
 24764 ;; Hardware stack levels used:    1
 24765 ;; Hardware stack levels required when called:   27
 24766 ;; This function calls:
 24767 ;;		Absolute function
 24768 ;;		_I2C2_CallbackReturnReset
 24769 ;;		_I2C2_CallbackReturnStop
 24770 ;;		_I2C2_MasterDisableRestart
 24771 ;;		_I2C2_MasterEnableRestart
 24772 ;;		_I2C2_MasterSetCounter
 24773 ;;		_I2C2_NackCb
 24774 ;;		_rd1RegCompleteHandler
 24775 ;;		_rd2RegCompleteHandler
 24776 ;;		_rdBlkRegCompleteHandler
 24777 ;;		_wr1RegCompleteHandler
 24778 ;;		_wr2RegCompleteHandler
 24779 ;; This function is called by:
 24780 ;;		_I2C2_DO_SEND_ADR_READ
 24781 ;;		_I2C2_MasterFsm
 24782 ;; This function uses a non-reentrant model
 24783 ;;
 24784                           
 24785                           	psect	text100
 24786  008684                     __ptext100:
 24787                           	opt callstack 0
 24788  008684                     _I2C2_DO_RX_EMPTY:
 24789                           	opt callstack 0
 24790                           
 24791                           ;Skip over the trampoline to the duplicate function for level 2
 24792  008684  BED3               	btfsc	211,7,c
 24793  008686  EFC1  F043         	goto	i2_I2C2_DO_RX_EMPTY
 24794  00868A                     _I2C2_DO_RX_EMPTY$intlevel0:
 24795                           	opt callstack 0
 24796                           
 24797                           ; BSR set to: 2
 24798                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 24799                           
 24800                           ;incstack = 0
 24801 ;; hardware stack exceeded
 24802  00868A  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 24803                           
 24804                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 24805  00868C  D016               	goto	l17116
 24806  00868E                     l17088:
 24807                           
 24808                           ; BSR set to: 1
 24809                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 24810  00868E  EC40  F052         	call	_I2C2_MasterEnableRestart	;wreg free
 24811                           
 24812                           ; BSR set to: 61
 24813                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 24814  008692  0E08               	movlw	8
 24815  008694  0012               	return	
 24816  008696                     l17094:
 24817                           
 24818                           ; BSR set to: 1
 24819                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 24820  008696  EC40  F052         	call	_I2C2_MasterEnableRestart	;wreg free
 24821                           
 24822                           ; BSR set to: 61
 24823                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 24824  00869A  0E07               	movlw	7
 24825  00869C  0012               	return	
 24826  00869E                     l17100:
 24827                           
 24828                           ; BSR set to: 1
 24829                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 24830  00869E  0102               	movlb	2	; () banked
 24831  0086A0  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 24832  0086A2  ECDE  F051         	call	_I2C2_MasterSetCounter
 24833                           
 24834                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 24835  0086A6  0E04               	movlw	4
 24836  0086A8  0012               	return	
 24837  0086AA                     l17106:
 24838                           
 24839                           ; BSR set to: 1
 24840                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 24841  0086AA  0E07               	movlw	7
 24842  0086AC  0102               	movlb	2	; () banked
 24843  0086AE  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 24844  0086B0  A4D8               	btfss	status,2,c
 24845                           
 24846                           ; BSR set to: 2
 24847                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 24848  0086B2  EC43  F052         	call	_I2C2_MasterDisableRestart	;wreg free
 24849                           
 24850                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 24851  0086B6  0E0F               	movlw	15
 24852  0086B8  0012               	return	
 24853  0086BA                     l17116:
 24854                           
 24855                           ; BSR set to: 2
 24856  0086BA  0060  F830  F160   	movff	_I2C2_Status+12,rd1RegCompleteHandler@ptr
 24857  0086C0  0060  F834  F161   	movff	_I2C2_Status+13,rd1RegCompleteHandler@ptr+1
 24858  0086C6  D801               	call	u17488
 24859  0086C8  D009               	goto	u17489
 24860  0086CA                     u17488:
 24861  0086CA  0005               	push	
 24862  0086CC  6EFA               	movwf	pclath,c
 24863  0086CE  5100               	movf	_I2C2_Status& (0+255),w,b
 24864  0086D0  6EFD               	movwf	tosl,c
 24865  0086D2  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 24866  0086D4  6EFE               	movwf	tosh,c
 24867  0086D6  6AFF               	clrf	tosu,c
 24868  0086D8  50FA               	movf	pclath,w,c
 24869  0086DA  0012               	return		;indir
 24870  0086DC                     u17489:
 24871  0086DC  0101               	movlb	1	; () banked
 24872  0086DE  6F62               	movwf	??_I2C2_DO_RX_EMPTY& (0+255),b
 24873  0086E0  6B63               	clrf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),b
 24874                           
 24875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24876                           ; Switch size 1, requested type "simple"
 24877                           ; Number of cases is 1, Range of values is 0 to 0
 24878                           ; switch strategies available:
 24879                           ; Name         Instructions Cycles
 24880                           ; simple_byte            4     3 (average)
 24881                           ;	Chosen strategy is simple_byte
 24882  0086E2  5163               	movf	(??_I2C2_DO_RX_EMPTY+1)& (0+255),w,b
 24883  0086E4  0A00               	xorlw	0	; case 0
 24884  0086E6  A4D8               	btfss	status,2,c
 24885  0086E8  D7E0               	goto	l17106
 24886                           
 24887                           ; BSR set to: 1
 24888                           ; Switch size 1, requested type "simple"
 24889                           ; Number of cases is 4, Range of values is 1 to 4
 24890                           ; switch strategies available:
 24891                           ; Name         Instructions Cycles
 24892                           ; simple_byte           13     7 (average)
 24893                           ;	Chosen strategy is simple_byte
 24894  0086EA  5162               	movf	??_I2C2_DO_RX_EMPTY& (0+255),w,b
 24895  0086EC  0A01               	xorlw	1	; case 1
 24896  0086EE  B4D8               	btfsc	status,2,c
 24897  0086F0  D7DC               	goto	l17106
 24898  0086F2  0A03               	xorlw	3	; case 2
 24899  0086F4  B4D8               	btfsc	status,2,c
 24900  0086F6  D7CF               	goto	l17094
 24901  0086F8  0A01               	xorlw	1	; case 3
 24902  0086FA  B4D8               	btfsc	status,2,c
 24903  0086FC  D7C8               	goto	l17088
 24904  0086FE  0A07               	xorlw	7	; case 4
 24905  008700  B4D8               	btfsc	status,2,c
 24906  008702  D7CD               	goto	l17100
 24907  008704  D7D2               	goto	l17106
 24908  008706                     __end_of_I2C2_DO_RX_EMPTY:
 24909                           	opt callstack 0
 24910                           
 24911 ;; *************** function _I2C2_NackCb *****************
 24912 ;; Defined at:
 24913 ;;		line 13 in file "i2c2_mux.c"
 24914 ;; Parameters:    Size  Location     Type
 24915 ;;  ptr             2   96[BANK1 ] PTR void 
 24916 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 24917 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;		None
 24920 ;; Return value:  Size  Location     Type
 24921 ;;                  1    wreg      enum E16390
 24922 ;; Registers used:
 24923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24924 ;; Tracked objects:
 24925 ;;		On entry : 3F/2
 24926 ;;		On exit  : 3C/0
 24927 ;;		Unchanged: 0/0
 24928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24929 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24932 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24933 ;;Total ram usage:        2 bytes
 24934 ;; Hardware stack levels used:    1
 24935 ;; Hardware stack levels required when called:   26
 24936 ;; This function calls:
 24937 ;;		_I2C2_CallbackReturnStop
 24938 ;;		_printf
 24939 ;; This function is called by:
 24940 ;;		_I2C2_MOpen
 24941 ;;		_I2C2_DO_RX_EMPTY
 24942 ;;		i2_I2C2_DO_RX_EMPTY
 24943 ;;		_I2C2_DO_TX_EMPTY
 24944 ;;		_I2C2_DO_TX
 24945 ;;		_I2C2_DO_ADDRESS_NACK
 24946 ;;		_I2C2_DO_BUS_COLLISION
 24947 ;; This function uses a non-reentrant model
 24948 ;;
 24949                           
 24950                           	psect	text101
 24951  0095E4                     __ptext101:
 24952                           	opt callstack 0
 24953  0095E4                     _I2C2_NackCb:
 24954                           	opt callstack 0
 24955                           
 24956                           ;Skip over the trampoline to the duplicate function for level 2
 24957  0095E4  BED3               	btfsc	211,7,c
 24958  0095E6  EFD7  F04C         	goto	i2_I2C2_NackCb
 24959  0095EA                     _I2C2_NackCb$intlevel0:
 24960                           	opt callstack 0
 24961                           
 24962                           ; BSR set to: 2
 24963                           ;i2c2_mux.c: 14:     printf ("I2C2 E\n");
 24964                           
 24965                           ;incstack = 0
 24966 ;; hardware stack exceeded
 24967  0095EA  0ECA               	movlw	low STR_61
 24968  0095EC  0101               	movlb	1	; () banked
 24969  0095EE  6F46               	movwf	printf@fmt& (0+255),b
 24970  0095F0  0EFF               	movlw	high STR_61
 24971  0095F2  6F47               	movwf	(printf@fmt+1)& (0+255),b
 24972  0095F4  EC68  F04E         	call	_printf	;wreg free
 24973                           
 24974                           ; BSR set to: 2
 24975                           ;i2c2_mux.c: 15:     if (currentTrfAddr == 0x50) {
 24976  0095F8  0E50               	movlw	80
 24977  0095FA  0101               	movlb	1	; () banked
 24978  0095FC  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 24979  0095FE  A4D8               	btfss	status,2,c
 24980  009600  D003               	goto	l17050
 24981                           
 24982                           ; BSR set to: 1
 24983                           ;i2c2_mux.c: 16:         lastI2C2MAckResponse = 0;
 24984  009602  0E00               	movlw	0
 24985  009604  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 24986                           
 24987                           ;i2c2_mux.c: 17:     } else {
 24988  009606  D003               	goto	l17052
 24989  009608                     l17050:
 24990                           
 24991                           ; BSR set to: 1
 24992                           ;i2c2_mux.c: 18:         lastI2C2LAckResponse = 0;
 24993  009608  0E00               	movlw	0
 24994  00960A  0102               	movlb	2	; () banked
 24995  00960C  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 24996  00960E                     l17052:
 24997                           
 24998                           ;i2c2_mux.c: 20:     return I2C2_CallbackReturnStop(((void*)0));
 24999  00960E  0E00               	movlw	0
 25000  009610  0101               	movlb	1	; () banked
 25001  009612  6F60               	movwf	I2C2_CallbackReturnStop@funPtr& (0+255),b
 25002  009614  0E00               	movlw	0
 25003  009616  6F61               	movwf	(I2C2_CallbackReturnStop@funPtr+1)& (0+255),b
 25004  009618  EC0C  F052         	call	_I2C2_CallbackReturnStop	;wreg free
 25005  00961C  0012               	return		;funcret
 25006  00961E                     __end_of_I2C2_NackCb:
 25007                           	opt callstack 0
 25008                           
 25009 ;; *************** function _I2C2_CallbackReturnReset *****************
 25010 ;; Defined at:
 25011 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 25012 ;; Parameters:    Size  Location     Type
 25013 ;;  funPtr          2   96[BANK1 ] PTR void 
 25014 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25015 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25016 ;; Auto vars:     Size  Location     Type
 25017 ;;		None
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  1    wreg      enum E358
 25020 ;; Registers used:
 25021 ;;		wreg
 25022 ;; Tracked objects:
 25023 ;;		On entry : 3F/2
 25024 ;;		On exit  : 3F/2
 25025 ;;		Unchanged: 3F/0
 25026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25031 ;;Total ram usage:        2 bytes
 25032 ;; Hardware stack levels used:    1
 25033 ;; Hardware stack levels required when called:   17
 25034 ;; This function calls:
 25035 ;;		Nothing
 25036 ;; This function is called by:
 25037 ;;		_I2C2_Open
 25038 ;;		_I2C2_DO_RX_EMPTY
 25039 ;;		i2_I2C2_DO_RX_EMPTY
 25040 ;;		_I2C2_DO_TX_EMPTY
 25041 ;;		_I2C2_DO_TX
 25042 ;;		_I2C2_DO_ADDRESS_NACK
 25043 ;;		_I2C2_DO_BUS_COLLISION
 25044 ;; This function uses a non-reentrant model
 25045 ;;
 25046                           
 25047                           	psect	text102
 25048  00A40E                     __ptext102:
 25049                           	opt callstack 0
 25050  00A40E                     _I2C2_CallbackReturnReset:
 25051                           	opt callstack 0
 25052                           
 25053                           ;Skip over the trampoline to the duplicate function for level 2
 25054  00A40E  BED3               	btfsc	211,7,c
 25055  00A410  EF72  F052         	goto	i2_I2C2_CallbackReturnReset
 25056  00A414                     _I2C2_CallbackReturnReset$intlevel0:
 25057                           	opt callstack 6
 25058                           
 25059                           ; BSR set to: 2
 25060                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 25061                           
 25062                           ;incstack = 0
 25063  00A414  0E05               	movlw	5
 25064                           
 25065                           ; BSR set to: 2
 25066  00A416  0012               	return		;funcret
 25067  00A418                     __end_of_I2C2_CallbackReturnReset:
 25068                           	opt callstack 0
 25069                           
 25070 ;; *************** function _I2C2_CallbackReturnStop *****************
 25071 ;; Defined at:
 25072 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 25073 ;; Parameters:    Size  Location     Type
 25074 ;;  funPtr          2   96[BANK1 ] PTR void 
 25075 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25076 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25077 ;; Auto vars:     Size  Location     Type
 25078 ;;		None
 25079 ;; Return value:  Size  Location     Type
 25080 ;;                  1    wreg      enum E358
 25081 ;; Registers used:
 25082 ;;		wreg
 25083 ;; Tracked objects:
 25084 ;;		On entry : 3C/2
 25085 ;;		On exit  : 3C/0
 25086 ;;		Unchanged: 3C/0
 25087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25088 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25091 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25092 ;;Total ram usage:        2 bytes
 25093 ;; Hardware stack levels used:    1
 25094 ;; Hardware stack levels required when called:   17
 25095 ;; This function calls:
 25096 ;;		Nothing
 25097 ;; This function is called by:
 25098 ;;		_I2C2_Open
 25099 ;;		_I2C2_SetCallback
 25100 ;;		_I2C2_NackCb
 25101 ;;		_I2C2_DO_RX_EMPTY
 25102 ;;		i2_I2C2_DO_RX_EMPTY
 25103 ;;		_I2C2_DO_TX_EMPTY
 25104 ;;		_I2C2_DO_TX
 25105 ;;		_I2C2_DO_ADDRESS_NACK
 25106 ;;		_I2C2_DO_BUS_COLLISION
 25107 ;; This function uses a non-reentrant model
 25108 ;;
 25109                           
 25110                           	psect	text103
 25111  00A418                     __ptext103:
 25112                           	opt callstack 0
 25113  00A418                     _I2C2_CallbackReturnStop:
 25114                           	opt callstack 0
 25115                           
 25116                           ; BSR set to: 2
 25117                           ;Skip over the trampoline to the duplicate function for level 2
 25118  00A418  BED3               	btfsc	211,7,c
 25119  00A41A  EF74  F052         	goto	i2_I2C2_CallbackReturnStop
 25120  00A41E                     _I2C2_CallbackReturnStop$intlevel0:
 25121                           	opt callstack 5
 25122                           
 25123                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 25124                           
 25125                           ;incstack = 0
 25126  00A41E  0E01               	movlw	1
 25127  00A420  0012               	return		;funcret
 25128  00A422                     __end_of_I2C2_CallbackReturnStop:
 25129                           	opt callstack 0
 25130                           
 25131 ;; *************** function _rdBlkRegCompleteHandler *****************
 25132 ;; Defined at:
 25133 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25134 ;; Parameters:    Size  Location     Type
 25135 ;;  ptr             2   96[BANK1 ] PTR void 
 25136 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25137 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25138 ;; Auto vars:     Size  Location     Type
 25139 ;;		None
 25140 ;; Return value:  Size  Location     Type
 25141 ;;                  1    wreg      enum E358
 25142 ;; Registers used:
 25143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25144 ;; Tracked objects:
 25145 ;;		On entry : 3F/2
 25146 ;;		On exit  : 3F/0
 25147 ;;		Unchanged: 0/0
 25148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25149 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25152 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25153 ;;Total ram usage:        2 bytes
 25154 ;; Hardware stack levels used:    1
 25155 ;; Hardware stack levels required when called:   19
 25156 ;; This function calls:
 25157 ;;		_I2C2_SetBuffer
 25158 ;;		_I2C2_SetDataCompleteCallback
 25159 ;; This function is called by:
 25160 ;;		_I2C2_DO_RX_EMPTY
 25161 ;;		i2_I2C2_DO_RX_EMPTY
 25162 ;;		_I2C2_DO_TX_EMPTY
 25163 ;;		_I2C2_DO_TX
 25164 ;;		_I2C2_DO_ADDRESS_NACK
 25165 ;;		_I2C2_DO_BUS_COLLISION
 25166 ;; This function uses a non-reentrant model
 25167 ;;
 25168                           
 25169                           	psect	text104
 25170  008FB8                     __ptext104:
 25171                           	opt callstack 0
 25172  008FB8                     _rdBlkRegCompleteHandler:
 25173                           	opt callstack 0
 25174                           
 25175                           ;Skip over the trampoline to the duplicate function for level 2
 25176  008FB8  BED3               	btfsc	211,7,c
 25177  008FBA  EFD6  F048         	goto	i2_rdBlkRegCompleteHandler
 25178  008FBE                     _rdBlkRegCompleteHandler$intlevel0:
 25179                           	opt callstack 4
 25180                           
 25181                           ; BSR set to: 2
 25182                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 25183                           
 25184                           ;incstack = 0
 25185  008FBE  0101               	movlb	1	; () banked
 25186  008FC0  EE20 F002          	lfsr	2,2
 25187  008FC4  5160               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 25188  008FC6  26D9               	addwf	fsr2l,f,c
 25189  008FC8  5161               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 25190  008FCA  22DA               	addwfc	fsr2h,f,c
 25191  008FCC  006F FF78  F08B    	movff	postinc2,I2C2_SetBuffer@buffer
 25192  008FD2  006F FF74  F08C    	movff	postdec2,I2C2_SetBuffer@buffer+1
 25193  008FD8  0060  F583  FFD9   	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 25194  008FDE  0060  F587  FFDA   	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 25195  008FE4  006F FF78  F08D    	movff	postinc2,I2C2_SetBuffer@bufferSize
 25196  008FEA  006F FF74  F08E    	movff	postdec2,I2C2_SetBuffer@bufferSize+1
 25197  008FF0  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 25198                           
 25199                           ; BSR set to: 2
 25200                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25201  008FF4  0E00               	movlw	0
 25202  008FF6  0100               	movlb	0	; () banked
 25203  008FF8  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25204  008FFA  0E00               	movlw	0
 25205  008FFC  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25206  008FFE  0E00               	movlw	0
 25207  009000  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25208  009002  0E00               	movlw	0
 25209  009004  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25210  009006  ECE6  F04F         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25211                           
 25212                           ; BSR set to: 0
 25213                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 25214  00900A  0E02               	movlw	2
 25215                           
 25216                           ; BSR set to: 0
 25217  00900C  0012               	return		;funcret
 25218  00900E                     __end_of_rdBlkRegCompleteHandler:
 25219                           	opt callstack 0
 25220                           
 25221 ;; *************** function _wr1RegCompleteHandler *****************
 25222 ;; Defined at:
 25223 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;  ptr             2   96[BANK1 ] PTR void 
 25226 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25227 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25228 ;; Auto vars:     Size  Location     Type
 25229 ;;		None
 25230 ;; Return value:  Size  Location     Type
 25231 ;;                  1    wreg      enum E358
 25232 ;; Registers used:
 25233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25234 ;; Tracked objects:
 25235 ;;		On entry : 3F/2
 25236 ;;		On exit  : 3F/0
 25237 ;;		Unchanged: 0/0
 25238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25239 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25242 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25243 ;;Total ram usage:        2 bytes
 25244 ;; Hardware stack levels used:    1
 25245 ;; Hardware stack levels required when called:   19
 25246 ;; This function calls:
 25247 ;;		_I2C2_SetBuffer
 25248 ;;		_I2C2_SetDataCompleteCallback
 25249 ;; This function is called by:
 25250 ;;		_I2C2_DO_RX_EMPTY
 25251 ;;		i2_I2C2_DO_RX_EMPTY
 25252 ;;		_I2C2_DO_TX_EMPTY
 25253 ;;		_I2C2_DO_TX
 25254 ;;		_I2C2_DO_ADDRESS_NACK
 25255 ;;		_I2C2_DO_BUS_COLLISION
 25256 ;; This function uses a non-reentrant model
 25257 ;;
 25258                           
 25259                           	psect	text105
 25260  00961E                     __ptext105:
 25261                           	opt callstack 0
 25262  00961E                     _wr1RegCompleteHandler:
 25263                           	opt callstack 0
 25264                           
 25265                           ; BSR set to: 0
 25266                           ;Skip over the trampoline to the duplicate function for level 2
 25267  00961E  BED3               	btfsc	211,7,c
 25268  009620  EF39  F04D         	goto	i2_wr1RegCompleteHandler
 25269  009624                     _wr1RegCompleteHandler$intlevel0:
 25270                           	opt callstack 4
 25271                           
 25272                           ; BSR set to: 2
 25273                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 25274                           
 25275                           ;incstack = 0
 25276  009624  0060  F580  F08B   	movff	wr1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25277  00962A  0060  F584  F08C   	movff	wr1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25278  009630  0E00               	movlw	0
 25279  009632  0100               	movlb	0	; () banked
 25280  009634  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25281  009636  0E01               	movlw	1
 25282  009638  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25283  00963A  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 25284                           
 25285                           ; BSR set to: 2
 25286                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25287  00963E  0E00               	movlw	0
 25288  009640  0100               	movlb	0	; () banked
 25289  009642  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25290  009644  0E00               	movlw	0
 25291  009646  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25292  009648  0E00               	movlw	0
 25293  00964A  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25294  00964C  0E00               	movlw	0
 25295  00964E  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25296  009650  ECE6  F04F         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25297                           
 25298                           ; BSR set to: 0
 25299                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 25300  009654  0E04               	movlw	4
 25301                           
 25302                           ; BSR set to: 0
 25303  009656  0012               	return		;funcret
 25304  009658                     __end_of_wr1RegCompleteHandler:
 25305                           	opt callstack 0
 25306                           
 25307 ;; *************** function _rd2RegCompleteHandler *****************
 25308 ;; Defined at:
 25309 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;  ptr             2   96[BANK1 ] PTR void 
 25312 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25313 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25314 ;; Auto vars:     Size  Location     Type
 25315 ;;		None
 25316 ;; Return value:  Size  Location     Type
 25317 ;;                  1    wreg      enum E358
 25318 ;; Registers used:
 25319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25320 ;; Tracked objects:
 25321 ;;		On entry : 3F/2
 25322 ;;		On exit  : 3F/0
 25323 ;;		Unchanged: 0/0
 25324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25325 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25328 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25329 ;;Total ram usage:        2 bytes
 25330 ;; Hardware stack levels used:    1
 25331 ;; Hardware stack levels required when called:   19
 25332 ;; This function calls:
 25333 ;;		_I2C2_SetBuffer
 25334 ;;		_I2C2_SetDataCompleteCallback
 25335 ;; This function is called by:
 25336 ;;		_I2C2_DO_RX_EMPTY
 25337 ;;		i2_I2C2_DO_RX_EMPTY
 25338 ;;		_I2C2_DO_TX_EMPTY
 25339 ;;		_I2C2_DO_TX
 25340 ;;		_I2C2_DO_ADDRESS_NACK
 25341 ;;		_I2C2_DO_BUS_COLLISION
 25342 ;; This function uses a non-reentrant model
 25343 ;;
 25344                           
 25345                           	psect	text106
 25346  009658                     __ptext106:
 25347                           	opt callstack 0
 25348  009658                     _rd2RegCompleteHandler:
 25349                           	opt callstack 0
 25350                           
 25351                           ; BSR set to: 0
 25352                           ;Skip over the trampoline to the duplicate function for level 2
 25353  009658  BED3               	btfsc	211,7,c
 25354  00965A  EF51  F04D         	goto	i2_rd2RegCompleteHandler
 25355  00965E                     _rd2RegCompleteHandler$intlevel0:
 25356                           	opt callstack 4
 25357                           
 25358                           ; BSR set to: 2
 25359                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 25360                           
 25361                           ;incstack = 0
 25362  00965E  0060  F580  F08B   	movff	rd2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25363  009664  0060  F584  F08C   	movff	rd2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25364  00966A  0E00               	movlw	0
 25365  00966C  0100               	movlb	0	; () banked
 25366  00966E  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25367  009670  0E02               	movlw	2
 25368  009672  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25369  009674  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 25370                           
 25371                           ; BSR set to: 2
 25372                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25373  009678  0E00               	movlw	0
 25374  00967A  0100               	movlb	0	; () banked
 25375  00967C  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25376  00967E  0E00               	movlw	0
 25377  009680  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25378  009682  0E00               	movlw	0
 25379  009684  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25380  009686  0E00               	movlw	0
 25381  009688  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25382  00968A  ECE6  F04F         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25383                           
 25384                           ; BSR set to: 0
 25385                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 25386  00968E  0E02               	movlw	2
 25387                           
 25388                           ; BSR set to: 0
 25389  009690  0012               	return		;funcret
 25390  009692                     __end_of_rd2RegCompleteHandler:
 25391                           	opt callstack 0
 25392                           
 25393 ;; *************** function _rd1RegCompleteHandler *****************
 25394 ;; Defined at:
 25395 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25396 ;; Parameters:    Size  Location     Type
 25397 ;;  ptr             2   96[BANK1 ] PTR void 
 25398 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25399 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25400 ;; Auto vars:     Size  Location     Type
 25401 ;;		None
 25402 ;; Return value:  Size  Location     Type
 25403 ;;                  1    wreg      enum E358
 25404 ;; Registers used:
 25405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25406 ;; Tracked objects:
 25407 ;;		On entry : 3F/2
 25408 ;;		On exit  : 3F/0
 25409 ;;		Unchanged: 0/0
 25410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25411 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25414 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25415 ;;Total ram usage:        2 bytes
 25416 ;; Hardware stack levels used:    1
 25417 ;; Hardware stack levels required when called:   19
 25418 ;; This function calls:
 25419 ;;		_I2C2_SetBuffer
 25420 ;;		_I2C2_SetDataCompleteCallback
 25421 ;; This function is called by:
 25422 ;;		_I2C2_DO_RX_EMPTY
 25423 ;;		i2_I2C2_DO_RX_EMPTY
 25424 ;;		_I2C2_DO_TX_EMPTY
 25425 ;;		_I2C2_DO_TX
 25426 ;;		_I2C2_DO_ADDRESS_NACK
 25427 ;;		_I2C2_DO_BUS_COLLISION
 25428 ;; This function uses a non-reentrant model
 25429 ;;
 25430                           
 25431                           	psect	text107
 25432  009692                     __ptext107:
 25433                           	opt callstack 0
 25434  009692                     _rd1RegCompleteHandler:
 25435                           	opt callstack 0
 25436                           
 25437                           ; BSR set to: 0
 25438                           ;Skip over the trampoline to the duplicate function for level 2
 25439  009692  BED3               	btfsc	211,7,c
 25440  009694  EF69  F04D         	goto	i2_rd1RegCompleteHandler
 25441  009698                     _rd1RegCompleteHandler$intlevel0:
 25442                           	opt callstack 4
 25443                           
 25444                           ; BSR set to: 2
 25445                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 25446                           
 25447                           ;incstack = 0
 25448  009698  0060  F580  F08B   	movff	rd1RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25449  00969E  0060  F584  F08C   	movff	rd1RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25450  0096A4  0E00               	movlw	0
 25451  0096A6  0100               	movlb	0	; () banked
 25452  0096A8  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25453  0096AA  0E01               	movlw	1
 25454  0096AC  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25455  0096AE  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 25456                           
 25457                           ; BSR set to: 2
 25458                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25459  0096B2  0E00               	movlw	0
 25460  0096B4  0100               	movlb	0	; () banked
 25461  0096B6  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25462  0096B8  0E00               	movlw	0
 25463  0096BA  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25464  0096BC  0E00               	movlw	0
 25465  0096BE  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25466  0096C0  0E00               	movlw	0
 25467  0096C2  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25468  0096C4  ECE6  F04F         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 25472  0096C8  0E02               	movlw	2
 25473                           
 25474                           ; BSR set to: 0
 25475  0096CA  0012               	return		;funcret
 25476  0096CC                     __end_of_rd1RegCompleteHandler:
 25477                           	opt callstack 0
 25478                           
 25479 ;; *************** function _wr2RegCompleteHandler *****************
 25480 ;; Defined at:
 25481 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 25482 ;; Parameters:    Size  Location     Type
 25483 ;;  ptr             2   96[BANK1 ] PTR void 
 25484 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25485 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25486 ;; Auto vars:     Size  Location     Type
 25487 ;;		None
 25488 ;; Return value:  Size  Location     Type
 25489 ;;                  1    wreg      enum E358
 25490 ;; Registers used:
 25491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25492 ;; Tracked objects:
 25493 ;;		On entry : 3F/2
 25494 ;;		On exit  : 3F/0
 25495 ;;		Unchanged: 0/0
 25496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25497 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25500 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25501 ;;Total ram usage:        2 bytes
 25502 ;; Hardware stack levels used:    1
 25503 ;; Hardware stack levels required when called:   19
 25504 ;; This function calls:
 25505 ;;		_I2C2_SetBuffer
 25506 ;;		_I2C2_SetDataCompleteCallback
 25507 ;; This function is called by:
 25508 ;;		_I2C2_DO_RX_EMPTY
 25509 ;;		i2_I2C2_DO_RX_EMPTY
 25510 ;;		_I2C2_DO_TX_EMPTY
 25511 ;;		_I2C2_DO_TX
 25512 ;;		_I2C2_DO_ADDRESS_NACK
 25513 ;;		_I2C2_DO_BUS_COLLISION
 25514 ;; This function uses a non-reentrant model
 25515 ;;
 25516                           
 25517                           	psect	text108
 25518  0096CC                     __ptext108:
 25519                           	opt callstack 0
 25520  0096CC                     _wr2RegCompleteHandler:
 25521                           	opt callstack 0
 25522                           
 25523                           ; BSR set to: 0
 25524                           ;Skip over the trampoline to the duplicate function for level 2
 25525  0096CC  BED3               	btfsc	211,7,c
 25526  0096CE  EF81  F04D         	goto	i2_wr2RegCompleteHandler
 25527  0096D2                     _wr2RegCompleteHandler$intlevel0:
 25528                           	opt callstack 4
 25529                           
 25530                           ; BSR set to: 2
 25531                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 25532                           
 25533                           ;incstack = 0
 25534  0096D2  0060  F580  F08B   	movff	wr2RegCompleteHandler@ptr,I2C2_SetBuffer@buffer
 25535  0096D8  0060  F584  F08C   	movff	wr2RegCompleteHandler@ptr+1,I2C2_SetBuffer@buffer+1
 25536  0096DE  0E00               	movlw	0
 25537  0096E0  0100               	movlb	0	; () banked
 25538  0096E2  6F8E               	movwf	(I2C2_SetBuffer@bufferSize+1)& (0+255),b
 25539  0096E4  0E02               	movlw	2
 25540  0096E6  6F8D               	movwf	I2C2_SetBuffer@bufferSize& (0+255),b
 25541  0096E8  EC5F  F04F         	call	_I2C2_SetBuffer	;wreg free
 25542                           
 25543                           ; BSR set to: 2
 25544                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 25545  0096EC  0E00               	movlw	0
 25546  0096EE  0100               	movlb	0	; () banked
 25547  0096F0  6F90               	movwf	I2C2_SetDataCompleteCallback@cb& (0+255),b
 25548  0096F2  0E00               	movlw	0
 25549  0096F4  6F91               	movwf	(I2C2_SetDataCompleteCallback@cb+1)& (0+255),b
 25550  0096F6  0E00               	movlw	0
 25551  0096F8  6F92               	movwf	I2C2_SetDataCompleteCallback@ptr& (0+255),b
 25552  0096FA  0E00               	movlw	0
 25553  0096FC  6F93               	movwf	(I2C2_SetDataCompleteCallback@ptr+1)& (0+255),b
 25554  0096FE  ECE6  F04F         	call	_I2C2_SetDataCompleteCallback	;wreg free
 25555                           
 25556                           ; BSR set to: 0
 25557                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 25558  009702  0E04               	movlw	4
 25559                           
 25560                           ; BSR set to: 0
 25561  009704  0012               	return		;funcret
 25562  009706                     __end_of_wr2RegCompleteHandler:
 25563                           	opt callstack 0
 25564                           
 25565 ;; *************** function _I2C2_SetDataCompleteCallback *****************
 25566 ;; Defined at:
 25567 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 25568 ;; Parameters:    Size  Location     Type
 25569 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 25570 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 25571 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 25572 ;;  ptr             2   50[BANK0 ] PTR void 
 25573 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 25574 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 25575 ;; Auto vars:     Size  Location     Type
 25576 ;;		None
 25577 ;; Return value:  Size  Location     Type
 25578 ;;                  1    wreg      void 
 25579 ;; Registers used:
 25580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25581 ;; Tracked objects:
 25582 ;;		On entry : 3F/0
 25583 ;;		On exit  : 3F/0
 25584 ;;		Unchanged: 0/0
 25585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25590 ;;Total ram usage:        4 bytes
 25591 ;; Hardware stack levels used:    1
 25592 ;; Hardware stack levels required when called:   18
 25593 ;; This function calls:
 25594 ;;		_I2C2_SetCallback
 25595 ;; This function is called by:
 25596 ;;		_rd1RegCompleteHandler
 25597 ;;		_rd2RegCompleteHandler
 25598 ;;		_wr1RegCompleteHandler
 25599 ;;		_wr2RegCompleteHandler
 25600 ;;		_rdBlkRegCompleteHandler
 25601 ;; This function uses a non-reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text109
 25605  009FCC                     __ptext109:
 25606                           	opt callstack 0
 25607  009FCC                     _I2C2_SetDataCompleteCallback:
 25608                           	opt callstack 4
 25609                           
 25610                           ; BSR set to: 0
 25611                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;incstack = 0
 25615  009FCC  0060  F240  F08B   	movff	I2C2_SetDataCompleteCallback@cb,I2C2_SetCallback@cb
 25616  009FD2  0060  F244  F08C   	movff	I2C2_SetDataCompleteCallback@cb+1,I2C2_SetCallback@cb+1
 25617  009FD8  0060  F248  F08D   	movff	I2C2_SetDataCompleteCallback@ptr,I2C2_SetCallback@ptr
 25618  009FDE  0060  F24C  F08E   	movff	I2C2_SetDataCompleteCallback@ptr+1,I2C2_SetCallback@ptr+1
 25619  009FE4  0E00               	movlw	0
 25620  009FE6  ECFE  F043         	call	_I2C2_SetCallback
 25621                           
 25622                           ; BSR set to: 0
 25623  009FEA  0012               	return		;funcret
 25624  009FEC                     __end_of_I2C2_SetDataCompleteCallback:
 25625                           	opt callstack 0
 25626                           
 25627 ;; *************** function _I2C2_SetBuffer *****************
 25628 ;; Defined at:
 25629 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;  buffer          2   43[BANK0 ] PTR void 
 25632 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 25633 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 25634 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 25635 ;;  bufferSize      2   45[BANK0 ] unsigned int 
 25636 ;; Auto vars:     Size  Location     Type
 25637 ;;		None
 25638 ;; Return value:  Size  Location     Type
 25639 ;;                  1    wreg      void 
 25640 ;; Registers used:
 25641 ;;		wreg, status,2, status,0
 25642 ;; Tracked objects:
 25643 ;;		On entry : 3E/0
 25644 ;;		On exit  : 3F/2
 25645 ;;		Unchanged: 0/0
 25646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25651 ;;Total ram usage:        4 bytes
 25652 ;; Hardware stack levels used:    1
 25653 ;; Hardware stack levels required when called:   17
 25654 ;; This function calls:
 25655 ;;		Nothing
 25656 ;; This function is called by:
 25657 ;;		_rd1RegCompleteHandler
 25658 ;;		_rd2RegCompleteHandler
 25659 ;;		_wr1RegCompleteHandler
 25660 ;;		_wr2RegCompleteHandler
 25661 ;;		_rdBlkRegCompleteHandler
 25662 ;;		_MonitorMsgForcedSend
 25663 ;; This function uses a non-reentrant model
 25664 ;;
 25665                           
 25666                           	psect	text110
 25667  009EBE                     __ptext110:
 25668                           	opt callstack 0
 25669  009EBE                     _I2C2_SetBuffer:
 25670                           	opt callstack 9
 25671                           
 25672                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 25673                           
 25674                           ; BSR set to: 0
 25675                           ;incstack = 0
 25676  009EBE  0102               	movlb	2	; () banked
 25677  009EC0  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 25678  009EC2  0012               	return	
 25679                           
 25680                           ; BSR set to: 2
 25681                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 25682  009EC4  0060  F22C  F21D   	movff	I2C2_SetBuffer@buffer,_I2C2_Status+29
 25683  009ECA  0060  F230  F21E   	movff	I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 25684                           
 25685                           ; BSR set to: 2
 25686                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 25687  009ED0  0060  F234  F21F   	movff	I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 25688  009ED6  0060  F238  F220   	movff	I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 25689                           
 25690                           ; BSR set to: 2
 25691                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 25692  009EDC  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 25693                           
 25694                           ; BSR set to: 2
 25695  009EDE  0012               	return		;funcret
 25696  009EE0                     __end_of_I2C2_SetBuffer:
 25697                           	opt callstack 0
 25698                           
 25699 ;; *************** function _printf *****************
 25700 ;; Defined at:
 25701 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25702 ;; Parameters:    Size  Location     Type
 25703 ;;  fmt             2   70[BANK1 ] PTR const unsigned char 
 25704 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 25705 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 25706 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 25707 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 25708 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 25709 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 25710 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(49), 
 25711 ;;		 -> STR_26(20), STR_25(36), STR_24(27), STR_23(20), 
 25712 ;;		 -> STR_22(28), STR_21(5), STR_19(16), STR_18(14), 
 25713 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 25714 ;;		 -> STR_13(47), STR_12(7), STR_11(7), STR_10(55), 
 25715 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 25716 ;; Auto vars:     Size  Location     Type
 25717 ;;  ap              2   94[BANK1 ] PTR void [1]
 25718 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25719 ;;  ret             2    0        int 
 25720 ;; Return value:  Size  Location     Type
 25721 ;;                  2   70[BANK1 ] int 
 25722 ;; Registers used:
 25723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25724 ;; Tracked objects:
 25725 ;;		On entry : 3E/0
 25726 ;;		On exit  : 3F/2
 25727 ;;		Unchanged: 0/0
 25728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25729 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25730 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25732 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25733 ;;Total ram usage:       26 bytes
 25734 ;; Hardware stack levels used:    1
 25735 ;; Hardware stack levels required when called:   25
 25736 ;; This function calls:
 25737 ;;		_vfprintf
 25738 ;; This function is called by:
 25739 ;;		_inspOSMeasure
 25740 ;;		_CtrlPowerOff
 25741 ;;		_main
 25742 ;;		_adcGetCh
 25743 ;;		_aCaptureOffSet
 25744 ;;		_aCaptureOffGet
 25745 ;;		_aCaptRstFlt
 25746 ;;		_aCaptGetResult
 25747 ;;		_MenuMng
 25748 ;;		_I2C2_NackCb
 25749 ;;		_pressureSensorChk
 25750 ;;		_flowChk
 25751 ;;		_SelfTest
 25752 ;; This function uses a non-reentrant model
 25753 ;;
 25754                           
 25755                           	psect	text111
 25756  009CD0                     __ptext111:
 25757                           	opt callstack 0
 25758  009CD0                     _printf:
 25759                           	opt callstack 5
 25760                           
 25761                           ; BSR set to: 2
 25762                           ;incstack = 0
 25763  009CD0  0E48               	movlw	low (?_printf+2)
 25764  009CD2  0101               	movlb	1	; () banked
 25765  009CD4  6F5E               	movwf	printf@ap& (0+255),b
 25766  009CD6  0E01               	movlw	high (?_printf+2)
 25767  009CD8  6F5F               	movwf	(printf@ap+1)& (0+255),b
 25768                           
 25769                           ; BSR set to: 1
 25770  009CDA  0E00               	movlw	0
 25771  009CDC  6F40               	movwf	vfprintf@fp& (0+255),b
 25772  009CDE  0E00               	movlw	0
 25773  009CE0  6F41               	movwf	(vfprintf@fp+1)& (0+255),b
 25774  009CE2  0060  F518  F142   	movff	printf@fmt,vfprintf@fmt
 25775  009CE8  0060  F51C  F143   	movff	printf@fmt+1,vfprintf@fmt+1
 25776  009CEE  0E5E               	movlw	low printf@ap
 25777  009CF0  6F44               	movwf	vfprintf@ap& (0+255),b
 25778  009CF2  0E01               	movlw	high printf@ap
 25779  009CF4  6F45               	movwf	(vfprintf@ap+1)& (0+255),b
 25780  009CF6  ECE4  F044         	call	_vfprintf	;wreg free
 25781                           
 25782                           ; BSR set to: 2
 25783  009CFA  0012               	return		;funcret
 25784  009CFC                     __end_of_printf:
 25785                           	opt callstack 0
 25786                           
 25787 ;; *************** function _vfprintf *****************
 25788 ;; Defined at:
 25789 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25790 ;; Parameters:    Size  Location     Type
 25791 ;;  fp              2   64[BANK1 ] PTR struct _IO_FILE
 25792 ;;		 -> sprintf@f(6), NULL(0), 
 25793 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 25794 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 25795 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 25796 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 25797 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 25798 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 25799 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 25800 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 25801 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 25802 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 25803 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 25804 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 25805 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 25806 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 25807 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 25808 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 25809 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 25810 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 25811 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 25812 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 25813 ;;		 -> STR_1(27), 
 25814 ;;  ap              2   68[BANK1 ] PTR PTR void 
 25815 ;;		 -> printf@ap(2), sprintf@ap(2), 
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
 25818 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 25819 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 25820 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 25821 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 25822 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 25823 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 25824 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 25825 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 25826 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 25827 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 25828 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 25829 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 25830 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 25831 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 25832 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 25833 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 25834 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 25835 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 25836 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 25837 ;;		 -> STR_1(27), 
 25838 ;; Return value:  Size  Location     Type
 25839 ;;                  2   64[BANK1 ] int 
 25840 ;; Registers used:
 25841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25842 ;; Tracked objects:
 25843 ;;		On entry : 3F/1
 25844 ;;		On exit  : 3F/2
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25847 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25850 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25851 ;;Total ram usage:        8 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:   24
 25854 ;; This function calls:
 25855 ;;		_vfpfcnvrt
 25856 ;; This function is called by:
 25857 ;;		_sprintf
 25858 ;;		_printf
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           
 25862                           	psect	text112
 25863  0089C8                     __ptext112:
 25864                           	opt callstack 0
 25865  0089C8                     _vfprintf:
 25866                           	opt callstack 5
 25867                           
 25868                           ; BSR set to: 1
 25869                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 25870                           
 25871                           ; BSR set to: 2
 25872                           ;incstack = 0
 25873  0089C8  0060  F508  F0AD   	movff	vfprintf@fmt,vfprintf@cfmt
 25874  0089CE  0060  F50C  F0AE   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 25875                           
 25876                           ; BSR set to: 1
 25877                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25878  0089D4  0E00               	movlw	0
 25879  0089D6  0102               	movlb	2	; () banked
 25880  0089D8  6F33               	movwf	(_nout+1)& (0+255),b
 25881  0089DA  0E00               	movlw	0
 25882  0089DC  6F32               	movwf	_nout& (0+255),b
 25883                           
 25884                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 25885  0089DE  D018               	goto	l16852
 25886  0089E0                     l16850:
 25887                           
 25888                           ; BSR set to: 2
 25889                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 25890  0089E0  0060  F500  F0A8   	movff	vfprintf@fp,vfpfcnvrt@fp
 25891  0089E6  0060  F504  F0A9   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 25892  0089EC  0EAD               	movlw	low vfprintf@cfmt
 25893  0089EE  0100               	movlb	0	; () banked
 25894  0089F0  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
 25895  0089F2  0060  F510  F0AB   	movff	vfprintf@ap,vfpfcnvrt@ap
 25896  0089F8  0060  F514  F0AC   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 25897  0089FE  EC36  F022         	call	_vfpfcnvrt	;wreg free
 25898  008A02  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
 25899  008A04  0102               	movlb	2	; () banked
 25900  008A06  2732               	addwf	_nout& (0+255),f,b
 25901  008A08  0100               	movlb	0	; () banked
 25902  008A0A  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 25903  008A0C  0102               	movlb	2	; () banked
 25904  008A0E  2333               	addwfc	(_nout+1)& (0+255),f,b
 25905  008A10                     l16852:
 25906                           
 25907                           ; BSR set to: 2
 25908                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 25909  008A10  0060  F2B7  FFF6   	movff	vfprintf@cfmt,tblptrl
 25910  008A16  0060  F2BB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 25911  008A1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25912  008A1C  6AF8               	clrf	tblptru,c
 25913  008A1E                     	endif
 25914  008A1E                     	if	0	;tblptru may be non-zero
 25915  008A1E                     	endif
 25916  008A1E  0008               	tblrd		*
 25917  008A20  50F5               	movf	tablat,w,c
 25918  008A22  0900               	iorlw	0
 25919  008A24  A4D8               	btfss	status,2,c
 25920  008A26  D7DC               	goto	l16850
 25921                           
 25922                           ; BSR set to: 2
 25923                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 25924  008A28  0060  F8C8  F140   	movff	_nout,?_vfprintf
 25925  008A2E  0060  F8CC  F141   	movff	_nout+1,?_vfprintf+1
 25926                           
 25927                           ; BSR set to: 2
 25928  008A34  0012               	return		;funcret
 25929  008A36                     __end_of_vfprintf:
 25930                           	opt callstack 0
 25931                           
 25932 ;; *************** function _vfpfcnvrt *****************
 25933 ;; Defined at:
 25934 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25935 ;; Parameters:    Size  Location     Type
 25936 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
 25937 ;;		 -> sprintf@f(6), NULL(0), 
 25938 ;;  fmt             1   74[BANK0 ] PTR PTR unsigned char 
 25939 ;;		 -> vfprintf@cfmt(2), 
 25940 ;;  ap              2   75[BANK0 ] PTR PTR void 
 25941 ;;		 -> printf@ap(2), sprintf@ap(2), 
 25942 ;; Auto vars:     Size  Location     Type
 25943 ;;  llu             8   51[BANK1 ] unsigned long long 
 25944 ;;  ll              8   43[BANK1 ] long long 
 25945 ;;  f               4    0        long long 
 25946 ;;  vp              3    0        PTR void 
 25947 ;;  ct              3    0        unsigned char [3]
 25948 ;;  cp              3    0        PTR unsigned char 
 25949 ;;  done            2   60[BANK1 ] int 
 25950 ;;  i               2    0        int 
 25951 ;;  c               1   59[BANK1 ] unsigned char 
 25952 ;; Return value:  Size  Location     Type
 25953 ;;                  2   72[BANK0 ] int 
 25954 ;; Registers used:
 25955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25956 ;; Tracked objects:
 25957 ;;		On entry : 3F/0
 25958 ;;		On exit  : 3F/0
 25959 ;;		Unchanged: 0/0
 25960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25961 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25962 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25963 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25964 ;;      Totals:         0       5      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25965 ;;Total ram usage:       30 bytes
 25966 ;; Hardware stack levels used:    1
 25967 ;; Hardware stack levels required when called:   23
 25968 ;; This function calls:
 25969 ;;		_atoi
 25970 ;;		_dtoa
 25971 ;;		_fputc
 25972 ;;		_isdigit
 25973 ;;		_xtoa
 25974 ;; This function is called by:
 25975 ;;		_vfprintf
 25976 ;; This function uses a non-reentrant model
 25977 ;;
 25978                           
 25979                           	psect	text113
 25980  00446C                     __ptext113:
 25981                           	opt callstack 0
 25982  00446C                     _vfpfcnvrt:
 25983                           	opt callstack 5
 25984                           
 25985                           ; BSR set to: 0
 25986                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 25987                           
 25988                           ; BSR set to: 2
 25989                           ;incstack = 0
 25990  00446C  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 25991  00446E  6ED9               	movwf	fsr2l,c
 25992  004470  6ADA               	clrf	fsr2h,c
 25993  004472  006F FF7B FFF6     	movff	postinc2,tblptrl
 25994  004478  006F FF77 FFF7     	movff	postdec2,tblptrh
 25995  00447E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25996  00447E  6AF8               	clrf	tblptru,c
 25997  004480                     	endif
 25998  004480                     	if	0	;tblptru may be non-zero
 25999  004480                     	endif
 26000  004480  0008               	tblrd		*
 26001  004482  50F5               	movf	tablat,w,c
 26002  004484  0A25               	xorlw	37
 26003  004486  A4D8               	btfss	status,2,c
 26004  004488  D1FF               	goto	l16656
 26005                           
 26006                           ; BSR set to: 0
 26007                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26008  00448A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26009  00448C  6ED9               	movwf	fsr2l,c
 26010  00448E  6ADA               	clrf	fsr2h,c
 26011  004490  2ADE               	incf	postinc2,f,c
 26012  004492  0E00               	movlw	0
 26013  004494  22DD               	addwfc	postdec2,f,c
 26014                           
 26015                           ; BSR set to: 0
 26016                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 26017  004496  0E00               	movlw	0
 26018  004498  6FB3               	movwf	(_width+1)& (0+255),b
 26019  00449A  0E00               	movlw	0
 26020  00449C  6FB2               	movwf	_width& (0+255),b
 26021  00449E  C0B2  F0B6         	movff	_width,_flags
 26022  0044A2  C0B3  F0B7         	movff	_width+1,_flags+1
 26023                           
 26024                           ; BSR set to: 0
 26025                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 26026  0044A6  69B4               	setf	_prec& (0+255),b
 26027  0044A8  69B5               	setf	(_prec+1)& (0+255),b
 26028                           
 26029                           ; BSR set to: 0
 26030                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 26031  0044AA  0E00               	movlw	0
 26032  0044AC  0101               	movlb	1	; () banked
 26033  0044AE  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26034  0044B0  0E00               	movlw	0
 26035  0044B2  D018               	goto	L47
 26036  0044B4                     l16568:
 26037                           
 26038                           ; BSR set to: 1
 26039                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 26040  0044B4  0100               	movlb	0	; () banked
 26041  0044B6  81B6               	bsf	_flags& (0+255),0,b
 26042  0044B8                     l16570:
 26043                           
 26044                           ; BSR set to: 0
 26045                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
 26046  0044B8  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26047  0044BA  6ED9               	movwf	fsr2l,c
 26048  0044BC  6ADA               	clrf	fsr2h,c
 26049  0044BE  2ADE               	incf	postinc2,f,c
 26050  0044C0  0E00               	movlw	0
 26051  0044C2  22DD               	addwfc	postdec2,f,c
 26052                           
 26053                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
 26054  0044C4  D036               	goto	l16594
 26055  0044C6                     l16572:
 26056                           
 26057                           ; BSR set to: 1
 26058                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 26059  0044C6  0100               	movlb	0	; () banked
 26060  0044C8  83B6               	bsf	_flags& (0+255),1,b
 26061  0044CA  D7F6               	goto	l16570
 26062  0044CC                     l16576:
 26063                           
 26064                           ; BSR set to: 1
 26065                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 26066  0044CC  0100               	movlb	0	; () banked
 26067  0044CE  85B6               	bsf	_flags& (0+255),2,b
 26068  0044D0  D7F3               	goto	l16570
 26069  0044D2                     l16580:
 26070                           
 26071                           ; BSR set to: 1
 26072                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 26073  0044D2  0100               	movlb	0	; () banked
 26074  0044D4  87B6               	bsf	_flags& (0+255),3,b
 26075  0044D6  D7F0               	goto	l16570
 26076  0044D8                     l16584:
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 26080  0044D8  0100               	movlb	0	; () banked
 26081  0044DA  89B6               	bsf	_flags& (0+255),4,b
 26082  0044DC  D7ED               	goto	l16570
 26083  0044DE                     l16588:
 26084                           
 26085                           ; BSR set to: 1
 26086                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 26087  0044DE  0E00               	movlw	0
 26088  0044E0  6F3D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 26089  0044E2  0E01               	movlw	1
 26090  0044E4                     L47:
 26091  0044E4  6F3C               	movwf	vfpfcnvrt@done& (0+255),b
 26092                           
 26093                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 26094  0044E6  D025               	goto	l16594
 26095  0044E8                     l16592:
 26096                           
 26097                           ; BSR set to: 1
 26098  0044E8  0100               	movlb	0	; () banked
 26099  0044EA  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26100  0044EC  6ED9               	movwf	fsr2l,c
 26101  0044EE  6ADA               	clrf	fsr2h,c
 26102  0044F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26103  0044F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26104  0044FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26105  0044FC  6AF8               	clrf	tblptru,c
 26106  0044FE                     	endif
 26107  0044FE                     	if	0	;tblptru may be non-zero
 26108  0044FE                     	endif
 26109  0044FE  0008               	tblrd		*
 26110  004500  50F5               	movf	tablat,w,c
 26111  004502  0101               	movlb	1	; () banked
 26112  004504  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26113  004506  6B28               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 26114                           
 26115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26116                           ; Switch size 1, requested type "simple"
 26117                           ; Number of cases is 1, Range of values is 0 to 0
 26118                           ; switch strategies available:
 26119                           ; Name         Instructions Cycles
 26120                           ; simple_byte            4     3 (average)
 26121                           ;	Chosen strategy is simple_byte
 26122  004508  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26123  00450A  0A00               	xorlw	0	; case 0
 26124  00450C  A4D8               	btfss	status,2,c
 26125  00450E  D7E7               	goto	l16588
 26126                           
 26127                           ; BSR set to: 1
 26128                           ; Switch size 1, requested type "simple"
 26129                           ; Number of cases is 5, Range of values is 32 to 48
 26130                           ; switch strategies available:
 26131                           ; Name         Instructions Cycles
 26132                           ; simple_byte           16     9 (average)
 26133                           ;	Chosen strategy is simple_byte
 26134  004510  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26135  004512  0A20               	xorlw	32	; case 32
 26136  004514  B4D8               	btfsc	status,2,c
 26137  004516  D7DD               	goto	l16580
 26138  004518  0A03               	xorlw	3	; case 35
 26139  00451A  B4D8               	btfsc	status,2,c
 26140  00451C  D7DD               	goto	l16584
 26141  00451E  0A08               	xorlw	8	; case 43
 26142  004520  B4D8               	btfsc	status,2,c
 26143  004522  D7D4               	goto	l16576
 26144  004524  0A06               	xorlw	6	; case 45
 26145  004526  B4D8               	btfsc	status,2,c
 26146  004528  D7C5               	goto	l16568
 26147  00452A  0A1D               	xorlw	29	; case 48
 26148  00452C  B4D8               	btfsc	status,2,c
 26149  00452E  D7CB               	goto	l16572
 26150  004530  D7D6               	goto	l16588
 26151  004532                     l16594:
 26152                           
 26153                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 26154  004532  0101               	movlb	1	; () banked
 26155  004534  513C               	movf	vfpfcnvrt@done& (0+255),w,b
 26156  004536  113D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 26157  004538  B4D8               	btfsc	status,2,c
 26158  00453A  D7D6               	goto	l16592
 26159                           
 26160                           ; BSR set to: 1
 26161                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 26162  00453C  0100               	movlb	0	; () banked
 26163  00453E  B1B6               	btfsc	_flags& (0+255),0,b
 26164                           
 26165                           ; BSR set to: 0
 26166                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 26167  004540  93B6               	bcf	_flags& (0+255),1,b
 26168                           
 26169                           ; BSR set to: 0
 26170                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 26171  004542  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26172  004544  6ED9               	movwf	fsr2l,c
 26173  004546  6ADA               	clrf	fsr2h,c
 26174  004548  006F FF7B FFF6     	movff	postinc2,tblptrl
 26175  00454E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26176  004554                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26177  004554  6AF8               	clrf	tblptru,c
 26178  004556                     	endif
 26179  004556                     	if	0	;tblptru may be non-zero
 26180  004556                     	endif
 26181  004556  0008               	tblrd		*
 26182  004558  50F5               	movf	tablat,w,c
 26183  00455A  0A2A               	xorlw	42
 26184  00455C  A4D8               	btfss	status,2,c
 26185  00455E  D02A               	goto	l16606
 26186                           
 26187                           ; BSR set to: 0
 26188                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 26189  004560  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26190  004562  6ED9               	movwf	fsr2l,c
 26191  004564  6ADA               	clrf	fsr2h,c
 26192  004566  2ADE               	incf	postinc2,f,c
 26193  004568  0E00               	movlw	0
 26194  00456A  22DD               	addwfc	postdec2,f,c
 26195                           
 26196                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 26197  00456C  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26198  004572  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26199  004578  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26200  00457E  0E02               	movlw	2
 26201  004580  26DE               	addwf	postinc2,f,c
 26202  004582  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26203  004588  0E00               	movlw	0
 26204  00458A  22DD               	addwfc	postdec2,f,c
 26205  00458C  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26206  004592  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26207  004598  006F FF78  F0B2    	movff	postinc2,_width
 26208  00459E  006F FF74  F0B3    	movff	postdec2,_width+1
 26209                           
 26210                           ; BSR set to: 0
 26211                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 26212  0045A4  AFB3               	btfss	(_width+1)& (0+255),7,b
 26213  0045A6  D047               	goto	u16830
 26214                           
 26215                           ; BSR set to: 0
 26216                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 26217  0045A8  81B6               	bsf	_flags& (0+255),0,b
 26218                           
 26219                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 26220  0045AA  6DB2               	negf	_width& (0+255),b
 26221  0045AC  1FB3               	comf	(_width+1)& (0+255),f,b
 26222  0045AE  B0D8               	btfsc	status,0,c
 26223  0045B0  2BB3               	incf	(_width+1)& (0+255),f,b
 26224  0045B2  D041               	goto	u16830
 26225  0045B4                     l16606:
 26226                           
 26227                           ; BSR set to: 0
 26228                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 26229  0045B4  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26230  0045B6  6ED9               	movwf	fsr2l,c
 26231  0045B8  6ADA               	clrf	fsr2h,c
 26232  0045BA  006F FF78  F0A1    	movff	postinc2,atoi@s
 26233  0045C0  006F FF74  F0A2    	movff	postdec2,atoi@s+1
 26234  0045C6  EC1C  F036         	call	_atoi	;wreg free
 26235  0045CA  0060  F284  F0B2   	movff	?_atoi,_width
 26236  0045D0  0060  F288  F0B3   	movff	?_atoi+1,_width+1
 26237                           
 26238                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26239  0045D6  D007               	goto	l16610
 26240  0045D8                     l16608:
 26241                           
 26242                           ; BSR set to: 1
 26243                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 26244  0045D8  0100               	movlb	0	; () banked
 26245  0045DA  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26246  0045DC  6ED9               	movwf	fsr2l,c
 26247  0045DE  6ADA               	clrf	fsr2h,c
 26248  0045E0  2ADE               	incf	postinc2,f,c
 26249  0045E2  0E00               	movlw	0
 26250  0045E4  22DD               	addwfc	postdec2,f,c
 26251  0045E6                     l16610:
 26252  0045E6  0ED0               	movlw	208
 26253  0045E8  0101               	movlb	1	; () banked
 26254  0045EA  6F27               	movwf	??_vfpfcnvrt& (0+255),b
 26255  0045EC  0EFF               	movlw	255
 26256  0045EE  6F28               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 26257  0045F0  0100               	movlb	0	; () banked
 26258  0045F2  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26259  0045F4  6ED9               	movwf	fsr2l,c
 26260  0045F6  6ADA               	clrf	fsr2h,c
 26261  0045F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 26262  0045FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 26263  004604                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26264  004604  6AF8               	clrf	tblptru,c
 26265  004606                     	endif
 26266  004606                     	if	0	;tblptru may be non-zero
 26267  004606                     	endif
 26268  004606  0008               	tblrd		*
 26269  004608  50F5               	movf	tablat,w,c
 26270  00460A  0101               	movlb	1	; () banked
 26271  00460C  6F29               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 26272  00460E  6B2A               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 26273  004610  5127               	movf	??_vfpfcnvrt& (0+255),w,b
 26274  004612  2729               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 26275  004614  5128               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 26276  004616  232A               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 26277  004618  512A               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 26278  00461A  E106               	bnz	u16810
 26279  00461C  0E0A               	movlw	10
 26280  00461E  5D29               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 26281  004620  B0D8               	btfsc	status,0,c
 26282  004622  D002               	goto	u16810
 26283  004624  0E01               	movlw	1
 26284  004626  D001               	goto	u16820
 26285  004628                     u16810:
 26286  004628  0E00               	movlw	0
 26287  00462A                     u16820:
 26288  00462A  6F3E               	movwf	_vfpfcnvrt$4916& (0+255),b
 26289  00462C  6B3F               	clrf	(_vfpfcnvrt$4916+1)& (0+255),b
 26290                           
 26291                           ; BSR set to: 1
 26292  00462E  513E               	movf	_vfpfcnvrt$4916& (0+255),w,b
 26293  004630  113F               	iorwf	(_vfpfcnvrt$4916+1)& (0+255),w,b
 26294  004632  A4D8               	btfss	status,2,c
 26295  004634  D7D1               	goto	l16608
 26296  004636                     u16830:
 26297                           
 26298                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 26299  004636  0100               	movlb	0	; () banked
 26300  004638  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26301  00463A  6ED9               	movwf	fsr2l,c
 26302  00463C  6ADA               	clrf	fsr2h,c
 26303  00463E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26304  004644  006F FF77 FFF7     	movff	postdec2,tblptrh
 26305  00464A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26306  00464A  6AF8               	clrf	tblptru,c
 26307  00464C                     	endif
 26308  00464C                     	if	0	;tblptru may be non-zero
 26309  00464C                     	endif
 26310  00464C  0008               	tblrd		*
 26311  00464E  50F5               	movf	tablat,w,c
 26312  004650  0A64               	xorlw	100
 26313  004652  B4D8               	btfsc	status,2,c
 26314  004654  D00F               	goto	u16850
 26315                           
 26316                           ; BSR set to: 0
 26317  004656  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26318  004658  6ED9               	movwf	fsr2l,c
 26319  00465A  6ADA               	clrf	fsr2h,c
 26320  00465C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26321  004662  006F FF77 FFF7     	movff	postdec2,tblptrh
 26322  004668                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26323  004668  6AF8               	clrf	tblptru,c
 26324  00466A                     	endif
 26325  00466A                     	if	0	;tblptru may be non-zero
 26326  00466A                     	endif
 26327  00466A  0008               	tblrd		*
 26328  00466C  50F5               	movf	tablat,w,c
 26329  00466E  0A69               	xorlw	105
 26330  004670  A4D8               	btfss	status,2,c
 26331  004672  D053               	goto	l16626
 26332  004674                     u16850:
 26333                           
 26334                           ; BSR set to: 0
 26335                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 26336  004674  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26337  004676  6ED9               	movwf	fsr2l,c
 26338  004678  6ADA               	clrf	fsr2h,c
 26339  00467A  2ADE               	incf	postinc2,f,c
 26340  00467C  0E00               	movlw	0
 26341  00467E  22DD               	addwfc	postdec2,f,c
 26342                           
 26343                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 26344  004680  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26345  004686  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26346  00468C  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26347  004692  0E02               	movlw	2
 26348  004694  26DE               	addwf	postinc2,f,c
 26349  004696  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26350  00469C  0E00               	movlw	0
 26351  00469E  22DD               	addwfc	postdec2,f,c
 26352  0046A0  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26353  0046A6  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26354  0046AC  006F FF78  F12B    	movff	postinc2,vfpfcnvrt@ll
 26355  0046B2  006F FF74  F12C    	movff	postdec2,vfpfcnvrt@ll+1
 26356  0046B8  0101               	movlb	1	; () banked
 26357  0046BA  0E00               	movlw	0
 26358  0046BC  BF2C               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 26359  0046BE  0EFF               	movlw	-1
 26360  0046C0  6F2D               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 26361  0046C2  6F2E               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 26362  0046C4  6F2F               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 26363  0046C6  6F30               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 26364  0046C8  6F31               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 26365  0046CA  6F32               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 26366                           
 26367                           ; BSR set to: 1
 26368                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 26369  0046CC  0060  F2A0  F100   	movff	vfpfcnvrt@fp,dtoa@fp
 26370  0046D2  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 26371  0046D8  0060  F4AC  F102   	movff	vfpfcnvrt@ll,dtoa@d
 26372  0046DE  0060  F4B0  F103   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 26373  0046E4  0060  F4B4  F104   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 26374  0046EA  0060  F4B8  F105   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 26375  0046F0  0060  F4BC  F106   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 26376  0046F6  0060  F4C0  F107   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 26377  0046FC  0060  F4C4  F108   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 26378  004702  0060  F4C8  F109   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 26379  004708  EC75  F02D         	call	_dtoa	;wreg free
 26380  00470C  0060  F400  F0A8   	movff	?_dtoa,?_vfpfcnvrt
 26381  004712  0060  F404  F0A9   	movff	?_dtoa+1,?_vfpfcnvrt+1
 26382  004718  0012               	return	
 26383  00471A                     l16626:
 26384                           
 26385                           ; BSR set to: 0
 26386                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 26387  00471A  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26388  00471C  6ED9               	movwf	fsr2l,c
 26389  00471E  6ADA               	clrf	fsr2h,c
 26390  004720  006F FF7B FFF6     	movff	postinc2,tblptrl
 26391  004726  006F FF77 FFF7     	movff	postdec2,tblptrh
 26392  00472C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26393  00472C  6AF8               	clrf	tblptru,c
 26394  00472E                     	endif
 26395  00472E                     	if	0	;tblptru may be non-zero
 26396  00472E                     	endif
 26397  00472E  0008               	tblrd		*
 26398  004730  50F5               	movf	tablat,w,c
 26399  004732  0A78               	xorlw	120
 26400  004734  B4D8               	btfsc	status,2,c
 26401  004736  D00F               	goto	u16870
 26402                           
 26403                           ; BSR set to: 0
 26404  004738  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26405  00473A  6ED9               	movwf	fsr2l,c
 26406  00473C  6ADA               	clrf	fsr2h,c
 26407  00473E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26408  004744  006F FF77 FFF7     	movff	postdec2,tblptrh
 26409  00474A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26410  00474A  6AF8               	clrf	tblptru,c
 26411  00474C                     	endif
 26412  00474C                     	if	0	;tblptru may be non-zero
 26413  00474C                     	endif
 26414  00474C  0008               	tblrd		*
 26415  00474E  50F5               	movf	tablat,w,c
 26416  004750  0A58               	xorlw	88
 26417  004752  A4D8               	btfss	status,2,c
 26418  004754  D067               	goto	l16640
 26419  004756                     u16870:
 26420                           
 26421                           ; BSR set to: 0
 26422                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 26423  004756  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26424  004758  6ED9               	movwf	fsr2l,c
 26425  00475A  6ADA               	clrf	fsr2h,c
 26426  00475C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26427  004762  006F FF77 FFF7     	movff	postdec2,tblptrh
 26428  004768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26429  004768  6AF8               	clrf	tblptru,c
 26430  00476A                     	endif
 26431  00476A                     	if	0	;tblptru may be non-zero
 26432  00476A                     	endif
 26433  00476A  0008               	tblrd		*
 26434  00476C  006F FFD4  F13B    	movff	tablat,vfpfcnvrt@c
 26435                           
 26436                           ; BSR set to: 0
 26437                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 26438  004772  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26439  004774  6ED9               	movwf	fsr2l,c
 26440  004776  6ADA               	clrf	fsr2h,c
 26441  004778  2ADE               	incf	postinc2,f,c
 26442  00477A  0E00               	movlw	0
 26443  00477C  22DD               	addwfc	postdec2,f,c
 26444                           
 26445                           ; BSR set to: 0
 26446                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 26447  00477E  0060  F2AF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 26448  004784  0060  F2B3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 26449  00478A  006F FF7C  F127    	movff	indf2,??_vfpfcnvrt
 26450  004790  0E02               	movlw	2
 26451  004792  26DE               	addwf	postinc2,f,c
 26452  004794  006F FF7C  F128    	movff	indf2,??_vfpfcnvrt+1
 26453  00479A  0E00               	movlw	0
 26454  00479C  22DD               	addwfc	postdec2,f,c
 26455  00479E  0060  F49F  FFD9   	movff	??_vfpfcnvrt,fsr2l
 26456  0047A4  0060  F4A3  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 26457  0047AA  006F FF78  F129    	movff	postinc2,??_vfpfcnvrt+2
 26458  0047B0  006F FF74  F12A    	movff	postdec2,??_vfpfcnvrt+3
 26459  0047B6  0060  F4A4  F133   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 26460  0047BC  0060  F4A8  F134   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 26461  0047C2  0101               	movlb	1	; () banked
 26462  0047C4  6B35               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 26463  0047C6  6B36               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 26464  0047C8  6B37               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 26465  0047CA  6B38               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 26466  0047CC  6B39               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 26467  0047CE  6B3A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 26468                           
 26469                           ; BSR set to: 1
 26470                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 26471  0047D0  0060  F2A0  F100   	movff	vfpfcnvrt@fp,xtoa@fp
 26472  0047D6  0060  F2A4  F101   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 26473  0047DC  0060  F4CC  F102   	movff	vfpfcnvrt@llu,xtoa@d
 26474  0047E2  0060  F4D0  F103   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 26475  0047E8  0060  F4D4  F104   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 26476  0047EE  0060  F4D8  F105   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 26477  0047F4  0060  F4DC  F106   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 26478  0047FA  0060  F4E0  F107   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 26479  004800  0060  F4E4  F108   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 26480  004806  0060  F4E8  F109   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 26481  00480C  0060  F4EC  F10A   	movff	vfpfcnvrt@c,xtoa@x
 26482  004812  EC36  F030         	call	_xtoa	;wreg free
 26483  004816  0060  F400  F0A8   	movff	?_xtoa,?_vfpfcnvrt
 26484  00481C  0060  F404  F0A9   	movff	?_xtoa+1,?_vfpfcnvrt+1
 26485  004822  0012               	return	
 26486  004824                     l16640:
 26487                           
 26488                           ; BSR set to: 0
 26489                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 26490  004824  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26491  004826  6ED9               	movwf	fsr2l,c
 26492  004828  6ADA               	clrf	fsr2h,c
 26493  00482A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26494  004830  006F FF77 FFF7     	movff	postdec2,tblptrh
 26495  004836                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26496  004836  6AF8               	clrf	tblptru,c
 26497  004838                     	endif
 26498  004838                     	if	0	;tblptru may be non-zero
 26499  004838                     	endif
 26500  004838  0008               	tblrd		*
 26501  00483A  50F5               	movf	tablat,w,c
 26502  00483C  0A25               	xorlw	37
 26503  00483E  A4D8               	btfss	status,2,c
 26504  004840  D018               	goto	l16650
 26505                           
 26506                           ; BSR set to: 0
 26507                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 26508  004842  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26509  004844  6ED9               	movwf	fsr2l,c
 26510  004846  6ADA               	clrf	fsr2h,c
 26511  004848  2ADE               	incf	postinc2,f,c
 26512  00484A  0E00               	movlw	0
 26513  00484C  22DD               	addwfc	postdec2,f,c
 26514                           
 26515                           ; BSR set to: 0
 26516                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 26517  00484E  0E00               	movlw	0
 26518  004850  6F8E               	movwf	(fputc@c+1)& (0+255),b
 26519  004852  0E25               	movlw	37
 26520  004854  6F8D               	movwf	fputc@c& (0+255),b
 26521  004856  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 26522  00485C  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 26523  004862  ECFA  F03F         	call	_fputc	;wreg free
 26524  004866                     l16646:
 26525                           
 26526                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 26527  004866  0E00               	movlw	0
 26528  004868  0100               	movlb	0	; () banked
 26529  00486A  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 26530  00486C  0E01               	movlw	1
 26531  00486E  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 26532  004870  0012               	return	
 26533  004872                     l16650:
 26534                           
 26535                           ; BSR set to: 0
 26536                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 26537  004872  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26538  004874  6ED9               	movwf	fsr2l,c
 26539  004876  6ADA               	clrf	fsr2h,c
 26540  004878  2ADE               	incf	postinc2,f,c
 26541  00487A  0E00               	movlw	0
 26542  00487C  22DD               	addwfc	postdec2,f,c
 26543                           
 26544                           ; BSR set to: 0
 26545                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 26546  00487E  0E00               	movlw	0
 26547  004880  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 26548  004882  0E00               	movlw	0
 26549  004884  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
 26550  004886  0012               	return	
 26551  004888                     l16656:
 26552                           
 26553                           ; BSR set to: 0
 26554                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 26555  004888  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26556  00488A  6ED9               	movwf	fsr2l,c
 26557  00488C  6ADA               	clrf	fsr2h,c
 26558  00488E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26559  004894  006F FF77 FFF7     	movff	postdec2,tblptrh
 26560  00489A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26561  00489A  6AF8               	clrf	tblptru,c
 26562  00489C                     	endif
 26563  00489C                     	if	0	;tblptru may be non-zero
 26564  00489C                     	endif
 26565  00489C  0008               	tblrd		*
 26566  00489E  50F5               	movf	tablat,w,c
 26567  0048A0  6F8D               	movwf	fputc@c& (0+255),b
 26568  0048A2  6B8E               	clrf	(fputc@c+1)& (0+255),b
 26569  0048A4  0060  F2A0  F08F   	movff	vfpfcnvrt@fp,fputc@fp
 26570  0048AA  0060  F2A4  F090   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 26571  0048B0  ECFA  F03F         	call	_fputc	;wreg free
 26572                           
 26573                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 26574  0048B4  0100               	movlb	0	; () banked
 26575  0048B6  51AA               	movf	vfpfcnvrt@fmt& (0+255),w,b
 26576  0048B8  6ED9               	movwf	fsr2l,c
 26577  0048BA  6ADA               	clrf	fsr2h,c
 26578  0048BC  2ADE               	incf	postinc2,f,c
 26579  0048BE  0E00               	movlw	0
 26580  0048C0  22DD               	addwfc	postdec2,f,c
 26581  0048C2  D7D1               	goto	l16646
 26582  0048C4                     __end_of_vfpfcnvrt:
 26583                           	opt callstack 0
 26584                           
 26585 ;; *************** function _xtoa *****************
 26586 ;; Defined at:
 26587 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26588 ;; Parameters:    Size  Location     Type
 26589 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 26590 ;;		 -> sprintf@f(6), NULL(0), 
 26591 ;;  d               8    2[BANK1 ] unsigned long long 
 26592 ;;  x               1   10[BANK1 ] unsigned char 
 26593 ;; Auto vars:     Size  Location     Type
 26594 ;;  n               8   27[BANK1 ] unsigned long long 
 26595 ;;  c               2   37[BANK1 ] int 
 26596 ;;  i               2   35[BANK1 ] int 
 26597 ;;  w               2   25[BANK1 ] int 
 26598 ;;  p               2   23[BANK1 ] int 
 26599 ;; Return value:  Size  Location     Type
 26600 ;;                  2    0[BANK1 ] int 
 26601 ;; Registers used:
 26602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26603 ;; Tracked objects:
 26604 ;;		On entry : 3F/1
 26605 ;;		On exit  : 3F/0
 26606 ;;		Unchanged: 0/0
 26607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26608 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26609 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26610 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26611 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26612 ;;Total ram usage:       39 bytes
 26613 ;; Hardware stack levels used:    1
 26614 ;; Hardware stack levels required when called:   22
 26615 ;; This function calls:
 26616 ;;		_isalpha
 26617 ;;		_isupper
 26618 ;;		_pad
 26619 ;;		_toupper
 26620 ;; This function is called by:
 26621 ;;		_vfpfcnvrt
 26622 ;; This function uses a non-reentrant model
 26623 ;;
 26624                           
 26625                           	psect	text114
 26626  00606C                     __ptext114:
 26627                           	opt callstack 0
 26628  00606C                     _xtoa:
 26629                           	opt callstack 5
 26630                           
 26631                           ; BSR set to: 1
 26632                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 26633                           
 26634                           ; BSR set to: 0
 26635                           ;incstack = 0
 26636  00606C  0100               	movlb	0	; () banked
 26637  00606E  AFB5               	btfss	(_prec+1)& (0+255),7,b
 26638                           
 26639                           ; BSR set to: 0
 26640                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 26641  006070  93B6               	bcf	_flags& (0+255),1,b
 26642                           
 26643                           ; BSR set to: 0
 26644                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 26645  006072  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 26646  006074  D005               	goto	u16240
 26647  006076  51B5               	movf	(_prec+1)& (0+255),w,b
 26648  006078  E109               	bnz	l3085
 26649  00607A  05B4               	decf	_prec& (0+255),w,b
 26650  00607C  B0D8               	btfsc	status,0,c
 26651  00607E  D006               	goto	l3085
 26652  006080                     u16240:
 26653                           
 26654                           ; BSR set to: 0
 26655  006080  0E00               	movlw	0
 26656  006082  0101               	movlb	1	; () banked
 26657  006084  6F18               	movwf	(xtoa@p+1)& (0+255),b
 26658  006086  0E01               	movlw	1
 26659  006088  6F17               	movwf	xtoa@p& (0+255),b
 26660  00608A  D006               	goto	l3087
 26661  00608C                     l3085:
 26662                           
 26663                           ; BSR set to: 0
 26664  00608C  0060  F2D0  F117   	movff	_prec,xtoa@p
 26665  006092  0060  F2D4  F118   	movff	_prec+1,xtoa@p+1
 26666  006098                     l3087:
 26667                           
 26668                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 26669  006098  0060  F2C8  F119   	movff	_width,xtoa@w
 26670  00609E  0060  F2CC  F11A   	movff	_width+1,xtoa@w+1
 26671                           
 26672                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 26673  0060A4  0100               	movlb	0	; () banked
 26674  0060A6  A9B6               	btfss	_flags& (0+255),4,b
 26675  0060A8  D005               	goto	l16314
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 26679  0060AA  0101               	movlb	1	; () banked
 26680  0060AC  0EFE               	movlw	254
 26681  0060AE  2719               	addwf	xtoa@w& (0+255),f,b
 26682  0060B0  0EFF               	movlw	255
 26683  0060B2  231A               	addwfc	(xtoa@w+1)& (0+255),f,b
 26684  0060B4                     l16314:
 26685                           
 26686                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 26687  0060B4  0060  F408  F11B   	movff	xtoa@d,xtoa@n
 26688  0060BA  0060  F40C  F11C   	movff	xtoa@d+1,xtoa@n+1
 26689  0060C0  0060  F410  F11D   	movff	xtoa@d+2,xtoa@n+2
 26690  0060C6  0060  F414  F11E   	movff	xtoa@d+3,xtoa@n+3
 26691  0060CC  0060  F418  F11F   	movff	xtoa@d+4,xtoa@n+4
 26692  0060D2  0060  F41C  F120   	movff	xtoa@d+5,xtoa@n+5
 26693  0060D8  0060  F420  F121   	movff	xtoa@d+6,xtoa@n+6
 26694  0060DE  0060  F424  F122   	movff	xtoa@d+7,xtoa@n+7
 26695                           
 26696                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 26697  0060E4  0E00               	movlw	0
 26698  0060E6  0101               	movlb	1	; () banked
 26699  0060E8  6F24               	movwf	(xtoa@i+1)& (0+255),b
 26700  0060EA  0E1F               	movlw	31
 26701  0060EC  6F23               	movwf	xtoa@i& (0+255),b
 26702                           
 26703                           ; BSR set to: 1
 26704                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 26705  0060EE  0E00               	movlw	0
 26706  0060F0  0102               	movlb	2	; () banked
 26707  0060F2  6F72               	movwf	(_dbuf+31)& (0+255),b
 26708                           
 26709                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26710  0060F4  D0AA               	goto	l16350
 26711  0060F6                     l16320:
 26712                           
 26713                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 26714  0060F6  0101               	movlb	1	; () banked
 26715  0060F8  0723               	decf	xtoa@i& (0+255),f,b
 26716  0060FA  A0D8               	btfss	status,0,c
 26717  0060FC  0724               	decf	(xtoa@i+1)& (0+255),f,b
 26718                           
 26719                           ; BSR set to: 1
 26720                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 26721  0060FE  0E0F               	movlw	15
 26722  006100  151B               	andwf	xtoa@n& (0+255),w,b
 26723  006102  6F25               	movwf	xtoa@c& (0+255),b
 26724  006104  6B26               	clrf	(xtoa@c+1)& (0+255),b
 26725                           
 26726                           ; BSR set to: 1
 26727                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 26728  006106  BF26               	btfsc	(xtoa@c+1)& (0+255),7,b
 26729  006108  D008               	goto	l16328
 26730  00610A  5126               	movf	(xtoa@c+1)& (0+255),w,b
 26731  00610C  E104               	bnz	u16260
 26732  00610E  0E0A               	movlw	10
 26733  006110  5D25               	subwf	xtoa@c& (0+255),w,b
 26734  006112  A0D8               	btfss	status,0,c
 26735  006114  D002               	goto	l16328
 26736  006116                     u16260:
 26737                           
 26738                           ; BSR set to: 1
 26739  006116  0E57               	movlw	87
 26740  006118  D001               	goto	L48
 26741  00611A                     l16328:
 26742                           
 26743                           ; BSR set to: 1
 26744  00611A  0E30               	movlw	48
 26745  00611C                     L48:
 26746  00611C  2525               	addwf	xtoa@c& (0+255),w,b
 26747  00611E  6F25               	movwf	xtoa@c& (0+255),b
 26748  006120  0E00               	movlw	0
 26749  006122  2126               	addwfc	(xtoa@c+1)& (0+255),w,b
 26750  006124  6F26               	movwf	(xtoa@c+1)& (0+255),b
 26751                           
 26752                           ; BSR set to: 1
 26753                           
 26754                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 26755  006126  0EBF               	movlw	191
 26756  006128  6F0B               	movwf	??_xtoa& (0+255),b
 26757  00612A  0EFF               	movlw	255
 26758  00612C  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 26759  00612E  510A               	movf	xtoa@x& (0+255),w,b
 26760  006130  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 26761  006132  6B0E               	clrf	(??_xtoa+3)& (0+255),b
 26762  006134  510B               	movf	??_xtoa& (0+255),w,b
 26763  006136  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 26764  006138  510C               	movf	(??_xtoa+1)& (0+255),w,b
 26765  00613A  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 26766  00613C  510E               	movf	(??_xtoa+3)& (0+255),w,b
 26767  00613E  E106               	bnz	u16270
 26768  006140  0E1A               	movlw	26
 26769  006142  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 26770  006144  B0D8               	btfsc	status,0,c
 26771  006146  D002               	goto	u16270
 26772  006148  0E01               	movlw	1
 26773  00614A  D001               	goto	u16280
 26774  00614C                     u16270:
 26775  00614C  0E00               	movlw	0
 26776  00614E                     u16280:
 26777  00614E  6F13               	movwf	_xtoa$4901& (0+255),b
 26778  006150  6B14               	clrf	(_xtoa$4901+1)& (0+255),b
 26779                           
 26780                           ; BSR set to: 1
 26781  006152  5113               	movf	_xtoa$4901& (0+255),w,b
 26782  006154  1114               	iorwf	(_xtoa$4901+1)& (0+255),w,b
 26783  006156  B4D8               	btfsc	status,2,c
 26784  006158  D02B               	goto	l16342
 26785                           
 26786                           ; BSR set to: 1
 26787  00615A  0E9F               	movlw	159
 26788  00615C  6F0B               	movwf	??_xtoa& (0+255),b
 26789  00615E  0EFF               	movlw	255
 26790  006160  6F0C               	movwf	(??_xtoa+1)& (0+255),b
 26791  006162  0E20               	movlw	32
 26792  006164  1125               	iorwf	xtoa@c& (0+255),w,b
 26793  006166  6F0D               	movwf	(??_xtoa+2)& (0+255),b
 26794  006168  0E00               	movlw	0
 26795  00616A  1126               	iorwf	(xtoa@c+1)& (0+255),w,b
 26796  00616C  6F0E               	movwf	(??_xtoa+3)& (0+255),b
 26797  00616E  510B               	movf	??_xtoa& (0+255),w,b
 26798  006170  270D               	addwf	(??_xtoa+2)& (0+255),f,b
 26799  006172  510C               	movf	(??_xtoa+1)& (0+255),w,b
 26800  006174  230E               	addwfc	(??_xtoa+3)& (0+255),f,b
 26801  006176  510E               	movf	(??_xtoa+3)& (0+255),w,b
 26802  006178  E106               	bnz	u16300
 26803  00617A  0E1A               	movlw	26
 26804  00617C  5D0D               	subwf	(??_xtoa+2)& (0+255),w,b
 26805  00617E  B0D8               	btfsc	status,0,c
 26806  006180  D002               	goto	u16300
 26807  006182  0E01               	movlw	1
 26808  006184  D001               	goto	u16310
 26809  006186                     u16300:
 26810  006186  0E00               	movlw	0
 26811  006188                     u16310:
 26812  006188  6F15               	movwf	_xtoa$4902& (0+255),b
 26813  00618A  6B16               	clrf	(_xtoa$4902+1)& (0+255),b
 26814                           
 26815                           ; BSR set to: 1
 26816  00618C  5115               	movf	_xtoa$4902& (0+255),w,b
 26817  00618E  1116               	iorwf	(_xtoa$4902+1)& (0+255),w,b
 26818  006190  B4D8               	btfsc	status,2,c
 26819  006192  D00E               	goto	l16342
 26820                           
 26821                           ; BSR set to: 1
 26822                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 26823  006194  0060  F494  F091   	movff	xtoa@c,toupper@c
 26824  00619A  0060  F498  F092   	movff	xtoa@c+1,toupper@c+1
 26825  0061A0  EC07  F048         	call	_toupper	;wreg free
 26826  0061A4  0060  F244  F125   	movff	?_toupper,xtoa@c
 26827  0061AA  0060  F248  F126   	movff	?_toupper+1,xtoa@c+1
 26828  0061B0                     l16342:
 26829                           
 26830                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 26831  0061B0  0E53               	movlw	low _dbuf
 26832  0061B2  0101               	movlb	1	; () banked
 26833  0061B4  2523               	addwf	xtoa@i& (0+255),w,b
 26834  0061B6  6ED9               	movwf	fsr2l,c
 26835  0061B8  0E02               	movlw	high _dbuf
 26836  0061BA  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 26837  0061BC  6EDA               	movwf	fsr2h,c
 26838  0061BE  0060  F497  FFDF   	movff	xtoa@c,indf2
 26839                           
 26840                           ; BSR set to: 1
 26841                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 26842  0061C4  0717               	decf	xtoa@p& (0+255),f,b
 26843  0061C6  A0D8               	btfss	status,0,c
 26844  0061C8  0718               	decf	(xtoa@p+1)& (0+255),f,b
 26845                           
 26846                           ; BSR set to: 1
 26847                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 26848  0061CA  0719               	decf	xtoa@w& (0+255),f,b
 26849  0061CC  A0D8               	btfss	status,0,c
 26850  0061CE  071A               	decf	(xtoa@w+1)& (0+255),f,b
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 26854  0061D0  0060  F46C  F10B   	movff	xtoa@n,??_xtoa
 26855  0061D6  0060  F470  F10C   	movff	xtoa@n+1,??_xtoa+1
 26856  0061DC  0060  F474  F10D   	movff	xtoa@n+2,??_xtoa+2
 26857  0061E2  0060  F478  F10E   	movff	xtoa@n+3,??_xtoa+3
 26858  0061E8  0060  F47C  F10F   	movff	xtoa@n+4,??_xtoa+4
 26859  0061EE  0060  F480  F110   	movff	xtoa@n+5,??_xtoa+5
 26860  0061F4  0060  F484  F111   	movff	xtoa@n+6,??_xtoa+6
 26861  0061FA  0060  F488  F112   	movff	xtoa@n+7,??_xtoa+7
 26862  006200  0E05               	movlw	5
 26863  006202  D009               	goto	u16330
 26864  006204                     u16335:
 26865  006204  90D8               	bcf	status,0,c
 26866  006206  3312               	rrcf	(??_xtoa+7)& (0+255),f,b
 26867  006208  3311               	rrcf	(??_xtoa+6)& (0+255),f,b
 26868  00620A  3310               	rrcf	(??_xtoa+5)& (0+255),f,b
 26869  00620C  330F               	rrcf	(??_xtoa+4)& (0+255),f,b
 26870  00620E  330E               	rrcf	(??_xtoa+3)& (0+255),f,b
 26871  006210  330D               	rrcf	(??_xtoa+2)& (0+255),f,b
 26872  006212  330C               	rrcf	(??_xtoa+1)& (0+255),f,b
 26873  006214  330B               	rrcf	??_xtoa& (0+255),f,b
 26874  006216                     u16330:
 26875  006216  2EE8               	decfsz	wreg,f,c
 26876  006218  D7F5               	goto	u16335
 26877  00621A  0060  F42C  F11B   	movff	??_xtoa,xtoa@n
 26878  006220  0060  F430  F11C   	movff	??_xtoa+1,xtoa@n+1
 26879  006226  0060  F434  F11D   	movff	??_xtoa+2,xtoa@n+2
 26880  00622C  0060  F438  F11E   	movff	??_xtoa+3,xtoa@n+3
 26881  006232  0060  F43C  F11F   	movff	??_xtoa+4,xtoa@n+4
 26882  006238  0060  F440  F120   	movff	??_xtoa+5,xtoa@n+5
 26883  00623E  0060  F444  F121   	movff	??_xtoa+6,xtoa@n+6
 26884  006244  0060  F448  F122   	movff	??_xtoa+7,xtoa@n+7
 26885  00624A                     l16350:
 26886                           
 26887                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26888  00624A  0101               	movlb	1	; () banked
 26889  00624C  BF24               	btfsc	(xtoa@i+1)& (0+255),7,b
 26890  00624E  D021               	goto	u16380
 26891  006250  5124               	movf	(xtoa@i+1)& (0+255),w,b
 26892  006252  E104               	bnz	u16340
 26893  006254  0E02               	movlw	2
 26894  006256  5D23               	subwf	xtoa@i& (0+255),w,b
 26895  006258  A0D8               	btfss	status,0,c
 26896  00625A  D01B               	goto	u16380
 26897  00625C                     u16340:
 26898                           
 26899                           ; BSR set to: 1
 26900  00625C  511B               	movf	xtoa@n& (0+255),w,b
 26901  00625E  111C               	iorwf	(xtoa@n+1)& (0+255),w,b
 26902  006260  111D               	iorwf	(xtoa@n+2)& (0+255),w,b
 26903  006262  111E               	iorwf	(xtoa@n+3)& (0+255),w,b
 26904  006264  111F               	iorwf	(xtoa@n+4)& (0+255),w,b
 26905  006266  1120               	iorwf	(xtoa@n+5)& (0+255),w,b
 26906  006268  1121               	iorwf	(xtoa@n+6)& (0+255),w,b
 26907  00626A  1122               	iorwf	(xtoa@n+7)& (0+255),w,b
 26908  00626C  A4D8               	btfss	status,2,c
 26909  00626E  D743               	goto	l16320
 26910                           
 26911                           ; BSR set to: 1
 26912  006270  BF18               	btfsc	(xtoa@p+1)& (0+255),7,b
 26913  006272  D005               	goto	u16360
 26914  006274  5118               	movf	(xtoa@p+1)& (0+255),w,b
 26915  006276  E102               	bnz	u16361
 26916  006278  0517               	decf	xtoa@p& (0+255),w,b
 26917  00627A  B0D8               	btfsc	status,0,c
 26918  00627C                     u16361:
 26919  00627C  D73C               	goto	l16320
 26920  00627E                     u16360:
 26921                           
 26922                           ; BSR set to: 1
 26923  00627E  BF1A               	btfsc	(xtoa@w+1)& (0+255),7,b
 26924  006280  D008               	goto	u16380
 26925  006282  511A               	movf	(xtoa@w+1)& (0+255),w,b
 26926  006284  E103               	bnz	u16370
 26927  006286  0519               	decf	xtoa@w& (0+255),w,b
 26928  006288  A0D8               	btfss	status,0,c
 26929  00628A  D003               	goto	u16380
 26930  00628C                     u16370:
 26931                           
 26932                           ; BSR set to: 1
 26933  00628C  0100               	movlb	0	; () banked
 26934  00628E  B3B6               	btfsc	_flags& (0+255),1,b
 26935  006290  D732               	goto	l16320
 26936  006292                     u16380:
 26937                           
 26938                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 26939  006292  0100               	movlb	0	; () banked
 26940  006294  A9B6               	btfss	_flags& (0+255),4,b
 26941  006296  D018               	goto	l16366
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 26945  006298  0101               	movlb	1	; () banked
 26946  00629A  0723               	decf	xtoa@i& (0+255),f,b
 26947  00629C  A0D8               	btfss	status,0,c
 26948  00629E  0724               	decf	(xtoa@i+1)& (0+255),f,b
 26949                           
 26950                           ; BSR set to: 1
 26951                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 26952  0062A0  0E53               	movlw	low _dbuf
 26953  0062A2  2523               	addwf	xtoa@i& (0+255),w,b
 26954  0062A4  6ED9               	movwf	fsr2l,c
 26955  0062A6  0E02               	movlw	high _dbuf
 26956  0062A8  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 26957  0062AA  6EDA               	movwf	fsr2h,c
 26958  0062AC  0060  F42B  FFDF   	movff	xtoa@x,indf2
 26959                           
 26960                           ; BSR set to: 1
 26961                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 26962  0062B2  0723               	decf	xtoa@i& (0+255),f,b
 26963  0062B4  A0D8               	btfss	status,0,c
 26964  0062B6  0724               	decf	(xtoa@i+1)& (0+255),f,b
 26965                           
 26966                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 26967  0062B8  0E53               	movlw	low _dbuf
 26968  0062BA  2523               	addwf	xtoa@i& (0+255),w,b
 26969  0062BC  6ED9               	movwf	fsr2l,c
 26970  0062BE  0E02               	movlw	high _dbuf
 26971  0062C0  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 26972  0062C2  6EDA               	movwf	fsr2h,c
 26973  0062C4  0E30               	movlw	48
 26974  0062C6  6EDF               	movwf	indf2,c
 26975  0062C8                     l16366:
 26976                           
 26977                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 26978  0062C8  0060  F400  F09D   	movff	xtoa@fp,pad@fp
 26979  0062CE  0060  F404  F09E   	movff	xtoa@fp+1,pad@fp+1
 26980  0062D4  0E53               	movlw	low _dbuf
 26981  0062D6  0101               	movlb	1	; () banked
 26982  0062D8  2523               	addwf	xtoa@i& (0+255),w,b
 26983  0062DA  0100               	movlb	0	; () banked
 26984  0062DC  6F9F               	movwf	pad@buf& (0+255),b
 26985  0062DE  0E02               	movlw	high _dbuf
 26986  0062E0  0101               	movlb	1	; () banked
 26987  0062E2  2124               	addwfc	(xtoa@i+1)& (0+255),w,b
 26988  0062E4  0100               	movlb	0	; () banked
 26989  0062E6  6FA0               	movwf	(pad@buf+1)& (0+255),b
 26990  0062E8  0060  F464  F0A1   	movff	xtoa@w,pad@p
 26991  0062EE  0060  F468  F0A2   	movff	xtoa@w+1,pad@p+1
 26992  0062F4  EC48  F03F         	call	_pad	;wreg free
 26993  0062F8  0060  F274  F100   	movff	?_pad,?_xtoa
 26994  0062FE  0060  F278  F101   	movff	?_pad+1,?_xtoa+1
 26995                           
 26996                           ; BSR set to: 0
 26997  006304  0012               	return		;funcret
 26998  006306                     __end_of_xtoa:
 26999                           	opt callstack 0
 27000                           
 27001 ;; *************** function _toupper *****************
 27002 ;; Defined at:
 27003 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27004 ;; Parameters:    Size  Location     Type
 27005 ;;  c               2   49[BANK0 ] int 
 27006 ;; Auto vars:     Size  Location     Type
 27007 ;;		None
 27008 ;; Return value:  Size  Location     Type
 27009 ;;                  2   49[BANK0 ] int 
 27010 ;; Registers used:
 27011 ;;		wreg, status,2, status,0
 27012 ;; Tracked objects:
 27013 ;;		On entry : 3F/1
 27014 ;;		On exit  : 3F/0
 27015 ;;		Unchanged: 0/0
 27016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27020 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27021 ;;Total ram usage:        8 bytes
 27022 ;; Hardware stack levels used:    1
 27023 ;; Hardware stack levels required when called:   18
 27024 ;; This function calls:
 27025 ;;		_islower
 27026 ;; This function is called by:
 27027 ;;		_xtoa
 27028 ;; This function uses a non-reentrant model
 27029 ;;
 27030                           
 27031                           	psect	text115
 27032  00900E                     __ptext115:
 27033                           	opt callstack 0
 27034  00900E                     _toupper:
 27035                           	opt callstack 8
 27036                           
 27037                           ; BSR set to: 1
 27038                           
 27039                           ; BSR set to: 0
 27040                           ;incstack = 0
 27041  00900E  0E9F               	movlw	159
 27042  009010  0100               	movlb	0	; () banked
 27043  009012  6F93               	movwf	??_toupper& (0+255),b
 27044  009014  0EFF               	movlw	255
 27045  009016  6F94               	movwf	(??_toupper+1)& (0+255),b
 27046  009018  0060  F244  F095   	movff	toupper@c,??_toupper+2
 27047  00901E  0060  F248  F096   	movff	toupper@c+1,??_toupper+3
 27048  009024  5193               	movf	??_toupper& (0+255),w,b
 27049  009026  2795               	addwf	(??_toupper+2)& (0+255),f,b
 27050  009028  5194               	movf	(??_toupper+1)& (0+255),w,b
 27051  00902A  2396               	addwfc	(??_toupper+3)& (0+255),f,b
 27052  00902C  5196               	movf	(??_toupper+3)& (0+255),w,b
 27053  00902E  E106               	bnz	u15840
 27054  009030  0E1A               	movlw	26
 27055  009032  5D95               	subwf	(??_toupper+2)& (0+255),w,b
 27056  009034  B0D8               	btfsc	status,0,c
 27057  009036  D002               	goto	u15840
 27058  009038  0E01               	movlw	1
 27059  00903A  D001               	goto	u15850
 27060  00903C                     u15840:
 27061  00903C  0E00               	movlw	0
 27062  00903E                     u15850:
 27063  00903E  6F97               	movwf	_toupper$5482& (0+255),b
 27064  009040  6B98               	clrf	(_toupper$5482+1)& (0+255),b
 27065                           
 27066                           ; BSR set to: 0
 27067  009042  5197               	movf	_toupper$5482& (0+255),w,b
 27068  009044  1198               	iorwf	(_toupper$5482+1)& (0+255),w,b
 27069  009046  B4D8               	btfsc	status,2,c
 27070  009048  D005               	goto	l3932
 27071                           
 27072                           ; BSR set to: 0
 27073  00904A  0E5F               	movlw	95
 27074  00904C  1591               	andwf	toupper@c& (0+255),w,b
 27075  00904E  6F91               	movwf	?_toupper& (0+255),b
 27076  009050  6B92               	clrf	(?_toupper+1)& (0+255),b
 27077  009052  0012               	return	
 27078  009054                     l3932:
 27079                           
 27080                           ; BSR set to: 0
 27081  009054  0060  F244  F091   	movff	toupper@c,?_toupper
 27082  00905A  0060  F248  F092   	movff	toupper@c+1,?_toupper+1
 27083                           
 27084                           ; BSR set to: 0
 27085  009060  0012               	return		;funcret
 27086  009062                     __end_of_toupper:
 27087                           	opt callstack 0
 27088                           
 27089 ;; *************** function _islower *****************
 27090 ;; Defined at:
 27091 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27092 ;; Parameters:    Size  Location     Type
 27093 ;;  c               2   43[BANK0 ] int 
 27094 ;; Auto vars:     Size  Location     Type
 27095 ;;		None
 27096 ;; Return value:  Size  Location     Type
 27097 ;;                  2   43[BANK0 ] int 
 27098 ;; Registers used:
 27099 ;;		wreg, status,2, status,0
 27100 ;; Tracked objects:
 27101 ;;		On entry : 0/0
 27102 ;;		On exit  : 3F/0
 27103 ;;		Unchanged: 0/0
 27104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27108 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27109 ;;Total ram usage:        6 bytes
 27110 ;; Hardware stack levels used:    1
 27111 ;; Hardware stack levels required when called:   17
 27112 ;; This function calls:
 27113 ;;		Nothing
 27114 ;; This function is called by:
 27115 ;;		_toupper
 27116 ;; This function uses a non-reentrant model
 27117 ;;
 27118                           
 27119                           	psect	text116
 27120  00973C                     __ptext116:
 27121                           	opt callstack 0
 27122  00973C                     _islower:
 27123                           	opt callstack 8
 27124                           
 27125                           ; BSR set to: 0
 27126                           ;incstack = 0
 27127  00973C  0E9F               	movlw	159
 27128  00973E  0100               	movlb	0	; () banked
 27129  009740  6F8D               	movwf	??_islower& (0+255),b
 27130  009742  0EFF               	movlw	255
 27131  009744  6F8E               	movwf	(??_islower+1)& (0+255),b
 27132  009746  0060  F22C  F08F   	movff	islower@c,??_islower+2
 27133  00974C  0060  F230  F090   	movff	islower@c+1,??_islower+3
 27134  009752  518D               	movf	??_islower& (0+255),w,b
 27135  009754  278F               	addwf	(??_islower+2)& (0+255),f,b
 27136  009756  518E               	movf	(??_islower+1)& (0+255),w,b
 27137  009758  2390               	addwfc	(??_islower+3)& (0+255),f,b
 27138  00975A  5190               	movf	(??_islower+3)& (0+255),w,b
 27139  00975C  E106               	bnz	u15690
 27140  00975E  0E1A               	movlw	26
 27141  009760  5D8F               	subwf	(??_islower+2)& (0+255),w,b
 27142  009762  B0D8               	btfsc	status,0,c
 27143  009764  D002               	goto	u15690
 27144  009766  0E01               	movlw	1
 27145  009768  D001               	goto	u15700
 27146  00976A                     u15690:
 27147  00976A  0E00               	movlw	0
 27148  00976C                     u15700:
 27149  00976C  6F8B               	movwf	?_islower& (0+255),b
 27150  00976E  6B8C               	clrf	(?_islower+1)& (0+255),b
 27151                           
 27152                           ; BSR set to: 0
 27153  009770  0012               	return		;funcret
 27154  009772                     __end_of_islower:
 27155                           	opt callstack 0
 27156                           
 27157 ;; *************** function _isupper *****************
 27158 ;; Defined at:
 27159 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 27160 ;; Parameters:    Size  Location     Type
 27161 ;;  c               2   43[BANK0 ] int 
 27162 ;; Auto vars:     Size  Location     Type
 27163 ;;		None
 27164 ;; Return value:  Size  Location     Type
 27165 ;;                  2   43[BANK0 ] int 
 27166 ;; Registers used:
 27167 ;;		wreg, status,2, status,0
 27168 ;; Tracked objects:
 27169 ;;		On entry : 0/0
 27170 ;;		On exit  : 3F/0
 27171 ;;		Unchanged: 0/0
 27172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27176 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27177 ;;Total ram usage:        6 bytes
 27178 ;; Hardware stack levels used:    1
 27179 ;; Hardware stack levels required when called:   17
 27180 ;; This function calls:
 27181 ;;		Nothing
 27182 ;; This function is called by:
 27183 ;;		_xtoa
 27184 ;; This function uses a non-reentrant model
 27185 ;;
 27186                           
 27187                           	psect	text117
 27188  009772                     __ptext117:
 27189                           	opt callstack 0
 27190  009772                     _isupper:
 27191                           	opt callstack 9
 27192                           
 27193                           ; BSR set to: 0
 27194                           ;incstack = 0
 27195  009772  0EBF               	movlw	191
 27196  009774  0100               	movlb	0	; () banked
 27197  009776  6F8D               	movwf	??_isupper& (0+255),b
 27198  009778  0EFF               	movlw	255
 27199  00977A  6F8E               	movwf	(??_isupper+1)& (0+255),b
 27200  00977C  0060  F22C  F08F   	movff	isupper@c,??_isupper+2
 27201  009782  0060  F230  F090   	movff	isupper@c+1,??_isupper+3
 27202  009788  518D               	movf	??_isupper& (0+255),w,b
 27203  00978A  278F               	addwf	(??_isupper+2)& (0+255),f,b
 27204  00978C  518E               	movf	(??_isupper+1)& (0+255),w,b
 27205  00978E  2390               	addwfc	(??_isupper+3)& (0+255),f,b
 27206  009790  5190               	movf	(??_isupper+3)& (0+255),w,b
 27207  009792  E106               	bnz	u15800
 27208  009794  0E1A               	movlw	26
 27209  009796  5D8F               	subwf	(??_isupper+2)& (0+255),w,b
 27210  009798  B0D8               	btfsc	status,0,c
 27211  00979A  D002               	goto	u15800
 27212  00979C  0E01               	movlw	1
 27213  00979E  D001               	goto	u15810
 27214  0097A0                     u15800:
 27215  0097A0  0E00               	movlw	0
 27216  0097A2                     u15810:
 27217  0097A2  6F8B               	movwf	?_isupper& (0+255),b
 27218  0097A4  6B8C               	clrf	(?_isupper+1)& (0+255),b
 27219                           
 27220                           ; BSR set to: 0
 27221  0097A6  0012               	return		;funcret
 27222  0097A8                     __end_of_isupper:
 27223                           	opt callstack 0
 27224                           
 27225 ;; *************** function _isalpha *****************
 27226 ;; Defined at:
 27227 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27228 ;; Parameters:    Size  Location     Type
 27229 ;;  c               2   43[BANK0 ] int 
 27230 ;; Auto vars:     Size  Location     Type
 27231 ;;		None
 27232 ;; Return value:  Size  Location     Type
 27233 ;;                  2   43[BANK0 ] int 
 27234 ;; Registers used:
 27235 ;;		wreg, status,2, status,0
 27236 ;; Tracked objects:
 27237 ;;		On entry : 0/0
 27238 ;;		On exit  : 3F/0
 27239 ;;		Unchanged: 0/0
 27240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27243 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27245 ;;Total ram usage:        6 bytes
 27246 ;; Hardware stack levels used:    1
 27247 ;; Hardware stack levels required when called:   17
 27248 ;; This function calls:
 27249 ;;		Nothing
 27250 ;; This function is called by:
 27251 ;;		_xtoa
 27252 ;; This function uses a non-reentrant model
 27253 ;;
 27254                           
 27255                           	psect	text118
 27256  0097A8                     __ptext118:
 27257                           	opt callstack 0
 27258  0097A8                     _isalpha:
 27259                           	opt callstack 9
 27260                           
 27261                           ; BSR set to: 0
 27262                           ;incstack = 0
 27263  0097A8  0E9F               	movlw	159
 27264  0097AA  0100               	movlb	0	; () banked
 27265  0097AC  6F8D               	movwf	??_isalpha& (0+255),b
 27266  0097AE  0EFF               	movlw	255
 27267  0097B0  6F8E               	movwf	(??_isalpha+1)& (0+255),b
 27268  0097B2  0E20               	movlw	32
 27269  0097B4  118B               	iorwf	isalpha@c& (0+255),w,b
 27270  0097B6  6F8F               	movwf	(??_isalpha+2)& (0+255),b
 27271  0097B8  0E00               	movlw	0
 27272  0097BA  118C               	iorwf	(isalpha@c+1)& (0+255),w,b
 27273  0097BC  6F90               	movwf	(??_isalpha+3)& (0+255),b
 27274  0097BE  518D               	movf	??_isalpha& (0+255),w,b
 27275  0097C0  278F               	addwf	(??_isalpha+2)& (0+255),f,b
 27276  0097C2  518E               	movf	(??_isalpha+1)& (0+255),w,b
 27277  0097C4  2390               	addwfc	(??_isalpha+3)& (0+255),f,b
 27278  0097C6  5190               	movf	(??_isalpha+3)& (0+255),w,b
 27279  0097C8  E106               	bnz	u15820
 27280  0097CA  0E1A               	movlw	26
 27281  0097CC  5D8F               	subwf	(??_isalpha+2)& (0+255),w,b
 27282  0097CE  B0D8               	btfsc	status,0,c
 27283  0097D0  D002               	goto	u15820
 27284  0097D2  0E01               	movlw	1
 27285  0097D4  D001               	goto	u15830
 27286  0097D6                     u15820:
 27287  0097D6  0E00               	movlw	0
 27288  0097D8                     u15830:
 27289  0097D8  6F8B               	movwf	?_isalpha& (0+255),b
 27290  0097DA  6B8C               	clrf	(?_isalpha+1)& (0+255),b
 27291                           
 27292                           ; BSR set to: 0
 27293  0097DC  0012               	return		;funcret
 27294  0097DE                     __end_of_isalpha:
 27295                           	opt callstack 0
 27296                           
 27297 ;; *************** function _dtoa *****************
 27298 ;; Defined at:
 27299 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27300 ;; Parameters:    Size  Location     Type
 27301 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
 27302 ;;		 -> sprintf@f(6), NULL(0), 
 27303 ;;  d               8    2[BANK1 ] long long 
 27304 ;; Auto vars:     Size  Location     Type
 27305 ;;  n               8   26[BANK1 ] long long 
 27306 ;;  i               2   34[BANK1 ] int 
 27307 ;;  s               2   24[BANK1 ] int 
 27308 ;;  w               2   22[BANK1 ] int 
 27309 ;;  p               2   20[BANK1 ] int 
 27310 ;; Return value:  Size  Location     Type
 27311 ;;                  2    0[BANK1 ] int 
 27312 ;; Registers used:
 27313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27314 ;; Tracked objects:
 27315 ;;		On entry : 3F/1
 27316 ;;		On exit  : 3F/0
 27317 ;;		Unchanged: 0/0
 27318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27319 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27320 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27321 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27322 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27323 ;;Total ram usage:       36 bytes
 27324 ;; Hardware stack levels used:    1
 27325 ;; Hardware stack levels required when called:   22
 27326 ;; This function calls:
 27327 ;;		___aodiv
 27328 ;;		___aomod
 27329 ;;		_abs
 27330 ;;		_pad
 27331 ;; This function is called by:
 27332 ;;		_vfpfcnvrt
 27333 ;; This function uses a non-reentrant model
 27334 ;;
 27335                           
 27336                           	psect	text119
 27337  005AEA                     __ptext119:
 27338                           	opt callstack 0
 27339  005AEA                     _dtoa:
 27340                           	opt callstack 5
 27341                           
 27342                           ; BSR set to: 1
 27343                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 27344                           
 27345                           ; BSR set to: 0
 27346                           ;incstack = 0
 27347  005AEA  0060  F408  F11A   	movff	dtoa@d,dtoa@n
 27348  005AF0  0060  F40C  F11B   	movff	dtoa@d+1,dtoa@n+1
 27349  005AF6  0060  F410  F11C   	movff	dtoa@d+2,dtoa@n+2
 27350  005AFC  0060  F414  F11D   	movff	dtoa@d+3,dtoa@n+3
 27351  005B02  0060  F418  F11E   	movff	dtoa@d+4,dtoa@n+4
 27352  005B08  0060  F41C  F11F   	movff	dtoa@d+5,dtoa@n+5
 27353  005B0E  0060  F420  F120   	movff	dtoa@d+6,dtoa@n+6
 27354  005B14  0060  F424  F121   	movff	dtoa@d+7,dtoa@n+7
 27355                           
 27356                           ; BSR set to: 1
 27357                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 27358  005B1A  AF21               	btfss	(dtoa@n+7)& (0+255),7,b
 27359  005B1C  D002               	goto	u16080
 27360  005B1E  0E01               	movlw	1
 27361  005B20  D001               	goto	u16090
 27362  005B22                     u16080:
 27363  005B22  0E00               	movlw	0
 27364  005B24                     u16090:
 27365  005B24  6F18               	movwf	dtoa@s& (0+255),b
 27366  005B26  6B19               	clrf	(dtoa@s+1)& (0+255),b
 27367                           
 27368                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 27369  005B28  5118               	movf	dtoa@s& (0+255),w,b
 27370  005B2A  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27371  005B2C  B4D8               	btfsc	status,2,c
 27372  005B2E  D010               	goto	l16248
 27373                           
 27374                           ; BSR set to: 1
 27375                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 27376  005B30  1F21               	comf	(dtoa@n+7)& (0+255),f,b
 27377  005B32  1F20               	comf	(dtoa@n+6)& (0+255),f,b
 27378  005B34  1F1F               	comf	(dtoa@n+5)& (0+255),f,b
 27379  005B36  1F1E               	comf	(dtoa@n+4)& (0+255),f,b
 27380  005B38  1F1D               	comf	(dtoa@n+3)& (0+255),f,b
 27381  005B3A  1F1C               	comf	(dtoa@n+2)& (0+255),f,b
 27382  005B3C  1F1B               	comf	(dtoa@n+1)& (0+255),f,b
 27383  005B3E  6D1A               	negf	dtoa@n& (0+255),b
 27384  005B40  0E00               	movlw	0
 27385  005B42  231B               	addwfc	(dtoa@n+1)& (0+255),f,b
 27386  005B44  231C               	addwfc	(dtoa@n+2)& (0+255),f,b
 27387  005B46  231D               	addwfc	(dtoa@n+3)& (0+255),f,b
 27388  005B48  231E               	addwfc	(dtoa@n+4)& (0+255),f,b
 27389  005B4A  231F               	addwfc	(dtoa@n+5)& (0+255),f,b
 27390  005B4C  2320               	addwfc	(dtoa@n+6)& (0+255),f,b
 27391  005B4E  2321               	addwfc	(dtoa@n+7)& (0+255),f,b
 27392  005B50                     l16248:
 27393                           
 27394                           ; BSR set to: 1
 27395                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 27396  005B50  0100               	movlb	0	; () banked
 27397  005B52  AFB5               	btfss	(_prec+1)& (0+255),7,b
 27398                           
 27399                           ; BSR set to: 0
 27400                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 27401  005B54  93B6               	bcf	_flags& (0+255),1,b
 27402                           
 27403                           ; BSR set to: 0
 27404                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 27405  005B56  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 27406  005B58  D005               	goto	u16120
 27407  005B5A  51B5               	movf	(_prec+1)& (0+255),w,b
 27408  005B5C  E109               	bnz	l3060
 27409  005B5E  05B4               	decf	_prec& (0+255),w,b
 27410  005B60  B0D8               	btfsc	status,0,c
 27411  005B62  D006               	goto	l3060
 27412  005B64                     u16120:
 27413                           
 27414                           ; BSR set to: 0
 27415  005B64  0E00               	movlw	0
 27416  005B66  0101               	movlb	1	; () banked
 27417  005B68  6F15               	movwf	(dtoa@p+1)& (0+255),b
 27418  005B6A  0E01               	movlw	1
 27419  005B6C  6F14               	movwf	dtoa@p& (0+255),b
 27420  005B6E  D006               	goto	l3062
 27421  005B70                     l3060:
 27422                           
 27423                           ; BSR set to: 0
 27424  005B70  0060  F2D0  F114   	movff	_prec,dtoa@p
 27425  005B76  0060  F2D4  F115   	movff	_prec+1,dtoa@p+1
 27426  005B7C                     l3062:
 27427                           
 27428                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 27429  005B7C  0060  F2C8  F116   	movff	_width,dtoa@w
 27430  005B82  0060  F2CC  F117   	movff	_width+1,dtoa@w+1
 27431                           
 27432                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 27433  005B88  0101               	movlb	1	; () banked
 27434  005B8A  5118               	movf	dtoa@s& (0+255),w,b
 27435  005B8C  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27436  005B8E  A4D8               	btfss	status,2,c
 27437  005B90  D003               	goto	u16140
 27438                           
 27439                           ; BSR set to: 1
 27440  005B92  0100               	movlb	0	; () banked
 27441  005B94  A5B6               	btfss	_flags& (0+255),2,b
 27442  005B96  D004               	goto	l16262
 27443  005B98                     u16140:
 27444                           
 27445                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 27446  005B98  0101               	movlb	1	; () banked
 27447  005B9A  0716               	decf	dtoa@w& (0+255),f,b
 27448  005B9C  A0D8               	btfss	status,0,c
 27449  005B9E  0717               	decf	(dtoa@w+1)& (0+255),f,b
 27450  005BA0                     l16262:
 27451                           
 27452                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 27453  005BA0  0E00               	movlw	0
 27454  005BA2  0101               	movlb	1	; () banked
 27455  005BA4  6F23               	movwf	(dtoa@i+1)& (0+255),b
 27456  005BA6  0E1F               	movlw	31
 27457  005BA8  6F22               	movwf	dtoa@i& (0+255),b
 27458                           
 27459                           ; BSR set to: 1
 27460                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 27461  005BAA  0E00               	movlw	0
 27462  005BAC  0102               	movlb	2	; () banked
 27463  005BAE  6F72               	movwf	(_dbuf+31)& (0+255),b
 27464                           
 27465                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27466  005BB0  D0A2               	goto	l16276
 27467  005BB2                     l16266:
 27468                           
 27469                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 27470  005BB2  0101               	movlb	1	; () banked
 27471  005BB4  0722               	decf	dtoa@i& (0+255),f,b
 27472  005BB6  A0D8               	btfss	status,0,c
 27473  005BB8  0723               	decf	(dtoa@i+1)& (0+255),f,b
 27474                           
 27475                           ; BSR set to: 1
 27476                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 27477  005BBA  0E53               	movlw	low _dbuf
 27478  005BBC  2522               	addwf	dtoa@i& (0+255),w,b
 27479  005BBE  6ED9               	movwf	fsr2l,c
 27480  005BC0  0E02               	movlw	high _dbuf
 27481  005BC2  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27482  005BC4  6EDA               	movwf	fsr2h,c
 27483  005BC6  0060  F468  F08B   	movff	dtoa@n,___aomod@dividend
 27484  005BCC  0060  F46C  F08C   	movff	dtoa@n+1,___aomod@dividend+1
 27485  005BD2  0060  F470  F08D   	movff	dtoa@n+2,___aomod@dividend+2
 27486  005BD8  0060  F474  F08E   	movff	dtoa@n+3,___aomod@dividend+3
 27487  005BDE  0060  F478  F08F   	movff	dtoa@n+4,___aomod@dividend+4
 27488  005BE4  0060  F47C  F090   	movff	dtoa@n+5,___aomod@dividend+5
 27489  005BEA  0060  F480  F091   	movff	dtoa@n+6,___aomod@dividend+6
 27490  005BF0  0060  F484  F092   	movff	dtoa@n+7,___aomod@dividend+7
 27491  005BF6  0E0A               	movlw	10
 27492  005BF8  0100               	movlb	0	; () banked
 27493  005BFA  6F93               	movwf	___aomod@divisor& (0+255),b
 27494  005BFC  0E00               	movlw	0
 27495  005BFE  6F94               	movwf	(___aomod@divisor+1)& (0+255),b
 27496  005C00  0E00               	movlw	0
 27497  005C02  6F95               	movwf	(___aomod@divisor+2)& (0+255),b
 27498  005C04  0E00               	movlw	0
 27499  005C06  6F96               	movwf	(___aomod@divisor+3)& (0+255),b
 27500  005C08  0E00               	movlw	0
 27501  005C0A  6F97               	movwf	(___aomod@divisor+4)& (0+255),b
 27502  005C0C  0E00               	movlw	0
 27503  005C0E  6F98               	movwf	(___aomod@divisor+5)& (0+255),b
 27504  005C10  0E00               	movlw	0
 27505  005C12  6F99               	movwf	(___aomod@divisor+6)& (0+255),b
 27506  005C14  0E00               	movlw	0
 27507  005C16  6F9A               	movwf	(___aomod@divisor+7)& (0+255),b
 27508  005C18  ECA6  F039         	call	___aomod	;wreg free
 27509  005C1C  0060  F22C  F10A   	movff	?___aomod,??_dtoa
 27510  005C22  0060  F230  F10B   	movff	?___aomod+1,??_dtoa+1
 27511  005C28  0060  F234  F10C   	movff	?___aomod+2,??_dtoa+2
 27512  005C2E  0060  F238  F10D   	movff	?___aomod+3,??_dtoa+3
 27513  005C34  0060  F23C  F10E   	movff	?___aomod+4,??_dtoa+4
 27514  005C3A  0060  F240  F10F   	movff	?___aomod+5,??_dtoa+5
 27515  005C40  0060  F244  F110   	movff	?___aomod+6,??_dtoa+6
 27516  005C46  0060  F248  F111   	movff	?___aomod+7,??_dtoa+7
 27517  005C4C  0060  F428  F09D   	movff	??_dtoa,abs@a
 27518  005C52  0060  F430  F09E   	movff	??_dtoa+2,abs@a+1
 27519  005C58  EC77  F04A         	call	_abs	;wreg free
 27520  005C5C  519D               	movf	?_abs& (0+255),w,b
 27521  005C5E  0F30               	addlw	48
 27522  005C60  6EDF               	movwf	indf2,c
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 27526  005C62  0101               	movlb	1	; () banked
 27527  005C64  0714               	decf	dtoa@p& (0+255),f,b
 27528  005C66  A0D8               	btfss	status,0,c
 27529  005C68  0715               	decf	(dtoa@p+1)& (0+255),f,b
 27530                           
 27531                           ; BSR set to: 1
 27532                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 27533  005C6A  0716               	decf	dtoa@w& (0+255),f,b
 27534  005C6C  A0D8               	btfss	status,0,c
 27535  005C6E  0717               	decf	(dtoa@w+1)& (0+255),f,b
 27536                           
 27537                           ; BSR set to: 1
 27538                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 27539  005C70  0060  F468  F08B   	movff	dtoa@n,___aodiv@dividend
 27540  005C76  0060  F46C  F08C   	movff	dtoa@n+1,___aodiv@dividend+1
 27541  005C7C  0060  F470  F08D   	movff	dtoa@n+2,___aodiv@dividend+2
 27542  005C82  0060  F474  F08E   	movff	dtoa@n+3,___aodiv@dividend+3
 27543  005C88  0060  F478  F08F   	movff	dtoa@n+4,___aodiv@dividend+4
 27544  005C8E  0060  F47C  F090   	movff	dtoa@n+5,___aodiv@dividend+5
 27545  005C94  0060  F480  F091   	movff	dtoa@n+6,___aodiv@dividend+6
 27546  005C9A  0060  F484  F092   	movff	dtoa@n+7,___aodiv@dividend+7
 27547  005CA0  0E0A               	movlw	10
 27548  005CA2  0100               	movlb	0	; () banked
 27549  005CA4  6F93               	movwf	___aodiv@divisor& (0+255),b
 27550  005CA6  0E00               	movlw	0
 27551  005CA8  6F94               	movwf	(___aodiv@divisor+1)& (0+255),b
 27552  005CAA  0E00               	movlw	0
 27553  005CAC  6F95               	movwf	(___aodiv@divisor+2)& (0+255),b
 27554  005CAE  0E00               	movlw	0
 27555  005CB0  6F96               	movwf	(___aodiv@divisor+3)& (0+255),b
 27556  005CB2  0E00               	movlw	0
 27557  005CB4  6F97               	movwf	(___aodiv@divisor+4)& (0+255),b
 27558  005CB6  0E00               	movlw	0
 27559  005CB8  6F98               	movwf	(___aodiv@divisor+5)& (0+255),b
 27560  005CBA  0E00               	movlw	0
 27561  005CBC  6F99               	movwf	(___aodiv@divisor+6)& (0+255),b
 27562  005CBE  0E00               	movlw	0
 27563  005CC0  6F9A               	movwf	(___aodiv@divisor+7)& (0+255),b
 27564  005CC2  EC4E  F038         	call	___aodiv	;wreg free
 27565  005CC6  0060  F22C  F11A   	movff	?___aodiv,dtoa@n
 27566  005CCC  0060  F230  F11B   	movff	?___aodiv+1,dtoa@n+1
 27567  005CD2  0060  F234  F11C   	movff	?___aodiv+2,dtoa@n+2
 27568  005CD8  0060  F238  F11D   	movff	?___aodiv+3,dtoa@n+3
 27569  005CDE  0060  F23C  F11E   	movff	?___aodiv+4,dtoa@n+4
 27570  005CE4  0060  F240  F11F   	movff	?___aodiv+5,dtoa@n+5
 27571  005CEA  0060  F244  F120   	movff	?___aodiv+6,dtoa@n+6
 27572  005CF0  0060  F248  F121   	movff	?___aodiv+7,dtoa@n+7
 27573  005CF6                     l16276:
 27574                           
 27575                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27576  005CF6  0101               	movlb	1	; () banked
 27577  005CF8  BF23               	btfsc	(dtoa@i+1)& (0+255),7,b
 27578  005CFA  D020               	goto	u16190
 27579  005CFC  5123               	movf	(dtoa@i+1)& (0+255),w,b
 27580  005CFE  E103               	bnz	u16150
 27581  005D00  0522               	decf	dtoa@i& (0+255),w,b
 27582  005D02  A0D8               	btfss	status,0,c
 27583  005D04  D01B               	goto	u16190
 27584  005D06                     u16150:
 27585                           
 27586                           ; BSR set to: 1
 27587  005D06  511A               	movf	dtoa@n& (0+255),w,b
 27588  005D08  111B               	iorwf	(dtoa@n+1)& (0+255),w,b
 27589  005D0A  111C               	iorwf	(dtoa@n+2)& (0+255),w,b
 27590  005D0C  111D               	iorwf	(dtoa@n+3)& (0+255),w,b
 27591  005D0E  111E               	iorwf	(dtoa@n+4)& (0+255),w,b
 27592  005D10  111F               	iorwf	(dtoa@n+5)& (0+255),w,b
 27593  005D12  1120               	iorwf	(dtoa@n+6)& (0+255),w,b
 27594  005D14  1121               	iorwf	(dtoa@n+7)& (0+255),w,b
 27595  005D16  A4D8               	btfss	status,2,c
 27596  005D18  D74C               	goto	l16266
 27597                           
 27598                           ; BSR set to: 1
 27599  005D1A  BF15               	btfsc	(dtoa@p+1)& (0+255),7,b
 27600  005D1C  D005               	goto	u16170
 27601  005D1E  5115               	movf	(dtoa@p+1)& (0+255),w,b
 27602  005D20  E102               	bnz	u16171
 27603  005D22  0514               	decf	dtoa@p& (0+255),w,b
 27604  005D24  B0D8               	btfsc	status,0,c
 27605  005D26                     u16171:
 27606  005D26  D745               	goto	l16266
 27607  005D28                     u16170:
 27608                           
 27609                           ; BSR set to: 1
 27610  005D28  BF17               	btfsc	(dtoa@w+1)& (0+255),7,b
 27611  005D2A  D008               	goto	u16190
 27612  005D2C  5117               	movf	(dtoa@w+1)& (0+255),w,b
 27613  005D2E  E103               	bnz	u16180
 27614  005D30  0516               	decf	dtoa@w& (0+255),w,b
 27615  005D32  A0D8               	btfss	status,0,c
 27616  005D34  D003               	goto	u16190
 27617  005D36                     u16180:
 27618                           
 27619                           ; BSR set to: 1
 27620  005D36  0100               	movlb	0	; () banked
 27621  005D38  B3B6               	btfsc	_flags& (0+255),1,b
 27622  005D3A  D73B               	goto	l16266
 27623  005D3C                     u16190:
 27624                           
 27625                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 27626  005D3C  0101               	movlb	1	; () banked
 27627  005D3E  5118               	movf	dtoa@s& (0+255),w,b
 27628  005D40  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27629  005D42  A4D8               	btfss	status,2,c
 27630  005D44  D003               	goto	u16210
 27631                           
 27632                           ; BSR set to: 1
 27633  005D46  0100               	movlb	0	; () banked
 27634  005D48  A5B6               	btfss	_flags& (0+255),2,b
 27635  005D4A  D019               	goto	l16300
 27636  005D4C                     u16210:
 27637                           
 27638                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 27639  005D4C  0101               	movlb	1	; () banked
 27640  005D4E  0722               	decf	dtoa@i& (0+255),f,b
 27641  005D50  A0D8               	btfss	status,0,c
 27642  005D52  0723               	decf	(dtoa@i+1)& (0+255),f,b
 27643                           
 27644                           ; BSR set to: 1
 27645                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 27646  005D54  5118               	movf	dtoa@s& (0+255),w,b
 27647  005D56  1119               	iorwf	(dtoa@s+1)& (0+255),w,b
 27648  005D58  A4D8               	btfss	status,2,c
 27649  005D5A  D004               	goto	l16296
 27650                           
 27651                           ; BSR set to: 1
 27652  005D5C  0E00               	movlw	0
 27653  005D5E  6F13               	movwf	(_dtoa$4890+1)& (0+255),b
 27654  005D60  0E2B               	movlw	43
 27655  005D62  D003               	goto	L49
 27656  005D64                     l16296:
 27657                           
 27658                           ; BSR set to: 1
 27659  005D64  0E00               	movlw	0
 27660  005D66  6F13               	movwf	(_dtoa$4890+1)& (0+255),b
 27661  005D68  0E2D               	movlw	45
 27662  005D6A                     L49:
 27663  005D6A  6F12               	movwf	_dtoa$4890& (0+255),b
 27664                           
 27665                           ; BSR set to: 1
 27666  005D6C  0E53               	movlw	low _dbuf
 27667  005D6E  2522               	addwf	dtoa@i& (0+255),w,b
 27668  005D70  6ED9               	movwf	fsr2l,c
 27669  005D72  0E02               	movlw	high _dbuf
 27670  005D74  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27671  005D76  6EDA               	movwf	fsr2h,c
 27672  005D78  0060  F44B  FFDF   	movff	_dtoa$4890,indf2
 27673  005D7E                     l16300:
 27674                           
 27675                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 27676  005D7E  0060  F400  F09D   	movff	dtoa@fp,pad@fp
 27677  005D84  0060  F404  F09E   	movff	dtoa@fp+1,pad@fp+1
 27678  005D8A  0E53               	movlw	low _dbuf
 27679  005D8C  0101               	movlb	1	; () banked
 27680  005D8E  2522               	addwf	dtoa@i& (0+255),w,b
 27681  005D90  0100               	movlb	0	; () banked
 27682  005D92  6F9F               	movwf	pad@buf& (0+255),b
 27683  005D94  0E02               	movlw	high _dbuf
 27684  005D96  0101               	movlb	1	; () banked
 27685  005D98  2123               	addwfc	(dtoa@i+1)& (0+255),w,b
 27686  005D9A  0100               	movlb	0	; () banked
 27687  005D9C  6FA0               	movwf	(pad@buf+1)& (0+255),b
 27688  005D9E  0060  F458  F0A1   	movff	dtoa@w,pad@p
 27689  005DA4  0060  F45C  F0A2   	movff	dtoa@w+1,pad@p+1
 27690  005DAA  EC48  F03F         	call	_pad	;wreg free
 27691  005DAE  0060  F274  F100   	movff	?_pad,?_dtoa
 27692  005DB4  0060  F278  F101   	movff	?_pad+1,?_dtoa+1
 27693                           
 27694                           ; BSR set to: 0
 27695  005DBA  0012               	return		;funcret
 27696  005DBC                     __end_of_dtoa:
 27697                           	opt callstack 0
 27698                           
 27699 ;; *************** function _pad *****************
 27700 ;; Defined at:
 27701 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27702 ;; Parameters:    Size  Location     Type
 27703 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
 27704 ;;		 -> sprintf@f(6), NULL(0), 
 27705 ;;  buf             2   63[BANK0 ] PTR unsigned char 
 27706 ;;		 -> dbuf(32), 
 27707 ;;  p               2   65[BANK0 ] int 
 27708 ;; Auto vars:     Size  Location     Type
 27709 ;;  w               2   70[BANK0 ] int 
 27710 ;;  i               2   68[BANK0 ] int 
 27711 ;; Return value:  Size  Location     Type
 27712 ;;                  2   61[BANK0 ] int 
 27713 ;; Registers used:
 27714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27715 ;; Tracked objects:
 27716 ;;		On entry : 3F/0
 27717 ;;		On exit  : 3F/0
 27718 ;;		Unchanged: 0/0
 27719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27720 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27723 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27724 ;;Total ram usage:       11 bytes
 27725 ;; Hardware stack levels used:    1
 27726 ;; Hardware stack levels required when called:   21
 27727 ;; This function calls:
 27728 ;;		_fputc
 27729 ;;		_fputs
 27730 ;;		_strlen
 27731 ;; This function is called by:
 27732 ;;		_dtoa
 27733 ;;		_xtoa
 27734 ;; This function uses a non-reentrant model
 27735 ;;
 27736                           
 27737                           	psect	text120
 27738  007E90                     __ptext120:
 27739                           	opt callstack 0
 27740  007E90                     _pad:
 27741                           	opt callstack 5
 27742                           
 27743                           ; BSR set to: 0
 27744                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 27745                           
 27746                           ; BSR set to: 0
 27747                           ;incstack = 0
 27748  007E90  A1B6               	btfss	_flags& (0+255),0,b
 27749  007E92  D00E               	goto	l16078
 27750                           
 27751                           ; BSR set to: 0
 27752                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 27753  007E94  0060  F27C  F096   	movff	pad@buf,fputs@s
 27754  007E9A  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 27755  007EA0  0060  F274  F098   	movff	pad@fp,fputs@fp
 27756  007EA6  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 27757  007EAC  EC57  F04A         	call	_fputs	;wreg free
 27758  007EB0                     l16078:
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 27762  007EB0  BFA2               	btfsc	(pad@p+1)& (0+255),7,b
 27763  007EB2  D007               	goto	l16082
 27764                           
 27765                           ; BSR set to: 0
 27766  007EB4  0060  F284  F0A6   	movff	pad@p,pad@w
 27767  007EBA  0060  F288  F0A7   	movff	pad@p+1,pad@w+1
 27768  007EC0  D004               	goto	l3049
 27769  007EC2                     l16082:
 27770                           
 27771                           ; BSR set to: 0
 27772  007EC2  0E00               	movlw	0
 27773  007EC4  6FA7               	movwf	(pad@w+1)& (0+255),b
 27774  007EC6  0E00               	movlw	0
 27775  007EC8  6FA6               	movwf	pad@w& (0+255),b
 27776  007ECA                     l3049:
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 27780  007ECA  0E00               	movlw	0
 27781  007ECC  6FA5               	movwf	(pad@i+1)& (0+255),b
 27782  007ECE  0E00               	movlw	0
 27783  007ED0  6FA4               	movwf	pad@i& (0+255),b
 27784                           
 27785                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 27786  007ED2  D00F               	goto	l16088
 27787  007ED4                     l16084:
 27788                           
 27789                           ; BSR set to: 0
 27790                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 27791  007ED4  0E00               	movlw	0
 27792  007ED6  6F8E               	movwf	(fputc@c+1)& (0+255),b
 27793  007ED8  0E20               	movlw	32
 27794  007EDA  6F8D               	movwf	fputc@c& (0+255),b
 27795  007EDC  0060  F274  F08F   	movff	pad@fp,fputc@fp
 27796  007EE2  0060  F278  F090   	movff	pad@fp+1,fputc@fp+1
 27797  007EE8  ECFA  F03F         	call	_fputc	;wreg free
 27798                           
 27799                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 27800  007EEC  0100               	movlb	0	; () banked
 27801  007EEE  4BA4               	infsnz	pad@i& (0+255),f,b
 27802  007EF0  2BA5               	incf	(pad@i+1)& (0+255),f,b
 27803  007EF2                     l16088:
 27804                           
 27805                           ; BSR set to: 0
 27806                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 27807  007EF2  51A6               	movf	pad@w& (0+255),w,b
 27808  007EF4  5DA4               	subwf	pad@i& (0+255),w,b
 27809  007EF6  51A5               	movf	(pad@i+1)& (0+255),w,b
 27810  007EF8  0A80               	xorlw	128
 27811  007EFA  6FA3               	movwf	??_pad& (0+255),b
 27812  007EFC  51A7               	movf	(pad@w+1)& (0+255),w,b
 27813  007EFE  0A80               	xorlw	128
 27814  007F00  59A3               	subwfb	??_pad& (0+255),w,b
 27815  007F02  A0D8               	btfss	status,0,c
 27816  007F04  D7E7               	goto	l16084
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 27820  007F06  B1B6               	btfsc	_flags& (0+255),0,b
 27821  007F08  D00E               	goto	l16092
 27822                           
 27823                           ; BSR set to: 0
 27824                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 27825  007F0A  0060  F27C  F096   	movff	pad@buf,fputs@s
 27826  007F10  0060  F280  F097   	movff	pad@buf+1,fputs@s+1
 27827  007F16  0060  F274  F098   	movff	pad@fp,fputs@fp
 27828  007F1C  0060  F278  F099   	movff	pad@fp+1,fputs@fp+1
 27829  007F22  EC57  F04A         	call	_fputs	;wreg free
 27830  007F26                     l16092:
 27831                           
 27832                           ; BSR set to: 0
 27833                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 27834  007F26  0060  F27C  F08B   	movff	pad@buf,strlen@s
 27835  007F2C  0060  F280  F08C   	movff	pad@buf+1,strlen@s+1
 27836  007F32  ECA5  F04C         	call	_strlen	;wreg free
 27837  007F36  51A6               	movf	pad@w& (0+255),w,b
 27838  007F38  258B               	addwf	?_strlen& (0+255),w,b
 27839  007F3A  6F9D               	movwf	?_pad& (0+255),b
 27840  007F3C  51A7               	movf	(pad@w+1)& (0+255),w,b
 27841  007F3E  218C               	addwfc	(?_strlen+1)& (0+255),w,b
 27842  007F40  6F9E               	movwf	(?_pad+1)& (0+255),b
 27843                           
 27844                           ; BSR set to: 0
 27845  007F42  0012               	return		;funcret
 27846  007F44                     __end_of_pad:
 27847                           	opt callstack 0
 27848                           
 27849 ;; *************** function _strlen *****************
 27850 ;; Defined at:
 27851 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 27852 ;; Parameters:    Size  Location     Type
 27853 ;;  s               2   43[BANK0 ] PTR const unsigned char 
 27854 ;;		 -> dbuf(32), 
 27855 ;; Auto vars:     Size  Location     Type
 27856 ;;  a               2   45[BANK0 ] PTR const unsigned char 
 27857 ;;		 -> dbuf(32), 
 27858 ;; Return value:  Size  Location     Type
 27859 ;;                  2   43[BANK0 ] unsigned int 
 27860 ;; Registers used:
 27861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27862 ;; Tracked objects:
 27863 ;;		On entry : 3F/0
 27864 ;;		On exit  : 3F/0
 27865 ;;		Unchanged: 0/0
 27866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27871 ;;Total ram usage:        4 bytes
 27872 ;; Hardware stack levels used:    1
 27873 ;; Hardware stack levels required when called:   17
 27874 ;; This function calls:
 27875 ;;		Nothing
 27876 ;; This function is called by:
 27877 ;;		_pad
 27878 ;; This function uses a non-reentrant model
 27879 ;;
 27880                           
 27881                           	psect	text121
 27882  00994A                     __ptext121:
 27883                           	opt callstack 0
 27884  00994A                     _strlen:
 27885                           	opt callstack 8
 27886                           
 27887                           ; BSR set to: 0
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;incstack = 0
 27891  00994A  0060  F22C  F08D   	movff	strlen@s,strlen@a
 27892  009950  0060  F230  F08E   	movff	strlen@s+1,strlen@a+1
 27893  009956  D002               	goto	l16050
 27894  009958                     l16048:
 27895                           
 27896                           ; BSR set to: 0
 27897  009958  4B8B               	infsnz	strlen@s& (0+255),f,b
 27898  00995A  2B8C               	incf	(strlen@s+1)& (0+255),f,b
 27899  00995C                     l16050:
 27900                           
 27901                           ; BSR set to: 0
 27902  00995C  0060  F22F  FFD9   	movff	strlen@s,fsr2l
 27903  009962  0060  F233  FFDA   	movff	strlen@s+1,fsr2h
 27904  009968  50DF               	movf	indf2,w,c
 27905  00996A  A4D8               	btfss	status,2,c
 27906  00996C  D7F5               	goto	l16048
 27907                           
 27908                           ; BSR set to: 0
 27909  00996E  518D               	movf	strlen@a& (0+255),w,b
 27910  009970  5D8B               	subwf	strlen@s& (0+255),w,b
 27911  009972  6F8B               	movwf	?_strlen& (0+255),b
 27912  009974  518E               	movf	(strlen@a+1)& (0+255),w,b
 27913  009976  598C               	subwfb	(strlen@s+1)& (0+255),w,b
 27914  009978  6F8C               	movwf	(?_strlen+1)& (0+255),b
 27915                           
 27916                           ; BSR set to: 0
 27917  00997A  0012               	return		;funcret
 27918  00997C                     __end_of_strlen:
 27919                           	opt callstack 0
 27920                           
 27921 ;; *************** function _fputs *****************
 27922 ;; Defined at:
 27923 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 27924 ;; Parameters:    Size  Location     Type
 27925 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 27926 ;;		 -> dbuf(32), 
 27927 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
 27928 ;;		 -> sprintf@f(6), NULL(0), 
 27929 ;; Auto vars:     Size  Location     Type
 27930 ;;  i               2   59[BANK0 ] int 
 27931 ;;  c               1   58[BANK0 ] unsigned char 
 27932 ;; Return value:  Size  Location     Type
 27933 ;;                  2   54[BANK0 ] int 
 27934 ;; Registers used:
 27935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27936 ;; Tracked objects:
 27937 ;;		On entry : 3F/0
 27938 ;;		On exit  : 3F/0
 27939 ;;		Unchanged: 0/0
 27940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27941 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27942 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27944 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27945 ;;Total ram usage:        7 bytes
 27946 ;; Hardware stack levels used:    1
 27947 ;; Hardware stack levels required when called:   20
 27948 ;; This function calls:
 27949 ;;		_fputc
 27950 ;; This function is called by:
 27951 ;;		_pad
 27952 ;; This function uses a non-reentrant model
 27953 ;;
 27954                           
 27955                           	psect	text122
 27956  0094AE                     __ptext122:
 27957                           	opt callstack 0
 27958  0094AE                     _fputs:
 27959                           	opt callstack 5
 27960                           
 27961                           ; BSR set to: 0
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;incstack = 0
 27965  0094AE  0E00               	movlw	0
 27966  0094B0  6F9C               	movwf	(fputs@i+1)& (0+255),b
 27967  0094B2  0E00               	movlw	0
 27968  0094B4  6F9B               	movwf	fputs@i& (0+255),b
 27969  0094B6  D00F               	goto	l16044
 27970  0094B8                     l16040:
 27971                           
 27972                           ; BSR set to: 0
 27973  0094B8  0060  F268  F08D   	movff	fputs@c,fputc@c
 27974  0094BE  6B8E               	clrf	(fputc@c+1)& (0+255),b
 27975  0094C0  0060  F260  F08F   	movff	fputs@fp,fputc@fp
 27976  0094C6  0060  F264  F090   	movff	fputs@fp+1,fputc@fp+1
 27977  0094CC  ECFA  F03F         	call	_fputc	;wreg free
 27978  0094D0  0100               	movlb	0	; () banked
 27979  0094D2  4B9B               	infsnz	fputs@i& (0+255),f,b
 27980  0094D4  2B9C               	incf	(fputs@i+1)& (0+255),f,b
 27981  0094D6                     l16044:
 27982                           
 27983                           ; BSR set to: 0
 27984  0094D6  519B               	movf	fputs@i& (0+255),w,b
 27985  0094D8  2596               	addwf	fputs@s& (0+255),w,b
 27986  0094DA  6ED9               	movwf	fsr2l,c
 27987  0094DC  519C               	movf	(fputs@i+1)& (0+255),w,b
 27988  0094DE  2197               	addwfc	(fputs@s+1)& (0+255),w,b
 27989  0094E0  6EDA               	movwf	fsr2h,c
 27990  0094E2  50DF               	movf	indf2,w,c
 27991  0094E4  6F9A               	movwf	fputs@c& (0+255),b
 27992  0094E6  519A               	movf	fputs@c& (0+255),w,b
 27993  0094E8  B4D8               	btfsc	status,2,c
 27994  0094EA  0012               	return	
 27995  0094EC  D7E5               	goto	l16040
 27996  0094EE                     __end_of_fputs:
 27997                           	opt callstack 0
 27998                           
 27999 ;; *************** function _fputc *****************
 28000 ;; Defined at:
 28001 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 28002 ;; Parameters:    Size  Location     Type
 28003 ;;  c               2   45[BANK0 ] int 
 28004 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
 28005 ;;		 -> sprintf@f(6), NULL(0), 
 28006 ;; Auto vars:     Size  Location     Type
 28007 ;;		None
 28008 ;; Return value:  Size  Location     Type
 28009 ;;                  2   45[BANK0 ] int 
 28010 ;; Registers used:
 28011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28012 ;; Tracked objects:
 28013 ;;		On entry : 3F/0
 28014 ;;		On exit  : 6/0
 28015 ;;		Unchanged: 0/0
 28016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28019 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28020 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28021 ;;Total ram usage:        9 bytes
 28022 ;; Hardware stack levels used:    1
 28023 ;; Hardware stack levels required when called:   19
 28024 ;; This function calls:
 28025 ;;		_putch
 28026 ;; This function is called by:
 28027 ;;		_pad
 28028 ;;		_vfpfcnvrt
 28029 ;;		_fputs
 28030 ;; This function uses a non-reentrant model
 28031 ;;
 28032                           
 28033                           	psect	text123
 28034  007FF4                     __ptext123:
 28035                           	opt callstack 0
 28036  007FF4                     _fputc:
 28037                           	opt callstack 5
 28038                           
 28039                           ; BSR set to: 0
 28040                           
 28041                           ; BSR set to: 0
 28042                           ;incstack = 0
 28043  007FF4  518F               	movf	fputc@fp& (0+255),w,b
 28044  007FF6  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28045  007FF8  B4D8               	btfsc	status,2,c
 28046  007FFA  D004               	goto	u15630
 28047                           
 28048                           ; BSR set to: 0
 28049  007FFC  518F               	movf	fputc@fp& (0+255),w,b
 28050  007FFE  1190               	iorwf	(fputc@fp+1)& (0+255),w,b
 28051  008000  A4D8               	btfss	status,2,c
 28052  008002  D004               	goto	l16024
 28053  008004                     u15630:
 28054                           
 28055                           ; BSR set to: 0
 28056  008004  518D               	movf	fputc@c& (0+255),w,b
 28057  008006  ECD3  F050         	call	_putch
 28058  00800A  0012               	return	
 28059  00800C                     l16024:
 28060                           
 28061                           ; BSR set to: 0
 28062  00800C  EE20 F004          	lfsr	2,4
 28063  008010  518F               	movf	fputc@fp& (0+255),w,b
 28064  008012  26D9               	addwf	fsr2l,f,c
 28065  008014  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28066  008016  22DA               	addwfc	fsr2h,f,c
 28067  008018  50DE               	movf	postinc2,w,c
 28068  00801A  10DE               	iorwf	postinc2,w,c
 28069  00801C  B4D8               	btfsc	status,2,c
 28070  00801E  D016               	goto	u15650
 28071                           
 28072                           ; BSR set to: 0
 28073  008020  EE20 F004          	lfsr	2,4
 28074  008024  518F               	movf	fputc@fp& (0+255),w,b
 28075  008026  26D9               	addwf	fsr2l,f,c
 28076  008028  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28077  00802A  22DA               	addwfc	fsr2h,f,c
 28078  00802C  EE10 F002          	lfsr	1,2
 28079  008030  518F               	movf	fputc@fp& (0+255),w,b
 28080  008032  26E1               	addwf	fsr1l,f,c
 28081  008034  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28082  008036  22E2               	addwfc	fsr1h,f,c
 28083  008038  50DE               	movf	postinc2,w,c
 28084  00803A  5CE6               	subwf	postinc1,w,c
 28085  00803C  50E6               	movf	postinc1,w,c
 28086  00803E  0A80               	xorlw	128
 28087  008040  6F95               	movwf	(??_fputc+4)& (0+255),b
 28088  008042  50DE               	movf	postinc2,w,c
 28089  008044  0A80               	xorlw	128
 28090  008046  5995               	subwfb	(??_fputc+4)& (0+255),w,b
 28091  008048  B0D8               	btfsc	status,0,c
 28092  00804A  0012               	return	
 28093  00804C                     u15650:
 28094                           
 28095                           ; BSR set to: 0
 28096  00804C  EE20 F002          	lfsr	2,2
 28097  008050  518F               	movf	fputc@fp& (0+255),w,b
 28098  008052  26D9               	addwf	fsr2l,f,c
 28099  008054  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28100  008056  22DA               	addwfc	fsr2h,f,c
 28101  008058  006F FF78  F091    	movff	postinc2,??_fputc
 28102  00805E  006F FF74  F092    	movff	postdec2,??_fputc+1
 28103  008064  0060  F23F  FFD9   	movff	fputc@fp,fsr2l
 28104  00806A  0060  F243  FFDA   	movff	fputc@fp+1,fsr2h
 28105  008070  006F FF78  F093    	movff	postinc2,??_fputc+2
 28106  008076  006F FF74  F094    	movff	postdec2,??_fputc+3
 28107  00807C  5191               	movf	??_fputc& (0+255),w,b
 28108  00807E  2593               	addwf	(??_fputc+2)& (0+255),w,b
 28109  008080  6ED9               	movwf	fsr2l,c
 28110  008082  5192               	movf	(??_fputc+1)& (0+255),w,b
 28111  008084  2194               	addwfc	(??_fputc+3)& (0+255),w,b
 28112  008086  6EDA               	movwf	fsr2h,c
 28113  008088  0060  F237  FFDF   	movff	fputc@c,indf2
 28114  00808E  EE20 F002          	lfsr	2,2
 28115  008092  518F               	movf	fputc@fp& (0+255),w,b
 28116  008094  26D9               	addwf	fsr2l,f,c
 28117  008096  5190               	movf	(fputc@fp+1)& (0+255),w,b
 28118  008098  22DA               	addwfc	fsr2h,f,c
 28119  00809A  2ADE               	incf	postinc2,f,c
 28120  00809C  0E00               	movlw	0
 28121  00809E  22DD               	addwfc	postdec2,f,c
 28122  0080A0  0012               	return		;funcret
 28123  0080A2                     __end_of_fputc:
 28124                           	opt callstack 0
 28125                           
 28126 ;; *************** function _putch *****************
 28127 ;; Defined at:
 28128 ;;		line 23 in file "main.c"
 28129 ;; Parameters:    Size  Location     Type
 28130 ;;  byte            1    wreg     unsigned char 
 28131 ;; Auto vars:     Size  Location     Type
 28132 ;;  byte            1   44[BANK0 ] unsigned char 
 28133 ;; Return value:  Size  Location     Type
 28134 ;;                  1    wreg      void 
 28135 ;; Registers used:
 28136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28137 ;; Tracked objects:
 28138 ;;		On entry : 3F/0
 28139 ;;		On exit  : 3F/39
 28140 ;;		Unchanged: 0/0
 28141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28146 ;;Total ram usage:        1 bytes
 28147 ;; Hardware stack levels used:    1
 28148 ;; Hardware stack levels required when called:   18
 28149 ;; This function calls:
 28150 ;;		_UART1_Write
 28151 ;;		_UART1_is_tx_ready
 28152 ;; This function is called by:
 28153 ;;		_fputc
 28154 ;; This function uses a non-reentrant model
 28155 ;;
 28156                           
 28157                           	psect	text124
 28158  00A1A6                     __ptext124:
 28159                           	opt callstack 0
 28160  00A1A6                     _putch:
 28161                           	opt callstack 5
 28162                           
 28163                           ;incstack = 0
 28164                           ;putch@byte stored from wreg
 28165  00A1A6  6F8C               	movwf	putch@byte& (0+255),b
 28166  00A1A8                     
 28167                           ;main.c: 24:     while (!UART1_is_tx_ready());
 28168  00A1A8  EC2E  F051         	call	_UART1_is_tx_ready	;wreg free
 28169  00A1AC  0900               	iorlw	0
 28170  00A1AE  B4D8               	btfsc	status,2,c
 28171  00A1B0  D7FB               	goto	l15990
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;main.c: 25:     UART1_Write(byte);
 28175  00A1B2  518C               	movf	putch@byte& (0+255),w,b
 28176  00A1B4  ECF5  F049         	call	_UART1_Write
 28177                           
 28178                           ; BSR set to: 57
 28179  00A1B8  0012               	return		;funcret
 28180  00A1BA                     __end_of_putch:
 28181                           	opt callstack 0
 28182                           
 28183 ;; *************** function _UART1_is_tx_ready *****************
 28184 ;; Defined at:
 28185 ;;		line 152 in file "mcc_generated_files/uart1.c"
 28186 ;; Parameters:    Size  Location     Type
 28187 ;;		None
 28188 ;; Auto vars:     Size  Location     Type
 28189 ;;		None
 28190 ;; Return value:  Size  Location     Type
 28191 ;;                  1    wreg      _Bool 
 28192 ;; Registers used:
 28193 ;;		wreg, status,2
 28194 ;; Tracked objects:
 28195 ;;		On entry : 0/0
 28196 ;;		On exit  : 3F/0
 28197 ;;		Unchanged: 0/0
 28198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28203 ;;Total ram usage:        0 bytes
 28204 ;; Hardware stack levels used:    1
 28205 ;; Hardware stack levels required when called:   17
 28206 ;; This function calls:
 28207 ;;		Nothing
 28208 ;; This function is called by:
 28209 ;;		_putch
 28210 ;; This function uses a non-reentrant model
 28211 ;;
 28212                           
 28213                           	psect	text125
 28214  00A25C                     __ptext125:
 28215                           	opt callstack 0
 28216  00A25C                     _UART1_is_tx_ready:
 28217                           	opt callstack 5
 28218                           
 28219                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 28220                           
 28221                           ; BSR set to: 57
 28222                           ;incstack = 0
 28223  00A25C  0100               	movlb	0	; () banked
 28224  00A25E  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28225  00A260  B4D8               	btfsc	status,2,c
 28226  00A262  D002               	goto	u15510
 28227  00A264  0E01               	movlw	1
 28228  00A266  0012               	return	
 28229  00A268                     u15510:
 28230  00A268  0E00               	movlw	0
 28231                           
 28232                           ; BSR set to: 0
 28233  00A26A  0012               	return		;funcret
 28234  00A26C                     __end_of_UART1_is_tx_ready:
 28235                           	opt callstack 0
 28236                           
 28237 ;; *************** function _UART1_Write *****************
 28238 ;; Defined at:
 28239 ;;		line 191 in file "mcc_generated_files/uart1.c"
 28240 ;; Parameters:    Size  Location     Type
 28241 ;;  txData          1    wreg     unsigned char 
 28242 ;; Auto vars:     Size  Location     Type
 28243 ;;  txData          1   43[BANK0 ] unsigned char 
 28244 ;; Return value:  Size  Location     Type
 28245 ;;                  1    wreg      void 
 28246 ;; Registers used:
 28247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28248 ;; Tracked objects:
 28249 ;;		On entry : 3F/0
 28250 ;;		On exit  : 3F/39
 28251 ;;		Unchanged: 0/0
 28252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28257 ;;Total ram usage:        1 bytes
 28258 ;; Hardware stack levels used:    1
 28259 ;; Hardware stack levels required when called:   17
 28260 ;; This function calls:
 28261 ;;		Nothing
 28262 ;; This function is called by:
 28263 ;;		_putch
 28264 ;; This function uses a non-reentrant model
 28265 ;;
 28266                           
 28267                           	psect	text126
 28268  0093EA                     __ptext126:
 28269                           	opt callstack 0
 28270  0093EA                     _UART1_Write:
 28271                           	opt callstack 5
 28272                           
 28273                           ; BSR set to: 0
 28274                           ;incstack = 0
 28275                           ;UART1_Write@txData stored from wreg
 28276  0093EA  6F8B               	movwf	UART1_Write@txData& (0+255),b
 28277  0093EC                     
 28278                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28279                           
 28280                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 28281  0093EC  0100               	movlb	0	; () banked
 28282  0093EE  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 28283  0093F0  B4D8               	btfsc	status,2,c
 28284  0093F2  D7FC               	goto	l15972
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 28288  0093F4  0139               	movlb	57	; () banked
 28289  0093F6  B993               	btfsc	147,4,b	;volatile
 28290  0093F8  D004               	goto	l456
 28291                           
 28292                           ; BSR set to: 57
 28293                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 28294  0093FA  0060  F22F  FDEA   	movff	UART1_Write@txData,15850	;volatile
 28295                           
 28296                           ;mcc_generated_files/uart1.c: 200:     }
 28297  009400  D012               	goto	l15988
 28298  009402                     l456:
 28299                           
 28300                           ; BSR set to: 57
 28301                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 28302  009402  9993               	bcf	147,4,b	;volatile
 28303                           
 28304                           ; BSR set to: 57
 28305                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 28306  009404  0E50               	movlw	low _uart1TxBuffer
 28307  009406  0100               	movlb	0	; () banked
 28308  009408  25CF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 28309  00940A  6ED9               	movwf	fsr2l,c
 28310  00940C  6ADA               	clrf	fsr2h,c
 28311  00940E  0E03               	movlw	high _uart1TxBuffer
 28312  009410  22DA               	addwfc	fsr2h,f,c
 28313  009412  0060  F22F  FFDF   	movff	UART1_Write@txData,indf2
 28314                           
 28315                           ; BSR set to: 0
 28316  009418  2BCF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 28320  00941A  0E3F               	movlw	63
 28321  00941C  65CF               	cpfsgt	_uart1TxHead& (0+255),b
 28322  00941E  D002               	goto	l15986
 28323                           
 28324                           ; BSR set to: 0
 28325                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 28326  009420  0E00               	movlw	0
 28327  009422  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 28328  009424                     l15986:
 28329                           
 28330                           ; BSR set to: 0
 28331                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 28332  009424  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 28333  009426                     l15988:
 28334                           
 28335                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 28336  009426  0139               	movlb	57	; () banked
 28337  009428  8993               	bsf	147,4,b	;volatile
 28338                           
 28339                           ; BSR set to: 57
 28340  00942A  0012               	return		;funcret
 28341  00942C                     __end_of_UART1_Write:
 28342                           	opt callstack 0
 28343                           
 28344 ;; *************** function _abs *****************
 28345 ;; Defined at:
 28346 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 28347 ;; Parameters:    Size  Location     Type
 28348 ;;  a               2   61[BANK0 ] int 
 28349 ;; Auto vars:     Size  Location     Type
 28350 ;;		None
 28351 ;; Return value:  Size  Location     Type
 28352 ;;                  2   61[BANK0 ] int 
 28353 ;; Registers used:
 28354 ;;		wreg, status,2, status,0
 28355 ;; Tracked objects:
 28356 ;;		On entry : 3F/0
 28357 ;;		On exit  : 3F/0
 28358 ;;		Unchanged: 0/0
 28359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28364 ;;Total ram usage:        4 bytes
 28365 ;; Hardware stack levels used:    1
 28366 ;; Hardware stack levels required when called:   17
 28367 ;; This function calls:
 28368 ;;		Nothing
 28369 ;; This function is called by:
 28370 ;;		_dtoa
 28371 ;; This function uses a non-reentrant model
 28372 ;;
 28373                           
 28374                           	psect	text127
 28375  0094EE                     __ptext127:
 28376                           	opt callstack 0
 28377  0094EE                     _abs:
 28378                           	opt callstack 9
 28379                           
 28380                           ; BSR set to: 0
 28381                           
 28382                           ; BSR set to: 57
 28383                           ;incstack = 0
 28384  0094EE  BF9E               	btfsc	(abs@a+1)& (0+255),7,b
 28385  0094F0  D005               	goto	u15790
 28386  0094F2  519E               	movf	(abs@a+1)& (0+255),w,b
 28387  0094F4  E114               	bnz	l3827
 28388  0094F6  059D               	decf	abs@a& (0+255),w,b
 28389  0094F8  B0D8               	btfsc	status,0,c
 28390  0094FA  D011               	goto	l3827
 28391  0094FC                     u15790:
 28392                           
 28393                           ; BSR set to: 0
 28394  0094FC  0060  F274  F09F   	movff	abs@a,??_abs
 28395  009502  0060  F278  F0A0   	movff	abs@a+1,??_abs+1
 28396  009508  1F9F               	comf	??_abs& (0+255),f,b
 28397  00950A  1FA0               	comf	(??_abs+1)& (0+255),f,b
 28398  00950C  4B9F               	infsnz	??_abs& (0+255),f,b
 28399  00950E  2BA0               	incf	(??_abs+1)& (0+255),f,b
 28400  009510  0060  F27C  F09D   	movff	??_abs,?_abs
 28401  009516  0060  F280  F09E   	movff	??_abs+1,?_abs+1
 28402  00951C  0012               	return	
 28403  00951E                     l3827:
 28404                           
 28405                           ; BSR set to: 0
 28406  00951E  0060  F274  F09D   	movff	abs@a,?_abs
 28407  009524  0060  F278  F09E   	movff	abs@a+1,?_abs+1
 28408                           
 28409                           ; BSR set to: 0
 28410  00952A  0012               	return		;funcret
 28411  00952C                     __end_of_abs:
 28412                           	opt callstack 0
 28413                           
 28414 ;; *************** function ___aomod *****************
 28415 ;; Defined at:
 28416 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 28417 ;; Parameters:    Size  Location     Type
 28418 ;;  dividend        8   43[BANK0 ] long long 
 28419 ;;  divisor         8   51[BANK0 ] long long 
 28420 ;; Auto vars:     Size  Location     Type
 28421 ;;  sign            1   60[BANK0 ] unsigned char 
 28422 ;;  counter         1   59[BANK0 ] unsigned char 
 28423 ;; Return value:  Size  Location     Type
 28424 ;;                  8   43[BANK0 ] long long 
 28425 ;; Registers used:
 28426 ;;		wreg, status,2, status,0
 28427 ;; Tracked objects:
 28428 ;;		On entry : 3F/0
 28429 ;;		On exit  : 3F/0
 28430 ;;		Unchanged: 0/0
 28431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28432 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28435 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28436 ;;Total ram usage:       18 bytes
 28437 ;; Hardware stack levels used:    1
 28438 ;; Hardware stack levels required when called:   17
 28439 ;; This function calls:
 28440 ;;		Nothing
 28441 ;; This function is called by:
 28442 ;;		_dtoa
 28443 ;; This function uses a non-reentrant model
 28444 ;;
 28445                           
 28446                           	psect	text128
 28447  00734C                     __ptext128:
 28448                           	opt callstack 0
 28449  00734C                     ___aomod:
 28450                           	opt callstack 9
 28451                           
 28452                           ; BSR set to: 0
 28453                           
 28454                           ; BSR set to: 0
 28455                           ;incstack = 0
 28456  00734C  0E00               	movlw	0
 28457  00734E  6F9C               	movwf	___aomod@sign& (0+255),b
 28458                           
 28459                           ; BSR set to: 0
 28460  007350  AF92               	btfss	(___aomod@dividend+7)& (0+255),7,b
 28461  007352  D012               	goto	l16180
 28462                           
 28463                           ; BSR set to: 0
 28464  007354  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 28465  007356  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 28466  007358  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 28467  00735A  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 28468  00735C  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 28469  00735E  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 28470  007360  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 28471  007362  6D8B               	negf	___aomod@dividend& (0+255),b
 28472  007364  0E00               	movlw	0
 28473  007366  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 28474  007368  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 28475  00736A  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 28476  00736C  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 28477  00736E  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 28478  007370  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 28479  007372  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 28480                           
 28481                           ; BSR set to: 0
 28482  007374  0E01               	movlw	1
 28483  007376  6F9C               	movwf	___aomod@sign& (0+255),b
 28484  007378                     l16180:
 28485                           
 28486                           ; BSR set to: 0
 28487  007378  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 28488  00737A  D010               	goto	l16184
 28489                           
 28490                           ; BSR set to: 0
 28491  00737C  1F9A               	comf	(___aomod@divisor+7)& (0+255),f,b
 28492  00737E  1F99               	comf	(___aomod@divisor+6)& (0+255),f,b
 28493  007380  1F98               	comf	(___aomod@divisor+5)& (0+255),f,b
 28494  007382  1F97               	comf	(___aomod@divisor+4)& (0+255),f,b
 28495  007384  1F96               	comf	(___aomod@divisor+3)& (0+255),f,b
 28496  007386  1F95               	comf	(___aomod@divisor+2)& (0+255),f,b
 28497  007388  1F94               	comf	(___aomod@divisor+1)& (0+255),f,b
 28498  00738A  6D93               	negf	___aomod@divisor& (0+255),b
 28499  00738C  0E00               	movlw	0
 28500  00738E  2394               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 28501  007390  2395               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 28502  007392  2396               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 28503  007394  2397               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 28504  007396  2398               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 28505  007398  2399               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 28506  00739A  239A               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 28507  00739C                     l16184:
 28508                           
 28509                           ; BSR set to: 0
 28510  00739C  5193               	movf	___aomod@divisor& (0+255),w,b
 28511  00739E  1194               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 28512  0073A0  1195               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 28513  0073A2  1196               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 28514  0073A4  1197               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 28515  0073A6  1198               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 28516  0073A8  1199               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 28517  0073AA  119A               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 28518  0073AC  B4D8               	btfsc	status,2,c
 28519  0073AE  D03C               	goto	l16200
 28520                           
 28521                           ; BSR set to: 0
 28522  0073B0  0E01               	movlw	1
 28523  0073B2  6F9B               	movwf	___aomod@counter& (0+255),b
 28524  0073B4  D00A               	goto	l16190
 28525  0073B6                     l16188:
 28526                           
 28527                           ; BSR set to: 0
 28528  0073B6  90D8               	bcf	status,0,c
 28529  0073B8  3793               	rlcf	___aomod@divisor& (0+255),f,b
 28530  0073BA  3794               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 28531  0073BC  3795               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 28532  0073BE  3796               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 28533  0073C0  3797               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 28534  0073C2  3798               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 28535  0073C4  3799               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 28536  0073C6  379A               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 28537  0073C8  2B9B               	incf	___aomod@counter& (0+255),f,b
 28538  0073CA                     l16190:
 28539                           
 28540                           ; BSR set to: 0
 28541  0073CA  AF9A               	btfss	(___aomod@divisor+7)& (0+255),7,b
 28542  0073CC  D7F4               	goto	l16188
 28543  0073CE                     u15990:
 28544                           
 28545                           ; BSR set to: 0
 28546  0073CE  5193               	movf	___aomod@divisor& (0+255),w,b
 28547  0073D0  5D8B               	subwf	___aomod@dividend& (0+255),w,b
 28548  0073D2  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 28549  0073D4  598C               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 28550  0073D6  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 28551  0073D8  598D               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 28552  0073DA  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 28553  0073DC  598E               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 28554  0073DE  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 28555  0073E0  598F               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 28556  0073E2  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 28557  0073E4  5990               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 28558  0073E6  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 28559  0073E8  5991               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 28560  0073EA  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 28561  0073EC  5992               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 28562  0073EE  A0D8               	btfss	status,0,c
 28563  0073F0  D010               	goto	l16196
 28564                           
 28565                           ; BSR set to: 0
 28566  0073F2  5193               	movf	___aomod@divisor& (0+255),w,b
 28567  0073F4  5F8B               	subwf	___aomod@dividend& (0+255),f,b
 28568  0073F6  5194               	movf	(___aomod@divisor+1)& (0+255),w,b
 28569  0073F8  5B8C               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 28570  0073FA  5195               	movf	(___aomod@divisor+2)& (0+255),w,b
 28571  0073FC  5B8D               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 28572  0073FE  5196               	movf	(___aomod@divisor+3)& (0+255),w,b
 28573  007400  5B8E               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 28574  007402  5197               	movf	(___aomod@divisor+4)& (0+255),w,b
 28575  007404  5B8F               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 28576  007406  5198               	movf	(___aomod@divisor+5)& (0+255),w,b
 28577  007408  5B90               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 28578  00740A  5199               	movf	(___aomod@divisor+6)& (0+255),w,b
 28579  00740C  5B91               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 28580  00740E  519A               	movf	(___aomod@divisor+7)& (0+255),w,b
 28581  007410  5B92               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 28582  007412                     l16196:
 28583                           
 28584                           ; BSR set to: 0
 28585  007412  90D8               	bcf	status,0,c
 28586  007414  339A               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 28587  007416  3399               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 28588  007418  3398               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 28589  00741A  3397               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 28590  00741C  3396               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 28591  00741E  3395               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 28592  007420  3394               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 28593  007422  3393               	rrcf	___aomod@divisor& (0+255),f,b
 28594                           
 28595                           ; BSR set to: 0
 28596  007424  2F9B               	decfsz	___aomod@counter& (0+255),f,b
 28597  007426  D7D3               	goto	u15990
 28598  007428                     l16200:
 28599                           
 28600                           ; BSR set to: 0
 28601  007428  519C               	movf	___aomod@sign& (0+255),w,b
 28602  00742A  B4D8               	btfsc	status,2,c
 28603  00742C  D010               	goto	l16204
 28604                           
 28605                           ; BSR set to: 0
 28606  00742E  1F92               	comf	(___aomod@dividend+7)& (0+255),f,b
 28607  007430  1F91               	comf	(___aomod@dividend+6)& (0+255),f,b
 28608  007432  1F90               	comf	(___aomod@dividend+5)& (0+255),f,b
 28609  007434  1F8F               	comf	(___aomod@dividend+4)& (0+255),f,b
 28610  007436  1F8E               	comf	(___aomod@dividend+3)& (0+255),f,b
 28611  007438  1F8D               	comf	(___aomod@dividend+2)& (0+255),f,b
 28612  00743A  1F8C               	comf	(___aomod@dividend+1)& (0+255),f,b
 28613  00743C  6D8B               	negf	___aomod@dividend& (0+255),b
 28614  00743E  0E00               	movlw	0
 28615  007440  238C               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 28616  007442  238D               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 28617  007444  238E               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 28618  007446  238F               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 28619  007448  2390               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 28620  00744A  2391               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 28621  00744C  2392               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 28622  00744E                     l16204:
 28623                           
 28624                           ; BSR set to: 0
 28625  00744E  0060  F22C  F08B   	movff	___aomod@dividend,?___aomod
 28626  007454  0060  F230  F08C   	movff	___aomod@dividend+1,?___aomod+1
 28627  00745A  0060  F234  F08D   	movff	___aomod@dividend+2,?___aomod+2
 28628  007460  0060  F238  F08E   	movff	___aomod@dividend+3,?___aomod+3
 28629  007466  0060  F23C  F08F   	movff	___aomod@dividend+4,?___aomod+4
 28630  00746C  0060  F240  F090   	movff	___aomod@dividend+5,?___aomod+5
 28631  007472  0060  F244  F091   	movff	___aomod@dividend+6,?___aomod+6
 28632  007478  0060  F248  F092   	movff	___aomod@dividend+7,?___aomod+7
 28633                           
 28634                           ; BSR set to: 0
 28635  00747E  0012               	return		;funcret
 28636  007480                     __end_of___aomod:
 28637                           	opt callstack 0
 28638                           
 28639 ;; *************** function ___aodiv *****************
 28640 ;; Defined at:
 28641 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 28642 ;; Parameters:    Size  Location     Type
 28643 ;;  dividend        8   43[BANK0 ] long long 
 28644 ;;  divisor         8   51[BANK0 ] long long 
 28645 ;; Auto vars:     Size  Location     Type
 28646 ;;  quotient        8   61[BANK0 ] long long 
 28647 ;;  sign            1   60[BANK0 ] unsigned char 
 28648 ;;  counter         1   59[BANK0 ] unsigned char 
 28649 ;; Return value:  Size  Location     Type
 28650 ;;                  8   43[BANK0 ] long long 
 28651 ;; Registers used:
 28652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28653 ;; Tracked objects:
 28654 ;;		On entry : 3F/0
 28655 ;;		On exit  : 3F/0
 28656 ;;		Unchanged: 0/0
 28657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28658 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28659 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28661 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28662 ;;Total ram usage:       26 bytes
 28663 ;; Hardware stack levels used:    1
 28664 ;; Hardware stack levels required when called:   17
 28665 ;; This function calls:
 28666 ;;		Nothing
 28667 ;; This function is called by:
 28668 ;;		_dtoa
 28669 ;; This function uses a non-reentrant model
 28670 ;;
 28671                           
 28672                           	psect	text129
 28673  00709C                     __ptext129:
 28674                           	opt callstack 0
 28675  00709C                     ___aodiv:
 28676                           	opt callstack 9
 28677                           
 28678                           ; BSR set to: 0
 28679                           
 28680                           ; BSR set to: 0
 28681                           ;incstack = 0
 28682  00709C  0E00               	movlw	0
 28683  00709E  6F9C               	movwf	___aodiv@sign& (0+255),b
 28684                           
 28685                           ; BSR set to: 0
 28686  0070A0  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 28687  0070A2  D012               	goto	l16136
 28688                           
 28689                           ; BSR set to: 0
 28690  0070A4  1F9A               	comf	(___aodiv@divisor+7)& (0+255),f,b
 28691  0070A6  1F99               	comf	(___aodiv@divisor+6)& (0+255),f,b
 28692  0070A8  1F98               	comf	(___aodiv@divisor+5)& (0+255),f,b
 28693  0070AA  1F97               	comf	(___aodiv@divisor+4)& (0+255),f,b
 28694  0070AC  1F96               	comf	(___aodiv@divisor+3)& (0+255),f,b
 28695  0070AE  1F95               	comf	(___aodiv@divisor+2)& (0+255),f,b
 28696  0070B0  1F94               	comf	(___aodiv@divisor+1)& (0+255),f,b
 28697  0070B2  6D93               	negf	___aodiv@divisor& (0+255),b
 28698  0070B4  0E00               	movlw	0
 28699  0070B6  2394               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 28700  0070B8  2395               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 28701  0070BA  2396               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 28702  0070BC  2397               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 28703  0070BE  2398               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 28704  0070C0  2399               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 28705  0070C2  239A               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 28706                           
 28707                           ; BSR set to: 0
 28708  0070C4  0E01               	movlw	1
 28709  0070C6  6F9C               	movwf	___aodiv@sign& (0+255),b
 28710  0070C8                     l16136:
 28711                           
 28712                           ; BSR set to: 0
 28713  0070C8  AF92               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 28714  0070CA  D012               	goto	l16142
 28715                           
 28716                           ; BSR set to: 0
 28717  0070CC  1F92               	comf	(___aodiv@dividend+7)& (0+255),f,b
 28718  0070CE  1F91               	comf	(___aodiv@dividend+6)& (0+255),f,b
 28719  0070D0  1F90               	comf	(___aodiv@dividend+5)& (0+255),f,b
 28720  0070D2  1F8F               	comf	(___aodiv@dividend+4)& (0+255),f,b
 28721  0070D4  1F8E               	comf	(___aodiv@dividend+3)& (0+255),f,b
 28722  0070D6  1F8D               	comf	(___aodiv@dividend+2)& (0+255),f,b
 28723  0070D8  1F8C               	comf	(___aodiv@dividend+1)& (0+255),f,b
 28724  0070DA  6D8B               	negf	___aodiv@dividend& (0+255),b
 28725  0070DC  0E00               	movlw	0
 28726  0070DE  238C               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 28727  0070E0  238D               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 28728  0070E2  238E               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 28729  0070E4  238F               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 28730  0070E6  2390               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 28731  0070E8  2391               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 28732  0070EA  2392               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 28733                           
 28734                           ; BSR set to: 0
 28735  0070EC  0E01               	movlw	1
 28736  0070EE  1B9C               	xorwf	___aodiv@sign& (0+255),f,b
 28737  0070F0                     l16142:
 28738                           
 28739                           ; BSR set to: 0
 28740  0070F0  EE20  F09D         	lfsr	2,___aodiv@quotient
 28741  0070F4  0E07               	movlw	7
 28742  0070F6                     u15911:
 28743  0070F6  6ADE               	clrf	postinc2,c
 28744  0070F8  06E8               	decf	wreg,f,c
 28745  0070FA  E2FD               	bc	u15911
 28746                           
 28747                           ; BSR set to: 0
 28748  0070FC  5193               	movf	___aodiv@divisor& (0+255),w,b
 28749  0070FE  1194               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 28750  007100  1195               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 28751  007102  1196               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 28752  007104  1197               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 28753  007106  1198               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 28754  007108  1199               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 28755  00710A  119A               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 28756  00710C  B4D8               	btfsc	status,2,c
 28757  00710E  D046               	goto	l16164
 28758                           
 28759                           ; BSR set to: 0
 28760  007110  0E01               	movlw	1
 28761  007112  6F9B               	movwf	___aodiv@counter& (0+255),b
 28762  007114  D00A               	goto	l16150
 28763  007116                     l16148:
 28764                           
 28765                           ; BSR set to: 0
 28766  007116  90D8               	bcf	status,0,c
 28767  007118  3793               	rlcf	___aodiv@divisor& (0+255),f,b
 28768  00711A  3794               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 28769  00711C  3795               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 28770  00711E  3796               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 28771  007120  3797               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 28772  007122  3798               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 28773  007124  3799               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 28774  007126  379A               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 28775  007128  2B9B               	incf	___aodiv@counter& (0+255),f,b
 28776  00712A                     l16150:
 28777                           
 28778                           ; BSR set to: 0
 28779  00712A  AF9A               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 28780  00712C  D7F4               	goto	l16148
 28781  00712E                     u15930:
 28782                           
 28783                           ; BSR set to: 0
 28784  00712E  90D8               	bcf	status,0,c
 28785  007130  379D               	rlcf	___aodiv@quotient& (0+255),f,b
 28786  007132  379E               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 28787  007134  379F               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 28788  007136  37A0               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 28789  007138  37A1               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 28790  00713A  37A2               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 28791  00713C  37A3               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 28792  00713E  37A4               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 28793                           
 28794                           ; BSR set to: 0
 28795  007140  5193               	movf	___aodiv@divisor& (0+255),w,b
 28796  007142  5D8B               	subwf	___aodiv@dividend& (0+255),w,b
 28797  007144  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 28798  007146  598C               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 28799  007148  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 28800  00714A  598D               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 28801  00714C  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 28802  00714E  598E               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 28803  007150  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 28804  007152  598F               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 28805  007154  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 28806  007156  5990               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 28807  007158  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 28808  00715A  5991               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 28809  00715C  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 28810  00715E  5992               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 28811  007160  A0D8               	btfss	status,0,c
 28812  007162  D011               	goto	l16160
 28813                           
 28814                           ; BSR set to: 0
 28815  007164  5193               	movf	___aodiv@divisor& (0+255),w,b
 28816  007166  5F8B               	subwf	___aodiv@dividend& (0+255),f,b
 28817  007168  5194               	movf	(___aodiv@divisor+1)& (0+255),w,b
 28818  00716A  5B8C               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 28819  00716C  5195               	movf	(___aodiv@divisor+2)& (0+255),w,b
 28820  00716E  5B8D               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 28821  007170  5196               	movf	(___aodiv@divisor+3)& (0+255),w,b
 28822  007172  5B8E               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 28823  007174  5197               	movf	(___aodiv@divisor+4)& (0+255),w,b
 28824  007176  5B8F               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 28825  007178  5198               	movf	(___aodiv@divisor+5)& (0+255),w,b
 28826  00717A  5B90               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 28827  00717C  5199               	movf	(___aodiv@divisor+6)& (0+255),w,b
 28828  00717E  5B91               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 28829  007180  519A               	movf	(___aodiv@divisor+7)& (0+255),w,b
 28830  007182  5B92               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 28831                           
 28832                           ; BSR set to: 0
 28833  007184  819D               	bsf	___aodiv@quotient& (0+255),0,b
 28834  007186                     l16160:
 28835                           
 28836                           ; BSR set to: 0
 28837  007186  90D8               	bcf	status,0,c
 28838  007188  339A               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 28839  00718A  3399               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 28840  00718C  3398               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 28841  00718E  3397               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 28842  007190  3396               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 28843  007192  3395               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 28844  007194  3394               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 28845  007196  3393               	rrcf	___aodiv@divisor& (0+255),f,b
 28846                           
 28847                           ; BSR set to: 0
 28848  007198  2F9B               	decfsz	___aodiv@counter& (0+255),f,b
 28849  00719A  D7C9               	goto	u15930
 28850  00719C                     l16164:
 28851                           
 28852                           ; BSR set to: 0
 28853  00719C  519C               	movf	___aodiv@sign& (0+255),w,b
 28854  00719E  B4D8               	btfsc	status,2,c
 28855  0071A0  D010               	goto	l16168
 28856                           
 28857                           ; BSR set to: 0
 28858  0071A2  1FA4               	comf	(___aodiv@quotient+7)& (0+255),f,b
 28859  0071A4  1FA3               	comf	(___aodiv@quotient+6)& (0+255),f,b
 28860  0071A6  1FA2               	comf	(___aodiv@quotient+5)& (0+255),f,b
 28861  0071A8  1FA1               	comf	(___aodiv@quotient+4)& (0+255),f,b
 28862  0071AA  1FA0               	comf	(___aodiv@quotient+3)& (0+255),f,b
 28863  0071AC  1F9F               	comf	(___aodiv@quotient+2)& (0+255),f,b
 28864  0071AE  1F9E               	comf	(___aodiv@quotient+1)& (0+255),f,b
 28865  0071B0  6D9D               	negf	___aodiv@quotient& (0+255),b
 28866  0071B2  0E00               	movlw	0
 28867  0071B4  239E               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 28868  0071B6  239F               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 28869  0071B8  23A0               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 28870  0071BA  23A1               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 28871  0071BC  23A2               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 28872  0071BE  23A3               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 28873  0071C0  23A4               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 28874  0071C2                     l16168:
 28875                           
 28876                           ; BSR set to: 0
 28877  0071C2  0060  F274  F08B   	movff	___aodiv@quotient,?___aodiv
 28878  0071C8  0060  F278  F08C   	movff	___aodiv@quotient+1,?___aodiv+1
 28879  0071CE  0060  F27C  F08D   	movff	___aodiv@quotient+2,?___aodiv+2
 28880  0071D4  0060  F280  F08E   	movff	___aodiv@quotient+3,?___aodiv+3
 28881  0071DA  0060  F284  F08F   	movff	___aodiv@quotient+4,?___aodiv+4
 28882  0071E0  0060  F288  F090   	movff	___aodiv@quotient+5,?___aodiv+5
 28883  0071E6  0060  F28C  F091   	movff	___aodiv@quotient+6,?___aodiv+6
 28884  0071EC  0060  F290  F092   	movff	___aodiv@quotient+7,?___aodiv+7
 28885                           
 28886                           ; BSR set to: 0
 28887  0071F2  0012               	return		;funcret
 28888  0071F4                     __end_of___aodiv:
 28889                           	opt callstack 0
 28890                           
 28891 ;; *************** function _atoi *****************
 28892 ;; Defined at:
 28893 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 28894 ;; Parameters:    Size  Location     Type
 28895 ;;  s               2   65[BANK0 ] PTR const unsigned char 
 28896 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 28897 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 28898 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 28899 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 28900 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 28901 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 28902 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 28903 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 28904 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 28905 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 28906 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 28907 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 28908 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 28909 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 28910 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 28911 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 28912 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 28913 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 28914 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 28915 ;;		 -> STR_1(27), 
 28916 ;; Auto vars:     Size  Location     Type
 28917 ;;  n               2    7[BANK1 ] int 
 28918 ;;  neg             2    0[BANK1 ] int 
 28919 ;; Return value:  Size  Location     Type
 28920 ;;                  2   65[BANK0 ] int 
 28921 ;; Registers used:
 28922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28923 ;; Tracked objects:
 28924 ;;		On entry : 3F/0
 28925 ;;		On exit  : 3E/0
 28926 ;;		Unchanged: 0/0
 28927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28929 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28931 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28932 ;;Total ram usage:       15 bytes
 28933 ;; Hardware stack levels used:    1
 28934 ;; Hardware stack levels required when called:   18
 28935 ;; This function calls:
 28936 ;;		___wmul
 28937 ;;		_isdigit
 28938 ;;		_isspace
 28939 ;; This function is called by:
 28940 ;;		_vfpfcnvrt
 28941 ;; This function uses a non-reentrant model
 28942 ;;
 28943                           
 28944                           	psect	text130
 28945  006C38                     __ptext130:
 28946                           	opt callstack 0
 28947  006C38                     _atoi:
 28948                           	opt callstack 9
 28949                           
 28950                           ; BSR set to: 0
 28951                           
 28952                           ; BSR set to: 0
 28953                           ;incstack = 0
 28954  006C38  0E00               	movlw	0
 28955  006C3A  0101               	movlb	1	; () banked
 28956  006C3C  6F08               	movwf	(atoi@n+1)& (0+255),b
 28957  006C3E  0E00               	movlw	0
 28958  006C40  6F07               	movwf	atoi@n& (0+255),b
 28959  006C42  0E00               	movlw	0
 28960  006C44  6F01               	movwf	(atoi@neg+1)& (0+255),b
 28961  006C46  0E00               	movlw	0
 28962  006C48  6F00               	movwf	atoi@neg& (0+255),b
 28963  006C4A  D003               	goto	l16374
 28964  006C4C                     l16372:
 28965                           
 28966                           ; BSR set to: 1
 28967  006C4C  0100               	movlb	0	; () banked
 28968  006C4E  4BA1               	infsnz	atoi@s& (0+255),f,b
 28969  006C50  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 28970  006C52                     l16374:
 28971  006C52  0E01               	movlw	1
 28972  006C54  0101               	movlb	1	; () banked
 28973  006C56  6F06               	movwf	_atoi$5375& (0+255),b
 28974                           
 28975                           ; BSR set to: 1
 28976  006C58  0060  F287  FFF6   	movff	atoi@s,tblptrl
 28977  006C5E  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 28978  006C64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28979  006C64  6AF8               	clrf	tblptru,c
 28980  006C66                     	endif
 28981  006C66                     	if	0	;tblptru may be non-zero
 28982  006C66                     	endif
 28983  006C66  0008               	tblrd		*
 28984  006C68  50F5               	movf	tablat,w,c
 28985  006C6A  0A20               	xorlw	32
 28986  006C6C  B4D8               	btfsc	status,2,c
 28987  006C6E  D01D               	goto	l16382
 28988                           
 28989                           ; BSR set to: 1
 28990  006C70  0EF7               	movlw	247
 28991  006C72  0100               	movlb	0	; () banked
 28992  006C74  6FA3               	movwf	??_atoi& (0+255),b
 28993  006C76  0EFF               	movlw	255
 28994  006C78  6FA4               	movwf	(??_atoi+1)& (0+255),b
 28995  006C7A  0060  F287  FFF6   	movff	atoi@s,tblptrl
 28996  006C80  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 28997  006C86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28998  006C86  6AF8               	clrf	tblptru,c
 28999  006C88                     	endif
 29000  006C88                     	if	0	;tblptru may be non-zero
 29001  006C88                     	endif
 29002  006C88  0008               	tblrd		*
 29003  006C8A  50F5               	movf	tablat,w,c
 29004  006C8C  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29005  006C8E  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29006  006C90  51A3               	movf	??_atoi& (0+255),w,b
 29007  006C92  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29008  006C94  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29009  006C96  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29010  006C98  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29011  006C9A  E104               	bnz	u16410
 29012  006C9C  0E05               	movlw	5
 29013  006C9E  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29014  006CA0  A0D8               	btfss	status,0,c
 29015  006CA2  D003               	goto	l16382
 29016  006CA4                     u16410:
 29017                           
 29018                           ; BSR set to: 0
 29019  006CA4  0E00               	movlw	0
 29020  006CA6  0101               	movlb	1	; () banked
 29021  006CA8  6F06               	movwf	_atoi$5375& (0+255),b
 29022  006CAA                     l16382:
 29023  006CAA  0060  F418  F102   	movff	_atoi$5375,_atoi$5374
 29024  006CB0  0101               	movlb	1	; () banked
 29025  006CB2  6B03               	clrf	(_atoi$5374+1)& (0+255),b
 29026                           
 29027                           ; BSR set to: 1
 29028  006CB4  5102               	movf	_atoi$5374& (0+255),w,b
 29029  006CB6  1103               	iorwf	(_atoi$5374+1)& (0+255),w,b
 29030  006CB8  B4D8               	btfsc	status,2,c
 29031  006CBA  D00A               	goto	l16392
 29032  006CBC  D7C7               	goto	l16372
 29033  006CBE                     l16388:
 29034                           
 29035                           ; BSR set to: 0
 29036  006CBE  0E00               	movlw	0
 29037  006CC0  0101               	movlb	1	; () banked
 29038  006CC2  6F01               	movwf	(atoi@neg+1)& (0+255),b
 29039  006CC4  0E01               	movlw	1
 29040  006CC6  6F00               	movwf	atoi@neg& (0+255),b
 29041  006CC8                     l16390:
 29042  006CC8  0100               	movlb	0	; () banked
 29043  006CCA  4BA1               	infsnz	atoi@s& (0+255),f,b
 29044  006CCC  2BA2               	incf	(atoi@s+1)& (0+255),f,b
 29045  006CCE  D03B               	goto	l16398
 29046  006CD0                     l16392:
 29047                           
 29048                           ; BSR set to: 1
 29049  006CD0  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29050  006CD6  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29051  006CDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29052  006CDC  6AF8               	clrf	tblptru,c
 29053  006CDE                     	endif
 29054  006CDE                     	if	0	;tblptru may be non-zero
 29055  006CDE                     	endif
 29056  006CDE  0008               	tblrd		*
 29057  006CE0  50F5               	movf	tablat,w,c
 29058  006CE2  0100               	movlb	0	; () banked
 29059  006CE4  6FA3               	movwf	??_atoi& (0+255),b
 29060  006CE6  6BA4               	clrf	(??_atoi+1)& (0+255),b
 29061                           
 29062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29063                           ; Switch size 1, requested type "simple"
 29064                           ; Number of cases is 1, Range of values is 0 to 0
 29065                           ; switch strategies available:
 29066                           ; Name         Instructions Cycles
 29067                           ; simple_byte            4     3 (average)
 29068                           ;	Chosen strategy is simple_byte
 29069  006CE8  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29070  006CEA  0A00               	xorlw	0	; case 0
 29071  006CEC  A4D8               	btfss	status,2,c
 29072  006CEE  D02B               	goto	l16398
 29073                           
 29074                           ; BSR set to: 0
 29075                           ; Switch size 1, requested type "simple"
 29076                           ; Number of cases is 2, Range of values is 43 to 45
 29077                           ; switch strategies available:
 29078                           ; Name         Instructions Cycles
 29079                           ; simple_byte            7     4 (average)
 29080                           ;	Chosen strategy is simple_byte
 29081  006CF0  51A3               	movf	??_atoi& (0+255),w,b
 29082  006CF2  0A2B               	xorlw	43	; case 43
 29083  006CF4  B4D8               	btfsc	status,2,c
 29084  006CF6  D7E8               	goto	l16390
 29085  006CF8  0A06               	xorlw	6	; case 45
 29086  006CFA  B4D8               	btfsc	status,2,c
 29087  006CFC  D7E0               	goto	l16388
 29088  006CFE  D023               	goto	l16398
 29089  006D00                     l16394:
 29090                           
 29091                           ; BSR set to: 1
 29092  006D00  0060  F41C  F09B   	movff	atoi@n,___wmul@multiplier
 29093  006D06  0060  F420  F09C   	movff	atoi@n+1,___wmul@multiplier+1
 29094  006D0C  0E00               	movlw	0
 29095  006D0E  0100               	movlb	0	; () banked
 29096  006D10  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29097  006D12  0E0A               	movlw	10
 29098  006D14  6F9D               	movwf	___wmul@multiplicand& (0+255),b
 29099  006D16  EC21  F04D         	call	___wmul	;wreg free
 29100  006D1A  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29101  006D20  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29102  006D26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29103  006D26  6AF8               	clrf	tblptru,c
 29104  006D28                     	endif
 29105  006D28                     	if	0	;tblptru may be non-zero
 29106  006D28                     	endif
 29107  006D28  0008               	tblrd		*
 29108  006D2A  50F5               	movf	tablat,w,c
 29109  006D2C  5F9B               	subwf	?___wmul& (0+255),f,b
 29110  006D2E  0E00               	movlw	0
 29111  006D30  5B9C               	subwfb	(?___wmul+1)& (0+255),f,b
 29112  006D32  0E30               	movlw	48
 29113  006D34  259B               	addwf	?___wmul& (0+255),w,b
 29114  006D36  0101               	movlb	1	; () banked
 29115  006D38  6F07               	movwf	atoi@n& (0+255),b
 29116  006D3A  0E00               	movlw	0
 29117  006D3C  0100               	movlb	0	; () banked
 29118  006D3E  219C               	addwfc	(?___wmul+1)& (0+255),w,b
 29119  006D40  0101               	movlb	1	; () banked
 29120  006D42  6F08               	movwf	(atoi@n+1)& (0+255),b
 29121  006D44  D7C1               	goto	l16390
 29122  006D46                     l16398:
 29123                           
 29124                           ; BSR set to: 0
 29125  006D46  0ED0               	movlw	208
 29126  006D48  6FA3               	movwf	??_atoi& (0+255),b
 29127  006D4A  0EFF               	movlw	255
 29128  006D4C  6FA4               	movwf	(??_atoi+1)& (0+255),b
 29129  006D4E  0060  F287  FFF6   	movff	atoi@s,tblptrl
 29130  006D54  0060  F28B  FFF7   	movff	atoi@s+1,tblptrh
 29131  006D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29132  006D5A  6AF8               	clrf	tblptru,c
 29133  006D5C                     	endif
 29134  006D5C                     	if	0	;tblptru may be non-zero
 29135  006D5C                     	endif
 29136  006D5C  0008               	tblrd		*
 29137  006D5E  50F5               	movf	tablat,w,c
 29138  006D60  6FA5               	movwf	(??_atoi+2)& (0+255),b
 29139  006D62  6BA6               	clrf	(??_atoi+3)& (0+255),b
 29140  006D64  51A3               	movf	??_atoi& (0+255),w,b
 29141  006D66  27A5               	addwf	(??_atoi+2)& (0+255),f,b
 29142  006D68  51A4               	movf	(??_atoi+1)& (0+255),w,b
 29143  006D6A  23A6               	addwfc	(??_atoi+3)& (0+255),f,b
 29144  006D6C  51A6               	movf	(??_atoi+3)& (0+255),w,b
 29145  006D6E  E106               	bnz	u16430
 29146  006D70  0E0A               	movlw	10
 29147  006D72  5DA5               	subwf	(??_atoi+2)& (0+255),w,b
 29148  006D74  B0D8               	btfsc	status,0,c
 29149  006D76  D002               	goto	u16430
 29150  006D78  0E01               	movlw	1
 29151  006D7A  D001               	goto	u16440
 29152  006D7C                     u16430:
 29153  006D7C  0E00               	movlw	0
 29154  006D7E                     u16440:
 29155  006D7E  0101               	movlb	1	; () banked
 29156  006D80  6F04               	movwf	_atoi$5376& (0+255),b
 29157  006D82  6B05               	clrf	(_atoi$5376+1)& (0+255),b
 29158                           
 29159                           ; BSR set to: 1
 29160  006D84  5104               	movf	_atoi$5376& (0+255),w,b
 29161  006D86  1105               	iorwf	(_atoi$5376+1)& (0+255),w,b
 29162  006D88  A4D8               	btfss	status,2,c
 29163  006D8A  D7BA               	goto	l16394
 29164                           
 29165                           ; BSR set to: 1
 29166  006D8C  5100               	movf	atoi@neg& (0+255),w,b
 29167  006D8E  1101               	iorwf	(atoi@neg+1)& (0+255),w,b
 29168  006D90  A4D8               	btfss	status,2,c
 29169  006D92  D012               	goto	l3858
 29170                           
 29171                           ; BSR set to: 1
 29172  006D94  0060  F41C  F0A3   	movff	atoi@n,??_atoi
 29173  006D9A  0060  F420  F0A4   	movff	atoi@n+1,??_atoi+1
 29174  006DA0  0100               	movlb	0	; () banked
 29175  006DA2  1FA3               	comf	??_atoi& (0+255),f,b
 29176  006DA4  1FA4               	comf	(??_atoi+1)& (0+255),f,b
 29177  006DA6  4BA3               	infsnz	??_atoi& (0+255),f,b
 29178  006DA8  2BA4               	incf	(??_atoi+1)& (0+255),f,b
 29179  006DAA  0060  F28C  F0A1   	movff	??_atoi,?_atoi
 29180  006DB0  0060  F290  F0A2   	movff	??_atoi+1,?_atoi+1
 29181  006DB6  0012               	return	
 29182  006DB8                     l3858:
 29183                           
 29184                           ; BSR set to: 1
 29185  006DB8  0060  F41C  F0A1   	movff	atoi@n,?_atoi
 29186  006DBE  0060  F420  F0A2   	movff	atoi@n+1,?_atoi+1
 29187  006DC4  0012               	return		;funcret
 29188  006DC6                     __end_of_atoi:
 29189                           	opt callstack 0
 29190                           
 29191 ;; *************** function _isspace *****************
 29192 ;; Defined at:
 29193 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 29194 ;; Parameters:    Size  Location     Type
 29195 ;;  c               2   43[BANK0 ] int 
 29196 ;; Auto vars:     Size  Location     Type
 29197 ;;		None
 29198 ;; Return value:  Size  Location     Type
 29199 ;;                  2   43[BANK0 ] int 
 29200 ;; Registers used:
 29201 ;;		wreg, status,2, status,0
 29202 ;; Tracked objects:
 29203 ;;		On entry : 0/0
 29204 ;;		On exit  : 3F/0
 29205 ;;		Unchanged: 0/0
 29206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29210 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29211 ;;Total ram usage:        7 bytes
 29212 ;; Hardware stack levels used:    1
 29213 ;; Hardware stack levels required when called:   17
 29214 ;; This function calls:
 29215 ;;		Nothing
 29216 ;; This function is called by:
 29217 ;;		_atoi
 29218 ;; This function uses a non-reentrant model
 29219 ;;
 29220                           
 29221                           	psect	text131
 29222  00931C                     __ptext131:
 29223                           	opt callstack 0
 29224  00931C                     _isspace:
 29225                           	opt callstack 9
 29226                           
 29227                           ;incstack = 0
 29228  00931C  0E01               	movlw	1
 29229  00931E  0100               	movlb	0	; () banked
 29230  009320  6F91               	movwf	_isspace$5401& (0+255),b
 29231                           
 29232                           ; BSR set to: 0
 29233  009322  0E20               	movlw	32
 29234  009324  198B               	xorwf	isspace@c& (0+255),w,b
 29235  009326  118C               	iorwf	(isspace@c+1)& (0+255),w,b
 29236  009328  B4D8               	btfsc	status,2,c
 29237  00932A  D016               	goto	l16216
 29238                           
 29239                           ; BSR set to: 0
 29240  00932C  0EF7               	movlw	247
 29241  00932E  6F8D               	movwf	??_isspace& (0+255),b
 29242  009330  0EFF               	movlw	255
 29243  009332  6F8E               	movwf	(??_isspace+1)& (0+255),b
 29244  009334  0060  F22C  F08F   	movff	isspace@c,??_isspace+2
 29245  00933A  0060  F230  F090   	movff	isspace@c+1,??_isspace+3
 29246  009340  518D               	movf	??_isspace& (0+255),w,b
 29247  009342  278F               	addwf	(??_isspace+2)& (0+255),f,b
 29248  009344  518E               	movf	(??_isspace+1)& (0+255),w,b
 29249  009346  2390               	addwfc	(??_isspace+3)& (0+255),f,b
 29250  009348  5190               	movf	(??_isspace+3)& (0+255),w,b
 29251  00934A  E104               	bnz	u16030
 29252  00934C  0E05               	movlw	5
 29253  00934E  5D8F               	subwf	(??_isspace+2)& (0+255),w,b
 29254  009350  A0D8               	btfss	status,0,c
 29255  009352  D002               	goto	l16216
 29256  009354                     u16030:
 29257                           
 29258                           ; BSR set to: 0
 29259  009354  0E00               	movlw	0
 29260  009356  6F91               	movwf	_isspace$5401& (0+255),b
 29261  009358                     l16216:
 29262                           
 29263                           ; BSR set to: 0
 29264  009358  0060  F244  F08B   	movff	_isspace$5401,?_isspace
 29265  00935E  6B8C               	clrf	(?_isspace+1)& (0+255),b
 29266                           
 29267                           ; BSR set to: 0
 29268  009360  0012               	return		;funcret
 29269  009362                     __end_of_isspace:
 29270                           	opt callstack 0
 29271                           
 29272 ;; *************** function _isdigit *****************
 29273 ;; Defined at:
 29274 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 29275 ;; Parameters:    Size  Location     Type
 29276 ;;  c               2   43[BANK0 ] int 
 29277 ;; Auto vars:     Size  Location     Type
 29278 ;;		None
 29279 ;; Return value:  Size  Location     Type
 29280 ;;                  2   43[BANK0 ] int 
 29281 ;; Registers used:
 29282 ;;		wreg, status,2, status,0
 29283 ;; Tracked objects:
 29284 ;;		On entry : 0/0
 29285 ;;		On exit  : 3F/0
 29286 ;;		Unchanged: 0/0
 29287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29291 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29292 ;;Total ram usage:        6 bytes
 29293 ;; Hardware stack levels used:    1
 29294 ;; Hardware stack levels required when called:   17
 29295 ;; This function calls:
 29296 ;;		Nothing
 29297 ;; This function is called by:
 29298 ;;		_vfpfcnvrt
 29299 ;;		_atoi
 29300 ;; This function uses a non-reentrant model
 29301 ;;
 29302                           
 29303                           	psect	text132
 29304  0097DE                     __ptext132:
 29305                           	opt callstack 0
 29306  0097DE                     _isdigit:
 29307                           	opt callstack 10
 29308                           
 29309                           ; BSR set to: 0
 29310                           ;incstack = 0
 29311  0097DE  0ED0               	movlw	208
 29312  0097E0  0100               	movlb	0	; () banked
 29313  0097E2  6F8D               	movwf	??_isdigit& (0+255),b
 29314  0097E4  0EFF               	movlw	255
 29315  0097E6  6F8E               	movwf	(??_isdigit+1)& (0+255),b
 29316  0097E8  0060  F22C  F08F   	movff	isdigit@c,??_isdigit+2
 29317  0097EE  0060  F230  F090   	movff	isdigit@c+1,??_isdigit+3
 29318  0097F4  518D               	movf	??_isdigit& (0+255),w,b
 29319  0097F6  278F               	addwf	(??_isdigit+2)& (0+255),f,b
 29320  0097F8  518E               	movf	(??_isdigit+1)& (0+255),w,b
 29321  0097FA  2390               	addwfc	(??_isdigit+3)& (0+255),f,b
 29322  0097FC  5190               	movf	(??_isdigit+3)& (0+255),w,b
 29323  0097FE  E106               	bnz	u15870
 29324  009800  0E0A               	movlw	10
 29325  009802  5D8F               	subwf	(??_isdigit+2)& (0+255),w,b
 29326  009804  B0D8               	btfsc	status,0,c
 29327  009806  D002               	goto	u15870
 29328  009808  0E01               	movlw	1
 29329  00980A  D001               	goto	u15880
 29330  00980C                     u15870:
 29331  00980C  0E00               	movlw	0
 29332  00980E                     u15880:
 29333  00980E  6F8B               	movwf	?_isdigit& (0+255),b
 29334  009810  6B8C               	clrf	(?_isdigit+1)& (0+255),b
 29335                           
 29336                           ; BSR set to: 0
 29337  009812  0012               	return		;funcret
 29338  009814                     __end_of_isdigit:
 29339                           	opt callstack 0
 29340                           
 29341 ;; *************** function ___wmul *****************
 29342 ;; Defined at:
 29343 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 29344 ;; Parameters:    Size  Location     Type
 29345 ;;  multiplier      2   59[BANK0 ] unsigned int 
 29346 ;;  multiplicand    2   61[BANK0 ] unsigned int 
 29347 ;; Auto vars:     Size  Location     Type
 29348 ;;  product         2   63[BANK0 ] unsigned int 
 29349 ;; Return value:  Size  Location     Type
 29350 ;;                  2   59[BANK0 ] unsigned int 
 29351 ;; Registers used:
 29352 ;;		wreg, status,2, status,0, prodl, prodh
 29353 ;; Tracked objects:
 29354 ;;		On entry : 3C/0
 29355 ;;		On exit  : 3F/0
 29356 ;;		Unchanged: 0/0
 29357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29362 ;;Total ram usage:        6 bytes
 29363 ;; Hardware stack levels used:    1
 29364 ;; Hardware stack levels required when called:   17
 29365 ;; This function calls:
 29366 ;;		Nothing
 29367 ;; This function is called by:
 29368 ;;		_inspOSMeasure
 29369 ;;		_main
 29370 ;;		_screenMng
 29371 ;;		_atoi
 29372 ;; This function uses a non-reentrant model
 29373 ;;
 29374                           
 29375                           	psect	text133
 29376  009A42                     __ptext133:
 29377                           	opt callstack 0
 29378  009A42                     ___wmul:
 29379                           	opt callstack 9
 29380                           
 29381                           ; BSR set to: 0
 29382                           ;incstack = 0
 29383  009A42  0100               	movlb	0	; () banked
 29384  009A44  519B               	movf	___wmul@multiplier& (0+255),w,b
 29385  009A46  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29386  009A48  006F FFCC  F09F    	movff	prodl,___wmul@product
 29387  009A4E  006F FFD0  F0A0    	movff	prodh,___wmul@product+1
 29388  009A54  519B               	movf	___wmul@multiplier& (0+255),w,b
 29389  009A56  039E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29390  009A58  50F3               	movf	243,w,c
 29391  009A5A  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29392  009A5C  519C               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29393  009A5E  039D               	mulwf	___wmul@multiplicand& (0+255),b
 29394  009A60  50F3               	movf	243,w,c
 29395  009A62  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
 29396                           
 29397                           ; BSR set to: 0
 29398  009A64  0060  F27C  F09B   	movff	___wmul@product,?___wmul
 29399  009A6A  0060  F280  F09C   	movff	___wmul@product+1,?___wmul+1
 29400                           
 29401                           ; BSR set to: 0
 29402  009A70  0012               	return		;funcret
 29403  009A72                     __end_of___wmul:
 29404                           	opt callstack 0
 29405                           
 29406 ;; *************** function _I2C2_MasterSetCounter *****************
 29407 ;; Defined at:
 29408 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 29409 ;; Parameters:    Size  Location     Type
 29410 ;;  counter         1    wreg     unsigned char 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;  counter         1   43[BANK0 ] unsigned char 
 29413 ;; Return value:  Size  Location     Type
 29414 ;;                  1    wreg      void 
 29415 ;; Registers used:
 29416 ;;		wreg
 29417 ;; Tracked objects:
 29418 ;;		On entry : 3F/2
 29419 ;;		On exit  : 0/0
 29420 ;;		Unchanged: 0/0
 29421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29426 ;;Total ram usage:        1 bytes
 29427 ;; Hardware stack levels used:    1
 29428 ;; Hardware stack levels required when called:   17
 29429 ;; This function calls:
 29430 ;;		Nothing
 29431 ;; This function is called by:
 29432 ;;		_I2C2_MasterOperation
 29433 ;;		_I2C2_DO_RX_EMPTY
 29434 ;; This function uses a non-reentrant model
 29435 ;;
 29436                           
 29437                           	psect	text134
 29438  00A3BC                     __ptext134:
 29439                           	opt callstack 0
 29440  00A3BC                     _I2C2_MasterSetCounter:
 29441                           	opt callstack 8
 29442                           
 29443                           ; BSR set to: 0
 29444                           ;incstack = 0
 29445                           ;I2C2_MasterSetCounter@counter stored from wreg
 29446  00A3BC  0100               	movlb	0	; () banked
 29447  00A3BE  6F8B               	movwf	I2C2_MasterSetCounter@counter& (0+255),b
 29448                           
 29449                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 29450  00A3C0  0060  F22F  FD56   	movff	I2C2_MasterSetCounter@counter,15702	;volatile
 29451  00A3C6  0012               	return		;funcret
 29452  00A3C8                     __end_of_I2C2_MasterSetCounter:
 29453                           	opt callstack 0
 29454                           
 29455 ;; *************** function _I2C2_MasterEnableRestart *****************
 29456 ;; Defined at:
 29457 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 29458 ;; Parameters:    Size  Location     Type
 29459 ;;		None
 29460 ;; Auto vars:     Size  Location     Type
 29461 ;;		None
 29462 ;; Return value:  Size  Location     Type
 29463 ;;                  1    wreg      void 
 29464 ;; Registers used:
 29465 ;;		None
 29466 ;; Tracked objects:
 29467 ;;		On entry : 3C/1
 29468 ;;		On exit  : 3F/3D
 29469 ;;		Unchanged: 0/0
 29470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29475 ;;Total ram usage:        0 bytes
 29476 ;; Hardware stack levels used:    1
 29477 ;; Hardware stack levels required when called:   17
 29478 ;; This function calls:
 29479 ;;		Nothing
 29480 ;; This function is called by:
 29481 ;;		_I2C2_DO_RX_EMPTY
 29482 ;; This function uses a non-reentrant model
 29483 ;;
 29484                           
 29485                           	psect	text135
 29486  00A480                     __ptext135:
 29487                           	opt callstack 0
 29488  00A480                     _I2C2_MasterEnableRestart:
 29489                           	opt callstack 6
 29490                           
 29491                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 29492                           
 29493                           ;incstack = 0
 29494  00A480  013D               	movlb	61	; () banked
 29495  00A482  8D5D               	bsf	93,6,b	;volatile
 29496                           
 29497                           ; BSR set to: 61
 29498  00A484  0012               	return		;funcret
 29499  00A486                     __end_of_I2C2_MasterEnableRestart:
 29500                           	opt callstack 0
 29501                           
 29502 ;; *************** function _I2C2_MasterDisableRestart *****************
 29503 ;; Defined at:
 29504 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 29505 ;; Parameters:    Size  Location     Type
 29506 ;;		None
 29507 ;; Auto vars:     Size  Location     Type
 29508 ;;		None
 29509 ;; Return value:  Size  Location     Type
 29510 ;;                  1    wreg      void 
 29511 ;; Registers used:
 29512 ;;		None
 29513 ;; Tracked objects:
 29514 ;;		On entry : 3F/2
 29515 ;;		On exit  : 3F/3D
 29516 ;;		Unchanged: 0/0
 29517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29522 ;;Total ram usage:        0 bytes
 29523 ;; Hardware stack levels used:    1
 29524 ;; Hardware stack levels required when called:   17
 29525 ;; This function calls:
 29526 ;;		Nothing
 29527 ;; This function is called by:
 29528 ;;		_I2C2_DO_RX_EMPTY
 29529 ;; This function uses a non-reentrant model
 29530 ;;
 29531                           
 29532                           	psect	text136
 29533  00A486                     __ptext136:
 29534                           	opt callstack 0
 29535  00A486                     _I2C2_MasterDisableRestart:
 29536                           	opt callstack 6
 29537                           
 29538                           ; BSR set to: 2
 29539                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 29540                           
 29541                           ; BSR set to: 61
 29542                           ;incstack = 0
 29543  00A486  013D               	movlb	61	; () banked
 29544  00A488  9D5D               	bcf	93,6,b	;volatile
 29545                           
 29546                           ; BSR set to: 61
 29547  00A48A  0012               	return		;funcret
 29548  00A48C                     __end_of_I2C2_MasterDisableRestart:
 29549                           	opt callstack 0
 29550                           
 29551 ;; *************** function _I2C2_MOpen *****************
 29552 ;; Defined at:
 29553 ;;		line 39 in file "i2c2_mux.c"
 29554 ;; Parameters:    Size  Location     Type
 29555 ;;		None
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;  trfRsp          1   52[BANK0 ] enum E16385
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  1    wreg      enum E16385
 29560 ;; Registers used:
 29561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29562 ;; Tracked objects:
 29563 ;;		On entry : 3F/2
 29564 ;;		On exit  : 3F/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29571 ;;Total ram usage:        1 bytes
 29572 ;; Hardware stack levels used:    1
 29573 ;; Hardware stack levels required when called:   19
 29574 ;; This function calls:
 29575 ;;		_I2C2_Open
 29576 ;;		_I2C2_SetAddressNackCallback
 29577 ;;		_I2C2_SetDataNackCallback
 29578 ;; This function is called by:
 29579 ;;		_MonitorMsgForcedSend
 29580 ;; This function uses a non-reentrant model
 29581 ;;
 29582                           
 29583                           	psect	text137
 29584  008A9E                     __ptext137:
 29585                           	opt callstack 0
 29586  008A9E                     _I2C2_MOpen:
 29587                           	opt callstack 7
 29588                           
 29589                           ; BSR set to: 2
 29590                           ;i2c2_mux.c: 40:     i2c2_error_t trfRsp;;i2c2_mux.c: 42:     trfRsp = I2C2_Open(0x50);
 29591                           
 29592                           ; BSR set to: 61
 29593                           ;incstack = 0
 29594  008A9E  0E50               	movlw	80
 29595  008AA0  EC4E  F041         	call	_I2C2_Open
 29596  008AA4  6F94               	movwf	I2C2_MOpen@trfRsp& (0+255),b
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;i2c2_mux.c: 43:     if (trfRsp != I2C2_BUSY) {
 29600  008AA6  0594               	decf	I2C2_MOpen@trfRsp& (0+255),w,b
 29601  008AA8  B4D8               	btfsc	status,2,c
 29602  008AAA  D029               	goto	l17496
 29603                           
 29604                           ; BSR set to: 0
 29605                           ;i2c2_mux.c: 44:         I2C2_SetAddressNackCallback(I2C2_NackCb,((void*)0));
 29606  008AAC  0EE4               	movlw	low _I2C2_NackCb
 29607  008AAE  6F90               	movwf	I2C2_SetAddressNackCallback@cb& (0+255),b
 29608  008AB0  0E95               	movlw	high _I2C2_NackCb
 29609  008AB2  6F91               	movwf	(I2C2_SetAddressNackCallback@cb+1)& (0+255),b
 29610  008AB4  0E00               	movlw	0
 29611  008AB6  6F92               	movwf	I2C2_SetAddressNackCallback@ptr& (0+255),b
 29612  008AB8  0E00               	movlw	0
 29613  008ABA  6F93               	movwf	(I2C2_SetAddressNackCallback@ptr+1)& (0+255),b
 29614  008ABC  EC06  F050         	call	_I2C2_SetAddressNackCallback	;wreg free
 29615                           
 29616                           ;i2c2_mux.c: 45:         I2C2_SetDataNackCallback(I2C2_NackCb,((void*)0));
 29617  008AC0  0EE4               	movlw	low _I2C2_NackCb
 29618  008AC2  6F90               	movwf	I2C2_SetDataNackCallback@cb& (0+255),b
 29619  008AC4  0E95               	movlw	high _I2C2_NackCb
 29620  008AC6  6F91               	movwf	(I2C2_SetDataNackCallback@cb+1)& (0+255),b
 29621  008AC8  0E00               	movlw	0
 29622  008ACA  6F92               	movwf	I2C2_SetDataNackCallback@ptr& (0+255),b
 29623  008ACC  0E00               	movlw	0
 29624  008ACE  6F93               	movwf	(I2C2_SetDataNackCallback@ptr+1)& (0+255),b
 29625  008AD0  ECF6  F04F         	call	_I2C2_SetDataNackCallback	;wreg free
 29626                           
 29627                           ; BSR set to: 0
 29628                           ;i2c2_mux.c: 47:         lastI2C2MAckResponse = 1;
 29629  008AD4  0E01               	movlw	1
 29630  008AD6  0101               	movlb	1	; () banked
 29631  008AD8  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 29632                           
 29633                           ; BSR set to: 1
 29634                           ;i2c2_mux.c: 49:         if (currentTrfAddr == 0x50){
 29635  008ADA  0E50               	movlw	80
 29636  008ADC  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 29637  008ADE  A4D8               	btfss	status,2,c
 29638  008AE0  D004               	goto	l2651
 29639                           
 29640                           ; BSR set to: 1
 29641                           ;i2c2_mux.c: 50:             lastI2C2MTrfResponse = trfRsp;
 29642  008AE2  0060  F250  F0C0   	movff	I2C2_MOpen@trfRsp,_lastI2C2MTrfResponse
 29643                           
 29644                           ;i2c2_mux.c: 51:         } else {
 29645  008AE8  D003               	goto	l17492
 29646  008AEA                     l2651:
 29647                           
 29648                           ; BSR set to: 1
 29649                           ;i2c2_mux.c: 52:             lastI2C2LTrfResponse = trfRsp;
 29650  008AEA  0060  F250  F24E   	movff	I2C2_MOpen@trfRsp,_lastI2C2LTrfResponse
 29651  008AF0                     l17492:
 29652                           
 29653                           ; BSR set to: 1
 29654                           ;i2c2_mux.c: 54:         currentTrfAddr = 0x50;
 29655  008AF0  0E50               	movlw	80
 29656  008AF2  6FB6               	movwf	_currentTrfAddr& (0+255),b
 29657                           
 29658                           ;i2c2_mux.c: 55:         lastI2C2MAckResponse = 1;
 29659  008AF4  0E01               	movlw	1
 29660  008AF6  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 29661                           
 29662                           ;i2c2_mux.c: 57:         return lastI2C2MTrfResponse;
 29663  008AF8  0100               	movlb	0	; () banked
 29664  008AFA  51C0               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 29665  008AFC  0012               	return	
 29666  008AFE                     l17496:
 29667                           
 29668                           ; BSR set to: 0
 29669                           ;i2c2_mux.c: 59:     return I2C2_BUSY;
 29670  008AFE  0E01               	movlw	1
 29671                           
 29672                           ; BSR set to: 0
 29673  008B00  0012               	return		;funcret
 29674  008B02                     __end_of_I2C2_MOpen:
 29675                           	opt callstack 0
 29676                           
 29677 ;; *************** function _I2C2_SetDataNackCallback *****************
 29678 ;; Defined at:
 29679 ;;		line 319 in file "mcc_generated_files/i2c2_master.c"
 29680 ;; Parameters:    Size  Location     Type
 29681 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 29682 ;;		 -> I2C2_NackCb(1), 
 29683 ;;  ptr             2   50[BANK0 ] PTR void 
 29684 ;;		 -> NULL(0), 
 29685 ;; Auto vars:     Size  Location     Type
 29686 ;;		None
 29687 ;; Return value:  Size  Location     Type
 29688 ;;                  1    wreg      void 
 29689 ;; Registers used:
 29690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29691 ;; Tracked objects:
 29692 ;;		On entry : 3F/0
 29693 ;;		On exit  : 3F/0
 29694 ;;		Unchanged: 0/0
 29695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29696 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29699 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29700 ;;Total ram usage:        4 bytes
 29701 ;; Hardware stack levels used:    1
 29702 ;; Hardware stack levels required when called:   18
 29703 ;; This function calls:
 29704 ;;		_I2C2_SetCallback
 29705 ;; This function is called by:
 29706 ;;		_I2C2_MOpen
 29707 ;; This function uses a non-reentrant model
 29708 ;;
 29709                           
 29710                           	psect	text138
 29711  009FEC                     __ptext138:
 29712                           	opt callstack 0
 29713  009FEC                     _I2C2_SetDataNackCallback:
 29714                           	opt callstack 7
 29715                           
 29716                           ; BSR set to: 0
 29717                           ;mcc_generated_files/i2c2_master.c: 319: void I2C2_SetDataNackCallback(i2c2_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c2_master.c: 320: {;mcc_generated_files/i2c2_master.
      +                          c: 321:     I2C2_SetCallback(I2C2_DATA_NACK, cb, ptr);
 29718                           
 29719                           ; BSR set to: 0
 29720                           ;incstack = 0
 29721  009FEC  0060  F240  F08B   	movff	I2C2_SetDataNackCallback@cb,I2C2_SetCallback@cb
 29722  009FF2  0060  F244  F08C   	movff	I2C2_SetDataNackCallback@cb+1,I2C2_SetCallback@cb+1
 29723  009FF8  0060  F248  F08D   	movff	I2C2_SetDataNackCallback@ptr,I2C2_SetCallback@ptr
 29724  009FFE  0060  F24C  F08E   	movff	I2C2_SetDataNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 29725  00A004  0E03               	movlw	3
 29726  00A006  ECFE  F043         	call	_I2C2_SetCallback
 29727                           
 29728                           ; BSR set to: 0
 29729  00A00A  0012               	return		;funcret
 29730  00A00C                     __end_of_I2C2_SetDataNackCallback:
 29731                           	opt callstack 0
 29732                           
 29733 ;; *************** function _I2C2_SetAddressNackCallback *****************
 29734 ;; Defined at:
 29735 ;;		line 314 in file "mcc_generated_files/i2c2_master.c"
 29736 ;; Parameters:    Size  Location     Type
 29737 ;;  cb              2   48[BANK0 ] PTR FTN(PTR void ,)enum 
 29738 ;;		 -> I2C2_NackCb(1), Absolute function(1), 
 29739 ;;  ptr             2   50[BANK0 ] PTR void 
 29740 ;;		 -> NULL(0), 
 29741 ;; Auto vars:     Size  Location     Type
 29742 ;;		None
 29743 ;; Return value:  Size  Location     Type
 29744 ;;                  1    wreg      void 
 29745 ;; Registers used:
 29746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29747 ;; Tracked objects:
 29748 ;;		On entry : 3F/0
 29749 ;;		On exit  : 3F/0
 29750 ;;		Unchanged: 0/0
 29751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29756 ;;Total ram usage:        4 bytes
 29757 ;; Hardware stack levels used:    1
 29758 ;; Hardware stack levels required when called:   18
 29759 ;; This function calls:
 29760 ;;		_I2C2_SetCallback
 29761 ;; This function is called by:
 29762 ;;		_I2C2_MOpen
 29763 ;; This function uses a non-reentrant model
 29764 ;;
 29765                           
 29766                           	psect	text139
 29767  00A00C                     __ptext139:
 29768                           	opt callstack 0
 29769  00A00C                     _I2C2_SetAddressNackCallback:
 29770                           	opt callstack 7
 29771                           
 29772                           ; BSR set to: 0
 29773                           ;mcc_generated_files/i2c2_master.c: 314: void I2C2_SetAddressNackCallback(i2c2_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c2_master.c: 315: {;mcc_generated_files/i2c2_mast
      +                          er.c: 316:     I2C2_SetCallback(I2C2_ADDR_NACK, cb, ptr);
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;incstack = 0
 29777  00A00C  0060  F240  F08B   	movff	I2C2_SetAddressNackCallback@cb,I2C2_SetCallback@cb
 29778  00A012  0060  F244  F08C   	movff	I2C2_SetAddressNackCallback@cb+1,I2C2_SetCallback@cb+1
 29779  00A018  0060  F248  F08D   	movff	I2C2_SetAddressNackCallback@ptr,I2C2_SetCallback@ptr
 29780  00A01E  0060  F24C  F08E   	movff	I2C2_SetAddressNackCallback@ptr+1,I2C2_SetCallback@ptr+1
 29781  00A024  0E02               	movlw	2
 29782  00A026  ECFE  F043         	call	_I2C2_SetCallback
 29783                           
 29784                           ; BSR set to: 0
 29785  00A02A  0012               	return		;funcret
 29786  00A02C                     __end_of_I2C2_SetAddressNackCallback:
 29787                           	opt callstack 0
 29788                           
 29789 ;; *************** function _I2C2_SetCallback *****************
 29790 ;; Defined at:
 29791 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 29792 ;; Parameters:    Size  Location     Type
 29793 ;;  idx             1    wreg     enum E16468
 29794 ;;  cb              2   43[BANK0 ] PTR FTN(PTR void ,)enum 
 29795 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 29796 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 29797 ;;  ptr             2   45[BANK0 ] PTR void 
 29798 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 29799 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 29800 ;; Auto vars:     Size  Location     Type
 29801 ;;  idx             1   47[BANK0 ] enum E16468
 29802 ;; Return value:  Size  Location     Type
 29803 ;;                  1    wreg      void 
 29804 ;; Registers used:
 29805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29806 ;; Tracked objects:
 29807 ;;		On entry : 3F/0
 29808 ;;		On exit  : 3F/0
 29809 ;;		Unchanged: 0/0
 29810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29814 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29815 ;;Total ram usage:        5 bytes
 29816 ;; Hardware stack levels used:    1
 29817 ;; Hardware stack levels required when called:   17
 29818 ;; This function calls:
 29819 ;;		Nothing
 29820 ;; This function is called by:
 29821 ;;		_I2C2_SetDataCompleteCallback
 29822 ;;		_I2C2_SetAddressNackCallback
 29823 ;;		_I2C2_SetDataNackCallback
 29824 ;; This function uses a non-reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text140
 29828  0087FC                     __ptext140:
 29829                           	opt callstack 0
 29830  0087FC                     _I2C2_SetCallback:
 29831                           	opt callstack 4
 29832                           
 29833                           ; BSR set to: 0
 29834                           ;incstack = 0
 29835                           ;I2C2_SetCallback@idx stored from wreg
 29836  0087FC  6F8F               	movwf	I2C2_SetCallback@idx& (0+255),b
 29837                           
 29838                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 29839  0087FE  0100               	movlb	0	; () banked
 29840  008800  518B               	movf	I2C2_SetCallback@cb& (0+255),w,b
 29841  008802  118C               	iorwf	(I2C2_SetCallback@cb+1)& (0+255),w,b
 29842  008804  B4D8               	btfsc	status,2,c
 29843  008806  D01D               	goto	l16844
 29844                           
 29845                           ; BSR set to: 0
 29846                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 29847  008808  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 29848  00880A  0D02               	mullw	2
 29849  00880C  0E00               	movlw	low _I2C2_Status
 29850  00880E  24F3               	addwf	243,w,c
 29851  008810  6ED9               	movwf	fsr2l,c
 29852  008812  0E02               	movlw	high _I2C2_Status
 29853  008814  20F4               	addwfc	prodh,w,c
 29854  008816  6EDA               	movwf	fsr2h,c
 29855  008818  0060  F22F  FFDE   	movff	I2C2_SetCallback@cb,postinc2
 29856  00881E  0060  F233  FFDD   	movff	I2C2_SetCallback@cb+1,postdec2
 29857                           
 29858                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 29859  008824  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 29860  008826  0D02               	mullw	2
 29861  008828  0E0C               	movlw	low (_I2C2_Status+12)
 29862  00882A  24F3               	addwf	243,w,c
 29863  00882C  6ED9               	movwf	fsr2l,c
 29864  00882E  0E02               	movlw	high (_I2C2_Status+12)
 29865  008830  20F4               	addwfc	prodh,w,c
 29866  008832  6EDA               	movwf	fsr2h,c
 29867  008834  0060  F237  FFDE   	movff	I2C2_SetCallback@ptr,postinc2
 29868  00883A  0060  F23B  FFDD   	movff	I2C2_SetCallback@ptr+1,postdec2
 29869                           
 29870                           ;mcc_generated_files/i2c2_master.c: 340:     }
 29871  008840  0012               	return	
 29872  008842                     l16844:
 29873                           
 29874                           ; BSR set to: 0
 29875                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 29876  008842  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 29877  008844  0D02               	mullw	2
 29878  008846  0E00               	movlw	low _I2C2_Status
 29879  008848  24F3               	addwf	243,w,c
 29880  00884A  6ED9               	movwf	fsr2l,c
 29881  00884C  0E02               	movlw	high _I2C2_Status
 29882  00884E  20F4               	addwfc	prodh,w,c
 29883  008850  6EDA               	movwf	fsr2h,c
 29884  008852  0E18               	movlw	low _I2C2_CallbackReturnStop
 29885  008854  6EDE               	movwf	postinc2,c
 29886  008856  0EA4               	movlw	high _I2C2_CallbackReturnStop
 29887  008858  6EDD               	movwf	postdec2,c
 29888                           
 29889                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 29890  00885A  518F               	movf	I2C2_SetCallback@idx& (0+255),w,b
 29891  00885C  0D02               	mullw	2
 29892  00885E  0E0C               	movlw	low (_I2C2_Status+12)
 29893  008860  24F3               	addwf	243,w,c
 29894  008862  6ED9               	movwf	fsr2l,c
 29895  008864  0E02               	movlw	high (_I2C2_Status+12)
 29896  008866  20F4               	addwfc	prodh,w,c
 29897  008868  6EDA               	movwf	fsr2h,c
 29898  00886A  0E00               	movlw	0
 29899  00886C  6EDE               	movwf	postinc2,c
 29900  00886E  0E00               	movlw	0
 29901  008870  6EDD               	movwf	postdec2,c
 29902                           
 29903                           ; BSR set to: 0
 29904  008872  0012               	return		;funcret
 29905  008874                     __end_of_I2C2_SetCallback:
 29906                           	opt callstack 0
 29907                           
 29908 ;; *************** function _I2C2_Open *****************
 29909 ;; Defined at:
 29910 ;;		line 204 in file "mcc_generated_files/i2c2_master.c"
 29911 ;; Parameters:    Size  Location     Type
 29912 ;;  address         1    wreg     unsigned char 
 29913 ;; Auto vars:     Size  Location     Type
 29914 ;;  address         1   45[BANK0 ] unsigned char 
 29915 ;;  returnValue     1   46[BANK0 ] enum E353
 29916 ;; Return value:  Size  Location     Type
 29917 ;;                  1    wreg      enum E353
 29918 ;; Registers used:
 29919 ;;		wreg, status,2, status,0, cstack
 29920 ;; Tracked objects:
 29921 ;;		On entry : 3F/2
 29922 ;;		On exit  : 3F/0
 29923 ;;		Unchanged: 0/0
 29924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29929 ;;Total ram usage:        2 bytes
 29930 ;; Hardware stack levels used:    1
 29931 ;; Hardware stack levels required when called:   18
 29932 ;; This function calls:
 29933 ;;		_I2C2_MasterClearIrq
 29934 ;;		_I2C2_MasterEnableIrq
 29935 ;;		_I2C2_MasterOpen
 29936 ;;		_I2C2_SetInterruptHandler
 29937 ;; This function is called by:
 29938 ;;		_I2C2_MOpen
 29939 ;; This function uses a non-reentrant model
 29940 ;;
 29941                           
 29942                           	psect	text141
 29943  00829C                     __ptext141:
 29944                           	opt callstack 0
 29945  00829C                     _I2C2_Open:
 29946                           	opt callstack 7
 29947                           
 29948                           ; BSR set to: 0
 29949                           ;incstack = 0
 29950                           ;I2C2_Open@address stored from wreg
 29951  00829C  0100               	movlb	0	; () banked
 29952  00829E  6F8D               	movwf	I2C2_Open@address& (0+255),b
 29953                           
 29954                           ;mcc_generated_files/i2c2_master.c: 204: i2c2_error_t I2C2_Open(i2c2_address_t address);
      +                          mcc_generated_files/i2c2_master.c: 205: {;mcc_generated_files/i2c2_master.c: 206:     i2
      +                          c2_error_t returnValue = I2C2_BUSY;
 29955  0082A0  0E01               	movlw	1
 29956  0082A2  0100               	movlb	0	; () banked
 29957  0082A4  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;mcc_generated_files/i2c2_master.c: 208:     if(!I2C2_Status.inUse)
 29961  0082A6  0102               	movlb	2	; () banked
 29962  0082A8  B723               	btfsc	(_I2C2_Status+35)& (0+255),3,b
 29963  0082AA  D046               	goto	l17188
 29964                           
 29965                           ; BSR set to: 2
 29966                           ;mcc_generated_files/i2c2_master.c: 209:     {;mcc_generated_files/i2c2_master.c: 210:  
      +                                 I2C2_Status.address = address;
 29967  0082AC  0060  F234  F21C   	movff	I2C2_Open@address,_I2C2_Status+28
 29968                           
 29969                           ; BSR set to: 2
 29970                           ;mcc_generated_files/i2c2_master.c: 211:         I2C2_Status.busy = 0;
 29971  0082B2  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 29972                           
 29973                           ; BSR set to: 2
 29974                           ;mcc_generated_files/i2c2_master.c: 212:         I2C2_Status.inUse = 1;
 29975  0082B4  8723               	bsf	(_I2C2_Status+35)& (0+255),3,b
 29976                           
 29977                           ; BSR set to: 2
 29978                           ;mcc_generated_files/i2c2_master.c: 213:         I2C2_Status.addressNackCheck = 0;
 29979  0082B6  0EFC               	movlw	-4
 29980  0082B8  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 29981                           
 29982                           ; BSR set to: 2
 29983                           ;mcc_generated_files/i2c2_master.c: 214:         I2C2_Status.state = I2C2_RESET;
 29984  0082BA  0E0F               	movlw	15
 29985  0082BC  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 29986                           
 29987                           ; BSR set to: 2
 29988                           ;mcc_generated_files/i2c2_master.c: 215:         I2C2_Status.time_out_value = 500;
 29989  0082BE  0E01               	movlw	1
 29990  0082C0  6F1B               	movwf	(_I2C2_Status+27)& (0+255),b
 29991  0082C2  0EF4               	movlw	244
 29992  0082C4  6F1A               	movwf	(_I2C2_Status+26)& (0+255),b
 29993                           
 29994                           ; BSR set to: 2
 29995                           ;mcc_generated_files/i2c2_master.c: 216:         I2C2_Status.bufferFree = 1;
 29996  0082C6  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 29997                           
 29998                           ; BSR set to: 2
 29999                           ;mcc_generated_files/i2c2_master.c: 219:         I2C2_Status.callbackTable[I2C2_DATA_COM
      +                          PLETE]=I2C2_CallbackReturnStop;
 30000  0082C8  0E18               	movlw	low _I2C2_CallbackReturnStop
 30001  0082CA  6F00               	movwf	_I2C2_Status& (0+255),b
 30002  0082CC  0EA4               	movlw	high _I2C2_CallbackReturnStop
 30003  0082CE  6F01               	movwf	(_I2C2_Status+1)& (0+255),b
 30004                           
 30005                           ; BSR set to: 2
 30006                           ;mcc_generated_files/i2c2_master.c: 220:         I2C2_Status.callbackPayload[I2C2_DATA_C
      +                          OMPLETE] = ((void*)0);
 30007  0082D0  0E00               	movlw	0
 30008  0082D2  6F0C               	movwf	(_I2C2_Status+12)& (0+255),b
 30009  0082D4  0E00               	movlw	0
 30010  0082D6  6F0D               	movwf	(_I2C2_Status+13)& (0+255),b
 30011                           
 30012                           ; BSR set to: 2
 30013                           ;mcc_generated_files/i2c2_master.c: 221:         I2C2_Status.callbackTable[I2C2_WRITE_CO
      +                          LLISION]=I2C2_CallbackReturnStop;
 30014  0082D8  0E18               	movlw	low _I2C2_CallbackReturnStop
 30015  0082DA  6F02               	movwf	(_I2C2_Status+2)& (0+255),b
 30016  0082DC  0EA4               	movlw	high _I2C2_CallbackReturnStop
 30017  0082DE  6F03               	movwf	(_I2C2_Status+3)& (0+255),b
 30018                           
 30019                           ; BSR set to: 2
 30020                           ;mcc_generated_files/i2c2_master.c: 222:         I2C2_Status.callbackPayload[I2C2_WRITE_
      +                          COLLISION] = ((void*)0);
 30021  0082E0  0E00               	movlw	0
 30022  0082E2  6F0E               	movwf	(_I2C2_Status+14)& (0+255),b
 30023  0082E4  0E00               	movlw	0
 30024  0082E6  6F0F               	movwf	(_I2C2_Status+15)& (0+255),b
 30025                           
 30026                           ; BSR set to: 2
 30027                           ;mcc_generated_files/i2c2_master.c: 223:         I2C2_Status.callbackTable[I2C2_ADDR_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30028  0082E8  0E18               	movlw	low _I2C2_CallbackReturnStop
 30029  0082EA  6F04               	movwf	(_I2C2_Status+4)& (0+255),b
 30030  0082EC  0EA4               	movlw	high _I2C2_CallbackReturnStop
 30031  0082EE  6F05               	movwf	(_I2C2_Status+5)& (0+255),b
 30032                           
 30033                           ; BSR set to: 2
 30034                           ;mcc_generated_files/i2c2_master.c: 224:         I2C2_Status.callbackPayload[I2C2_ADDR_N
      +                          ACK] = ((void*)0);
 30035  0082F0  0E00               	movlw	0
 30036  0082F2  6F10               	movwf	(_I2C2_Status+16)& (0+255),b
 30037  0082F4  0E00               	movlw	0
 30038  0082F6  6F11               	movwf	(_I2C2_Status+17)& (0+255),b
 30039                           
 30040                           ; BSR set to: 2
 30041                           ;mcc_generated_files/i2c2_master.c: 225:         I2C2_Status.callbackTable[I2C2_DATA_NAC
      +                          K]=I2C2_CallbackReturnStop;
 30042  0082F8  0E18               	movlw	low _I2C2_CallbackReturnStop
 30043  0082FA  6F06               	movwf	(_I2C2_Status+6)& (0+255),b
 30044  0082FC  0EA4               	movlw	high _I2C2_CallbackReturnStop
 30045  0082FE  6F07               	movwf	(_I2C2_Status+7)& (0+255),b
 30046                           
 30047                           ; BSR set to: 2
 30048                           ;mcc_generated_files/i2c2_master.c: 226:         I2C2_Status.callbackPayload[I2C2_DATA_N
      +                          ACK] = ((void*)0);
 30049  008300  0E00               	movlw	0
 30050  008302  6F12               	movwf	(_I2C2_Status+18)& (0+255),b
 30051  008304  0E00               	movlw	0
 30052  008306  6F13               	movwf	(_I2C2_Status+19)& (0+255),b
 30053                           
 30054                           ; BSR set to: 2
 30055                           ;mcc_generated_files/i2c2_master.c: 227:         I2C2_Status.callbackTable[I2C2_TIMEOUT]
      +                          =I2C2_CallbackReturnReset;
 30056  008308  0E0E               	movlw	low _I2C2_CallbackReturnReset
 30057  00830A  6F08               	movwf	(_I2C2_Status+8)& (0+255),b
 30058  00830C  0EA4               	movlw	high _I2C2_CallbackReturnReset
 30059  00830E  6F09               	movwf	(_I2C2_Status+9)& (0+255),b
 30060                           
 30061                           ; BSR set to: 2
 30062                           ;mcc_generated_files/i2c2_master.c: 228:         I2C2_Status.callbackPayload[I2C2_TIMEOU
      +                          T] = ((void*)0);
 30063  008310  0E00               	movlw	0
 30064  008312  6F14               	movwf	(_I2C2_Status+20)& (0+255),b
 30065  008314  0E00               	movlw	0
 30066  008316  6F15               	movwf	(_I2C2_Status+21)& (0+255),b
 30067                           
 30068                           ; BSR set to: 2
 30069                           ;mcc_generated_files/i2c2_master.c: 230:         I2C2_SetInterruptHandler(I2C2_MasterIsr
      +                          );
 30070  008318  0E92               	movlw	low _I2C2_MasterIsr
 30071  00831A  0100               	movlb	0	; () banked
 30072  00831C  6F8B               	movwf	I2C2_SetInterruptHandler@InterruptHandler& (0+255),b
 30073  00831E  0EA4               	movlw	high _I2C2_MasterIsr
 30074  008320  6F8C               	movwf	(I2C2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30075  008322  EC95  F051         	call	_I2C2_SetInterruptHandler	;wreg free
 30076                           
 30077                           ; BSR set to: 0
 30078                           ;mcc_generated_files/i2c2_master.c: 231:         I2C2_MasterClearIrq();
 30079  008326  EC29  F052         	call	_I2C2_MasterClearIrq	;wreg free
 30080                           
 30081                           ; BSR set to: 61
 30082                           ;mcc_generated_files/i2c2_master.c: 232:         I2C2_MasterOpen();
 30083  00832A  EC70  F04F         	call	_I2C2_MasterOpen	;wreg free
 30084                           
 30085                           ; BSR set to: 61
 30086                           ;mcc_generated_files/i2c2_master.c: 233:         I2C2_MasterEnableIrq();
 30087  00832E  ECDD  F050         	call	_I2C2_MasterEnableIrq	;wreg free
 30088                           
 30089                           ; BSR set to: 61
 30090                           ;mcc_generated_files/i2c2_master.c: 234:         returnValue = I2C2_NOERR;
 30091  008332  0E00               	movlw	0
 30092  008334  0100               	movlb	0	; () banked
 30093  008336  6F8E               	movwf	I2C2_Open@returnValue& (0+255),b
 30094  008338                     l17188:
 30095                           
 30096                           ;mcc_generated_files/i2c2_master.c: 236:     return returnValue;
 30097  008338  0100               	movlb	0	; () banked
 30098  00833A  518E               	movf	I2C2_Open@returnValue& (0+255),w,b
 30099                           
 30100                           ; BSR set to: 0
 30101  00833C  0012               	return		;funcret
 30102  00833E                     __end_of_I2C2_Open:
 30103                           	opt callstack 0
 30104                           
 30105 ;; *************** function _I2C2_SetInterruptHandler *****************
 30106 ;; Defined at:
 30107 ;;		line 329 in file "mcc_generated_files/i2c2_master.c"
 30108 ;; Parameters:    Size  Location     Type
 30109 ;;  InterruptHan    2   43[BANK0 ] PTR FTN()void 
 30110 ;;		 -> I2C2_MasterIsr(1), 
 30111 ;; Auto vars:     Size  Location     Type
 30112 ;;		None
 30113 ;; Return value:  Size  Location     Type
 30114 ;;                  1    wreg      void 
 30115 ;; Registers used:
 30116 ;;		wreg, status,2, status,0
 30117 ;; Tracked objects:
 30118 ;;		On entry : 3F/0
 30119 ;;		On exit  : 3F/0
 30120 ;;		Unchanged: 3F/0
 30121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30125 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30126 ;;Total ram usage:        2 bytes
 30127 ;; Hardware stack levels used:    1
 30128 ;; Hardware stack levels required when called:   17
 30129 ;; This function calls:
 30130 ;;		Nothing
 30131 ;; This function is called by:
 30132 ;;		_I2C2_Open
 30133 ;; This function uses a non-reentrant model
 30134 ;;
 30135                           
 30136                           	psect	text142
 30137  00A32A                     __ptext142:
 30138                           	opt callstack 0
 30139  00A32A                     _I2C2_SetInterruptHandler:
 30140                           	opt callstack 7
 30141                           
 30142                           ; BSR set to: 0
 30143                           ;mcc_generated_files/i2c2_master.c: 329: void I2C2_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c2_master.c: 330: {;mcc_generated_files/i2c2_maste
      +                          r.c: 331:     I2C2_InterruptHandler = InterruptHandler;
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;incstack = 0
 30147  00A32A  0060  F22C  F0BC   	movff	I2C2_SetInterruptHandler@InterruptHandler,_I2C2_InterruptHandler
 30148  00A330  0060  F230  F0BD   	movff	I2C2_SetInterruptHandler@InterruptHandler+1,_I2C2_InterruptHandler+1
 30149                           
 30150                           ; BSR set to: 0
 30151  00A336  0012               	return		;funcret
 30152  00A338                     __end_of_I2C2_SetInterruptHandler:
 30153                           	opt callstack 0
 30154                           
 30155 ;; *************** function _I2C2_MasterOpen *****************
 30156 ;; Defined at:
 30157 ;;		line 633 in file "mcc_generated_files/i2c2_master.c"
 30158 ;; Parameters:    Size  Location     Type
 30159 ;;		None
 30160 ;; Auto vars:     Size  Location     Type
 30161 ;;		None
 30162 ;; Return value:  Size  Location     Type
 30163 ;;                  1    wreg      _Bool 
 30164 ;; Registers used:
 30165 ;;		wreg, status,2
 30166 ;; Tracked objects:
 30167 ;;		On entry : 3F/3D
 30168 ;;		On exit  : 3F/3D
 30169 ;;		Unchanged: 0/0
 30170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30175 ;;Total ram usage:        0 bytes
 30176 ;; Hardware stack levels used:    1
 30177 ;; Hardware stack levels required when called:   17
 30178 ;; This function calls:
 30179 ;;		Nothing
 30180 ;; This function is called by:
 30181 ;;		_I2C2_Open
 30182 ;; This function uses a non-reentrant model
 30183 ;;
 30184                           
 30185                           	psect	text143
 30186  009EE0                     __ptext143:
 30187                           	opt callstack 0
 30188  009EE0                     _I2C2_MasterOpen:
 30189                           	opt callstack 7
 30190                           
 30191                           ; BSR set to: 61
 30192                           ;mcc_generated_files/i2c2_master.c: 635:     if(!I2C2CON0bits.EN)
 30193                           
 30194                           ; BSR set to: 0
 30195                           ;incstack = 0
 30196  009EE0  BF5D               	btfsc	93,7,b	;volatile
 30197  009EE2  0012               	return	
 30198                           
 30199                           ; BSR set to: 61
 30200                           ;mcc_generated_files/i2c2_master.c: 636:     {;mcc_generated_files/i2c2_master.c: 638:  
      +                                 I2C2PIR = 0x00;
 30201  009EE4  0E00               	movlw	0
 30202  009EE6  6F63               	movwf	99,b	;volatile
 30203                           
 30204                           ;mcc_generated_files/i2c2_master.c: 640:         I2C2PIE = 0x00;
 30205  009EE8  0E00               	movlw	0
 30206  009EEA  6F64               	movwf	100,b	;volatile
 30207                           
 30208                           ;mcc_generated_files/i2c2_master.c: 642:         I2C2ERR = 0x00;
 30209  009EEC  0E00               	movlw	0
 30210  009EEE  6F60               	movwf	96,b	;volatile
 30211                           
 30212                           ; BSR set to: 61
 30213                           ;mcc_generated_files/i2c2_master.c: 644:         I2C2CNT = 0xFF;
 30214  009EF0  6956               	setf	86,b	;volatile
 30215                           
 30216                           ;mcc_generated_files/i2c2_master.c: 646:         RB1I2C = 0x51;
 30217  009EF2  0E51               	movlw	81
 30218  009EF4  013A               	movlb	58	; () banked
 30219  009EF6  6F5A               	movwf	90,b	;volatile
 30220                           
 30221                           ;mcc_generated_files/i2c2_master.c: 648:         RB2I2C = 0x51;
 30222  009EF8  0E51               	movlw	81
 30223  009EFA  6F5B               	movwf	91,b	;volatile
 30224                           
 30225                           ; BSR set to: 58
 30226                           ;mcc_generated_files/i2c2_master.c: 650:         I2C2CON0bits.EN = 1;
 30227  009EFC  013D               	movlb	61	; () banked
 30228  009EFE  8F5D               	bsf	93,7,b	;volatile
 30229                           
 30230                           ; BSR set to: 61
 30231  009F00  0012               	return		;funcret
 30232  009F02                     __end_of_I2C2_MasterOpen:
 30233                           	opt callstack 0
 30234                           
 30235 ;; *************** function _I2C2_MasterEnableIrq *****************
 30236 ;; Defined at:
 30237 ;;		line 776 in file "mcc_generated_files/i2c2_master.c"
 30238 ;; Parameters:    Size  Location     Type
 30239 ;;		None
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;		None
 30242 ;; Return value:  Size  Location     Type
 30243 ;;                  1    wreg      void 
 30244 ;; Registers used:
 30245 ;;		None
 30246 ;; Tracked objects:
 30247 ;;		On entry : 3F/3D
 30248 ;;		On exit  : 3F/3D
 30249 ;;		Unchanged: 0/0
 30250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30255 ;;Total ram usage:        0 bytes
 30256 ;; Hardware stack levels used:    1
 30257 ;; Hardware stack levels required when called:   17
 30258 ;; This function calls:
 30259 ;;		Nothing
 30260 ;; This function is called by:
 30261 ;;		_I2C2_Open
 30262 ;; This function uses a non-reentrant model
 30263 ;;
 30264                           
 30265                           	psect	text144
 30266  00A1BA                     __ptext144:
 30267                           	opt callstack 0
 30268  00A1BA                     _I2C2_MasterEnableIrq:
 30269                           	opt callstack 7
 30270                           
 30271                           ; BSR set to: 61
 30272                           ;mcc_generated_files/i2c2_master.c: 778:     PIE6bits.I2C2IE = 1;
 30273                           
 30274                           ; BSR set to: 61
 30275                           ;incstack = 0
 30276  00A1BA  0139               	movlb	57	; () banked
 30277  00A1BC  8196               	bsf	150,0,b	;volatile
 30278                           
 30279                           ;mcc_generated_files/i2c2_master.c: 779:     PIE6bits.I2C2EIE = 1;
 30280  00A1BE  8396               	bsf	150,1,b	;volatile
 30281                           
 30282                           ;mcc_generated_files/i2c2_master.c: 780:     PIE5bits.I2C2RXIE = 1;
 30283  00A1C0  8D95               	bsf	149,6,b	;volatile
 30284                           
 30285                           ;mcc_generated_files/i2c2_master.c: 781:     PIE5bits.I2C2TXIE = 1;
 30286  00A1C2  8F95               	bsf	149,7,b	;volatile
 30287                           
 30288                           ;mcc_generated_files/i2c2_master.c: 783:     I2C2PIEbits.PCIE = 1;
 30289  00A1C4  013D               	movlb	61	; () banked
 30290  00A1C6  8564               	bsf	100,2,b	;volatile
 30291                           
 30292                           ;mcc_generated_files/i2c2_master.c: 784:     I2C2PIEbits.CNTIE = 1;
 30293  00A1C8  8F64               	bsf	100,7,b	;volatile
 30294                           
 30295                           ;mcc_generated_files/i2c2_master.c: 785:     I2C2ERRbits.NACKIE = 1;
 30296  00A1CA  8160               	bsf	96,0,b	;volatile
 30297                           
 30298                           ; BSR set to: 61
 30299  00A1CC  0012               	return		;funcret
 30300  00A1CE                     __end_of_I2C2_MasterEnableIrq:
 30301                           	opt callstack 0
 30302                           
 30303 ;; *************** function _I2C2_MAck *****************
 30304 ;; Defined at:
 30305 ;;		line 31 in file "i2c2_mux.c"
 30306 ;; Parameters:    Size  Location     Type
 30307 ;;		None
 30308 ;; Auto vars:     Size  Location     Type
 30309 ;;		None
 30310 ;; Return value:  Size  Location     Type
 30311 ;;                  1    wreg      _Bool 
 30312 ;; Registers used:
 30313 ;;		wreg, status,2
 30314 ;; Tracked objects:
 30315 ;;		On entry : 3E/0
 30316 ;;		On exit  : 3F/1
 30317 ;;		Unchanged: 0/0
 30318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30323 ;;Total ram usage:        0 bytes
 30324 ;; Hardware stack levels used:    1
 30325 ;; Hardware stack levels required when called:   17
 30326 ;; This function calls:
 30327 ;;		Nothing
 30328 ;; This function is called by:
 30329 ;;		_MonitorMsgForcedSend
 30330 ;;		_MonitorMsgSendBlock
 30331 ;; This function uses a non-reentrant model
 30332 ;;
 30333                           
 30334                           	psect	text145
 30335  00A48C                     __ptext145:
 30336                           	opt callstack 0
 30337  00A48C                     _I2C2_MAck:
 30338                           	opt callstack 9
 30339                           
 30340                           ;i2c2_mux.c: 32:     return lastI2C2MAckResponse;
 30341                           
 30342                           ; BSR set to: 61
 30343                           ;incstack = 0
 30344  00A48C  0101               	movlb	1	; () banked
 30345  00A48E  51B5               	movf	_lastI2C2MAckResponse& (0+255),w,b
 30346                           
 30347                           ; BSR set to: 1
 30348  00A490  0012               	return		;funcret
 30349  00A492                     __end_of_I2C2_MAck:
 30350                           	opt callstack 0
 30351                           
 30352 ;; *************** function _MonitorMsgBusy *****************
 30353 ;; Defined at:
 30354 ;;		line 28 in file "monComm.c"
 30355 ;; Parameters:    Size  Location     Type
 30356 ;;		None
 30357 ;; Auto vars:     Size  Location     Type
 30358 ;;		None
 30359 ;; Return value:  Size  Location     Type
 30360 ;;                  1    wreg      _Bool 
 30361 ;; Registers used:
 30362 ;;		wreg, status,2, status,0, cstack
 30363 ;; Tracked objects:
 30364 ;;		On entry : 0/0
 30365 ;;		On exit  : 3F/0
 30366 ;;		Unchanged: 0/0
 30367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30372 ;;Total ram usage:        0 bytes
 30373 ;; Hardware stack levels used:    1
 30374 ;; Hardware stack levels required when called:   20
 30375 ;; This function calls:
 30376 ;;		_I2C2_MClose
 30377 ;; This function is called by:
 30378 ;;		_main
 30379 ;;		_MonitorMsgSendBlock
 30380 ;; This function uses a non-reentrant model
 30381 ;;
 30382                           
 30383                           	psect	text146
 30384  00A22A                     __ptext146:
 30385                           	opt callstack 0
 30386  00A22A                     _MonitorMsgBusy:
 30387                           	opt callstack 7
 30388                           
 30389                           ;monComm.c: 29:     return (I2C2_MClose() == I2C2_BUSY);
 30390                           
 30391                           ; BSR set to: 1
 30392                           ;incstack = 0
 30393  00A22A  EC24  F04E         	call	_I2C2_MClose	;wreg free
 30394  00A22E  06E8               	decf	wreg,f,c
 30395  00A230  A4D8               	btfss	status,2,c
 30396  00A232  D002               	goto	u17790
 30397  00A234  0E01               	movlw	1
 30398  00A236  0012               	return	
 30399  00A238                     u17790:
 30400  00A238  0E00               	movlw	0
 30401                           
 30402                           ; BSR set to: 0
 30403  00A23A  0012               	return		;funcret
 30404  00A23C                     __end_of_MonitorMsgBusy:
 30405                           	opt callstack 0
 30406                           
 30407 ;; *************** function _I2C2_MClose *****************
 30408 ;; Defined at:
 30409 ;;		line 85 in file "i2c2_mux.c"
 30410 ;; Parameters:    Size  Location     Type
 30411 ;;		None
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;  trfRsp          1   44[BANK0 ] enum E16385
 30414 ;; Return value:  Size  Location     Type
 30415 ;;                  1    wreg      enum E16385
 30416 ;; Registers used:
 30417 ;;		wreg, status,2, status,0, cstack
 30418 ;; Tracked objects:
 30419 ;;		On entry : 0/0
 30420 ;;		On exit  : 3F/0
 30421 ;;		Unchanged: 0/0
 30422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30427 ;;Total ram usage:        1 bytes
 30428 ;; Hardware stack levels used:    1
 30429 ;; Hardware stack levels required when called:   19
 30430 ;; This function calls:
 30431 ;;		_I2C2_Close
 30432 ;; This function is called by:
 30433 ;;		_MonitorMsgBusy
 30434 ;;		_MonitorMsgForcedSend
 30435 ;; This function uses a non-reentrant model
 30436 ;;
 30437                           
 30438                           	psect	text147
 30439  009C48                     __ptext147:
 30440                           	opt callstack 0
 30441  009C48                     _I2C2_MClose:
 30442                           	opt callstack 7
 30443                           
 30444                           ;i2c2_mux.c: 86:     i2c2_error_t trfRsp;;i2c2_mux.c: 88:     trfRsp = I2C2_Close();
 30445                           
 30446                           ; BSR set to: 0
 30447                           ;incstack = 0
 30448  009C48  EC93  F04E         	call	_I2C2_Close	;wreg free
 30449  009C4C  6F8C               	movwf	I2C2_MClose@trfRsp& (0+255),b
 30450                           
 30451                           ; BSR set to: 0
 30452                           ;i2c2_mux.c: 89:     if (trfRsp != I2C2_BUSY) {
 30453  009C4E  058C               	decf	I2C2_MClose@trfRsp& (0+255),w,b
 30454  009C50  B4D8               	btfsc	status,2,c
 30455  009C52  D00F               	goto	l17512
 30456                           
 30457                           ; BSR set to: 0
 30458                           ;i2c2_mux.c: 91:         if (currentTrfAddr == 0x50){
 30459  009C54  0E50               	movlw	80
 30460  009C56  0101               	movlb	1	; () banked
 30461  009C58  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 30462  009C5A  A4D8               	btfss	status,2,c
 30463  009C5C  D004               	goto	l2663
 30464                           
 30465                           ; BSR set to: 1
 30466                           ;i2c2_mux.c: 92:             lastI2C2MTrfResponse = trfRsp;
 30467  009C5E  0060  F230  F0C0   	movff	I2C2_MClose@trfRsp,_lastI2C2MTrfResponse
 30468                           
 30469                           ;i2c2_mux.c: 93:         } else {
 30470  009C64  D003               	goto	l17508
 30471  009C66                     l2663:
 30472                           
 30473                           ; BSR set to: 1
 30474                           ;i2c2_mux.c: 94:             lastI2C2LTrfResponse = trfRsp;
 30475  009C66  0060  F230  F24E   	movff	I2C2_MClose@trfRsp,_lastI2C2LTrfResponse
 30476  009C6C                     l17508:
 30477                           
 30478                           ; BSR set to: 1
 30479                           ;i2c2_mux.c: 97:         return lastI2C2MTrfResponse;
 30480  009C6C  0100               	movlb	0	; () banked
 30481  009C6E  51C0               	movf	_lastI2C2MTrfResponse& (0+255),w,b
 30482  009C70  0012               	return	
 30483  009C72                     l17512:
 30484                           
 30485                           ; BSR set to: 0
 30486                           ;i2c2_mux.c: 99:     return I2C2_BUSY;
 30487  009C72  0E01               	movlw	1
 30488                           
 30489                           ; BSR set to: 0
 30490  009C74  0012               	return		;funcret
 30491  009C76                     __end_of_I2C2_MClose:
 30492                           	opt callstack 0
 30493                           
 30494 ;; *************** function _I2C2_Close *****************
 30495 ;; Defined at:
 30496 ;;		line 239 in file "mcc_generated_files/i2c2_master.c"
 30497 ;; Parameters:    Size  Location     Type
 30498 ;;		None
 30499 ;; Auto vars:     Size  Location     Type
 30500 ;;  returnValue     1   43[BANK0 ] enum E353
 30501 ;; Return value:  Size  Location     Type
 30502 ;;                  1    wreg      enum E353
 30503 ;; Registers used:
 30504 ;;		wreg, status,2, cstack
 30505 ;; Tracked objects:
 30506 ;;		On entry : 0/0
 30507 ;;		On exit  : 3F/0
 30508 ;;		Unchanged: 0/0
 30509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30514 ;;Total ram usage:        1 bytes
 30515 ;; Hardware stack levels used:    1
 30516 ;; Hardware stack levels required when called:   18
 30517 ;; This function calls:
 30518 ;;		_I2C2_MasterClearIrq
 30519 ;;		_I2C2_MasterClose
 30520 ;;		_I2C2_MasterDisableIrq
 30521 ;; This function is called by:
 30522 ;;		_I2C2_MClose
 30523 ;; This function uses a non-reentrant model
 30524 ;;
 30525                           
 30526                           	psect	text148
 30527  009D26                     __ptext148:
 30528                           	opt callstack 0
 30529  009D26                     _I2C2_Close:
 30530                           	opt callstack 7
 30531                           
 30532                           ;mcc_generated_files/i2c2_master.c: 241:     i2c2_error_t returnValue = I2C2_BUSY;
 30533                           
 30534                           ; BSR set to: 0
 30535                           ;incstack = 0
 30536  009D26  0E01               	movlw	1
 30537  009D28  0100               	movlb	0	; () banked
 30538  009D2A  6F8B               	movwf	I2C2_Close@returnValue& (0+255),b
 30539                           
 30540                           ; BSR set to: 0
 30541                           ;mcc_generated_files/i2c2_master.c: 242:     if(!I2C2_Status.busy)
 30542  009D2C  0102               	movlb	2	; () banked
 30543  009D2E  B523               	btfsc	(_I2C2_Status+35)& (0+255),2,b
 30544  009D30  D00B               	goto	l17208
 30545                           
 30546                           ; BSR set to: 2
 30547                           ;mcc_generated_files/i2c2_master.c: 243:     {;mcc_generated_files/i2c2_master.c: 244:  
      +                                 I2C2_Status.inUse = 0;
 30548  009D32  9723               	bcf	(_I2C2_Status+35)& (0+255),3,b
 30549                           
 30550                           ;mcc_generated_files/i2c2_master.c: 245:         I2C2_Status.address = 0xff;
 30551  009D34  691C               	setf	(_I2C2_Status+28)& (0+255),b
 30552                           
 30553                           ; BSR set to: 2
 30554                           ;mcc_generated_files/i2c2_master.c: 246:         I2C2_MasterClearIrq();
 30555  009D36  EC29  F052         	call	_I2C2_MasterClearIrq	;wreg free
 30556                           
 30557                           ; BSR set to: 61
 30558                           ;mcc_generated_files/i2c2_master.c: 247:         I2C2_MasterDisableIrq();
 30559  009D3A  EC36  F050         	call	_I2C2_MasterDisableIrq	;wreg free
 30560                           
 30561                           ; BSR set to: 61
 30562                           ;mcc_generated_files/i2c2_master.c: 248:         I2C2_MasterClose();
 30563  009D3E  EC11  F052         	call	_I2C2_MasterClose	;wreg free
 30564                           
 30565                           ; BSR set to: 61
 30566                           ;mcc_generated_files/i2c2_master.c: 249:         returnValue = I2C2_Status.error;
 30567  009D42  0060  F888  F08B   	movff	_I2C2_Status+34,I2C2_Close@returnValue
 30568  009D48                     l17208:
 30569                           
 30570                           ;mcc_generated_files/i2c2_master.c: 251:     return returnValue;
 30571  009D48  0100               	movlb	0	; () banked
 30572  009D4A  518B               	movf	I2C2_Close@returnValue& (0+255),w,b
 30573                           
 30574                           ; BSR set to: 0
 30575  009D4C  0012               	return		;funcret
 30576  009D4E                     __end_of_I2C2_Close:
 30577                           	opt callstack 0
 30578                           
 30579 ;; *************** function _I2C2_MasterDisableIrq *****************
 30580 ;; Defined at:
 30581 ;;		line 793 in file "mcc_generated_files/i2c2_master.c"
 30582 ;; Parameters:    Size  Location     Type
 30583 ;;		None
 30584 ;; Auto vars:     Size  Location     Type
 30585 ;;		None
 30586 ;; Return value:  Size  Location     Type
 30587 ;;                  1    wreg      void 
 30588 ;; Registers used:
 30589 ;;		None
 30590 ;; Tracked objects:
 30591 ;;		On entry : 3F/3D
 30592 ;;		On exit  : 3F/3D
 30593 ;;		Unchanged: 0/0
 30594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30599 ;;Total ram usage:        0 bytes
 30600 ;; Hardware stack levels used:    1
 30601 ;; Hardware stack levels required when called:   17
 30602 ;; This function calls:
 30603 ;;		Nothing
 30604 ;; This function is called by:
 30605 ;;		_I2C2_Close
 30606 ;; This function uses a non-reentrant model
 30607 ;;
 30608                           
 30609                           	psect	text149
 30610  00A06C                     __ptext149:
 30611                           	opt callstack 0
 30612  00A06C                     _I2C2_MasterDisableIrq:
 30613                           	opt callstack 7
 30614                           
 30615                           ; BSR set to: 61
 30616                           ;mcc_generated_files/i2c2_master.c: 795:     PIE6bits.I2C2IE = 0;
 30617                           
 30618                           ; BSR set to: 0
 30619                           ;incstack = 0
 30620  00A06C  0139               	movlb	57	; () banked
 30621  00A06E  9196               	bcf	150,0,b	;volatile
 30622                           
 30623                           ;mcc_generated_files/i2c2_master.c: 796:     PIE6bits.I2C2EIE = 0;
 30624  00A070  9396               	bcf	150,1,b	;volatile
 30625                           
 30626                           ;mcc_generated_files/i2c2_master.c: 797:     PIE5bits.I2C2RXIE = 0;
 30627  00A072  9D95               	bcf	149,6,b	;volatile
 30628                           
 30629                           ;mcc_generated_files/i2c2_master.c: 798:     PIE5bits.I2C2TXIE = 0;
 30630  00A074  9F95               	bcf	149,7,b	;volatile
 30631                           
 30632                           ;mcc_generated_files/i2c2_master.c: 799:     I2C2PIEbits.SCIE = 0;
 30633  00A076  013D               	movlb	61	; () banked
 30634  00A078  9164               	bcf	100,0,b	;volatile
 30635                           
 30636                           ;mcc_generated_files/i2c2_master.c: 800:     I2C2PIEbits.PCIE = 0;
 30637  00A07A  9564               	bcf	100,2,b	;volatile
 30638                           
 30639                           ;mcc_generated_files/i2c2_master.c: 801:     I2C2PIEbits.CNTIE = 0;
 30640  00A07C  9F64               	bcf	100,7,b	;volatile
 30641                           
 30642                           ;mcc_generated_files/i2c2_master.c: 802:     I2C2PIEbits.ACKTIE = 0;
 30643  00A07E  9D64               	bcf	100,6,b	;volatile
 30644                           
 30645                           ;mcc_generated_files/i2c2_master.c: 803:     I2C2PIEbits.RSCIE = 0;
 30646  00A080  9364               	bcf	100,1,b	;volatile
 30647                           
 30648                           ;mcc_generated_files/i2c2_master.c: 804:     I2C2ERRbits.BCLIE = 0;
 30649  00A082  9360               	bcf	96,1,b	;volatile
 30650                           
 30651                           ;mcc_generated_files/i2c2_master.c: 805:     I2C2ERRbits.BTOIE = 0;
 30652  00A084  9560               	bcf	96,2,b	;volatile
 30653                           
 30654                           ;mcc_generated_files/i2c2_master.c: 806:     I2C2ERRbits.NACKIE = 0;
 30655  00A086  9160               	bcf	96,0,b	;volatile
 30656                           
 30657                           ; BSR set to: 61
 30658  00A088  0012               	return		;funcret
 30659  00A08A                     __end_of_I2C2_MasterDisableIrq:
 30660                           	opt callstack 0
 30661                           
 30662 ;; *************** function _I2C2_MasterClose *****************
 30663 ;; Defined at:
 30664 ;;		line 656 in file "mcc_generated_files/i2c2_master.c"
 30665 ;; Parameters:    Size  Location     Type
 30666 ;;		None
 30667 ;; Auto vars:     Size  Location     Type
 30668 ;;		None
 30669 ;; Return value:  Size  Location     Type
 30670 ;;                  1    wreg      void 
 30671 ;; Registers used:
 30672 ;;		wreg, status,2
 30673 ;; Tracked objects:
 30674 ;;		On entry : 3F/3D
 30675 ;;		On exit  : 3F/3D
 30676 ;;		Unchanged: 0/0
 30677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30682 ;;Total ram usage:        0 bytes
 30683 ;; Hardware stack levels used:    1
 30684 ;; Hardware stack levels required when called:   17
 30685 ;; This function calls:
 30686 ;;		Nothing
 30687 ;; This function is called by:
 30688 ;;		_I2C2_Close
 30689 ;; This function uses a non-reentrant model
 30690 ;;
 30691                           
 30692                           	psect	text150
 30693  00A422                     __ptext150:
 30694                           	opt callstack 0
 30695  00A422                     _I2C2_MasterClose:
 30696                           	opt callstack 7
 30697                           
 30698                           ; BSR set to: 61
 30699                           ;mcc_generated_files/i2c2_master.c: 659:     I2C2CON0bits.EN = 0;
 30700                           
 30701                           ; BSR set to: 61
 30702                           ;incstack = 0
 30703  00A422  9F5D               	bcf	93,7,b	;volatile
 30704                           
 30705                           ; BSR set to: 61
 30706                           ;mcc_generated_files/i2c2_master.c: 661:     I2C2PIR = 0x00;
 30707  00A424  0E00               	movlw	0
 30708  00A426  6F63               	movwf	99,b	;volatile
 30709                           
 30710                           ; BSR set to: 61
 30711                           ;mcc_generated_files/i2c2_master.c: 663:     I2C2STAT1bits.CLRBF = 1;
 30712  00A428  8562               	bsf	98,2,b	;volatile
 30713                           
 30714                           ; BSR set to: 61
 30715  00A42A  0012               	return		;funcret
 30716  00A42C                     __end_of_I2C2_MasterClose:
 30717                           	opt callstack 0
 30718                           
 30719 ;; *************** function _I2C2_MasterClearIrq *****************
 30720 ;; Defined at:
 30721 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 30722 ;; Parameters:    Size  Location     Type
 30723 ;;		None
 30724 ;; Auto vars:     Size  Location     Type
 30725 ;;		None
 30726 ;; Return value:  Size  Location     Type
 30727 ;;                  1    wreg      void 
 30728 ;; Registers used:
 30729 ;;		wreg, status,2
 30730 ;; Tracked objects:
 30731 ;;		On entry : 3D/0
 30732 ;;		On exit  : 3F/3D
 30733 ;;		Unchanged: 0/0
 30734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30739 ;;Total ram usage:        0 bytes
 30740 ;; Hardware stack levels used:    1
 30741 ;; Hardware stack levels required when called:   17
 30742 ;; This function calls:
 30743 ;;		Nothing
 30744 ;; This function is called by:
 30745 ;;		_I2C2_Open
 30746 ;;		_I2C2_Close
 30747 ;; This function uses a non-reentrant model
 30748 ;;
 30749                           
 30750                           	psect	text151
 30751  00A452                     __ptext151:
 30752                           	opt callstack 0
 30753  00A452                     _I2C2_MasterClearIrq:
 30754                           	opt callstack 7
 30755                           
 30756                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 30757                           
 30758                           ; BSR set to: 61
 30759                           ;incstack = 0
 30760  00A452  0E00               	movlw	0
 30761  00A454  013D               	movlb	61	; () banked
 30762  00A456  6F63               	movwf	99,b	;volatile
 30763                           
 30764                           ; BSR set to: 61
 30765  00A458  0012               	return		;funcret
 30766  00A45A                     __end_of_I2C2_MasterClearIrq:
 30767                           	opt callstack 0
 30768                           
 30769 ;; *************** function _INTERRUPT_InterruptManager *****************
 30770 ;; Defined at:
 30771 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 30772 ;; Parameters:    Size  Location     Type
 30773 ;;		None
 30774 ;; Auto vars:     Size  Location     Type
 30775 ;;		None
 30776 ;; Return value:  Size  Location     Type
 30777 ;;                  1    wreg      void 
 30778 ;; Registers used:
 30779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30780 ;; Tracked objects:
 30781 ;;		On entry : 0/0
 30782 ;;		On exit  : 0/0
 30783 ;;		Unchanged: 0/0
 30784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30788 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30789 ;;Total ram usage:        4 bytes
 30790 ;; Hardware stack levels used:    1
 30791 ;; Hardware stack levels required when called:   16
 30792 ;; This function calls:
 30793 ;;		Absolute function
 30794 ;;		_ADCC_ThresholdISR
 30795 ;;		_I2C2_MasterIsr
 30796 ;;		_TMR2_ISR
 30797 ;;		_TMR4_ISR
 30798 ;;		_TMR6_ISR
 30799 ;;		_UART1_Transmit_ISR
 30800 ;; This function is called by:
 30801 ;;		Interrupt level 2
 30802 ;; This function uses a non-reentrant model
 30803 ;;
 30804                           
 30805                           	psect	text152
 30806  007F44                     __ptext152:
 30807                           	opt callstack 0
 30808  007F44                     _INTERRUPT_InterruptManager:
 30809                           	opt callstack 0
 30810                           
 30811                           ; BSR set to: 61
 30812                           ;incstack = 0
 30813 ;; hardware stack exceeded
 30814  007F44  006F FFD8  F087    	movff	tblptrl,??_INTERRUPT_InterruptManager
 30815  007F4A  006F FFDC  F088    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 30816  007F50  006F FFE0  F089    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 30817  007F56  006F FFD4  F08A    	movff	tablat,??_INTERRUPT_InterruptManager+3
 30818                           
 30819                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
 30820  007F5C  0139               	movlb	57	; () banked
 30821  007F5E  B993               	btfsc	147,4,b	;volatile
 30822                           
 30823                           ; BSR set to: 57
 30824  007F60  A9A3               	btfss	163,4,b	;volatile
 30825  007F62  D009               	goto	i2l334
 30826                           
 30827                           ; BSR set to: 57
 30828                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
 30829  007F64  D801               	call	i2u2132_48
 30830  007F66  D039               	goto	i2l347
 30831  007F68                     i2u2132_48:
 30832  007F68  0005               	push	
 30833  007F6A  6EFA               	movwf	pclath,c
 30834  007F6C  0102               	movlb	2	; () banked
 30835  007F6E  51F6               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 30836  007F70  6EFD               	movwf	tosl,c
 30837  007F72  51F7               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 30838  007F74  D00B               	goto	L50
 30839  007F76                     i2l334:
 30840                           
 30841                           ; BSR set to: 57
 30842  007F76  B396               	btfsc	150,1,b	;volatile
 30843                           
 30844                           ; BSR set to: 57
 30845  007F78  A3A6               	btfss	166,1,b	;volatile
 30846  007F7A  D00C               	goto	i2l336
 30847  007F7C                     i2u2134_40:
 30848                           
 30849                           ; BSR set to: 57
 30850                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         I2C2_InterruptHandler();
 30851  007F7C  D801               	call	i2u2135_48
 30852  007F7E  D02D               	goto	i2l347
 30853  007F80                     i2u2135_48:
 30854  007F80  0005               	push	
 30855  007F82  6EFA               	movwf	pclath,c
 30856  007F84  0100               	movlb	0	; () banked
 30857  007F86  51BC               	movf	_I2C2_InterruptHandler& (0+255),w,b
 30858  007F88  6EFD               	movwf	tosl,c
 30859  007F8A  51BD               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 30860  007F8C                     L50:
 30861  007F8C  6EFE               	movwf	tosh,c
 30862  007F8E  6AFF               	clrf	tosu,c
 30863  007F90  50FA               	movf	pclath,w,c
 30864  007F92  0012               	return		;indir
 30865  007F94                     i2l336:
 30866                           
 30867                           ; BSR set to: 57
 30868  007F94  AD95               	btfss	149,6,b	;volatile
 30869  007F96  D002               	goto	i2l338
 30870                           
 30871                           ; BSR set to: 57
 30872  007F98  BDA5               	btfsc	165,6,b	;volatile
 30873  007F9A  D7F0               	goto	i2u2134_40
 30874  007F9C                     i2l338:
 30875                           
 30876                           ; BSR set to: 57
 30877  007F9C  A196               	btfss	150,0,b	;volatile
 30878  007F9E  D002               	goto	i2l340
 30879                           
 30880                           ; BSR set to: 57
 30881  007FA0  B1A6               	btfsc	166,0,b	;volatile
 30882  007FA2  D7EC               	goto	i2u2134_40
 30883  007FA4                     i2l340:
 30884                           
 30885                           ; BSR set to: 57
 30886  007FA4  AF95               	btfss	149,7,b	;volatile
 30887  007FA6  D002               	goto	i2l342
 30888                           
 30889                           ; BSR set to: 57
 30890  007FA8  BFA5               	btfsc	165,7,b	;volatile
 30891  007FAA  D7E8               	goto	i2u2134_40
 30892  007FAC                     i2l342:
 30893                           
 30894                           ; BSR set to: 57
 30895  007FAC  B199               	btfsc	153,0,b	;volatile
 30896                           
 30897                           ; BSR set to: 57
 30898  007FAE  A1A9               	btfss	169,0,b	;volatile
 30899  007FB0  D003               	goto	i2l344
 30900                           
 30901                           ; BSR set to: 57
 30902                           ;mcc_generated_files/interrupt_manager.c: 82:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 83:         TMR6_ISR();
 30903  007FB2  EC81  F04F         	call	_TMR6_ISR	;wreg free
 30904                           
 30905                           ;mcc_generated_files/interrupt_manager.c: 84:     }
 30906  007FB6  D011               	goto	i2l347
 30907  007FB8                     i2l344:
 30908                           
 30909                           ; BSR set to: 57
 30910  007FB8  B197               	btfsc	151,0,b	;volatile
 30911                           
 30912                           ; BSR set to: 57
 30913  007FBA  A1A7               	btfss	167,0,b	;volatile
 30914  007FBC  D003               	goto	i2l346
 30915                           
 30916                           ; BSR set to: 57
 30917                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 87:         TMR4_ISR();
 30918  007FBE  EC92  F04F         	call	_TMR4_ISR	;wreg free
 30919                           
 30920                           ;mcc_generated_files/interrupt_manager.c: 88:     }
 30921  007FC2  D00B               	goto	i2l347
 30922  007FC4                     i2l346:
 30923                           
 30924                           ; BSR set to: 57
 30925  007FC4  B791               	btfsc	145,3,b	;volatile
 30926                           
 30927                           ; BSR set to: 57
 30928  007FC6  A7A1               	btfss	161,3,b	;volatile
 30929  007FC8  D003               	goto	i2l348
 30930                           
 30931                           ; BSR set to: 57
 30932                           ;mcc_generated_files/interrupt_manager.c: 90:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 91:         ADCC_ThresholdISR();
 30933  007FCA  ECC5  F04F         	call	_ADCC_ThresholdISR	;wreg free
 30934                           
 30935                           ;mcc_generated_files/interrupt_manager.c: 92:     }
 30936  007FCE  D005               	goto	i2l347
 30937  007FD0                     i2l348:
 30938                           
 30939                           ; BSR set to: 57
 30940  007FD0  B594               	btfsc	148,2,b	;volatile
 30941                           
 30942                           ; BSR set to: 57
 30943  007FD2  A5A4               	btfss	164,2,b	;volatile
 30944  007FD4  D002               	goto	i2l347
 30945                           
 30946                           ; BSR set to: 57
 30947                           ;mcc_generated_files/interrupt_manager.c: 94:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 95:         TMR2_ISR();
 30948  007FD6  ECA3  F04F         	call	_TMR2_ISR	;wreg free
 30949  007FDA                     i2l347:
 30950                           
 30951                           ; BSR set to: 57
 30952  007FDA  0060  F22B  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 30953  007FE0  0060  F227  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 30954  007FE6  0060  F223  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 30955  007FEC  0060  F21F  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 30956  007FF2  0011               	retfie		f
 30957  007FF4                     __end_of_INTERRUPT_InterruptManager:
 30958                           	opt callstack 0
 30959                           
 30960 ;; *************** function _UART1_Transmit_ISR *****************
 30961 ;; Defined at:
 30962 ;;		line 217 in file "mcc_generated_files/uart1.c"
 30963 ;; Parameters:    Size  Location     Type
 30964 ;;		None
 30965 ;; Auto vars:     Size  Location     Type
 30966 ;;		None
 30967 ;; Return value:  Size  Location     Type
 30968 ;;                  1    wreg      void 
 30969 ;; Registers used:
 30970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30971 ;; Tracked objects:
 30972 ;;		On entry : 3F/2
 30973 ;;		On exit  : 6/0
 30974 ;;		Unchanged: 0/0
 30975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30980 ;;Total ram usage:        0 bytes
 30981 ;; Hardware stack levels used:    1
 30982 ;; This function calls:
 30983 ;;		Nothing
 30984 ;; This function is called by:
 30985 ;;		_UART1_Initialize
 30986 ;;		_INTERRUPT_InterruptManager
 30987 ;; This function uses a non-reentrant model
 30988 ;;
 30989                           
 30990                           	psect	text153
 30991  00997C                     __ptext153:
 30992                           	opt callstack 0
 30993  00997C                     _UART1_Transmit_ISR:
 30994                           	opt callstack 12
 30995                           
 30996                           ; BSR set to: 2
 30997                           ;mcc_generated_files/uart1.c: 220:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 30998                           
 30999                           ;incstack = 0
 31000  00997C  0E40               	movlw	64
 31001  00997E  0100               	movlb	0	; () banked
 31002  009980  61D4               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 31003  009982  D012               	goto	i2l462
 31004                           
 31005                           ; BSR set to: 0
 31006                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 31007  009984  0E50               	movlw	low _uart1TxBuffer
 31008  009986  25CE               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 31009  009988  6ED9               	movwf	fsr2l,c
 31010  00998A  6ADA               	clrf	fsr2h,c
 31011  00998C  0E03               	movlw	high _uart1TxBuffer
 31012  00998E  22DA               	addwfc	fsr2h,f,c
 31013  009990  50DF               	movf	indf2,w,c
 31014  009992  013D               	movlb	61	; () banked
 31015  009994  6FEA               	movwf	234,b	;volatile
 31016                           
 31017                           ; BSR set to: 61
 31018  009996  0100               	movlb	0	; () banked
 31019  009998  2BCE               	incf	_uart1TxTail& (0+255),f,b	;volatile
 31020                           
 31021                           ; BSR set to: 0
 31022                           ;mcc_generated_files/uart1.c: 223:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 31023  00999A  0E3F               	movlw	63
 31024  00999C  65CE               	cpfsgt	_uart1TxTail& (0+255),b
 31025  00999E  D002               	goto	i2l13392
 31026                           
 31027                           ; BSR set to: 0
 31028                           ;mcc_generated_files/uart1.c: 224:         {;mcc_generated_files/uart1.c: 225:          
      +                             uart1TxTail = 0;
 31029  0099A0  0E00               	movlw	0
 31030  0099A2  6FCE               	movwf	_uart1TxTail& (0+255),b	;volatile
 31031  0099A4                     i2l13392:
 31032                           
 31033                           ; BSR set to: 0
 31034                           ;mcc_generated_files/uart1.c: 227:         uart1TxBufferRemaining++;
 31035  0099A4  2BD4               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 31036                           
 31037                           ;mcc_generated_files/uart1.c: 228:     }
 31038  0099A6  0012               	return	
 31039  0099A8                     i2l462:
 31040                           
 31041                           ; BSR set to: 0
 31042                           ;mcc_generated_files/uart1.c: 230:     {;mcc_generated_files/uart1.c: 231:         PIE3b
      +                          its.U1TXIE = 0;
 31043  0099A8  0139               	movlb	57	; () banked
 31044  0099AA  9993               	bcf	147,4,b	;volatile
 31045  0099AC  0012               	return		;funcret
 31046  0099AE                     __end_of_UART1_Transmit_ISR:
 31047                           	opt callstack 0
 31048                           
 31049 ;; *************** function _TMR6_ISR *****************
 31050 ;; Defined at:
 31051 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 31052 ;; Parameters:    Size  Location     Type
 31053 ;;		None
 31054 ;; Auto vars:     Size  Location     Type
 31055 ;;		None
 31056 ;; Return value:  Size  Location     Type
 31057 ;;                  1    wreg      void 
 31058 ;; Registers used:
 31059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31060 ;; Tracked objects:
 31061 ;;		On entry : 3F/39
 31062 ;;		On exit  : 0/0
 31063 ;;		Unchanged: 0/0
 31064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31069 ;;Total ram usage:        0 bytes
 31070 ;; Hardware stack levels used:    1
 31071 ;; Hardware stack levels required when called:    2
 31072 ;; This function calls:
 31073 ;;		Absolute function
 31074 ;;		_TMR6_DefaultInterruptHandler
 31075 ;;		_lcdIrqHandler
 31076 ;; This function is called by:
 31077 ;;		_INTERRUPT_InterruptManager
 31078 ;; This function uses a non-reentrant model
 31079 ;;
 31080                           
 31081                           	psect	text154
 31082  009F02                     __ptext154:
 31083                           	opt callstack 0
 31084  009F02                     _TMR6_ISR:
 31085                           	opt callstack 10
 31086                           
 31087                           ; BSR set to: 57
 31088                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 31089                           
 31090                           ;incstack = 0
 31091  009F02  91A9               	bcf	169,0,b	;volatile
 31092                           
 31093                           ; BSR set to: 57
 31094                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 31095  009F04  0102               	movlb	2	; () banked
 31096  009F06  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31097  009F08  11E9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31098  009F0A  B4D8               	btfsc	status,2,c
 31099  009F0C  0012               	return	
 31100                           
 31101                           ; BSR set to: 2
 31102                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 31103  009F0E  D801               	call	i2u1242_48
 31104  009F10  0012               	return	
 31105  009F12                     i2u1242_48:
 31106  009F12  0005               	push	
 31107  009F14  6EFA               	movwf	pclath,c
 31108  009F16  51E8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31109  009F18  6EFD               	movwf	tosl,c
 31110  009F1A  51E9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31111  009F1C  6EFE               	movwf	tosh,c
 31112  009F1E  6AFF               	clrf	tosu,c
 31113  009F20  50FA               	movf	pclath,w,c
 31114  009F22  0012               	return		;indir
 31115  009F24                     __end_of_TMR6_ISR:
 31116                           	opt callstack 0
 31117                           
 31118 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31119 ;; Defined at:
 31120 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31121 ;; Parameters:    Size  Location     Type
 31122 ;;		None
 31123 ;; Auto vars:     Size  Location     Type
 31124 ;;		None
 31125 ;; Return value:  Size  Location     Type
 31126 ;;                  1    wreg      void 
 31127 ;; Registers used:
 31128 ;;		None
 31129 ;; Tracked objects:
 31130 ;;		On entry : 3F/2
 31131 ;;		On exit  : 3F/2
 31132 ;;		Unchanged: 3F/0
 31133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31138 ;;Total ram usage:        0 bytes
 31139 ;; Hardware stack levels used:    1
 31140 ;; This function calls:
 31141 ;;		Nothing
 31142 ;; This function is called by:
 31143 ;;		_TMR6_Initialize
 31144 ;;		_TMR6_ISR
 31145 ;; This function uses a non-reentrant model
 31146 ;;
 31147                           
 31148                           	psect	text155
 31149  00A4FA                     __ptext155:
 31150                           	opt callstack 0
 31151  00A4FA                     _TMR6_DefaultInterruptHandler:
 31152                           	opt callstack 11
 31153                           
 31154                           ; BSR set to: 2
 31155                           
 31156                           ;incstack = 0
 31157  00A4FA  0012               	return		;funcret
 31158  00A4FC                     __end_of_TMR6_DefaultInterruptHandler:
 31159                           	opt callstack 0
 31160                           
 31161 ;; *************** function _lcdIrqHandler *****************
 31162 ;; Defined at:
 31163 ;;		line 32 in file "LiquidCrystal_I2C.c"
 31164 ;; Parameters:    Size  Location     Type
 31165 ;;		None
 31166 ;; Auto vars:     Size  Location     Type
 31167 ;;  byte            1    1[COMRAM] unsigned char 
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  1    wreg      void 
 31170 ;; Registers used:
 31171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31172 ;; Tracked objects:
 31173 ;;		On entry : 3F/2
 31174 ;;		On exit  : 3F/0
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31181 ;;Total ram usage:        2 bytes
 31182 ;; Hardware stack levels used:    1
 31183 ;; Hardware stack levels required when called:    1
 31184 ;; This function calls:
 31185 ;;		i2_TMR6_Start
 31186 ;; This function is called by:
 31187 ;;		_LcdI2CInit
 31188 ;;		_TMR6_ISR
 31189 ;; This function uses a non-reentrant model
 31190 ;;
 31191                           
 31192                           	psect	text156
 31193  007900                     __ptext156:
 31194                           	opt callstack 0
 31195  007900                     _lcdIrqHandler:
 31196                           	opt callstack 10
 31197                           
 31198                           ; BSR set to: 2
 31199                           ;LiquidCrystal_I2C.c: 33:     uint8_t byte;;LiquidCrystal_I2C.c: 34:     if (parBuffPtr 
      +                          < parBuffLen){
 31200                           
 31201                           ; BSR set to: 2
 31202                           ;incstack = 0
 31203  007900  0100               	movlb	0	; () banked
 31204  007902  51C2               	movf	_parBuffLen& (0+255),w,b	;volatile
 31205  007904  5DC3               	subwf	_parBuffPtr& (0+255),w,b	;volatile
 31206  007906  B0D8               	btfsc	status,0,c
 31207  007908  D067               	goto	i2l13016
 31208                           
 31209                           ; BSR set to: 0
 31210                           ;LiquidCrystal_I2C.c: 36:         LATAbits.LATA7=0;
 31211  00790A  9EBA               	bcf	186,7,c	;volatile
 31212                           
 31213                           ; BSR set to: 0
 31214                           ;LiquidCrystal_I2C.c: 38:         byte = i2cBuff[parBuffPtr];
 31215  00790C  0E00               	movlw	low _i2cBuff
 31216  00790E  25C3               	addwf	_parBuffPtr& (0+255),w,b	;volatile
 31217  007910  6ED9               	movwf	fsr2l,c
 31218  007912  6ADA               	clrf	fsr2h,c
 31219  007914  0E03               	movlw	high _i2cBuff
 31220  007916  22DA               	addwfc	fsr2h,f,c
 31221  007918  50DF               	movf	indf2,w,c
 31222  00791A  6E02               	movwf	lcdIrqHandler@byte^0,c
 31223                           
 31224                           ; BSR set to: 0
 31225                           ;LiquidCrystal_I2C.c: 39:         LATAbits.LATA6=(byte&0x1)?1:0;
 31226  00791C  A002               	btfss	lcdIrqHandler@byte^0,0,c
 31227  00791E  D003               	goto	i2u1176_40
 31228  007920  6A01               	clrf	??_lcdIrqHandler^0,c
 31229  007922  2A01               	incf	??_lcdIrqHandler^0,f,c
 31230  007924  D001               	goto	i2u1177_48
 31231  007926                     i2u1176_40:
 31232  007926  6A01               	clrf	??_lcdIrqHandler^0,c
 31233  007928                     i2u1177_48:
 31234  007928  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31235  00792A  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31236  00792C  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31237  00792E  50BA               	movf	186,w,c	;volatile
 31238  007930  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31239  007932  0BBF               	andlw	-65
 31240  007934  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31241  007936  6EBA               	movwf	186,c	;volatile
 31242                           
 31243                           ;LiquidCrystal_I2C.c: 41:         LATAbits.LATA7=(byte&0x4)?1:0;
 31244  007938  A402               	btfss	lcdIrqHandler@byte^0,2,c
 31245  00793A  D003               	goto	i2u1178_40
 31246  00793C  6A01               	clrf	??_lcdIrqHandler^0,c
 31247  00793E  2A01               	incf	??_lcdIrqHandler^0,f,c
 31248  007940  D001               	goto	i2u1179_48
 31249  007942                     i2u1178_40:
 31250  007942  6A01               	clrf	??_lcdIrqHandler^0,c
 31251  007944                     i2u1179_48:
 31252  007944  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31253  007946  3201               	rrcf	??_lcdIrqHandler^0,f,c
 31254  007948  50BA               	movf	186,w,c	;volatile
 31255  00794A  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31256  00794C  0B7F               	andlw	-129
 31257  00794E  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31258  007950  6EBA               	movwf	186,c	;volatile
 31259                           
 31260                           ;LiquidCrystal_I2C.c: 43:         LATAbits.LATA0=(byte&0x10)?1:0;
 31261  007952  A802               	btfss	lcdIrqHandler@byte^0,4,c
 31262  007954  D003               	goto	i2u1180_40
 31263  007956  6A01               	clrf	??_lcdIrqHandler^0,c
 31264  007958  2A01               	incf	??_lcdIrqHandler^0,f,c
 31265  00795A  D001               	goto	i2u1181_48
 31266  00795C                     i2u1180_40:
 31267  00795C  6A01               	clrf	??_lcdIrqHandler^0,c
 31268  00795E                     i2u1181_48:
 31269  00795E  50BA               	movf	186,w,c	;volatile
 31270  007960  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31271  007962  0BFE               	andlw	-2
 31272  007964  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31273  007966  6EBA               	movwf	186,c	;volatile
 31274                           
 31275                           ;LiquidCrystal_I2C.c: 44:         LATAbits.LATA1=(byte&0x20)?1:0;
 31276  007968  AA02               	btfss	lcdIrqHandler@byte^0,5,c
 31277  00796A  D003               	goto	i2u1182_40
 31278  00796C  6A01               	clrf	??_lcdIrqHandler^0,c
 31279  00796E  2A01               	incf	??_lcdIrqHandler^0,f,c
 31280  007970  D001               	goto	i2u1183_48
 31281  007972                     i2u1182_40:
 31282  007972  6A01               	clrf	??_lcdIrqHandler^0,c
 31283  007974                     i2u1183_48:
 31284  007974  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31285  007976  50BA               	movf	186,w,c	;volatile
 31286  007978  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31287  00797A  0BFD               	andlw	-3
 31288  00797C  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31289  00797E  6EBA               	movwf	186,c	;volatile
 31290                           
 31291                           ;LiquidCrystal_I2C.c: 45:         LATAbits.LATA4=(byte&0x40)?1:0;
 31292  007980  AC02               	btfss	lcdIrqHandler@byte^0,6,c
 31293  007982  D003               	goto	i2u1184_40
 31294  007984  6A01               	clrf	??_lcdIrqHandler^0,c
 31295  007986  2A01               	incf	??_lcdIrqHandler^0,f,c
 31296  007988  D001               	goto	i2u1185_48
 31297  00798A                     i2u1184_40:
 31298  00798A  6A01               	clrf	??_lcdIrqHandler^0,c
 31299  00798C                     i2u1185_48:
 31300  00798C  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31301  00798E  50BA               	movf	186,w,c	;volatile
 31302  007990  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31303  007992  0BEF               	andlw	-17
 31304  007994  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31305  007996  6EBA               	movwf	186,c	;volatile
 31306                           
 31307                           ;LiquidCrystal_I2C.c: 46:         LATAbits.LATA5=(byte&0x80)?1:0;
 31308  007998  AE02               	btfss	lcdIrqHandler@byte^0,7,c
 31309  00799A  D003               	goto	i2u1186_40
 31310  00799C  6A01               	clrf	??_lcdIrqHandler^0,c
 31311  00799E  2A01               	incf	??_lcdIrqHandler^0,f,c
 31312  0079A0  D001               	goto	i2u1187_48
 31313  0079A2                     i2u1186_40:
 31314  0079A2  6A01               	clrf	??_lcdIrqHandler^0,c
 31315  0079A4                     i2u1187_48:
 31316  0079A4  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31317  0079A6  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31318  0079A8  50BA               	movf	186,w,c	;volatile
 31319  0079AA  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31320  0079AC  0BDF               	andlw	-33
 31321  0079AE  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31322  0079B0  6EBA               	movwf	186,c	;volatile
 31323                           
 31324                           ;LiquidCrystal_I2C.c: 48:         LATBbits.LATB5 = (byte&0x08)?1:0;
 31325  0079B2  A602               	btfss	lcdIrqHandler@byte^0,3,c
 31326  0079B4  D003               	goto	i2u1188_40
 31327  0079B6  6A01               	clrf	??_lcdIrqHandler^0,c
 31328  0079B8  2A01               	incf	??_lcdIrqHandler^0,f,c
 31329  0079BA  D001               	goto	i2u1189_48
 31330  0079BC                     i2u1188_40:
 31331  0079BC  6A01               	clrf	??_lcdIrqHandler^0,c
 31332  0079BE                     i2u1189_48:
 31333  0079BE  3A01               	swapf	??_lcdIrqHandler^0,f,c
 31334  0079C0  4601               	rlncf	??_lcdIrqHandler^0,f,c
 31335  0079C2  50BB               	movf	187,w,c	;volatile
 31336  0079C4  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31337  0079C6  0BDF               	andlw	-33
 31338  0079C8  1801               	xorwf	??_lcdIrqHandler^0,w,c
 31339  0079CA  6EBB               	movwf	187,c	;volatile
 31340                           
 31341                           ;LiquidCrystal_I2C.c: 49:         parBuffPtr++;
 31342  0079CC  0100               	movlb	0	; () banked
 31343  0079CE  2BC3               	incf	_parBuffPtr& (0+255),f,b	;volatile
 31344                           
 31345                           ; BSR set to: 0
 31346                           ;LiquidCrystal_I2C.c: 51:         TMR6_Start();
 31347  0079D0  EC6A  F052         	call	i2_TMR6_Start	;wreg free
 31348                           
 31349                           ; BSR set to: 0
 31350                           ;LiquidCrystal_I2C.c: 53:         LATAbits.LATA7=0;
 31351  0079D4  9EBA               	bcf	186,7,c	;volatile
 31352                           
 31353                           ;LiquidCrystal_I2C.c: 54:     } else {
 31354  0079D6  0012               	return	
 31355  0079D8                     i2l13016:
 31356                           
 31357                           ; BSR set to: 0
 31358                           ;LiquidCrystal_I2C.c: 55:         lcdBusy = 0;
 31359  0079D8  0E00               	movlw	0
 31360  0079DA  6FC1               	movwf	_lcdBusy& (0+255),b	;volatile
 31361                           
 31362                           ; BSR set to: 0
 31363  0079DC  0012               	return		;funcret
 31364  0079DE                     __end_of_lcdIrqHandler:
 31365                           	opt callstack 0
 31366                           
 31367 ;; *************** function i2_TMR6_Start *****************
 31368 ;; Defined at:
 31369 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 31370 ;; Parameters:    Size  Location     Type
 31371 ;;		None
 31372 ;; Auto vars:     Size  Location     Type
 31373 ;;		None
 31374 ;; Return value:  Size  Location     Type
 31375 ;;                  1    wreg      void 
 31376 ;; Registers used:
 31377 ;;		None
 31378 ;; Tracked objects:
 31379 ;;		On entry : 3F/0
 31380 ;;		On exit  : 3F/0
 31381 ;;		Unchanged: 3F/0
 31382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31387 ;;Total ram usage:        0 bytes
 31388 ;; Hardware stack levels used:    1
 31389 ;; This function calls:
 31390 ;;		Nothing
 31391 ;; This function is called by:
 31392 ;;		_lcdIrqHandler
 31393 ;; This function uses a non-reentrant model
 31394 ;;
 31395                           
 31396                           	psect	text157
 31397  00A4D4                     __ptext157:
 31398                           	opt callstack 0
 31399  00A4D4                     i2_TMR6_Start:
 31400                           	opt callstack 10
 31401                           
 31402                           ; BSR set to: 0
 31403                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 31404                           
 31405                           ; BSR set to: 0
 31406                           ;incstack = 0
 31407  00A4D4  8E94               	bsf	148,7,c	;volatile
 31408                           
 31409                           ; BSR set to: 0
 31410  00A4D6  0012               	return		;funcret
 31411  00A4D8                     __end_ofi2_TMR6_Start:
 31412                           	opt callstack 0
 31413                           
 31414 ;; *************** function _TMR4_ISR *****************
 31415 ;; Defined at:
 31416 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 31417 ;; Parameters:    Size  Location     Type
 31418 ;;		None
 31419 ;; Auto vars:     Size  Location     Type
 31420 ;;		None
 31421 ;; Return value:  Size  Location     Type
 31422 ;;                  1    wreg      void 
 31423 ;; Registers used:
 31424 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31425 ;; Tracked objects:
 31426 ;;		On entry : 3F/39
 31427 ;;		On exit  : 0/0
 31428 ;;		Unchanged: 0/0
 31429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31434 ;;Total ram usage:        0 bytes
 31435 ;; Hardware stack levels used:    1
 31436 ;; Hardware stack levels required when called:    1
 31437 ;; This function calls:
 31438 ;;		Absolute function
 31439 ;;		_SV2DelayOpen
 31440 ;;		_TMR4_DefaultInterruptHandler
 31441 ;; This function is called by:
 31442 ;;		_INTERRUPT_InterruptManager
 31443 ;; This function uses a non-reentrant model
 31444 ;;
 31445                           
 31446                           	psect	text158
 31447  009F24                     __ptext158:
 31448                           	opt callstack 0
 31449  009F24                     _TMR4_ISR:
 31450                           	opt callstack 11
 31451                           
 31452                           ; BSR set to: 57
 31453                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 31454                           
 31455                           ; BSR set to: 0
 31456                           ;incstack = 0
 31457  009F24  91A7               	bcf	167,0,b	;volatile
 31458                           
 31459                           ; BSR set to: 57
 31460                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 31461  009F26  0102               	movlb	2	; () banked
 31462  009F28  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 31463  009F2A  11EB               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 31464  009F2C  B4D8               	btfsc	status,2,c
 31465  009F2E  0012               	return	
 31466                           
 31467                           ; BSR set to: 2
 31468                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 31469  009F30  D801               	call	i2u1244_48
 31470  009F32  0012               	return	
 31471  009F34                     i2u1244_48:
 31472  009F34  0005               	push	
 31473  009F36  6EFA               	movwf	pclath,c
 31474  009F38  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 31475  009F3A  6EFD               	movwf	tosl,c
 31476  009F3C  51EB               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 31477  009F3E  6EFE               	movwf	tosh,c
 31478  009F40  6AFF               	clrf	tosu,c
 31479  009F42  50FA               	movf	pclath,w,c
 31480  009F44  0012               	return		;indir
 31481  009F46                     __end_of_TMR4_ISR:
 31482                           	opt callstack 0
 31483                           
 31484 ;; *************** function _SV2DelayOpen *****************
 31485 ;; Defined at:
 31486 ;;		line 165 in file "main.c"
 31487 ;; Parameters:    Size  Location     Type
 31488 ;;		None
 31489 ;; Auto vars:     Size  Location     Type
 31490 ;;		None
 31491 ;; Return value:  Size  Location     Type
 31492 ;;                  1    wreg      void 
 31493 ;; Registers used:
 31494 ;;		wreg, status,2
 31495 ;; Tracked objects:
 31496 ;;		On entry : 3F/2
 31497 ;;		On exit  : 3F/1
 31498 ;;		Unchanged: 0/0
 31499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31504 ;;Total ram usage:        0 bytes
 31505 ;; Hardware stack levels used:    1
 31506 ;; This function calls:
 31507 ;;		Nothing
 31508 ;; This function is called by:
 31509 ;;		_main
 31510 ;;		_TMR4_ISR
 31511 ;; This function uses a non-reentrant model
 31512 ;;
 31513                           
 31514                           	psect	text159
 31515  00A338                     __ptext159:
 31516                           	opt callstack 0
 31517  00A338                     _SV2DelayOpen:
 31518                           	opt callstack 11
 31519                           
 31520                           ; BSR set to: 2
 31521                           ;main.c: 166:     if (initInspSubState) {
 31522                           
 31523                           ;incstack = 0
 31524  00A338  0101               	movlb	1	; () banked
 31525  00A33A  51C6               	movf	_initInspSubState& (0+255),w,b
 31526  00A33C  B4D8               	btfsc	status,2,c
 31527  00A33E  0012               	return	
 31528                           
 31529                           ; BSR set to: 1
 31530                           ;main.c: 167:         LATAbits.LATA2 = 1;LATCbits.LATC3 = 0;
 31531  00A340  84BA               	bsf	186,2,c	;volatile
 31532  00A342  96BC               	bcf	188,3,c	;volatile
 31533                           
 31534                           ; BSR set to: 1
 31535  00A344  0012               	return		;funcret
 31536  00A346                     __end_of_SV2DelayOpen:
 31537                           	opt callstack 0
 31538                           
 31539 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 31540 ;; Defined at:
 31541 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 31542 ;; Parameters:    Size  Location     Type
 31543 ;;		None
 31544 ;; Auto vars:     Size  Location     Type
 31545 ;;		None
 31546 ;; Return value:  Size  Location     Type
 31547 ;;                  1    wreg      void 
 31548 ;; Registers used:
 31549 ;;		None
 31550 ;; Tracked objects:
 31551 ;;		On entry : 3F/2
 31552 ;;		On exit  : 3F/2
 31553 ;;		Unchanged: 3F/0
 31554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31559 ;;Total ram usage:        0 bytes
 31560 ;; Hardware stack levels used:    1
 31561 ;; This function calls:
 31562 ;;		Nothing
 31563 ;; This function is called by:
 31564 ;;		_TMR4_Initialize
 31565 ;;		_TMR4_ISR
 31566 ;; This function uses a non-reentrant model
 31567 ;;
 31568                           
 31569                           	psect	text160
 31570  00A4FC                     __ptext160:
 31571                           	opt callstack 0
 31572  00A4FC                     _TMR4_DefaultInterruptHandler:
 31573                           	opt callstack 11
 31574                           
 31575                           ; BSR set to: 2
 31576                           
 31577                           ; BSR set to: 1
 31578                           ;incstack = 0
 31579  00A4FC  0012               	return		;funcret
 31580  00A4FE                     __end_of_TMR4_DefaultInterruptHandler:
 31581                           	opt callstack 0
 31582                           
 31583 ;; *************** function _TMR2_ISR *****************
 31584 ;; Defined at:
 31585 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 31586 ;; Parameters:    Size  Location     Type
 31587 ;;		None
 31588 ;; Auto vars:     Size  Location     Type
 31589 ;;		None
 31590 ;; Return value:  Size  Location     Type
 31591 ;;                  1    wreg      void 
 31592 ;; Registers used:
 31593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31594 ;; Tracked objects:
 31595 ;;		On entry : 3F/39
 31596 ;;		On exit  : 0/0
 31597 ;;		Unchanged: 0/0
 31598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31603 ;;Total ram usage:        0 bytes
 31604 ;; Hardware stack levels used:    1
 31605 ;; Hardware stack levels required when called:   11
 31606 ;; This function calls:
 31607 ;;		Absolute function
 31608 ;;		_TMR2_DefaultInterruptHandler
 31609 ;;		_vMeasureIsr
 31610 ;; This function is called by:
 31611 ;;		_INTERRUPT_InterruptManager
 31612 ;; This function uses a non-reentrant model
 31613 ;;
 31614                           
 31615                           	psect	text161
 31616  009F46                     __ptext161:
 31617                           	opt callstack 0
 31618  009F46                     _TMR2_ISR:
 31619                           	opt callstack 1
 31620                           
 31621                           ; BSR set to: 57
 31622                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 31623                           
 31624                           ; BSR set to: 2
 31625                           ;incstack = 0
 31626  009F46  95A4               	bcf	164,2,b	;volatile
 31627                           
 31628                           ; BSR set to: 57
 31629                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 31630  009F48  0102               	movlb	2	; () banked
 31631  009F4A  51EC               	movf	_TMR2_InterruptHandler& (0+255),w,b
 31632  009F4C  11ED               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 31633  009F4E  B4D8               	btfsc	status,2,c
 31634  009F50  0012               	return	
 31635                           
 31636                           ; BSR set to: 2
 31637                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 31638  009F52  D801               	call	i2u1984_48
 31639  009F54  0012               	return	
 31640  009F56                     i2u1984_48:
 31641  009F56  0005               	push	
 31642  009F58  6EFA               	movwf	pclath,c
 31643  009F5A  51EC               	movf	_TMR2_InterruptHandler& (0+255),w,b
 31644  009F5C  6EFD               	movwf	tosl,c
 31645  009F5E  51ED               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 31646  009F60  6EFE               	movwf	tosh,c
 31647  009F62  6AFF               	clrf	tosu,c
 31648  009F64  50FA               	movf	pclath,w,c
 31649  009F66  0012               	return		;indir
 31650  009F68                     __end_of_TMR2_ISR:
 31651                           	opt callstack 0
 31652                           
 31653 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 31654 ;; Defined at:
 31655 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 31656 ;; Parameters:    Size  Location     Type
 31657 ;;		None
 31658 ;; Auto vars:     Size  Location     Type
 31659 ;;		None
 31660 ;; Return value:  Size  Location     Type
 31661 ;;                  1    wreg      void 
 31662 ;; Registers used:
 31663 ;;		None
 31664 ;; Tracked objects:
 31665 ;;		On entry : 3F/2
 31666 ;;		On exit  : 3F/2
 31667 ;;		Unchanged: 3F/0
 31668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31673 ;;Total ram usage:        0 bytes
 31674 ;; Hardware stack levels used:    1
 31675 ;; This function calls:
 31676 ;;		Nothing
 31677 ;; This function is called by:
 31678 ;;		_TMR2_Initialize
 31679 ;;		_TMR2_ISR
 31680 ;; This function uses a non-reentrant model
 31681 ;;
 31682                           
 31683                           	psect	text162
 31684  00A4FE                     __ptext162:
 31685                           	opt callstack 0
 31686  00A4FE                     _TMR2_DefaultInterruptHandler:
 31687                           	opt callstack 11
 31688                           
 31689                           ; BSR set to: 2
 31690                           
 31691                           ;incstack = 0
 31692  00A4FE  0012               	return		;funcret
 31693  00A500                     __end_of_TMR2_DefaultInterruptHandler:
 31694                           	opt callstack 0
 31695                           
 31696 ;; *************** function _vMeasureIsr *****************
 31697 ;; Defined at:
 31698 ;;		line 12 in file "vMeasure.c"
 31699 ;; Parameters:    Size  Location     Type
 31700 ;;		None
 31701 ;; Auto vars:     Size  Location     Type
 31702 ;;  instP           2   37[BANK0 ] short 
 31703 ;;  v2              2   35[BANK0 ] unsigned short 
 31704 ;;  v1              2   33[BANK0 ] unsigned short 
 31705 ;; Return value:  Size  Location     Type
 31706 ;;                  1    wreg      void 
 31707 ;; Registers used:
 31708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31709 ;; Tracked objects:
 31710 ;;		On entry : 3F/2
 31711 ;;		On exit  : 4/0
 31712 ;;		Unchanged: 0/0
 31713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31715 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31717 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31718 ;;Total ram usage:        8 bytes
 31719 ;; Hardware stack levels used:    1
 31720 ;; Hardware stack levels required when called:   10
 31721 ;; This function calls:
 31722 ;;		_isqrt
 31723 ;;		i2_aCaptGetResult
 31724 ;; This function is called by:
 31725 ;;		_vMeasureInit
 31726 ;;		_TMR2_ISR
 31727 ;; This function uses a non-reentrant model
 31728 ;;
 31729                           
 31730                           	psect	text163
 31731  00833E                     __ptext163:
 31732                           	opt callstack 0
 31733  00833E                     _vMeasureIsr:
 31734                           	opt callstack 1
 31735                           
 31736                           ; BSR set to: 2
 31737                           ;vMeasure.c: 13:     int16_t instP;;vMeasure.c: 14:     uint16_t v1, v2;;vMeasure.c: 15:
      +                               if (aCaptGetResult(VolPSensor, &instP)) {
 31738                           
 31739                           ; BSR set to: 2
 31740                           ;incstack = 0
 31741  00833E  0E85               	movlw	low vMeasureIsr@instP
 31742  008340  0100               	movlb	0	; () banked
 31743  008342  6F7F               	movwf	i2aCaptGetResult@outVal& (0+255),b
 31744  008344  6B80               	clrf	(i2aCaptGetResult@outVal+1)& (0+255),b
 31745  008346  0E01               	movlw	1
 31746  008348  ECCD  F032         	call	i2_aCaptGetResult
 31747  00834C  0900               	iorlw	0
 31748  00834E  B4D8               	btfsc	status,2,c
 31749  008350  0012               	return	
 31750                           
 31751                           ;vMeasure.c: 16:         if (instP > 0) {
 31752  008352  0100               	movlb	0	; () banked
 31753  008354  BF86               	btfsc	(vMeasureIsr@instP+1)& (0+255),7,b
 31754  008356  D029               	goto	i2l18826
 31755  008358  5186               	movf	(vMeasureIsr@instP+1)& (0+255),w,b
 31756  00835A  E103               	bnz	i2u1942_40
 31757  00835C  0585               	decf	vMeasureIsr@instP& (0+255),w,b
 31758  00835E  A0D8               	btfss	status,0,c
 31759  008360  D024               	goto	i2l18826
 31760  008362                     i2u1942_40:
 31761                           
 31762                           ; BSR set to: 0
 31763                           ;vMeasure.c: 17:             v1 = instP << 4;
 31764  008362  0060  F214  F05E   	movff	vMeasureIsr@instP,??_vMeasureIsr
 31765  008368  0060  F218  F05F   	movff	vMeasureIsr@instP+1,??_vMeasureIsr+1
 31766  00836E  3A5E               	swapf	??_vMeasureIsr^0,f,c
 31767  008370  3A5F               	swapf	(??_vMeasureIsr+1)^0,f,c
 31768  008372  0EF0               	movlw	240
 31769  008374  165F               	andwf	(??_vMeasureIsr+1)^0,f,c
 31770  008376  505E               	movf	??_vMeasureIsr^0,w,c
 31771  008378  0B0F               	andlw	15
 31772  00837A  125F               	iorwf	(??_vMeasureIsr+1)^0,f,c
 31773  00837C  0EF0               	movlw	240
 31774  00837E  165E               	andwf	??_vMeasureIsr^0,f,c
 31775  008380  0060  F178  F081   	movff	??_vMeasureIsr,vMeasureIsr@v1
 31776  008386  0060  F17C  F082   	movff	??_vMeasureIsr+1,vMeasureIsr@v1+1
 31777                           
 31778                           ; BSR set to: 0
 31779                           ;vMeasure.c: 18:             v2 = isqrt(v1);
 31780  00838C  0060  F204  F001   	movff	vMeasureIsr@v1,isqrt@x
 31781  008392  0060  F208  F002   	movff	vMeasureIsr@v1+1,isqrt@x+1
 31782  008398  ECFB  F040         	call	_isqrt	;wreg free
 31783  00839C  0060  F004  F083   	movff	?_isqrt,vMeasureIsr@v2
 31784  0083A2  0060  F008  F084   	movff	?_isqrt+1,vMeasureIsr@v2+1
 31785                           
 31786                           ;vMeasure.c: 19:         } else {
 31787  0083A8  D004               	goto	i2l18828
 31788  0083AA                     i2l18826:
 31789                           
 31790                           ; BSR set to: 0
 31791                           ;vMeasure.c: 21:             v2 = 0;
 31792  0083AA  0E00               	movlw	0
 31793  0083AC  6F84               	movwf	(vMeasureIsr@v2+1)& (0+255),b
 31794  0083AE  0E00               	movlw	0
 31795  0083B0  6F83               	movwf	vMeasureIsr@v2& (0+255),b
 31796  0083B2                     i2l18828:
 31797                           
 31798                           ; BSR set to: 0
 31799                           ;vMeasure.c: 23:         if (v2 > 20) {
 31800  0083B2  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 31801  0083B4  E104               	bnz	i2u1943_40
 31802  0083B6  0E15               	movlw	21
 31803  0083B8  5D83               	subwf	vMeasureIsr@v2& (0+255),w,b
 31804  0083BA  A0D8               	btfss	status,0,c
 31805  0083BC  0012               	return	
 31806  0083BE                     i2u1943_40:
 31807                           
 31808                           ; BSR set to: 0
 31809                           ;vMeasure.c: 24:             volume = volume + v2;
 31810  0083BE  5183               	movf	vMeasureIsr@v2& (0+255),w,b
 31811  0083C0  0102               	movlb	2	; () banked
 31812  0083C2  252B               	addwf	_volume& (0+255),w,b
 31813  0083C4  6F2B               	movwf	_volume& (0+255),b
 31814  0083C6  0100               	movlb	0	; () banked
 31815  0083C8  5184               	movf	(vMeasureIsr@v2+1)& (0+255),w,b
 31816  0083CA  0102               	movlb	2	; () banked
 31817  0083CC  212C               	addwfc	(_volume+1)& (0+255),w,b
 31818  0083CE  6F2C               	movwf	(_volume+1)& (0+255),b
 31819  0083D0  0E00               	movlw	0
 31820  0083D2  212D               	addwfc	(_volume+2)& (0+255),w,b
 31821  0083D4  6F2D               	movwf	(_volume+2)& (0+255),b
 31822  0083D6  0E00               	movlw	0
 31823  0083D8  212E               	addwfc	(_volume+3)& (0+255),w,b
 31824  0083DA  6F2E               	movwf	(_volume+3)& (0+255),b
 31825  0083DC  0012               	return		;funcret
 31826  0083DE                     __end_of_vMeasureIsr:
 31827                           	opt callstack 0
 31828                           
 31829 ;; *************** function i2_aCaptGetResult *****************
 31830 ;; Defined at:
 31831 ;;		line 159 in file "aCapture.c"
 31832 ;; Parameters:    Size  Location     Type
 31833 ;;  sel             1    wreg     enum E16104
 31834 ;;  outVal          2   31[BANK0 ] PTR short 
 31835 ;;		 -> MonitorMsgForcedSend@vddVal(2), SelfTest@vddVal(2), flowChk@aPVal(2), pressureSensorChk@aPVal(2), 
 31836 ;;		 -> pressureSensorChk@mPVal(2), vMeasureIsr@instP(2), bdP2(2), bdP1(2), 
 31837 ;;		 -> pAvgShort(2), main@tmpVal(2), pAvgUShort(2), pInst(2), 
 31838 ;; Auto vars:     Size  Location     Type
 31839 ;;  sel             1   88[COMRAM] enum E16104
 31840 ;;  aCaptGetResu    4   89[COMRAM] unsigned long 
 31841 ;;  aCaptGetResu    1   87[COMRAM] unsigned char 
 31842 ;; Return value:  Size  Location     Type
 31843 ;;                  1    wreg      _Bool 
 31844 ;; Registers used:
 31845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31846 ;; Tracked objects:
 31847 ;;		On entry : 3F/0
 31848 ;;		On exit  : 4/0
 31849 ;;		Unchanged: 0/0
 31850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31852 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31853 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31854 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31855 ;;Total ram usage:       12 bytes
 31856 ;; Hardware stack levels used:    1
 31857 ;; Hardware stack levels required when called:    9
 31858 ;; This function calls:
 31859 ;;		i2_printf
 31860 ;; This function is called by:
 31861 ;;		_vMeasureIsr
 31862 ;; This function uses a non-reentrant model
 31863 ;;
 31864                           
 31865                           	psect	text164
 31866  00659A                     __ptext164:
 31867                           	opt callstack 0
 31868  00659A                     i2_aCaptGetResult:
 31869                           	opt callstack 1
 31870                           
 31871                           ;incstack = 0
 31872                           ;i2aCaptGetResult@sel stored from wreg
 31873  00659A  6E59               	movwf	i2aCaptGetResult@sel^0,c
 31874                           
 31875                           ;aCapture.c: 160:     uint32_t lclRaw;;aCapture.c: 161:     uint8_t lclValid;;aCapture.c
      +                          : 164:     PIE1bits.ADTIE = 0;
 31876  00659C  0139               	movlb	57	; () banked
 31877  00659E  9791               	bcf	145,3,b	;volatile
 31878                           
 31879                           ; BSR set to: 57
 31880                           ;aCapture.c: 165:     lclRaw=resultTbl[sel];
 31881  0065A0  5059               	movf	i2aCaptGetResult@sel^0,w,c
 31882  0065A2  0D04               	mullw	4
 31883  0065A4  0E73               	movlw	low _resultTbl
 31884  0065A6  24F3               	addwf	243,w,c
 31885  0065A8  6ED9               	movwf	fsr2l,c
 31886  0065AA  0E02               	movlw	high _resultTbl
 31887  0065AC  20F4               	addwfc	prodh,w,c
 31888  0065AE  6EDA               	movwf	fsr2h,c
 31889  0065B0  006F FF78  F05A    	movff	postinc2,i2aCaptGetResult@lclRaw
 31890  0065B6  006F FF78  F05B    	movff	postinc2,i2aCaptGetResult@lclRaw+1
 31891  0065BC  006F FF78  F05C    	movff	postinc2,i2aCaptGetResult@lclRaw+2
 31892  0065C2  006F FF78  F05D    	movff	postinc2,i2aCaptGetResult@lclRaw+3
 31893                           
 31894                           ; BSR set to: 57
 31895                           ;aCapture.c: 166:     lclValid=resultTblVal[sel];
 31896  0065C8  0E24               	movlw	low _resultTblVal
 31897  0065CA  2459               	addwf	i2aCaptGetResult@sel^0,w,c
 31898  0065CC  6ED9               	movwf	fsr2l,c
 31899  0065CE  6ADA               	clrf	fsr2h,c
 31900  0065D0  0E02               	movlw	high _resultTblVal
 31901  0065D2  22DA               	addwfc	fsr2h,f,c
 31902  0065D4  50DF               	movf	indf2,w,c
 31903  0065D6  6E58               	movwf	i2aCaptGetResult@lclValid^0,c
 31904                           
 31905                           ; BSR set to: 57
 31906                           ;aCapture.c: 167:     PIE1bits.ADTIE = 1;
 31907  0065D8  8791               	bsf	145,3,b	;volatile
 31908                           
 31909                           ; BSR set to: 57
 31910                           ;aCapture.c: 169:     if (lclValid == 0) {
 31911  0065DA  5058               	movf	i2aCaptGetResult@lclValid^0,w,c
 31912  0065DC  A4D8               	btfss	status,2,c
 31913  0065DE  D066               	goto	i2l18216
 31914                           
 31915                           ; BSR set to: 57
 31916                           ;aCapture.c: 170:         return 0;
 31917  0065E0  0E00               	movlw	0
 31918  0065E2  0012               	return	
 31919  0065E4                     i2l18206:
 31920                           
 31921                           ; BSR set to: 57
 31922                           ;aCapture.c: 177:             lclRaw=lclRaw>>9;
 31923  0065E4  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 31924  0065EA  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 31925  0065F0  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 31926  0065F6  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 31927  0065FC  0E0A               	movlw	10
 31928  0065FE  D005               	goto	i2u1864_40
 31929  006600                     i2u1864_45:
 31930  006600  90D8               	bcf	status,0,c
 31931  006602  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 31932  006604  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 31933  006606  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 31934  006608  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 31935  00660A                     i2u1864_40:
 31936  00660A  2EE8               	decfsz	wreg,f,c
 31937  00660C  D7F9               	goto	i2u1864_45
 31938  00660E  D041               	goto	L53
 31939  006610                     i2l18208:
 31940                           
 31941                           ; BSR set to: 57
 31942                           ;aCapture.c: 180:             lclRaw=lclRaw>>6;
 31943  006610  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 31944  006616  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 31945  00661C  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 31946  006622  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 31947  006628  0E07               	movlw	7
 31948  00662A  D005               	goto	i2u1865_40
 31949  00662C                     i2u1865_45:
 31950  00662C  90D8               	bcf	status,0,c
 31951  00662E  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 31952  006630  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 31953  006632  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 31954  006634  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 31955  006636                     i2u1865_40:
 31956  006636  2EE8               	decfsz	wreg,f,c
 31957  006638  D7F9               	goto	i2u1865_45
 31958  00663A  D02B               	goto	L53
 31959  00663C                     i2l18210:
 31960                           
 31961                           ; BSR set to: 57
 31962                           ;aCapture.c: 183:             lclRaw=lclRaw>>4;
 31963  00663C  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 31964  006642  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 31965  006648  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 31966  00664E  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 31967  006654  0E05               	movlw	5
 31968  006656  D005               	goto	i2u1866_40
 31969  006658                     i2u1866_45:
 31970  006658  90D8               	bcf	status,0,c
 31971  00665A  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 31972  00665C  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 31973  00665E  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 31974  006660  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 31975  006662                     i2u1866_40:
 31976  006662  2EE8               	decfsz	wreg,f,c
 31977  006664  D7F9               	goto	i2u1866_45
 31978  006666  D015               	goto	L53
 31979  006668                     i2l18212:
 31980                           
 31981                           ; BSR set to: 57
 31982                           ;aCapture.c: 186:             lclRaw=lclRaw>>2;
 31983  006668  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 31984  00666E  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 31985  006674  0060  F170  F056   	movff	i2aCaptGetResult@lclRaw+2,??i2_aCaptGetResult+2
 31986  00667A  0060  F174  F057   	movff	i2aCaptGetResult@lclRaw+3,??i2_aCaptGetResult+3
 31987  006680  0E03               	movlw	3
 31988  006682  D005               	goto	i2u1867_40
 31989  006684                     i2u1867_45:
 31990  006684  90D8               	bcf	status,0,c
 31991  006686  3257               	rrcf	(??i2_aCaptGetResult+3)^0,f,c
 31992  006688  3256               	rrcf	(??i2_aCaptGetResult+2)^0,f,c
 31993  00668A  3255               	rrcf	(??i2_aCaptGetResult+1)^0,f,c
 31994  00668C  3254               	rrcf	??i2_aCaptGetResult^0,f,c
 31995  00668E                     i2u1867_40:
 31996  00668E  2EE8               	decfsz	wreg,f,c
 31997  006690  D7F9               	goto	i2u1867_45
 31998  006692                     L53:
 31999  006692  0060  F150  F05A   	movff	??i2_aCaptGetResult,i2aCaptGetResult@lclRaw
 32000  006698  0060  F154  F05B   	movff	??i2_aCaptGetResult+1,i2aCaptGetResult@lclRaw+1
 32001  00669E  0060  F158  F05C   	movff	??i2_aCaptGetResult+2,i2aCaptGetResult@lclRaw+2
 32002  0066A4  0060  F15C  F05D   	movff	??i2_aCaptGetResult+3,i2aCaptGetResult@lclRaw+3
 32003                           
 32004                           ;aCapture.c: 187:             break;
 32005  0066AA  D09E               	goto	i2l18246
 32006  0066AC                     i2l18216:
 32007                           
 32008                           ; BSR set to: 57
 32009  0066AC  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32010  0066AE  6E54               	movwf	??i2_aCaptGetResult^0,c
 32011  0066B0  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32012                           
 32013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32014                           ; Switch size 1, requested type "simple"
 32015                           ; Number of cases is 1, Range of values is 0 to 0
 32016                           ; switch strategies available:
 32017                           ; Name         Instructions Cycles
 32018                           ; simple_byte            4     3 (average)
 32019                           ;	Chosen strategy is simple_byte
 32020  0066B2  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32021  0066B4  0A00               	xorlw	0	; case 0
 32022  0066B6  A4D8               	btfss	status,2,c
 32023  0066B8  D097               	goto	i2l18246
 32024                           
 32025                           ; BSR set to: 57
 32026                           ; Switch size 1, requested type "simple"
 32027                           ; Number of cases is 4, Range of values is 3 to 6
 32028                           ; switch strategies available:
 32029                           ; Name         Instructions Cycles
 32030                           ; simple_byte           13     7 (average)
 32031                           ;	Chosen strategy is simple_byte
 32032  0066BA  5054               	movf	??i2_aCaptGetResult^0,w,c
 32033  0066BC  0A03               	xorlw	3	; case 3
 32034  0066BE  B4D8               	btfsc	status,2,c
 32035  0066C0  D7D3               	goto	i2l18212
 32036  0066C2  0A07               	xorlw	7	; case 4
 32037  0066C4  B4D8               	btfsc	status,2,c
 32038  0066C6  D7BA               	goto	i2l18210
 32039  0066C8  0A01               	xorlw	1	; case 5
 32040  0066CA  B4D8               	btfsc	status,2,c
 32041  0066CC  D7A1               	goto	i2l18208
 32042  0066CE  0A03               	xorlw	3	; case 6
 32043  0066D0  B4D8               	btfsc	status,2,c
 32044  0066D2  D788               	goto	i2l18206
 32045  0066D4  D089               	goto	i2l18246
 32046  0066D6                     i2l1990:
 32047                           
 32048                           ; BSR set to: 57
 32049                           ;aCapture.c: 199:             if (lclRaw < mainPSensCal) { lclRaw = mainPSensCal-lclRaw;
 32050                           
 32051                           ; BSR set to: 57
 32052  0066D6  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32053  0066DC  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32054  0066E2  0E00               	movlw	0
 32055  0066E4  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32056  0066E6  0EFF               	movlw	255
 32057  0066E8  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32058  0066EA  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32059  0066EC  5054               	movf	??i2_aCaptGetResult^0,w,c
 32060  0066EE  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32061  0066F0  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32062  0066F2  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32063  0066F4  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32064  0066F6  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32065  0066F8  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32066  0066FA  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32067  0066FC  B0D8               	btfsc	status,0,c
 32068  0066FE  D022               	goto	i2l18224
 32069                           
 32070                           ; BSR set to: 57
 32071  006700  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32072  006706  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32073  00670C  0E00               	movlw	0
 32074  00670E  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32075  006710  0EFF               	movlw	255
 32076  006712  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32077  006714  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32078  006716  505A               	movf	i2aCaptGetResult@lclRaw^0,w,c
 32079  006718  5C54               	subwf	??i2_aCaptGetResult^0,w,c
 32080  00671A  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32081  00671C  505B               	movf	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32082  00671E  5855               	subwfb	(??i2_aCaptGetResult+1)^0,w,c
 32083  006720  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32084  006722  505C               	movf	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32085  006724  5856               	subwfb	(??i2_aCaptGetResult+2)^0,w,c
 32086  006726  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32087  006728  505D               	movf	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32088  00672A  5857               	subwfb	(??i2_aCaptGetResult+3)^0,w,c
 32089  00672C  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32090                           
 32091                           ; BSR set to: 57
 32092                           ;aCapture.c: 200:                 *outVal = - (lclRaw/1);
 32093  00672E  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32094  006734  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32095  00673A  1E54               	comf	??i2_aCaptGetResult^0,f,c
 32096  00673C  1E55               	comf	(??i2_aCaptGetResult+1)^0,f,c
 32097  00673E  4A54               	infsnz	??i2_aCaptGetResult^0,f,c
 32098  006740  2A55               	incf	(??i2_aCaptGetResult+1)^0,f,c
 32099  006742  D036               	goto	L55
 32100  006744                     i2l18224:
 32101                           
 32102                           ; BSR set to: 57
 32103                           ;aCapture.c: 202:                 lclRaw = lclRaw - mainPSensCal;
 32104  006744  0060  F7D4  F054   	movff	_mainPSensCal,??i2_aCaptGetResult
 32105  00674A  0060  F7D8  F055   	movff	_mainPSensCal+1,??i2_aCaptGetResult+1
 32106  006750  0E00               	movlw	0
 32107  006752  BE55               	btfsc	(??i2_aCaptGetResult+1)^0,7,c
 32108  006754  0EFF               	movlw	255
 32109  006756  6E56               	movwf	(??i2_aCaptGetResult+2)^0,c
 32110  006758  6E57               	movwf	(??i2_aCaptGetResult+3)^0,c
 32111  00675A  5054               	movf	??i2_aCaptGetResult^0,w,c
 32112  00675C  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32113  00675E  6E5A               	movwf	i2aCaptGetResult@lclRaw^0,c
 32114  006760  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32115  006762  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32116  006764  6E5B               	movwf	(i2aCaptGetResult@lclRaw+1)^0,c
 32117  006766  5056               	movf	(??i2_aCaptGetResult+2)^0,w,c
 32118  006768  585C               	subwfb	(i2aCaptGetResult@lclRaw+2)^0,w,c
 32119  00676A  6E5C               	movwf	(i2aCaptGetResult@lclRaw+2)^0,c
 32120  00676C  5057               	movf	(??i2_aCaptGetResult+3)^0,w,c
 32121  00676E  585D               	subwfb	(i2aCaptGetResult@lclRaw+3)^0,w,c
 32122  006770  6E5D               	movwf	(i2aCaptGetResult@lclRaw+3)^0,c
 32123                           
 32124                           ; BSR set to: 57
 32125                           ;aCapture.c: 203:                 *outVal=(lclRaw/1);
 32126  006772  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32127  006778  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32128  00677E  0060  F16B  FFDE   	movff	i2aCaptGetResult@lclRaw,postinc2
 32129  006784  0060  F16F  FFDD   	movff	i2aCaptGetResult@lclRaw+1,postdec2
 32130  00678A                     i2l18228:
 32131                           
 32132                           ;aCapture.c: 205:             return 1;
 32133  00678A  0E01               	movlw	1
 32134  00678C  0012               	return	
 32135  00678E                     i2l18232:
 32136                           
 32137                           ; BSR set to: 57
 32138                           ;aCapture.c: 207:             *outVal = (lclRaw - auxPSensCal)/1;
 32139  00678E  0102               	movlb	2	; () banked
 32140  006790  51E6               	movf	_auxPSensCal& (0+255),w,b
 32141  006792  5C5A               	subwf	i2aCaptGetResult@lclRaw^0,w,c
 32142  006794  6E54               	movwf	??i2_aCaptGetResult^0,c
 32143  006796  51E7               	movf	(_auxPSensCal+1)& (0+255),w,b
 32144  006798  585B               	subwfb	(i2aCaptGetResult@lclRaw+1)^0,w,c
 32145  00679A  6E55               	movwf	(??i2_aCaptGetResult+1)^0,c
 32146  00679C  D009               	goto	L55
 32147  00679E                     i2l18238:
 32148                           
 32149                           ; BSR set to: 57
 32150                           ;aCapture.c: 210:             *outVal = lclRaw<<1;
 32151  00679E  0060  F168  F054   	movff	i2aCaptGetResult@lclRaw,??i2_aCaptGetResult
 32152  0067A4  0060  F16C  F055   	movff	i2aCaptGetResult@lclRaw+1,??i2_aCaptGetResult+1
 32153  0067AA  90D8               	bcf	status,0,c
 32154  0067AC  3654               	rlcf	??i2_aCaptGetResult^0,f,c
 32155  0067AE  3655               	rlcf	(??i2_aCaptGetResult+1)^0,f,c
 32156  0067B0                     L55:
 32157  0067B0  0060  F1FF  FFD9   	movff	i2aCaptGetResult@outVal,fsr2l
 32158  0067B6  0060  F203  FFDA   	movff	i2aCaptGetResult@outVal+1,fsr2h
 32159  0067BC  0060  F153  FFDE   	movff	??i2_aCaptGetResult,postinc2
 32160  0067C2  0060  F157  FFDD   	movff	??i2_aCaptGetResult+1,postdec2
 32161  0067C8  D7E0               	goto	i2l18228
 32162  0067CA                     i2l1996:
 32163                           
 32164                           ; BSR set to: 57
 32165                           ;aCapture.c: 214:             LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;p
      +                          rintf("Fatal %d",104);
 32166  0067CA  94BA               	bcf	186,2,c	;volatile
 32167  0067CC  96BC               	bcf	188,3,c	;volatile
 32168  0067CE  96BA               	bcf	186,3,c	;volatile
 32169                           
 32170                           ; BSR set to: 57
 32171  0067D0  0EB1               	movlw	low STR_28
 32172  0067D2  0100               	movlb	0	; () banked
 32173  0067D4  6F7B               	movwf	i2printf@fmt& (0+255),b
 32174  0067D6  0EFF               	movlw	high STR_28
 32175  0067D8  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 32176  0067DA  0E00               	movlw	0
 32177  0067DC  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 32178  0067DE  0E68               	movlw	104
 32179  0067E0  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 32180  0067E2  EC06  F04F         	call	i2_printf	;wreg free
 32181                           
 32182                           ;aCapture.c: 215:     }
 32183  0067E6  0012               	return	
 32184  0067E8                     i2l18246:
 32185                           
 32186                           ; BSR set to: 57
 32187  0067E8  5059               	movf	i2aCaptGetResult@sel^0,w,c
 32188  0067EA  6E54               	movwf	??i2_aCaptGetResult^0,c
 32189  0067EC  6A55               	clrf	(??i2_aCaptGetResult+1)^0,c
 32190                           
 32191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32192                           ; Switch size 1, requested type "simple"
 32193                           ; Number of cases is 1, Range of values is 0 to 0
 32194                           ; switch strategies available:
 32195                           ; Name         Instructions Cycles
 32196                           ; simple_byte            4     3 (average)
 32197                           ;	Chosen strategy is simple_byte
 32198  0067EE  5055               	movf	(??i2_aCaptGetResult+1)^0,w,c
 32199  0067F0  0A00               	xorlw	0	; case 0
 32200  0067F2  A4D8               	btfss	status,2,c
 32201  0067F4  D7EA               	goto	i2l1996
 32202                           
 32203                           ; BSR set to: 57
 32204                           ; Switch size 1, requested type "simple"
 32205                           ; Number of cases is 7, Range of values is 0 to 6
 32206                           ; switch strategies available:
 32207                           ; Name         Instructions Cycles
 32208                           ; simple_byte           22    12 (average)
 32209                           ;	Chosen strategy is simple_byte
 32210  0067F6  5054               	movf	??i2_aCaptGetResult^0,w,c
 32211  0067F8  0A00               	xorlw	0	; case 0
 32212  0067FA  B4D8               	btfsc	status,2,c
 32213  0067FC  D76C               	goto	i2l1990
 32214  0067FE  0A01               	xorlw	1	; case 1
 32215  006800  B4D8               	btfsc	status,2,c
 32216  006802  D7C5               	goto	i2l18232
 32217  006804  0A03               	xorlw	3	; case 2
 32218  006806  B4D8               	btfsc	status,2,c
 32219  006808  D7CA               	goto	i2l18238
 32220  00680A  0A01               	xorlw	1	; case 3
 32221  00680C  B4D8               	btfsc	status,2,c
 32222  00680E  D763               	goto	i2l1990
 32223  006810  0A07               	xorlw	7	; case 4
 32224  006812  B4D8               	btfsc	status,2,c
 32225  006814  D760               	goto	i2l1990
 32226  006816  0A01               	xorlw	1	; case 5
 32227  006818  B4D8               	btfsc	status,2,c
 32228  00681A  D75D               	goto	i2l1990
 32229  00681C  0A03               	xorlw	3	; case 6
 32230  00681E  B4D8               	btfsc	status,2,c
 32231  006820  D75A               	goto	i2l1990
 32232  006822  D7D3               	goto	i2l1996
 32233  006824                     __end_ofi2_aCaptGetResult:
 32234                           	opt callstack 0
 32235                           
 32236 ;; *************** function _isqrt *****************
 32237 ;; Defined at:
 32238 ;;		line 3 in file "cmath.c"
 32239 ;; Parameters:    Size  Location     Type
 32240 ;;  x               2    0[COMRAM] unsigned short 
 32241 ;; Auto vars:     Size  Location     Type
 32242 ;;  one             2    8[COMRAM] unsigned short 
 32243 ;;  res             2    6[COMRAM] unsigned short 
 32244 ;;  op              2    4[COMRAM] unsigned short 
 32245 ;; Return value:  Size  Location     Type
 32246 ;;                  2    0[COMRAM] unsigned short 
 32247 ;; Registers used:
 32248 ;;		wreg, status,2, status,0
 32249 ;; Tracked objects:
 32250 ;;		On entry : 3F/0
 32251 ;;		On exit  : 3F/0
 32252 ;;		Unchanged: 3F/0
 32253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32255 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32257 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32258 ;;Total ram usage:       10 bytes
 32259 ;; Hardware stack levels used:    1
 32260 ;; This function calls:
 32261 ;;		Nothing
 32262 ;; This function is called by:
 32263 ;;		_vMeasureIsr
 32264 ;; This function uses a non-reentrant model
 32265 ;;
 32266                           
 32267                           	psect	text165
 32268  0081F6                     __ptext165:
 32269                           	opt callstack 0
 32270  0081F6                     _isqrt:
 32271                           	opt callstack 10
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;cmath.c: 3: uint16_t isqrt(uint16_t x);cmath.c: 4: {;cmath.c: 5:     uint16_t op, res, 
      +                          one;;cmath.c: 7:     op = x;
 32275                           
 32276                           ;incstack = 0
 32277  0081F6  0060  F004  F005   	movff	isqrt@x,isqrt@op
 32278  0081FC  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;cmath.c: 8:     res = 0;
 32282  008202  0E00               	movlw	0
 32283  008204  6E08               	movwf	(isqrt@res+1)^0,c
 32284  008206  0E00               	movlw	0
 32285  008208  6E07               	movwf	isqrt@res^0,c
 32286                           
 32287                           ;cmath.c: 11:     one = 1 << 14;
 32288  00820A  0E40               	movlw	64
 32289  00820C  6E0A               	movwf	(isqrt@one+1)^0,c
 32290  00820E  0E00               	movlw	0
 32291  008210  6E09               	movwf	isqrt@one^0,c
 32292                           
 32293                           ;cmath.c: 12:     while (one > op) one >>= 2;
 32294  008212  D006               	goto	i2l12266
 32295  008214                     i2l12264:
 32296                           
 32297                           ; BSR set to: 0
 32298  008214  90D8               	bcf	status,0,c
 32299  008216  320A               	rrcf	(isqrt@one+1)^0,f,c
 32300  008218  3209               	rrcf	isqrt@one^0,f,c
 32301  00821A  90D8               	bcf	status,0,c
 32302  00821C  320A               	rrcf	(isqrt@one+1)^0,f,c
 32303  00821E  3209               	rrcf	isqrt@one^0,f,c
 32304  008220                     i2l12266:
 32305                           
 32306                           ; BSR set to: 0
 32307  008220  5009               	movf	isqrt@one^0,w,c
 32308  008222  5C05               	subwf	isqrt@op^0,w,c
 32309  008224  500A               	movf	(isqrt@one+1)^0,w,c
 32310  008226  5806               	subwfb	(isqrt@op+1)^0,w,c
 32311  008228  B0D8               	btfsc	status,0,c
 32312  00822A  D02D               	goto	i2l2982
 32313  00822C  D7F3               	goto	i2l12264
 32314  00822E                     i2l12268:
 32315                           
 32316                           ; BSR set to: 0
 32317                           ;cmath.c: 15:         if (op >= res + one) {
 32318  00822E  5009               	movf	isqrt@one^0,w,c
 32319  008230  2407               	addwf	isqrt@res^0,w,c
 32320  008232  6E03               	movwf	??_isqrt^0,c
 32321  008234  500A               	movf	(isqrt@one+1)^0,w,c
 32322  008236  2008               	addwfc	(isqrt@res+1)^0,w,c
 32323  008238  6E04               	movwf	(??_isqrt+1)^0,c
 32324  00823A  5003               	movf	??_isqrt^0,w,c
 32325  00823C  5C05               	subwf	isqrt@op^0,w,c
 32326  00823E  5004               	movf	(??_isqrt+1)^0,w,c
 32327  008240  5806               	subwfb	(isqrt@op+1)^0,w,c
 32328  008242  A0D8               	btfss	status,0,c
 32329  008244  D017               	goto	i2l12272
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;cmath.c: 16:             op -= res + one;
 32333  008246  5009               	movf	isqrt@one^0,w,c
 32334  008248  2407               	addwf	isqrt@res^0,w,c
 32335  00824A  6E03               	movwf	??_isqrt^0,c
 32336  00824C  500A               	movf	(isqrt@one+1)^0,w,c
 32337  00824E  2008               	addwfc	(isqrt@res+1)^0,w,c
 32338  008250  6E04               	movwf	(??_isqrt+1)^0,c
 32339  008252  5003               	movf	??_isqrt^0,w,c
 32340  008254  5E05               	subwf	isqrt@op^0,f,c
 32341  008256  5004               	movf	(??_isqrt+1)^0,w,c
 32342  008258  5A06               	subwfb	(isqrt@op+1)^0,f,c
 32343                           
 32344                           ;cmath.c: 17:             res += one << 1;
 32345  00825A  0060  F024  F003   	movff	isqrt@one,??_isqrt
 32346  008260  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 32347  008266  90D8               	bcf	status,0,c
 32348  008268  3603               	rlcf	??_isqrt^0,f,c
 32349  00826A  3604               	rlcf	(??_isqrt+1)^0,f,c
 32350  00826C  5003               	movf	??_isqrt^0,w,c
 32351  00826E  2607               	addwf	isqrt@res^0,f,c
 32352  008270  5004               	movf	(??_isqrt+1)^0,w,c
 32353  008272  2208               	addwfc	(isqrt@res+1)^0,f,c
 32354  008274                     i2l12272:
 32355                           
 32356                           ; BSR set to: 0
 32357                           ;cmath.c: 19:         res >>= 1;
 32358  008274  90D8               	bcf	status,0,c
 32359  008276  3208               	rrcf	(isqrt@res+1)^0,f,c
 32360  008278  3207               	rrcf	isqrt@res^0,f,c
 32361                           
 32362                           ; BSR set to: 0
 32363                           ;cmath.c: 20:         one >>= 2;
 32364  00827A  90D8               	bcf	status,0,c
 32365  00827C  320A               	rrcf	(isqrt@one+1)^0,f,c
 32366  00827E  3209               	rrcf	isqrt@one^0,f,c
 32367  008280  90D8               	bcf	status,0,c
 32368  008282  320A               	rrcf	(isqrt@one+1)^0,f,c
 32369  008284  3209               	rrcf	isqrt@one^0,f,c
 32370  008286                     i2l2982:
 32371                           
 32372                           ; BSR set to: 0
 32373                           ;cmath.c: 14:     while (one != 0) {
 32374  008286  5009               	movf	isqrt@one^0,w,c
 32375  008288  100A               	iorwf	(isqrt@one+1)^0,w,c
 32376  00828A  A4D8               	btfss	status,2,c
 32377  00828C  D7D0               	goto	i2l12268
 32378                           
 32379                           ; BSR set to: 0
 32380                           ;cmath.c: 22:     return res;
 32381  00828E  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 32382  008294  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 32383                           
 32384                           ; BSR set to: 0
 32385  00829A  0012               	return		;funcret
 32386  00829C                     __end_of_isqrt:
 32387                           	opt callstack 0
 32388                           
 32389 ;; *************** function _I2C2_MasterIsr *****************
 32390 ;; Defined at:
 32391 ;;		line 348 in file "mcc_generated_files/i2c2_master.c"
 32392 ;; Parameters:    Size  Location     Type
 32393 ;;		None
 32394 ;; Auto vars:     Size  Location     Type
 32395 ;;		None
 32396 ;; Return value:  Size  Location     Type
 32397 ;;                  1    wreg      void 
 32398 ;; Registers used:
 32399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32400 ;; Tracked objects:
 32401 ;;		On entry : 3F/0
 32402 ;;		On exit  : 3F/2
 32403 ;;		Unchanged: 0/0
 32404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32409 ;;Total ram usage:        0 bytes
 32410 ;; Hardware stack levels used:    1
 32411 ;; Hardware stack levels required when called:   15
 32412 ;; This function calls:
 32413 ;;		_I2C2_MasterFsm
 32414 ;; This function is called by:
 32415 ;;		_I2C2_Open
 32416 ;;		_INTERRUPT_InterruptManager
 32417 ;; This function uses a non-reentrant model
 32418 ;;
 32419                           
 32420                           	psect	text166
 32421  00A492                     __ptext166:
 32422                           	opt callstack 0
 32423  00A492                     _I2C2_MasterIsr:
 32424                           	opt callstack 0
 32425                           
 32426                           ; BSR set to: 0
 32427                           ;mcc_generated_files/i2c2_master.c: 350:     I2C2_MasterFsm();
 32428                           
 32429                           ; BSR set to: 0
 32430                           ;incstack = 0
 32431 ;; hardware stack exceeded
 32432  00A492  EC81  F045         	call	_I2C2_MasterFsm	;wreg free
 32433                           
 32434                           ; BSR set to: 2
 32435  00A496  0012               	return		;funcret
 32436  00A498                     __end_of_I2C2_MasterIsr:
 32437                           	opt callstack 0
 32438                           
 32439 ;; *************** function _I2C2_MasterFsm *****************
 32440 ;; Defined at:
 32441 ;;		line 353 in file "mcc_generated_files/i2c2_master.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;		None
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;		None
 32446 ;; Return value:  Size  Location     Type
 32447 ;;                  1    wreg      void 
 32448 ;; Registers used:
 32449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32450 ;; Tracked objects:
 32451 ;;		On entry : 3F/0
 32452 ;;		On exit  : 3F/2
 32453 ;;		Unchanged: 0/0
 32454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32459 ;;Total ram usage:        2 bytes
 32460 ;; Hardware stack levels used:    1
 32461 ;; Hardware stack levels required when called:   14
 32462 ;; This function calls:
 32463 ;;		_I2C2_ClearInterruptFlags
 32464 ;;		_I2C2_DO_ADDRESS_NACK
 32465 ;;		_I2C2_DO_BUS_COLLISION
 32466 ;;		_I2C2_DO_BUS_ERROR
 32467 ;;		_I2C2_DO_IDLE
 32468 ;;		_I2C2_DO_RESET
 32469 ;;		_I2C2_DO_RX
 32470 ;;		_I2C2_DO_RX_ACK
 32471 ;;		_I2C2_DO_RX_NACK_RESTART
 32472 ;;		_I2C2_DO_RX_NACK_STOP
 32473 ;;		_I2C2_DO_SEND_RESTART
 32474 ;;		_I2C2_DO_SEND_RESTART_READ
 32475 ;;		_I2C2_DO_SEND_RESTART_WRITE
 32476 ;;		_I2C2_DO_SEND_STOP
 32477 ;;		_I2C2_DO_TX
 32478 ;;		_I2C2_DO_TX_ACK
 32479 ;;		_I2C2_DO_TX_EMPTY
 32480 ;;		_I2C2_MasterIsNack
 32481 ;;		i2_I2C2_DO_RX_EMPTY
 32482 ;;		i2_I2C2_DO_SEND_ADR_READ
 32483 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 32484 ;; This function is called by:
 32485 ;;		_I2C2_MasterIsr
 32486 ;; This function uses a non-reentrant model
 32487 ;;
 32488                           
 32489                           	psect	text167
 32490  008B02                     __ptext167:
 32491                           	opt callstack 0
 32492  008B02                     _I2C2_MasterFsm:
 32493                           	opt callstack 0
 32494                           
 32495                           ; BSR set to: 0
 32496                           ;mcc_generated_files/i2c2_master.c: 355:     I2C2_ClearInterruptFlags();
 32497                           
 32498                           ; BSR set to: 2
 32499                           ;incstack = 0
 32500 ;; hardware stack exceeded
 32501  008B02  EC99  F04D         	call	_I2C2_ClearInterruptFlags	;wreg free
 32502                           
 32503                           ; BSR set to: 61
 32504                           ;mcc_generated_files/i2c2_master.c: 357:     if(I2C2_Status.addressNackCheck && I2C2_Mas
      +                          terIsNack())
 32505  008B06  0102               	movlb	2	; () banked
 32506  008B08  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 32507  008B0A  0B03               	andlw	3
 32508  008B0C  0900               	iorlw	0
 32509  008B0E  B4D8               	btfsc	status,2,c
 32510  008B10  D008               	goto	i2l18412
 32511                           
 32512                           ; BSR set to: 2
 32513  008B12  ECB1  F051         	call	_I2C2_MasterIsNack	;wreg free
 32514  008B16  0900               	iorlw	0
 32515  008B18  B4D8               	btfsc	status,2,c
 32516  008B1A  D003               	goto	i2l18412
 32517                           
 32518                           ; BSR set to: 61
 32519                           ;mcc_generated_files/i2c2_master.c: 358:     {;mcc_generated_files/i2c2_master.c: 359:  
      +                                 I2C2_Status.state = I2C2_ADDRESS_NACK;
 32520  008B1C  0E10               	movlw	16
 32521  008B1E  0102               	movlb	2	; () banked
 32522  008B20  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 32523  008B22                     i2l18412:
 32524                           
 32525                           ;mcc_generated_files/i2c2_master.c: 361:     I2C2_Status.state = fsmStateTable[I2C2_Stat
      +                          us.state]();
 32526  008B22  0102               	movlb	2	; () banked
 32527  008B24  5121               	movf	(_I2C2_Status+33)& (0+255),w,b
 32528  008B26  0D02               	mullw	2
 32529  008B28  0E6F               	movlw	low _fsmStateTable
 32530  008B2A  24F3               	addwf	243,w,c
 32531  008B2C  6EF6               	movwf	tblptrl,c
 32532  008B2E  0EFA               	movlw	high _fsmStateTable
 32533  008B30  20F4               	addwfc	244,w,c
 32534  008B32  6EF7               	movwf	tblptrh,c
 32535  008B34                     	if	1	;There are 3 active tblptr bytes
 32536  008B34  6AF8               	clrf	tblptru,c
 32537  008B36  0E00               	movlw	low (__mediumconst shr (0+16))
 32538  008B38  22F8               	addwfc	tblptru,f,c
 32539  008B3A                     	endif
 32540  008B3A  0009               	tblrd		*+
 32541  008B3C  006F FFD4  F00D    	movff	tablat,??_I2C2_MasterFsm
 32542  008B42  0009               	tblrd		*+
 32543  008B44  006F FFD4  F00E    	movff	tablat,??_I2C2_MasterFsm+1
 32544  008B4A  D801               	call	i2u1871_48
 32545  008B4C  D009               	goto	i2u1871_49
 32546  008B4E                     i2u1871_48:
 32547  008B4E  0005               	push	
 32548  008B50  6EFA               	movwf	pclath,c
 32549  008B52  500D               	movf	??_I2C2_MasterFsm^0,w,c
 32550  008B54  6EFD               	movwf	tosl,c
 32551  008B56  500E               	movf	(??_I2C2_MasterFsm+1)^0,w,c
 32552  008B58  6EFE               	movwf	tosh,c
 32553  008B5A  6AFF               	clrf	tosu,c
 32554  008B5C  50FA               	movf	pclath,w,c
 32555  008B5E  0012               	return		;indir
 32556  008B60                     i2u1871_49:
 32557  008B60  0102               	movlb	2	; () banked
 32558  008B62  6F21               	movwf	(_I2C2_Status+33)& (0+255),b
 32559                           
 32560                           ; BSR set to: 2
 32561  008B64  0012               	return		;funcret
 32562  008B66                     __end_of_I2C2_MasterFsm:
 32563                           	opt callstack 0
 32564                           
 32565 ;; *************** function i2_I2C2_DO_RX_EMPTY *****************
 32566 ;; Defined at:
 32567 ;;		line 481 in file "mcc_generated_files/i2c2_master.c"
 32568 ;; Parameters:    Size  Location     Type
 32569 ;;		None
 32570 ;; Auto vars:     Size  Location     Type
 32571 ;;		None
 32572 ;; Return value:  Size  Location     Type
 32573 ;;                  1    wreg      enum E16447
 32574 ;; Registers used:
 32575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32576 ;; Tracked objects:
 32577 ;;		On entry : 3F/2
 32578 ;;		On exit  : 0/0
 32579 ;;		Unchanged: 0/0
 32580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32585 ;;Total ram usage:        2 bytes
 32586 ;; Hardware stack levels used:    1
 32587 ;; Hardware stack levels required when called:   10
 32588 ;; This function calls:
 32589 ;;		Absolute function
 32590 ;;		i2_I2C2_CallbackReturnReset
 32591 ;;		i2_I2C2_CallbackReturnStop
 32592 ;;		i2_I2C2_MasterDisableRestart
 32593 ;;		i2_I2C2_MasterEnableRestart
 32594 ;;		i2_I2C2_MasterSetCounter
 32595 ;;		i2_I2C2_NackCb
 32596 ;;		i2_rd1RegCompleteHandler
 32597 ;;		i2_rd2RegCompleteHandler
 32598 ;;		i2_rdBlkRegCompleteHandler
 32599 ;;		i2_wr1RegCompleteHandler
 32600 ;;		i2_wr2RegCompleteHandler
 32601 ;; This function is called by:
 32602 ;;		_I2C2_DO_RX
 32603 ;;		i2_I2C2_DO_SEND_ADR_READ
 32604 ;; This function uses a non-reentrant model
 32605 ;;
 32606                           
 32607                           	psect	text168
 32608  008782                     __ptext168:
 32609                           	opt callstack 0
 32610  008782                     i2_I2C2_DO_RX_EMPTY:
 32611                           	opt callstack 0
 32612                           
 32613                           ; BSR set to: 2
 32614                           ;mcc_generated_files/i2c2_master.c: 483:     I2C2_Status.bufferFree = 1;
 32615                           
 32616                           ; BSR set to: 2
 32617                           ;incstack = 0
 32618 ;; hardware stack exceeded
 32619  008782  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 32620                           
 32621                           ;mcc_generated_files/i2c2_master.c: 484:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 32622  008784  D016               	goto	i2l17336
 32623  008786                     i2l17308:
 32624                           
 32625                           ;mcc_generated_files/i2c2_master.c: 487:             I2C2_MasterEnableRestart();
 32626  008786  EC58  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 32627                           
 32628                           ; BSR set to: 61
 32629                           ;mcc_generated_files/i2c2_master.c: 488:             return I2C2_SEND_RESTART_WRITE;
 32630  00878A  0E08               	movlw	8
 32631  00878C  0012               	return	
 32632  00878E                     i2l17314:
 32633                           
 32634                           ;mcc_generated_files/i2c2_master.c: 490:             I2C2_MasterEnableRestart();
 32635  00878E  EC58  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 32636                           
 32637                           ; BSR set to: 61
 32638                           ;mcc_generated_files/i2c2_master.c: 491:             return I2C2_SEND_RESTART_READ;
 32639  008792  0E07               	movlw	7
 32640  008794  0012               	return	
 32641  008796                     i2l17320:
 32642                           
 32643                           ;mcc_generated_files/i2c2_master.c: 494:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 32644  008796  0102               	movlb	2	; () banked
 32645  008798  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 32646  00879A  EC1B  F052         	call	i2_I2C2_MasterSetCounter
 32647                           
 32648                           ;mcc_generated_files/i2c2_master.c: 495:             return I2C2_RX;
 32649  00879E  0E04               	movlw	4
 32650  0087A0  0012               	return	
 32651  0087A2                     i2l17326:
 32652                           
 32653                           ;mcc_generated_files/i2c2_master.c: 498:             if(I2C2_Status.state != I2C2_SEND_R
      +                          ESTART_READ)
 32654  0087A2  0E07               	movlw	7
 32655  0087A4  0102               	movlb	2	; () banked
 32656  0087A6  1921               	xorwf	(_I2C2_Status+33)& (0+255),w,b
 32657  0087A8  A4D8               	btfss	status,2,c
 32658                           
 32659                           ; BSR set to: 2
 32660                           ;mcc_generated_files/i2c2_master.c: 499:             {;mcc_generated_files/i2c2_master.c
      +                          : 500:                 I2C2_MasterDisableRestart();
 32661  0087AA  EC5B  F052         	call	i2_I2C2_MasterDisableRestart	;wreg free
 32662                           
 32663                           ;mcc_generated_files/i2c2_master.c: 502:             return I2C2_RESET;
 32664  0087AE  0E0F               	movlw	15
 32665  0087B0  0012               	return	
 32666  0087B2                     i2l17336:
 32667                           
 32668                           ; BSR set to: 2
 32669  0087B2  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 32670  0087B8  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 32671  0087BE  D801               	call	i2u1762_48
 32672  0087C0  D009               	goto	i2u1762_49
 32673  0087C2                     i2u1762_48:
 32674  0087C2  0005               	push	
 32675  0087C4  6EFA               	movwf	pclath,c
 32676  0087C6  5100               	movf	_I2C2_Status& (0+255),w,b
 32677  0087C8  6EFD               	movwf	tosl,c
 32678  0087CA  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 32679  0087CC  6EFE               	movwf	tosh,c
 32680  0087CE  6AFF               	clrf	tosu,c
 32681  0087D0  50FA               	movf	pclath,w,c
 32682  0087D2  0012               	return		;indir
 32683  0087D4                     i2u1762_49:
 32684  0087D4  6E07               	movwf	??i2_I2C2_DO_RX_EMPTY^0,c
 32685  0087D6  6A08               	clrf	(??i2_I2C2_DO_RX_EMPTY+1)^0,c
 32686                           
 32687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32688                           ; Switch size 1, requested type "simple"
 32689                           ; Number of cases is 1, Range of values is 0 to 0
 32690                           ; switch strategies available:
 32691                           ; Name         Instructions Cycles
 32692                           ; simple_byte            4     3 (average)
 32693                           ;	Chosen strategy is simple_byte
 32694  0087D8  5008               	movf	(??i2_I2C2_DO_RX_EMPTY+1)^0,w,c
 32695  0087DA  0A00               	xorlw	0	; case 0
 32696  0087DC  A4D8               	btfss	status,2,c
 32697  0087DE  D7E1               	goto	i2l17326
 32698                           
 32699                           ; Switch size 1, requested type "simple"
 32700                           ; Number of cases is 4, Range of values is 1 to 4
 32701                           ; switch strategies available:
 32702                           ; Name         Instructions Cycles
 32703                           ; simple_byte           13     7 (average)
 32704                           ;	Chosen strategy is simple_byte
 32705  0087E0  5007               	movf	??i2_I2C2_DO_RX_EMPTY^0,w,c
 32706  0087E2  0A01               	xorlw	1	; case 1
 32707  0087E4  B4D8               	btfsc	status,2,c
 32708  0087E6  D7DD               	goto	i2l17326
 32709  0087E8  0A03               	xorlw	3	; case 2
 32710  0087EA  B4D8               	btfsc	status,2,c
 32711  0087EC  D7D0               	goto	i2l17314
 32712  0087EE  0A01               	xorlw	1	; case 3
 32713  0087F0  B4D8               	btfsc	status,2,c
 32714  0087F2  D7C9               	goto	i2l17308
 32715  0087F4  0A07               	xorlw	7	; case 4
 32716  0087F6  B4D8               	btfsc	status,2,c
 32717  0087F8  D7CE               	goto	i2l17320
 32718  0087FA  D7D3               	goto	i2l17326
 32719  0087FC                     __end_ofi2_I2C2_DO_RX_EMPTY:
 32720                           	opt callstack 0
 32721                           
 32722 ;; *************** function i2_I2C2_DO_SEND_ADR_READ *****************
 32723 ;; Defined at:
 32724 ;;		line 387 in file "mcc_generated_files/i2c2_master.c"
 32725 ;; Parameters:    Size  Location     Type
 32726 ;;		None
 32727 ;; Auto vars:     Size  Location     Type
 32728 ;;		None
 32729 ;; Return value:  Size  Location     Type
 32730 ;;                  1    wreg      enum E16447
 32731 ;; Registers used:
 32732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32733 ;; Tracked objects:
 32734 ;;		On entry : 0/2
 32735 ;;		On exit  : 0/0
 32736 ;;		Unchanged: 0/0
 32737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32742 ;;Total ram usage:        0 bytes
 32743 ;; Hardware stack levels used:    1
 32744 ;; Hardware stack levels required when called:   11
 32745 ;; This function calls:
 32746 ;;		i2_I2C2_DO_RX_EMPTY
 32747 ;;		i2_I2C2_MasterSendTxData
 32748 ;; This function is called by:
 32749 ;;		_I2C2_DO_SEND_RESTART_READ
 32750 ;; This function uses a non-reentrant model
 32751 ;;
 32752                           
 32753                           	psect	text169
 32754  009F68                     __ptext169:
 32755                           	opt callstack 0
 32756  009F68                     i2_I2C2_DO_SEND_ADR_READ:
 32757                           	opt callstack 0
 32758                           
 32759                           ;mcc_generated_files/i2c2_master.c: 389:     I2C2_Status.addressNackCheck = 2;
 32760                           
 32761                           ;incstack = 0
 32762 ;; hardware stack exceeded
 32763  009F68  0102               	movlb	2	; () banked
 32764  009F6A  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 32765  009F6C  0BFC               	andlw	-4
 32766  009F6E  0902               	iorlw	2
 32767  009F70  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 32768                           
 32769                           ; BSR set to: 2
 32770                           ;mcc_generated_files/i2c2_master.c: 390:     if(I2C2_Status.data_length == 1)
 32771  009F72  051F               	decf	(_I2C2_Status+31)& (0+255),w,b
 32772  009F74  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 32773  009F76  B4D8               	btfsc	status,2,c
 32774                           
 32775                           ; BSR set to: 2
 32776                           ;mcc_generated_files/i2c2_master.c: 391:     {;mcc_generated_files/i2c2_master.c: 392:  
      +                                 I2C2_DO_RX_EMPTY();
 32777  009F78  ECC1  F043         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 32778                           
 32779                           ;mcc_generated_files/i2c2_master.c: 394:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1 | 1);
 32780  009F7C  80D8               	bsf	status,0,c
 32781  009F7E  0102               	movlb	2	; () banked
 32782  009F80  351C               	rlcf	(_I2C2_Status+28)& (0+255),w,b
 32783  009F82  EC16  F052         	call	i2_I2C2_MasterSendTxData
 32784                           
 32785                           ;mcc_generated_files/i2c2_master.c: 395:     return I2C2_RX;
 32786  009F86  0E04               	movlw	4
 32787  009F88  0012               	return		;funcret
 32788  009F8A                     __end_ofi2_I2C2_DO_SEND_ADR_READ:
 32789                           	opt callstack 0
 32790                           
 32791 ;; *************** function _I2C2_DO_BUS_ERROR *****************
 32792 ;; Defined at:
 32793 ;;		line 597 in file "mcc_generated_files/i2c2_master.c"
 32794 ;; Parameters:    Size  Location     Type
 32795 ;;		None
 32796 ;; Auto vars:     Size  Location     Type
 32797 ;;		None
 32798 ;; Return value:  Size  Location     Type
 32799 ;;                  1    wreg      enum E16447
 32800 ;; Registers used:
 32801 ;;		wreg, status,2, cstack
 32802 ;; Tracked objects:
 32803 ;;		On entry : 3F/2
 32804 ;;		On exit  : 3F/2
 32805 ;;		Unchanged: 0/0
 32806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32811 ;;Total ram usage:        0 bytes
 32812 ;; Hardware stack levels used:    1
 32813 ;; Hardware stack levels required when called:    1
 32814 ;; This function calls:
 32815 ;;		_I2C2_MasterResetBus
 32816 ;; This function is called by:
 32817 ;;		_I2C2_MasterFsm
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text170
 32822  00A26C                     __ptext170:
 32823                           	opt callstack 0
 32824  00A26C                     _I2C2_DO_BUS_ERROR:
 32825                           	opt callstack 9
 32826                           
 32827                           ; BSR set to: 2
 32828                           ;mcc_generated_files/i2c2_master.c: 599:     I2C2_MasterResetBus();
 32829                           
 32830                           ;incstack = 0
 32831  00A26C  EC20  F052         	call	_I2C2_MasterResetBus	;wreg free
 32832                           
 32833                           ; BSR set to: 61
 32834                           ;mcc_generated_files/i2c2_master.c: 600:     I2C2_Status.busy = 0;
 32835  00A270  0102               	movlb	2	; () banked
 32836  00A272  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 32837                           
 32838                           ; BSR set to: 2
 32839                           ;mcc_generated_files/i2c2_master.c: 601:     I2C2_Status.error = I2C2_FAIL;
 32840  00A274  0E02               	movlw	2
 32841  00A276  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 32842                           
 32843                           ; BSR set to: 2
 32844                           ;mcc_generated_files/i2c2_master.c: 602:     return I2C2_RESET;
 32845  00A278  0E0F               	movlw	15
 32846                           
 32847                           ; BSR set to: 2
 32848  00A27A  0012               	return		;funcret
 32849  00A27C                     __end_of_I2C2_DO_BUS_ERROR:
 32850                           	opt callstack 0
 32851                           
 32852 ;; *************** function _I2C2_DO_BUS_COLLISION *****************
 32853 ;; Defined at:
 32854 ;;		line 581 in file "mcc_generated_files/i2c2_master.c"
 32855 ;; Parameters:    Size  Location     Type
 32856 ;;		None
 32857 ;; Auto vars:     Size  Location     Type
 32858 ;;		None
 32859 ;; Return value:  Size  Location     Type
 32860 ;;                  1    wreg      enum E16447
 32861 ;; Registers used:
 32862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32863 ;; Tracked objects:
 32864 ;;		On entry : 3F/2
 32865 ;;		On exit  : 0/0
 32866 ;;		Unchanged: 0/0
 32867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32872 ;;Total ram usage:        2 bytes
 32873 ;; Hardware stack levels used:    1
 32874 ;; Hardware stack levels required when called:   13
 32875 ;; This function calls:
 32876 ;;		Absolute function
 32877 ;;		_I2C2_DO_RESET
 32878 ;;		_I2C2_DO_SEND_RESTART_READ
 32879 ;;		_I2C2_DO_SEND_RESTART_WRITE
 32880 ;;		i2_I2C2_CallbackReturnReset
 32881 ;;		i2_I2C2_CallbackReturnStop
 32882 ;;		i2_I2C2_MasterClearIrq
 32883 ;;		i2_I2C2_NackCb
 32884 ;;		i2_rd1RegCompleteHandler
 32885 ;;		i2_rd2RegCompleteHandler
 32886 ;;		i2_rdBlkRegCompleteHandler
 32887 ;;		i2_wr1RegCompleteHandler
 32888 ;;		i2_wr2RegCompleteHandler
 32889 ;; This function is called by:
 32890 ;;		_I2C2_MasterFsm
 32891 ;; This function uses a non-reentrant model
 32892 ;;
 32893                           
 32894                           	psect	text171
 32895  008D46                     __ptext171:
 32896                           	opt callstack 0
 32897  008D46                     _I2C2_DO_BUS_COLLISION:
 32898                           	opt callstack 0
 32899                           
 32900                           ; BSR set to: 2
 32901                           ;mcc_generated_files/i2c2_master.c: 584:     I2C2_MasterClearIrq();
 32902                           
 32903                           ; BSR set to: 2
 32904                           ;incstack = 0
 32905 ;; hardware stack exceeded
 32906  008D46  EC39  F052         	call	i2_I2C2_MasterClearIrq	;wreg free
 32907                           
 32908                           ; BSR set to: 61
 32909                           ;mcc_generated_files/i2c2_master.c: 586:     I2C2_Status.error = I2C2_FAIL;
 32910  008D4A  0E02               	movlw	2
 32911  008D4C  0102               	movlb	2	; () banked
 32912  008D4E  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 32913                           
 32914                           ;mcc_generated_files/i2c2_master.c: 587:     switch (I2C2_Status.callbackTable[I2C2_WRIT
      +                          E_COLLISION](I2C2_Status.callbackPayload[I2C2_WRITE_COLLISION])) {
 32915  008D50  D009               	goto	i2l17866
 32916  008D52                     i2l17852:
 32917                           
 32918                           ;mcc_generated_files/i2c2_master.c: 589:         return I2C2_DO_SEND_RESTART_READ();
 32919  008D52  ECAA  F051         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 32920  008D56  0012               	return	
 32921  008D58                     i2l17856:
 32922                           
 32923                           ;mcc_generated_files/i2c2_master.c: 591:         return I2C2_DO_SEND_RESTART_WRITE();
 32924  008D58  EC6E  F052         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 32925  008D5C  0012               	return	
 32926  008D5E                     i2l17860:
 32927                           
 32928                           ;mcc_generated_files/i2c2_master.c: 593:         return I2C2_DO_RESET();
 32929  008D5E  EC3E  F051         	call	_I2C2_DO_RESET	;wreg free
 32930  008D62  0012               	return	
 32931  008D64                     i2l17866:
 32932                           
 32933                           ; BSR set to: 2
 32934  008D64  0060  F838  F005   	movff	_I2C2_Status+14,i2rd1RegCompleteHandler@ptr
 32935  008D6A  0060  F83C  F006   	movff	_I2C2_Status+15,i2rd1RegCompleteHandler@ptr+1
 32936  008D70  D801               	call	i2u1820_48
 32937  008D72  D009               	goto	i2u1820_49
 32938  008D74                     i2u1820_48:
 32939  008D74  0005               	push	
 32940  008D76  6EFA               	movwf	pclath,c
 32941  008D78  5102               	movf	(_I2C2_Status+2)& (0+255),w,b
 32942  008D7A  6EFD               	movwf	tosl,c
 32943  008D7C  5103               	movf	(_I2C2_Status+3)& (0+255),w,b
 32944  008D7E  6EFE               	movwf	tosh,c
 32945  008D80  6AFF               	clrf	tosu,c
 32946  008D82  50FA               	movf	pclath,w,c
 32947  008D84  0012               	return		;indir
 32948  008D86                     i2u1820_49:
 32949  008D86  6E07               	movwf	??_I2C2_DO_BUS_COLLISION^0,c
 32950  008D88  6A08               	clrf	(??_I2C2_DO_BUS_COLLISION+1)^0,c
 32951                           
 32952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32953                           ; Switch size 1, requested type "simple"
 32954                           ; Number of cases is 1, Range of values is 0 to 0
 32955                           ; switch strategies available:
 32956                           ; Name         Instructions Cycles
 32957                           ; simple_byte            4     3 (average)
 32958                           ;	Chosen strategy is simple_byte
 32959  008D8A  5008               	movf	(??_I2C2_DO_BUS_COLLISION+1)^0,w,c
 32960  008D8C  0A00               	xorlw	0	; case 0
 32961  008D8E  A4D8               	btfss	status,2,c
 32962  008D90  D7E6               	goto	i2l17860
 32963                           
 32964                           ; Switch size 1, requested type "simple"
 32965                           ; Number of cases is 2, Range of values is 2 to 3
 32966                           ; switch strategies available:
 32967                           ; Name         Instructions Cycles
 32968                           ; simple_byte            7     4 (average)
 32969                           ;	Chosen strategy is simple_byte
 32970  008D92  5007               	movf	??_I2C2_DO_BUS_COLLISION^0,w,c
 32971  008D94  0A02               	xorlw	2	; case 2
 32972  008D96  B4D8               	btfsc	status,2,c
 32973  008D98  D7DC               	goto	i2l17852
 32974  008D9A  0A01               	xorlw	1	; case 3
 32975  008D9C  B4D8               	btfsc	status,2,c
 32976  008D9E  D7DC               	goto	i2l17856
 32977  008DA0  D7DE               	goto	i2l17860
 32978  008DA2                     __end_of_I2C2_DO_BUS_COLLISION:
 32979                           	opt callstack 0
 32980                           
 32981 ;; *************** function _I2C2_DO_ADDRESS_NACK *****************
 32982 ;; Defined at:
 32983 ;;		line 566 in file "mcc_generated_files/i2c2_master.c"
 32984 ;; Parameters:    Size  Location     Type
 32985 ;;		None
 32986 ;; Auto vars:     Size  Location     Type
 32987 ;;		None
 32988 ;; Return value:  Size  Location     Type
 32989 ;;                  1    wreg      enum E16447
 32990 ;; Registers used:
 32991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32992 ;; Tracked objects:
 32993 ;;		On entry : 3F/2
 32994 ;;		On exit  : 0/0
 32995 ;;		Unchanged: 0/0
 32996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33001 ;;Total ram usage:        2 bytes
 33002 ;; Hardware stack levels used:    1
 33003 ;; Hardware stack levels required when called:   10
 33004 ;; This function calls:
 33005 ;;		Absolute function
 33006 ;;		_I2C2_DO_SEND_RESTART
 33007 ;;		i2_I2C2_CallbackReturnReset
 33008 ;;		i2_I2C2_CallbackReturnStop
 33009 ;;		i2_I2C2_NackCb
 33010 ;;		i2_rd1RegCompleteHandler
 33011 ;;		i2_rd2RegCompleteHandler
 33012 ;;		i2_rdBlkRegCompleteHandler
 33013 ;;		i2_wr1RegCompleteHandler
 33014 ;;		i2_wr2RegCompleteHandler
 33015 ;; This function is called by:
 33016 ;;		_I2C2_MasterFsm
 33017 ;; This function uses a non-reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text172
 33021  009062                     __ptext172:
 33022                           	opt callstack 0
 33023  009062                     _I2C2_DO_ADDRESS_NACK:
 33024                           	opt callstack 0
 33025                           
 33026                           ; BSR set to: 2
 33027                           ;mcc_generated_files/i2c2_master.c: 568:     I2C2_Status.addressNackCheck = 0;
 33028                           
 33029                           ;incstack = 0
 33030  009062  0EFC               	movlw	-4
 33031  009064  1723               	andwf	(_I2C2_Status+35)& (0+255),f,b
 33032                           
 33033                           ;mcc_generated_files/i2c2_master.c: 569:     I2C2_Status.error = I2C2_FAIL;
 33034  009066  0E02               	movlw	2
 33035  009068  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33036                           
 33037                           ; BSR set to: 2
 33038                           ;mcc_generated_files/i2c2_master.c: 570:     I2C2_Status.busy = 0;
 33039  00906A  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33040                           
 33041                           ;mcc_generated_files/i2c2_master.c: 571:     switch(I2C2_Status.callbackTable[I2C2_ADDR_
      +                          NACK](I2C2_Status.callbackPayload[I2C2_ADDR_NACK]))
 33042  00906C  D005               	goto	i2l17840
 33043  00906E                     i2l17830:
 33044                           
 33045                           ;mcc_generated_files/i2c2_master.c: 575:             return I2C2_DO_SEND_RESTART();
 33046  00906E  EC6C  F052         	call	_I2C2_DO_SEND_RESTART	;wreg free
 33047  009072  0012               	return	
 33048  009074                     i2l17834:
 33049                           
 33050                           ;mcc_generated_files/i2c2_master.c: 577:             return I2C2_RESET;
 33051  009074  0E0F               	movlw	15
 33052  009076  0012               	return	
 33053  009078                     i2l17840:
 33054                           
 33055                           ; BSR set to: 2
 33056  009078  0060  F840  F005   	movff	_I2C2_Status+16,i2rd1RegCompleteHandler@ptr
 33057  00907E  0060  F844  F006   	movff	_I2C2_Status+17,i2rd1RegCompleteHandler@ptr+1
 33058  009084  D801               	call	i2u1819_48
 33059  009086  D009               	goto	i2u1819_49
 33060  009088                     i2u1819_48:
 33061  009088  0005               	push	
 33062  00908A  6EFA               	movwf	pclath,c
 33063  00908C  5104               	movf	(_I2C2_Status+4)& (0+255),w,b
 33064  00908E  6EFD               	movwf	tosl,c
 33065  009090  5105               	movf	(_I2C2_Status+5)& (0+255),w,b
 33066  009092  6EFE               	movwf	tosh,c
 33067  009094  6AFF               	clrf	tosu,c
 33068  009096  50FA               	movf	pclath,w,c
 33069  009098  0012               	return		;indir
 33070  00909A                     i2u1819_49:
 33071  00909A  6E07               	movwf	??_I2C2_DO_ADDRESS_NACK^0,c
 33072  00909C  6A08               	clrf	(??_I2C2_DO_ADDRESS_NACK+1)^0,c
 33073                           
 33074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33075                           ; Switch size 1, requested type "simple"
 33076                           ; Number of cases is 1, Range of values is 0 to 0
 33077                           ; switch strategies available:
 33078                           ; Name         Instructions Cycles
 33079                           ; simple_byte            4     3 (average)
 33080                           ;	Chosen strategy is simple_byte
 33081  00909E  5008               	movf	(??_I2C2_DO_ADDRESS_NACK+1)^0,w,c
 33082  0090A0  0A00               	xorlw	0	; case 0
 33083  0090A2  A4D8               	btfss	status,2,c
 33084  0090A4  D7E7               	goto	i2l17834
 33085                           
 33086                           ; Switch size 1, requested type "simple"
 33087                           ; Number of cases is 2, Range of values is 2 to 3
 33088                           ; switch strategies available:
 33089                           ; Name         Instructions Cycles
 33090                           ; simple_byte            7     4 (average)
 33091                           ;	Chosen strategy is simple_byte
 33092  0090A6  5007               	movf	??_I2C2_DO_ADDRESS_NACK^0,w,c
 33093  0090A8  0A02               	xorlw	2	; case 2
 33094  0090AA  B4D8               	btfsc	status,2,c
 33095  0090AC  D7E0               	goto	i2l17830
 33096  0090AE  0A01               	xorlw	1	; case 3
 33097  0090B0  B4D8               	btfsc	status,2,c
 33098  0090B2  D7DD               	goto	i2l17830
 33099  0090B4  D7DF               	goto	i2l17834
 33100  0090B6                     __end_of_I2C2_DO_ADDRESS_NACK:
 33101                           	opt callstack 0
 33102                           
 33103 ;; *************** function _I2C2_DO_RESET *****************
 33104 ;; Defined at:
 33105 ;;		line 559 in file "mcc_generated_files/i2c2_master.c"
 33106 ;; Parameters:    Size  Location     Type
 33107 ;;		None
 33108 ;; Auto vars:     Size  Location     Type
 33109 ;;		None
 33110 ;; Return value:  Size  Location     Type
 33111 ;;                  1    wreg      enum E16447
 33112 ;; Registers used:
 33113 ;;		wreg, status,2, cstack
 33114 ;; Tracked objects:
 33115 ;;		On entry : 0/2
 33116 ;;		On exit  : 3F/2
 33117 ;;		Unchanged: 0/0
 33118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33123 ;;Total ram usage:        0 bytes
 33124 ;; Hardware stack levels used:    1
 33125 ;; Hardware stack levels required when called:    1
 33126 ;; This function calls:
 33127 ;;		_I2C2_MasterResetBus
 33128 ;; This function is called by:
 33129 ;;		_I2C2_DO_BUS_COLLISION
 33130 ;;		_I2C2_MasterFsm
 33131 ;; This function uses a non-reentrant model
 33132 ;;
 33133                           
 33134                           	psect	text173
 33135  00A27C                     __ptext173:
 33136                           	opt callstack 0
 33137  00A27C                     _I2C2_DO_RESET:
 33138                           	opt callstack 9
 33139                           
 33140                           ;mcc_generated_files/i2c2_master.c: 561:     I2C2_MasterResetBus();
 33141                           
 33142                           ;incstack = 0
 33143  00A27C  EC20  F052         	call	_I2C2_MasterResetBus	;wreg free
 33144                           
 33145                           ; BSR set to: 61
 33146                           ;mcc_generated_files/i2c2_master.c: 562:     I2C2_Status.busy = 0;
 33147  00A280  0102               	movlb	2	; () banked
 33148  00A282  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 33149                           
 33150                           ; BSR set to: 2
 33151                           ;mcc_generated_files/i2c2_master.c: 563:     I2C2_Status.error = I2C2_NOERR;
 33152  00A284  0E00               	movlw	0
 33153  00A286  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 33154                           
 33155                           ; BSR set to: 2
 33156                           ;mcc_generated_files/i2c2_master.c: 564:     return I2C2_RESET;
 33157  00A288  0E0F               	movlw	15
 33158                           
 33159                           ; BSR set to: 2
 33160  00A28A  0012               	return		;funcret
 33161  00A28C                     __end_of_I2C2_DO_RESET:
 33162                           	opt callstack 0
 33163                           
 33164 ;; *************** function _I2C2_DO_RX_NACK_RESTART *****************
 33165 ;; Defined at:
 33166 ;;		line 553 in file "mcc_generated_files/i2c2_master.c"
 33167 ;; Parameters:    Size  Location     Type
 33168 ;;		None
 33169 ;; Auto vars:     Size  Location     Type
 33170 ;;		None
 33171 ;; Return value:  Size  Location     Type
 33172 ;;                  1    wreg      enum E16447
 33173 ;; Registers used:
 33174 ;;		wreg, cstack
 33175 ;; Tracked objects:
 33176 ;;		On entry : 3F/2
 33177 ;;		On exit  : 3F/3D
 33178 ;;		Unchanged: 0/0
 33179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33184 ;;Total ram usage:        0 bytes
 33185 ;; Hardware stack levels used:    1
 33186 ;; Hardware stack levels required when called:    1
 33187 ;; This function calls:
 33188 ;;		_I2C2_MasterSendNack
 33189 ;; This function is called by:
 33190 ;;		_I2C2_MasterFsm
 33191 ;; This function uses a non-reentrant model
 33192 ;;
 33193                           
 33194                           	psect	text174
 33195  00A45A                     __ptext174:
 33196                           	opt callstack 0
 33197  00A45A                     _I2C2_DO_RX_NACK_RESTART:
 33198                           	opt callstack 9
 33199                           
 33200                           ; BSR set to: 2
 33201                           ;mcc_generated_files/i2c2_master.c: 555:     I2C2_MasterSendNack();
 33202                           
 33203                           ; BSR set to: 2
 33204                           ;incstack = 0
 33205  00A45A  EC4F  F052         	call	_I2C2_MasterSendNack	;wreg free
 33206                           
 33207                           ; BSR set to: 61
 33208                           ;mcc_generated_files/i2c2_master.c: 556:     return I2C2_SEND_RESTART;
 33209  00A45E  0E09               	movlw	9
 33210                           
 33211                           ; BSR set to: 61
 33212  00A460  0012               	return		;funcret
 33213  00A462                     __end_of_I2C2_DO_RX_NACK_RESTART:
 33214                           	opt callstack 0
 33215                           
 33216 ;; *************** function _I2C2_DO_RX_NACK_STOP *****************
 33217 ;; Defined at:
 33218 ;;		line 546 in file "mcc_generated_files/i2c2_master.c"
 33219 ;; Parameters:    Size  Location     Type
 33220 ;;		None
 33221 ;; Auto vars:     Size  Location     Type
 33222 ;;		None
 33223 ;; Return value:  Size  Location     Type
 33224 ;;                  1    wreg      enum E16447
 33225 ;; Registers used:
 33226 ;;		wreg, status,2, cstack
 33227 ;; Tracked objects:
 33228 ;;		On entry : 3F/2
 33229 ;;		On exit  : 3F/2
 33230 ;;		Unchanged: 0/0
 33231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33236 ;;Total ram usage:        0 bytes
 33237 ;; Hardware stack levels used:    1
 33238 ;; Hardware stack levels required when called:    1
 33239 ;; This function calls:
 33240 ;;		_I2C2_DO_IDLE
 33241 ;;		_I2C2_MasterSendNack
 33242 ;;		_I2C2_MasterStop
 33243 ;; This function is called by:
 33244 ;;		_I2C2_MasterFsm
 33245 ;; This function uses a non-reentrant model
 33246 ;;
 33247                           
 33248                           	psect	text175
 33249  00A346                     __ptext175:
 33250                           	opt callstack 0
 33251  00A346                     _I2C2_DO_RX_NACK_STOP:
 33252                           	opt callstack 9
 33253                           
 33254                           ; BSR set to: 2
 33255                           ;mcc_generated_files/i2c2_master.c: 548:     I2C2_MasterSendNack();
 33256                           
 33257                           ; BSR set to: 61
 33258                           ;incstack = 0
 33259  00A346  EC4F  F052         	call	_I2C2_MasterSendNack	;wreg free
 33260                           
 33261                           ;mcc_generated_files/i2c2_master.c: 549:     I2C2_MasterStop();
 33262  00A34A  EC4C  F052         	call	_I2C2_MasterStop	;wreg free
 33263                           
 33264                           ; BSR set to: 61
 33265                           ;mcc_generated_files/i2c2_master.c: 550:     return I2C2_DO_IDLE();
 33266  00A34E  ECE4  F051         	call	_I2C2_DO_IDLE	;wreg free
 33267                           
 33268                           ; BSR set to: 2
 33269  00A352  0012               	return		;funcret
 33270  00A354                     __end_of_I2C2_DO_RX_NACK_STOP:
 33271                           	opt callstack 0
 33272                           
 33273 ;; *************** function _I2C2_DO_TX_ACK *****************
 33274 ;; Defined at:
 33275 ;;		line 540 in file "mcc_generated_files/i2c2_master.c"
 33276 ;; Parameters:    Size  Location     Type
 33277 ;;		None
 33278 ;; Auto vars:     Size  Location     Type
 33279 ;;		None
 33280 ;; Return value:  Size  Location     Type
 33281 ;;                  1    wreg      enum E16447
 33282 ;; Registers used:
 33283 ;;		wreg, cstack
 33284 ;; Tracked objects:
 33285 ;;		On entry : 3F/2
 33286 ;;		On exit  : 3F/3D
 33287 ;;		Unchanged: 0/0
 33288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33293 ;;Total ram usage:        0 bytes
 33294 ;; Hardware stack levels used:    1
 33295 ;; Hardware stack levels required when called:    1
 33296 ;; This function calls:
 33297 ;;		_I2C2_MasterSendAck
 33298 ;; This function is called by:
 33299 ;;		_I2C2_MasterFsm
 33300 ;; This function uses a non-reentrant model
 33301 ;;
 33302                           
 33303                           	psect	text176
 33304  00A462                     __ptext176:
 33305                           	opt callstack 0
 33306  00A462                     _I2C2_DO_TX_ACK:
 33307                           	opt callstack 9
 33308                           
 33309                           ; BSR set to: 2
 33310                           ;mcc_generated_files/i2c2_master.c: 542:     I2C2_MasterSendAck();
 33311                           
 33312                           ; BSR set to: 2
 33313                           ;incstack = 0
 33314  00A462  EC52  F052         	call	_I2C2_MasterSendAck	;wreg free
 33315                           
 33316                           ; BSR set to: 61
 33317                           ;mcc_generated_files/i2c2_master.c: 543:     return I2C2_TX;
 33318  00A466  0E03               	movlw	3
 33319                           
 33320                           ; BSR set to: 61
 33321  00A468  0012               	return		;funcret
 33322  00A46A                     __end_of_I2C2_DO_TX_ACK:
 33323                           	opt callstack 0
 33324                           
 33325 ;; *************** function _I2C2_DO_RX_ACK *****************
 33326 ;; Defined at:
 33327 ;;		line 534 in file "mcc_generated_files/i2c2_master.c"
 33328 ;; Parameters:    Size  Location     Type
 33329 ;;		None
 33330 ;; Auto vars:     Size  Location     Type
 33331 ;;		None
 33332 ;; Return value:  Size  Location     Type
 33333 ;;                  1    wreg      enum E16447
 33334 ;; Registers used:
 33335 ;;		wreg, cstack
 33336 ;; Tracked objects:
 33337 ;;		On entry : 3F/2
 33338 ;;		On exit  : 3F/3D
 33339 ;;		Unchanged: 0/0
 33340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33345 ;;Total ram usage:        0 bytes
 33346 ;; Hardware stack levels used:    1
 33347 ;; Hardware stack levels required when called:    1
 33348 ;; This function calls:
 33349 ;;		_I2C2_MasterSendAck
 33350 ;; This function is called by:
 33351 ;;		_I2C2_MasterFsm
 33352 ;; This function uses a non-reentrant model
 33353 ;;
 33354                           
 33355                           	psect	text177
 33356  00A46A                     __ptext177:
 33357                           	opt callstack 0
 33358  00A46A                     _I2C2_DO_RX_ACK:
 33359                           	opt callstack 9
 33360                           
 33361                           ; BSR set to: 2
 33362                           ;mcc_generated_files/i2c2_master.c: 536:     I2C2_MasterSendAck();
 33363                           
 33364                           ; BSR set to: 61
 33365                           ;incstack = 0
 33366  00A46A  EC52  F052         	call	_I2C2_MasterSendAck	;wreg free
 33367                           
 33368                           ; BSR set to: 61
 33369                           ;mcc_generated_files/i2c2_master.c: 537:     return I2C2_RX;
 33370  00A46E  0E04               	movlw	4
 33371                           
 33372                           ; BSR set to: 61
 33373  00A470  0012               	return		;funcret
 33374  00A472                     __end_of_I2C2_DO_RX_ACK:
 33375                           	opt callstack 0
 33376                           
 33377 ;; *************** function _I2C2_DO_SEND_STOP *****************
 33378 ;; Defined at:
 33379 ;;		line 523 in file "mcc_generated_files/i2c2_master.c"
 33380 ;; Parameters:    Size  Location     Type
 33381 ;;		None
 33382 ;; Auto vars:     Size  Location     Type
 33383 ;;		None
 33384 ;; Return value:  Size  Location     Type
 33385 ;;                  1    wreg      enum E16447
 33386 ;; Registers used:
 33387 ;;		wreg, status,2, cstack
 33388 ;; Tracked objects:
 33389 ;;		On entry : 3F/2
 33390 ;;		On exit  : 0/0
 33391 ;;		Unchanged: 0/0
 33392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33397 ;;Total ram usage:        0 bytes
 33398 ;; Hardware stack levels used:    1
 33399 ;; Hardware stack levels required when called:    1
 33400 ;; This function calls:
 33401 ;;		_I2C2_MasterGetCounter
 33402 ;;		_I2C2_MasterStop
 33403 ;;		i2_I2C2_MasterSendTxData
 33404 ;;		i2_I2C2_MasterSetCounter
 33405 ;; This function is called by:
 33406 ;;		_I2C2_MasterFsm
 33407 ;; This function uses a non-reentrant model
 33408 ;;
 33409                           
 33410                           	psect	text178
 33411  00A08A                     __ptext178:
 33412                           	opt callstack 0
 33413  00A08A                     _I2C2_DO_SEND_STOP:
 33414                           	opt callstack 9
 33415                           
 33416                           ; BSR set to: 2
 33417                           ;mcc_generated_files/i2c2_master.c: 525:     I2C2_MasterStop();
 33418                           
 33419                           ; BSR set to: 61
 33420                           ;incstack = 0
 33421  00A08A  EC4C  F052         	call	_I2C2_MasterStop	;wreg free
 33422                           
 33423                           ; BSR set to: 61
 33424                           ;mcc_generated_files/i2c2_master.c: 526:     if(I2C2_MasterGetCounter())
 33425  00A08E  EC70  F052         	call	_I2C2_MasterGetCounter	;wreg free
 33426  00A092  0900               	iorlw	0
 33427  00A094  B4D8               	btfsc	status,2,c
 33428  00A096  D006               	goto	i2l12002
 33429                           
 33430                           ; BSR set to: 61
 33431                           ;mcc_generated_files/i2c2_master.c: 527:     {;mcc_generated_files/i2c2_master.c: 528:  
      +                                 I2C2_MasterSetCounter(0);
 33432  00A098  0E00               	movlw	0
 33433  00A09A  EC1B  F052         	call	i2_I2C2_MasterSetCounter
 33434                           
 33435                           ;mcc_generated_files/i2c2_master.c: 529:         I2C2_MasterSendTxData(0);
 33436  00A09E  0E00               	movlw	0
 33437  00A0A0  EC16  F052         	call	i2_I2C2_MasterSendTxData
 33438  00A0A4                     i2l12002:
 33439                           
 33440                           ;mcc_generated_files/i2c2_master.c: 531:     return I2C2_IDLE;
 33441  00A0A4  0E00               	movlw	0
 33442  00A0A6  0012               	return		;funcret
 33443  00A0A8                     __end_of_I2C2_DO_SEND_STOP:
 33444                           	opt callstack 0
 33445                           
 33446 ;; *************** function _I2C2_DO_SEND_RESTART *****************
 33447 ;; Defined at:
 33448 ;;		line 518 in file "mcc_generated_files/i2c2_master.c"
 33449 ;; Parameters:    Size  Location     Type
 33450 ;;		None
 33451 ;; Auto vars:     Size  Location     Type
 33452 ;;		None
 33453 ;; Return value:  Size  Location     Type
 33454 ;;                  1    wreg      enum E16447
 33455 ;; Registers used:
 33456 ;;		wreg
 33457 ;; Tracked objects:
 33458 ;;		On entry : 0/2
 33459 ;;		On exit  : 0/0
 33460 ;;		Unchanged: 0/0
 33461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33466 ;;Total ram usage:        0 bytes
 33467 ;; Hardware stack levels used:    1
 33468 ;; This function calls:
 33469 ;;		Nothing
 33470 ;; This function is called by:
 33471 ;;		_I2C2_DO_ADDRESS_NACK
 33472 ;;		_I2C2_MasterFsm
 33473 ;; This function uses a non-reentrant model
 33474 ;;
 33475                           
 33476                           	psect	text179
 33477  00A4D8                     __ptext179:
 33478                           	opt callstack 0
 33479  00A4D8                     _I2C2_DO_SEND_RESTART:
 33480                           	opt callstack 10
 33481                           
 33482                           ;mcc_generated_files/i2c2_master.c: 520:     return I2C2_SEND_ADR_READ;
 33483                           
 33484                           ;incstack = 0
 33485  00A4D8  0E01               	movlw	1
 33486  00A4DA  0012               	return		;funcret
 33487  00A4DC                     __end_of_I2C2_DO_SEND_RESTART:
 33488                           	opt callstack 0
 33489                           
 33490 ;; *************** function _I2C2_DO_SEND_RESTART_WRITE *****************
 33491 ;; Defined at:
 33492 ;;		line 512 in file "mcc_generated_files/i2c2_master.c"
 33493 ;; Parameters:    Size  Location     Type
 33494 ;;		None
 33495 ;; Auto vars:     Size  Location     Type
 33496 ;;		None
 33497 ;; Return value:  Size  Location     Type
 33498 ;;                  1    wreg      enum E16447
 33499 ;; Registers used:
 33500 ;;		wreg
 33501 ;; Tracked objects:
 33502 ;;		On entry : 0/2
 33503 ;;		On exit  : 0/0
 33504 ;;		Unchanged: 0/0
 33505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33510 ;;Total ram usage:        0 bytes
 33511 ;; Hardware stack levels used:    1
 33512 ;; This function calls:
 33513 ;;		Nothing
 33514 ;; This function is called by:
 33515 ;;		_I2C2_DO_TX
 33516 ;;		_I2C2_DO_BUS_COLLISION
 33517 ;;		_I2C2_MasterFsm
 33518 ;; This function uses a non-reentrant model
 33519 ;;
 33520                           
 33521                           	psect	text180
 33522  00A4DC                     __ptext180:
 33523                           	opt callstack 0
 33524  00A4DC                     _I2C2_DO_SEND_RESTART_WRITE:
 33525                           	opt callstack 9
 33526                           
 33527                           ;mcc_generated_files/i2c2_master.c: 514:     return I2C2_SEND_ADR_WRITE;
 33528                           
 33529                           ;incstack = 0
 33530  00A4DC  0E02               	movlw	2
 33531  00A4DE  0012               	return		;funcret
 33532  00A4E0                     __end_of_I2C2_DO_SEND_RESTART_WRITE:
 33533                           	opt callstack 0
 33534                           
 33535 ;; *************** function _I2C2_DO_SEND_RESTART_READ *****************
 33536 ;; Defined at:
 33537 ;;		line 506 in file "mcc_generated_files/i2c2_master.c"
 33538 ;; Parameters:    Size  Location     Type
 33539 ;;		None
 33540 ;; Auto vars:     Size  Location     Type
 33541 ;;		None
 33542 ;; Return value:  Size  Location     Type
 33543 ;;                  1    wreg      enum E16447
 33544 ;; Registers used:
 33545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33546 ;; Tracked objects:
 33547 ;;		On entry : 0/2
 33548 ;;		On exit  : 0/0
 33549 ;;		Unchanged: 0/0
 33550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33555 ;;Total ram usage:        0 bytes
 33556 ;; Hardware stack levels used:    1
 33557 ;; Hardware stack levels required when called:   12
 33558 ;; This function calls:
 33559 ;;		i2_I2C2_DO_SEND_ADR_READ
 33560 ;;		i2_I2C2_MasterSetCounter
 33561 ;; This function is called by:
 33562 ;;		_I2C2_DO_TX
 33563 ;;		_I2C2_DO_BUS_COLLISION
 33564 ;;		_I2C2_MasterFsm
 33565 ;; This function uses a non-reentrant model
 33566 ;;
 33567                           
 33568                           	psect	text181
 33569  00A354                     __ptext181:
 33570                           	opt callstack 0
 33571  00A354                     _I2C2_DO_SEND_RESTART_READ:
 33572                           	opt callstack 0
 33573                           
 33574                           ;mcc_generated_files/i2c2_master.c: 508:     I2C2_MasterSetCounter(I2C2_Status.data_leng
      +                          th);
 33575                           
 33576                           ;incstack = 0
 33577 ;; hardware stack exceeded
 33578  00A354  0102               	movlb	2	; () banked
 33579  00A356  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 33580  00A358  EC1B  F052         	call	i2_I2C2_MasterSetCounter
 33581                           
 33582                           ;mcc_generated_files/i2c2_master.c: 509:     return I2C2_DO_SEND_ADR_READ();
 33583  00A35C  ECB4  F04F         	call	i2_I2C2_DO_SEND_ADR_READ	;wreg free
 33584  00A360  0012               	return		;funcret
 33585  00A362                     __end_of_I2C2_DO_SEND_RESTART_READ:
 33586                           	opt callstack 0
 33587                           
 33588 ;; *************** function _I2C2_DO_TX_EMPTY *****************
 33589 ;; Defined at:
 33590 ;;		line 462 in file "mcc_generated_files/i2c2_master.c"
 33591 ;; Parameters:    Size  Location     Type
 33592 ;;		None
 33593 ;; Auto vars:     Size  Location     Type
 33594 ;;		None
 33595 ;; Return value:  Size  Location     Type
 33596 ;;                  1    wreg      enum E16447
 33597 ;; Registers used:
 33598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33599 ;; Tracked objects:
 33600 ;;		On entry : 3F/2
 33601 ;;		On exit  : 0/0
 33602 ;;		Unchanged: 0/0
 33603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33608 ;;Total ram usage:        2 bytes
 33609 ;; Hardware stack levels used:    1
 33610 ;; Hardware stack levels required when called:   10
 33611 ;; This function calls:
 33612 ;;		Absolute function
 33613 ;;		i2_I2C2_CallbackReturnReset
 33614 ;;		i2_I2C2_CallbackReturnStop
 33615 ;;		i2_I2C2_MasterDisableRestart
 33616 ;;		i2_I2C2_MasterEnableRestart
 33617 ;;		i2_I2C2_MasterSetCounter
 33618 ;;		i2_I2C2_NackCb
 33619 ;;		i2_rd1RegCompleteHandler
 33620 ;;		i2_rd2RegCompleteHandler
 33621 ;;		i2_rdBlkRegCompleteHandler
 33622 ;;		i2_wr1RegCompleteHandler
 33623 ;;		i2_wr2RegCompleteHandler
 33624 ;; This function is called by:
 33625 ;;		_I2C2_DO_TX
 33626 ;;		_I2C2_MasterFsm
 33627 ;; This function uses a non-reentrant model
 33628 ;;
 33629                           
 33630                           	psect	text182
 33631  008B66                     __ptext182:
 33632                           	opt callstack 0
 33633  008B66                     _I2C2_DO_TX_EMPTY:
 33634                           	opt callstack 0
 33635                           
 33636                           ; BSR set to: 2
 33637                           ;mcc_generated_files/i2c2_master.c: 464:     I2C2_Status.bufferFree = 1;
 33638                           
 33639                           ;incstack = 0
 33640  008B66  8923               	bsf	(_I2C2_Status+35)& (0+255),4,b
 33641                           
 33642                           ;mcc_generated_files/i2c2_master.c: 465:     switch(I2C2_Status.callbackTable[I2C2_DATA_
      +                          COMPLETE](I2C2_Status.callbackPayload[I2C2_DATA_COMPLETE]))
 33643  008B68  D00E               	goto	i2l17556
 33644  008B6A                     i2l17536:
 33645                           
 33646                           ;mcc_generated_files/i2c2_master.c: 468:             I2C2_MasterEnableRestart();
 33647  008B6A  EC58  F052         	call	i2_I2C2_MasterEnableRestart	;wreg free
 33648                           
 33649                           ; BSR set to: 61
 33650                           ;mcc_generated_files/i2c2_master.c: 469:             return I2C2_SEND_RESTART_READ;
 33651  008B6E  0E07               	movlw	7
 33652  008B70  0012               	return	
 33653  008B72                     i2l17542:
 33654                           
 33655                           ;mcc_generated_files/i2c2_master.c: 472:             I2C2_MasterSetCounter(I2C2_Status.d
      +                          ata_length + 1);
 33656  008B72  0102               	movlb	2	; () banked
 33657  008B74  291F               	incf	(_I2C2_Status+31)& (0+255),w,b
 33658  008B76  EC1B  F052         	call	i2_I2C2_MasterSetCounter
 33659                           
 33660                           ;mcc_generated_files/i2c2_master.c: 473:             return I2C2_TX;
 33661  008B7A  0E03               	movlw	3
 33662  008B7C  0012               	return	
 33663  008B7E                     i2l17548:
 33664                           
 33665                           ;mcc_generated_files/i2c2_master.c: 476:             I2C2_MasterDisableRestart();
 33666  008B7E  EC5B  F052         	call	i2_I2C2_MasterDisableRestart	;wreg free
 33667                           
 33668                           ; BSR set to: 61
 33669                           ;mcc_generated_files/i2c2_master.c: 477:             return I2C2_SEND_STOP;
 33670  008B82  0E0A               	movlw	10
 33671  008B84  0012               	return	
 33672  008B86                     i2l17556:
 33673                           
 33674                           ; BSR set to: 2
 33675  008B86  0060  F830  F005   	movff	_I2C2_Status+12,i2rd1RegCompleteHandler@ptr
 33676  008B8C  0060  F834  F006   	movff	_I2C2_Status+13,i2rd1RegCompleteHandler@ptr+1
 33677  008B92  D801               	call	i2u1777_48
 33678  008B94  D009               	goto	i2u1777_49
 33679  008B96                     i2u1777_48:
 33680  008B96  0005               	push	
 33681  008B98  6EFA               	movwf	pclath,c
 33682  008B9A  5100               	movf	_I2C2_Status& (0+255),w,b
 33683  008B9C  6EFD               	movwf	tosl,c
 33684  008B9E  5101               	movf	(_I2C2_Status+1)& (0+255),w,b
 33685  008BA0  6EFE               	movwf	tosh,c
 33686  008BA2  6AFF               	clrf	tosu,c
 33687  008BA4  50FA               	movf	pclath,w,c
 33688  008BA6  0012               	return		;indir
 33689  008BA8                     i2u1777_49:
 33690  008BA8  6E07               	movwf	??_I2C2_DO_TX_EMPTY^0,c
 33691  008BAA  6A08               	clrf	(??_I2C2_DO_TX_EMPTY+1)^0,c
 33692                           
 33693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33694                           ; Switch size 1, requested type "simple"
 33695                           ; Number of cases is 1, Range of values is 0 to 0
 33696                           ; switch strategies available:
 33697                           ; Name         Instructions Cycles
 33698                           ; simple_byte            4     3 (average)
 33699                           ;	Chosen strategy is simple_byte
 33700  008BAC  5008               	movf	(??_I2C2_DO_TX_EMPTY+1)^0,w,c
 33701  008BAE  0A00               	xorlw	0	; case 0
 33702  008BB0  A4D8               	btfss	status,2,c
 33703  008BB2  D7E5               	goto	i2l17548
 33704                           
 33705                           ; Switch size 1, requested type "simple"
 33706                           ; Number of cases is 3, Range of values is 1 to 4
 33707                           ; switch strategies available:
 33708                           ; Name         Instructions Cycles
 33709                           ; simple_byte           10     6 (average)
 33710                           ;	Chosen strategy is simple_byte
 33711  008BB4  5007               	movf	??_I2C2_DO_TX_EMPTY^0,w,c
 33712  008BB6  0A01               	xorlw	1	; case 1
 33713  008BB8  B4D8               	btfsc	status,2,c
 33714  008BBA  D7E1               	goto	i2l17548
 33715  008BBC  0A03               	xorlw	3	; case 2
 33716  008BBE  B4D8               	btfsc	status,2,c
 33717  008BC0  D7D4               	goto	i2l17536
 33718  008BC2  0A06               	xorlw	6	; case 4
 33719  008BC4  B4D8               	btfsc	status,2,c
 33720  008BC6  D7D5               	goto	i2l17542
 33721  008BC8  D7DA               	goto	i2l17548
 33722  008BCA                     __end_of_I2C2_DO_TX_EMPTY:
 33723                           	opt callstack 0
 33724                           
 33725 ;; *************** function _I2C2_DO_RX *****************
 33726 ;; Defined at:
 33727 ;;		line 438 in file "mcc_generated_files/i2c2_master.c"
 33728 ;; Parameters:    Size  Location     Type
 33729 ;;		None
 33730 ;; Auto vars:     Size  Location     Type
 33731 ;;  retFsmState     1    2[COMRAM] enum E16447
 33732 ;; Return value:  Size  Location     Type
 33733 ;;                  1    wreg      enum E16447
 33734 ;; Registers used:
 33735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33736 ;; Tracked objects:
 33737 ;;		On entry : 3F/2
 33738 ;;		On exit  : 0/0
 33739 ;;		Unchanged: 0/0
 33740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33745 ;;Total ram usage:        3 bytes
 33746 ;; Hardware stack levels used:    1
 33747 ;; Hardware stack levels required when called:   11
 33748 ;; This function calls:
 33749 ;;		_I2C2_MasterGetRxData
 33750 ;;		_I2C2_MasterIsRxBufFull
 33751 ;;		i2_I2C2_DO_RX_EMPTY
 33752 ;; This function is called by:
 33753 ;;		_I2C2_MasterFsm
 33754 ;; This function uses a non-reentrant model
 33755 ;;
 33756                           
 33757                           	psect	text183
 33758  008706                     __ptext183:
 33759                           	opt callstack 0
 33760  008706                     _I2C2_DO_RX:
 33761                           	opt callstack 0
 33762                           
 33763                           ; BSR set to: 2
 33764                           ;mcc_generated_files/i2c2_master.c: 440:     if(!I2C2_MasterIsRxBufFull())
 33765                           
 33766                           ;incstack = 0
 33767 ;; hardware stack exceeded
 33768  008706  ECB8  F051         	call	_I2C2_MasterIsRxBufFull	;wreg free
 33769  00870A  0900               	iorlw	0
 33770  00870C  A4D8               	btfss	status,2,c
 33771  00870E  D002               	goto	i2l17802
 33772  008710                     i2u1816_40:
 33773                           
 33774                           ;mcc_generated_files/i2c2_master.c: 441:     {;mcc_generated_files/i2c2_master.c: 442:  
      +                                 return I2C2_RX;
 33775  008710  0E04               	movlw	4
 33776  008712  0012               	return	
 33777  008714                     i2l17802:
 33778                           
 33779                           ; BSR set to: 61
 33780                           ;mcc_generated_files/i2c2_master.c: 444:     if(I2C2_Status.addressNackCheck)
 33781  008714  0102               	movlb	2	; () banked
 33782  008716  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33783  008718  0B03               	andlw	3
 33784  00871A  0900               	iorlw	0
 33785  00871C  B4D8               	btfsc	status,2,c
 33786  00871E  D00C               	goto	i2l1080
 33787                           
 33788                           ; BSR set to: 2
 33789                           ;mcc_generated_files/i2c2_master.c: 445:     {;mcc_generated_files/i2c2_master.c: 446:  
      +                                 I2C2_Status.addressNackCheck--;
 33790  008720  0E01               	movlw	1
 33791  008722  6E01               	movwf	??_I2C2_DO_RX^0,c
 33792  008724  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33793  008726  0B03               	andlw	3
 33794  008728  6E02               	movwf	(??_I2C2_DO_RX+1)^0,c
 33795  00872A  5001               	movf	??_I2C2_DO_RX^0,w,c
 33796  00872C  5E02               	subwf	(??_I2C2_DO_RX+1)^0,f,c
 33797  00872E  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33798  008730  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 33799  008732  0BFC               	andlw	-4
 33800  008734  1802               	xorwf	(??_I2C2_DO_RX+1)^0,w,c
 33801  008736  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 33802  008738                     i2l1080:
 33803                           
 33804                           ; BSR set to: 2
 33805                           ;mcc_generated_files/i2c2_master.c: 449:     if(--I2C2_Status.data_length)
 33806  008738  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 33807  00873A  A0D8               	btfss	status,0,c
 33808  00873C  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 33809  00873E  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 33810  008740  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 33811  008742  B4D8               	btfsc	status,2,c
 33812  008744  D00D               	goto	i2l17816
 33813                           
 33814                           ; BSR set to: 2
 33815                           ;mcc_generated_files/i2c2_master.c: 450:     {;mcc_generated_files/i2c2_master.c: 451:  
      +                                 *I2C2_Status.data_ptr++ = I2C2_MasterGetRxData();
 33816  008746  EC55  F052         	call	_I2C2_MasterGetRxData	;wreg free
 33817  00874A  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 33818  008750  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 33819  008756  6EDF               	movwf	indf2,c
 33820                           
 33821                           ; BSR set to: 61
 33822  008758  0102               	movlb	2	; () banked
 33823  00875A  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 33824  00875C  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 33825  00875E  D7D8               	goto	i2u1816_40
 33826  008760                     i2l17816:
 33827                           
 33828                           ; BSR set to: 2
 33829                           ;mcc_generated_files/i2c2_master.c: 455:     {;mcc_generated_files/i2c2_master.c: 456:  
      +                                 i2c2_fsm_states_t retFsmState = I2C2_DO_RX_EMPTY();
 33830  008760  ECC1  F043         	call	i2_I2C2_DO_RX_EMPTY	;wreg free
 33831  008764  6E03               	movwf	I2C2_DO_RX@retFsmState^0,c
 33832                           
 33833                           ;mcc_generated_files/i2c2_master.c: 457:         *I2C2_Status.data_ptr++ = I2C2_MasterGe
      +                          tRxData();
 33834  008766  EC55  F052         	call	_I2C2_MasterGetRxData	;wreg free
 33835  00876A  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 33836  008770  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 33837  008776  6EDF               	movwf	indf2,c
 33838                           
 33839                           ; BSR set to: 61
 33840  008778  0102               	movlb	2	; () banked
 33841  00877A  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 33842  00877C  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 33843                           
 33844                           ; BSR set to: 2
 33845                           ;mcc_generated_files/i2c2_master.c: 458:         return retFsmState;
 33846  00877E  5003               	movf	I2C2_DO_RX@retFsmState^0,w,c
 33847  008780  0012               	return		;funcret
 33848  008782                     __end_of_I2C2_DO_RX:
 33849                           	opt callstack 0
 33850                           
 33851 ;; *************** function _I2C2_DO_TX *****************
 33852 ;; Defined at:
 33853 ;;		line 405 in file "mcc_generated_files/i2c2_master.c"
 33854 ;; Parameters:    Size  Location     Type
 33855 ;;		None
 33856 ;; Auto vars:     Size  Location     Type
 33857 ;;  retFsmState     1    9[COMRAM] enum E16447
 33858 ;;  dataTx          1    8[COMRAM] unsigned char 
 33859 ;; Return value:  Size  Location     Type
 33860 ;;                  1    wreg      enum E16447
 33861 ;; Registers used:
 33862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33863 ;; Tracked objects:
 33864 ;;		On entry : 3F/2
 33865 ;;		On exit  : 0/0
 33866 ;;		Unchanged: 0/0
 33867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33872 ;;Total ram usage:        6 bytes
 33873 ;; Hardware stack levels used:    1
 33874 ;; Hardware stack levels required when called:   13
 33875 ;; This function calls:
 33876 ;;		Absolute function
 33877 ;;		_I2C2_DO_SEND_RESTART_READ
 33878 ;;		_I2C2_DO_SEND_RESTART_WRITE
 33879 ;;		_I2C2_DO_TX_EMPTY
 33880 ;;		_I2C2_MasterIsNack
 33881 ;;		_I2C2_MasterIsTxBufEmpty
 33882 ;;		i2_I2C2_CallbackReturnReset
 33883 ;;		i2_I2C2_CallbackReturnStop
 33884 ;;		i2_I2C2_MasterSendTxData
 33885 ;;		i2_I2C2_NackCb
 33886 ;;		i2_rd1RegCompleteHandler
 33887 ;;		i2_rd2RegCompleteHandler
 33888 ;;		i2_rdBlkRegCompleteHandler
 33889 ;;		i2_wr1RegCompleteHandler
 33890 ;;		i2_wr2RegCompleteHandler
 33891 ;; This function is called by:
 33892 ;;		_I2C2_MasterFsm
 33893 ;; This function uses a non-reentrant model
 33894 ;;
 33895                           
 33896                           	psect	text184
 33897  0079DE                     __ptext184:
 33898                           	opt callstack 0
 33899  0079DE                     _I2C2_DO_TX:
 33900                           	opt callstack 0
 33901                           
 33902                           ; BSR set to: 2
 33903                           ;mcc_generated_files/i2c2_master.c: 407:     if(I2C2_MasterIsNack())
 33904                           
 33905                           ;incstack = 0
 33906 ;; hardware stack exceeded
 33907  0079DE  ECB1  F051         	call	_I2C2_MasterIsNack	;wreg free
 33908  0079E2  0900               	iorlw	0
 33909  0079E4  A4D8               	btfss	status,2,c
 33910  0079E6  D009               	goto	i2l17758
 33911  0079E8  D02C               	goto	i2l17760
 33912  0079EA                     i2l17744:
 33913                           
 33914                           ;mcc_generated_files/i2c2_master.c: 412:                 return I2C2_DO_SEND_RESTART_REA
      +                          D();
 33915  0079EA  ECAA  F051         	call	_I2C2_DO_SEND_RESTART_READ	;wreg free
 33916  0079EE  0012               	return	
 33917  0079F0                     i2l17748:
 33918                           
 33919                           ;mcc_generated_files/i2c2_master.c: 414:                   return I2C2_DO_SEND_RESTART_W
      +                          RITE();
 33920  0079F0  EC6E  F052         	call	_I2C2_DO_SEND_RESTART_WRITE	;wreg free
 33921  0079F4  0012               	return	
 33922  0079F6                     i2l17752:
 33923                           
 33924                           ;mcc_generated_files/i2c2_master.c: 418:                 return I2C2_IDLE;
 33925  0079F6  0E00               	movlw	0
 33926  0079F8  0012               	return	
 33927  0079FA                     i2l17758:
 33928                           
 33929                           ; BSR set to: 61
 33930  0079FA  0060  F848  F005   	movff	_I2C2_Status+18,i2rd1RegCompleteHandler@ptr
 33931  007A00  0060  F84C  F006   	movff	_I2C2_Status+19,i2rd1RegCompleteHandler@ptr+1
 33932  007A06  D801               	call	i2u1812_48
 33933  007A08  D00A               	goto	i2u1812_49
 33934  007A0A                     i2u1812_48:
 33935  007A0A  0005               	push	
 33936  007A0C  6EFA               	movwf	pclath,c
 33937  007A0E  0102               	movlb	2	; () banked
 33938  007A10  5106               	movf	(_I2C2_Status+6)& (0+255),w,b
 33939  007A12  6EFD               	movwf	tosl,c
 33940  007A14  5107               	movf	(_I2C2_Status+7)& (0+255),w,b
 33941  007A16  6EFE               	movwf	tosh,c
 33942  007A18  6AFF               	clrf	tosu,c
 33943  007A1A  50FA               	movf	pclath,w,c
 33944  007A1C  0012               	return		;indir
 33945  007A1E                     i2u1812_49:
 33946  007A1E  6E07               	movwf	??_I2C2_DO_TX^0,c
 33947  007A20  6A08               	clrf	(??_I2C2_DO_TX+1)^0,c
 33948                           
 33949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33950                           ; Switch size 1, requested type "simple"
 33951                           ; Number of cases is 1, Range of values is 0 to 0
 33952                           ; switch strategies available:
 33953                           ; Name         Instructions Cycles
 33954                           ; simple_byte            4     3 (average)
 33955                           ;	Chosen strategy is simple_byte
 33956  007A22  5008               	movf	(??_I2C2_DO_TX+1)^0,w,c
 33957  007A24  0A00               	xorlw	0	; case 0
 33958  007A26  A4D8               	btfss	status,2,c
 33959  007A28  D7E6               	goto	i2l17752
 33960                           
 33961                           ; Switch size 1, requested type "simple"
 33962                           ; Number of cases is 4, Range of values is 1 to 4
 33963                           ; switch strategies available:
 33964                           ; Name         Instructions Cycles
 33965                           ; simple_byte           13     7 (average)
 33966                           ;	Chosen strategy is simple_byte
 33967  007A2A  5007               	movf	??_I2C2_DO_TX^0,w,c
 33968  007A2C  0A01               	xorlw	1	; case 1
 33969  007A2E  B4D8               	btfsc	status,2,c
 33970  007A30  D7E2               	goto	i2l17752
 33971  007A32  0A03               	xorlw	3	; case 2
 33972  007A34  B4D8               	btfsc	status,2,c
 33973  007A36  D7D9               	goto	i2l17744
 33974  007A38  0A01               	xorlw	1	; case 3
 33975  007A3A  B4D8               	btfsc	status,2,c
 33976  007A3C  D7D9               	goto	i2l17748
 33977  007A3E  0A07               	xorlw	7	; case 4
 33978  007A40  D7DA               	goto	i2l17752
 33979  007A42                     i2l17760:
 33980                           
 33981                           ; BSR set to: 61
 33982  007A42  ECEA  F051         	call	_I2C2_MasterIsTxBufEmpty	;wreg free
 33983  007A46  0900               	iorlw	0
 33984  007A48  B4D8               	btfsc	status,2,c
 33985  007A4A  D036               	goto	i2l17786
 33986                           
 33987                           ; BSR set to: 61
 33988                           ;mcc_generated_files/i2c2_master.c: 422:     {;mcc_generated_files/i2c2_master.c: 423:  
      +                                 if(I2C2_Status.addressNackCheck)
 33989  007A4C  0102               	movlb	2	; () banked
 33990  007A4E  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 33991  007A50  0B03               	andlw	3
 33992  007A52  0900               	iorlw	0
 33993  007A54  B4D8               	btfsc	status,2,c
 33994  007A56  D00C               	goto	i2l17766
 33995                           
 33996                           ; BSR set to: 2
 33997                           ;mcc_generated_files/i2c2_master.c: 424:         {;mcc_generated_files/i2c2_master.c: 42
      +                          5:             I2C2_Status.addressNackCheck--;
 33998  007A58  0E01               	movlw	1
 33999  007A5A  6E07               	movwf	??_I2C2_DO_TX^0,c
 34000  007A5C  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34001  007A5E  0B03               	andlw	3
 34002  007A60  6E08               	movwf	(??_I2C2_DO_TX+1)^0,c
 34003  007A62  5007               	movf	??_I2C2_DO_TX^0,w,c
 34004  007A64  5E08               	subwf	(??_I2C2_DO_TX+1)^0,f,c
 34005  007A66  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34006  007A68  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34007  007A6A  0BFC               	andlw	-4
 34008  007A6C  1808               	xorwf	(??_I2C2_DO_TX+1)^0,w,c
 34009  007A6E  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34010  007A70                     i2l17766:
 34011                           
 34012                           ; BSR set to: 2
 34013                           ;mcc_generated_files/i2c2_master.c: 427:         uint8_t dataTx = *I2C2_Status.data_ptr+
      +                          +;
 34014  007A70  0060  F877  FFD9   	movff	_I2C2_Status+29,fsr2l
 34015  007A76  0060  F87B  FFDA   	movff	_I2C2_Status+30,fsr2h
 34016  007A7C  50DF               	movf	indf2,w,c
 34017  007A7E  6E09               	movwf	I2C2_DO_TX@dataTx^0,c
 34018                           
 34019                           ; BSR set to: 2
 34020  007A80  4B1D               	infsnz	(_I2C2_Status+29)& (0+255),f,b
 34021  007A82  2B1E               	incf	(_I2C2_Status+30)& (0+255),f,b
 34022                           
 34023                           ; BSR set to: 2
 34024                           ;mcc_generated_files/i2c2_master.c: 428:         i2c2_fsm_states_t retFsmState = (--I2C2
      +                          _Status.data_length)?I2C2_TX:I2C2_DO_TX_EMPTY();
 34025  007A84  071F               	decf	(_I2C2_Status+31)& (0+255),f,b
 34026  007A86  A0D8               	btfss	status,0,c
 34027  007A88  0720               	decf	(_I2C2_Status+32)& (0+255),f,b
 34028  007A8A  511F               	movf	(_I2C2_Status+31)& (0+255),w,b
 34029  007A8C  1120               	iorwf	(_I2C2_Status+32)& (0+255),w,b
 34030  007A8E  A4D8               	btfss	status,2,c
 34031  007A90  D007               	goto	i2l17774
 34032                           
 34033                           ; BSR set to: 2
 34034  007A92  ECB3  F045         	call	_I2C2_DO_TX_EMPTY	;wreg free
 34035  007A96  6E07               	movwf	??_I2C2_DO_TX^0,c
 34036  007A98  5007               	movf	??_I2C2_DO_TX^0,w,c
 34037  007A9A  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34038  007A9C  6A0C               	clrf	(_I2C2_DO_TX$2655+1)^0,c
 34039  007A9E  D004               	goto	i2l17776
 34040  007AA0                     i2l17774:
 34041                           
 34042                           ; BSR set to: 2
 34043  007AA0  0E00               	movlw	0
 34044  007AA2  6E0C               	movwf	(_I2C2_DO_TX$2655+1)^0,c
 34045  007AA4  0E03               	movlw	3
 34046  007AA6  6E0B               	movwf	_I2C2_DO_TX$2655^0,c
 34047  007AA8                     i2l17776:
 34048  007AA8  0060  F02C  F00A   	movff	_I2C2_DO_TX$2655,I2C2_DO_TX@retFsmState
 34049                           
 34050                           ;mcc_generated_files/i2c2_master.c: 429:         I2C2_MasterSendTxData(dataTx);
 34051  007AAE  5009               	movf	I2C2_DO_TX@dataTx^0,w,c
 34052  007AB0  EC16  F052         	call	i2_I2C2_MasterSendTxData
 34053                           
 34054                           ;mcc_generated_files/i2c2_master.c: 430:         return retFsmState;
 34055  007AB4  500A               	movf	I2C2_DO_TX@retFsmState^0,w,c
 34056  007AB6  0012               	return	
 34057  007AB8                     i2l17786:
 34058                           
 34059                           ; BSR set to: 61
 34060                           ;mcc_generated_files/i2c2_master.c: 433:     {;mcc_generated_files/i2c2_master.c: 434:  
      +                                 return I2C2_TX;
 34061  007AB8  0E03               	movlw	3
 34062  007ABA  0012               	return		;funcret
 34063  007ABC                     __end_of_I2C2_DO_TX:
 34064                           	opt callstack 0
 34065                           
 34066 ;; *************** function _I2C2_DO_IDLE *****************
 34067 ;; Defined at:
 34068 ;;		line 380 in file "mcc_generated_files/i2c2_master.c"
 34069 ;; Parameters:    Size  Location     Type
 34070 ;;		None
 34071 ;; Auto vars:     Size  Location     Type
 34072 ;;		None
 34073 ;; Return value:  Size  Location     Type
 34074 ;;                  1    wreg      enum E16447
 34075 ;; Registers used:
 34076 ;;		wreg, status,2
 34077 ;; Tracked objects:
 34078 ;;		On entry : 0/2
 34079 ;;		On exit  : 3F/2
 34080 ;;		Unchanged: 0/0
 34081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34086 ;;Total ram usage:        0 bytes
 34087 ;; Hardware stack levels used:    1
 34088 ;; This function calls:
 34089 ;;		Nothing
 34090 ;; This function is called by:
 34091 ;;		_I2C2_DO_RX_NACK_STOP
 34092 ;;		_I2C2_MasterFsm
 34093 ;; This function uses a non-reentrant model
 34094 ;;
 34095                           
 34096                           	psect	text185
 34097  00A3C8                     __ptext185:
 34098                           	opt callstack 0
 34099  00A3C8                     _I2C2_DO_IDLE:
 34100                           	opt callstack 9
 34101                           
 34102                           ;mcc_generated_files/i2c2_master.c: 382:     I2C2_Status.busy = 0;
 34103                           
 34104                           ;incstack = 0
 34105  00A3C8  0102               	movlb	2	; () banked
 34106  00A3CA  9523               	bcf	(_I2C2_Status+35)& (0+255),2,b
 34107                           
 34108                           ; BSR set to: 2
 34109                           ;mcc_generated_files/i2c2_master.c: 383:     I2C2_Status.error = I2C2_NOERR;
 34110  00A3CC  0E00               	movlw	0
 34111  00A3CE  6F22               	movwf	(_I2C2_Status+34)& (0+255),b
 34112                           
 34113                           ; BSR set to: 2
 34114                           ;mcc_generated_files/i2c2_master.c: 384:     return I2C2_RESET;
 34115  00A3D0  0E0F               	movlw	15
 34116                           
 34117                           ; BSR set to: 2
 34118  00A3D2  0012               	return		;funcret
 34119  00A3D4                     __end_of_I2C2_DO_IDLE:
 34120                           	opt callstack 0
 34121                           
 34122 ;; *************** function i2_I2C2_DO_SEND_ADR_WRITE *****************
 34123 ;; Defined at:
 34124 ;;		line 398 in file "mcc_generated_files/i2c2_master.c"
 34125 ;; Parameters:    Size  Location     Type
 34126 ;;		None
 34127 ;; Auto vars:     Size  Location     Type
 34128 ;;		None
 34129 ;; Return value:  Size  Location     Type
 34130 ;;                  1    wreg      enum E16447
 34131 ;; Registers used:
 34132 ;;		wreg, status,2, status,0, cstack
 34133 ;; Tracked objects:
 34134 ;;		On entry : 0/0
 34135 ;;		On exit  : 0/0
 34136 ;;		Unchanged: 0/0
 34137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34142 ;;Total ram usage:        0 bytes
 34143 ;; Hardware stack levels used:    1
 34144 ;; Hardware stack levels required when called:    1
 34145 ;; This function calls:
 34146 ;;		i2_I2C2_MasterSendTxData
 34147 ;; This function is called by:
 34148 ;; This function uses a non-reentrant model
 34149 ;;
 34150                           
 34151                           	psect	text186
 34152  00A150                     __ptext186:
 34153                           	opt callstack 0
 34154  00A150                     i2_I2C2_DO_SEND_ADR_WRITE:
 34155                           	opt callstack 9
 34156                           
 34157                           ;mcc_generated_files/i2c2_master.c: 400:     I2C2_Status.addressNackCheck = 2;
 34158                           
 34159                           ; BSR set to: 2
 34160                           ;incstack = 0
 34161  00A150  0102               	movlb	2	; () banked
 34162  00A152  5123               	movf	(_I2C2_Status+35)& (0+255),w,b
 34163  00A154  0BFC               	andlw	-4
 34164  00A156  0902               	iorlw	2
 34165  00A158  6F23               	movwf	(_I2C2_Status+35)& (0+255),b
 34166                           
 34167                           ; BSR set to: 2
 34168                           ;mcc_generated_files/i2c2_master.c: 401:     I2C2_MasterSendTxData(I2C2_Status.address <
      +                          < 1);
 34169  00A15A  511C               	movf	(_I2C2_Status+28)& (0+255),w,b
 34170  00A15C  251C               	addwf	(_I2C2_Status+28)& (0+255),w,b
 34171  00A15E  EC16  F052         	call	i2_I2C2_MasterSendTxData
 34172                           
 34173                           ;mcc_generated_files/i2c2_master.c: 402:     return I2C2_TX;
 34174  00A162  0E03               	movlw	3
 34175  00A164  0012               	return		;funcret
 34176  00A166                     __end_ofi2_I2C2_DO_SEND_ADR_WRITE:
 34177                           	opt callstack 0
 34178                           
 34179 ;; *************** function _I2C2_MasterIsTxBufEmpty *****************
 34180 ;; Defined at:
 34181 ;;		line 741 in file "mcc_generated_files/i2c2_master.c"
 34182 ;; Parameters:    Size  Location     Type
 34183 ;;		None
 34184 ;; Auto vars:     Size  Location     Type
 34185 ;;		None
 34186 ;; Return value:  Size  Location     Type
 34187 ;;                  1    wreg      _Bool 
 34188 ;; Registers used:
 34189 ;;		wreg
 34190 ;; Tracked objects:
 34191 ;;		On entry : 3F/3D
 34192 ;;		On exit  : 3F/3D
 34193 ;;		Unchanged: 0/0
 34194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34199 ;;Total ram usage:        0 bytes
 34200 ;; Hardware stack levels used:    1
 34201 ;; This function calls:
 34202 ;;		Nothing
 34203 ;; This function is called by:
 34204 ;;		_I2C2_DO_TX
 34205 ;; This function uses a non-reentrant model
 34206 ;;
 34207                           
 34208                           	psect	text187
 34209  00A3D4                     __ptext187:
 34210                           	opt callstack 0
 34211  00A3D4                     _I2C2_MasterIsTxBufEmpty:
 34212                           	opt callstack 9
 34213                           
 34214                           ; BSR set to: 61
 34215                           ;mcc_generated_files/i2c2_master.c: 743:     return I2C2STAT1bits.TXBE;
 34216                           
 34217                           ;incstack = 0
 34218  00A3D4  AB62               	btfss	98,5,b	;volatile
 34219  00A3D6  D002               	goto	i2u1008_40
 34220  00A3D8  0E01               	movlw	1
 34221  00A3DA  0012               	return	
 34222  00A3DC                     i2u1008_40:
 34223  00A3DC  0E00               	movlw	0
 34224                           
 34225                           ; BSR set to: 61
 34226  00A3DE  0012               	return		;funcret
 34227  00A3E0                     __end_of_I2C2_MasterIsTxBufEmpty:
 34228                           	opt callstack 0
 34229                           
 34230 ;; *************** function _I2C2_MasterIsNack *****************
 34231 ;; Defined at:
 34232 ;;		line 714 in file "mcc_generated_files/i2c2_master.c"
 34233 ;; Parameters:    Size  Location     Type
 34234 ;;		None
 34235 ;; Auto vars:     Size  Location     Type
 34236 ;;		None
 34237 ;; Return value:  Size  Location     Type
 34238 ;;                  1    wreg      _Bool 
 34239 ;; Registers used:
 34240 ;;		wreg
 34241 ;; Tracked objects:
 34242 ;;		On entry : 3F/2
 34243 ;;		On exit  : 3F/3D
 34244 ;;		Unchanged: 0/0
 34245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34250 ;;Total ram usage:        0 bytes
 34251 ;; Hardware stack levels used:    1
 34252 ;; This function calls:
 34253 ;;		Nothing
 34254 ;; This function is called by:
 34255 ;;		_I2C2_MasterFsm
 34256 ;;		_I2C2_DO_TX
 34257 ;; This function uses a non-reentrant model
 34258 ;;
 34259                           
 34260                           	psect	text188
 34261  00A362                     __ptext188:
 34262                           	opt callstack 0
 34263  00A362                     _I2C2_MasterIsNack:
 34264                           	opt callstack 10
 34265                           
 34266                           ; BSR set to: 2
 34267                           ;mcc_generated_files/i2c2_master.c: 716:     return I2C2CON1bits.ACKSTAT;
 34268                           
 34269                           ; BSR set to: 61
 34270                           ;incstack = 0
 34271  00A362  013D               	movlb	61	; () banked
 34272  00A364  AB5E               	btfss	94,5,b	;volatile
 34273  00A366  D002               	goto	i2u1004_40
 34274  00A368  0E01               	movlw	1
 34275  00A36A  0012               	return	
 34276  00A36C                     i2u1004_40:
 34277  00A36C  0E00               	movlw	0
 34278                           
 34279                           ; BSR set to: 61
 34280  00A36E  0012               	return		;funcret
 34281  00A370                     __end_of_I2C2_MasterIsNack:
 34282                           	opt callstack 0
 34283                           
 34284 ;; *************** function _I2C2_MasterGetCounter *****************
 34285 ;; Defined at:
 34286 ;;		line 676 in file "mcc_generated_files/i2c2_master.c"
 34287 ;; Parameters:    Size  Location     Type
 34288 ;;		None
 34289 ;; Auto vars:     Size  Location     Type
 34290 ;;		None
 34291 ;; Return value:  Size  Location     Type
 34292 ;;                  1    wreg      unsigned char 
 34293 ;; Registers used:
 34294 ;;		wreg, status,2
 34295 ;; Tracked objects:
 34296 ;;		On entry : 3F/3D
 34297 ;;		On exit  : 3F/3D
 34298 ;;		Unchanged: 0/0
 34299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34304 ;;Total ram usage:        0 bytes
 34305 ;; Hardware stack levels used:    1
 34306 ;; This function calls:
 34307 ;;		Nothing
 34308 ;; This function is called by:
 34309 ;;		_I2C2_DO_SEND_STOP
 34310 ;; This function uses a non-reentrant model
 34311 ;;
 34312                           
 34313                           	psect	text189
 34314  00A4E0                     __ptext189:
 34315                           	opt callstack 0
 34316  00A4E0                     _I2C2_MasterGetCounter:
 34317                           	opt callstack 9
 34318                           
 34319                           ; BSR set to: 61
 34320                           ;mcc_generated_files/i2c2_master.c: 678:     return I2C2CNT;
 34321                           
 34322                           ; BSR set to: 61
 34323                           ;incstack = 0
 34324  00A4E0  5156               	movf	86,w,b	;volatile
 34325                           
 34326                           ; BSR set to: 61
 34327  00A4E2  0012               	return		;funcret
 34328  00A4E4                     __end_of_I2C2_MasterGetCounter:
 34329                           	opt callstack 0
 34330                           
 34331 ;; *************** function _I2C2_MasterStop *****************
 34332 ;; Defined at:
 34333 ;;		line 708 in file "mcc_generated_files/i2c2_master.c"
 34334 ;; Parameters:    Size  Location     Type
 34335 ;;		None
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;		None
 34338 ;; Return value:  Size  Location     Type
 34339 ;;                  1    wreg      void 
 34340 ;; Registers used:
 34341 ;;		None
 34342 ;; Tracked objects:
 34343 ;;		On entry : 0/2
 34344 ;;		On exit  : 3F/3D
 34345 ;;		Unchanged: 0/0
 34346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34351 ;;Total ram usage:        0 bytes
 34352 ;; Hardware stack levels used:    1
 34353 ;; This function calls:
 34354 ;;		Nothing
 34355 ;; This function is called by:
 34356 ;;		_I2C2_DO_SEND_STOP
 34357 ;;		_I2C2_DO_RX_NACK_STOP
 34358 ;; This function uses a non-reentrant model
 34359 ;;
 34360                           
 34361                           	psect	text190
 34362  00A498                     __ptext190:
 34363                           	opt callstack 0
 34364  00A498                     _I2C2_MasterStop:
 34365                           	opt callstack 9
 34366                           
 34367                           ;mcc_generated_files/i2c2_master.c: 711:     I2C2CON0bits.S = 0;
 34368                           
 34369                           ; BSR set to: 61
 34370                           ;incstack = 0
 34371  00A498  013D               	movlb	61	; () banked
 34372  00A49A  9B5D               	bcf	93,5,b	;volatile
 34373                           
 34374                           ; BSR set to: 61
 34375  00A49C  0012               	return		;funcret
 34376  00A49E                     __end_of_I2C2_MasterStop:
 34377                           	opt callstack 0
 34378                           
 34379 ;; *************** function _I2C2_MasterSendNack *****************
 34380 ;; Defined at:
 34381 ;;		line 724 in file "mcc_generated_files/i2c2_master.c"
 34382 ;; Parameters:    Size  Location     Type
 34383 ;;		None
 34384 ;; Auto vars:     Size  Location     Type
 34385 ;;		None
 34386 ;; Return value:  Size  Location     Type
 34387 ;;                  1    wreg      void 
 34388 ;; Registers used:
 34389 ;;		None
 34390 ;; Tracked objects:
 34391 ;;		On entry : 3F/2
 34392 ;;		On exit  : 3F/3D
 34393 ;;		Unchanged: 0/0
 34394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34399 ;;Total ram usage:        0 bytes
 34400 ;; Hardware stack levels used:    1
 34401 ;; This function calls:
 34402 ;;		Nothing
 34403 ;; This function is called by:
 34404 ;;		_I2C2_DO_RX_NACK_STOP
 34405 ;;		_I2C2_DO_RX_NACK_RESTART
 34406 ;; This function uses a non-reentrant model
 34407 ;;
 34408                           
 34409                           	psect	text191
 34410  00A49E                     __ptext191:
 34411                           	opt callstack 0
 34412  00A49E                     _I2C2_MasterSendNack:
 34413                           	opt callstack 9
 34414                           
 34415                           ; BSR set to: 2
 34416                           ;mcc_generated_files/i2c2_master.c: 726:     I2C2CON1bits.ACKDT = 1;
 34417                           
 34418                           ; BSR set to: 61
 34419                           ;incstack = 0
 34420  00A49E  013D               	movlb	61	; () banked
 34421  00A4A0  8D5E               	bsf	94,6,b	;volatile
 34422                           
 34423                           ; BSR set to: 61
 34424  00A4A2  0012               	return		;funcret
 34425  00A4A4                     __end_of_I2C2_MasterSendNack:
 34426                           	opt callstack 0
 34427                           
 34428 ;; *************** function _I2C2_MasterSendAck *****************
 34429 ;; Defined at:
 34430 ;;		line 719 in file "mcc_generated_files/i2c2_master.c"
 34431 ;; Parameters:    Size  Location     Type
 34432 ;;		None
 34433 ;; Auto vars:     Size  Location     Type
 34434 ;;		None
 34435 ;; Return value:  Size  Location     Type
 34436 ;;                  1    wreg      void 
 34437 ;; Registers used:
 34438 ;;		None
 34439 ;; Tracked objects:
 34440 ;;		On entry : 3F/2
 34441 ;;		On exit  : 3F/3D
 34442 ;;		Unchanged: 0/0
 34443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34448 ;;Total ram usage:        0 bytes
 34449 ;; Hardware stack levels used:    1
 34450 ;; This function calls:
 34451 ;;		Nothing
 34452 ;; This function is called by:
 34453 ;;		_I2C2_DO_RX_ACK
 34454 ;;		_I2C2_DO_TX_ACK
 34455 ;; This function uses a non-reentrant model
 34456 ;;
 34457                           
 34458                           	psect	text192
 34459  00A4A4                     __ptext192:
 34460                           	opt callstack 0
 34461  00A4A4                     _I2C2_MasterSendAck:
 34462                           	opt callstack 9
 34463                           
 34464                           ; BSR set to: 2
 34465                           ;mcc_generated_files/i2c2_master.c: 721:     I2C2CON1bits.ACKDT = 0;
 34466                           
 34467                           ; BSR set to: 61
 34468                           ;incstack = 0
 34469  00A4A4  013D               	movlb	61	; () banked
 34470  00A4A6  9D5E               	bcf	94,6,b	;volatile
 34471                           
 34472                           ; BSR set to: 61
 34473  00A4A8  0012               	return		;funcret
 34474  00A4AA                     __end_of_I2C2_MasterSendAck:
 34475                           	opt callstack 0
 34476                           
 34477 ;; *************** function _I2C2_MasterIsRxBufFull *****************
 34478 ;; Defined at:
 34479 ;;		line 736 in file "mcc_generated_files/i2c2_master.c"
 34480 ;; Parameters:    Size  Location     Type
 34481 ;;		None
 34482 ;; Auto vars:     Size  Location     Type
 34483 ;;		None
 34484 ;; Return value:  Size  Location     Type
 34485 ;;                  1    wreg      _Bool 
 34486 ;; Registers used:
 34487 ;;		wreg
 34488 ;; Tracked objects:
 34489 ;;		On entry : 3F/2
 34490 ;;		On exit  : 3F/3D
 34491 ;;		Unchanged: 0/0
 34492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34497 ;;Total ram usage:        0 bytes
 34498 ;; Hardware stack levels used:    1
 34499 ;; This function calls:
 34500 ;;		Nothing
 34501 ;; This function is called by:
 34502 ;;		_I2C2_DO_RX
 34503 ;; This function uses a non-reentrant model
 34504 ;;
 34505                           
 34506                           	psect	text193
 34507  00A370                     __ptext193:
 34508                           	opt callstack 0
 34509  00A370                     _I2C2_MasterIsRxBufFull:
 34510                           	opt callstack 9
 34511                           
 34512                           ; BSR set to: 2
 34513                           ;mcc_generated_files/i2c2_master.c: 738:     return I2C2STAT1bits.RXBF;
 34514                           
 34515                           ; BSR set to: 61
 34516                           ;incstack = 0
 34517  00A370  013D               	movlb	61	; () banked
 34518  00A372  A162               	btfss	98,0,b	;volatile
 34519  00A374  D002               	goto	i2u1010_40
 34520  00A376  0E01               	movlw	1
 34521  00A378  0012               	return	
 34522  00A37A                     i2u1010_40:
 34523  00A37A  0E00               	movlw	0
 34524                           
 34525                           ; BSR set to: 61
 34526  00A37C  0012               	return		;funcret
 34527  00A37E                     __end_of_I2C2_MasterIsRxBufFull:
 34528                           	opt callstack 0
 34529                           
 34530 ;; *************** function _I2C2_MasterGetRxData *****************
 34531 ;; Defined at:
 34532 ;;		line 666 in file "mcc_generated_files/i2c2_master.c"
 34533 ;; Parameters:    Size  Location     Type
 34534 ;;		None
 34535 ;; Auto vars:     Size  Location     Type
 34536 ;;		None
 34537 ;; Return value:  Size  Location     Type
 34538 ;;                  1    wreg      unsigned char 
 34539 ;; Registers used:
 34540 ;;		wreg, status,2
 34541 ;; Tracked objects:
 34542 ;;		On entry : 0/2
 34543 ;;		On exit  : 3F/3D
 34544 ;;		Unchanged: 0/0
 34545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34550 ;;Total ram usage:        0 bytes
 34551 ;; Hardware stack levels used:    1
 34552 ;; This function calls:
 34553 ;;		Nothing
 34554 ;; This function is called by:
 34555 ;;		_I2C2_DO_RX
 34556 ;; This function uses a non-reentrant model
 34557 ;;
 34558                           
 34559                           	psect	text194
 34560  00A4AA                     __ptext194:
 34561                           	opt callstack 0
 34562  00A4AA                     _I2C2_MasterGetRxData:
 34563                           	opt callstack 9
 34564                           
 34565                           ;mcc_generated_files/i2c2_master.c: 668:     return I2C2RXB;
 34566                           
 34567                           ; BSR set to: 61
 34568                           ;incstack = 0
 34569  00A4AA  013D               	movlb	61	; () banked
 34570  00A4AC  5154               	movf	84,w,b	;volatile
 34571                           
 34572                           ; BSR set to: 61
 34573  00A4AE  0012               	return		;funcret
 34574  00A4B0                     __end_of_I2C2_MasterGetRxData:
 34575                           	opt callstack 0
 34576                           
 34577 ;; *************** function i2_I2C2_MasterClearIrq *****************
 34578 ;; Defined at:
 34579 ;;		line 809 in file "mcc_generated_files/i2c2_master.c"
 34580 ;; Parameters:    Size  Location     Type
 34581 ;;		None
 34582 ;; Auto vars:     Size  Location     Type
 34583 ;;		None
 34584 ;; Return value:  Size  Location     Type
 34585 ;;                  1    wreg      void 
 34586 ;; Registers used:
 34587 ;;		wreg, status,2
 34588 ;; Tracked objects:
 34589 ;;		On entry : 3F/2
 34590 ;;		On exit  : 3F/3D
 34591 ;;		Unchanged: 0/0
 34592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34597 ;;Total ram usage:        0 bytes
 34598 ;; Hardware stack levels used:    1
 34599 ;; This function calls:
 34600 ;;		Nothing
 34601 ;; This function is called by:
 34602 ;;		_I2C2_DO_BUS_COLLISION
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text195
 34607  00A472                     __ptext195:
 34608                           	opt callstack 0
 34609  00A472                     i2_I2C2_MasterClearIrq:
 34610                           	opt callstack 9
 34611                           
 34612                           ; BSR set to: 2
 34613                           ;mcc_generated_files/i2c2_master.c: 811:     I2C2PIR = 0x00;
 34614                           
 34615                           ; BSR set to: 61
 34616                           ;incstack = 0
 34617  00A472  0E00               	movlw	0
 34618  00A474  013D               	movlb	61	; () banked
 34619  00A476  6F63               	movwf	99,b	;volatile
 34620                           
 34621                           ; BSR set to: 61
 34622  00A478  0012               	return		;funcret
 34623  00A47A                     __end_ofi2_I2C2_MasterClearIrq:
 34624                           	opt callstack 0
 34625                           
 34626 ;; *************** function i2_I2C2_MasterSendTxData *****************
 34627 ;; Defined at:
 34628 ;;		line 671 in file "mcc_generated_files/i2c2_master.c"
 34629 ;; Parameters:    Size  Location     Type
 34630 ;;  data            1    wreg     unsigned char 
 34631 ;; Auto vars:     Size  Location     Type
 34632 ;;  data            1    0[COMRAM] unsigned char 
 34633 ;; Return value:  Size  Location     Type
 34634 ;;                  1    wreg      void 
 34635 ;; Registers used:
 34636 ;;		wreg
 34637 ;; Tracked objects:
 34638 ;;		On entry : 0/2
 34639 ;;		On exit  : 0/0
 34640 ;;		Unchanged: 0/0
 34641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34646 ;;Total ram usage:        1 bytes
 34647 ;; Hardware stack levels used:    1
 34648 ;; This function calls:
 34649 ;;		Nothing
 34650 ;; This function is called by:
 34651 ;;		_I2C2_DO_TX
 34652 ;;		_I2C2_DO_SEND_STOP
 34653 ;;		i2_I2C2_DO_SEND_ADR_READ
 34654 ;;		i2_I2C2_DO_SEND_ADR_WRITE
 34655 ;; This function uses a non-reentrant model
 34656 ;;
 34657                           
 34658                           	psect	text196
 34659  00A42C                     __ptext196:
 34660                           	opt callstack 0
 34661  00A42C                     i2_I2C2_MasterSendTxData:
 34662                           	opt callstack 9
 34663                           
 34664                           ; BSR set to: 61
 34665                           ;incstack = 0
 34666                           ;i2I2C2_MasterSendTxData@data stored from wreg
 34667  00A42C  6E01               	movwf	i2I2C2_MasterSendTxData@data^0,c
 34668                           
 34669                           ;mcc_generated_files/i2c2_master.c: 671: static __attribute__((inline)) void I2C2_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c2_master.c: 672: {;mcc_generated_files/i
      +                          2c2_master.c: 673:     I2C2TXB = data;
 34670  00A42E  0060  F007  FD55   	movff	i2I2C2_MasterSendTxData@data,15701	;volatile
 34671  00A434  0012               	return		;funcret
 34672  00A436                     __end_ofi2_I2C2_MasterSendTxData:
 34673                           	opt callstack 0
 34674                           
 34675 ;; *************** function i2_I2C2_MasterSetCounter *****************
 34676 ;; Defined at:
 34677 ;;		line 681 in file "mcc_generated_files/i2c2_master.c"
 34678 ;; Parameters:    Size  Location     Type
 34679 ;;  counter         1    wreg     unsigned char 
 34680 ;; Auto vars:     Size  Location     Type
 34681 ;;  counter         1    0[COMRAM] unsigned char 
 34682 ;; Return value:  Size  Location     Type
 34683 ;;                  1    wreg      void 
 34684 ;; Registers used:
 34685 ;;		wreg
 34686 ;; Tracked objects:
 34687 ;;		On entry : 0/2
 34688 ;;		On exit  : 0/0
 34689 ;;		Unchanged: 0/0
 34690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34695 ;;Total ram usage:        1 bytes
 34696 ;; Hardware stack levels used:    1
 34697 ;; This function calls:
 34698 ;;		Nothing
 34699 ;; This function is called by:
 34700 ;;		_I2C2_DO_TX_EMPTY
 34701 ;;		_I2C2_DO_SEND_RESTART_READ
 34702 ;;		_I2C2_DO_SEND_STOP
 34703 ;;		i2_I2C2_DO_RX_EMPTY
 34704 ;; This function uses a non-reentrant model
 34705 ;;
 34706                           
 34707                           	psect	text197
 34708  00A436                     __ptext197:
 34709                           	opt callstack 0
 34710  00A436                     i2_I2C2_MasterSetCounter:
 34711                           	opt callstack 8
 34712                           
 34713                           ;incstack = 0
 34714                           ;i2I2C2_MasterSetCounter@counter stored from wreg
 34715  00A436  6E01               	movwf	i2I2C2_MasterSetCounter@counter^0,c
 34716                           
 34717                           ;mcc_generated_files/i2c2_master.c: 681: static __attribute__((inline)) void I2C2_Master
      +                          SetCounter(uint8_t counter);mcc_generated_files/i2c2_master.c: 682: {;mcc_generated_file
      +                          s/i2c2_master.c: 683:     I2C2CNT = counter;
 34718  00A438  0060  F007  FD56   	movff	i2I2C2_MasterSetCounter@counter,15702	;volatile
 34719  00A43E  0012               	return		;funcret
 34720  00A440                     __end_ofi2_I2C2_MasterSetCounter:
 34721                           	opt callstack 0
 34722                           
 34723 ;; *************** function i2_I2C2_MasterEnableRestart *****************
 34724 ;; Defined at:
 34725 ;;		line 696 in file "mcc_generated_files/i2c2_master.c"
 34726 ;; Parameters:    Size  Location     Type
 34727 ;;		None
 34728 ;; Auto vars:     Size  Location     Type
 34729 ;;		None
 34730 ;; Return value:  Size  Location     Type
 34731 ;;                  1    wreg      void 
 34732 ;; Registers used:
 34733 ;;		None
 34734 ;; Tracked objects:
 34735 ;;		On entry : 0/2
 34736 ;;		On exit  : 3F/3D
 34737 ;;		Unchanged: 0/0
 34738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34743 ;;Total ram usage:        0 bytes
 34744 ;; Hardware stack levels used:    1
 34745 ;; This function calls:
 34746 ;;		Nothing
 34747 ;; This function is called by:
 34748 ;;		_I2C2_DO_TX_EMPTY
 34749 ;;		i2_I2C2_DO_RX_EMPTY
 34750 ;; This function uses a non-reentrant model
 34751 ;;
 34752                           
 34753                           	psect	text198
 34754  00A4B0                     __ptext198:
 34755                           	opt callstack 0
 34756  00A4B0                     i2_I2C2_MasterEnableRestart:
 34757                           	opt callstack 8
 34758                           
 34759                           ;mcc_generated_files/i2c2_master.c: 699:     I2C2CON0bits.RSEN = 1;
 34760                           
 34761                           ;incstack = 0
 34762  00A4B0  013D               	movlb	61	; () banked
 34763  00A4B2  8D5D               	bsf	93,6,b	;volatile
 34764                           
 34765                           ; BSR set to: 61
 34766  00A4B4  0012               	return		;funcret
 34767  00A4B6                     __end_ofi2_I2C2_MasterEnableRestart:
 34768                           	opt callstack 0
 34769                           
 34770 ;; *************** function i2_I2C2_MasterDisableRestart *****************
 34771 ;; Defined at:
 34772 ;;		line 702 in file "mcc_generated_files/i2c2_master.c"
 34773 ;; Parameters:    Size  Location     Type
 34774 ;;		None
 34775 ;; Auto vars:     Size  Location     Type
 34776 ;;		None
 34777 ;; Return value:  Size  Location     Type
 34778 ;;                  1    wreg      void 
 34779 ;; Registers used:
 34780 ;;		None
 34781 ;; Tracked objects:
 34782 ;;		On entry : 0/2
 34783 ;;		On exit  : 3F/3D
 34784 ;;		Unchanged: 0/0
 34785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34790 ;;Total ram usage:        0 bytes
 34791 ;; Hardware stack levels used:    1
 34792 ;; This function calls:
 34793 ;;		Nothing
 34794 ;; This function is called by:
 34795 ;;		_I2C2_DO_TX_EMPTY
 34796 ;;		i2_I2C2_DO_RX_EMPTY
 34797 ;; This function uses a non-reentrant model
 34798 ;;
 34799                           
 34800                           	psect	text199
 34801  00A4B6                     __ptext199:
 34802                           	opt callstack 0
 34803  00A4B6                     i2_I2C2_MasterDisableRestart:
 34804                           	opt callstack 8
 34805                           
 34806                           ;mcc_generated_files/i2c2_master.c: 705:     I2C2CON0bits.RSEN = 0;
 34807                           
 34808                           ; BSR set to: 61
 34809                           ;incstack = 0
 34810  00A4B6  013D               	movlb	61	; () banked
 34811  00A4B8  9D5D               	bcf	93,6,b	;volatile
 34812                           
 34813                           ; BSR set to: 61
 34814  00A4BA  0012               	return		;funcret
 34815  00A4BC                     __end_ofi2_I2C2_MasterDisableRestart:
 34816                           	opt callstack 0
 34817                           
 34818 ;; *************** function _I2C2_MasterResetBus *****************
 34819 ;; Defined at:
 34820 ;;		line 686 in file "mcc_generated_files/i2c2_master.c"
 34821 ;; Parameters:    Size  Location     Type
 34822 ;;		None
 34823 ;; Auto vars:     Size  Location     Type
 34824 ;;		None
 34825 ;; Return value:  Size  Location     Type
 34826 ;;                  1    wreg      void 
 34827 ;; Registers used:
 34828 ;;		None
 34829 ;; Tracked objects:
 34830 ;;		On entry : 0/2
 34831 ;;		On exit  : 3F/3D
 34832 ;;		Unchanged: 0/0
 34833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34838 ;;Total ram usage:        0 bytes
 34839 ;; Hardware stack levels used:    1
 34840 ;; This function calls:
 34841 ;;		Nothing
 34842 ;; This function is called by:
 34843 ;;		_I2C2_DO_RESET
 34844 ;;		_I2C2_DO_BUS_ERROR
 34845 ;; This function uses a non-reentrant model
 34846 ;;
 34847                           
 34848                           	psect	text200
 34849  00A440                     __ptext200:
 34850                           	opt callstack 0
 34851  00A440                     _I2C2_MasterResetBus:
 34852                           	opt callstack 9
 34853                           
 34854                           ;mcc_generated_files/i2c2_master.c: 689:     I2C2CON0bits.EN = 0;
 34855                           
 34856                           ; BSR set to: 61
 34857                           ;incstack = 0
 34858  00A440  013D               	movlb	61	; () banked
 34859  00A442  9F5D               	bcf	93,7,b	;volatile
 34860                           
 34861                           ;mcc_generated_files/i2c2_master.c: 691:     I2C2STAT1bits.CLRBF = 1;
 34862  00A444  8562               	bsf	98,2,b	;volatile
 34863                           
 34864                           ;mcc_generated_files/i2c2_master.c: 693:     I2C2CON0bits.EN = 1;
 34865  00A446  8F5D               	bsf	93,7,b	;volatile
 34866                           
 34867                           ; BSR set to: 61
 34868  00A448  0012               	return		;funcret
 34869  00A44A                     __end_of_I2C2_MasterResetBus:
 34870                           	opt callstack 0
 34871                           
 34872 ;; *************** function i2_I2C2_NackCb *****************
 34873 ;; Defined at:
 34874 ;;		line 13 in file "i2c2_mux.c"
 34875 ;; Parameters:    Size  Location     Type
 34876 ;;  ptr             2    4[COMRAM] PTR void 
 34877 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 34878 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 34879 ;; Auto vars:     Size  Location     Type
 34880 ;;		None
 34881 ;; Return value:  Size  Location     Type
 34882 ;;                  1    wreg      enum E16390
 34883 ;; Registers used:
 34884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34885 ;; Tracked objects:
 34886 ;;		On entry : 3F/2
 34887 ;;		On exit  : 3C/0
 34888 ;;		Unchanged: 0/0
 34889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34894 ;;Total ram usage:        2 bytes
 34895 ;; Hardware stack levels used:    1
 34896 ;; Hardware stack levels required when called:    9
 34897 ;; This function calls:
 34898 ;;		i2_I2C2_CallbackReturnStop
 34899 ;;		i2_printf
 34900 ;; This function is called by:
 34901 ;;		_I2C2_DO_RX_EMPTY
 34902 ;;		i2_I2C2_DO_RX_EMPTY
 34903 ;;		_I2C2_DO_TX_EMPTY
 34904 ;;		_I2C2_DO_TX
 34905 ;;		_I2C2_DO_ADDRESS_NACK
 34906 ;;		_I2C2_DO_BUS_COLLISION
 34907 ;; This function uses a non-reentrant model
 34908 ;;
 34909                           
 34910                           	psect	text201
 34911  0099AE                     __ptext201:
 34912                           	opt callstack 0
 34913  0099AE                     i2_I2C2_NackCb:
 34914                           	opt callstack 0
 34915                           
 34916                           ; BSR set to: 2
 34917                           ;i2c2_mux.c: 14:     printf ("I2C2 E\n");
 34918                           
 34919                           ; BSR set to: 61
 34920                           ;incstack = 0
 34921 ;; hardware stack exceeded
 34922  0099AE  0ECA               	movlw	low STR_61
 34923  0099B0  0100               	movlb	0	; () banked
 34924  0099B2  6F7B               	movwf	i2printf@fmt& (0+255),b
 34925  0099B4  0EFF               	movlw	high STR_61
 34926  0099B6  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 34927  0099B8  EC06  F04F         	call	i2_printf	;wreg free
 34928                           
 34929                           ; BSR set to: 2
 34930                           ;i2c2_mux.c: 15:     if (currentTrfAddr == 0x50) {
 34931  0099BC  0E50               	movlw	80
 34932  0099BE  0101               	movlb	1	; () banked
 34933  0099C0  19B6               	xorwf	_currentTrfAddr& (0+255),w,b
 34934  0099C2  A4D8               	btfss	status,2,c
 34935  0099C4  D003               	goto	i2l17134
 34936                           
 34937                           ; BSR set to: 1
 34938                           ;i2c2_mux.c: 16:         lastI2C2MAckResponse = 0;
 34939  0099C6  0E00               	movlw	0
 34940  0099C8  6FB5               	movwf	_lastI2C2MAckResponse& (0+255),b
 34941                           
 34942                           ;i2c2_mux.c: 17:     } else {
 34943  0099CA  D003               	goto	i2l17136
 34944  0099CC                     i2l17134:
 34945                           
 34946                           ; BSR set to: 1
 34947                           ;i2c2_mux.c: 18:         lastI2C2LAckResponse = 0;
 34948  0099CC  0E00               	movlw	0
 34949  0099CE  0102               	movlb	2	; () banked
 34950  0099D0  6F4D               	movwf	_lastI2C2LAckResponse& (0+255),b
 34951  0099D2                     i2l17136:
 34952                           
 34953                           ;i2c2_mux.c: 20:     return I2C2_CallbackReturnStop(((void*)0));
 34954  0099D2  0E00               	movlw	0
 34955  0099D4  6E05               	movwf	i2I2C2_CallbackReturnStop@funPtr^0,c
 34956  0099D6  0E00               	movlw	0
 34957  0099D8  6E06               	movwf	(i2I2C2_CallbackReturnStop@funPtr+1)^0,c
 34958  0099DA  EC74  F052         	call	i2_I2C2_CallbackReturnStop	;wreg free
 34959  0099DE  0012               	return		;funcret
 34960  0099E0                     __end_ofi2_I2C2_NackCb:
 34961                           	opt callstack 0
 34962                           
 34963 ;; *************** function i2_I2C2_CallbackReturnReset *****************
 34964 ;; Defined at:
 34965 ;;		line 616 in file "mcc_generated_files/i2c2_master.c"
 34966 ;; Parameters:    Size  Location     Type
 34967 ;;  funPtr          2    4[COMRAM] PTR void 
 34968 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 34969 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 34970 ;; Auto vars:     Size  Location     Type
 34971 ;;		None
 34972 ;; Return value:  Size  Location     Type
 34973 ;;                  1    wreg      enum E358
 34974 ;; Registers used:
 34975 ;;		wreg
 34976 ;; Tracked objects:
 34977 ;;		On entry : 3F/2
 34978 ;;		On exit  : 3F/2
 34979 ;;		Unchanged: 3F/0
 34980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34985 ;;Total ram usage:        2 bytes
 34986 ;; Hardware stack levels used:    1
 34987 ;; This function calls:
 34988 ;;		Nothing
 34989 ;; This function is called by:
 34990 ;;		_I2C2_DO_RX_EMPTY
 34991 ;;		i2_I2C2_DO_RX_EMPTY
 34992 ;;		_I2C2_DO_TX_EMPTY
 34993 ;;		_I2C2_DO_TX
 34994 ;;		_I2C2_DO_ADDRESS_NACK
 34995 ;;		_I2C2_DO_BUS_COLLISION
 34996 ;; This function uses a non-reentrant model
 34997 ;;
 34998                           
 34999                           	psect	text202
 35000  00A4E4                     __ptext202:
 35001                           	opt callstack 0
 35002  00A4E4                     i2_I2C2_CallbackReturnReset:
 35003                           	opt callstack 8
 35004                           
 35005                           ; BSR set to: 2
 35006                           ;mcc_generated_files/i2c2_master.c: 616: i2c2_operations_t I2C2_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c2_master.c: 617: {;mcc_generated_files/i2c2_master.c: 6
      +                          18:     return I2C2_RESET_LINK;
 35007                           
 35008                           ;incstack = 0
 35009  00A4E4  0E05               	movlw	5
 35010                           
 35011                           ; BSR set to: 2
 35012  00A4E6  0012               	return		;funcret
 35013  00A4E8                     __end_ofi2_I2C2_CallbackReturnReset:
 35014                           	opt callstack 0
 35015                           
 35016 ;; *************** function i2_I2C2_CallbackReturnStop *****************
 35017 ;; Defined at:
 35018 ;;		line 611 in file "mcc_generated_files/i2c2_master.c"
 35019 ;; Parameters:    Size  Location     Type
 35020 ;;  funPtr          2    4[COMRAM] PTR void 
 35021 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35022 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35023 ;; Auto vars:     Size  Location     Type
 35024 ;;		None
 35025 ;; Return value:  Size  Location     Type
 35026 ;;                  1    wreg      enum E358
 35027 ;; Registers used:
 35028 ;;		wreg
 35029 ;; Tracked objects:
 35030 ;;		On entry : 3C/2
 35031 ;;		On exit  : 3C/0
 35032 ;;		Unchanged: 3C/0
 35033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35038 ;;Total ram usage:        2 bytes
 35039 ;; Hardware stack levels used:    1
 35040 ;; This function calls:
 35041 ;;		Nothing
 35042 ;; This function is called by:
 35043 ;;		i2_I2C2_SetCallback
 35044 ;;		i2_I2C2_NackCb
 35045 ;;		_I2C2_DO_RX_EMPTY
 35046 ;;		i2_I2C2_DO_RX_EMPTY
 35047 ;;		_I2C2_DO_TX_EMPTY
 35048 ;;		_I2C2_DO_TX
 35049 ;;		_I2C2_DO_ADDRESS_NACK
 35050 ;;		_I2C2_DO_BUS_COLLISION
 35051 ;; This function uses a non-reentrant model
 35052 ;;
 35053                           
 35054                           	psect	text203
 35055  00A4E8                     __ptext203:
 35056                           	opt callstack 0
 35057  00A4E8                     i2_I2C2_CallbackReturnStop:
 35058                           	opt callstack 7
 35059                           
 35060                           ;mcc_generated_files/i2c2_master.c: 611: i2c2_operations_t I2C2_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c2_master.c: 612: {;mcc_generated_files/i2c2_master.c: 61
      +                          3:     return I2C2_STOP;
 35061                           
 35062                           ; BSR set to: 2
 35063                           ;incstack = 0
 35064  00A4E8  0E01               	movlw	1
 35065  00A4EA  0012               	return		;funcret
 35066  00A4EC                     __end_ofi2_I2C2_CallbackReturnStop:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 35070 ;; Defined at:
 35071 ;;		line 170 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;  ptr             2    4[COMRAM] PTR void 
 35074 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35075 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35076 ;; Auto vars:     Size  Location     Type
 35077 ;;		None
 35078 ;; Return value:  Size  Location     Type
 35079 ;;                  1    wreg      enum E358
 35080 ;; Registers used:
 35081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35082 ;; Tracked objects:
 35083 ;;		On entry : 3F/2
 35084 ;;		On exit  : 0/0
 35085 ;;		Unchanged: 0/0
 35086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35091 ;;Total ram usage:        2 bytes
 35092 ;; Hardware stack levels used:    1
 35093 ;; Hardware stack levels required when called:    2
 35094 ;; This function calls:
 35095 ;;		i2_I2C2_SetBuffer
 35096 ;;		i2_I2C2_SetDataCompleteCallback
 35097 ;; This function is called by:
 35098 ;;		_I2C2_DO_RX_EMPTY
 35099 ;;		i2_I2C2_DO_RX_EMPTY
 35100 ;;		_I2C2_DO_TX_EMPTY
 35101 ;;		_I2C2_DO_TX
 35102 ;;		_I2C2_DO_ADDRESS_NACK
 35103 ;;		_I2C2_DO_BUS_COLLISION
 35104 ;; This function uses a non-reentrant model
 35105 ;;
 35106                           
 35107                           	psect	text204
 35108  0091AC                     __ptext204:
 35109                           	opt callstack 0
 35110  0091AC                     i2_rdBlkRegCompleteHandler:
 35111                           	opt callstack 6
 35112                           
 35113                           ; BSR set to: 2
 35114                           ;mcc_generated_files/examples/i2c2_master_example.c: 170: static i2c2_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c2_master_example.c: 172:     I2C2_SetBuffer(((i2c2_buff
      +                          er_t *)ptr)->data,((i2c2_buffer_t*)ptr)->len);
 35115                           
 35116                           ;incstack = 0
 35117  0091AC  EE20 F002          	lfsr	2,2
 35118  0091B0  5005               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 35119  0091B2  26D9               	addwf	fsr2l,f,c
 35120  0091B4  5006               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 35121  0091B6  22DA               	addwfc	fsr2h,f,c
 35122  0091B8  006F FF78  F001    	movff	postinc2,i2I2C2_SetBuffer@buffer
 35123  0091BE  006F FF74  F002    	movff	postdec2,i2I2C2_SetBuffer@buffer+1
 35124  0091C4  0060  F017  FFD9   	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 35125  0091CA  0060  F01B  FFDA   	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 35126  0091D0  006F FF78  F003    	movff	postinc2,i2I2C2_SetBuffer@bufferSize
 35127  0091D6  006F FF74  F004    	movff	postdec2,i2I2C2_SetBuffer@bufferSize+1
 35128  0091DC  EC26  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35129                           
 35130                           ; BSR set to: 2
 35131                           ;mcc_generated_files/examples/i2c2_master_example.c: 173:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35132  0091E0  0E00               	movlw	0
 35133  0091E2  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35134  0091E4  0E00               	movlw	0
 35135  0091E6  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35136  0091E8  0E00               	movlw	0
 35137  0091EA  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35138  0091EC  0E00               	movlw	0
 35139  0091EE  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35140  0091F0  EC16  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35141                           
 35142                           ;mcc_generated_files/examples/i2c2_master_example.c: 174:     return I2C2_RESTART_READ;
 35143  0091F4  0E02               	movlw	2
 35144  0091F6  0012               	return		;funcret
 35145  0091F8                     __end_ofi2_rdBlkRegCompleteHandler:
 35146                           	opt callstack 0
 35147                           
 35148 ;; *************** function i2_wr1RegCompleteHandler *****************
 35149 ;; Defined at:
 35150 ;;		line 156 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35151 ;; Parameters:    Size  Location     Type
 35152 ;;  ptr             2    4[COMRAM] PTR void 
 35153 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35154 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35155 ;; Auto vars:     Size  Location     Type
 35156 ;;		None
 35157 ;; Return value:  Size  Location     Type
 35158 ;;                  1    wreg      enum E358
 35159 ;; Registers used:
 35160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35161 ;; Tracked objects:
 35162 ;;		On entry : 3F/2
 35163 ;;		On exit  : 0/0
 35164 ;;		Unchanged: 0/0
 35165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35170 ;;Total ram usage:        2 bytes
 35171 ;; Hardware stack levels used:    1
 35172 ;; Hardware stack levels required when called:    2
 35173 ;; This function calls:
 35174 ;;		i2_I2C2_SetBuffer
 35175 ;;		i2_I2C2_SetDataCompleteCallback
 35176 ;; This function is called by:
 35177 ;;		_I2C2_DO_RX_EMPTY
 35178 ;;		i2_I2C2_DO_RX_EMPTY
 35179 ;;		_I2C2_DO_TX_EMPTY
 35180 ;;		_I2C2_DO_TX
 35181 ;;		_I2C2_DO_ADDRESS_NACK
 35182 ;;		_I2C2_DO_BUS_COLLISION
 35183 ;; This function uses a non-reentrant model
 35184 ;;
 35185                           
 35186                           	psect	text205
 35187  009A72                     __ptext205:
 35188                           	opt callstack 0
 35189  009A72                     i2_wr1RegCompleteHandler:
 35190                           	opt callstack 6
 35191                           
 35192                           ; BSR set to: 2
 35193                           ;mcc_generated_files/examples/i2c2_master_example.c: 156: static i2c2_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 158:     I2C2_SetBuffer(ptr,1);
 35194                           
 35195                           ;incstack = 0
 35196  009A72  0060  F014  F001   	movff	i2wr1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35197  009A78  0060  F018  F002   	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35198  009A7E  0E00               	movlw	0
 35199  009A80  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35200  009A82  0E01               	movlw	1
 35201  009A84  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35202  009A86  EC26  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35203                           
 35204                           ; BSR set to: 2
 35205                           ;mcc_generated_files/examples/i2c2_master_example.c: 159:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35206  009A8A  0E00               	movlw	0
 35207  009A8C  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35208  009A8E  0E00               	movlw	0
 35209  009A90  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35210  009A92  0E00               	movlw	0
 35211  009A94  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35212  009A96  0E00               	movlw	0
 35213  009A98  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35214  009A9A  EC16  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35215                           
 35216                           ;mcc_generated_files/examples/i2c2_master_example.c: 160:     return I2C2_CONTINUE;
 35217  009A9E  0E04               	movlw	4
 35218  009AA0  0012               	return		;funcret
 35219  009AA2                     __end_ofi2_wr1RegCompleteHandler:
 35220                           	opt callstack 0
 35221                           
 35222 ;; *************** function i2_rd2RegCompleteHandler *****************
 35223 ;; Defined at:
 35224 ;;		line 149 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35225 ;; Parameters:    Size  Location     Type
 35226 ;;  ptr             2    4[COMRAM] PTR void 
 35227 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35228 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35229 ;; Auto vars:     Size  Location     Type
 35230 ;;		None
 35231 ;; Return value:  Size  Location     Type
 35232 ;;                  1    wreg      enum E358
 35233 ;; Registers used:
 35234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35235 ;; Tracked objects:
 35236 ;;		On entry : 3F/2
 35237 ;;		On exit  : 0/0
 35238 ;;		Unchanged: 0/0
 35239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35244 ;;Total ram usage:        2 bytes
 35245 ;; Hardware stack levels used:    1
 35246 ;; Hardware stack levels required when called:    2
 35247 ;; This function calls:
 35248 ;;		i2_I2C2_SetBuffer
 35249 ;;		i2_I2C2_SetDataCompleteCallback
 35250 ;; This function is called by:
 35251 ;;		_I2C2_DO_RX_EMPTY
 35252 ;;		i2_I2C2_DO_RX_EMPTY
 35253 ;;		_I2C2_DO_TX_EMPTY
 35254 ;;		_I2C2_DO_TX
 35255 ;;		_I2C2_DO_ADDRESS_NACK
 35256 ;;		_I2C2_DO_BUS_COLLISION
 35257 ;; This function uses a non-reentrant model
 35258 ;;
 35259                           
 35260                           	psect	text206
 35261  009AA2                     __ptext206:
 35262                           	opt callstack 0
 35263  009AA2                     i2_rd2RegCompleteHandler:
 35264                           	opt callstack 6
 35265                           
 35266                           ; BSR set to: 2
 35267                           ;mcc_generated_files/examples/i2c2_master_example.c: 149: static i2c2_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 151:     I2C2_SetBuffer(ptr,2);
 35268                           
 35269                           ;incstack = 0
 35270  009AA2  0060  F014  F001   	movff	i2rd2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35271  009AA8  0060  F018  F002   	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35272  009AAE  0E00               	movlw	0
 35273  009AB0  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35274  009AB2  0E02               	movlw	2
 35275  009AB4  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35276  009AB6  EC26  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35277                           
 35278                           ; BSR set to: 2
 35279                           ;mcc_generated_files/examples/i2c2_master_example.c: 152:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35280  009ABA  0E00               	movlw	0
 35281  009ABC  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35282  009ABE  0E00               	movlw	0
 35283  009AC0  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35284  009AC2  0E00               	movlw	0
 35285  009AC4  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35286  009AC6  0E00               	movlw	0
 35287  009AC8  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35288  009ACA  EC16  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35289                           
 35290                           ;mcc_generated_files/examples/i2c2_master_example.c: 153:     return I2C2_RESTART_READ;
 35291  009ACE  0E02               	movlw	2
 35292  009AD0  0012               	return		;funcret
 35293  009AD2                     __end_ofi2_rd2RegCompleteHandler:
 35294                           	opt callstack 0
 35295                           
 35296 ;; *************** function i2_rd1RegCompleteHandler *****************
 35297 ;; Defined at:
 35298 ;;		line 142 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35299 ;; Parameters:    Size  Location     Type
 35300 ;;  ptr             2    4[COMRAM] PTR void 
 35301 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35302 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35303 ;; Auto vars:     Size  Location     Type
 35304 ;;		None
 35305 ;; Return value:  Size  Location     Type
 35306 ;;                  1    wreg      enum E358
 35307 ;; Registers used:
 35308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35309 ;; Tracked objects:
 35310 ;;		On entry : 3F/2
 35311 ;;		On exit  : 0/0
 35312 ;;		Unchanged: 0/0
 35313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35318 ;;Total ram usage:        2 bytes
 35319 ;; Hardware stack levels used:    1
 35320 ;; Hardware stack levels required when called:    2
 35321 ;; This function calls:
 35322 ;;		i2_I2C2_SetBuffer
 35323 ;;		i2_I2C2_SetDataCompleteCallback
 35324 ;; This function is called by:
 35325 ;;		_I2C2_DO_RX_EMPTY
 35326 ;;		i2_I2C2_DO_RX_EMPTY
 35327 ;;		_I2C2_DO_TX_EMPTY
 35328 ;;		_I2C2_DO_TX
 35329 ;;		_I2C2_DO_ADDRESS_NACK
 35330 ;;		_I2C2_DO_BUS_COLLISION
 35331 ;; This function uses a non-reentrant model
 35332 ;;
 35333                           
 35334                           	psect	text207
 35335  009AD2                     __ptext207:
 35336                           	opt callstack 0
 35337  009AD2                     i2_rd1RegCompleteHandler:
 35338                           	opt callstack 6
 35339                           
 35340                           ; BSR set to: 2
 35341                           ;mcc_generated_files/examples/i2c2_master_example.c: 142: static i2c2_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 144:     I2C2_SetBuffer(ptr,1);
 35342                           
 35343                           ;incstack = 0
 35344  009AD2  0060  F014  F001   	movff	i2rd1RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35345  009AD8  0060  F018  F002   	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35346  009ADE  0E00               	movlw	0
 35347  009AE0  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35348  009AE2  0E01               	movlw	1
 35349  009AE4  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35350  009AE6  EC26  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35351                           
 35352                           ; BSR set to: 2
 35353                           ;mcc_generated_files/examples/i2c2_master_example.c: 145:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35354  009AEA  0E00               	movlw	0
 35355  009AEC  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35356  009AEE  0E00               	movlw	0
 35357  009AF0  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35358  009AF2  0E00               	movlw	0
 35359  009AF4  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35360  009AF6  0E00               	movlw	0
 35361  009AF8  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35362  009AFA  EC16  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35363                           
 35364                           ;mcc_generated_files/examples/i2c2_master_example.c: 146:     return I2C2_RESTART_READ;
 35365  009AFE  0E02               	movlw	2
 35366  009B00  0012               	return		;funcret
 35367  009B02                     __end_ofi2_rd1RegCompleteHandler:
 35368                           	opt callstack 0
 35369                           
 35370 ;; *************** function i2_wr2RegCompleteHandler *****************
 35371 ;; Defined at:
 35372 ;;		line 163 in file "mcc_generated_files/examples/i2c2_master_example.c"
 35373 ;; Parameters:    Size  Location     Type
 35374 ;;  ptr             2    4[COMRAM] PTR void 
 35375 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35376 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35377 ;; Auto vars:     Size  Location     Type
 35378 ;;		None
 35379 ;; Return value:  Size  Location     Type
 35380 ;;                  1    wreg      enum E358
 35381 ;; Registers used:
 35382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35383 ;; Tracked objects:
 35384 ;;		On entry : 3F/2
 35385 ;;		On exit  : 0/0
 35386 ;;		Unchanged: 0/0
 35387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35392 ;;Total ram usage:        2 bytes
 35393 ;; Hardware stack levels used:    1
 35394 ;; Hardware stack levels required when called:    2
 35395 ;; This function calls:
 35396 ;;		i2_I2C2_SetBuffer
 35397 ;;		i2_I2C2_SetDataCompleteCallback
 35398 ;; This function is called by:
 35399 ;;		_I2C2_DO_RX_EMPTY
 35400 ;;		i2_I2C2_DO_RX_EMPTY
 35401 ;;		_I2C2_DO_TX_EMPTY
 35402 ;;		_I2C2_DO_TX
 35403 ;;		_I2C2_DO_ADDRESS_NACK
 35404 ;;		_I2C2_DO_BUS_COLLISION
 35405 ;; This function uses a non-reentrant model
 35406 ;;
 35407                           
 35408                           	psect	text208
 35409  009B02                     __ptext208:
 35410                           	opt callstack 0
 35411  009B02                     i2_wr2RegCompleteHandler:
 35412                           	opt callstack 6
 35413                           
 35414                           ; BSR set to: 2
 35415                           ;mcc_generated_files/examples/i2c2_master_example.c: 163: static i2c2_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c2_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c2_master_example.c: 165:     I2C2_SetBuffer(ptr,2);
 35416                           
 35417                           ;incstack = 0
 35418  009B02  0060  F014  F001   	movff	i2wr2RegCompleteHandler@ptr,i2I2C2_SetBuffer@buffer
 35419  009B08  0060  F018  F002   	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C2_SetBuffer@buffer+1
 35420  009B0E  0E00               	movlw	0
 35421  009B10  6E04               	movwf	(i2I2C2_SetBuffer@bufferSize+1)^0,c
 35422  009B12  0E02               	movlw	2
 35423  009B14  6E03               	movwf	i2I2C2_SetBuffer@bufferSize^0,c
 35424  009B16  EC26  F050         	call	i2_I2C2_SetBuffer	;wreg free
 35425                           
 35426                           ; BSR set to: 2
 35427                           ;mcc_generated_files/examples/i2c2_master_example.c: 166:     I2C2_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 35428  009B1A  0E00               	movlw	0
 35429  009B1C  6E06               	movwf	i2I2C2_SetDataCompleteCallback@cb^0,c
 35430  009B1E  0E00               	movlw	0
 35431  009B20  6E07               	movwf	(i2I2C2_SetDataCompleteCallback@cb+1)^0,c
 35432  009B22  0E00               	movlw	0
 35433  009B24  6E08               	movwf	i2I2C2_SetDataCompleteCallback@ptr^0,c
 35434  009B26  0E00               	movlw	0
 35435  009B28  6E09               	movwf	(i2I2C2_SetDataCompleteCallback@ptr+1)^0,c
 35436  009B2A  EC16  F050         	call	i2_I2C2_SetDataCompleteCallback	;wreg free
 35437                           
 35438                           ;mcc_generated_files/examples/i2c2_master_example.c: 167:     return I2C2_CONTINUE;
 35439  009B2E  0E04               	movlw	4
 35440  009B30  0012               	return		;funcret
 35441  009B32                     __end_ofi2_wr2RegCompleteHandler:
 35442                           	opt callstack 0
 35443                           
 35444 ;; *************** function i2_I2C2_SetDataCompleteCallback *****************
 35445 ;; Defined at:
 35446 ;;		line 304 in file "mcc_generated_files/i2c2_master.c"
 35447 ;; Parameters:    Size  Location     Type
 35448 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 35449 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 35450 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 35451 ;;  ptr             2    7[COMRAM] PTR void 
 35452 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35453 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35454 ;; Auto vars:     Size  Location     Type
 35455 ;;		None
 35456 ;; Return value:  Size  Location     Type
 35457 ;;                  1    wreg      void 
 35458 ;; Registers used:
 35459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35460 ;; Tracked objects:
 35461 ;;		On entry : 3F/2
 35462 ;;		On exit  : 0/0
 35463 ;;		Unchanged: 0/0
 35464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35469 ;;Total ram usage:        4 bytes
 35470 ;; Hardware stack levels used:    1
 35471 ;; Hardware stack levels required when called:    1
 35472 ;; This function calls:
 35473 ;;		i2_I2C2_SetCallback
 35474 ;; This function is called by:
 35475 ;;		i2_rd1RegCompleteHandler
 35476 ;;		i2_rd2RegCompleteHandler
 35477 ;;		i2_wr1RegCompleteHandler
 35478 ;;		i2_wr2RegCompleteHandler
 35479 ;;		i2_rdBlkRegCompleteHandler
 35480 ;; This function uses a non-reentrant model
 35481 ;;
 35482                           
 35483                           	psect	text209
 35484  00A02C                     __ptext209:
 35485                           	opt callstack 0
 35486  00A02C                     i2_I2C2_SetDataCompleteCallback:
 35487                           	opt callstack 6
 35488                           
 35489                           ; BSR set to: 2
 35490                           ;mcc_generated_files/i2c2_master.c: 304: void I2C2_SetDataCompleteCallback(i2c2_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c2_master.c: 305: {;mcc_generated_files/i2c2_mas
      +                          ter.c: 306:     I2C2_SetCallback(I2C2_DATA_COMPLETE, cb, ptr);
 35491                           
 35492                           ;incstack = 0
 35493  00A02C  0060  F018  F001   	movff	i2I2C2_SetDataCompleteCallback@cb,i2I2C2_SetCallback@cb
 35494  00A032  0060  F01C  F002   	movff	i2I2C2_SetDataCompleteCallback@cb+1,i2I2C2_SetCallback@cb+1
 35495  00A038  0060  F020  F003   	movff	i2I2C2_SetDataCompleteCallback@ptr,i2I2C2_SetCallback@ptr
 35496  00A03E  0060  F024  F004   	movff	i2I2C2_SetDataCompleteCallback@ptr+1,i2I2C2_SetCallback@ptr+1
 35497  00A044  0E00               	movlw	0
 35498  00A046  EC3A  F044         	call	i2_I2C2_SetCallback
 35499  00A04A  0012               	return		;funcret
 35500  00A04C                     __end_ofi2_I2C2_SetDataCompleteCallback:
 35501                           	opt callstack 0
 35502                           
 35503 ;; *************** function i2_I2C2_SetCallback *****************
 35504 ;; Defined at:
 35505 ;;		line 334 in file "mcc_generated_files/i2c2_master.c"
 35506 ;; Parameters:    Size  Location     Type
 35507 ;;  idx             1    wreg     enum E16468
 35508 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 35509 ;;		 -> I2C2_NackCb(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 35510 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 35511 ;;  ptr             2    2[COMRAM] PTR void 
 35512 ;;		 -> I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@data(1), I2C2_Read2B
      +yteRegister@returnValue(2), 
 35513 ;;		 -> NULL(0), I2C2_Read1ByteRegister@returnValue(1), 
 35514 ;; Auto vars:     Size  Location     Type
 35515 ;;  idx             1    4[COMRAM] enum E16468
 35516 ;; Return value:  Size  Location     Type
 35517 ;;                  1    wreg      void 
 35518 ;; Registers used:
 35519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35520 ;; Tracked objects:
 35521 ;;		On entry : 3F/2
 35522 ;;		On exit  : 0/0
 35523 ;;		Unchanged: 0/0
 35524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35528 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35529 ;;Total ram usage:        5 bytes
 35530 ;; Hardware stack levels used:    1
 35531 ;; This function calls:
 35532 ;;		Nothing
 35533 ;; This function is called by:
 35534 ;;		i2_I2C2_SetDataCompleteCallback
 35535 ;; This function uses a non-reentrant model
 35536 ;;
 35537                           
 35538                           	psect	text210
 35539  008874                     __ptext210:
 35540                           	opt callstack 0
 35541  008874                     i2_I2C2_SetCallback:
 35542                           	opt callstack 6
 35543                           
 35544                           ;incstack = 0
 35545                           ;i2I2C2_SetCallback@idx stored from wreg
 35546  008874  6E05               	movwf	i2I2C2_SetCallback@idx^0,c
 35547                           
 35548                           ;mcc_generated_files/i2c2_master.c: 334: static void I2C2_SetCallback(i2c2_callbackIndex
      +                          _t idx, i2c2_callback_t cb, void *ptr);mcc_generated_files/i2c2_master.c: 335: {;mcc_gen
      +                          erated_files/i2c2_master.c: 336:     if(cb)
 35549  008876  5001               	movf	i2I2C2_SetCallback@cb^0,w,c
 35550  008878  1002               	iorwf	(i2I2C2_SetCallback@cb+1)^0,w,c
 35551  00887A  B4D8               	btfsc	status,2,c
 35552  00887C  D01D               	goto	i2l10994
 35553                           
 35554                           ;mcc_generated_files/i2c2_master.c: 337:     {;mcc_generated_files/i2c2_master.c: 338:  
      +                                 I2C2_Status.callbackTable[idx] = cb;
 35555  00887E  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35556  008880  0D02               	mullw	2
 35557  008882  0E00               	movlw	low _I2C2_Status
 35558  008884  24F3               	addwf	243,w,c
 35559  008886  6ED9               	movwf	fsr2l,c
 35560  008888  0E02               	movlw	high _I2C2_Status
 35561  00888A  20F4               	addwfc	prodh,w,c
 35562  00888C  6EDA               	movwf	fsr2h,c
 35563  00888E  0060  F007  FFDE   	movff	i2I2C2_SetCallback@cb,postinc2
 35564  008894  0060  F00B  FFDD   	movff	i2I2C2_SetCallback@cb+1,postdec2
 35565                           
 35566                           ;mcc_generated_files/i2c2_master.c: 339:         I2C2_Status.callbackPayload[idx] = ptr;
 35567  00889A  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35568  00889C  0D02               	mullw	2
 35569  00889E  0E0C               	movlw	low (_I2C2_Status+12)
 35570  0088A0  24F3               	addwf	243,w,c
 35571  0088A2  6ED9               	movwf	fsr2l,c
 35572  0088A4  0E02               	movlw	high (_I2C2_Status+12)
 35573  0088A6  20F4               	addwfc	prodh,w,c
 35574  0088A8  6EDA               	movwf	fsr2h,c
 35575  0088AA  0060  F00F  FFDE   	movff	i2I2C2_SetCallback@ptr,postinc2
 35576  0088B0  0060  F013  FFDD   	movff	i2I2C2_SetCallback@ptr+1,postdec2
 35577                           
 35578                           ;mcc_generated_files/i2c2_master.c: 340:     }
 35579  0088B6  0012               	return	
 35580  0088B8                     i2l10994:
 35581                           
 35582                           ;mcc_generated_files/i2c2_master.c: 342:     {;mcc_generated_files/i2c2_master.c: 343:  
      +                                 I2C2_Status.callbackTable[idx] = I2C2_CallbackReturnStop;
 35583  0088B8  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35584  0088BA  0D02               	mullw	2
 35585  0088BC  0E00               	movlw	low _I2C2_Status
 35586  0088BE  24F3               	addwf	243,w,c
 35587  0088C0  6ED9               	movwf	fsr2l,c
 35588  0088C2  0E02               	movlw	high _I2C2_Status
 35589  0088C4  20F4               	addwfc	prodh,w,c
 35590  0088C6  6EDA               	movwf	fsr2h,c
 35591  0088C8  0EE8               	movlw	low i2_I2C2_CallbackReturnStop
 35592  0088CA  6EDE               	movwf	postinc2,c
 35593  0088CC  0EA4               	movlw	high i2_I2C2_CallbackReturnStop
 35594  0088CE  6EDD               	movwf	postdec2,c
 35595                           
 35596                           ;mcc_generated_files/i2c2_master.c: 344:         I2C2_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 35597  0088D0  5005               	movf	i2I2C2_SetCallback@idx^0,w,c
 35598  0088D2  0D02               	mullw	2
 35599  0088D4  0E0C               	movlw	low (_I2C2_Status+12)
 35600  0088D6  24F3               	addwf	243,w,c
 35601  0088D8  6ED9               	movwf	fsr2l,c
 35602  0088DA  0E02               	movlw	high (_I2C2_Status+12)
 35603  0088DC  20F4               	addwfc	prodh,w,c
 35604  0088DE  6EDA               	movwf	fsr2h,c
 35605  0088E0  0E00               	movlw	0
 35606  0088E2  6EDE               	movwf	postinc2,c
 35607  0088E4  0E00               	movlw	0
 35608  0088E6  6EDD               	movwf	postdec2,c
 35609  0088E8  0012               	return		;funcret
 35610  0088EA                     __end_ofi2_I2C2_SetCallback:
 35611                           	opt callstack 0
 35612                           
 35613 ;; *************** function i2_I2C2_SetBuffer *****************
 35614 ;; Defined at:
 35615 ;;		line 294 in file "mcc_generated_files/i2c2_master.c"
 35616 ;; Parameters:    Size  Location     Type
 35617 ;;  buffer          2    0[COMRAM] PTR void 
 35618 ;;		 -> monitorMsg(10), I2C2_ReadDataBlock@reg(1), I2C2_ReadDataBlock@bufferBlock(4), I2C2_Write2ByteRegister@reg(1), 
 35619 ;;		 -> I2C2_Write2ByteRegister@data(2), I2C2_Write1ByteRegister@reg(1), I2C2_Write1ByteRegister@data(1), I2C2_Read2Byte
      +Register@reg(1), 
 35620 ;;		 -> I2C2_Read2ByteRegister@returnValue(2), NULL(0), I2C2_Read1ByteRegister@reg(1), I2C2_Read1ByteRegister@returnValu
      +e(1), 
 35621 ;;  bufferSize      2    2[COMRAM] unsigned int 
 35622 ;; Auto vars:     Size  Location     Type
 35623 ;;		None
 35624 ;; Return value:  Size  Location     Type
 35625 ;;                  1    wreg      void 
 35626 ;; Registers used:
 35627 ;;		wreg, status,2, status,0
 35628 ;; Tracked objects:
 35629 ;;		On entry : 3F/2
 35630 ;;		On exit  : 3F/2
 35631 ;;		Unchanged: 0/0
 35632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35637 ;;Total ram usage:        4 bytes
 35638 ;; Hardware stack levels used:    1
 35639 ;; This function calls:
 35640 ;;		Nothing
 35641 ;; This function is called by:
 35642 ;;		i2_rd1RegCompleteHandler
 35643 ;;		i2_rd2RegCompleteHandler
 35644 ;;		i2_wr1RegCompleteHandler
 35645 ;;		i2_wr2RegCompleteHandler
 35646 ;;		i2_rdBlkRegCompleteHandler
 35647 ;; This function uses a non-reentrant model
 35648 ;;
 35649                           
 35650                           	psect	text211
 35651  00A04C                     __ptext211:
 35652                           	opt callstack 0
 35653  00A04C                     i2_I2C2_SetBuffer:
 35654                           	opt callstack 7
 35655                           
 35656                           ; BSR set to: 2
 35657                           ;mcc_generated_files/i2c2_master.c: 294: void I2C2_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c2_master.c: 295: {;mcc_generated_files/i2c2_master.c: 296: 
      +                              if(I2C2_Status.bufferFree)
 35658                           
 35659                           ;incstack = 0
 35660  00A04C  A923               	btfss	(_I2C2_Status+35)& (0+255),4,b
 35661  00A04E  0012               	return	
 35662                           
 35663                           ; BSR set to: 2
 35664                           ;mcc_generated_files/i2c2_master.c: 297:     {;mcc_generated_files/i2c2_master.c: 298:  
      +                                 I2C2_Status.data_ptr = buffer;
 35665  00A050  0060  F004  F21D   	movff	i2I2C2_SetBuffer@buffer,_I2C2_Status+29
 35666  00A056  0060  F008  F21E   	movff	i2I2C2_SetBuffer@buffer+1,_I2C2_Status+30
 35667                           
 35668                           ; BSR set to: 2
 35669                           ;mcc_generated_files/i2c2_master.c: 299:         I2C2_Status.data_length = bufferSize;
 35670  00A05C  0060  F00C  F21F   	movff	i2I2C2_SetBuffer@bufferSize,_I2C2_Status+31
 35671  00A062  0060  F010  F220   	movff	i2I2C2_SetBuffer@bufferSize+1,_I2C2_Status+32
 35672                           
 35673                           ; BSR set to: 2
 35674                           ;mcc_generated_files/i2c2_master.c: 300:         I2C2_Status.bufferFree = 0;
 35675  00A068  9923               	bcf	(_I2C2_Status+35)& (0+255),4,b
 35676                           
 35677                           ; BSR set to: 2
 35678  00A06A  0012               	return		;funcret
 35679  00A06C                     __end_ofi2_I2C2_SetBuffer:
 35680                           	opt callstack 0
 35681                           
 35682 ;; *************** function _I2C2_ClearInterruptFlags *****************
 35683 ;; Defined at:
 35684 ;;		line 364 in file "mcc_generated_files/i2c2_master.c"
 35685 ;; Parameters:    Size  Location     Type
 35686 ;;		None
 35687 ;; Auto vars:     Size  Location     Type
 35688 ;;		None
 35689 ;; Return value:  Size  Location     Type
 35690 ;;                  1    wreg      void 
 35691 ;; Registers used:
 35692 ;;		wreg, status,2, cstack
 35693 ;; Tracked objects:
 35694 ;;		On entry : 3F/0
 35695 ;;		On exit  : 3F/3D
 35696 ;;		Unchanged: 0/0
 35697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35702 ;;Total ram usage:        0 bytes
 35703 ;; Hardware stack levels used:    1
 35704 ;; Hardware stack levels required when called:    1
 35705 ;; This function calls:
 35706 ;;		_I2C2_MasterClearCountFlag
 35707 ;;		_I2C2_MasterClearNackFlag
 35708 ;;		_I2C2_MasterClearStopFlag
 35709 ;;		_I2C2_MasterIsCountFlagSet
 35710 ;;		_I2C2_MasterIsNackFlagSet
 35711 ;;		_I2C2_MasterIsStopFlagSet
 35712 ;; This function is called by:
 35713 ;;		_I2C2_MasterFsm
 35714 ;; This function uses a non-reentrant model
 35715 ;;
 35716                           
 35717                           	psect	text212
 35718  009B32                     __ptext212:
 35719                           	opt callstack 0
 35720  009B32                     _I2C2_ClearInterruptFlags:
 35721                           	opt callstack 9
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;mcc_generated_files/i2c2_master.c: 366:     if(I2C2_MasterIsCountFlagSet())
 35725                           
 35726                           ; BSR set to: 2
 35727                           ;incstack = 0
 35728  009B32  ECBF  F051         	call	_I2C2_MasterIsCountFlagSet	;wreg free
 35729  009B36  0900               	iorlw	0
 35730  009B38  B4D8               	btfsc	status,2,c
 35731  009B3A  D003               	goto	i2l11902
 35732                           
 35733                           ; BSR set to: 61
 35734                           ;mcc_generated_files/i2c2_master.c: 367:     {;mcc_generated_files/i2c2_master.c: 368:  
      +                                 I2C2_MasterClearCountFlag();
 35735  009B3C  EC7A  F052         	call	_I2C2_MasterClearCountFlag	;wreg free
 35736                           
 35737                           ;mcc_generated_files/i2c2_master.c: 369:     }
 35738  009B40  0012               	return	
 35739  009B42                     i2l11902:
 35740                           
 35741                           ; BSR set to: 61
 35742  009B42  ECF0  F051         	call	_I2C2_MasterIsStopFlagSet	;wreg free
 35743  009B46  0900               	iorlw	0
 35744  009B48  B4D8               	btfsc	status,2,c
 35745  009B4A  D003               	goto	i2l11906
 35746                           
 35747                           ; BSR set to: 61
 35748                           ;mcc_generated_files/i2c2_master.c: 371:     {;mcc_generated_files/i2c2_master.c: 372:  
      +                                 I2C2_MasterClearStopFlag();
 35749  009B4C  EC76  F052         	call	_I2C2_MasterClearStopFlag	;wreg free
 35750                           
 35751                           ;mcc_generated_files/i2c2_master.c: 373:     }
 35752  009B50  0012               	return	
 35753  009B52                     i2l11906:
 35754                           
 35755                           ; BSR set to: 61
 35756  009B52  ECF6  F051         	call	_I2C2_MasterIsNackFlagSet	;wreg free
 35757  009B56  0900               	iorlw	0
 35758  009B58  B4D8               	btfsc	status,2,c
 35759  009B5A  0012               	return	
 35760                           
 35761                           ; BSR set to: 61
 35762                           ;mcc_generated_files/i2c2_master.c: 375:     {;mcc_generated_files/i2c2_master.c: 376:  
      +                                 I2C2_MasterClearNackFlag();
 35763  009B5C  EC78  F052         	call	_I2C2_MasterClearNackFlag	;wreg free
 35764                           
 35765                           ; BSR set to: 61
 35766  009B60  0012               	return		;funcret
 35767  009B62                     __end_of_I2C2_ClearInterruptFlags:
 35768                           	opt callstack 0
 35769                           
 35770 ;; *************** function _I2C2_MasterIsStopFlagSet *****************
 35771 ;; Defined at:
 35772 ;;		line 746 in file "mcc_generated_files/i2c2_master.c"
 35773 ;; Parameters:    Size  Location     Type
 35774 ;;		None
 35775 ;; Auto vars:     Size  Location     Type
 35776 ;;		None
 35777 ;; Return value:  Size  Location     Type
 35778 ;;                  1    wreg      _Bool 
 35779 ;; Registers used:
 35780 ;;		wreg
 35781 ;; Tracked objects:
 35782 ;;		On entry : 3F/3D
 35783 ;;		On exit  : 3F/3D
 35784 ;;		Unchanged: 0/0
 35785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35790 ;;Total ram usage:        0 bytes
 35791 ;; Hardware stack levels used:    1
 35792 ;; This function calls:
 35793 ;;		Nothing
 35794 ;; This function is called by:
 35795 ;;		_I2C2_ClearInterruptFlags
 35796 ;; This function uses a non-reentrant model
 35797 ;;
 35798                           
 35799                           	psect	text213
 35800  00A3E0                     __ptext213:
 35801                           	opt callstack 0
 35802  00A3E0                     _I2C2_MasterIsStopFlagSet:
 35803                           	opt callstack 9
 35804                           
 35805                           ; BSR set to: 61
 35806                           ;mcc_generated_files/i2c2_master.c: 748:     return I2C2PIRbits.PCIF;
 35807                           
 35808                           ; BSR set to: 61
 35809                           ;incstack = 0
 35810  00A3E0  A563               	btfss	99,2,b	;volatile
 35811  00A3E2  D002               	goto	i2u1006_40
 35812  00A3E4  0E01               	movlw	1
 35813  00A3E6  0012               	return	
 35814  00A3E8                     i2u1006_40:
 35815  00A3E8  0E00               	movlw	0
 35816                           
 35817                           ; BSR set to: 61
 35818  00A3EA  0012               	return		;funcret
 35819  00A3EC                     __end_of_I2C2_MasterIsStopFlagSet:
 35820                           	opt callstack 0
 35821                           
 35822 ;; *************** function _I2C2_MasterIsNackFlagSet *****************
 35823 ;; Defined at:
 35824 ;;		line 756 in file "mcc_generated_files/i2c2_master.c"
 35825 ;; Parameters:    Size  Location     Type
 35826 ;;		None
 35827 ;; Auto vars:     Size  Location     Type
 35828 ;;		None
 35829 ;; Return value:  Size  Location     Type
 35830 ;;                  1    wreg      _Bool 
 35831 ;; Registers used:
 35832 ;;		wreg
 35833 ;; Tracked objects:
 35834 ;;		On entry : 3F/3D
 35835 ;;		On exit  : 3F/3D
 35836 ;;		Unchanged: 0/0
 35837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35842 ;;Total ram usage:        0 bytes
 35843 ;; Hardware stack levels used:    1
 35844 ;; This function calls:
 35845 ;;		Nothing
 35846 ;; This function is called by:
 35847 ;;		_I2C2_ClearInterruptFlags
 35848 ;; This function uses a non-reentrant model
 35849 ;;
 35850                           
 35851                           	psect	text214
 35852  00A3EC                     __ptext214:
 35853                           	opt callstack 0
 35854  00A3EC                     _I2C2_MasterIsNackFlagSet:
 35855                           	opt callstack 9
 35856                           
 35857                           ; BSR set to: 61
 35858                           ;mcc_generated_files/i2c2_master.c: 758:     return I2C2ERRbits.NACKIF;
 35859                           
 35860                           ; BSR set to: 61
 35861                           ;incstack = 0
 35862  00A3EC  A960               	btfss	96,4,b	;volatile
 35863  00A3EE  D002               	goto	i2u1007_40
 35864  00A3F0  0E01               	movlw	1
 35865  00A3F2  0012               	return	
 35866  00A3F4                     i2u1007_40:
 35867  00A3F4  0E00               	movlw	0
 35868                           
 35869                           ; BSR set to: 61
 35870  00A3F6  0012               	return		;funcret
 35871  00A3F8                     __end_of_I2C2_MasterIsNackFlagSet:
 35872                           	opt callstack 0
 35873                           
 35874 ;; *************** function _I2C2_MasterIsCountFlagSet *****************
 35875 ;; Defined at:
 35876 ;;		line 751 in file "mcc_generated_files/i2c2_master.c"
 35877 ;; Parameters:    Size  Location     Type
 35878 ;;		None
 35879 ;; Auto vars:     Size  Location     Type
 35880 ;;		None
 35881 ;; Return value:  Size  Location     Type
 35882 ;;                  1    wreg      _Bool 
 35883 ;; Registers used:
 35884 ;;		wreg
 35885 ;; Tracked objects:
 35886 ;;		On entry : 3F/0
 35887 ;;		On exit  : 3F/3D
 35888 ;;		Unchanged: 0/0
 35889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35894 ;;Total ram usage:        0 bytes
 35895 ;; Hardware stack levels used:    1
 35896 ;; This function calls:
 35897 ;;		Nothing
 35898 ;; This function is called by:
 35899 ;;		_I2C2_ClearInterruptFlags
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text215
 35904  00A37E                     __ptext215:
 35905                           	opt callstack 0
 35906  00A37E                     _I2C2_MasterIsCountFlagSet:
 35907                           	opt callstack 9
 35908                           
 35909                           ; BSR set to: 0
 35910                           ;mcc_generated_files/i2c2_master.c: 753:     return I2C2PIRbits.CNTIF;
 35911                           
 35912                           ; BSR set to: 61
 35913                           ;incstack = 0
 35914  00A37E  013D               	movlb	61	; () banked
 35915  00A380  AF63               	btfss	99,7,b	;volatile
 35916  00A382  D002               	goto	i2u1005_40
 35917  00A384  0E01               	movlw	1
 35918  00A386  0012               	return	
 35919  00A388                     i2u1005_40:
 35920  00A388  0E00               	movlw	0
 35921                           
 35922                           ; BSR set to: 61
 35923  00A38A  0012               	return		;funcret
 35924  00A38C                     __end_of_I2C2_MasterIsCountFlagSet:
 35925                           	opt callstack 0
 35926                           
 35927 ;; *************** function _I2C2_MasterClearStopFlag *****************
 35928 ;; Defined at:
 35929 ;;		line 761 in file "mcc_generated_files/i2c2_master.c"
 35930 ;; Parameters:    Size  Location     Type
 35931 ;;		None
 35932 ;; Auto vars:     Size  Location     Type
 35933 ;;		None
 35934 ;; Return value:  Size  Location     Type
 35935 ;;                  1    wreg      void 
 35936 ;; Registers used:
 35937 ;;		None
 35938 ;; Tracked objects:
 35939 ;;		On entry : 3F/3D
 35940 ;;		On exit  : 3F/3D
 35941 ;;		Unchanged: 0/0
 35942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35947 ;;Total ram usage:        0 bytes
 35948 ;; Hardware stack levels used:    1
 35949 ;; This function calls:
 35950 ;;		Nothing
 35951 ;; This function is called by:
 35952 ;;		_I2C2_ClearInterruptFlags
 35953 ;; This function uses a non-reentrant model
 35954 ;;
 35955                           
 35956                           	psect	text216
 35957  00A4EC                     __ptext216:
 35958                           	opt callstack 0
 35959  00A4EC                     _I2C2_MasterClearStopFlag:
 35960                           	opt callstack 9
 35961                           
 35962                           ; BSR set to: 61
 35963                           ;mcc_generated_files/i2c2_master.c: 763:     I2C2PIRbits.PCIF = 0;
 35964                           
 35965                           ; BSR set to: 61
 35966                           ;incstack = 0
 35967  00A4EC  9563               	bcf	99,2,b	;volatile
 35968                           
 35969                           ; BSR set to: 61
 35970  00A4EE  0012               	return		;funcret
 35971  00A4F0                     __end_of_I2C2_MasterClearStopFlag:
 35972                           	opt callstack 0
 35973                           
 35974 ;; *************** function _I2C2_MasterClearNackFlag *****************
 35975 ;; Defined at:
 35976 ;;		line 771 in file "mcc_generated_files/i2c2_master.c"
 35977 ;; Parameters:    Size  Location     Type
 35978 ;;		None
 35979 ;; Auto vars:     Size  Location     Type
 35980 ;;		None
 35981 ;; Return value:  Size  Location     Type
 35982 ;;                  1    wreg      void 
 35983 ;; Registers used:
 35984 ;;		None
 35985 ;; Tracked objects:
 35986 ;;		On entry : 3F/3D
 35987 ;;		On exit  : 3F/3D
 35988 ;;		Unchanged: 0/0
 35989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35994 ;;Total ram usage:        0 bytes
 35995 ;; Hardware stack levels used:    1
 35996 ;; This function calls:
 35997 ;;		Nothing
 35998 ;; This function is called by:
 35999 ;;		_I2C2_ClearInterruptFlags
 36000 ;; This function uses a non-reentrant model
 36001 ;;
 36002                           
 36003                           	psect	text217
 36004  00A4F0                     __ptext217:
 36005                           	opt callstack 0
 36006  00A4F0                     _I2C2_MasterClearNackFlag:
 36007                           	opt callstack 9
 36008                           
 36009                           ; BSR set to: 61
 36010                           ;mcc_generated_files/i2c2_master.c: 773:     I2C2ERRbits.NACKIF = 0;
 36011                           
 36012                           ; BSR set to: 61
 36013                           ;incstack = 0
 36014  00A4F0  9960               	bcf	96,4,b	;volatile
 36015                           
 36016                           ; BSR set to: 61
 36017  00A4F2  0012               	return		;funcret
 36018  00A4F4                     __end_of_I2C2_MasterClearNackFlag:
 36019                           	opt callstack 0
 36020                           
 36021 ;; *************** function _I2C2_MasterClearCountFlag *****************
 36022 ;; Defined at:
 36023 ;;		line 766 in file "mcc_generated_files/i2c2_master.c"
 36024 ;; Parameters:    Size  Location     Type
 36025 ;;		None
 36026 ;; Auto vars:     Size  Location     Type
 36027 ;;		None
 36028 ;; Return value:  Size  Location     Type
 36029 ;;                  1    wreg      void 
 36030 ;; Registers used:
 36031 ;;		None
 36032 ;; Tracked objects:
 36033 ;;		On entry : 3F/3D
 36034 ;;		On exit  : 3F/3D
 36035 ;;		Unchanged: 0/0
 36036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36041 ;;Total ram usage:        0 bytes
 36042 ;; Hardware stack levels used:    1
 36043 ;; This function calls:
 36044 ;;		Nothing
 36045 ;; This function is called by:
 36046 ;;		_I2C2_ClearInterruptFlags
 36047 ;; This function uses a non-reentrant model
 36048 ;;
 36049                           
 36050                           	psect	text218
 36051  00A4F4                     __ptext218:
 36052                           	opt callstack 0
 36053  00A4F4                     _I2C2_MasterClearCountFlag:
 36054                           	opt callstack 9
 36055                           
 36056                           ; BSR set to: 61
 36057                           ;mcc_generated_files/i2c2_master.c: 768:     I2C2PIRbits.CNTIF = 0;
 36058                           
 36059                           ; BSR set to: 61
 36060                           ;incstack = 0
 36061  00A4F4  9F63               	bcf	99,7,b	;volatile
 36062                           
 36063                           ; BSR set to: 61
 36064  00A4F6  0012               	return		;funcret
 36065  00A4F8                     __end_of_I2C2_MasterClearCountFlag:
 36066                           	opt callstack 0
 36067                           
 36068 ;; *************** function _ADCC_ThresholdISR *****************
 36069 ;; Defined at:
 36070 ;;		line 307 in file "mcc_generated_files/adcc.c"
 36071 ;; Parameters:    Size  Location     Type
 36072 ;;		None
 36073 ;; Auto vars:     Size  Location     Type
 36074 ;;		None
 36075 ;; Return value:  Size  Location     Type
 36076 ;;                  1    wreg      void 
 36077 ;; Registers used:
 36078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36079 ;; Tracked objects:
 36080 ;;		On entry : 3F/39
 36081 ;;		On exit  : 0/0
 36082 ;;		Unchanged: 0/0
 36083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36088 ;;Total ram usage:        0 bytes
 36089 ;; Hardware stack levels used:    1
 36090 ;; Hardware stack levels required when called:   11
 36091 ;; This function calls:
 36092 ;;		Absolute function
 36093 ;;		_ADCC_DefaultInterruptHandler
 36094 ;;		_adcCaptureIsr
 36095 ;; This function is called by:
 36096 ;;		_INTERRUPT_InterruptManager
 36097 ;; This function uses a non-reentrant model
 36098 ;;
 36099                           
 36100                           	psect	text219
 36101  009F8A                     __ptext219:
 36102                           	opt callstack 0
 36103  009F8A                     _ADCC_ThresholdISR:
 36104                           	opt callstack 1
 36105                           
 36106                           ; BSR set to: 57
 36107                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADTIF = 0;
 36108                           
 36109                           ; BSR set to: 61
 36110                           ;incstack = 0
 36111  009F8A  97A1               	bcf	161,3,b	;volatile
 36112                           
 36113                           ; BSR set to: 57
 36114                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADTI_InterruptHandler)
 36115  009F8C  0102               	movlb	2	; () banked
 36116  009F8E  51F8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36117  009F90  11F9               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36118  009F92  B4D8               	btfsc	status,2,c
 36119  009F94  0012               	return	
 36120                           
 36121                           ; BSR set to: 2
 36122                           ;mcc_generated_files/adcc.c: 313:         ADCC_ADTI_InterruptHandler();
 36123  009F96  D801               	call	i2u1982_48
 36124  009F98  0012               	return	
 36125  009F9A                     i2u1982_48:
 36126  009F9A  0005               	push	
 36127  009F9C  6EFA               	movwf	pclath,c
 36128  009F9E  51F8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36129  009FA0  6EFD               	movwf	tosl,c
 36130  009FA2  51F9               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36131  009FA4  6EFE               	movwf	tosh,c
 36132  009FA6  6AFF               	clrf	tosu,c
 36133  009FA8  50FA               	movf	pclath,w,c
 36134  009FAA  0012               	return		;indir
 36135  009FAC                     __end_of_ADCC_ThresholdISR:
 36136                           	opt callstack 0
 36137                           
 36138 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36139 ;; Defined at:
 36140 ;;		line 319 in file "mcc_generated_files/adcc.c"
 36141 ;; Parameters:    Size  Location     Type
 36142 ;;		None
 36143 ;; Auto vars:     Size  Location     Type
 36144 ;;		None
 36145 ;; Return value:  Size  Location     Type
 36146 ;;                  1    wreg      void 
 36147 ;; Registers used:
 36148 ;;		None
 36149 ;; Tracked objects:
 36150 ;;		On entry : 3F/2
 36151 ;;		On exit  : 3F/2
 36152 ;;		Unchanged: 3F/0
 36153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36158 ;;Total ram usage:        0 bytes
 36159 ;; Hardware stack levels used:    1
 36160 ;; This function calls:
 36161 ;;		Nothing
 36162 ;; This function is called by:
 36163 ;;		_ADCC_Initialize
 36164 ;;		_ADCC_ThresholdISR
 36165 ;; This function uses a non-reentrant model
 36166 ;;
 36167                           
 36168                           	psect	text220
 36169  00A500                     __ptext220:
 36170                           	opt callstack 0
 36171  00A500                     _ADCC_DefaultInterruptHandler:
 36172                           	opt callstack 11
 36173                           
 36174                           ; BSR set to: 2
 36175                           
 36176                           ;incstack = 0
 36177  00A500  0012               	return		;funcret
 36178  00A502                     __end_of_ADCC_DefaultInterruptHandler:
 36179                           	opt callstack 0
 36180                           
 36181 ;; *************** function _adcCaptureIsr *****************
 36182 ;; Defined at:
 36183 ;;		line 43 in file "aCapture.c"
 36184 ;; Parameters:    Size  Location     Type
 36185 ;;		None
 36186 ;; Auto vars:     Size  Location     Type
 36187 ;;  adcData         4   31[BANK0 ] unsigned long 
 36188 ;;  adcSel          1   35[BANK0 ] enum E16104
 36189 ;; Return value:  Size  Location     Type
 36190 ;;                  1    wreg      void 
 36191 ;; Registers used:
 36192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36193 ;; Tracked objects:
 36194 ;;		On entry : 3F/2
 36195 ;;		On exit  : 3D/0
 36196 ;;		Unchanged: 0/0
 36197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36199 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36201 ;;      Totals:         8       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36202 ;;Total ram usage:       13 bytes
 36203 ;; Hardware stack levels used:    1
 36204 ;; Hardware stack levels required when called:   10
 36205 ;; This function calls:
 36206 ;;		_ADCC_GetFilterValue
 36207 ;;		i2_ADCC_StartConversion
 36208 ;;		i2___lmul
 36209 ;;		i2_adcGetCh
 36210 ;;		i2_printf
 36211 ;; This function is called by:
 36212 ;;		_aCaptureInit
 36213 ;;		_ADCC_ThresholdISR
 36214 ;; This function uses a non-reentrant model
 36215 ;;
 36216                           
 36217                           	psect	text221
 36218  0057B2                     __ptext221:
 36219                           	opt callstack 0
 36220  0057B2                     _adcCaptureIsr:
 36221                           	opt callstack 1
 36222                           
 36223                           ; BSR set to: 2
 36224                           ;aCapture.c: 46:     uint32_t adcData;;aCapture.c: 47:     aSrcTyp adcSel;;aCapture.c: 4
      +                          9:     adcData = ADCC_GetFilterValue();
 36225                           
 36226                           ; BSR set to: 2
 36227                           ;incstack = 0
 36228  0057B2  ECB3  F050         	call	_ADCC_GetFilterValue	;wreg free
 36229  0057B6  0060  F004  F07F   	movff	?_ADCC_GetFilterValue,adcCaptureIsr@adcData
 36230  0057BC  0060  F008  F080   	movff	?_ADCC_GetFilterValue+1,adcCaptureIsr@adcData+1
 36231  0057C2  0100               	movlb	0	; () banked
 36232  0057C4  6B81               	clrf	(adcCaptureIsr@adcData+2)& (0+255),b
 36233  0057C6  6B82               	clrf	(adcCaptureIsr@adcData+3)& (0+255),b
 36234                           
 36235                           ; BSR set to: 0
 36236                           ;aCapture.c: 51:     adcSel=curASrc;
 36237  0057C8  0060  F330  F083   	movff	_curASrc,adcCaptureIsr@adcSel
 36238                           
 36239                           ; BSR set to: 0
 36240                           ;aCapture.c: 54:     curASrc++;
 36241  0057CE  2BCC               	incf	_curASrc& (0+255),f,b
 36242                           
 36243                           ; BSR set to: 0
 36244                           ;aCapture.c: 55:     if (curASrc==3){
 36245  0057D0  0E03               	movlw	3
 36246  0057D2  19CC               	xorwf	_curASrc& (0+255),w,b
 36247  0057D4  A4D8               	btfss	status,2,c
 36248  0057D6  D002               	goto	i2l18704
 36249                           
 36250                           ; BSR set to: 0
 36251                           ;aCapture.c: 56:         curASrc=0;
 36252  0057D8  0E00               	movlw	0
 36253  0057DA  6FCC               	movwf	_curASrc& (0+255),b
 36254  0057DC                     i2l18704:
 36255                           
 36256                           ; BSR set to: 0
 36257                           ;aCapture.c: 58:     if (curASrc <= VolPSensor ){
 36258  0057DC  0E02               	movlw	2
 36259  0057DE  61CC               	cpfslt	_curASrc& (0+255),b
 36260  0057E0  D004               	goto	i2l1939
 36261                           
 36262                           ; BSR set to: 0
 36263                           ;aCapture.c: 59:         ADCON0bits.ADON = 0;
 36264  0057E2  013E               	movlb	62	; () banked
 36265  0057E4  9FF8               	bcf	248,7,b	;volatile
 36266                           
 36267                           ; BSR set to: 62
 36268                           ;aCapture.c: 61:         ADREF = 0x00;
 36269  0057E6  0E00               	movlw	0
 36270  0057E8  D003               	goto	L56
 36271  0057EA                     i2l1939:
 36272                           
 36273                           ; BSR set to: 0
 36274                           ;aCapture.c: 63:         ADCON0bits.ADON = 0;
 36275  0057EA  013E               	movlb	62	; () banked
 36276  0057EC  9FF8               	bcf	248,7,b	;volatile
 36277                           
 36278                           ; BSR set to: 62
 36279                           ;aCapture.c: 65:         ADREF = 0x03;
 36280  0057EE  0E03               	movlw	3
 36281  0057F0                     L56:
 36282  0057F0  6FFD               	movwf	253,b	;volatile
 36283                           
 36284                           ; BSR set to: 62
 36285                           ;aCapture.c: 67:     ADCC_StartConversion(adcGetCh(curASrc));
 36286  0057F2  0100               	movlb	0	; () banked
 36287  0057F4  51CC               	movf	_curASrc& (0+255),w,b
 36288  0057F6  EC5B  F048         	call	i2_adcGetCh
 36289  0057FA  EC4E  F051         	call	i2_ADCC_StartConversion
 36290                           
 36291                           ; BSR set to: 62
 36292                           ;aCapture.c: 70:     if (adcSel<3){
 36293  0057FE  0E03               	movlw	3
 36294  005800  0100               	movlb	0	; () banked
 36295  005802  6183               	cpfslt	adcCaptureIsr@adcSel& (0+255),b
 36296  005804  D164               	goto	i2l1941
 36297                           
 36298                           ; BSR set to: 0
 36299                           ;aCapture.c: 71:         resultTbl[adcSel]=adcData;
 36300  005806  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36301  005808  0D04               	mullw	4
 36302  00580A  0E73               	movlw	low _resultTbl
 36303  00580C  24F3               	addwf	243,w,c
 36304  00580E  6ED9               	movwf	fsr2l,c
 36305  005810  0E02               	movlw	high _resultTbl
 36306  005812  20F4               	addwfc	prodh,w,c
 36307  005814  6EDA               	movwf	fsr2h,c
 36308  005816  0060  F1FF  FFDE   	movff	adcCaptureIsr@adcData,postinc2
 36309  00581C  0060  F203  FFDE   	movff	adcCaptureIsr@adcData+1,postinc2
 36310  005822  0060  F207  FFDE   	movff	adcCaptureIsr@adcData+2,postinc2
 36311  005828  0060  F20B  FFDE   	movff	adcCaptureIsr@adcData+3,postinc2
 36312                           
 36313                           ; BSR set to: 0
 36314                           ;aCapture.c: 73:         resultTblVal[adcSel]++;
 36315  00582E  0E24               	movlw	low _resultTblVal
 36316  005830  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36317  005832  6ED9               	movwf	fsr2l,c
 36318  005834  6ADA               	clrf	fsr2h,c
 36319  005836  0E02               	movlw	high _resultTblVal
 36320  005838  22DA               	addwfc	fsr2h,f,c
 36321  00583A  2ADF               	incf	indf2,f,c
 36322                           
 36323                           ; BSR set to: 0
 36324                           ;aCapture.c: 74:         if (resultTblVal[adcSel]==0){
 36325  00583C  0E24               	movlw	low _resultTblVal
 36326  00583E  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36327  005840  6ED9               	movwf	fsr2l,c
 36328  005842  6ADA               	clrf	fsr2h,c
 36329  005844  0E02               	movlw	high _resultTblVal
 36330  005846  22DA               	addwfc	fsr2h,f,c
 36331  005848  50DF               	movf	indf2,w,c
 36332  00584A  A4D8               	btfss	status,2,c
 36333  00584C  D008               	goto	i2l18724
 36334                           
 36335                           ; BSR set to: 0
 36336                           ;aCapture.c: 75:             resultTblVal[adcSel]=1;
 36337  00584E  0E24               	movlw	low _resultTblVal
 36338  005850  2583               	addwf	adcCaptureIsr@adcSel& (0+255),w,b
 36339  005852  6ED9               	movwf	fsr2l,c
 36340  005854  6ADA               	clrf	fsr2h,c
 36341  005856  0E02               	movlw	high _resultTblVal
 36342  005858  22DA               	addwfc	fsr2h,f,c
 36343  00585A  0E01               	movlw	1
 36344  00585C  6EDF               	movwf	indf2,c
 36345  00585E                     i2l18724:
 36346                           
 36347                           ; BSR set to: 0
 36348                           ;aCapture.c: 78:         if (adcSel == MainPSensor) {
 36349  00585E  5183               	movf	adcCaptureIsr@adcSel& (0+255),w,b
 36350  005860  A4D8               	btfss	status,2,c
 36351  005862  0012               	return	
 36352                           
 36353                           ; BSR set to: 0
 36354                           ;aCapture.c: 81:             resultTbl[Flt0PSensor]=(3*resultTbl[Flt0PSensor]+(adcData<<
      +                          2))>>2;
 36355  005864  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36356  00586A  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36357  005870  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36358  005876  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36359  00587C  0E02               	movlw	2
 36360  00587E                     i2u1924_45:
 36361  00587E  90D8               	bcf	status,0,c
 36362  005880  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36363  005882  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36364  005884  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36365  005886  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36366  005888  2EE8               	decfsz	wreg,f,c
 36367  00588A  D7F9               	goto	i2u1924_45
 36368  00588C  0060  F9FC  F001   	movff	_resultTbl+12,i2___lmul@multiplier
 36369  005892  0060  FA00  F002   	movff	_resultTbl+13,i2___lmul@multiplier+1
 36370  005898  0060  FA04  F003   	movff	_resultTbl+14,i2___lmul@multiplier+2
 36371  00589E  0060  FA08  F004   	movff	_resultTbl+15,i2___lmul@multiplier+3
 36372  0058A4  0E03               	movlw	3
 36373  0058A6  6E05               	movwf	i2___lmul@multiplicand^0,c
 36374  0058A8  0E00               	movlw	0
 36375  0058AA  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36376  0058AC  0E00               	movlw	0
 36377  0058AE  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36378  0058B0  0E00               	movlw	0
 36379  0058B2  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36380  0058B4  EC74  F046         	call	i2___lmul	;wreg free
 36381  0058B8  5057               	movf	??_adcCaptureIsr^0,w,c
 36382  0058BA  2401               	addwf	?i2___lmul^0,w,c
 36383  0058BC  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36384  0058BE  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36385  0058C0  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36386  0058C2  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36387  0058C4  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36388  0058C6  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36389  0058C8  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36390  0058CA  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36391  0058CC  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36392  0058CE  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36393  0058D0  0E03               	movlw	3
 36394  0058D2  D005               	goto	i2u1925_40
 36395  0058D4                     i2u1925_45:
 36396  0058D4  90D8               	bcf	status,0,c
 36397  0058D6  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36398  0058D8  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36399  0058DA  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36400  0058DC  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36401  0058DE                     i2u1925_40:
 36402  0058DE  2EE8               	decfsz	wreg,f,c
 36403  0058E0  D7F9               	goto	i2u1925_45
 36404  0058E2  0060  F16C  F27F   	movff	??_adcCaptureIsr+4,_resultTbl+12
 36405  0058E8  0060  F170  F280   	movff	??_adcCaptureIsr+5,_resultTbl+13
 36406  0058EE  0060  F174  F281   	movff	??_adcCaptureIsr+6,_resultTbl+14
 36407  0058F4  0060  F178  F282   	movff	??_adcCaptureIsr+7,_resultTbl+15
 36408                           
 36409                           ;aCapture.c: 83:             resultTbl[Flt1PSensor]=(15*resultTbl[Flt1PSensor]+(adcData<
      +                          <4))>>4;
 36410  0058FA  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36411  005900  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36412  005906  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36413  00590C  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36414  005912  0E04               	movlw	4
 36415  005914                     i2u1926_45:
 36416  005914  90D8               	bcf	status,0,c
 36417  005916  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36418  005918  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36419  00591A  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36420  00591C  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36421  00591E  2EE8               	decfsz	wreg,f,c
 36422  005920  D7F9               	goto	i2u1926_45
 36423  005922  0060  FA0C  F001   	movff	_resultTbl+16,i2___lmul@multiplier
 36424  005928  0060  FA10  F002   	movff	_resultTbl+17,i2___lmul@multiplier+1
 36425  00592E  0060  FA14  F003   	movff	_resultTbl+18,i2___lmul@multiplier+2
 36426  005934  0060  FA18  F004   	movff	_resultTbl+19,i2___lmul@multiplier+3
 36427  00593A  0E0F               	movlw	15
 36428  00593C  6E05               	movwf	i2___lmul@multiplicand^0,c
 36429  00593E  0E00               	movlw	0
 36430  005940  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36431  005942  0E00               	movlw	0
 36432  005944  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36433  005946  0E00               	movlw	0
 36434  005948  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36435  00594A  EC74  F046         	call	i2___lmul	;wreg free
 36436  00594E  5057               	movf	??_adcCaptureIsr^0,w,c
 36437  005950  2401               	addwf	?i2___lmul^0,w,c
 36438  005952  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36439  005954  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36440  005956  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36441  005958  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36442  00595A  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36443  00595C  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36444  00595E  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36445  005960  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36446  005962  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36447  005964  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36448  005966  0E05               	movlw	5
 36449  005968  D005               	goto	i2u1927_40
 36450  00596A                     i2u1927_45:
 36451  00596A  90D8               	bcf	status,0,c
 36452  00596C  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36453  00596E  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36454  005970  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36455  005972  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36456  005974                     i2u1927_40:
 36457  005974  2EE8               	decfsz	wreg,f,c
 36458  005976  D7F9               	goto	i2u1927_45
 36459  005978  0060  F16C  F283   	movff	??_adcCaptureIsr+4,_resultTbl+16
 36460  00597E  0060  F170  F284   	movff	??_adcCaptureIsr+5,_resultTbl+17
 36461  005984  0060  F174  F285   	movff	??_adcCaptureIsr+6,_resultTbl+18
 36462  00598A  0060  F178  F286   	movff	??_adcCaptureIsr+7,_resultTbl+19
 36463                           
 36464                           ;aCapture.c: 85:             resultTbl[Flt2PSensor]=(63*resultTbl[Flt2PSensor]+(adcData<
      +                          <6))>>6;
 36465  005990  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36466  005996  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36467  00599C  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36468  0059A2  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36469  0059A8  0E06               	movlw	6
 36470  0059AA                     i2u1928_45:
 36471  0059AA  90D8               	bcf	status,0,c
 36472  0059AC  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36473  0059AE  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36474  0059B0  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36475  0059B2  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36476  0059B4  2EE8               	decfsz	wreg,f,c
 36477  0059B6  D7F9               	goto	i2u1928_45
 36478  0059B8  0060  FA1C  F001   	movff	_resultTbl+20,i2___lmul@multiplier
 36479  0059BE  0060  FA20  F002   	movff	_resultTbl+21,i2___lmul@multiplier+1
 36480  0059C4  0060  FA24  F003   	movff	_resultTbl+22,i2___lmul@multiplier+2
 36481  0059CA  0060  FA28  F004   	movff	_resultTbl+23,i2___lmul@multiplier+3
 36482  0059D0  0E3F               	movlw	63
 36483  0059D2  6E05               	movwf	i2___lmul@multiplicand^0,c
 36484  0059D4  0E00               	movlw	0
 36485  0059D6  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36486  0059D8  0E00               	movlw	0
 36487  0059DA  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36488  0059DC  0E00               	movlw	0
 36489  0059DE  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36490  0059E0  EC74  F046         	call	i2___lmul	;wreg free
 36491  0059E4  5057               	movf	??_adcCaptureIsr^0,w,c
 36492  0059E6  2401               	addwf	?i2___lmul^0,w,c
 36493  0059E8  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36494  0059EA  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36495  0059EC  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36496  0059EE  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36497  0059F0  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36498  0059F2  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36499  0059F4  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36500  0059F6  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36501  0059F8  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36502  0059FA  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36503  0059FC  0E07               	movlw	7
 36504  0059FE  D005               	goto	i2u1929_40
 36505  005A00                     i2u1929_45:
 36506  005A00  90D8               	bcf	status,0,c
 36507  005A02  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36508  005A04  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36509  005A06  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36510  005A08  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36511  005A0A                     i2u1929_40:
 36512  005A0A  2EE8               	decfsz	wreg,f,c
 36513  005A0C  D7F9               	goto	i2u1929_45
 36514  005A0E  0060  F16C  F287   	movff	??_adcCaptureIsr+4,_resultTbl+20
 36515  005A14  0060  F170  F288   	movff	??_adcCaptureIsr+5,_resultTbl+21
 36516  005A1A  0060  F174  F289   	movff	??_adcCaptureIsr+6,_resultTbl+22
 36517  005A20  0060  F178  F28A   	movff	??_adcCaptureIsr+7,_resultTbl+23
 36518                           
 36519                           ;aCapture.c: 87:             resultTbl[Flt3PSensor]=(511*resultTbl[Flt3PSensor]+(adcData
      +                          <<9))>>9;
 36520  005A26  0060  F1FC  F057   	movff	adcCaptureIsr@adcData,??_adcCaptureIsr
 36521  005A2C  0060  F200  F058   	movff	adcCaptureIsr@adcData+1,??_adcCaptureIsr+1
 36522  005A32  0060  F204  F059   	movff	adcCaptureIsr@adcData+2,??_adcCaptureIsr+2
 36523  005A38  0060  F208  F05A   	movff	adcCaptureIsr@adcData+3,??_adcCaptureIsr+3
 36524  005A3E  0E09               	movlw	9
 36525  005A40                     i2u1930_45:
 36526  005A40  90D8               	bcf	status,0,c
 36527  005A42  3657               	rlcf	??_adcCaptureIsr^0,f,c
 36528  005A44  3658               	rlcf	(??_adcCaptureIsr+1)^0,f,c
 36529  005A46  3659               	rlcf	(??_adcCaptureIsr+2)^0,f,c
 36530  005A48  365A               	rlcf	(??_adcCaptureIsr+3)^0,f,c
 36531  005A4A  2EE8               	decfsz	wreg,f,c
 36532  005A4C  D7F9               	goto	i2u1930_45
 36533  005A4E  0060  FA2C  F001   	movff	_resultTbl+24,i2___lmul@multiplier
 36534  005A54  0060  FA30  F002   	movff	_resultTbl+25,i2___lmul@multiplier+1
 36535  005A5A  0060  FA34  F003   	movff	_resultTbl+26,i2___lmul@multiplier+2
 36536  005A60  0060  FA38  F004   	movff	_resultTbl+27,i2___lmul@multiplier+3
 36537  005A66  0EFF               	movlw	255
 36538  005A68  6E05               	movwf	i2___lmul@multiplicand^0,c
 36539  005A6A  0E01               	movlw	1
 36540  005A6C  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 36541  005A6E  0E00               	movlw	0
 36542  005A70  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 36543  005A72  0E00               	movlw	0
 36544  005A74  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 36545  005A76  EC74  F046         	call	i2___lmul	;wreg free
 36546  005A7A  5057               	movf	??_adcCaptureIsr^0,w,c
 36547  005A7C  2401               	addwf	?i2___lmul^0,w,c
 36548  005A7E  6E5B               	movwf	(??_adcCaptureIsr+4)^0,c
 36549  005A80  5058               	movf	(??_adcCaptureIsr+1)^0,w,c
 36550  005A82  2002               	addwfc	(?i2___lmul+1)^0,w,c
 36551  005A84  6E5C               	movwf	(??_adcCaptureIsr+5)^0,c
 36552  005A86  5059               	movf	(??_adcCaptureIsr+2)^0,w,c
 36553  005A88  2003               	addwfc	(?i2___lmul+2)^0,w,c
 36554  005A8A  6E5D               	movwf	(??_adcCaptureIsr+6)^0,c
 36555  005A8C  505A               	movf	(??_adcCaptureIsr+3)^0,w,c
 36556  005A8E  2004               	addwfc	(?i2___lmul+3)^0,w,c
 36557  005A90  6E5E               	movwf	(??_adcCaptureIsr+7)^0,c
 36558  005A92  0E0A               	movlw	10
 36559  005A94  D005               	goto	i2u1931_40
 36560  005A96                     i2u1931_45:
 36561  005A96  90D8               	bcf	status,0,c
 36562  005A98  325E               	rrcf	(??_adcCaptureIsr+7)^0,f,c
 36563  005A9A  325D               	rrcf	(??_adcCaptureIsr+6)^0,f,c
 36564  005A9C  325C               	rrcf	(??_adcCaptureIsr+5)^0,f,c
 36565  005A9E  325B               	rrcf	(??_adcCaptureIsr+4)^0,f,c
 36566  005AA0                     i2u1931_40:
 36567  005AA0  2EE8               	decfsz	wreg,f,c
 36568  005AA2  D7F9               	goto	i2u1931_45
 36569  005AA4  0060  F16C  F28B   	movff	??_adcCaptureIsr+4,_resultTbl+24
 36570  005AAA  0060  F170  F28C   	movff	??_adcCaptureIsr+5,_resultTbl+25
 36571  005AB0  0060  F174  F28D   	movff	??_adcCaptureIsr+6,_resultTbl+26
 36572  005AB6  0060  F178  F28E   	movff	??_adcCaptureIsr+7,_resultTbl+27
 36573                           
 36574                           ; BSR set to: 0
 36575                           ;aCapture.c: 89:             resultTblVal[Flt0PSensor]=resultTblVal[MainPSensor];
 36576  005ABC  C224  F227         	movff	_resultTblVal,_resultTblVal+3
 36577                           
 36578                           ; BSR set to: 0
 36579                           ;aCapture.c: 90:             resultTblVal[Flt1PSensor]=resultTblVal[MainPSensor];
 36580  005AC0  C224  F228         	movff	_resultTblVal,_resultTblVal+4
 36581                           
 36582                           ; BSR set to: 0
 36583                           ;aCapture.c: 91:             resultTblVal[Flt2PSensor]=resultTblVal[MainPSensor];
 36584  005AC4  C224  F229         	movff	_resultTblVal,_resultTblVal+5
 36585                           
 36586                           ; BSR set to: 0
 36587                           ;aCapture.c: 92:             resultTblVal[Flt3PSensor]=resultTblVal[MainPSensor];
 36588  005AC8  C224  F22A         	movff	_resultTblVal,_resultTblVal+6
 36589  005ACC  0012               	return	
 36590  005ACE                     i2l1941:
 36591                           
 36592                           ; BSR set to: 0
 36593                           ;aCapture.c: 96:         LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;printf
      +                          ("Fatal %d",101);
 36594  005ACE  94BA               	bcf	186,2,c	;volatile
 36595  005AD0  96BC               	bcf	188,3,c	;volatile
 36596  005AD2  96BA               	bcf	186,3,c	;volatile
 36597                           
 36598                           ; BSR set to: 0
 36599  005AD4  0EB1               	movlw	low STR_28
 36600  005AD6  6F7B               	movwf	i2printf@fmt& (0+255),b
 36601  005AD8  0EFF               	movlw	high STR_28
 36602  005ADA  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 36603  005ADC  0E00               	movlw	0
 36604  005ADE  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 36605  005AE0  0E65               	movlw	101
 36606  005AE2  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 36607  005AE4  EC06  F04F         	call	i2_printf	;wreg free
 36608  005AE8  0012               	return		;funcret
 36609  005AEA                     __end_of_adcCaptureIsr:
 36610                           	opt callstack 0
 36611                           
 36612 ;; *************** function i2_adcGetCh *****************
 36613 ;; Defined at:
 36614 ;;		line 25 in file "aCapture.c"
 36615 ;; Parameters:    Size  Location     Type
 36616 ;;  sel             1    wreg     enum E16104
 36617 ;; Auto vars:     Size  Location     Type
 36618 ;;  sel             1   85[COMRAM] enum E16104
 36619 ;; Return value:  Size  Location     Type
 36620 ;;                  1    wreg      enum E16053
 36621 ;; Registers used:
 36622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36623 ;; Tracked objects:
 36624 ;;		On entry : 3F/0
 36625 ;;		On exit  : 0/0
 36626 ;;		Unchanged: 0/0
 36627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36631 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36632 ;;Total ram usage:        3 bytes
 36633 ;; Hardware stack levels used:    1
 36634 ;; Hardware stack levels required when called:    9
 36635 ;; This function calls:
 36636 ;;		i2_printf
 36637 ;; This function is called by:
 36638 ;;		_adcCaptureIsr
 36639 ;; This function uses a non-reentrant model
 36640 ;;
 36641                           
 36642                           	psect	text222
 36643  0090B6                     __ptext222:
 36644                           	opt callstack 0
 36645  0090B6                     i2_adcGetCh:
 36646                           	opt callstack 1
 36647                           
 36648                           ;incstack = 0
 36649                           ;i2adcGetCh@sel stored from wreg
 36650  0090B6  6E56               	movwf	i2adcGetCh@sel^0,c
 36651                           
 36652                           ;aCapture.c: 26:     switch (sel){
 36653  0090B8  D016               	goto	i2l18182
 36654  0090BA                     i2l18156:
 36655                           
 36656                           ;aCapture.c: 28:             return channel_ANE1;
 36657  0090BA  0E21               	movlw	33
 36658  0090BC  0012               	return	
 36659  0090BE                     i2l18162:
 36660                           
 36661                           ;aCapture.c: 31:             return channel_ANE2;
 36662  0090BE  0E22               	movlw	34
 36663  0090C0  0012               	return	
 36664  0090C2                     i2l18168:
 36665                           
 36666                           ;aCapture.c: 34:             return channel_ANE0;
 36667  0090C2  0E20               	movlw	32
 36668  0090C4  0012               	return	
 36669  0090C6                     i2l1935:
 36670                           
 36671                           ;aCapture.c: 38:            LATAbits.LATA2 = 0;LATCbits.LATC3 = 0;LATAbits.LATA3 = 0;pri
      +                          ntf("Fatal %d",100);
 36672  0090C6  94BA               	bcf	186,2,c	;volatile
 36673  0090C8  96BC               	bcf	188,3,c	;volatile
 36674  0090CA  96BA               	bcf	186,3,c	;volatile
 36675  0090CC  0EB1               	movlw	low STR_28
 36676  0090CE  0100               	movlb	0	; () banked
 36677  0090D0  6F7B               	movwf	i2printf@fmt& (0+255),b
 36678  0090D2  0EFF               	movlw	high STR_28
 36679  0090D4  6F7C               	movwf	(i2printf@fmt+1)& (0+255),b
 36680  0090D6  0E00               	movlw	0
 36681  0090D8  6F7E               	movwf	(?i2_printf+3)& (0+255),b
 36682  0090DA  0E64               	movlw	100
 36683  0090DC  6F7D               	movwf	(?i2_printf+2)& (0+255),b
 36684  0090DE  EC06  F04F         	call	i2_printf	;wreg free
 36685                           
 36686                           ; BSR set to: 2
 36687                           ;aCapture.c: 39:            return -1;
 36688  0090E2  0EFF               	movlw	255
 36689  0090E4  0012               	return	
 36690  0090E6                     i2l18182:
 36691  0090E6  5056               	movf	i2adcGetCh@sel^0,w,c
 36692  0090E8  6E54               	movwf	??i2_adcGetCh^0,c
 36693  0090EA  6A55               	clrf	(??i2_adcGetCh+1)^0,c
 36694                           
 36695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36696                           ; Switch size 1, requested type "simple"
 36697                           ; Number of cases is 1, Range of values is 0 to 0
 36698                           ; switch strategies available:
 36699                           ; Name         Instructions Cycles
 36700                           ; simple_byte            4     3 (average)
 36701                           ;	Chosen strategy is simple_byte
 36702  0090EC  5055               	movf	(??i2_adcGetCh+1)^0,w,c
 36703  0090EE  0A00               	xorlw	0	; case 0
 36704  0090F0  A4D8               	btfss	status,2,c
 36705  0090F2  D7E9               	goto	i2l1935
 36706                           
 36707                           ; Switch size 1, requested type "simple"
 36708                           ; Number of cases is 3, Range of values is 0 to 2
 36709                           ; switch strategies available:
 36710                           ; Name         Instructions Cycles
 36711                           ; simple_byte           10     6 (average)
 36712                           ;	Chosen strategy is simple_byte
 36713  0090F4  5054               	movf	??i2_adcGetCh^0,w,c
 36714  0090F6  0A00               	xorlw	0	; case 0
 36715  0090F8  B4D8               	btfsc	status,2,c
 36716  0090FA  D7DF               	goto	i2l18156
 36717  0090FC  0A01               	xorlw	1	; case 1
 36718  0090FE  B4D8               	btfsc	status,2,c
 36719  009100  D7DE               	goto	i2l18162
 36720  009102  0A03               	xorlw	3	; case 2
 36721  009104  B4D8               	btfsc	status,2,c
 36722  009106  D7DD               	goto	i2l18168
 36723  009108  D7DE               	goto	i2l1935
 36724  00910A                     __end_ofi2_adcGetCh:
 36725                           	opt callstack 0
 36726                           
 36727 ;; *************** function i2_printf *****************
 36728 ;; Defined at:
 36729 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 36730 ;; Parameters:    Size  Location     Type
 36731 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
 36732 ;;		 -> STR_104(10), STR_101(10), STR_100(8), STR_97(10), 
 36733 ;;		 -> STR_96(8), STR_93(10), STR_92(6), STR_90(7), 
 36734 ;;		 -> STR_85(27), STR_84(9), STR_82(10), STR_72(10), 
 36735 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 36736 ;;		 -> STR_65(38), STR_63(9), STR_62(9), STR_61(8), 
 36737 ;;		 -> STR_34(9), STR_33(9), STR_32(9), STR_31(9), 
 36738 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(49), 
 36739 ;;		 -> STR_26(20), STR_25(36), STR_24(27), STR_23(20), 
 36740 ;;		 -> STR_22(28), STR_21(5), STR_19(16), STR_18(14), 
 36741 ;;		 -> STR_17(33), STR_16(20), STR_15(74), STR_14(40), 
 36742 ;;		 -> STR_13(47), STR_12(7), STR_11(7), STR_10(55), 
 36743 ;;		 -> STR_4(20), STR_3(11), STR_1(27), 
 36744 ;; Auto vars:     Size  Location     Type
 36745 ;;  printf          2   81[COMRAM] PTR void [1]
 36746 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 36747 ;;  printf          2    0        int 
 36748 ;; Return value:  Size  Location     Type
 36749 ;;                  2   27[BANK0 ] int 
 36750 ;; Registers used:
 36751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36752 ;; Tracked objects:
 36753 ;;		On entry : 3F/0
 36754 ;;		On exit  : 3F/2
 36755 ;;		Unchanged: 0/0
 36756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36758 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36760 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36761 ;;Total ram usage:        8 bytes
 36762 ;; Hardware stack levels used:    1
 36763 ;; Hardware stack levels required when called:    8
 36764 ;; This function calls:
 36765 ;;		i2_vfprintf
 36766 ;; This function is called by:
 36767 ;;		_adcCaptureIsr
 36768 ;;		i2_adcGetCh
 36769 ;;		i2_aCaptGetResult
 36770 ;;		i2_I2C2_NackCb
 36771 ;; This function uses a non-reentrant model
 36772 ;;
 36773                           
 36774                           	psect	text223
 36775  009E0C                     __ptext223:
 36776                           	opt callstack 0
 36777  009E0C                     i2_printf:
 36778                           	opt callstack 1
 36779                           
 36780                           ; BSR set to: 0
 36781                           
 36782                           ;incstack = 0
 36783  009E0C  0E7D               	movlw	low (?i2_printf+2)
 36784  009E0E  6E52               	movwf	i2printf@ap^0,c
 36785  009E10  6A53               	clrf	(i2printf@ap+1)^0,c
 36786                           
 36787                           ; BSR set to: 0
 36788  009E12  0E00               	movlw	0
 36789  009E14  6F75               	movwf	i2vfprintf@fp& (0+255),b
 36790  009E16  0E00               	movlw	0
 36791  009E18  6F76               	movwf	(i2vfprintf@fp+1)& (0+255),b
 36792  009E1A  0060  F1EC  F077   	movff	i2printf@fmt,i2vfprintf@fmt
 36793  009E20  0060  F1F0  F078   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 36794  009E26  0E52               	movlw	low i2printf@ap
 36795  009E28  6F79               	movwf	i2vfprintf@ap& (0+255),b
 36796  009E2A  6B7A               	clrf	(i2vfprintf@ap+1)& (0+255),b
 36797  009E2C  EC1B  F045         	call	i2_vfprintf	;wreg free
 36798                           
 36799                           ; BSR set to: 2
 36800  009E30  0012               	return		;funcret
 36801  009E32                     __end_ofi2_printf:
 36802                           	opt callstack 0
 36803                           
 36804 ;; *************** function i2_vfprintf *****************
 36805 ;; Defined at:
 36806 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36807 ;; Parameters:    Size  Location     Type
 36808 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
 36809 ;;		 -> sprintf@f(6), NULL(0), 
 36810 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 36811 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 36812 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 36813 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 36814 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 36815 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 36816 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 36817 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 36818 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 36819 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 36820 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 36821 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 36822 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 36823 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 36824 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 36825 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 36826 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 36827 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 36828 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 36829 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 36830 ;;		 -> STR_1(27), 
 36831 ;;  ap              2   25[BANK0 ] PTR PTR void 
 36832 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 36833 ;; Auto vars:     Size  Location     Type
 36834 ;;  vfprintf        2   77[COMRAM] PTR unsigned char 
 36835 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 36836 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 36837 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 36838 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 36839 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 36840 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 36841 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 36842 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 36843 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 36844 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 36845 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 36846 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 36847 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 36848 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 36849 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 36850 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 36851 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 36852 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 36853 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 36854 ;;		 -> STR_1(27), 
 36855 ;; Return value:  Size  Location     Type
 36856 ;;                  2   21[BANK0 ] int 
 36857 ;; Registers used:
 36858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36859 ;; Tracked objects:
 36860 ;;		On entry : 3F/0
 36861 ;;		On exit  : 3F/2
 36862 ;;		Unchanged: 0/0
 36863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36864 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36867 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36868 ;;Total ram usage:        8 bytes
 36869 ;; Hardware stack levels used:    1
 36870 ;; Hardware stack levels required when called:    7
 36871 ;; This function calls:
 36872 ;;		i2_vfpfcnvrt
 36873 ;; This function is called by:
 36874 ;;		i2_printf
 36875 ;; This function uses a non-reentrant model
 36876 ;;
 36877                           
 36878                           	psect	text224
 36879  008A36                     __ptext224:
 36880                           	opt callstack 0
 36881  008A36                     i2_vfprintf:
 36882                           	opt callstack 1
 36883                           
 36884                           ; BSR set to: 0
 36885                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 36886                           
 36887                           ; BSR set to: 2
 36888                           ;incstack = 0
 36889  008A36  0060  F1DC  F04E   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 36890  008A3C  0060  F1E0  F04F   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 36891                           
 36892                           ; BSR set to: 0
 36893                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 36894  008A42  0E00               	movlw	0
 36895  008A44  0102               	movlb	2	; () banked
 36896  008A46  6F33               	movwf	(_nout+1)& (0+255),b
 36897  008A48  0E00               	movlw	0
 36898  008A4A  6F32               	movwf	_nout& (0+255),b
 36899                           
 36900                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 36901  008A4C  D015               	goto	i2l16992
 36902  008A4E                     i2l16990:
 36903                           
 36904                           ; BSR set to: 2
 36905                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 36906  008A4E  0060  F1D4  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 36907  008A54  0060  F1D8  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 36908  008A5A  0E4E               	movlw	low i2vfprintf@cfmt
 36909  008A5C  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 36910  008A5E  0060  F1E4  F048   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 36911  008A64  0060  F1E8  F049   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 36912  008A6A  EC62  F024         	call	i2_vfpfcnvrt	;wreg free
 36913  008A6E  5045               	movf	?i2_vfpfcnvrt^0,w,c
 36914  008A70  0102               	movlb	2	; () banked
 36915  008A72  2732               	addwf	_nout& (0+255),f,b
 36916  008A74  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 36917  008A76  2333               	addwfc	(_nout+1)& (0+255),f,b
 36918  008A78                     i2l16992:
 36919                           
 36920                           ; BSR set to: 2
 36921                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 36922  008A78  0060  F13B  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 36923  008A7E  0060  F13F  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 36924  008A84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36925  008A84  6AF8               	clrf	tblptru,c
 36926  008A86                     	endif
 36927  008A86                     	if	0	;tblptru may be non-zero
 36928  008A86                     	endif
 36929  008A86  0008               	tblrd		*
 36930  008A88  50F5               	movf	tablat,w,c
 36931  008A8A  0900               	iorlw	0
 36932  008A8C  A4D8               	btfss	status,2,c
 36933  008A8E  D7DF               	goto	i2l16990
 36934                           
 36935                           ; BSR set to: 2
 36936                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 36937  008A90  0060  F8C8  F075   	movff	_nout,?i2_vfprintf
 36938  008A96  0060  F8CC  F076   	movff	_nout+1,?i2_vfprintf+1
 36939                           
 36940                           ; BSR set to: 2
 36941  008A9C  0012               	return		;funcret
 36942  008A9E                     __end_ofi2_vfprintf:
 36943                           	opt callstack 0
 36944                           
 36945 ;; *************** function i2_vfpfcnvrt *****************
 36946 ;; Defined at:
 36947 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36948 ;; Parameters:    Size  Location     Type
 36949 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 36950 ;;		 -> sprintf@f(6), NULL(0), 
 36951 ;;  fmt             1   70[COMRAM] PTR PTR unsigned char 
 36952 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 36953 ;;  ap              2   71[COMRAM] PTR PTR void 
 36954 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 36955 ;; Auto vars:     Size  Location     Type
 36956 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 36957 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 36958 ;;  vfpfcnvrt       4    0        long long 
 36959 ;;  vfpfcnvrt       3    0        PTR void 
 36960 ;;  vfpfcnvrt       3    0        unsigned char [3]
 36961 ;;  vfpfcnvrt       3    0        PTR unsigned char 
 36962 ;;  vfpfcnvrt       2   17[BANK0 ] int 
 36963 ;;  vfpfcnvrt       2    0        int 
 36964 ;;  vfpfcnvrt       1   16[BANK0 ] unsigned char 
 36965 ;; Return value:  Size  Location     Type
 36966 ;;                  2   68[COMRAM] int 
 36967 ;; Registers used:
 36968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36969 ;; Tracked objects:
 36970 ;;		On entry : 3D/2
 36971 ;;		On exit  : 0/0
 36972 ;;		Unchanged: 0/0
 36973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36974 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36975 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36976 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36977 ;;      Totals:         9      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36978 ;;Total ram usage:       30 bytes
 36979 ;; Hardware stack levels used:    1
 36980 ;; Hardware stack levels required when called:    6
 36981 ;; This function calls:
 36982 ;;		i2_atoi
 36983 ;;		i2_dtoa
 36984 ;;		i2_fputc
 36985 ;;		i2_isdigit
 36986 ;;		i2_xtoa
 36987 ;; This function is called by:
 36988 ;;		i2_vfprintf
 36989 ;; This function uses a non-reentrant model
 36990 ;;
 36991                           
 36992                           	psect	text225
 36993  0048C4                     __ptext225:
 36994                           	opt callstack 0
 36995  0048C4                     i2_vfpfcnvrt:
 36996                           	opt callstack 1
 36997                           
 36998                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 36999                           
 37000                           ; BSR set to: 2
 37001                           ;incstack = 0
 37002  0048C4  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37003  0048C6  6ED9               	movwf	fsr2l,c
 37004  0048C8  6ADA               	clrf	fsr2h,c
 37005  0048CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37006  0048D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37007  0048D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37008  0048D6  6AF8               	clrf	tblptru,c
 37009  0048D8                     	endif
 37010  0048D8                     	if	0	;tblptru may be non-zero
 37011  0048D8                     	endif
 37012  0048D8  0008               	tblrd		*
 37013  0048DA  50F5               	movf	tablat,w,c
 37014  0048DC  0A25               	xorlw	37
 37015  0048DE  A4D8               	btfss	status,2,c
 37016  0048E0  D1EF               	goto	i2l16952
 37017                           
 37018                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 37019  0048E2  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37020  0048E4  6ED9               	movwf	fsr2l,c
 37021  0048E6  6ADA               	clrf	fsr2h,c
 37022  0048E8  2ADE               	incf	postinc2,f,c
 37023  0048EA  0E00               	movlw	0
 37024  0048EC  22DD               	addwfc	postdec2,f,c
 37025                           
 37026                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 37027  0048EE  0E00               	movlw	0
 37028  0048F0  0100               	movlb	0	; () banked
 37029  0048F2  6FB3               	movwf	(_width+1)& (0+255),b
 37030  0048F4  0E00               	movlw	0
 37031  0048F6  6FB2               	movwf	_width& (0+255),b
 37032  0048F8  C0B2  F0B6         	movff	_width,_flags
 37033  0048FC  C0B3  F0B7         	movff	_width+1,_flags+1
 37034                           
 37035                           ; BSR set to: 0
 37036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 37037  004900  69B4               	setf	_prec& (0+255),b
 37038  004902  69B5               	setf	(_prec+1)& (0+255),b
 37039                           
 37040                           ; BSR set to: 0
 37041                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 37042  004904  0E00               	movlw	0
 37043  004906  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37044  004908  0E00               	movlw	0
 37045  00490A  D013               	goto	L57
 37046  00490C                     i2l16864:
 37047                           
 37048                           ; BSR set to: 0
 37049                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 37050  00490C  81B6               	bsf	_flags& (0+255),0,b
 37051  00490E                     i2l16866:
 37052                           
 37053                           ; BSR set to: 0
 37054                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
 37055  00490E  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37056  004910  6ED9               	movwf	fsr2l,c
 37057  004912  6ADA               	clrf	fsr2h,c
 37058  004914  2ADE               	incf	postinc2,f,c
 37059  004916  0E00               	movlw	0
 37060  004918  22DD               	addwfc	postdec2,f,c
 37061                           
 37062                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
 37063  00491A  D030               	goto	i2l16890
 37064  00491C                     i2l16868:
 37065                           
 37066                           ; BSR set to: 0
 37067                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 37068  00491C  83B6               	bsf	_flags& (0+255),1,b
 37069  00491E  D7F7               	goto	i2l16866
 37070  004920                     i2l16872:
 37071                           
 37072                           ; BSR set to: 0
 37073                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 37074  004920  85B6               	bsf	_flags& (0+255),2,b
 37075  004922  D7F5               	goto	i2l16866
 37076  004924                     i2l16876:
 37077                           
 37078                           ; BSR set to: 0
 37079                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 37080  004924  87B6               	bsf	_flags& (0+255),3,b
 37081  004926  D7F3               	goto	i2l16866
 37082  004928                     i2l16880:
 37083                           
 37084                           ; BSR set to: 0
 37085                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 37086  004928  89B6               	bsf	_flags& (0+255),4,b
 37087  00492A  D7F1               	goto	i2l16866
 37088  00492C                     i2l16884:
 37089                           
 37090                           ; BSR set to: 0
 37091                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 37092  00492C  0E00               	movlw	0
 37093  00492E  6F72               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 37094  004930  0E01               	movlw	1
 37095  004932                     L57:
 37096  004932  6F71               	movwf	i2vfpfcnvrt@done& (0+255),b
 37097                           
 37098                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 37099  004934  D023               	goto	i2l16890
 37100  004936                     i2l16888:
 37101                           
 37102                           ; BSR set to: 0
 37103  004936  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37104  004938  6ED9               	movwf	fsr2l,c
 37105  00493A  6ADA               	clrf	fsr2h,c
 37106  00493C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37107  004942  006F FF77 FFF7     	movff	postdec2,tblptrh
 37108  004948                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37109  004948  6AF8               	clrf	tblptru,c
 37110  00494A                     	endif
 37111  00494A                     	if	0	;tblptru may be non-zero
 37112  00494A                     	endif
 37113  00494A  0008               	tblrd		*
 37114  00494C  50F5               	movf	tablat,w,c
 37115  00494E  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37116  004950  6A4B               	clrf	(??i2_vfpfcnvrt+1)^0,c
 37117                           
 37118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37119                           ; Switch size 1, requested type "simple"
 37120                           ; Number of cases is 1, Range of values is 0 to 0
 37121                           ; switch strategies available:
 37122                           ; Name         Instructions Cycles
 37123                           ; simple_byte            4     3 (average)
 37124                           ;	Chosen strategy is simple_byte
 37125  004952  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37126  004954  0A00               	xorlw	0	; case 0
 37127  004956  A4D8               	btfss	status,2,c
 37128  004958  D7E9               	goto	i2l16884
 37129                           
 37130                           ; BSR set to: 0
 37131                           ; Switch size 1, requested type "simple"
 37132                           ; Number of cases is 5, Range of values is 32 to 48
 37133                           ; switch strategies available:
 37134                           ; Name         Instructions Cycles
 37135                           ; simple_byte           16     9 (average)
 37136                           ;	Chosen strategy is simple_byte
 37137  00495A  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37138  00495C  0A20               	xorlw	32	; case 32
 37139  00495E  B4D8               	btfsc	status,2,c
 37140  004960  D7E1               	goto	i2l16876
 37141  004962  0A03               	xorlw	3	; case 35
 37142  004964  B4D8               	btfsc	status,2,c
 37143  004966  D7E0               	goto	i2l16880
 37144  004968  0A08               	xorlw	8	; case 43
 37145  00496A  B4D8               	btfsc	status,2,c
 37146  00496C  D7D9               	goto	i2l16872
 37147  00496E  0A06               	xorlw	6	; case 45
 37148  004970  B4D8               	btfsc	status,2,c
 37149  004972  D7CC               	goto	i2l16864
 37150  004974  0A1D               	xorlw	29	; case 48
 37151  004976  B4D8               	btfsc	status,2,c
 37152  004978  D7D1               	goto	i2l16868
 37153  00497A  D7D8               	goto	i2l16884
 37154  00497C                     i2l16890:
 37155                           
 37156                           ; BSR set to: 0
 37157                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 37158  00497C  5171               	movf	i2vfpfcnvrt@done& (0+255),w,b
 37159  00497E  1172               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 37160  004980  B4D8               	btfsc	status,2,c
 37161  004982  D7D9               	goto	i2l16888
 37162                           
 37163                           ; BSR set to: 0
 37164                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 37165  004984  B1B6               	btfsc	_flags& (0+255),0,b
 37166                           
 37167                           ; BSR set to: 0
 37168                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 37169  004986  93B6               	bcf	_flags& (0+255),1,b
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 37173  004988  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37174  00498A  6ED9               	movwf	fsr2l,c
 37175  00498C  6ADA               	clrf	fsr2h,c
 37176  00498E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37177  004994  006F FF77 FFF7     	movff	postdec2,tblptrh
 37178  00499A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37179  00499A  6AF8               	clrf	tblptru,c
 37180  00499C                     	endif
 37181  00499C                     	if	0	;tblptru may be non-zero
 37182  00499C                     	endif
 37183  00499C  0008               	tblrd		*
 37184  00499E  50F5               	movf	tablat,w,c
 37185  0049A0  0A2A               	xorlw	42
 37186  0049A2  A4D8               	btfss	status,2,c
 37187  0049A4  D02A               	goto	i2l16902
 37188                           
 37189                           ; BSR set to: 0
 37190                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 37191  0049A6  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37192  0049A8  6ED9               	movwf	fsr2l,c
 37193  0049AA  6ADA               	clrf	fsr2h,c
 37194  0049AC  2ADE               	incf	postinc2,f,c
 37195  0049AE  0E00               	movlw	0
 37196  0049B0  22DD               	addwfc	postdec2,f,c
 37197                           
 37198                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 37199  0049B2  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37200  0049B8  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37201  0049BE  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37202  0049C4  0E02               	movlw	2
 37203  0049C6  26DE               	addwf	postinc2,f,c
 37204  0049C8  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37205  0049CE  0E00               	movlw	0
 37206  0049D0  22DD               	addwfc	postdec2,f,c
 37207  0049D2  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37208  0049D8  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37209  0049DE  006F FF78  F0B2    	movff	postinc2,_width
 37210  0049E4  006F FF74  F0B3    	movff	postdec2,_width+1
 37211                           
 37212                           ; BSR set to: 0
 37213                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 37214  0049EA  AFB3               	btfss	(_width+1)& (0+255),7,b
 37215  0049EC  D044               	goto	i2u1737_40
 37216                           
 37217                           ; BSR set to: 0
 37218                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 37219  0049EE  81B6               	bsf	_flags& (0+255),0,b
 37220                           
 37221                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 37222  0049F0  6DB2               	negf	_width& (0+255),b
 37223  0049F2  1FB3               	comf	(_width+1)& (0+255),f,b
 37224  0049F4  B0D8               	btfsc	status,0,c
 37225  0049F6  2BB3               	incf	(_width+1)& (0+255),f,b
 37226  0049F8  D03E               	goto	i2u1737_40
 37227  0049FA                     i2l16902:
 37228                           
 37229                           ; BSR set to: 0
 37230                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 37231  0049FA  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37232  0049FC  6ED9               	movwf	fsr2l,c
 37233  0049FE  6ADA               	clrf	fsr2h,c
 37234  004A00  006F FF78  F008    	movff	postinc2,i2atoi@s
 37235  004A06  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 37236  004A0C  ECE3  F036         	call	i2_atoi	;wreg free
 37237  004A10  0060  F020  F0B2   	movff	?i2_atoi,_width
 37238  004A16  0060  F024  F0B3   	movff	?i2_atoi+1,_width+1
 37239                           
 37240                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 37241  004A1C  D006               	goto	i2l16906
 37242  004A1E                     i2l16904:
 37243                           
 37244                           ; BSR set to: 0
 37245                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 37246  004A1E  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37247  004A20  6ED9               	movwf	fsr2l,c
 37248  004A22  6ADA               	clrf	fsr2h,c
 37249  004A24  2ADE               	incf	postinc2,f,c
 37250  004A26  0E00               	movlw	0
 37251  004A28  22DD               	addwfc	postdec2,f,c
 37252  004A2A                     i2l16906:
 37253  004A2A  0ED0               	movlw	208
 37254  004A2C  6E4A               	movwf	??i2_vfpfcnvrt^0,c
 37255  004A2E  0EFF               	movlw	255
 37256  004A30  6E4B               	movwf	(??i2_vfpfcnvrt+1)^0,c
 37257  004A32  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37258  004A34  6ED9               	movwf	fsr2l,c
 37259  004A36  6ADA               	clrf	fsr2h,c
 37260  004A38  006F FF7B FFF6     	movff	postinc2,tblptrl
 37261  004A3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37262  004A44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37263  004A44  6AF8               	clrf	tblptru,c
 37264  004A46                     	endif
 37265  004A46                     	if	0	;tblptru may be non-zero
 37266  004A46                     	endif
 37267  004A46  0008               	tblrd		*
 37268  004A48  50F5               	movf	tablat,w,c
 37269  004A4A  6E4C               	movwf	(??i2_vfpfcnvrt+2)^0,c
 37270  004A4C  6A4D               	clrf	(??i2_vfpfcnvrt+3)^0,c
 37271  004A4E  504A               	movf	??i2_vfpfcnvrt^0,w,c
 37272  004A50  264C               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 37273  004A52  504B               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 37274  004A54  224D               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 37275  004A56  504D               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 37276  004A58  E106               	bnz	i2u1735_40
 37277  004A5A  0E0A               	movlw	10
 37278  004A5C  5C4C               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 37279  004A5E  B0D8               	btfsc	status,0,c
 37280  004A60  D002               	goto	i2u1735_40
 37281  004A62  0E01               	movlw	1
 37282  004A64  D001               	goto	i2u1736_40
 37283  004A66                     i2u1735_40:
 37284  004A66  0E00               	movlw	0
 37285  004A68                     i2u1736_40:
 37286  004A68  0100               	movlb	0	; () banked
 37287  004A6A  6F73               	movwf	i2_vfpfcnvrt$4916& (0+255),b
 37288  004A6C  6B74               	clrf	(i2_vfpfcnvrt$4916+1)& (0+255),b
 37289                           
 37290                           ; BSR set to: 0
 37291  004A6E  5173               	movf	i2_vfpfcnvrt$4916& (0+255),w,b
 37292  004A70  1174               	iorwf	(i2_vfpfcnvrt$4916+1)& (0+255),w,b
 37293  004A72  A4D8               	btfss	status,2,c
 37294  004A74  D7D4               	goto	i2l16904
 37295  004A76                     i2u1737_40:
 37296                           
 37297                           ; BSR set to: 0
 37298                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 37299  004A76  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37300  004A78  6ED9               	movwf	fsr2l,c
 37301  004A7A  6ADA               	clrf	fsr2h,c
 37302  004A7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37303  004A82  006F FF77 FFF7     	movff	postdec2,tblptrh
 37304  004A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37305  004A88  6AF8               	clrf	tblptru,c
 37306  004A8A                     	endif
 37307  004A8A                     	if	0	;tblptru may be non-zero
 37308  004A8A                     	endif
 37309  004A8A  0008               	tblrd		*
 37310  004A8C  50F5               	movf	tablat,w,c
 37311  004A8E  0A64               	xorlw	100
 37312  004A90  B4D8               	btfsc	status,2,c
 37313  004A92  D00F               	goto	i2u1739_40
 37314                           
 37315                           ; BSR set to: 0
 37316  004A94  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37317  004A96  6ED9               	movwf	fsr2l,c
 37318  004A98  6ADA               	clrf	fsr2h,c
 37319  004A9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 37320  004AA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37321  004AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37322  004AA6  6AF8               	clrf	tblptru,c
 37323  004AA8                     	endif
 37324  004AA8                     	if	0	;tblptru may be non-zero
 37325  004AA8                     	endif
 37326  004AA8  0008               	tblrd		*
 37327  004AAA  50F5               	movf	tablat,w,c
 37328  004AAC  0A69               	xorlw	105
 37329  004AAE  A4D8               	btfss	status,2,c
 37330  004AB0  D052               	goto	i2l16922
 37331  004AB2                     i2u1739_40:
 37332                           
 37333                           ; BSR set to: 0
 37334                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 37335  004AB2  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37336  004AB4  6ED9               	movwf	fsr2l,c
 37337  004AB6  6ADA               	clrf	fsr2h,c
 37338  004AB8  2ADE               	incf	postinc2,f,c
 37339  004ABA  0E00               	movlw	0
 37340  004ABC  22DD               	addwfc	postdec2,f,c
 37341                           
 37342                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 37343  004ABE  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37344  004AC4  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37345  004ACA  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37346  004AD0  0E02               	movlw	2
 37347  004AD2  26DE               	addwf	postinc2,f,c
 37348  004AD4  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37349  004ADA  0E00               	movlw	0
 37350  004ADC  22DD               	addwfc	postdec2,f,c
 37351  004ADE  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37352  004AE4  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37353  004AEA  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 37354  004AF0  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 37355  004AF6  0E00               	movlw	0
 37356  004AF8  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 37357  004AFA  0EFF               	movlw	-1
 37358  004AFC  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 37359  004AFE  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 37360  004B00  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 37361  004B02  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 37362  004B04  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 37363  004B06  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 37364                           
 37365                           ; BSR set to: 0
 37366                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 37367  004B08  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 37368  004B0E  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 37369  004B14  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 37370  004B1A  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 37371  004B20  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 37372  004B26  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 37373  004B2C  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 37374  004B32  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 37375  004B38  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 37376  004B3E  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 37377  004B44  ECDE  F02E         	call	i2_dtoa	;wreg free
 37378  004B48  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 37379  004B4E  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 37380  004B54  0012               	return	
 37381  004B56                     i2l16922:
 37382                           
 37383                           ; BSR set to: 0
 37384                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 37385  004B56  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37386  004B58  6ED9               	movwf	fsr2l,c
 37387  004B5A  6ADA               	clrf	fsr2h,c
 37388  004B5C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37389  004B62  006F FF77 FFF7     	movff	postdec2,tblptrh
 37390  004B68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37391  004B68  6AF8               	clrf	tblptru,c
 37392  004B6A                     	endif
 37393  004B6A                     	if	0	;tblptru may be non-zero
 37394  004B6A                     	endif
 37395  004B6A  0008               	tblrd		*
 37396  004B6C  50F5               	movf	tablat,w,c
 37397  004B6E  0A78               	xorlw	120
 37398  004B70  B4D8               	btfsc	status,2,c
 37399  004B72  D00F               	goto	i2u1741_40
 37400                           
 37401                           ; BSR set to: 0
 37402  004B74  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37403  004B76  6ED9               	movwf	fsr2l,c
 37404  004B78  6ADA               	clrf	fsr2h,c
 37405  004B7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 37406  004B80  006F FF77 FFF7     	movff	postdec2,tblptrh
 37407  004B86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37408  004B86  6AF8               	clrf	tblptru,c
 37409  004B88                     	endif
 37410  004B88                     	if	0	;tblptru may be non-zero
 37411  004B88                     	endif
 37412  004B88  0008               	tblrd		*
 37413  004B8A  50F5               	movf	tablat,w,c
 37414  004B8C  0A58               	xorlw	88
 37415  004B8E  A4D8               	btfss	status,2,c
 37416  004B90  D066               	goto	i2l16936
 37417  004B92                     i2u1741_40:
 37418                           
 37419                           ; BSR set to: 0
 37420                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 37421  004B92  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37422  004B94  6ED9               	movwf	fsr2l,c
 37423  004B96  6ADA               	clrf	fsr2h,c
 37424  004B98  006F FF7B FFF6     	movff	postinc2,tblptrl
 37425  004B9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37426  004BA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37427  004BA4  6AF8               	clrf	tblptru,c
 37428  004BA6                     	endif
 37429  004BA6                     	if	0	;tblptru may be non-zero
 37430  004BA6                     	endif
 37431  004BA6  0008               	tblrd		*
 37432  004BA8  006F FFD4  F070    	movff	tablat,i2vfpfcnvrt@c
 37433                           
 37434                           ; BSR set to: 0
 37435                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 37436  004BAE  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37437  004BB0  6ED9               	movwf	fsr2l,c
 37438  004BB2  6ADA               	clrf	fsr2h,c
 37439  004BB4  2ADE               	incf	postinc2,f,c
 37440  004BB6  0E00               	movlw	0
 37441  004BB8  22DD               	addwfc	postdec2,f,c
 37442                           
 37443                           ; BSR set to: 0
 37444                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 37445  004BBA  0060  F123  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 37446  004BC0  0060  F127  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 37447  004BC6  006F FF7C  F04A    	movff	indf2,??i2_vfpfcnvrt
 37448  004BCC  0E02               	movlw	2
 37449  004BCE  26DE               	addwf	postinc2,f,c
 37450  004BD0  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt+1
 37451  004BD6  0E00               	movlw	0
 37452  004BD8  22DD               	addwfc	postdec2,f,c
 37453  004BDA  0060  F12B  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 37454  004BE0  0060  F12F  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 37455  004BE6  006F FF78  F04C    	movff	postinc2,??i2_vfpfcnvrt+2
 37456  004BEC  006F FF74  F04D    	movff	postdec2,??i2_vfpfcnvrt+3
 37457  004BF2  0060  F130  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 37458  004BF8  0060  F134  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 37459  004BFE  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 37460  004C00  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 37461  004C02  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 37462  004C04  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 37463  004C06  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 37464  004C08  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 37465                           
 37466                           ; BSR set to: 0
 37467                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 37468  004C0A  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 37469  004C10  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 37470  004C16  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 37471  004C1C  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 37472  004C22  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 37473  004C28  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 37474  004C2E  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 37475  004C34  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 37476  004C3A  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 37477  004C40  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 37478  004C46  0060  F1C0  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 37479  004C4C  EC12  F034         	call	i2_xtoa	;wreg free
 37480  004C50  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 37481  004C56  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 37482  004C5C  0012               	return	
 37483  004C5E                     i2l16936:
 37484                           
 37485                           ; BSR set to: 0
 37486                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 37487  004C5E  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37488  004C60  6ED9               	movwf	fsr2l,c
 37489  004C62  6ADA               	clrf	fsr2h,c
 37490  004C64  006F FF7B FFF6     	movff	postinc2,tblptrl
 37491  004C6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 37492  004C70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37493  004C70  6AF8               	clrf	tblptru,c
 37494  004C72                     	endif
 37495  004C72                     	if	0	;tblptru may be non-zero
 37496  004C72                     	endif
 37497  004C72  0008               	tblrd		*
 37498  004C74  50F5               	movf	tablat,w,c
 37499  004C76  0A25               	xorlw	37
 37500  004C78  A4D8               	btfss	status,2,c
 37501  004C7A  D017               	goto	i2l16946
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 37505  004C7C  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37506  004C7E  6ED9               	movwf	fsr2l,c
 37507  004C80  6ADA               	clrf	fsr2h,c
 37508  004C82  2ADE               	incf	postinc2,f,c
 37509  004C84  0E00               	movlw	0
 37510  004C86  22DD               	addwfc	postdec2,f,c
 37511                           
 37512                           ; BSR set to: 0
 37513                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 37514  004C88  0E00               	movlw	0
 37515  004C8A  6E04               	movwf	(i2fputc@c+1)^0,c
 37516  004C8C  0E25               	movlw	37
 37517  004C8E  6E03               	movwf	i2fputc@c^0,c
 37518  004C90  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 37519  004C96  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 37520  004C9C  EC51  F040         	call	i2_fputc	;wreg free
 37521  004CA0                     i2l16942:
 37522                           
 37523                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 37524  004CA0  0E00               	movlw	0
 37525  004CA2  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 37526  004CA4  0E01               	movlw	1
 37527  004CA6  6E45               	movwf	?i2_vfpfcnvrt^0,c
 37528  004CA8  0012               	return	
 37529  004CAA                     i2l16946:
 37530                           
 37531                           ; BSR set to: 0
 37532                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 37533  004CAA  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37534  004CAC  6ED9               	movwf	fsr2l,c
 37535  004CAE  6ADA               	clrf	fsr2h,c
 37536  004CB0  2ADE               	incf	postinc2,f,c
 37537  004CB2  0E00               	movlw	0
 37538  004CB4  22DD               	addwfc	postdec2,f,c
 37539                           
 37540                           ; BSR set to: 0
 37541                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 37542  004CB6  0E00               	movlw	0
 37543  004CB8  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 37544  004CBA  0E00               	movlw	0
 37545  004CBC  6E45               	movwf	?i2_vfpfcnvrt^0,c
 37546  004CBE  0012               	return	
 37547  004CC0                     i2l16952:
 37548                           
 37549                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 37550  004CC0  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37551  004CC2  6ED9               	movwf	fsr2l,c
 37552  004CC4  6ADA               	clrf	fsr2h,c
 37553  004CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 37554  004CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 37555  004CD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37556  004CD2  6AF8               	clrf	tblptru,c
 37557  004CD4                     	endif
 37558  004CD4                     	if	0	;tblptru may be non-zero
 37559  004CD4                     	endif
 37560  004CD4  0008               	tblrd		*
 37561  004CD6  50F5               	movf	tablat,w,c
 37562  004CD8  6E03               	movwf	i2fputc@c^0,c
 37563  004CDA  6A04               	clrf	(i2fputc@c+1)^0,c
 37564  004CDC  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 37565  004CE2  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 37566  004CE8  EC51  F040         	call	i2_fputc	;wreg free
 37567                           
 37568                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 37569  004CEC  5047               	movf	i2vfpfcnvrt@fmt^0,w,c
 37570  004CEE  6ED9               	movwf	fsr2l,c
 37571  004CF0  6ADA               	clrf	fsr2h,c
 37572  004CF2  2ADE               	incf	postinc2,f,c
 37573  004CF4  0E00               	movlw	0
 37574  004CF6  22DD               	addwfc	postdec2,f,c
 37575  004CF8  D7D3               	goto	i2l16942
 37576  004CFA                     __end_ofi2_vfpfcnvrt:
 37577                           	opt callstack 0
 37578                           
 37579 ;; *************** function i2_xtoa *****************
 37580 ;; Defined at:
 37581 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 37582 ;; Parameters:    Size  Location     Type
 37583 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 37584 ;;		 -> sprintf@f(6), NULL(0), 
 37585 ;;  d               8   31[COMRAM] unsigned long long 
 37586 ;;  x               1   39[COMRAM] unsigned char 
 37587 ;; Auto vars:     Size  Location     Type
 37588 ;;  xtoa            8   56[COMRAM] unsigned long long 
 37589 ;;  xtoa            2   66[COMRAM] int 
 37590 ;;  xtoa            2   64[COMRAM] int 
 37591 ;;  xtoa            2   54[COMRAM] int 
 37592 ;;  xtoa            2   52[COMRAM] int 
 37593 ;; Return value:  Size  Location     Type
 37594 ;;                  2   29[COMRAM] int 
 37595 ;; Registers used:
 37596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37597 ;; Tracked objects:
 37598 ;;		On entry : 3F/0
 37599 ;;		On exit  : 0/0
 37600 ;;		Unchanged: 0/0
 37601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37602 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37603 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37604 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37605 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37606 ;;Total ram usage:       39 bytes
 37607 ;; Hardware stack levels used:    1
 37608 ;; Hardware stack levels required when called:    5
 37609 ;; This function calls:
 37610 ;;		i2_isalpha
 37611 ;;		i2_isupper
 37612 ;;		i2_pad
 37613 ;;		i2_toupper
 37614 ;; This function is called by:
 37615 ;;		i2_vfpfcnvrt
 37616 ;; This function uses a non-reentrant model
 37617 ;;
 37618                           
 37619                           	psect	text226
 37620  006824                     __ptext226:
 37621                           	opt callstack 0
 37622  006824                     i2_xtoa:
 37623                           	opt callstack 1
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 37627                           
 37628                           ;incstack = 0
 37629  006824  AFB5               	btfss	(_prec+1)& (0+255),7,b
 37630                           
 37631                           ; BSR set to: 0
 37632                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 37633  006826  93B6               	bcf	_flags& (0+255),1,b
 37634                           
 37635                           ; BSR set to: 0
 37636                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 37637  006828  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 37638  00682A  D005               	goto	i2u1705_40
 37639  00682C  51B5               	movf	(_prec+1)& (0+255),w,b
 37640  00682E  E108               	bnz	i2l3085
 37641  006830  05B4               	decf	_prec& (0+255),w,b
 37642  006832  B0D8               	btfsc	status,0,c
 37643  006834  D005               	goto	i2l3085
 37644  006836                     i2u1705_40:
 37645                           
 37646                           ; BSR set to: 0
 37647  006836  0E00               	movlw	0
 37648  006838  6E36               	movwf	(i2xtoa@p+1)^0,c
 37649  00683A  0E01               	movlw	1
 37650  00683C  6E35               	movwf	i2xtoa@p^0,c
 37651  00683E  D006               	goto	i2l3087
 37652  006840                     i2l3085:
 37653                           
 37654                           ; BSR set to: 0
 37655  006840  0060  F2D0  F035   	movff	_prec,i2xtoa@p
 37656  006846  0060  F2D4  F036   	movff	_prec+1,i2xtoa@p+1
 37657  00684C                     i2l3087:
 37658                           
 37659                           ; BSR set to: 0
 37660                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 37661  00684C  0060  F2C8  F037   	movff	_width,i2xtoa@w
 37662  006852  0060  F2CC  F038   	movff	_width+1,i2xtoa@w+1
 37663                           
 37664                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 37665  006858  A9B6               	btfss	_flags& (0+255),4,b
 37666  00685A  D004               	goto	i2l16740
 37667                           
 37668                           ; BSR set to: 0
 37669                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 37670  00685C  0EFE               	movlw	254
 37671  00685E  2637               	addwf	i2xtoa@w^0,f,c
 37672  006860  0EFF               	movlw	255
 37673  006862  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 37674  006864                     i2l16740:
 37675                           
 37676                           ; BSR set to: 0
 37677                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 37678  006864  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 37679  00686A  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 37680  006870  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 37681  006876  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 37682  00687C  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 37683  006882  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 37684  006888  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 37685  00688E  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 37686                           
 37687                           ; BSR set to: 0
 37688                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 37689  006894  0E00               	movlw	0
 37690  006896  6E42               	movwf	(i2xtoa@i+1)^0,c
 37691  006898  0E1F               	movlw	31
 37692  00689A  6E41               	movwf	i2xtoa@i^0,c
 37693                           
 37694                           ; BSR set to: 0
 37695                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 37696  00689C  0E00               	movlw	0
 37697  00689E  0102               	movlb	2	; () banked
 37698  0068A0  6F72               	movwf	(_dbuf+31)& (0+255),b
 37699                           
 37700                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 37701  0068A2  D0A8               	goto	i2l16776
 37702  0068A4                     i2l16746:
 37703                           
 37704                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 37705  0068A4  0641               	decf	i2xtoa@i^0,f,c
 37706  0068A6  A0D8               	btfss	status,0,c
 37707  0068A8  0642               	decf	(i2xtoa@i+1)^0,f,c
 37708                           
 37709                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 37710  0068AA  0E0F               	movlw	15
 37711  0068AC  1439               	andwf	i2xtoa@n^0,w,c
 37712  0068AE  6E43               	movwf	i2xtoa@c^0,c
 37713  0068B0  6A44               	clrf	(i2xtoa@c+1)^0,c
 37714                           
 37715                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 37716  0068B2  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 37717  0068B4  D008               	goto	i2l16754
 37718  0068B6  5044               	movf	(i2xtoa@c+1)^0,w,c
 37719  0068B8  E104               	bnz	i2u1707_40
 37720  0068BA  0E0A               	movlw	10
 37721  0068BC  5C43               	subwf	i2xtoa@c^0,w,c
 37722  0068BE  A0D8               	btfss	status,0,c
 37723  0068C0  D002               	goto	i2l16754
 37724  0068C2                     i2u1707_40:
 37725  0068C2  0E57               	movlw	87
 37726  0068C4  D001               	goto	L58
 37727  0068C6                     i2l16754:
 37728  0068C6  0E30               	movlw	48
 37729  0068C8                     L58:
 37730  0068C8  2443               	addwf	i2xtoa@c^0,w,c
 37731  0068CA  6E43               	movwf	i2xtoa@c^0,c
 37732  0068CC  0E00               	movlw	0
 37733  0068CE  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 37734  0068D0  6E44               	movwf	(i2xtoa@c+1)^0,c
 37735                           
 37736                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 37737  0068D2  0EBF               	movlw	191
 37738  0068D4  6E29               	movwf	??i2_xtoa^0,c
 37739  0068D6  0EFF               	movlw	255
 37740  0068D8  6E2A               	movwf	(??i2_xtoa+1)^0,c
 37741  0068DA  5028               	movf	i2xtoa@x^0,w,c
 37742  0068DC  6E2B               	movwf	(??i2_xtoa+2)^0,c
 37743  0068DE  6A2C               	clrf	(??i2_xtoa+3)^0,c
 37744  0068E0  5029               	movf	??i2_xtoa^0,w,c
 37745  0068E2  262B               	addwf	(??i2_xtoa+2)^0,f,c
 37746  0068E4  502A               	movf	(??i2_xtoa+1)^0,w,c
 37747  0068E6  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 37748  0068E8  502C               	movf	(??i2_xtoa+3)^0,w,c
 37749  0068EA  E106               	bnz	i2u1708_40
 37750  0068EC  0E1A               	movlw	26
 37751  0068EE  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 37752  0068F0  B0D8               	btfsc	status,0,c
 37753  0068F2  D002               	goto	i2u1708_40
 37754  0068F4  0E01               	movlw	1
 37755  0068F6  D001               	goto	i2u1709_40
 37756  0068F8                     i2u1708_40:
 37757  0068F8  0E00               	movlw	0
 37758  0068FA                     i2u1709_40:
 37759  0068FA  6E31               	movwf	i2_xtoa$4901^0,c
 37760  0068FC  6A32               	clrf	(i2_xtoa$4901+1)^0,c
 37761  0068FE  5031               	movf	i2_xtoa$4901^0,w,c
 37762  006900  1032               	iorwf	(i2_xtoa$4901+1)^0,w,c
 37763  006902  B4D8               	btfsc	status,2,c
 37764  006904  D02B               	goto	i2l16768
 37765  006906  0E9F               	movlw	159
 37766  006908  6E29               	movwf	??i2_xtoa^0,c
 37767  00690A  0EFF               	movlw	255
 37768  00690C  6E2A               	movwf	(??i2_xtoa+1)^0,c
 37769  00690E  0E20               	movlw	32
 37770  006910  1043               	iorwf	i2xtoa@c^0,w,c
 37771  006912  6E2B               	movwf	(??i2_xtoa+2)^0,c
 37772  006914  0E00               	movlw	0
 37773  006916  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 37774  006918  6E2C               	movwf	(??i2_xtoa+3)^0,c
 37775  00691A  5029               	movf	??i2_xtoa^0,w,c
 37776  00691C  262B               	addwf	(??i2_xtoa+2)^0,f,c
 37777  00691E  502A               	movf	(??i2_xtoa+1)^0,w,c
 37778  006920  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 37779  006922  502C               	movf	(??i2_xtoa+3)^0,w,c
 37780  006924  E106               	bnz	i2u1711_40
 37781  006926  0E1A               	movlw	26
 37782  006928  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 37783  00692A  B0D8               	btfsc	status,0,c
 37784  00692C  D002               	goto	i2u1711_40
 37785  00692E  0E01               	movlw	1
 37786  006930  D001               	goto	i2u1712_40
 37787  006932                     i2u1711_40:
 37788  006932  0E00               	movlw	0
 37789  006934                     i2u1712_40:
 37790  006934  6E33               	movwf	i2_xtoa$4902^0,c
 37791  006936  6A34               	clrf	(i2_xtoa$4902+1)^0,c
 37792  006938  5033               	movf	i2_xtoa$4902^0,w,c
 37793  00693A  1034               	iorwf	(i2_xtoa$4902+1)^0,w,c
 37794  00693C  B4D8               	btfsc	status,2,c
 37795  00693E  D00E               	goto	i2l16768
 37796                           
 37797                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 37798  006940  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 37799  006946  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 37800  00694C  EC85  F048         	call	i2_toupper	;wreg free
 37801  006950  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 37802  006956  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 37803  00695C                     i2l16768:
 37804                           
 37805                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 37806  00695C  0E53               	movlw	low _dbuf
 37807  00695E  2441               	addwf	i2xtoa@i^0,w,c
 37808  006960  6ED9               	movwf	fsr2l,c
 37809  006962  0E02               	movlw	high _dbuf
 37810  006964  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 37811  006966  6EDA               	movwf	fsr2h,c
 37812  006968  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 37813                           
 37814                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 37815  00696E  0635               	decf	i2xtoa@p^0,f,c
 37816  006970  A0D8               	btfss	status,0,c
 37817  006972  0636               	decf	(i2xtoa@p+1)^0,f,c
 37818                           
 37819                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 37820  006974  0637               	decf	i2xtoa@w^0,f,c
 37821  006976  A0D8               	btfss	status,0,c
 37822  006978  0638               	decf	(i2xtoa@w+1)^0,f,c
 37823                           
 37824                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 37825  00697A  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 37826  006980  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 37827  006986  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 37828  00698C  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 37829  006992  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 37830  006998  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 37831  00699E  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 37832  0069A4  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 37833  0069AA  0E05               	movlw	5
 37834  0069AC  D009               	goto	i2u1714_40
 37835  0069AE                     i2u1714_45:
 37836  0069AE  90D8               	bcf	status,0,c
 37837  0069B0  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 37838  0069B2  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 37839  0069B4  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 37840  0069B6  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 37841  0069B8  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 37842  0069BA  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 37843  0069BC  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 37844  0069BE  3229               	rrcf	??i2_xtoa^0,f,c
 37845  0069C0                     i2u1714_40:
 37846  0069C0  2EE8               	decfsz	wreg,f,c
 37847  0069C2  D7F5               	goto	i2u1714_45
 37848  0069C4  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 37849  0069CA  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 37850  0069D0  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 37851  0069D6  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 37852  0069DC  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 37853  0069E2  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 37854  0069E8  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 37855  0069EE  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 37856  0069F4                     i2l16776:
 37857                           
 37858                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 37859  0069F4  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 37860  0069F6  D021               	goto	i2u1719_40
 37861  0069F8  5042               	movf	(i2xtoa@i+1)^0,w,c
 37862  0069FA  E104               	bnz	i2u1715_40
 37863  0069FC  0E02               	movlw	2
 37864  0069FE  5C41               	subwf	i2xtoa@i^0,w,c
 37865  006A00  A0D8               	btfss	status,0,c
 37866  006A02  D01B               	goto	i2u1719_40
 37867  006A04                     i2u1715_40:
 37868  006A04  5039               	movf	i2xtoa@n^0,w,c
 37869  006A06  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 37870  006A08  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 37871  006A0A  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 37872  006A0C  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 37873  006A0E  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 37874  006A10  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 37875  006A12  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 37876  006A14  A4D8               	btfss	status,2,c
 37877  006A16  D746               	goto	i2l16746
 37878  006A18  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 37879  006A1A  D005               	goto	i2u1717_40
 37880  006A1C  5036               	movf	(i2xtoa@p+1)^0,w,c
 37881  006A1E  E102               	bnz	i2u1717_41
 37882  006A20  0435               	decf	i2xtoa@p^0,w,c
 37883  006A22  B0D8               	btfsc	status,0,c
 37884  006A24                     i2u1717_41:
 37885  006A24  D73F               	goto	i2l16746
 37886  006A26                     i2u1717_40:
 37887  006A26  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 37888  006A28  D008               	goto	i2u1719_40
 37889  006A2A  5038               	movf	(i2xtoa@w+1)^0,w,c
 37890  006A2C  E103               	bnz	i2u1718_40
 37891  006A2E  0437               	decf	i2xtoa@w^0,w,c
 37892  006A30  A0D8               	btfss	status,0,c
 37893  006A32  D003               	goto	i2u1719_40
 37894  006A34                     i2u1718_40:
 37895  006A34  0100               	movlb	0	; () banked
 37896  006A36  B3B6               	btfsc	_flags& (0+255),1,b
 37897  006A38  D735               	goto	i2l16746
 37898  006A3A                     i2u1719_40:
 37899                           
 37900                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 37901  006A3A  0100               	movlb	0	; () banked
 37902  006A3C  A9B6               	btfss	_flags& (0+255),4,b
 37903  006A3E  D017               	goto	i2l16792
 37904                           
 37905                           ; BSR set to: 0
 37906                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 37907  006A40  0641               	decf	i2xtoa@i^0,f,c
 37908  006A42  A0D8               	btfss	status,0,c
 37909  006A44  0642               	decf	(i2xtoa@i+1)^0,f,c
 37910                           
 37911                           ; BSR set to: 0
 37912                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 37913  006A46  0E53               	movlw	low _dbuf
 37914  006A48  2441               	addwf	i2xtoa@i^0,w,c
 37915  006A4A  6ED9               	movwf	fsr2l,c
 37916  006A4C  0E02               	movlw	high _dbuf
 37917  006A4E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 37918  006A50  6EDA               	movwf	fsr2h,c
 37919  006A52  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 37923  006A58  0641               	decf	i2xtoa@i^0,f,c
 37924  006A5A  A0D8               	btfss	status,0,c
 37925  006A5C  0642               	decf	(i2xtoa@i+1)^0,f,c
 37926                           
 37927                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 37928  006A5E  0E53               	movlw	low _dbuf
 37929  006A60  2441               	addwf	i2xtoa@i^0,w,c
 37930  006A62  6ED9               	movwf	fsr2l,c
 37931  006A64  0E02               	movlw	high _dbuf
 37932  006A66  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 37933  006A68  6EDA               	movwf	fsr2h,c
 37934  006A6A  0E30               	movlw	48
 37935  006A6C  6EDF               	movwf	indf2,c
 37936  006A6E                     i2l16792:
 37937                           
 37938                           ; BSR set to: 0
 37939                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 37940  006A6E  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 37941  006A74  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 37942  006A7A  0E53               	movlw	low _dbuf
 37943  006A7C  2441               	addwf	i2xtoa@i^0,w,c
 37944  006A7E  6E15               	movwf	i2pad@buf^0,c
 37945  006A80  0E02               	movlw	high _dbuf
 37946  006A82  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 37947  006A84  6E16               	movwf	(i2pad@buf+1)^0,c
 37948  006A86  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 37949  006A8C  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 37950  006A92  ECED  F03E         	call	i2_pad	;wreg free
 37951  006A96  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 37952  006A9C  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 37953  006AA2  0012               	return		;funcret
 37954  006AA4                     __end_ofi2_xtoa:
 37955                           	opt callstack 0
 37956                           
 37957 ;; *************** function i2_toupper *****************
 37958 ;; Defined at:
 37959 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 37960 ;; Parameters:    Size  Location     Type
 37961 ;;  c               2    6[COMRAM] int 
 37962 ;; Auto vars:     Size  Location     Type
 37963 ;;		None
 37964 ;; Return value:  Size  Location     Type
 37965 ;;                  2    6[COMRAM] int 
 37966 ;; Registers used:
 37967 ;;		wreg, status,2, status,0
 37968 ;; Tracked objects:
 37969 ;;		On entry : 0/2
 37970 ;;		On exit  : 0/0
 37971 ;;		Unchanged: 0/0
 37972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37977 ;;Total ram usage:        8 bytes
 37978 ;; Hardware stack levels used:    1
 37979 ;; Hardware stack levels required when called:    1
 37980 ;; This function calls:
 37981 ;;		i2_islower
 37982 ;; This function is called by:
 37983 ;;		i2_xtoa
 37984 ;; This function uses a non-reentrant model
 37985 ;;
 37986                           
 37987                           	psect	text227
 37988  00910A                     __ptext227:
 37989                           	opt callstack 0
 37990  00910A                     i2_toupper:
 37991                           	opt callstack 4
 37992                           
 37993                           ;incstack = 0
 37994  00910A  0E9F               	movlw	159
 37995  00910C  6E09               	movwf	??i2_toupper^0,c
 37996  00910E  0EFF               	movlw	255
 37997  009110  6E0A               	movwf	(??i2_toupper+1)^0,c
 37998  009112  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 37999  009118  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 38000  00911E  5009               	movf	??i2_toupper^0,w,c
 38001  009120  260B               	addwf	(??i2_toupper+2)^0,f,c
 38002  009122  500A               	movf	(??i2_toupper+1)^0,w,c
 38003  009124  220C               	addwfc	(??i2_toupper+3)^0,f,c
 38004  009126  500C               	movf	(??i2_toupper+3)^0,w,c
 38005  009128  E106               	bnz	i2u1673_40
 38006  00912A  0E1A               	movlw	26
 38007  00912C  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 38008  00912E  B0D8               	btfsc	status,0,c
 38009  009130  D002               	goto	i2u1673_40
 38010  009132  0E01               	movlw	1
 38011  009134  D001               	goto	i2u1674_40
 38012  009136                     i2u1673_40:
 38013  009136  0E00               	movlw	0
 38014  009138                     i2u1674_40:
 38015  009138  6E0D               	movwf	i2_toupper$5482^0,c
 38016  00913A  6A0E               	clrf	(i2_toupper$5482+1)^0,c
 38017  00913C  500D               	movf	i2_toupper$5482^0,w,c
 38018  00913E  100E               	iorwf	(i2_toupper$5482+1)^0,w,c
 38019  009140  B4D8               	btfsc	status,2,c
 38020  009142  D005               	goto	i2l3932
 38021  009144  0E5F               	movlw	95
 38022  009146  1407               	andwf	i2toupper@c^0,w,c
 38023  009148  6E07               	movwf	?i2_toupper^0,c
 38024  00914A  6A08               	clrf	(?i2_toupper+1)^0,c
 38025  00914C  0012               	return	
 38026  00914E                     i2l3932:
 38027  00914E  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 38028  009154  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 38029  00915A  0012               	return		;funcret
 38030  00915C                     __end_ofi2_toupper:
 38031                           	opt callstack 0
 38032                           
 38033 ;; *************** function i2_islower *****************
 38034 ;; Defined at:
 38035 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 38036 ;; Parameters:    Size  Location     Type
 38037 ;;  c               2    0[COMRAM] int 
 38038 ;; Auto vars:     Size  Location     Type
 38039 ;;		None
 38040 ;; Return value:  Size  Location     Type
 38041 ;;                  2    0[COMRAM] int 
 38042 ;; Registers used:
 38043 ;;		wreg, status,2, status,0
 38044 ;; Tracked objects:
 38045 ;;		On entry : 0/0
 38046 ;;		On exit  : 0/0
 38047 ;;		Unchanged: 0/0
 38048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38053 ;;Total ram usage:        6 bytes
 38054 ;; Hardware stack levels used:    1
 38055 ;; This function calls:
 38056 ;;		Nothing
 38057 ;; This function is called by:
 38058 ;;		i2_toupper
 38059 ;; This function uses a non-reentrant model
 38060 ;;
 38061                           
 38062                           	psect	text228
 38063  009848                     __ptext228:
 38064                           	opt callstack 0
 38065  009848                     i2_islower:
 38066                           	opt callstack 4
 38067                           
 38068                           ;incstack = 0
 38069  009848  0E9F               	movlw	159
 38070  00984A  6E03               	movwf	??i2_islower^0,c
 38071  00984C  0EFF               	movlw	255
 38072  00984E  6E04               	movwf	(??i2_islower+1)^0,c
 38073  009850  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 38074  009856  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 38075  00985C  5003               	movf	??i2_islower^0,w,c
 38076  00985E  2605               	addwf	(??i2_islower+2)^0,f,c
 38077  009860  5004               	movf	(??i2_islower+1)^0,w,c
 38078  009862  2206               	addwfc	(??i2_islower+3)^0,f,c
 38079  009864  5006               	movf	(??i2_islower+3)^0,w,c
 38080  009866  E106               	bnz	i2u1606_40
 38081  009868  0E1A               	movlw	26
 38082  00986A  5C05               	subwf	(??i2_islower+2)^0,w,c
 38083  00986C  B0D8               	btfsc	status,0,c
 38084  00986E  D002               	goto	i2u1606_40
 38085  009870  0E01               	movlw	1
 38086  009872  D001               	goto	i2u1607_40
 38087  009874                     i2u1606_40:
 38088  009874  0E00               	movlw	0
 38089  009876                     i2u1607_40:
 38090  009876  6E01               	movwf	?i2_islower^0,c
 38091  009878  6A02               	clrf	(?i2_islower+1)^0,c
 38092  00987A  0012               	return		;funcret
 38093  00987C                     __end_ofi2_islower:
 38094                           	opt callstack 0
 38095                           
 38096 ;; *************** function i2_isupper *****************
 38097 ;; Defined at:
 38098 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 38099 ;; Parameters:    Size  Location     Type
 38100 ;;  c               2    0[COMRAM] int 
 38101 ;; Auto vars:     Size  Location     Type
 38102 ;;		None
 38103 ;; Return value:  Size  Location     Type
 38104 ;;                  2    0[COMRAM] int 
 38105 ;; Registers used:
 38106 ;;		wreg, status,2, status,0
 38107 ;; Tracked objects:
 38108 ;;		On entry : 0/0
 38109 ;;		On exit  : 0/0
 38110 ;;		Unchanged: 0/0
 38111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38115 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38116 ;;Total ram usage:        6 bytes
 38117 ;; Hardware stack levels used:    1
 38118 ;; This function calls:
 38119 ;;		Nothing
 38120 ;; This function is called by:
 38121 ;;		i2_xtoa
 38122 ;; This function uses a non-reentrant model
 38123 ;;
 38124                           
 38125                           	psect	text229
 38126  00987C                     __ptext229:
 38127                           	opt callstack 0
 38128  00987C                     i2_isupper:
 38129                           	opt callstack 5
 38130                           
 38131                           ;incstack = 0
 38132  00987C  0EBF               	movlw	191
 38133  00987E  6E03               	movwf	??i2_isupper^0,c
 38134  009880  0EFF               	movlw	255
 38135  009882  6E04               	movwf	(??i2_isupper+1)^0,c
 38136  009884  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 38137  00988A  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 38138  009890  5003               	movf	??i2_isupper^0,w,c
 38139  009892  2605               	addwf	(??i2_isupper+2)^0,f,c
 38140  009894  5004               	movf	(??i2_isupper+1)^0,w,c
 38141  009896  2206               	addwfc	(??i2_isupper+3)^0,f,c
 38142  009898  5006               	movf	(??i2_isupper+3)^0,w,c
 38143  00989A  E106               	bnz	i2u1671_40
 38144  00989C  0E1A               	movlw	26
 38145  00989E  5C05               	subwf	(??i2_isupper+2)^0,w,c
 38146  0098A0  B0D8               	btfsc	status,0,c
 38147  0098A2  D002               	goto	i2u1671_40
 38148  0098A4  0E01               	movlw	1
 38149  0098A6  D001               	goto	i2u1672_40
 38150  0098A8                     i2u1671_40:
 38151  0098A8  0E00               	movlw	0
 38152  0098AA                     i2u1672_40:
 38153  0098AA  6E01               	movwf	?i2_isupper^0,c
 38154  0098AC  6A02               	clrf	(?i2_isupper+1)^0,c
 38155  0098AE  0012               	return		;funcret
 38156  0098B0                     __end_ofi2_isupper:
 38157                           	opt callstack 0
 38158                           
 38159 ;; *************** function i2_isalpha *****************
 38160 ;; Defined at:
 38161 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 38162 ;; Parameters:    Size  Location     Type
 38163 ;;  c               2    0[COMRAM] int 
 38164 ;; Auto vars:     Size  Location     Type
 38165 ;;		None
 38166 ;; Return value:  Size  Location     Type
 38167 ;;                  2    0[COMRAM] int 
 38168 ;; Registers used:
 38169 ;;		wreg, status,2, status,0
 38170 ;; Tracked objects:
 38171 ;;		On entry : 0/0
 38172 ;;		On exit  : 0/0
 38173 ;;		Unchanged: 0/0
 38174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38179 ;;Total ram usage:        6 bytes
 38180 ;; Hardware stack levels used:    1
 38181 ;; This function calls:
 38182 ;;		Nothing
 38183 ;; This function is called by:
 38184 ;;		i2_xtoa
 38185 ;; This function uses a non-reentrant model
 38186 ;;
 38187                           
 38188                           	psect	text230
 38189  0098B0                     __ptext230:
 38190                           	opt callstack 0
 38191  0098B0                     i2_isalpha:
 38192                           	opt callstack 5
 38193                           
 38194                           ;incstack = 0
 38195  0098B0  0E9F               	movlw	159
 38196  0098B2  6E03               	movwf	??i2_isalpha^0,c
 38197  0098B4  0EFF               	movlw	255
 38198  0098B6  6E04               	movwf	(??i2_isalpha+1)^0,c
 38199  0098B8  0E20               	movlw	32
 38200  0098BA  1001               	iorwf	i2isalpha@c^0,w,c
 38201  0098BC  6E05               	movwf	(??i2_isalpha+2)^0,c
 38202  0098BE  0E00               	movlw	0
 38203  0098C0  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 38204  0098C2  6E06               	movwf	(??i2_isalpha+3)^0,c
 38205  0098C4  5003               	movf	??i2_isalpha^0,w,c
 38206  0098C6  2605               	addwf	(??i2_isalpha+2)^0,f,c
 38207  0098C8  5004               	movf	(??i2_isalpha+1)^0,w,c
 38208  0098CA  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 38209  0098CC  5006               	movf	(??i2_isalpha+3)^0,w,c
 38210  0098CE  E106               	bnz	i2u1665_40
 38211  0098D0  0E1A               	movlw	26
 38212  0098D2  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 38213  0098D4  B0D8               	btfsc	status,0,c
 38214  0098D6  D002               	goto	i2u1665_40
 38215  0098D8  0E01               	movlw	1
 38216  0098DA  D001               	goto	i2u1666_40
 38217  0098DC                     i2u1665_40:
 38218  0098DC  0E00               	movlw	0
 38219  0098DE                     i2u1666_40:
 38220  0098DE  6E01               	movwf	?i2_isalpha^0,c
 38221  0098E0  6A02               	clrf	(?i2_isalpha+1)^0,c
 38222  0098E2  0012               	return		;funcret
 38223  0098E4                     __end_ofi2_isalpha:
 38224                           	opt callstack 0
 38225                           
 38226 ;; *************** function i2_dtoa *****************
 38227 ;; Defined at:
 38228 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 38229 ;; Parameters:    Size  Location     Type
 38230 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 38231 ;;		 -> sprintf@f(6), NULL(0), 
 38232 ;;  d               8   31[COMRAM] long long 
 38233 ;; Auto vars:     Size  Location     Type
 38234 ;;  dtoa            8   55[COMRAM] long long 
 38235 ;;  dtoa            2   63[COMRAM] int 
 38236 ;;  dtoa            2   53[COMRAM] int 
 38237 ;;  dtoa            2   51[COMRAM] int 
 38238 ;;  dtoa            2   49[COMRAM] int 
 38239 ;; Return value:  Size  Location     Type
 38240 ;;                  2   29[COMRAM] int 
 38241 ;; Registers used:
 38242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38243 ;; Tracked objects:
 38244 ;;		On entry : 3F/0
 38245 ;;		On exit  : 0/0
 38246 ;;		Unchanged: 0/0
 38247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38248 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38249 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38250 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38251 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38252 ;;Total ram usage:       36 bytes
 38253 ;; Hardware stack levels used:    1
 38254 ;; Hardware stack levels required when called:    5
 38255 ;; This function calls:
 38256 ;;		i2___aodiv
 38257 ;;		i2___aomod
 38258 ;;		i2_abs
 38259 ;;		i2_pad
 38260 ;; This function is called by:
 38261 ;;		i2_vfpfcnvrt
 38262 ;; This function uses a non-reentrant model
 38263 ;;
 38264                           
 38265                           	psect	text231
 38266  005DBC                     __ptext231:
 38267                           	opt callstack 0
 38268  005DBC                     i2_dtoa:
 38269                           	opt callstack 1
 38270                           
 38271                           ; BSR set to: 0
 38272                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 38273                           
 38274                           ;incstack = 0
 38275  005DBC  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 38276  005DC2  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 38277  005DC8  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 38278  005DCE  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 38279  005DD4  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 38280  005DDA  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 38281  005DE0  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 38282  005DE6  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 38283                           
 38284                           ; BSR set to: 0
 38285                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 38286  005DEC  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 38287  005DEE  D002               	goto	i2u1689_40
 38288  005DF0  0E01               	movlw	1
 38289  005DF2  D001               	goto	i2u1690_40
 38290  005DF4                     i2u1689_40:
 38291  005DF4  0E00               	movlw	0
 38292  005DF6                     i2u1690_40:
 38293  005DF6  6E36               	movwf	i2dtoa@s^0,c
 38294  005DF8  6A37               	clrf	(i2dtoa@s+1)^0,c
 38295                           
 38296                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 38297  005DFA  5036               	movf	i2dtoa@s^0,w,c
 38298  005DFC  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38299  005DFE  B4D8               	btfsc	status,2,c
 38300  005E00  D010               	goto	i2l16674
 38301                           
 38302                           ; BSR set to: 0
 38303                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 38304  005E02  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 38305  005E04  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 38306  005E06  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 38307  005E08  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 38308  005E0A  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 38309  005E0C  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 38310  005E0E  1E39               	comf	(i2dtoa@n+1)^0,f,c
 38311  005E10  6C38               	negf	i2dtoa@n^0,c
 38312  005E12  0E00               	movlw	0
 38313  005E14  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 38314  005E16  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 38315  005E18  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 38316  005E1A  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 38317  005E1C  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 38318  005E1E  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 38319  005E20  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 38320  005E22                     i2l16674:
 38321                           
 38322                           ; BSR set to: 0
 38323                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 38324  005E22  AFB5               	btfss	(_prec+1)& (0+255),7,b
 38325                           
 38326                           ; BSR set to: 0
 38327                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 38328  005E24  93B6               	bcf	_flags& (0+255),1,b
 38329                           
 38330                           ; BSR set to: 0
 38331                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 38332  005E26  BFB5               	btfsc	(_prec+1)& (0+255),7,b
 38333  005E28  D005               	goto	i2u1693_40
 38334  005E2A  51B5               	movf	(_prec+1)& (0+255),w,b
 38335  005E2C  E108               	bnz	i2l3060
 38336  005E2E  05B4               	decf	_prec& (0+255),w,b
 38337  005E30  B0D8               	btfsc	status,0,c
 38338  005E32  D005               	goto	i2l3060
 38339  005E34                     i2u1693_40:
 38340                           
 38341                           ; BSR set to: 0
 38342  005E34  0E00               	movlw	0
 38343  005E36  6E33               	movwf	(i2dtoa@p+1)^0,c
 38344  005E38  0E01               	movlw	1
 38345  005E3A  6E32               	movwf	i2dtoa@p^0,c
 38346  005E3C  D006               	goto	i2l3062
 38347  005E3E                     i2l3060:
 38348                           
 38349                           ; BSR set to: 0
 38350  005E3E  0060  F2D0  F032   	movff	_prec,i2dtoa@p
 38351  005E44  0060  F2D4  F033   	movff	_prec+1,i2dtoa@p+1
 38352  005E4A                     i2l3062:
 38353                           
 38354                           ; BSR set to: 0
 38355                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 38356  005E4A  0060  F2C8  F034   	movff	_width,i2dtoa@w
 38357  005E50  0060  F2CC  F035   	movff	_width+1,i2dtoa@w+1
 38358                           
 38359                           ; BSR set to: 0
 38360                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 38361  005E56  5036               	movf	i2dtoa@s^0,w,c
 38362  005E58  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38363  005E5A  A4D8               	btfss	status,2,c
 38364  005E5C  D002               	goto	i2u1695_40
 38365                           
 38366                           ; BSR set to: 0
 38367  005E5E  A5B6               	btfss	_flags& (0+255),2,b
 38368  005E60  D003               	goto	i2l16688
 38369  005E62                     i2u1695_40:
 38370                           
 38371                           ; BSR set to: 0
 38372                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 38373  005E62  0634               	decf	i2dtoa@w^0,f,c
 38374  005E64  A0D8               	btfss	status,0,c
 38375  005E66  0635               	decf	(i2dtoa@w+1)^0,f,c
 38376  005E68                     i2l16688:
 38377                           
 38378                           ; BSR set to: 0
 38379                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 38380  005E68  0E00               	movlw	0
 38381  005E6A  6E41               	movwf	(i2dtoa@i+1)^0,c
 38382  005E6C  0E1F               	movlw	31
 38383  005E6E  6E40               	movwf	i2dtoa@i^0,c
 38384                           
 38385                           ; BSR set to: 0
 38386                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 38387  005E70  0E00               	movlw	0
 38388  005E72  0102               	movlb	2	; () banked
 38389  005E74  6F72               	movwf	(_dbuf+31)& (0+255),b
 38390                           
 38391                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38392  005E76  D09E               	goto	i2l16702
 38393  005E78                     i2l16692:
 38394                           
 38395                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 38396  005E78  0640               	decf	i2dtoa@i^0,f,c
 38397  005E7A  A0D8               	btfss	status,0,c
 38398  005E7C  0641               	decf	(i2dtoa@i+1)^0,f,c
 38399                           
 38400                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 38401  005E7E  0E53               	movlw	low _dbuf
 38402  005E80  2440               	addwf	i2dtoa@i^0,w,c
 38403  005E82  6ED9               	movwf	fsr2l,c
 38404  005E84  0E02               	movlw	high _dbuf
 38405  005E86  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38406  005E88  6EDA               	movwf	fsr2h,c
 38407  005E8A  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 38408  005E90  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 38409  005E96  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 38410  005E9C  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 38411  005EA2  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 38412  005EA8  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 38413  005EAE  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 38414  005EB4  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 38415  005EBA  0E0A               	movlw	10
 38416  005EBC  6E09               	movwf	i2___aomod@divisor^0,c
 38417  005EBE  0E00               	movlw	0
 38418  005EC0  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 38419  005EC2  0E00               	movlw	0
 38420  005EC4  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 38421  005EC6  0E00               	movlw	0
 38422  005EC8  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 38423  005ECA  0E00               	movlw	0
 38424  005ECC  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 38425  005ECE  0E00               	movlw	0
 38426  005ED0  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 38427  005ED2  0E00               	movlw	0
 38428  005ED4  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 38429  005ED6  0E00               	movlw	0
 38430  005ED8  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 38431  005EDA  EC40  F03A         	call	i2___aomod	;wreg free
 38432  005EDE  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 38433  005EE4  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 38434  005EEA  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 38435  005EF0  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 38436  005EF6  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 38437  005EFC  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 38438  005F02  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 38439  005F08  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 38440  005F0E  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 38441  005F14  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 38442  005F1A  ECB5  F04A         	call	i2_abs	;wreg free
 38443  005F1E  5013               	movf	?i2_abs^0,w,c
 38444  005F20  0F30               	addlw	48
 38445  005F22  6EDF               	movwf	indf2,c
 38446                           
 38447                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 38448  005F24  0632               	decf	i2dtoa@p^0,f,c
 38449  005F26  A0D8               	btfss	status,0,c
 38450  005F28  0633               	decf	(i2dtoa@p+1)^0,f,c
 38451                           
 38452                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 38453  005F2A  0634               	decf	i2dtoa@w^0,f,c
 38454  005F2C  A0D8               	btfss	status,0,c
 38455  005F2E  0635               	decf	(i2dtoa@w+1)^0,f,c
 38456                           
 38457                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 38458  005F30  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 38459  005F36  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 38460  005F3C  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 38461  005F42  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 38462  005F48  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 38463  005F4E  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 38464  005F54  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 38465  005F5A  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 38466  005F60  0E0A               	movlw	10
 38467  005F62  6E09               	movwf	i2___aodiv@divisor^0,c
 38468  005F64  0E00               	movlw	0
 38469  005F66  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 38470  005F68  0E00               	movlw	0
 38471  005F6A  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 38472  005F6C  0E00               	movlw	0
 38473  005F6E  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 38474  005F70  0E00               	movlw	0
 38475  005F72  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 38476  005F74  0E00               	movlw	0
 38477  005F76  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 38478  005F78  0E00               	movlw	0
 38479  005F7A  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 38480  005F7C  0E00               	movlw	0
 38481  005F7E  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 38482  005F80  ECFA  F038         	call	i2___aodiv	;wreg free
 38483  005F84  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 38484  005F8A  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 38485  005F90  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 38486  005F96  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 38487  005F9C  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 38488  005FA2  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 38489  005FA8  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 38490  005FAE  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 38491  005FB4                     i2l16702:
 38492                           
 38493                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 38494  005FB4  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 38495  005FB6  D020               	goto	i2u1700_40
 38496  005FB8  5041               	movf	(i2dtoa@i+1)^0,w,c
 38497  005FBA  E103               	bnz	i2u1696_40
 38498  005FBC  0440               	decf	i2dtoa@i^0,w,c
 38499  005FBE  A0D8               	btfss	status,0,c
 38500  005FC0  D01B               	goto	i2u1700_40
 38501  005FC2                     i2u1696_40:
 38502  005FC2  5038               	movf	i2dtoa@n^0,w,c
 38503  005FC4  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 38504  005FC6  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 38505  005FC8  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 38506  005FCA  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 38507  005FCC  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 38508  005FCE  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 38509  005FD0  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 38510  005FD2  A4D8               	btfss	status,2,c
 38511  005FD4  D751               	goto	i2l16692
 38512  005FD6  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 38513  005FD8  D005               	goto	i2u1698_40
 38514  005FDA  5033               	movf	(i2dtoa@p+1)^0,w,c
 38515  005FDC  E102               	bnz	i2u1698_41
 38516  005FDE  0432               	decf	i2dtoa@p^0,w,c
 38517  005FE0  B0D8               	btfsc	status,0,c
 38518  005FE2                     i2u1698_41:
 38519  005FE2  D74A               	goto	i2l16692
 38520  005FE4                     i2u1698_40:
 38521  005FE4  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 38522  005FE6  D008               	goto	i2u1700_40
 38523  005FE8  5035               	movf	(i2dtoa@w+1)^0,w,c
 38524  005FEA  E103               	bnz	i2u1699_40
 38525  005FEC  0434               	decf	i2dtoa@w^0,w,c
 38526  005FEE  A0D8               	btfss	status,0,c
 38527  005FF0  D003               	goto	i2u1700_40
 38528  005FF2                     i2u1699_40:
 38529  005FF2  0100               	movlb	0	; () banked
 38530  005FF4  B3B6               	btfsc	_flags& (0+255),1,b
 38531  005FF6  D740               	goto	i2l16692
 38532  005FF8                     i2u1700_40:
 38533                           
 38534                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 38535  005FF8  5036               	movf	i2dtoa@s^0,w,c
 38536  005FFA  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38537  005FFC  A4D8               	btfss	status,2,c
 38538  005FFE  D003               	goto	i2u1702_40
 38539  006000  0100               	movlb	0	; () banked
 38540  006002  A5B6               	btfss	_flags& (0+255),2,b
 38541  006004  D018               	goto	i2l16726
 38542  006006                     i2u1702_40:
 38543                           
 38544                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 38545  006006  0640               	decf	i2dtoa@i^0,f,c
 38546  006008  A0D8               	btfss	status,0,c
 38547  00600A  0641               	decf	(i2dtoa@i+1)^0,f,c
 38548                           
 38549                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 38550  00600C  5036               	movf	i2dtoa@s^0,w,c
 38551  00600E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 38552  006010  A4D8               	btfss	status,2,c
 38553  006012  D004               	goto	i2l16722
 38554  006014  0E00               	movlw	0
 38555  006016  6E31               	movwf	(i2_dtoa$4890+1)^0,c
 38556  006018  0E2B               	movlw	43
 38557  00601A  D003               	goto	L59
 38558  00601C                     i2l16722:
 38559  00601C  0E00               	movlw	0
 38560  00601E  6E31               	movwf	(i2_dtoa$4890+1)^0,c
 38561  006020  0E2D               	movlw	45
 38562  006022                     L59:
 38563  006022  6E30               	movwf	i2_dtoa$4890^0,c
 38564  006024  0E53               	movlw	low _dbuf
 38565  006026  2440               	addwf	i2dtoa@i^0,w,c
 38566  006028  6ED9               	movwf	fsr2l,c
 38567  00602A  0E02               	movlw	high _dbuf
 38568  00602C  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38569  00602E  6EDA               	movwf	fsr2h,c
 38570  006030  0060  F0C3  FFDF   	movff	i2_dtoa$4890,indf2
 38571  006036                     i2l16726:
 38572                           
 38573                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 38574  006036  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 38575  00603C  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 38576  006042  0E53               	movlw	low _dbuf
 38577  006044  2440               	addwf	i2dtoa@i^0,w,c
 38578  006046  6E15               	movwf	i2pad@buf^0,c
 38579  006048  0E02               	movlw	high _dbuf
 38580  00604A  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 38581  00604C  6E16               	movwf	(i2pad@buf+1)^0,c
 38582  00604E  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 38583  006054  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 38584  00605A  ECED  F03E         	call	i2_pad	;wreg free
 38585  00605E  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 38586  006064  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 38587  00606A  0012               	return		;funcret
 38588  00606C                     __end_ofi2_dtoa:
 38589                           	opt callstack 0
 38590                           
 38591 ;; *************** function i2_pad *****************
 38592 ;; Defined at:
 38593 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 38594 ;; Parameters:    Size  Location     Type
 38595 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 38596 ;;		 -> sprintf@f(6), NULL(0), 
 38597 ;;  buf             2   20[COMRAM] PTR unsigned char 
 38598 ;;		 -> dbuf(32), 
 38599 ;;  p               2   22[COMRAM] int 
 38600 ;; Auto vars:     Size  Location     Type
 38601 ;;  pad             2   27[COMRAM] int 
 38602 ;;  pad             2   25[COMRAM] int 
 38603 ;; Return value:  Size  Location     Type
 38604 ;;                  2   18[COMRAM] int 
 38605 ;; Registers used:
 38606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38607 ;; Tracked objects:
 38608 ;;		On entry : 0/0
 38609 ;;		On exit  : 0/0
 38610 ;;		Unchanged: 0/0
 38611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38612 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38616 ;;Total ram usage:       11 bytes
 38617 ;; Hardware stack levels used:    1
 38618 ;; Hardware stack levels required when called:    4
 38619 ;; This function calls:
 38620 ;;		i2_fputc
 38621 ;;		i2_fputs
 38622 ;;		i2_strlen
 38623 ;; This function is called by:
 38624 ;;		i2_dtoa
 38625 ;;		i2_xtoa
 38626 ;; This function uses a non-reentrant model
 38627 ;;
 38628                           
 38629                           	psect	text232
 38630  007DDA                     __ptext232:
 38631                           	opt callstack 0
 38632  007DDA                     i2_pad:
 38633                           	opt callstack 1
 38634                           
 38635                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 38636                           
 38637                           ;incstack = 0
 38638  007DDA  0100               	movlb	0	; () banked
 38639  007DDC  A1B6               	btfss	_flags& (0+255),0,b
 38640  007DDE  D00E               	goto	i2l16416
 38641                           
 38642                           ; BSR set to: 0
 38643                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 38644  007DE0  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 38645  007DE6  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 38646  007DEC  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 38647  007DF2  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 38648  007DF8  EC96  F04A         	call	i2_fputs	;wreg free
 38649  007DFC                     i2l16416:
 38650                           
 38651                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 38652  007DFC  BE18               	btfsc	(i2pad@p+1)^0,7,c
 38653  007DFE  D007               	goto	i2l16420
 38654  007E00  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 38655  007E06  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 38656  007E0C  D004               	goto	i2l3049
 38657  007E0E                     i2l16420:
 38658  007E0E  0E00               	movlw	0
 38659  007E10  6E1D               	movwf	(i2pad@w+1)^0,c
 38660  007E12  0E00               	movlw	0
 38661  007E14  6E1C               	movwf	i2pad@w^0,c
 38662  007E16                     i2l3049:
 38663                           
 38664                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 38665  007E16  0E00               	movlw	0
 38666  007E18  6E1B               	movwf	(i2pad@i+1)^0,c
 38667  007E1A  0E00               	movlw	0
 38668  007E1C  6E1A               	movwf	i2pad@i^0,c
 38669                           
 38670                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 38671  007E1E  D00E               	goto	i2l16426
 38672  007E20                     i2l16422:
 38673                           
 38674                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 38675  007E20  0E00               	movlw	0
 38676  007E22  6E04               	movwf	(i2fputc@c+1)^0,c
 38677  007E24  0E20               	movlw	32
 38678  007E26  6E03               	movwf	i2fputc@c^0,c
 38679  007E28  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 38680  007E2E  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 38681  007E34  EC51  F040         	call	i2_fputc	;wreg free
 38682                           
 38683                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 38684  007E38  4A1A               	infsnz	i2pad@i^0,f,c
 38685  007E3A  2A1B               	incf	(i2pad@i+1)^0,f,c
 38686  007E3C                     i2l16426:
 38687                           
 38688                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 38689  007E3C  501C               	movf	i2pad@w^0,w,c
 38690  007E3E  5C1A               	subwf	i2pad@i^0,w,c
 38691  007E40  501B               	movf	(i2pad@i+1)^0,w,c
 38692  007E42  0A80               	xorlw	128
 38693  007E44  6E19               	movwf	??i2_pad^0,c
 38694  007E46  501D               	movf	(i2pad@w+1)^0,w,c
 38695  007E48  0A80               	xorlw	128
 38696  007E4A  5819               	subwfb	??i2_pad^0,w,c
 38697  007E4C  A0D8               	btfss	status,0,c
 38698  007E4E  D7E8               	goto	i2l16422
 38699                           
 38700                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 38701  007E50  0100               	movlb	0	; () banked
 38702  007E52  B1B6               	btfsc	_flags& (0+255),0,b
 38703  007E54  D00E               	goto	i2l16430
 38704                           
 38705                           ; BSR set to: 0
 38706                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 38707  007E56  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 38708  007E5C  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 38709  007E62  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 38710  007E68  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 38711  007E6E  EC96  F04A         	call	i2_fputs	;wreg free
 38712  007E72                     i2l16430:
 38713                           
 38714                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 38715  007E72  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 38716  007E78  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 38717  007E7E  ECF0  F04C         	call	i2_strlen	;wreg free
 38718  007E82  501C               	movf	i2pad@w^0,w,c
 38719  007E84  2401               	addwf	?i2_strlen^0,w,c
 38720  007E86  6E13               	movwf	?i2_pad^0,c
 38721  007E88  501D               	movf	(i2pad@w+1)^0,w,c
 38722  007E8A  2002               	addwfc	(?i2_strlen+1)^0,w,c
 38723  007E8C  6E14               	movwf	(?i2_pad+1)^0,c
 38724  007E8E  0012               	return		;funcret
 38725  007E90                     __end_ofi2_pad:
 38726                           	opt callstack 0
 38727                           
 38728 ;; *************** function i2_strlen *****************
 38729 ;; Defined at:
 38730 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 38731 ;; Parameters:    Size  Location     Type
 38732 ;;  s               2    0[COMRAM] PTR const unsigned char 
 38733 ;;		 -> dbuf(32), 
 38734 ;; Auto vars:     Size  Location     Type
 38735 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 38736 ;;		 -> dbuf(32), 
 38737 ;; Return value:  Size  Location     Type
 38738 ;;                  2    0[COMRAM] unsigned int 
 38739 ;; Registers used:
 38740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38741 ;; Tracked objects:
 38742 ;;		On entry : 0/0
 38743 ;;		On exit  : 0/0
 38744 ;;		Unchanged: 0/0
 38745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38750 ;;Total ram usage:        4 bytes
 38751 ;; Hardware stack levels used:    1
 38752 ;; This function calls:
 38753 ;;		Nothing
 38754 ;; This function is called by:
 38755 ;;		i2_pad
 38756 ;; This function uses a non-reentrant model
 38757 ;;
 38758                           
 38759                           	psect	text233
 38760  0099E0                     __ptext233:
 38761                           	opt callstack 0
 38762  0099E0                     i2_strlen:
 38763                           	opt callstack 4
 38764                           
 38765                           ;incstack = 0
 38766  0099E0  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 38767  0099E6  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 38768  0099EC  D002               	goto	i2l16232
 38769  0099EE                     i2l16230:
 38770  0099EE  4A01               	infsnz	i2strlen@s^0,f,c
 38771  0099F0  2A02               	incf	(i2strlen@s+1)^0,f,c
 38772  0099F2                     i2l16232:
 38773  0099F2  0060  F007  FFD9   	movff	i2strlen@s,fsr2l
 38774  0099F8  0060  F00B  FFDA   	movff	i2strlen@s+1,fsr2h
 38775  0099FE  50DF               	movf	indf2,w,c
 38776  009A00  A4D8               	btfss	status,2,c
 38777  009A02  D7F5               	goto	i2l16230
 38778  009A04  5003               	movf	i2strlen@a^0,w,c
 38779  009A06  5C01               	subwf	i2strlen@s^0,w,c
 38780  009A08  6E01               	movwf	?i2_strlen^0,c
 38781  009A0A  5004               	movf	(i2strlen@a+1)^0,w,c
 38782  009A0C  5802               	subwfb	(i2strlen@s+1)^0,w,c
 38783  009A0E  6E02               	movwf	(?i2_strlen+1)^0,c
 38784  009A10  0012               	return		;funcret
 38785  009A12                     __end_ofi2_strlen:
 38786                           	opt callstack 0
 38787                           
 38788 ;; *************** function i2_fputs *****************
 38789 ;; Defined at:
 38790 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 38791 ;; Parameters:    Size  Location     Type
 38792 ;;  s               2   11[COMRAM] PTR const unsigned char 
 38793 ;;		 -> dbuf(32), 
 38794 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 38795 ;;		 -> sprintf@f(6), NULL(0), 
 38796 ;; Auto vars:     Size  Location     Type
 38797 ;;  fputs           2   16[COMRAM] int 
 38798 ;;  fputs           1   15[COMRAM] unsigned char 
 38799 ;; Return value:  Size  Location     Type
 38800 ;;                  2   11[COMRAM] int 
 38801 ;; Registers used:
 38802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38803 ;; Tracked objects:
 38804 ;;		On entry : 3F/0
 38805 ;;		On exit  : 0/0
 38806 ;;		Unchanged: 0/0
 38807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38809 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38812 ;;Total ram usage:        7 bytes
 38813 ;; Hardware stack levels used:    1
 38814 ;; Hardware stack levels required when called:    3
 38815 ;; This function calls:
 38816 ;;		i2_fputc
 38817 ;; This function is called by:
 38818 ;;		i2_pad
 38819 ;; This function uses a non-reentrant model
 38820 ;;
 38821                           
 38822                           	psect	text234
 38823  00952C                     __ptext234:
 38824                           	opt callstack 0
 38825  00952C                     i2_fputs:
 38826                           	opt callstack 1
 38827                           
 38828                           ; BSR set to: 0
 38829                           
 38830                           ;incstack = 0
 38831  00952C  0E00               	movlw	0
 38832  00952E  6E12               	movwf	(i2fputs@i+1)^0,c
 38833  009530  0E00               	movlw	0
 38834  009532  6E11               	movwf	i2fputs@i^0,c
 38835  009534  D00E               	goto	i2l16226
 38836  009536                     i2l16222:
 38837  009536  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 38838  00953C  6A04               	clrf	(i2fputc@c+1)^0,c
 38839  00953E  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 38840  009544  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 38841  00954A  EC51  F040         	call	i2_fputc	;wreg free
 38842  00954E  4A11               	infsnz	i2fputs@i^0,f,c
 38843  009550  2A12               	incf	(i2fputs@i+1)^0,f,c
 38844  009552                     i2l16226:
 38845  009552  5011               	movf	i2fputs@i^0,w,c
 38846  009554  240C               	addwf	i2fputs@s^0,w,c
 38847  009556  6ED9               	movwf	fsr2l,c
 38848  009558  5012               	movf	(i2fputs@i+1)^0,w,c
 38849  00955A  200D               	addwfc	(i2fputs@s+1)^0,w,c
 38850  00955C  6EDA               	movwf	fsr2h,c
 38851  00955E  50DF               	movf	indf2,w,c
 38852  009560  6E10               	movwf	i2fputs@c^0,c
 38853  009562  5010               	movf	i2fputs@c^0,w,c
 38854  009564  B4D8               	btfsc	status,2,c
 38855  009566  0012               	return	
 38856  009568  D7E6               	goto	i2l16222
 38857  00956A                     __end_ofi2_fputs:
 38858                           	opt callstack 0
 38859                           
 38860 ;; *************** function i2_fputc *****************
 38861 ;; Defined at:
 38862 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 38863 ;; Parameters:    Size  Location     Type
 38864 ;;  c               2    2[COMRAM] int 
 38865 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 38866 ;;		 -> sprintf@f(6), NULL(0), 
 38867 ;; Auto vars:     Size  Location     Type
 38868 ;;		None
 38869 ;; Return value:  Size  Location     Type
 38870 ;;                  2    2[COMRAM] int 
 38871 ;; Registers used:
 38872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38873 ;; Tracked objects:
 38874 ;;		On entry : 0/0
 38875 ;;		On exit  : 0/0
 38876 ;;		Unchanged: 0/0
 38877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38880 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38882 ;;Total ram usage:        9 bytes
 38883 ;; Hardware stack levels used:    1
 38884 ;; Hardware stack levels required when called:    2
 38885 ;; This function calls:
 38886 ;;		i2_putch
 38887 ;; This function is called by:
 38888 ;;		i2_pad
 38889 ;;		i2_vfpfcnvrt
 38890 ;;		i2_fputs
 38891 ;; This function uses a non-reentrant model
 38892 ;;
 38893                           
 38894                           	psect	text235
 38895  0080A2                     __ptext235:
 38896                           	opt callstack 0
 38897  0080A2                     i2_fputc:
 38898                           	opt callstack 1
 38899                           
 38900                           ;incstack = 0
 38901  0080A2  5005               	movf	i2fputc@fp^0,w,c
 38902  0080A4  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 38903  0080A6  B4D8               	btfsc	status,2,c
 38904  0080A8  D004               	goto	i2u1572_40
 38905  0080AA  5005               	movf	i2fputc@fp^0,w,c
 38906  0080AC  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 38907  0080AE  A4D8               	btfss	status,2,c
 38908  0080B0  D004               	goto	i2l16066
 38909  0080B2                     i2u1572_40:
 38910  0080B2  5003               	movf	i2fputc@c^0,w,c
 38911  0080B4  ECE7  F050         	call	i2_putch
 38912  0080B8  0012               	return	
 38913  0080BA                     i2l16066:
 38914  0080BA  EE20 F004          	lfsr	2,4
 38915  0080BE  5005               	movf	i2fputc@fp^0,w,c
 38916  0080C0  26D9               	addwf	fsr2l,f,c
 38917  0080C2  5006               	movf	(i2fputc@fp+1)^0,w,c
 38918  0080C4  22DA               	addwfc	fsr2h,f,c
 38919  0080C6  50DE               	movf	postinc2,w,c
 38920  0080C8  10DE               	iorwf	postinc2,w,c
 38921  0080CA  B4D8               	btfsc	status,2,c
 38922  0080CC  D016               	goto	i2u1574_40
 38923  0080CE  EE20 F004          	lfsr	2,4
 38924  0080D2  5005               	movf	i2fputc@fp^0,w,c
 38925  0080D4  26D9               	addwf	fsr2l,f,c
 38926  0080D6  5006               	movf	(i2fputc@fp+1)^0,w,c
 38927  0080D8  22DA               	addwfc	fsr2h,f,c
 38928  0080DA  EE10 F002          	lfsr	1,2
 38929  0080DE  5005               	movf	i2fputc@fp^0,w,c
 38930  0080E0  26E1               	addwf	fsr1l,f,c
 38931  0080E2  5006               	movf	(i2fputc@fp+1)^0,w,c
 38932  0080E4  22E2               	addwfc	fsr1h,f,c
 38933  0080E6  50DE               	movf	postinc2,w,c
 38934  0080E8  5CE6               	subwf	postinc1,w,c
 38935  0080EA  50E6               	movf	postinc1,w,c
 38936  0080EC  0A80               	xorlw	128
 38937  0080EE  6E0B               	movwf	(??i2_fputc+4)^0,c
 38938  0080F0  50DE               	movf	postinc2,w,c
 38939  0080F2  0A80               	xorlw	128
 38940  0080F4  580B               	subwfb	(??i2_fputc+4)^0,w,c
 38941  0080F6  B0D8               	btfsc	status,0,c
 38942  0080F8  0012               	return	
 38943  0080FA                     i2u1574_40:
 38944  0080FA  EE20 F002          	lfsr	2,2
 38945  0080FE  5005               	movf	i2fputc@fp^0,w,c
 38946  008100  26D9               	addwf	fsr2l,f,c
 38947  008102  5006               	movf	(i2fputc@fp+1)^0,w,c
 38948  008104  22DA               	addwfc	fsr2h,f,c
 38949  008106  006F FF78  F007    	movff	postinc2,??i2_fputc
 38950  00810C  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 38951  008112  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 38952  008118  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 38953  00811E  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 38954  008124  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 38955  00812A  5007               	movf	??i2_fputc^0,w,c
 38956  00812C  2409               	addwf	(??i2_fputc+2)^0,w,c
 38957  00812E  6ED9               	movwf	fsr2l,c
 38958  008130  5008               	movf	(??i2_fputc+1)^0,w,c
 38959  008132  200A               	addwfc	(??i2_fputc+3)^0,w,c
 38960  008134  6EDA               	movwf	fsr2h,c
 38961  008136  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 38962  00813C  EE20 F002          	lfsr	2,2
 38963  008140  5005               	movf	i2fputc@fp^0,w,c
 38964  008142  26D9               	addwf	fsr2l,f,c
 38965  008144  5006               	movf	(i2fputc@fp+1)^0,w,c
 38966  008146  22DA               	addwfc	fsr2h,f,c
 38967  008148  2ADE               	incf	postinc2,f,c
 38968  00814A  0E00               	movlw	0
 38969  00814C  22DD               	addwfc	postdec2,f,c
 38970  00814E  0012               	return		;funcret
 38971  008150                     __end_ofi2_fputc:
 38972                           	opt callstack 0
 38973                           
 38974 ;; *************** function i2_putch *****************
 38975 ;; Defined at:
 38976 ;;		line 23 in file "main.c"
 38977 ;; Parameters:    Size  Location     Type
 38978 ;;  byte            1    wreg     unsigned char 
 38979 ;; Auto vars:     Size  Location     Type
 38980 ;;  byte            1    1[COMRAM] unsigned char 
 38981 ;; Return value:  Size  Location     Type
 38982 ;;                  1    wreg      void 
 38983 ;; Registers used:
 38984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38985 ;; Tracked objects:
 38986 ;;		On entry : 0/0
 38987 ;;		On exit  : 3F/39
 38988 ;;		Unchanged: 0/0
 38989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38994 ;;Total ram usage:        1 bytes
 38995 ;; Hardware stack levels used:    1
 38996 ;; Hardware stack levels required when called:    1
 38997 ;; This function calls:
 38998 ;;		i2_UART1_Write
 38999 ;;		i2_UART1_is_tx_ready
 39000 ;; This function is called by:
 39001 ;;		i2_fputc
 39002 ;; This function uses a non-reentrant model
 39003 ;;
 39004                           
 39005                           	psect	text236
 39006  00A1CE                     __ptext236:
 39007                           	opt callstack 0
 39008  00A1CE                     i2_putch:
 39009                           	opt callstack 1
 39010                           
 39011                           ;incstack = 0
 39012                           ;i2putch@byte stored from wreg
 39013  00A1CE  6E02               	movwf	i2putch@byte^0,c
 39014  00A1D0                     
 39015                           ;main.c: 24:     while (!UART1_is_tx_ready());
 39016  00A1D0  EC46  F051         	call	i2_UART1_is_tx_ready	;wreg free
 39017  00A1D4  0900               	iorlw	0
 39018  00A1D6  B4D8               	btfsc	status,2,c
 39019  00A1D8  D7FB               	goto	i2l16032
 39020                           
 39021                           ; BSR set to: 0
 39022                           ;main.c: 25:     UART1_Write(byte);
 39023  00A1DA  5002               	movf	i2putch@byte^0,w,c
 39024  00A1DC  EC16  F04A         	call	i2_UART1_Write
 39025                           
 39026                           ; BSR set to: 57
 39027  00A1E0  0012               	return		;funcret
 39028  00A1E2                     __end_ofi2_putch:
 39029                           	opt callstack 0
 39030                           
 39031 ;; *************** function i2_UART1_is_tx_ready *****************
 39032 ;; Defined at:
 39033 ;;		line 152 in file "mcc_generated_files/uart1.c"
 39034 ;; Parameters:    Size  Location     Type
 39035 ;;		None
 39036 ;; Auto vars:     Size  Location     Type
 39037 ;;		None
 39038 ;; Return value:  Size  Location     Type
 39039 ;;                  1    wreg      _Bool 
 39040 ;; Registers used:
 39041 ;;		wreg, status,2
 39042 ;; Tracked objects:
 39043 ;;		On entry : 0/0
 39044 ;;		On exit  : 3F/0
 39045 ;;		Unchanged: 0/0
 39046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39051 ;;Total ram usage:        0 bytes
 39052 ;; Hardware stack levels used:    1
 39053 ;; This function calls:
 39054 ;;		Nothing
 39055 ;; This function is called by:
 39056 ;;		i2_putch
 39057 ;; This function uses a non-reentrant model
 39058 ;;
 39059                           
 39060                           	psect	text237
 39061  00A28C                     __ptext237:
 39062                           	opt callstack 0
 39063  00A28C                     i2_UART1_is_tx_ready:
 39064                           	opt callstack 1
 39065                           
 39066                           ;mcc_generated_files/uart1.c: 154:     return (uart1TxBufferRemaining ? 1 : 0);
 39067                           
 39068                           ; BSR set to: 57
 39069                           ;incstack = 0
 39070  00A28C  0100               	movlb	0	; () banked
 39071  00A28E  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39072  00A290  B4D8               	btfsc	status,2,c
 39073  00A292  D002               	goto	i2u1557_40
 39074  00A294  0E01               	movlw	1
 39075  00A296  0012               	return	
 39076  00A298                     i2u1557_40:
 39077  00A298  0E00               	movlw	0
 39078                           
 39079                           ; BSR set to: 0
 39080  00A29A  0012               	return		;funcret
 39081  00A29C                     __end_ofi2_UART1_is_tx_ready:
 39082                           	opt callstack 0
 39083                           
 39084 ;; *************** function i2_UART1_Write *****************
 39085 ;; Defined at:
 39086 ;;		line 191 in file "mcc_generated_files/uart1.c"
 39087 ;; Parameters:    Size  Location     Type
 39088 ;;  txData          1    wreg     unsigned char 
 39089 ;; Auto vars:     Size  Location     Type
 39090 ;;  txData          1    0[COMRAM] unsigned char 
 39091 ;; Return value:  Size  Location     Type
 39092 ;;                  1    wreg      void 
 39093 ;; Registers used:
 39094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39095 ;; Tracked objects:
 39096 ;;		On entry : 3F/0
 39097 ;;		On exit  : 3F/39
 39098 ;;		Unchanged: 0/0
 39099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39104 ;;Total ram usage:        1 bytes
 39105 ;; Hardware stack levels used:    1
 39106 ;; This function calls:
 39107 ;;		Nothing
 39108 ;; This function is called by:
 39109 ;;		i2_putch
 39110 ;; This function uses a non-reentrant model
 39111 ;;
 39112                           
 39113                           	psect	text238
 39114  00942C                     __ptext238:
 39115                           	opt callstack 0
 39116  00942C                     i2_UART1_Write:
 39117                           	opt callstack 1
 39118                           
 39119                           ; BSR set to: 0
 39120                           ;incstack = 0
 39121                           ;i2UART1_Write@txData stored from wreg
 39122  00942C  6E01               	movwf	i2UART1_Write@txData^0,c
 39123  00942E                     
 39124                           ;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39125                           
 39126                           ;mcc_generated_files/uart1.c: 191: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 192: {;mcc_generated_files/uart1.c: 193:     while(0 == uart1TxBufferRemaining)
 39127  00942E  0100               	movlb	0	; () banked
 39128  009430  51D4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 39129  009432  B4D8               	btfsc	status,2,c
 39130  009434  D7FC               	goto	i2l16000
 39131                           
 39132                           ; BSR set to: 0
 39133                           ;mcc_generated_files/uart1.c: 197:     if(0 == PIE3bits.U1TXIE)
 39134  009436  0139               	movlb	57	; () banked
 39135  009438  B993               	btfsc	147,4,b	;volatile
 39136  00943A  D004               	goto	i2l456
 39137                           
 39138                           ; BSR set to: 57
 39139                           ;mcc_generated_files/uart1.c: 198:     {;mcc_generated_files/uart1.c: 199:         U1TXB
      +                           = txData;
 39140  00943C  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 39141                           
 39142                           ;mcc_generated_files/uart1.c: 200:     }
 39143  009442  D012               	goto	i2l16016
 39144  009444                     i2l456:
 39145                           
 39146                           ; BSR set to: 57
 39147                           ;mcc_generated_files/uart1.c: 202:     {;mcc_generated_files/uart1.c: 203:         PIE3b
      +                          its.U1TXIE = 0;
 39148  009444  9993               	bcf	147,4,b	;volatile
 39149                           
 39150                           ; BSR set to: 57
 39151                           ;mcc_generated_files/uart1.c: 204:         uart1TxBuffer[uart1TxHead++] = txData;
 39152  009446  0E50               	movlw	low _uart1TxBuffer
 39153  009448  0100               	movlb	0	; () banked
 39154  00944A  25CF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 39155  00944C  6ED9               	movwf	fsr2l,c
 39156  00944E  6ADA               	clrf	fsr2h,c
 39157  009450  0E03               	movlw	high _uart1TxBuffer
 39158  009452  22DA               	addwfc	fsr2h,f,c
 39159  009454  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 39160                           
 39161                           ; BSR set to: 0
 39162  00945A  2BCF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 39163                           
 39164                           ; BSR set to: 0
 39165                           ;mcc_generated_files/uart1.c: 205:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 39166  00945C  0E3F               	movlw	63
 39167  00945E  65CF               	cpfsgt	_uart1TxHead& (0+255),b
 39168  009460  D002               	goto	i2l16014
 39169                           
 39170                           ; BSR set to: 0
 39171                           ;mcc_generated_files/uart1.c: 206:         {;mcc_generated_files/uart1.c: 207:          
      +                             uart1TxHead = 0;
 39172  009462  0E00               	movlw	0
 39173  009464  6FCF               	movwf	_uart1TxHead& (0+255),b	;volatile
 39174  009466                     i2l16014:
 39175                           
 39176                           ; BSR set to: 0
 39177                           ;mcc_generated_files/uart1.c: 209:         uart1TxBufferRemaining--;
 39178  009466  07D4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 39179  009468                     i2l16016:
 39180                           
 39181                           ;mcc_generated_files/uart1.c: 211:     PIE3bits.U1TXIE = 1;
 39182  009468  0139               	movlb	57	; () banked
 39183  00946A  8993               	bsf	147,4,b	;volatile
 39184                           
 39185                           ; BSR set to: 57
 39186  00946C  0012               	return		;funcret
 39187  00946E                     __end_ofi2_UART1_Write:
 39188                           	opt callstack 0
 39189                           
 39190 ;; *************** function i2_abs *****************
 39191 ;; Defined at:
 39192 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 39193 ;; Parameters:    Size  Location     Type
 39194 ;;  a               2   18[COMRAM] int 
 39195 ;; Auto vars:     Size  Location     Type
 39196 ;;		None
 39197 ;; Return value:  Size  Location     Type
 39198 ;;                  2   18[COMRAM] int 
 39199 ;; Registers used:
 39200 ;;		wreg, status,2, status,0
 39201 ;; Tracked objects:
 39202 ;;		On entry : 0/2
 39203 ;;		On exit  : 0/0
 39204 ;;		Unchanged: 0/0
 39205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39210 ;;Total ram usage:        4 bytes
 39211 ;; Hardware stack levels used:    1
 39212 ;; This function calls:
 39213 ;;		Nothing
 39214 ;; This function is called by:
 39215 ;;		i2_dtoa
 39216 ;; This function uses a non-reentrant model
 39217 ;;
 39218                           
 39219                           	psect	text239
 39220  00956A                     __ptext239:
 39221                           	opt callstack 0
 39222  00956A                     i2_abs:
 39223                           	opt callstack 5
 39224                           
 39225                           ; BSR set to: 57
 39226                           ;incstack = 0
 39227  00956A  BE14               	btfsc	(i2abs@a+1)^0,7,c
 39228  00956C  D005               	goto	i2u1664_40
 39229  00956E  5014               	movf	(i2abs@a+1)^0,w,c
 39230  009570  E114               	bnz	i2l3827
 39231  009572  0413               	decf	i2abs@a^0,w,c
 39232  009574  B0D8               	btfsc	status,0,c
 39233  009576  D011               	goto	i2l3827
 39234  009578                     i2u1664_40:
 39235  009578  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 39236  00957E  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 39237  009584  1E15               	comf	??i2_abs^0,f,c
 39238  009586  1E16               	comf	(??i2_abs+1)^0,f,c
 39239  009588  4A15               	infsnz	??i2_abs^0,f,c
 39240  00958A  2A16               	incf	(??i2_abs+1)^0,f,c
 39241  00958C  0060  F054  F013   	movff	??i2_abs,?i2_abs
 39242  009592  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 39243  009598  0012               	return	
 39244  00959A                     i2l3827:
 39245  00959A  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 39246  0095A0  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 39247  0095A6  0012               	return		;funcret
 39248  0095A8                     __end_ofi2_abs:
 39249                           	opt callstack 0
 39250                           
 39251 ;; *************** function i2___aomod *****************
 39252 ;; Defined at:
 39253 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 39254 ;; Parameters:    Size  Location     Type
 39255 ;;  dividend        8    0[COMRAM] long long 
 39256 ;;  divisor         8    8[COMRAM] long long 
 39257 ;; Auto vars:     Size  Location     Type
 39258 ;;  __aomod         1   17[COMRAM] unsigned char 
 39259 ;;  __aomod         1   16[COMRAM] unsigned char 
 39260 ;; Return value:  Size  Location     Type
 39261 ;;                  8    0[COMRAM] long long 
 39262 ;; Registers used:
 39263 ;;		wreg, status,2, status,0
 39264 ;; Tracked objects:
 39265 ;;		On entry : 0/2
 39266 ;;		On exit  : 0/0
 39267 ;;		Unchanged: 0/0
 39268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39269 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39272 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39273 ;;Total ram usage:       18 bytes
 39274 ;; Hardware stack levels used:    1
 39275 ;; This function calls:
 39276 ;;		Nothing
 39277 ;; This function is called by:
 39278 ;;		i2_dtoa
 39279 ;; This function uses a non-reentrant model
 39280 ;;
 39281                           
 39282                           	psect	text240
 39283  007480                     __ptext240:
 39284                           	opt callstack 0
 39285  007480                     i2___aomod:
 39286                           	opt callstack 5
 39287                           
 39288                           ;incstack = 0
 39289  007480  0E00               	movlw	0
 39290  007482  6E12               	movwf	i2___aomod@sign^0,c
 39291  007484  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 39292  007486  D012               	goto	i2l16492
 39293  007488  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39294  00748A  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39295  00748C  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39296  00748E  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39297  007490  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39298  007492  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39299  007494  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39300  007496  6C01               	negf	i2___aomod@dividend^0,c
 39301  007498  0E00               	movlw	0
 39302  00749A  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39303  00749C  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39304  00749E  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 39305  0074A0  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 39306  0074A2  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 39307  0074A4  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 39308  0074A6  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 39309  0074A8  0E01               	movlw	1
 39310  0074AA  6E12               	movwf	i2___aomod@sign^0,c
 39311  0074AC                     i2l16492:
 39312  0074AC  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39313  0074AE  D010               	goto	i2l16496
 39314  0074B0  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 39315  0074B2  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 39316  0074B4  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 39317  0074B6  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 39318  0074B8  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 39319  0074BA  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 39320  0074BC  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 39321  0074BE  6C09               	negf	i2___aomod@divisor^0,c
 39322  0074C0  0E00               	movlw	0
 39323  0074C2  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 39324  0074C4  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 39325  0074C6  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 39326  0074C8  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 39327  0074CA  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 39328  0074CC  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 39329  0074CE  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 39330  0074D0                     i2l16496:
 39331  0074D0  5009               	movf	i2___aomod@divisor^0,w,c
 39332  0074D2  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 39333  0074D4  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 39334  0074D6  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 39335  0074D8  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 39336  0074DA  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 39337  0074DC  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 39338  0074DE  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 39339  0074E0  B4D8               	btfsc	status,2,c
 39340  0074E2  D03C               	goto	i2l16512
 39341  0074E4  0E01               	movlw	1
 39342  0074E6  6E11               	movwf	i2___aomod@counter^0,c
 39343  0074E8  D00A               	goto	i2l16502
 39344  0074EA                     i2l16500:
 39345  0074EA  90D8               	bcf	status,0,c
 39346  0074EC  3609               	rlcf	i2___aomod@divisor^0,f,c
 39347  0074EE  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 39348  0074F0  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 39349  0074F2  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 39350  0074F4  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 39351  0074F6  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 39352  0074F8  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 39353  0074FA  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 39354  0074FC  2A11               	incf	i2___aomod@counter^0,f,c
 39355  0074FE                     i2l16502:
 39356  0074FE  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 39357  007500  D7F4               	goto	i2l16500
 39358  007502                     i2u1661_40:
 39359  007502  5009               	movf	i2___aomod@divisor^0,w,c
 39360  007504  5C01               	subwf	i2___aomod@dividend^0,w,c
 39361  007506  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39362  007508  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 39363  00750A  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39364  00750C  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 39365  00750E  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39366  007510  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 39367  007512  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39368  007514  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 39369  007516  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39370  007518  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 39371  00751A  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39372  00751C  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 39373  00751E  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39374  007520  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 39375  007522  A0D8               	btfss	status,0,c
 39376  007524  D010               	goto	i2l16508
 39377  007526  5009               	movf	i2___aomod@divisor^0,w,c
 39378  007528  5E01               	subwf	i2___aomod@dividend^0,f,c
 39379  00752A  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 39380  00752C  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 39381  00752E  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 39382  007530  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 39383  007532  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 39384  007534  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 39385  007536  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 39386  007538  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 39387  00753A  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 39388  00753C  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 39389  00753E  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 39390  007540  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 39391  007542  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 39392  007544  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 39393  007546                     i2l16508:
 39394  007546  90D8               	bcf	status,0,c
 39395  007548  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 39396  00754A  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 39397  00754C  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 39398  00754E  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 39399  007550  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 39400  007552  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 39401  007554  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 39402  007556  3209               	rrcf	i2___aomod@divisor^0,f,c
 39403  007558  2E11               	decfsz	i2___aomod@counter^0,f,c
 39404  00755A  D7D3               	goto	i2u1661_40
 39405  00755C                     i2l16512:
 39406  00755C  5012               	movf	i2___aomod@sign^0,w,c
 39407  00755E  B4D8               	btfsc	status,2,c
 39408  007560  D010               	goto	i2l16516
 39409  007562  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 39410  007564  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 39411  007566  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 39412  007568  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 39413  00756A  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 39414  00756C  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 39415  00756E  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 39416  007570  6C01               	negf	i2___aomod@dividend^0,c
 39417  007572  0E00               	movlw	0
 39418  007574  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 39419  007576  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 39420  007578  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 39421  00757A  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 39422  00757C  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 39423  00757E  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 39424  007580  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 39425  007582                     i2l16516:
 39426  007582  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 39427  007588  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 39428  00758E  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 39429  007594  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 39430  00759A  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 39431  0075A0  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 39432  0075A6  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 39433  0075AC  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 39434  0075B2  0012               	return		;funcret
 39435  0075B4                     __end_ofi2___aomod:
 39436                           	opt callstack 0
 39437                           
 39438 ;; *************** function i2___aodiv *****************
 39439 ;; Defined at:
 39440 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 39441 ;; Parameters:    Size  Location     Type
 39442 ;;  dividend        8    0[COMRAM] long long 
 39443 ;;  divisor         8    8[COMRAM] long long 
 39444 ;; Auto vars:     Size  Location     Type
 39445 ;;  __aodiv         8   18[COMRAM] long long 
 39446 ;;  __aodiv         1   17[COMRAM] unsigned char 
 39447 ;;  __aodiv         1   16[COMRAM] unsigned char 
 39448 ;; Return value:  Size  Location     Type
 39449 ;;                  8    0[COMRAM] long long 
 39450 ;; Registers used:
 39451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39452 ;; Tracked objects:
 39453 ;;		On entry : 0/2
 39454 ;;		On exit  : 0/0
 39455 ;;		Unchanged: 0/0
 39456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39457 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39458 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39460 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39461 ;;Total ram usage:       26 bytes
 39462 ;; Hardware stack levels used:    1
 39463 ;; This function calls:
 39464 ;;		Nothing
 39465 ;; This function is called by:
 39466 ;;		i2_dtoa
 39467 ;; This function uses a non-reentrant model
 39468 ;;
 39469                           
 39470                           	psect	text241
 39471  0071F4                     __ptext241:
 39472                           	opt callstack 0
 39473  0071F4                     i2___aodiv:
 39474                           	opt callstack 5
 39475                           
 39476                           ;incstack = 0
 39477  0071F4  0E00               	movlw	0
 39478  0071F6  6E12               	movwf	i2___aodiv@sign^0,c
 39479  0071F8  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 39480  0071FA  D012               	goto	i2l16448
 39481  0071FC  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 39482  0071FE  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 39483  007200  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 39484  007202  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 39485  007204  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 39486  007206  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 39487  007208  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 39488  00720A  6C09               	negf	i2___aodiv@divisor^0,c
 39489  00720C  0E00               	movlw	0
 39490  00720E  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 39491  007210  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 39492  007212  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 39493  007214  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 39494  007216  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 39495  007218  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 39496  00721A  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 39497  00721C  0E01               	movlw	1
 39498  00721E  6E12               	movwf	i2___aodiv@sign^0,c
 39499  007220                     i2l16448:
 39500  007220  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 39501  007222  D012               	goto	i2l16454
 39502  007224  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 39503  007226  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 39504  007228  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 39505  00722A  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 39506  00722C  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 39507  00722E  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 39508  007230  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 39509  007232  6C01               	negf	i2___aodiv@dividend^0,c
 39510  007234  0E00               	movlw	0
 39511  007236  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 39512  007238  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 39513  00723A  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 39514  00723C  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 39515  00723E  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 39516  007240  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 39517  007242  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 39518  007244  0E01               	movlw	1
 39519  007246  1A12               	xorwf	i2___aodiv@sign^0,f,c
 39520  007248                     i2l16454:
 39521  007248  EE20  F013         	lfsr	2,i2___aodiv@quotient
 39522  00724C  0E07               	movlw	7
 39523  00724E                     i2u1653_41:
 39524  00724E  6ADE               	clrf	postinc2,c
 39525  007250  06E8               	decf	wreg,f,c
 39526  007252  E2FD               	bc	i2u1653_41
 39527  007254  5009               	movf	i2___aodiv@divisor^0,w,c
 39528  007256  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 39529  007258  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 39530  00725A  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 39531  00725C  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 39532  00725E  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 39533  007260  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 39534  007262  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 39535  007264  B4D8               	btfsc	status,2,c
 39536  007266  D046               	goto	i2l16476
 39537  007268  0E01               	movlw	1
 39538  00726A  6E11               	movwf	i2___aodiv@counter^0,c
 39539  00726C  D00A               	goto	i2l16462
 39540  00726E                     i2l16460:
 39541  00726E  90D8               	bcf	status,0,c
 39542  007270  3609               	rlcf	i2___aodiv@divisor^0,f,c
 39543  007272  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 39544  007274  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 39545  007276  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 39546  007278  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 39547  00727A  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 39548  00727C  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 39549  00727E  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 39550  007280  2A11               	incf	i2___aodiv@counter^0,f,c
 39551  007282                     i2l16462:
 39552  007282  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 39553  007284  D7F4               	goto	i2l16460
 39554  007286                     i2u1655_40:
 39555  007286  90D8               	bcf	status,0,c
 39556  007288  3613               	rlcf	i2___aodiv@quotient^0,f,c
 39557  00728A  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 39558  00728C  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 39559  00728E  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 39560  007290  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 39561  007292  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 39562  007294  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 39563  007296  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 39564  007298  5009               	movf	i2___aodiv@divisor^0,w,c
 39565  00729A  5C01               	subwf	i2___aodiv@dividend^0,w,c
 39566  00729C  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 39567  00729E  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 39568  0072A0  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 39569  0072A2  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 39570  0072A4  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 39571  0072A6  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 39572  0072A8  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 39573  0072AA  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 39574  0072AC  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 39575  0072AE  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 39576  0072B0  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 39577  0072B2  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 39578  0072B4  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 39579  0072B6  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 39580  0072B8  A0D8               	btfss	status,0,c
 39581  0072BA  D011               	goto	i2l16472
 39582  0072BC  5009               	movf	i2___aodiv@divisor^0,w,c
 39583  0072BE  5E01               	subwf	i2___aodiv@dividend^0,f,c
 39584  0072C0  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 39585  0072C2  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 39586  0072C4  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 39587  0072C6  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 39588  0072C8  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 39589  0072CA  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 39590  0072CC  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 39591  0072CE  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 39592  0072D0  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 39593  0072D2  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 39594  0072D4  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 39595  0072D6  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 39596  0072D8  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 39597  0072DA  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 39598  0072DC  8013               	bsf	i2___aodiv@quotient^0,0,c
 39599  0072DE                     i2l16472:
 39600  0072DE  90D8               	bcf	status,0,c
 39601  0072E0  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 39602  0072E2  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 39603  0072E4  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 39604  0072E6  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 39605  0072E8  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 39606  0072EA  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 39607  0072EC  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 39608  0072EE  3209               	rrcf	i2___aodiv@divisor^0,f,c
 39609  0072F0  2E11               	decfsz	i2___aodiv@counter^0,f,c
 39610  0072F2  D7C9               	goto	i2u1655_40
 39611  0072F4                     i2l16476:
 39612  0072F4  5012               	movf	i2___aodiv@sign^0,w,c
 39613  0072F6  B4D8               	btfsc	status,2,c
 39614  0072F8  D010               	goto	i2l16480
 39615  0072FA  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 39616  0072FC  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 39617  0072FE  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 39618  007300  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 39619  007302  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 39620  007304  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 39621  007306  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 39622  007308  6C13               	negf	i2___aodiv@quotient^0,c
 39623  00730A  0E00               	movlw	0
 39624  00730C  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 39625  00730E  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 39626  007310  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 39627  007312  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 39628  007314  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 39629  007316  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 39630  007318  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 39631  00731A                     i2l16480:
 39632  00731A  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 39633  007320  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 39634  007326  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 39635  00732C  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 39636  007332  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 39637  007338  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 39638  00733E  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 39639  007344  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 39640  00734A  0012               	return		;funcret
 39641  00734C                     __end_ofi2___aodiv:
 39642                           	opt callstack 0
 39643                           
 39644 ;; *************** function i2_atoi *****************
 39645 ;; Defined at:
 39646 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 39647 ;; Parameters:    Size  Location     Type
 39648 ;;  s               2    7[COMRAM] PTR const unsigned char 
 39649 ;;		 -> STR_106(7), STR_105(7), STR_104(10), STR_101(10), 
 39650 ;;		 -> STR_100(8), STR_97(10), STR_96(8), STR_93(10), 
 39651 ;;		 -> STR_92(6), STR_90(7), STR_87(17), STR_85(27), 
 39652 ;;		 -> STR_84(9), STR_82(10), STR_75(18), STR_72(10), 
 39653 ;;		 -> STR_70(10), STR_68(19), STR_67(28), STR_66(37), 
 39654 ;;		 -> STR_65(38), STR_64(19), STR_63(9), STR_62(9), 
 39655 ;;		 -> STR_61(8), STR_60(11), STR_59(10), STR_58(12), 
 39656 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(11), 
 39657 ;;		 -> STR_53(10), STR_52(10), STR_51(19), STR_50(12), 
 39658 ;;		 -> STR_49(17), STR_48(17), STR_47(19), STR_46(19), 
 39659 ;;		 -> STR_45(21), STR_44(21), STR_43(19), STR_42(21), 
 39660 ;;		 -> STR_41(19), STR_40(21), STR_39(17), STR_38(19), 
 39661 ;;		 -> STR_37(21), STR_34(9), STR_33(9), STR_32(9), 
 39662 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(9), 
 39663 ;;		 -> STR_27(49), STR_26(20), STR_25(36), STR_24(27), 
 39664 ;;		 -> STR_23(20), STR_22(28), STR_21(5), STR_20(6), 
 39665 ;;		 -> STR_19(16), STR_18(14), STR_17(33), STR_16(20), 
 39666 ;;		 -> STR_15(74), STR_14(40), STR_13(47), STR_12(7), 
 39667 ;;		 -> STR_11(7), STR_10(55), STR_4(20), STR_3(11), 
 39668 ;;		 -> STR_1(27), 
 39669 ;; Auto vars:     Size  Location     Type
 39670 ;;  atoi            2   20[COMRAM] int 
 39671 ;;  atoi            2   13[COMRAM] int 
 39672 ;; Return value:  Size  Location     Type
 39673 ;;                  2    7[COMRAM] int 
 39674 ;; Registers used:
 39675 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39676 ;; Tracked objects:
 39677 ;;		On entry : 3F/0
 39678 ;;		On exit  : 0/0
 39679 ;;		Unchanged: 0/0
 39680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39682 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39684 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39685 ;;Total ram usage:       15 bytes
 39686 ;; Hardware stack levels used:    1
 39687 ;; Hardware stack levels required when called:    1
 39688 ;; This function calls:
 39689 ;;		i2___wmul
 39690 ;;		i2_isdigit
 39691 ;;		i2_isspace
 39692 ;; This function is called by:
 39693 ;;		i2_vfpfcnvrt
 39694 ;; This function uses a non-reentrant model
 39695 ;;
 39696                           
 39697                           	psect	text242
 39698  006DC6                     __ptext242:
 39699                           	opt callstack 0
 39700  006DC6                     i2_atoi:
 39701                           	opt callstack 5
 39702                           
 39703                           ; BSR set to: 0
 39704                           
 39705                           ;incstack = 0
 39706  006DC6  0E00               	movlw	0
 39707  006DC8  6E16               	movwf	(i2atoi@n+1)^0,c
 39708  006DCA  0E00               	movlw	0
 39709  006DCC  6E15               	movwf	i2atoi@n^0,c
 39710  006DCE  0E00               	movlw	0
 39711  006DD0  6E0F               	movwf	(i2atoi@neg+1)^0,c
 39712  006DD2  0E00               	movlw	0
 39713  006DD4  6E0E               	movwf	i2atoi@neg^0,c
 39714  006DD6  D002               	goto	i2l16800
 39715  006DD8                     i2l16798:
 39716                           
 39717                           ; BSR set to: 0
 39718  006DD8  4A08               	infsnz	i2atoi@s^0,f,c
 39719  006DDA  2A09               	incf	(i2atoi@s+1)^0,f,c
 39720  006DDC                     i2l16800:
 39721                           
 39722                           ; BSR set to: 0
 39723  006DDC  0E01               	movlw	1
 39724  006DDE  6E14               	movwf	i2_atoi$5375^0,c
 39725                           
 39726                           ; BSR set to: 0
 39727  006DE0  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39728  006DE6  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39729  006DEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39730  006DEC  6AF8               	clrf	tblptru,c
 39731  006DEE                     	endif
 39732  006DEE                     	if	0	;tblptru may be non-zero
 39733  006DEE                     	endif
 39734  006DEE  0008               	tblrd		*
 39735  006DF0  50F5               	movf	tablat,w,c
 39736  006DF2  0A20               	xorlw	32
 39737  006DF4  B4D8               	btfsc	status,2,c
 39738  006DF6  D01B               	goto	i2l16808
 39739                           
 39740                           ; BSR set to: 0
 39741  006DF8  0EF7               	movlw	247
 39742  006DFA  6E0A               	movwf	??i2_atoi^0,c
 39743  006DFC  0EFF               	movlw	255
 39744  006DFE  6E0B               	movwf	(??i2_atoi+1)^0,c
 39745  006E00  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39746  006E06  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39747  006E0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39748  006E0C  6AF8               	clrf	tblptru,c
 39749  006E0E                     	endif
 39750  006E0E                     	if	0	;tblptru may be non-zero
 39751  006E0E                     	endif
 39752  006E0E  0008               	tblrd		*
 39753  006E10  50F5               	movf	tablat,w,c
 39754  006E12  6E0C               	movwf	(??i2_atoi+2)^0,c
 39755  006E14  6A0D               	clrf	(??i2_atoi+3)^0,c
 39756  006E16  500A               	movf	??i2_atoi^0,w,c
 39757  006E18  260C               	addwf	(??i2_atoi+2)^0,f,c
 39758  006E1A  500B               	movf	(??i2_atoi+1)^0,w,c
 39759  006E1C  220D               	addwfc	(??i2_atoi+3)^0,f,c
 39760  006E1E  500D               	movf	(??i2_atoi+3)^0,w,c
 39761  006E20  E104               	bnz	i2u1722_40
 39762  006E22  0E05               	movlw	5
 39763  006E24  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 39764  006E26  A0D8               	btfss	status,0,c
 39765  006E28  D002               	goto	i2l16808
 39766  006E2A                     i2u1722_40:
 39767                           
 39768                           ; BSR set to: 0
 39769  006E2A  0E00               	movlw	0
 39770  006E2C  6E14               	movwf	i2_atoi$5375^0,c
 39771  006E2E                     i2l16808:
 39772                           
 39773                           ; BSR set to: 0
 39774  006E2E  0060  F050  F010   	movff	i2_atoi$5375,i2_atoi$5374
 39775  006E34  6A11               	clrf	(i2_atoi$5374+1)^0,c
 39776                           
 39777                           ; BSR set to: 0
 39778  006E36  5010               	movf	i2_atoi$5374^0,w,c
 39779  006E38  1011               	iorwf	(i2_atoi$5374+1)^0,w,c
 39780  006E3A  B4D8               	btfsc	status,2,c
 39781  006E3C  D008               	goto	i2l16818
 39782  006E3E  D7CC               	goto	i2l16798
 39783  006E40                     i2l16814:
 39784                           
 39785                           ; BSR set to: 0
 39786  006E40  0E00               	movlw	0
 39787  006E42  6E0F               	movwf	(i2atoi@neg+1)^0,c
 39788  006E44  0E01               	movlw	1
 39789  006E46  6E0E               	movwf	i2atoi@neg^0,c
 39790  006E48                     i2l16816:
 39791  006E48  4A08               	infsnz	i2atoi@s^0,f,c
 39792  006E4A  2A09               	incf	(i2atoi@s+1)^0,f,c
 39793  006E4C  D036               	goto	i2l16824
 39794  006E4E                     i2l16818:
 39795                           
 39796                           ; BSR set to: 0
 39797  006E4E  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39798  006E54  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39799  006E5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39800  006E5A  6AF8               	clrf	tblptru,c
 39801  006E5C                     	endif
 39802  006E5C                     	if	0	;tblptru may be non-zero
 39803  006E5C                     	endif
 39804  006E5C  0008               	tblrd		*
 39805  006E5E  50F5               	movf	tablat,w,c
 39806  006E60  6E0A               	movwf	??i2_atoi^0,c
 39807  006E62  6A0B               	clrf	(??i2_atoi+1)^0,c
 39808                           
 39809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39810                           ; Switch size 1, requested type "simple"
 39811                           ; Number of cases is 1, Range of values is 0 to 0
 39812                           ; switch strategies available:
 39813                           ; Name         Instructions Cycles
 39814                           ; simple_byte            4     3 (average)
 39815                           ;	Chosen strategy is simple_byte
 39816  006E64  500B               	movf	(??i2_atoi+1)^0,w,c
 39817  006E66  0A00               	xorlw	0	; case 0
 39818  006E68  A4D8               	btfss	status,2,c
 39819  006E6A  D027               	goto	i2l16824
 39820                           
 39821                           ; BSR set to: 0
 39822                           ; Switch size 1, requested type "simple"
 39823                           ; Number of cases is 2, Range of values is 43 to 45
 39824                           ; switch strategies available:
 39825                           ; Name         Instructions Cycles
 39826                           ; simple_byte            7     4 (average)
 39827                           ;	Chosen strategy is simple_byte
 39828  006E6C  500A               	movf	??i2_atoi^0,w,c
 39829  006E6E  0A2B               	xorlw	43	; case 43
 39830  006E70  B4D8               	btfsc	status,2,c
 39831  006E72  D7EA               	goto	i2l16816
 39832  006E74  0A06               	xorlw	6	; case 45
 39833  006E76  B4D8               	btfsc	status,2,c
 39834  006E78  D7E3               	goto	i2l16814
 39835  006E7A  D01F               	goto	i2l16824
 39836  006E7C                     i2l16820:
 39837  006E7C  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 39838  006E82  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 39839  006E88  0E00               	movlw	0
 39840  006E8A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 39841  006E8C  0E0A               	movlw	10
 39842  006E8E  6E03               	movwf	i2___wmul@multiplicand^0,c
 39843  006E90  EC3B  F04E         	call	i2___wmul	;wreg free
 39844  006E94  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39845  006E9A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39846  006EA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39847  006EA0  6AF8               	clrf	tblptru,c
 39848  006EA2                     	endif
 39849  006EA2                     	if	0	;tblptru may be non-zero
 39850  006EA2                     	endif
 39851  006EA2  0008               	tblrd		*
 39852  006EA4  50F5               	movf	tablat,w,c
 39853  006EA6  5E01               	subwf	?i2___wmul^0,f,c
 39854  006EA8  0E00               	movlw	0
 39855  006EAA  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 39856  006EAC  0E30               	movlw	48
 39857  006EAE  2401               	addwf	?i2___wmul^0,w,c
 39858  006EB0  6E15               	movwf	i2atoi@n^0,c
 39859  006EB2  0E00               	movlw	0
 39860  006EB4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 39861  006EB6  6E16               	movwf	(i2atoi@n+1)^0,c
 39862  006EB8  D7C7               	goto	i2l16816
 39863  006EBA                     i2l16824:
 39864  006EBA  0ED0               	movlw	208
 39865  006EBC  6E0A               	movwf	??i2_atoi^0,c
 39866  006EBE  0EFF               	movlw	255
 39867  006EC0  6E0B               	movwf	(??i2_atoi+1)^0,c
 39868  006EC2  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 39869  006EC8  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 39870  006ECE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39871  006ECE  6AF8               	clrf	tblptru,c
 39872  006ED0                     	endif
 39873  006ED0                     	if	0	;tblptru may be non-zero
 39874  006ED0                     	endif
 39875  006ED0  0008               	tblrd		*
 39876  006ED2  50F5               	movf	tablat,w,c
 39877  006ED4  6E0C               	movwf	(??i2_atoi+2)^0,c
 39878  006ED6  6A0D               	clrf	(??i2_atoi+3)^0,c
 39879  006ED8  500A               	movf	??i2_atoi^0,w,c
 39880  006EDA  260C               	addwf	(??i2_atoi+2)^0,f,c
 39881  006EDC  500B               	movf	(??i2_atoi+1)^0,w,c
 39882  006EDE  220D               	addwfc	(??i2_atoi+3)^0,f,c
 39883  006EE0  500D               	movf	(??i2_atoi+3)^0,w,c
 39884  006EE2  E106               	bnz	i2u1724_40
 39885  006EE4  0E0A               	movlw	10
 39886  006EE6  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 39887  006EE8  B0D8               	btfsc	status,0,c
 39888  006EEA  D002               	goto	i2u1724_40
 39889  006EEC  0E01               	movlw	1
 39890  006EEE  D001               	goto	i2u1725_40
 39891  006EF0                     i2u1724_40:
 39892  006EF0  0E00               	movlw	0
 39893  006EF2                     i2u1725_40:
 39894  006EF2  6E12               	movwf	i2_atoi$5376^0,c
 39895  006EF4  6A13               	clrf	(i2_atoi$5376+1)^0,c
 39896  006EF6  5012               	movf	i2_atoi$5376^0,w,c
 39897  006EF8  1013               	iorwf	(i2_atoi$5376+1)^0,w,c
 39898  006EFA  A4D8               	btfss	status,2,c
 39899  006EFC  D7BF               	goto	i2l16820
 39900  006EFE  500E               	movf	i2atoi@neg^0,w,c
 39901  006F00  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 39902  006F02  A4D8               	btfss	status,2,c
 39903  006F04  D011               	goto	i2l3858
 39904  006F06  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 39905  006F0C  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 39906  006F12  1E0A               	comf	??i2_atoi^0,f,c
 39907  006F14  1E0B               	comf	(??i2_atoi+1)^0,f,c
 39908  006F16  4A0A               	infsnz	??i2_atoi^0,f,c
 39909  006F18  2A0B               	incf	(??i2_atoi+1)^0,f,c
 39910  006F1A  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 39911  006F20  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 39912  006F26  0012               	return	
 39913  006F28                     i2l3858:
 39914  006F28  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 39915  006F2E  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 39916  006F34  0012               	return		;funcret
 39917  006F36                     __end_ofi2_atoi:
 39918                           	opt callstack 0
 39919                           
 39920 ;; *************** function i2_isspace *****************
 39921 ;; Defined at:
 39922 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 39923 ;; Parameters:    Size  Location     Type
 39924 ;;  c               2    0[COMRAM] int 
 39925 ;; Auto vars:     Size  Location     Type
 39926 ;;		None
 39927 ;; Return value:  Size  Location     Type
 39928 ;;                  2    0[COMRAM] int 
 39929 ;; Registers used:
 39930 ;;		wreg, status,2, status,0
 39931 ;; Tracked objects:
 39932 ;;		On entry : 0/0
 39933 ;;		On exit  : 0/0
 39934 ;;		Unchanged: 0/0
 39935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39939 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39940 ;;Total ram usage:        7 bytes
 39941 ;; Hardware stack levels used:    1
 39942 ;; This function calls:
 39943 ;;		Nothing
 39944 ;; This function is called by:
 39945 ;;		i2_atoi
 39946 ;; This function uses a non-reentrant model
 39947 ;;
 39948                           
 39949                           	psect	text243
 39950  0093A6                     __ptext243:
 39951                           	opt callstack 0
 39952  0093A6                     i2_isspace:
 39953                           	opt callstack 5
 39954                           
 39955                           ;incstack = 0
 39956  0093A6  0E01               	movlw	1
 39957  0093A8  6E07               	movwf	i2_isspace$5401^0,c
 39958  0093AA  0E20               	movlw	32
 39959  0093AC  1801               	xorwf	i2isspace@c^0,w,c
 39960  0093AE  1002               	iorwf	(i2isspace@c+1)^0,w,c
 39961  0093B0  B4D8               	btfsc	status,2,c
 39962  0093B2  D016               	goto	i2l16540
 39963  0093B4  0EF7               	movlw	247
 39964  0093B6  6E03               	movwf	??i2_isspace^0,c
 39965  0093B8  0EFF               	movlw	255
 39966  0093BA  6E04               	movwf	(??i2_isspace+1)^0,c
 39967  0093BC  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 39968  0093C2  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 39969  0093C8  5003               	movf	??i2_isspace^0,w,c
 39970  0093CA  2605               	addwf	(??i2_isspace+2)^0,f,c
 39971  0093CC  5004               	movf	(??i2_isspace+1)^0,w,c
 39972  0093CE  2206               	addwfc	(??i2_isspace+3)^0,f,c
 39973  0093D0  5006               	movf	(??i2_isspace+3)^0,w,c
 39974  0093D2  E104               	bnz	i2u1670_40
 39975  0093D4  0E05               	movlw	5
 39976  0093D6  5C05               	subwf	(??i2_isspace+2)^0,w,c
 39977  0093D8  A0D8               	btfss	status,0,c
 39978  0093DA  D002               	goto	i2l16540
 39979  0093DC                     i2u1670_40:
 39980  0093DC  0E00               	movlw	0
 39981  0093DE  6E07               	movwf	i2_isspace$5401^0,c
 39982  0093E0                     i2l16540:
 39983  0093E0  0060  F01C  F001   	movff	i2_isspace$5401,?i2_isspace
 39984  0093E6  6A02               	clrf	(?i2_isspace+1)^0,c
 39985  0093E8  0012               	return		;funcret
 39986  0093EA                     __end_ofi2_isspace:
 39987                           	opt callstack 0
 39988                           
 39989 ;; *************** function i2_isdigit *****************
 39990 ;; Defined at:
 39991 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 39992 ;; Parameters:    Size  Location     Type
 39993 ;;  c               2    0[COMRAM] int 
 39994 ;; Auto vars:     Size  Location     Type
 39995 ;;		None
 39996 ;; Return value:  Size  Location     Type
 39997 ;;                  2    0[COMRAM] int 
 39998 ;; Registers used:
 39999 ;;		wreg, status,2, status,0
 40000 ;; Tracked objects:
 40001 ;;		On entry : 0/0
 40002 ;;		On exit  : 0/0
 40003 ;;		Unchanged: 0/0
 40004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40007 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40009 ;;Total ram usage:        6 bytes
 40010 ;; Hardware stack levels used:    1
 40011 ;; This function calls:
 40012 ;;		Nothing
 40013 ;; This function is called by:
 40014 ;;		i2_vfpfcnvrt
 40015 ;;		i2_atoi
 40016 ;; This function uses a non-reentrant model
 40017 ;;
 40018                           
 40019                           	psect	text244
 40020  0098E4                     __ptext244:
 40021                           	opt callstack 0
 40022  0098E4                     i2_isdigit:
 40023                           	opt callstack 6
 40024                           
 40025                           ;incstack = 0
 40026  0098E4  0ED0               	movlw	208
 40027  0098E6  6E03               	movwf	??i2_isdigit^0,c
 40028  0098E8  0EFF               	movlw	255
 40029  0098EA  6E04               	movwf	(??i2_isdigit+1)^0,c
 40030  0098EC  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 40031  0098F2  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 40032  0098F8  5003               	movf	??i2_isdigit^0,w,c
 40033  0098FA  2605               	addwf	(??i2_isdigit+2)^0,f,c
 40034  0098FC  5004               	movf	(??i2_isdigit+1)^0,w,c
 40035  0098FE  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 40036  009900  5006               	movf	(??i2_isdigit+3)^0,w,c
 40037  009902  E106               	bnz	i2u1667_40
 40038  009904  0E0A               	movlw	10
 40039  009906  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 40040  009908  B0D8               	btfsc	status,0,c
 40041  00990A  D002               	goto	i2u1667_40
 40042  00990C  0E01               	movlw	1
 40043  00990E  D001               	goto	i2u1668_40
 40044  009910                     i2u1667_40:
 40045  009910  0E00               	movlw	0
 40046  009912                     i2u1668_40:
 40047  009912  6E01               	movwf	?i2_isdigit^0,c
 40048  009914  6A02               	clrf	(?i2_isdigit+1)^0,c
 40049  009916  0012               	return		;funcret
 40050  009918                     __end_ofi2_isdigit:
 40051                           	opt callstack 0
 40052                           
 40053 ;; *************** function i2___wmul *****************
 40054 ;; Defined at:
 40055 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 40056 ;; Parameters:    Size  Location     Type
 40057 ;;  multiplier      2    0[COMRAM] unsigned int 
 40058 ;;  multiplicand    2    2[COMRAM] unsigned int 
 40059 ;; Auto vars:     Size  Location     Type
 40060 ;;  __wmul          2    4[COMRAM] unsigned int 
 40061 ;; Return value:  Size  Location     Type
 40062 ;;                  2    0[COMRAM] unsigned int 
 40063 ;; Registers used:
 40064 ;;		wreg, status,2, status,0, prodl, prodh
 40065 ;; Tracked objects:
 40066 ;;		On entry : 0/0
 40067 ;;		On exit  : 0/0
 40068 ;;		Unchanged: 0/0
 40069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40070 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40074 ;;Total ram usage:        6 bytes
 40075 ;; Hardware stack levels used:    1
 40076 ;; This function calls:
 40077 ;;		Nothing
 40078 ;; This function is called by:
 40079 ;;		i2_atoi
 40080 ;; This function uses a non-reentrant model
 40081 ;;
 40082                           
 40083                           	psect	text245
 40084  009C76                     __ptext245:
 40085                           	opt callstack 0
 40086  009C76                     i2___wmul:
 40087                           	opt callstack 5
 40088                           
 40089                           ;incstack = 0
 40090  009C76  5001               	movf	i2___wmul@multiplier^0,w,c
 40091  009C78  0203               	mulwf	i2___wmul@multiplicand^0,c
 40092  009C7A  006F FFCC  F005    	movff	prodl,i2___wmul@product
 40093  009C80  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 40094  009C86  5001               	movf	i2___wmul@multiplier^0,w,c
 40095  009C88  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 40096  009C8A  50F3               	movf	243,w,c
 40097  009C8C  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40098  009C8E  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 40099  009C90  0203               	mulwf	i2___wmul@multiplicand^0,c
 40100  009C92  50F3               	movf	243,w,c
 40101  009C94  2606               	addwf	(i2___wmul@product+1)^0,f,c
 40102  009C96  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 40103  009C9C  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 40104  009CA2  0012               	return		;funcret
 40105  009CA4                     __end_ofi2___wmul:
 40106                           	opt callstack 0
 40107                           
 40108 ;; *************** function i2___lmul *****************
 40109 ;; Defined at:
 40110 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 40111 ;; Parameters:    Size  Location     Type
 40112 ;;  multiplier      4    0[COMRAM] unsigned long 
 40113 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40114 ;; Auto vars:     Size  Location     Type
 40115 ;;  __lmul          4    8[COMRAM] unsigned long 
 40116 ;; Return value:  Size  Location     Type
 40117 ;;                  4    0[COMRAM] unsigned long 
 40118 ;; Registers used:
 40119 ;;		wreg, status,2, status,0
 40120 ;; Tracked objects:
 40121 ;;		On entry : 3F/0
 40122 ;;		On exit  : 3F/0
 40123 ;;		Unchanged: 3F/0
 40124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40125 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40126 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40128 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40129 ;;Total ram usage:       12 bytes
 40130 ;; Hardware stack levels used:    1
 40131 ;; This function calls:
 40132 ;;		Nothing
 40133 ;; This function is called by:
 40134 ;;		_adcCaptureIsr
 40135 ;; This function uses a non-reentrant model
 40136 ;;
 40137                           
 40138                           	psect	text246
 40139  008CE8                     __ptext246:
 40140                           	opt callstack 0
 40141  008CE8                     i2___lmul:
 40142                           	opt callstack 10
 40143                           
 40144                           ; BSR set to: 0
 40145                           
 40146                           ;incstack = 0
 40147  008CE8  0E00               	movlw	0
 40148  008CEA  6E09               	movwf	i2___lmul@product^0,c
 40149  008CEC  0E00               	movlw	0
 40150  008CEE  6E0A               	movwf	(i2___lmul@product+1)^0,c
 40151  008CF0  0E00               	movlw	0
 40152  008CF2  6E0B               	movwf	(i2___lmul@product+2)^0,c
 40153  008CF4  0E00               	movlw	0
 40154  008CF6  6E0C               	movwf	(i2___lmul@product+3)^0,c
 40155  008CF8                     i2l12508:
 40156                           
 40157                           ; BSR set to: 0
 40158  008CF8  A001               	btfss	i2___lmul@multiplier^0,0,c
 40159  008CFA  D008               	goto	i2l12512
 40160                           
 40161                           ; BSR set to: 0
 40162  008CFC  5005               	movf	i2___lmul@multiplicand^0,w,c
 40163  008CFE  2609               	addwf	i2___lmul@product^0,f,c
 40164  008D00  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 40165  008D02  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 40166  008D04  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 40167  008D06  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 40168  008D08  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 40169  008D0A  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 40170  008D0C                     i2l12512:
 40171                           
 40172                           ; BSR set to: 0
 40173  008D0C  90D8               	bcf	status,0,c
 40174  008D0E  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 40175  008D10  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 40176  008D12  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 40177  008D14  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 40178                           
 40179                           ; BSR set to: 0
 40180  008D16  90D8               	bcf	status,0,c
 40181  008D18  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 40182  008D1A  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 40183  008D1C  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 40184  008D1E  3201               	rrcf	i2___lmul@multiplier^0,f,c
 40185  008D20  5001               	movf	i2___lmul@multiplier^0,w,c
 40186  008D22  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 40187  008D24  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 40188  008D26  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 40189  008D28  A4D8               	btfss	status,2,c
 40190  008D2A  D7E6               	goto	i2l12508
 40191                           
 40192                           ; BSR set to: 0
 40193  008D2C  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 40194  008D32  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 40195  008D38  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 40196  008D3E  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 40197                           
 40198                           ; BSR set to: 0
 40199  008D44  0012               	return		;funcret
 40200  008D46                     __end_ofi2___lmul:
 40201                           	opt callstack 0
 40202                           
 40203 ;; *************** function i2_ADCC_StartConversion *****************
 40204 ;; Defined at:
 40205 ;;		line 120 in file "mcc_generated_files/adcc.c"
 40206 ;; Parameters:    Size  Location     Type
 40207 ;;  channel         1    wreg     enum E16053
 40208 ;; Auto vars:     Size  Location     Type
 40209 ;;  channel         1    0[COMRAM] enum E16053
 40210 ;; Return value:  Size  Location     Type
 40211 ;;                  1    wreg      void 
 40212 ;; Registers used:
 40213 ;;		wreg
 40214 ;; Tracked objects:
 40215 ;;		On entry : 0/0
 40216 ;;		On exit  : 3F/3E
 40217 ;;		Unchanged: 0/0
 40218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40223 ;;Total ram usage:        1 bytes
 40224 ;; Hardware stack levels used:    1
 40225 ;; This function calls:
 40226 ;;		Nothing
 40227 ;; This function is called by:
 40228 ;;		_adcCaptureIsr
 40229 ;; This function uses a non-reentrant model
 40230 ;;
 40231                           
 40232                           	psect	text247
 40233  00A29C                     __ptext247:
 40234                           	opt callstack 0
 40235  00A29C                     i2_ADCC_StartConversion:
 40236                           	opt callstack 10
 40237                           
 40238                           ; BSR set to: 0
 40239                           ;incstack = 0
 40240                           ;i2ADCC_StartConversion@channel stored from wreg
 40241  00A29C  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 40242                           
 40243                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 40244  00A29E  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 40245                           
 40246                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 40247  00A2A4  013E               	movlb	62	; () banked
 40248  00A2A6  8FF8               	bsf	248,7,b	;volatile
 40249                           
 40250                           ; BSR set to: 62
 40251                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 40252  00A2A8  81F8               	bsf	248,0,b	;volatile
 40253                           
 40254                           ; BSR set to: 62
 40255  00A2AA  0012               	return		;funcret
 40256  00A2AC                     __end_ofi2_ADCC_StartConversion:
 40257                           	opt callstack 0
 40258                           
 40259 ;; *************** function _ADCC_GetFilterValue *****************
 40260 ;; Defined at:
 40261 ;;		line 231 in file "mcc_generated_files/adcc.c"
 40262 ;; Parameters:    Size  Location     Type
 40263 ;;		None
 40264 ;; Auto vars:     Size  Location     Type
 40265 ;;		None
 40266 ;; Return value:  Size  Location     Type
 40267 ;;                  2    0[COMRAM] unsigned short 
 40268 ;; Registers used:
 40269 ;;		wreg, status,2, status,0
 40270 ;; Tracked objects:
 40271 ;;		On entry : 3F/2
 40272 ;;		On exit  : 3F/3E
 40273 ;;		Unchanged: 0/0
 40274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40279 ;;Total ram usage:        4 bytes
 40280 ;; Hardware stack levels used:    1
 40281 ;; This function calls:
 40282 ;;		Nothing
 40283 ;; This function is called by:
 40284 ;;		_adcCaptureIsr
 40285 ;; This function uses a non-reentrant model
 40286 ;;
 40287                           
 40288                           	psect	text248
 40289  00A166                     __ptext248:
 40290                           	opt callstack 0
 40291  00A166                     _ADCC_GetFilterValue:
 40292                           	opt callstack 10
 40293                           
 40294                           ; BSR set to: 2
 40295                           ;mcc_generated_files/adcc.c: 234:     return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 40296                           
 40297                           ; BSR set to: 62
 40298                           ;incstack = 0
 40299  00A166  013E               	movlb	62	; () banked
 40300  00A168  51E7               	movf	231,w,b	;volatile
 40301  00A16A  6E04               	movwf	(??_ADCC_GetFilterValue+1)^0,c
 40302  00A16C  6A03               	clrf	??_ADCC_GetFilterValue^0,c
 40303  00A16E  51E6               	movf	230,w,b	;volatile
 40304  00A170  2403               	addwf	??_ADCC_GetFilterValue^0,w,c
 40305  00A172  6E01               	movwf	?_ADCC_GetFilterValue^0,c
 40306  00A174  0E00               	movlw	0
 40307  00A176  2004               	addwfc	(??_ADCC_GetFilterValue+1)^0,w,c
 40308  00A178  6E02               	movwf	(?_ADCC_GetFilterValue+1)^0,c
 40309                           
 40310                           ; BSR set to: 62
 40311  00A17A  0012               	return		;funcret
 40312  00A17C                     __end_of_ADCC_GetFilterValue:
 40313                           	opt callstack 0
 40314                           
 40315                           ;
 40316                           ; Interrupt Vector Table @ 0x8
 40317                           ;
 40318                           
 40319                           	psect	ivt0x8
 40320  000008                     __pivt0x8:
 40321                           	opt callstack 0
 40322  000008                     ivt0x8_base:
 40323                           	opt callstack 0
 40324                           
 40325                           ; high-priority vector
 40326  000008  EFA2  F03F         	goto	_INTERRUPT_InterruptManager
 40327  000018                     	org	16
 40328                           
 40329                           ; low-priority vector
 40330  000018  00FF               	reset	
 40331                           
 40332                           	psect	text249
 40333  000000                     __ptext249:
 40334                           	opt callstack 0
 40335                           
 40336                           	psect	rparam
 40337  0000                     tosu	equ	0x3FFF
 40338                           tosh	equ	0x3FFE
 40339                           tosl	equ	0x3FFD
 40340                           stkptr	equ	0x3FFC
 40341                           pclatu	equ	0x3FFB
 40342                           pclath	equ	0x3FFA
 40343                           pcl	equ	0x3FF9
 40344                           tblptru	equ	0x3FF8
 40345                           tblptrh	equ	0x3FF7
 40346                           tblptrl	equ	0x3FF6
 40347                           tablat	equ	0x3FF5
 40348                           prodh	equ	0x3FF4
 40349                           prodl	equ	0x3FF3
 40350                           indf0	equ	0x3FEF
 40351                           postinc0	equ	0x3FEE
 40352                           postdec0	equ	0x3FED
 40353                           preinc0	equ	0x3FEC
 40354                           plusw0	equ	0x3FEB
 40355                           fsr0h	equ	0x3FEA
 40356                           fsr0l	equ	0x3FE9
 40357                           wreg	equ	0x3FE8
 40358                           indf1	equ	0x3FE7
 40359                           postinc1	equ	0x3FE6
 40360                           postdec1	equ	0x3FE5
 40361                           preinc1	equ	0x3FE4
 40362                           plusw1	equ	0x3FE3
 40363                           fsr1h	equ	0x3FE2
 40364                           fsr1l	equ	0x3FE1
 40365                           bsr	equ	0x3FE0
 40366                           indf2	equ	0x3FDF
 40367                           postinc2	equ	0x3FDE
 40368                           postdec2	equ	0x3FDD
 40369                           preinc2	equ	0x3FDC
 40370                           plusw2	equ	0x3FDB
 40371                           fsr2h	equ	0x3FDA
 40372                           fsr2l	equ	0x3FD9
 40373                           status	equ	0x3FD8


Data Sizes:
    Strings     1386
    Constant    38
    Data        32
    BSS         492
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     79     117
    BANK1           256    145     256
    BANK2           256      4     254
    BANK3           256     49     193
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C2_DO_TX$6104$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6110$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6116$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6121	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_RX_EMPTY$6116	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX_EMPTY$6115	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX_EMPTY$6110	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_DO_TX$6109	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_DO_TX$6104	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_MasterFsm$6103	const PTR FTN()enum E16447 size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    I2C2_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_NackCb@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$0$0	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_104(CODE[10]), STR_101(CODE[10]), STR_100(CODE[8]), STR_97(CODE[10]), 
		 -> STR_96(CODE[8]), STR_93(CODE[10]), STR_92(CODE[6]), STR_90(CODE[7]), 
		 -> STR_85(CODE[27]), STR_84(CODE[9]), STR_82(CODE[10]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_63(CODE[9]), STR_62(CODE[9]), STR_61(CODE[8]), 
		 -> STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[9]), 
		 -> STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[49]), 
		 -> STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), STR_23(CODE[20]), 
		 -> STR_22(CODE[28]), STR_21(CODE[5]), STR_19(CODE[16]), STR_18(CODE[14]), 
		 -> STR_17(CODE[33]), STR_16(CODE[20]), STR_15(CODE[74]), STR_14(CODE[40]), 
		 -> STR_13(CODE[47]), STR_12(CODE[7]), STR_11(CODE[7]), STR_10(CODE[55]), 
		 -> STR_4(CODE[20]), STR_3(CODE[11]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_87(CODE[17]), STR_75(CODE[18]), 
		 -> STR_64(CODE[19]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_20(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5414_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), lcdBtnRRow(BANK2[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_106(CODE[7]), STR_105(CODE[7]), STR_104(CODE[10]), STR_101(CODE[10]), 
		 -> STR_100(CODE[8]), STR_97(CODE[10]), STR_96(CODE[8]), STR_93(CODE[10]), 
		 -> STR_92(CODE[6]), STR_90(CODE[7]), STR_87(CODE[17]), STR_85(CODE[27]), 
		 -> STR_84(CODE[9]), STR_82(CODE[10]), STR_75(CODE[18]), STR_72(CODE[10]), 
		 -> STR_70(CODE[10]), STR_68(CODE[19]), STR_67(CODE[28]), STR_66(CODE[37]), 
		 -> STR_65(CODE[38]), STR_64(CODE[19]), STR_63(CODE[9]), STR_62(CODE[9]), 
		 -> STR_61(CODE[8]), STR_60(CODE[11]), STR_59(CODE[10]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[11]), 
		 -> STR_53(CODE[10]), STR_52(CODE[10]), STR_51(CODE[19]), STR_50(CODE[12]), 
		 -> STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[19]), STR_46(CODE[19]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[19]), STR_42(CODE[21]), 
		 -> STR_41(CODE[19]), STR_40(CODE[21]), STR_39(CODE[17]), STR_38(CODE[19]), 
		 -> STR_37(CODE[21]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> STR_27(CODE[49]), STR_26(CODE[20]), STR_25(CODE[36]), STR_24(CODE[27]), 
		 -> STR_23(CODE[20]), STR_22(CODE[28]), STR_21(CODE[5]), STR_20(CODE[6]), 
		 -> STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[33]), STR_16(CODE[20]), 
		 -> STR_15(CODE[74]), STR_14(CODE[40]), STR_13(CODE[47]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[55]), STR_4(CODE[20]), STR_3(CODE[11]), 
		 -> STR_1(CODE[27]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printstrblock@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[19]), STR_2(CODE[17]), 

    printstr@c	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_103(CODE[17]), STR_102(CODE[17]), STR_99(CODE[17]), STR_98(CODE[17]), 
		 -> STR_95(CODE[18]), STR_94(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), 
		 -> STR_88(CODE[17]), STR_86(CODE[17]), STR_83(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[17]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[17]), 
		 -> STR_76(CODE[17]), STR_74(CODE[17]), STR_73(CODE[14]), STR_71(CODE[14]), 
		 -> STR_69(CODE[18]), lcdBtnRow(BANK2[20]), lcdTopRow(BANK2[20]), STR_36(CODE[17]), 
		 -> STR_35(CODE[17]), lcdBtnRRow(BANK2[10]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[19]), STR_2(CODE[17]), 

    timeElapsedR@prevTime	PTR unsigned short  size(2) Largest target is 2
		 -> monTstamp(BANK2[2]), SelfTest@tstamp(BANK3[2]), flowChk@tstamp(BANK1[2]), pressureSensorChk@tstamp(BANK1[2]), 
		 -> main@printTime(BANK3[2]), rCycleTime(BANK1[2]), 

    aCaptGetResult@outVal	PTR short  size(2) Largest target is 2
		 -> MonitorMsgForcedSend@vddVal(BANK1[2]), SelfTest@vddVal(BANK3[2]), flowChk@aPVal(BANK1[2]), pressureSensorChk@aPVal(BANK1[2]), 
		 -> pressureSensorChk@mPVal(BANK1[2]), vMeasureIsr@instP(BANK0[2]), bdP2(BANK0[2]), bdP1(BANK1[2]), 
		 -> pAvgShort(BANK1[2]), main@tmpVal(BANK3[2]), pAvgUShort(BANK1[2]), pInst(BANK1[2]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> lcdIrqHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SV2DelayOpen(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), 

    I2C2_SetDataNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetDataNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), 

    I2C2_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C2_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C2_NackCb(), Absolute function(), 

    I2C2_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C2_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> monitorMsg(BANK2[10]), I2C2_ReadDataBlock@reg(COMRAM[1]), I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@reg(COMRAM[1]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C2_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C2_Read1ByteRegister@reg(COMRAM[1]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C2_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S2119$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_I2C2_NackCb(), i2_I2C2_CallbackReturnReset(), i2_I2C2_CallbackReturnStop(), 
		 -> I2C2_NackCb(), I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E16447[19] size(2) Largest target is 1
		 -> I2C2_DO_BUS_ERROR(), I2C2_DO_BUS_COLLISION(), I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), 
		 -> I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), I2C2_DO_TX_ACK(), I2C2_DO_RX_ACK(), 
		 -> I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), I2C2_DO_SEND_RESTART_READ(), 
		 -> I2C2_DO_RX_EMPTY(), I2C2_DO_TX_EMPTY(), I2C2_DO_RX(), I2C2_DO_TX(), 
		 -> I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> vMeasureIsr(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_MasterIsr(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcCaptureIsr(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C2_ReadDataBlock@bufferBlock(COMRAM[4]), I2C2_Write2ByteRegister@data(COMRAM[2]), I2C2_Write1ByteRegister@data(COMRAM[1]), I2C2_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C2_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR6_ISR->_lcdIrqHandler
    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _I2C2_MasterIsr->_I2C2_MasterFsm
    _I2C2_MasterFsm->_I2C2_DO_TX
    _I2C2_DO_TX->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX->i2_I2C2_NackCb
    _I2C2_DO_TX->i2_rd1RegCompleteHandler
    _I2C2_DO_TX->i2_rd2RegCompleteHandler
    _I2C2_DO_TX->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX->i2_wr1RegCompleteHandler
    _I2C2_DO_TX->i2_wr2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnReset
    _I2C2_DO_TX_EMPTY->i2_I2C2_CallbackReturnStop
    _I2C2_DO_TX_EMPTY->i2_I2C2_NackCb
    _I2C2_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    _I2C2_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSendTxData
    _I2C2_DO_SEND_STOP->i2_I2C2_MasterSetCounter
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnReset
    _I2C2_DO_BUS_COLLISION->i2_I2C2_CallbackReturnStop
    _I2C2_DO_BUS_COLLISION->i2_I2C2_NackCb
    _I2C2_DO_BUS_COLLISION->i2_rd1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rd2RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_rdBlkRegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr1RegCompleteHandler
    _I2C2_DO_BUS_COLLISION->i2_wr2RegCompleteHandler
    _I2C2_DO_SEND_RESTART_READ->i2_I2C2_MasterSetCounter
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnReset
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_CallbackReturnStop
    i2_I2C2_DO_RX_EMPTY->i2_I2C2_NackCb
    i2_I2C2_DO_RX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C2_DO_RX_EMPTY->i2_wr2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnReset
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_CallbackReturnStop
    _I2C2_DO_ADDRESS_NACK->i2_I2C2_NackCb
    _I2C2_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    _I2C2_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_wr1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rdBlkRegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd2RegCompleteHandler->i2_I2C2_SetBuffer
    i2_rd1RegCompleteHandler->i2_I2C2_SetBuffer
    i2_I2C2_SetDataCompleteCallback->i2_I2C2_SetCallback
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_adcGetCh
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_abs->i2___aomod
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    _main->___fltol
    _vMeasureInit->_TMR2_SetInterruptHandler
    _screenInit->_LcdI2CInit
    _blink->_command
    _LcdI2CInit->_timeDelayMs
    _home->_timeDelayMs
    _display->_command
    _clear->_timeDelayMs
    ___fltol->___fladd
    ___fladd->___xxtofl
    _keyReadEC->_timeDiff
    _timeDiff->_timeGet
    _vMeasureGet->___lldiv
    ___lldiv->___lmul
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _timeElapsedR->_TMR1_ReadTimer
    _timeDelayMs->_timeElapsed
    _timeElapsed->_TMR1_ReadTimer
    _noBacklight->_expanderWriteBlock
    _backlight->_expanderWriteBlock
    _expanderWriteBlock->_send4bits
    _setCursor->_command
    _command->_send
    _send->_send4bits
    _printstrblock->_printstr
    _keyRead->_keyPeek
    _keyPeek->_digitalReadC
    _keyPeek->_digitalReadD
    _timeGet->_TMR1_ReadTimer
    _sprintf->_vfprintf
    _bRateGet->___awdiv
    ___awdiv->___wmul
    _I2C2_DO_SEND_ADR_WRITE->_I2C2_MasterSendTxData
    _wr2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C2_SetDataCompleteCallback
    _I2C2_SetDataCompleteCallback->_I2C2_SetCallback
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_timeDiff
    _I2C2_MOpen->_I2C2_SetAddressNackCallback
    _I2C2_MOpen->_I2C2_SetDataNackCallback
    _I2C2_SetDataNackCallback->_I2C2_SetCallback
    _I2C2_SetAddressNackCallback->_I2C2_SetCallback
    _I2C2_Open->_I2C2_SetInterruptHandler
    _MonitorMsgBusy->_I2C2_MClose
    _I2C2_MClose->_I2C2_Close

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_vMeasureIsr
    _vMeasureIsr->i2_aCaptGetResult
    i2_aCaptGetResult->i2_printf
    _ADCC_ThresholdISR->_adcCaptureIsr
    _adcCaptureIsr->i2_printf
    i2_adcGetCh->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _inspOSMeasure->_printf
    _aCaptureInit->_adcGetCh
    _adcGetCh->_printf
    _SelfTest->_pressureSensorChk
    _pressureSensorChk->_aCaptGetResult
    _aCaptureOffSet->_printf
    _aCaptRstFlt->_printf
    _flowChk->_MonitorMsgSendBlock
    _aCaptureOffGet->_printf
    _MonitorMsgSend->_MonitorMsgForcedSend
    _MenuMng->_printf
    _CtrlPowerOff->_MonitorMsgSendBlock
    _screenMng->_sprintf
    _MonitorMsgSendBlock->_MonitorMsgForcedSend
    _MonitorMsgForcedSend->_aCaptGetResult
    _sprintf->_vfprintf
    _aCaptGetResult->_printf
    _I2C2_DO_SEND_ADR_READ->_I2C2_DO_RX_EMPTY
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnReset
    _I2C2_DO_RX_EMPTY->_I2C2_CallbackReturnStop
    _I2C2_DO_RX_EMPTY->_I2C2_NackCb
    _I2C2_DO_RX_EMPTY->_rd1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rd2RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_rdBlkRegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr1RegCompleteHandler
    _I2C2_DO_RX_EMPTY->_wr2RegCompleteHandler
    _I2C2_NackCb->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_SelfTest

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_SelfTest

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0 1577378
                                             15 BANK3     34    34      0
                       _CtrlPowerOff
                       _I2C2_MuxInit
                            _MenuMng
                    _MonitorErrorClr
                    _MonitorErrorSet
                        _MonitorInit
                     _MonitorMsgBusy
                     _MonitorMsgSend
                _MonitorMsgSendBlock
                  _SYSTEM_Initialize
                           _SelfTest
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                            ___awdiv
                            ___fladd
                            ___fltol
                            ___ltdiv
                            ___lwdiv
                             ___tmul
                             ___wmul
                           ___xxtofl
                     _aCaptGetResult
                        _aCaptRstFlt
                       _aCaptureInit
                           _bRateGet
                          _bRateInit
                          _bRateUpdt
                      _inspOSMeasure
                            _keyPeek
                            _keyRead
                          _keyReadEC
                        _keyReadInit
                             _printf
                      _printstrblock
                         _screenInit
                          _screenMng
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                           _timeDiff
                        _timeElapsed
                       _timeElapsedR
                            _timeGet
                           _timeInit
                        _vMeasureGet
                       _vMeasureInit
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureInit                                         0     0      0     211
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timeInit                                             0     0      0       0
                    _TMR0_StartTimer
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _screenInit                                           0     0      0   47888
                         _LcdI2CInit
                              _blink
                              _clear
                      _printstrblock
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (2) _blink                                                0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _LcdI2CInit                                           3     1      2   24560
                                             63 BANK0      3     1      2
           _TMR6_SetInterruptHandler
                              _clear
                            _command
                            _display
                 _expanderWriteBlock
                               _home
                          _send4bits
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0    7147
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (3) _display                                              0     0      0    1078
                            _command
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0    7147
                            _command
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _inspOSMeasure                                       13    13      0   47375
                                             96 BANK1     13    13      0
                             ___lmul
                            ___ltdiv
                             ___tmul
                             ___wmul
                             _printf
                        _vMeasureGet
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             10     4      6     961
                                             43 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _bRateUpdt                                            4     4      0      31
                                             43 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _bRateInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aCaptureInit                                         2     2      0   29477
                                             99 BANK1      2     2      0
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
                           _adcGetCh
 ---------------------------------------------------------------------------------
 (2) _adcGetCh                                             3     3      0   29136
                                             96 BANK1      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             73 BANK0      6     2      4
                                              0 BANK1      4     4      0
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    3402
                                             57 BANK0     16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelfTest                                            27    27      0  709430
                                              0 BANK2      4     4      0
                                              0 BANK3     15    15      0
                _MonitorMsgSendBlock
                     _aCaptGetResult
                     _aCaptureOffSet
                            _flowChk
                            _keyPeek
                          _keyReadEC
                        _keyReadInit
                  _pressureSensorChk
                             _printf
                      _printstrblock
                       _setBacklight
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (2) _pressureSensorChk                                   37    35      2  171008
                                            108 BANK1     37    35      2
                             ___lmul
                     _aCaptGetResult
                        _aCaptRstFlt
                     _aCaptureOffSet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffSet                                       3     1      2   29589
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _aCaptRstFlt                                          5     5      0   29260
                                             96 BANK1      5     5      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _keyReadInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyReadEC                                            3     3      0    5134
                                             59 BANK0      3     3      0
                            _keyPeek
                           _timeDiff
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeDiff                                             6     2      4    4512
                                             53 BANK0      6     2      4
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (2) _flowChk                                             18    18      0  267175
                                            115 BANK1     18    18      0
                _MonitorMsgSendBlock
                             ___flge
                            ___lldiv
                             ___lmul
                           ___xxtofl
                     _aCaptGetResult
                     _aCaptureOffGet
                             _printf
                      _printstrblock
                          _setCursor
                            _sprintf
                        _timeDelayMs
                       _timeElapsedR
                            _timeGet
                        _vMeasureGet
                        _vMeasureRst
 ---------------------------------------------------------------------------------
 (1) _vMeasureRst                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vMeasureGet                                          6     4      2     635
                                             68 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             55 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _aCaptureOffGet                                       3     1      2   29167
                                             96 BANK1      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                             43 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1616
                                             43 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                             57 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1328
                    _ADCC_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     484
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             43 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorMsgSend                                       1     1      0  126701
                                            114 BANK1      1     1      0
               _MonitorMsgForcedSend
                       _timeElapsedR
 ---------------------------------------------------------------------------------
 (1) _timeElapsedR                                        10     6      4    1914
                                             51 BANK0     10     6      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuMng                                             13    13      0   35234
                                             96 BANK1     13    13      0
                            ___awdiv
                            ___lwdiv
                            _keyRead
                             _printf
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _I2C2_MuxInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CtrlPowerOff                                         0     0      0  223399
                _MonitorMsgSendBlock
                       _PrintStrBusy
                            _keyRead
                             _printf
                      _printstrblock
                          _screenMng
                       _setBacklight
                          _setCursor
                        _timeDelayMs
 ---------------------------------------------------------------------------------
 (1) _timeDelayMs                                          4     2      2    6069
                                             59 BANK0      4     2      2
                        _timeElapsed
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeElapsed                                          8     4      4    2392
                                             51 BANK0      8     4      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _setBacklight                                         1     1      0    1619
                                             48 BANK0      1     1      0
                          _backlight
                        _noBacklight
 ---------------------------------------------------------------------------------
 (2) _noBacklight                                          0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (2) _backlight                                            0     0      0     794
                 _expanderWriteBlock
 ---------------------------------------------------------------------------------
 (3) _expanderWriteBlock                                   1     1      0     794
                                             47 BANK0      1     1      0
                          _send4bits
 ---------------------------------------------------------------------------------
 (1) _screenMng                                            4     4      0   52200
                                             92 BANK1      4     4      0
                       _PrintStrBusy
                            ___lwdiv
                             ___tmul
                             ___wmul
                           _printstr
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setCursor                                           10     9      1    5351
                                             50 BANK0     10     9      1
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0    1078
                                             49 BANK0      1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 2     1      1    1047
                                             47 BANK0      2     1      1
                          _send4bits
 ---------------------------------------------------------------------------------
 (4) _send4bits                                            4     3      1     763
                                             43 BANK0      4     3      1
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6    6616
                                             43 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1141
                                             43 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printstrblock                                        2     0      2    3683
                                             47 BANK0      2     0      2
                       _PrintStrBusy
                           _printstr
 ---------------------------------------------------------------------------------
 (2) _printstr                                             4     2      2     592
                                             43 BANK0      4     2      2
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (5) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PrintStrBusy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyRead                                              5     5      0     452
                                             48 BANK0      5     5      0
                            _keyPeek
 ---------------------------------------------------------------------------------
 (2) _keyPeek                                              2     2      0     322
                                             46 BANK0      2     2      0
                       _digitalReadC
                       _digitalReadD
 ---------------------------------------------------------------------------------
 (3) _digitalReadD                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _digitalReadC                                         3     3      0      31
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _MonitorMsgSendBlock                                  1     1      0  124920
                                            114 BANK1      1     1      0
                          _I2C2_MAck
                     _MonitorMsgBusy
               _MonitorMsgForcedSend
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgForcedSend                                 6     6      0  124756
                                            108 BANK1      6     6      0
                          _I2C2_MAck
                        _I2C2_MClose
                         _I2C2_MOpen
               _I2C2_MasterOperation
                     _I2C2_SetBuffer
                    _MonitorErrorClr
                    _MonitorErrorSet
                     _aCaptGetResult
                           _bRateGet
                            _sprintf
                            _timeGet
 ---------------------------------------------------------------------------------
 (1) _timeGet                                              2     0      2     102
                                             51 BANK0      2     0      2
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                       8     6      2     102
                                             43 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   30556
                                             70 BANK1     22    10     12
                            ___lldiv (ARG)
                             ___lmul (ARG)
                            ___lwdiv (ARG)
                             ___tmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _bRateGet                                             0     0      0    1705
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1705
                                             65 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _aCaptGetResult                                      12    10      2   31784
                                             96 BANK1     12    10      2
                             _printf
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorSet                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _MonitorErrorClr                                      1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterOperation                                 2     2      0   53953
                                            100 BANK1      2     2      0
              _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_SEND_ADR_WRITE
              _I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C2_DO_SEND_ADR_READ                                0     0      0   53823
                   _I2C2_DO_RX_EMPTY
              _I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterSendTxData                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C2_DO_RX_EMPTY                                     2     2      0   53792
                                             98 BANK1      2     2      0
                   Absolute function *
           _I2C2_CallbackReturnReset *
            _I2C2_CallbackReturnStop *
          _I2C2_MasterDisableRestart
           _I2C2_MasterEnableRestart
              _I2C2_MasterSetCounter
                        _I2C2_NackCb *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4883
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4852
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4887
                                             96 BANK1      2     0      2
                     _I2C2_SetBuffer
       _I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C2_SetDataCompleteCallback                         4     0      4    2699
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C2_SetBuffer                                       4     0      4    2122
                                             43 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C2_NackCb                                          2     0      2   29345
                                             96 BANK1      2     0      2
            _I2C2_CallbackReturnStop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26     4     22   29105
                                             70 BANK1     26     4     22
                             ___tmul (ARG)
                           _bRateGet (ARG)
                            _keyPeek (ARG)
                           _timeDiff (ARG)
                            _timeGet (ARG)
                        _vMeasureGet (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24799
                                             77 BANK0      2     2      0
                                             64 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    40      5   23867
                                             72 BANK0      5     0      5
                                             39 BANK1     25    25      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5903
                                              0 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             49 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6139
                                              0 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3873
                                             61 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             43 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1630
                                             54 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1130
                                             45 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             44 BANK0      1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (9) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             61 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             43 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             43 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    8945
                                             65 BANK0      6     4      2
                                              0 BANK1      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             43 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7842
                                             59 BANK0      6     2      4
                           _timeDiff (ARG)
                            _timeGet (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C2_CallbackReturnStop                              2     0      2      90
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterSetCounter                                1     1      0      31
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_MasterDisableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C2_CallbackReturnReset                             2     0      2       0
                                             96 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MOpen                                           1     1      0    3963
                                             52 BANK0      1     1      0
                          _I2C2_Open
        _I2C2_SetAddressNackCallback
           _I2C2_SetDataNackCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetDataNackCallback                             4     0      4    1419
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C2_SetAddressNackCallback                          4     0      4    2259
                                             48 BANK0      4     0      4
                   _I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C2_SetCallback                                    5     1      4    1037
                                             43 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C2_Open                                            2     2      0     189
                                             45 BANK0      2     2      0
                _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
                    _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (7) _I2C2_SetInterruptHandler                             2     0      2     121
                                             43 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C2_MAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MonitorMsgBusy                                       0     0      0     133
                        _I2C2_MClose
 ---------------------------------------------------------------------------------
 (5) _I2C2_MClose                                          1     1      0     133
                                             44 BANK0      1     1      0
                         _I2C2_Close
 ---------------------------------------------------------------------------------
 (6) _I2C2_Close                                           1     1      0      37
                                             43 BANK0      1     1      0
                _I2C2_MasterClearIrq
                   _I2C2_MasterClose
              _I2C2_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INTERRUPT_InterruptManager                          4     4      0  215737
                                             39 BANK0      4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                     _I2C2_MasterIsr *
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR6_ISR                                            0     0      0     155
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                      _lcdIrqHandler *
 ---------------------------------------------------------------------------------
 (20) _lcdIrqHandler                                       2     2      0     155
                                              0 COMRAM     2     2      0
                       i2_TMR6_Start
 ---------------------------------------------------------------------------------
 (21) i2_TMR6_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
                       _SV2DelayOpen *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _SV2DelayOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _TMR2_ISR                                            0     0      0   13026
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                        _vMeasureIsr *
 ---------------------------------------------------------------------------------
 (20) _vMeasureIsr                                         8     8      0   13026
                                             93 COMRAM     2     2      0
                                             33 BANK0      6     6      0
                              _isqrt
                   i2_aCaptGetResult
 ---------------------------------------------------------------------------------
 (21) i2_aCaptGetResult                                   12    10      2   12454
                                             83 COMRAM    10    10      0
                                             31 BANK0      2     0      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (20) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _I2C2_MasterIsr                                      0     0      0  178306
                     _I2C2_MasterFsm
 ---------------------------------------------------------------------------------
 (20) _I2C2_MasterFsm                                      2     2      0  178306
                                             12 COMRAM     2     2      0
           _I2C2_ClearInterruptFlags
               _I2C2_DO_ADDRESS_NACK *
              _I2C2_DO_BUS_COLLISION *
                  _I2C2_DO_BUS_ERROR *
                       _I2C2_DO_IDLE *
                      _I2C2_DO_RESET *
                         _I2C2_DO_RX *
                     _I2C2_DO_RX_ACK *
            _I2C2_DO_RX_NACK_RESTART *
               _I2C2_DO_RX_NACK_STOP *
               _I2C2_DO_SEND_RESTART *
          _I2C2_DO_SEND_RESTART_READ *
         _I2C2_DO_SEND_RESTART_WRITE *
                  _I2C2_DO_SEND_STOP *
                         _I2C2_DO_TX *
                     _I2C2_DO_TX_ACK *
                   _I2C2_DO_TX_EMPTY *
                  _I2C2_MasterIsNack
                 i2_I2C2_DO_RX_EMPTY *
            i2_I2C2_DO_SEND_ADR_READ *
           i2_I2C2_DO_SEND_ADR_WRITE *
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_WRITE                            0     0      0      22
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX                                          6     6      0   48692
                                              6 COMRAM     6     6      0
                   Absolute function *
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
                   _I2C2_DO_TX_EMPTY
                  _I2C2_MasterIsNack
            _I2C2_MasterIsTxBufEmpty
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
            i2_I2C2_MasterSendTxData
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsTxBufEmpty                             0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_TX_EMPTY                                    2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_STOP                                   0     0      0      44
              _I2C2_MasterGetCounter
                    _I2C2_MasterStop
            i2_I2C2_MasterSendTxData
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetCounter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_STOP                                0     0      0       0
                       _I2C2_DO_IDLE
                _I2C2_MasterSendNack
                    _I2C2_MasterStop
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C2_MasterSendNack
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX_ACK                                      0     0      0       0
                 _I2C2_MasterSendAck
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RX                                          3     3      0   16215
                                              0 COMRAM     3     3      0
               _I2C2_MasterGetRxData
             _I2C2_MasterIsRxBufFull
                 i2_I2C2_DO_RX_EMPTY
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsRxBufFull                              0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_ERROR                                   0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_BUS_COLLISION                               2     2      0   32384
                                              6 COMRAM     2     2      0
                   Absolute function *
                      _I2C2_DO_RESET
          _I2C2_DO_SEND_RESTART_READ
         _I2C2_DO_SEND_RESTART_WRITE
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
              i2_I2C2_MasterClearIrq
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_WRITE                          0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_DO_SEND_RESTART_READ                           0     0      0   16225
            i2_I2C2_DO_SEND_ADR_READ
            i2_I2C2_MasterSetCounter
 ---------------------------------------------------------------------------------
 (21) i2_I2C2_DO_SEND_ADR_READ                             0     0      0   16203
                 i2_I2C2_DO_RX_EMPTY
            i2_I2C2_MasterSendTxData
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_MasterSendTxData                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (22) i2_I2C2_DO_RX_EMPTY                                  2     2      0   16181
                                              6 COMRAM     2     2      0
                   Absolute function *
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
        i2_I2C2_MasterDisableRestart
         i2_I2C2_MasterEnableRestart
            i2_I2C2_MasterSetCounter
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterSetCounter                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterEnableRestart                          0     0      0       0
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_MasterDisableRestart                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_RESET                                       0     0      0       0
                _I2C2_MasterResetBus
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterResetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_ADDRESS_NACK                                2     2      0   16159
                                              6 COMRAM     2     2      0
                   Absolute function *
               _I2C2_DO_SEND_RESTART
         i2_I2C2_CallbackReturnReset *
          i2_I2C2_CallbackReturnStop *
                      i2_I2C2_NackCb *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (23) i2_wr2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_wr1RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rdBlkRegCompleteHandler                           2     0      2     858
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd2RegCompleteHandler                             2     0      2     836
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (23) i2_rd1RegCompleteHandler                             2     0      2     966
                                              4 COMRAM     2     0      2
                   i2_I2C2_SetBuffer
     i2_I2C2_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetDataCompleteCallback                      4     0      4     510
                                              5 COMRAM     4     0      4
                 i2_I2C2_SetCallback
 ---------------------------------------------------------------------------------
 (25) i2_I2C2_SetCallback                                  5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_SetBuffer                                    4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_NackCb                                       2     0      2   11801
                                              4 COMRAM     2     0      2
          i2_I2C2_CallbackReturnStop
                           i2_printf
 ---------------------------------------------------------------------------------
 (24) i2_I2C2_CallbackReturnStop                           2     0      2      26
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (23) i2_I2C2_CallbackReturnReset                          2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) _I2C2_DO_SEND_RESTART                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C2_ClearInterruptFlags                            0     0      0       0
          _I2C2_MasterClearCountFlag
           _I2C2_MasterClearNackFlag
           _I2C2_MasterClearStopFlag
          _I2C2_MasterIsCountFlagSet
           _I2C2_MasterIsNackFlagSet
           _I2C2_MasterIsStopFlagSet
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsStopFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsNackFlagSet                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterIsCountFlagSet                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearStopFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearNackFlag                            0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _I2C2_MasterClearCountFlag                           0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_ThresholdISR                                   0     0      0   24250
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                      _adcCaptureIsr *
 ---------------------------------------------------------------------------------
 (20) _adcCaptureIsr                                      13    13      0   24250
                                             86 COMRAM     8     8      0
                                             31 BANK0      5     5      0
                _ADCC_GetFilterValue
             i2_ADCC_StartConversion
                           i2___lmul
                         i2_adcGetCh
                           i2_printf
 ---------------------------------------------------------------------------------
 (21) i2_adcGetCh                                          3     3      0   11806
                                             83 COMRAM     3     3      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (22) i2_printf                                            8     4      4   11775
                                             79 COMRAM     4     4      0
                                             27 BANK0      4     0      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (23) i2_vfprintf                                          8     2      6   11542
                                             77 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (24) i2_vfpfcnvrt                                        45    40      5   11162
                                             68 COMRAM     9     4      5
                                              0 BANK0     21    21      0
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (25) i2_xtoa                                             39    28     11    3753
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (26) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (27) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (25) i2_dtoa                                             36    26     10    4269
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (26) i2_pad                                              11     5      6    2388
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (27) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (27) i2_fputs                                             7     3      4     970
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (28) i2_fputc                                             9     5      4     690
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (29) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
                i2_UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (30) i2_UART1_is_tx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (30) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (26) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (26) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (26) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (25) i2_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (26) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (25) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (26) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (21) i2___lmul                                           12     4      8     300
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (21) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (21) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 30
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtrlPowerOff
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                       ___wmul (ARG)
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
                 ___wmul (ARG)
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _PrintStrBusy
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _screenMng
       _PrintStrBusy
       ___lwdiv
       ___tmul
       ___wmul
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
       _printstr
         _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _I2C2_MuxInit
   _MenuMng
     ___awdiv
       ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
     ___lwdiv
     _keyRead
       _keyPeek
         _digitalReadC
         _digitalReadD
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _MonitorErrorClr
   _MonitorErrorSet
   _MonitorInit
   _MonitorMsgBusy
     _I2C2_MClose
       _I2C2_Close
         _I2C2_MasterClearIrq
         _I2C2_MasterClose
         _I2C2_MasterDisableIrq
   _MonitorMsgSend
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                     ___wmul (ARG)
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
   _MonitorMsgSendBlock
     _I2C2_MAck
     _MonitorMsgBusy
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
     _MonitorMsgForcedSend
       _I2C2_MAck
       _I2C2_MClose
         _I2C2_Close
           _I2C2_MasterClearIrq
           _I2C2_MasterClose
           _I2C2_MasterDisableIrq
       _I2C2_MOpen
         _I2C2_Open
           _I2C2_MasterClearIrq
           _I2C2_MasterEnableIrq
           _I2C2_MasterOpen
           _I2C2_SetInterruptHandler
         _I2C2_SetAddressNackCallback
           _I2C2_SetCallback
         _I2C2_SetDataNackCallback
           _I2C2_SetCallback
       _I2C2_MasterOperation
         _I2C2_DO_SEND_ADR_READ
           _I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             _I2C2_CallbackReturnReset *
             _I2C2_CallbackReturnStop *
             _I2C2_MasterDisableRestart *
             _I2C2_MasterEnableRestart *
             _I2C2_MasterSetCounter *
             _I2C2_NackCb *
               _I2C2_CallbackReturnStop
               _printf
                 ___tmul (ARG)
                 _bRateGet (ARG)
                   ___awdiv
                     ___wmul (ARG)
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                 _keyPeek (ARG)
                   _digitalReadC
                   _digitalReadD
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
                 _vMeasureGet (ARG)
                   ___lldiv
                     ___lmul (ARG)
                 _vfprintf (ARG)
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _isdigit
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                         _strlen
                       _toupper
                         _islower
             _rd1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rd2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr1RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
             _wr2RegCompleteHandler *
               _I2C2_SetBuffer
               _I2C2_SetDataCompleteCallback
                 _I2C2_SetCallback
           _I2C2_MasterSendTxData
         _I2C2_DO_SEND_ADR_WRITE
           _I2C2_MasterSendTxData
         _I2C2_MasterSetCounter
       _I2C2_SetBuffer
       _MonitorErrorClr
       _MonitorErrorSet
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _bRateGet
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeGet
         _TMR1_ReadTimer
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetTxInterruptHandler
   _SelfTest
     _MonitorMsgSendBlock
       _I2C2_MAck
       _MonitorMsgBusy
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
       _MonitorMsgForcedSend
         _I2C2_MAck
         _I2C2_MClose
           _I2C2_Close
             _I2C2_MasterClearIrq
             _I2C2_MasterClose
             _I2C2_MasterDisableIrq
         _I2C2_MOpen
           _I2C2_Open
             _I2C2_MasterClearIrq
             _I2C2_MasterEnableIrq
             _I2C2_MasterOpen
             _I2C2_SetInterruptHandler
           _I2C2_SetAddressNackCallback
             _I2C2_SetCallback
           _I2C2_SetDataNackCallback
             _I2C2_SetCallback
         _I2C2_MasterOperation
           _I2C2_DO_SEND_ADR_READ
             _I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               _I2C2_CallbackReturnReset *
               _I2C2_CallbackReturnStop *
               _I2C2_MasterDisableRestart *
               _I2C2_MasterEnableRestart *
               _I2C2_MasterSetCounter *
               _I2C2_NackCb *
                 _I2C2_CallbackReturnStop
                 _printf
                   ___tmul (ARG)
                   _bRateGet (ARG)
                     ___awdiv
                       ___wmul (ARG)
                         _timeDiff (ARG)
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                   _keyPeek (ARG)
                     _digitalReadC
                     _digitalReadD
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                   _vMeasureGet (ARG)
                     ___lldiv
                       ___lmul (ARG)
                   _vfprintf (ARG)
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _isdigit
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _putch
                               _UART1_Write
                               _UART1_is_tx_ready
                           _fputs
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                           _strlen
                         _toupper
                           _islower
               _rd1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rd2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr1RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
               _wr2RegCompleteHandler *
                 _I2C2_SetBuffer
                 _I2C2_SetDataCompleteCallback
                   _I2C2_SetCallback
             _I2C2_MasterSendTxData
           _I2C2_DO_SEND_ADR_WRITE
             _I2C2_MasterSendTxData
           _I2C2_MasterSetCounter
         _I2C2_SetBuffer
         _MonitorErrorClr
         _MonitorErrorSet
         _aCaptGetResult
           _printf
             ___tmul (ARG)
             _bRateGet (ARG)
               ___awdiv
                 ___wmul (ARG)
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
             _keyPeek (ARG)
               _digitalReadC
               _digitalReadD
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
             _vMeasureGet (ARG)
               ___lldiv
                 ___lmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
         _bRateGet
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _sprintf
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___lwdiv (ARG)
           ___tmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
         _timeGet
           _TMR1_ReadTimer
     _aCaptGetResult
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _aCaptureOffSet
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
     _flowChk
       _MonitorMsgSendBlock
         _I2C2_MAck
         _MonitorMsgBusy
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
         _MonitorMsgForcedSend
           _I2C2_MAck
           _I2C2_MClose
             _I2C2_Close
               _I2C2_MasterClearIrq
               _I2C2_MasterClose
               _I2C2_MasterDisableIrq
           _I2C2_MOpen
             _I2C2_Open
               _I2C2_MasterClearIrq
               _I2C2_MasterEnableIrq
               _I2C2_MasterOpen
               _I2C2_SetInterruptHandler
             _I2C2_SetAddressNackCallback
               _I2C2_SetCallback
             _I2C2_SetDataNackCallback
               _I2C2_SetCallback
           _I2C2_MasterOperation
             _I2C2_DO_SEND_ADR_READ
               _I2C2_DO_RX_EMPTY
                 Absolute function(Fake) *
                 _I2C2_CallbackReturnReset *
                 _I2C2_CallbackReturnStop *
                 _I2C2_MasterDisableRestart *
                 _I2C2_MasterEnableRestart *
                 _I2C2_MasterSetCounter *
                 _I2C2_NackCb *
                   _I2C2_CallbackReturnStop
                   _printf
                     ___tmul (ARG)
                     _bRateGet (ARG)
                       ___awdiv
                         ___wmul (ARG)
                           _timeDiff (ARG)
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _timeGet (ARG)
                             _TMR1_ReadTimer
                     _keyPeek (ARG)
                       _digitalReadC
                       _digitalReadD
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                     _vMeasureGet (ARG)
                       ___lldiv
                         ___lmul (ARG)
                     _vfprintf (ARG)
                       _vfpfcnvrt
                         _atoi
                           ___wmul
                             _timeDiff (ARG)
                               _timeGet (ARG)
                                 _TMR1_ReadTimer
                             _timeGet (ARG)
                               _TMR1_ReadTimer
                           _isdigit
                           _isspace
                         _dtoa
                           ___aodiv
                           ___aomod
                           _abs
                             ___aomod (ARG)
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                         _isdigit
                         _xtoa
                           _isalpha
                           _isupper
                           _pad
                             _fputc
                               _putch
                                 _UART1_Write
                                 _UART1_is_tx_ready
                             _fputs
                               _fputc
                                 _putch
                                   _UART1_Write
                                   _UART1_is_tx_ready
                             _strlen
                           _toupper
                             _islower
                 _rd1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C2_SetBuffer
                   _I2C2_SetDataCompleteCallback
                     _I2C2_SetCallback
               _I2C2_MasterSendTxData
             _I2C2_DO_SEND_ADR_WRITE
               _I2C2_MasterSendTxData
             _I2C2_MasterSetCounter
           _I2C2_SetBuffer
           _MonitorErrorClr
           _MonitorErrorSet
           _aCaptGetResult
             _printf
               ___tmul (ARG)
               _bRateGet (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
               _keyPeek (ARG)
                 _digitalReadC
                 _digitalReadD
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
               _vMeasureGet (ARG)
                 ___lldiv
                   ___lmul (ARG)
               _vfprintf (ARG)
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                       _timeDiff (ARG)
                         _timeGet (ARG)
                           _TMR1_ReadTimer
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _isdigit
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                       _fputs
                         _fputc
                           _putch
                             _UART1_Write
                             _UART1_is_tx_ready
                       _strlen
                     _toupper
                       _islower
           _bRateGet
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _sprintf
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
             ___lwdiv (ARG)
             ___tmul (ARG)
             _vfprintf (ARG)
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     _timeDiff (ARG)
                       _timeGet (ARG)
                         _TMR1_ReadTimer
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _isdigit
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                           _UART1_is_tx_ready
                     _strlen
                   _toupper
                     _islower
           _timeGet
             _TMR1_ReadTimer
       ___flge
         ___xxtofl (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___xxtofl
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffGet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
       _vMeasureGet
         ___lldiv
           ___lmul (ARG)
       _vMeasureRst
     _keyPeek
       _digitalReadC
       _digitalReadD
     _keyReadEC
       _keyPeek
         _digitalReadC
         _digitalReadD
       _timeDiff
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _keyReadInit
     _pressureSensorChk
       ___lmul
       _aCaptGetResult
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptRstFlt
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _aCaptureOffSet
         _printf
           ___tmul (ARG)
           _bRateGet (ARG)
             ___awdiv
               ___wmul (ARG)
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
           _keyPeek (ARG)
             _digitalReadC
             _digitalReadD
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
           _vMeasureGet (ARG)
             ___lldiv
               ___lmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                   _timeDiff (ARG)
                     _timeGet (ARG)
                       _TMR1_ReadTimer
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                         _UART1_is_tx_ready
                   _strlen
                 _toupper
                   _islower
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _printstrblock
         _PrintStrBusy
         _printstr
           _TMR6_Start
       _setCursor
         _command
           _send
             _send4bits
               _TMR6_Start
       _sprintf
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___lwdiv (ARG)
         ___tmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
       _timeElapsedR
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setBacklight
       _backlight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
       _noBacklight
         _expanderWriteBlock
           _send4bits
             _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
     _timeElapsedR
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _TMR4_SetInterruptHandler
   _TMR4_Start
   ___awdiv
     ___wmul (ARG)
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
   ___fladd
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___ltdiv
   ___lwdiv
   ___tmul
   ___wmul
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
   ___xxtofl
   _aCaptGetResult
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptRstFlt
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _aCaptureInit
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
     _adcGetCh
       _printf
         ___tmul (ARG)
         _bRateGet (ARG)
           ___awdiv
             ___wmul (ARG)
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
         _keyPeek (ARG)
           _digitalReadC
           _digitalReadD
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
         _vMeasureGet (ARG)
           ___lldiv
             ___lmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
                 _timeDiff (ARG)
                   _timeGet (ARG)
                     _TMR1_ReadTimer
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                       _UART1_is_tx_ready
                 _strlen
               _toupper
                 _islower
   _bRateGet
     ___awdiv
       ___wmul (ARG)
         _timeDiff (ARG)
           _timeGet (ARG)
             _TMR1_ReadTimer
         _timeGet (ARG)
           _TMR1_ReadTimer
   _bRateInit
   _bRateUpdt
   _inspOSMeasure
     ___lmul
     ___ltdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printf
       ___tmul (ARG)
       _bRateGet (ARG)
         ___awdiv
           ___wmul (ARG)
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
       _keyPeek (ARG)
         _digitalReadC
         _digitalReadD
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
       _vMeasureGet (ARG)
         ___lldiv
           ___lmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
     _vMeasureGet
       ___lldiv
         ___lmul (ARG)
   _keyPeek
     _digitalReadC
     _digitalReadD
   _keyRead
     _keyPeek
       _digitalReadC
       _digitalReadD
   _keyReadEC
     _keyPeek
       _digitalReadC
       _digitalReadD
     _timeDiff
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _keyReadInit
   _printf
     ___tmul (ARG)
     _bRateGet (ARG)
       ___awdiv
         ___wmul (ARG)
           _timeDiff (ARG)
             _timeGet (ARG)
               _TMR1_ReadTimer
           _timeGet (ARG)
             _TMR1_ReadTimer
     _keyPeek (ARG)
       _digitalReadC
       _digitalReadD
     _timeDiff (ARG)
       _timeGet (ARG)
         _TMR1_ReadTimer
     _timeGet (ARG)
       _TMR1_ReadTimer
     _vMeasureGet (ARG)
       ___lldiv
         ___lmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _printstrblock
     _PrintStrBusy
     _printstr
       _TMR6_Start
   _screenInit
     _LcdI2CInit
       _TMR6_SetInterruptHandler
       _clear
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _command
         _send
           _send4bits
             _TMR6_Start
       _display
         _command
           _send
             _send4bits
               _TMR6_Start
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
       _home
         _command
           _send
             _send4bits
               _TMR6_Start
         _timeDelayMs
           _timeElapsed
             _TMR1_ReadTimer
           _timeGet
             _TMR1_ReadTimer
       _send4bits
         _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _blink
       _command
         _send
           _send4bits
             _TMR6_Start
     _clear
       _command
         _send
           _send4bits
             _TMR6_Start
       _timeDelayMs
         _timeElapsed
           _TMR1_ReadTimer
         _timeGet
           _TMR1_ReadTimer
     _printstrblock
       _PrintStrBusy
       _printstr
         _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _timeDelayMs
       _timeElapsed
         _TMR1_ReadTimer
       _timeGet
         _TMR1_ReadTimer
   _screenMng
     _PrintStrBusy
     ___lwdiv
     ___tmul
     ___wmul
       _timeDiff (ARG)
         _timeGet (ARG)
           _TMR1_ReadTimer
       _timeGet (ARG)
         _TMR1_ReadTimer
     _printstr
       _TMR6_Start
     _setCursor
       _command
         _send
           _send4bits
             _TMR6_Start
     _sprintf
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
       ___tmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               _timeDiff (ARG)
                 _timeGet (ARG)
                   _TMR1_ReadTimer
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
           _fputc
             _putch
               _UART1_Write
               _UART1_is_tx_ready
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
                     _UART1_is_tx_ready
               _strlen
             _toupper
               _islower
   _setBacklight
     _backlight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
     _noBacklight
       _expanderWriteBlock
         _send4bits
           _TMR6_Start
   _setCursor
     _command
       _send
         _send4bits
           _TMR6_Start
   _sprintf
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___lwdiv (ARG)
     ___tmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             _timeDiff (ARG)
               _timeGet (ARG)
                 _TMR1_ReadTimer
             _timeGet (ARG)
               _TMR1_ReadTimer
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
         _fputc
           _putch
             _UART1_Write
             _UART1_is_tx_ready
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
                 _UART1_is_tx_ready
             _fputs
               _fputc
                 _putch
                   _UART1_Write
                   _UART1_is_tx_ready
             _strlen
           _toupper
             _islower
   _timeDelayMs
     _timeElapsed
       _TMR1_ReadTimer
     _timeGet
       _TMR1_ReadTimer
   _timeDiff
     _timeGet (ARG)
       _TMR1_ReadTimer
   _timeElapsed
     _TMR1_ReadTimer
   _timeElapsedR
     _TMR1_ReadTimer
   _timeGet
     _TMR1_ReadTimer
   _timeInit
     _TMR0_StartTimer
     _TMR1_StartTimer
   _vMeasureGet
     ___lldiv
       ___lmul (ARG)
   _vMeasureInit
     _TMR2_SetInterruptHandler
     _TMR2_Start
   _vMeasureRst

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcCaptureIsr *
       _ADCC_GetFilterValue
       i2_ADCC_StartConversion
       i2___lmul
       i2_adcGetCh
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
                 i2_UART1_is_tx_ready
             i2_isdigit
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_MasterIsr *
     _I2C2_MasterFsm
       _I2C2_ClearInterruptFlags
         _I2C2_MasterClearCountFlag
         _I2C2_MasterClearNackFlag
         _I2C2_MasterClearStopFlag
         _I2C2_MasterIsCountFlagSet
         _I2C2_MasterIsNackFlagSet
         _I2C2_MasterIsStopFlagSet
       _I2C2_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_COLLISION *
         Absolute function(Fake) *
         _I2C2_DO_RESET *
           _I2C2_MasterResetBus
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterClearIrq *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_BUS_ERROR *
         _I2C2_MasterResetBus
       _I2C2_DO_IDLE *
       _I2C2_DO_RESET *
         _I2C2_MasterResetBus
       _I2C2_DO_RX *
         _I2C2_MasterGetRxData
         _I2C2_MasterIsRxBufFull
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
       _I2C2_DO_RX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_RX_NACK_RESTART *
         _I2C2_MasterSendNack
       _I2C2_DO_RX_NACK_STOP *
         _I2C2_DO_IDLE
         _I2C2_MasterSendNack
         _I2C2_MasterStop
       _I2C2_DO_SEND_RESTART *
       _I2C2_DO_SEND_RESTART_READ *
         i2_I2C2_DO_SEND_ADR_READ
           i2_I2C2_DO_RX_EMPTY
             Absolute function(Fake) *
             i2_I2C2_CallbackReturnReset *
             i2_I2C2_CallbackReturnStop *
             i2_I2C2_MasterDisableRestart *
             i2_I2C2_MasterEnableRestart *
             i2_I2C2_MasterSetCounter *
             i2_I2C2_NackCb *
               i2_I2C2_CallbackReturnStop
               i2_printf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_isdigit
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2_rd1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rd2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_rdBlkRegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr1RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
             i2_wr2RegCompleteHandler *
               i2_I2C2_SetBuffer
               i2_I2C2_SetDataCompleteCallback
                 i2_I2C2_SetCallback
           i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_SEND_RESTART_WRITE *
       _I2C2_DO_SEND_STOP *
         _I2C2_MasterGetCounter
         _I2C2_MasterStop
         i2_I2C2_MasterSendTxData
         i2_I2C2_MasterSetCounter
       _I2C2_DO_TX *
         Absolute function(Fake) *
         _I2C2_DO_SEND_RESTART_READ *
           i2_I2C2_DO_SEND_ADR_READ
             i2_I2C2_DO_RX_EMPTY
               Absolute function(Fake) *
               i2_I2C2_CallbackReturnReset *
               i2_I2C2_CallbackReturnStop *
               i2_I2C2_MasterDisableRestart *
               i2_I2C2_MasterEnableRestart *
               i2_I2C2_MasterSetCounter *
               i2_I2C2_NackCb *
                 i2_I2C2_CallbackReturnStop
                 i2_printf
                   i2_vfprintf
                     i2_vfpfcnvrt
                       i2_atoi
                         i2___wmul
                         i2_isdigit
                         i2_isspace
                       i2_dtoa
                         i2___aodiv
                         i2___aomod
                         i2_abs
                           i2___aomod (ARG)
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_isdigit
                       i2_xtoa
                         i2_isalpha
                         i2_isupper
                         i2_pad
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                               i2_UART1_is_tx_ready
                           i2_fputs
                             i2_fputc
                               i2_putch
                                 i2_UART1_Write
                                 i2_UART1_is_tx_ready
                           i2_strlen
                         i2_toupper
                           i2_islower
               i2_rd1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rd2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_rdBlkRegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr1RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
               i2_wr2RegCompleteHandler *
                 i2_I2C2_SetBuffer
                 i2_I2C2_SetDataCompleteCallback
                   i2_I2C2_SetCallback
             i2_I2C2_MasterSendTxData
           i2_I2C2_MasterSetCounter
         _I2C2_DO_SEND_RESTART_WRITE *
         _I2C2_DO_TX_EMPTY *
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         _I2C2_MasterIsNack *
         _I2C2_MasterIsTxBufEmpty *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterSendTxData *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_DO_TX_ACK *
         _I2C2_MasterSendAck
       _I2C2_DO_TX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       _I2C2_MasterIsNack *
       i2_I2C2_DO_RX_EMPTY *
         Absolute function(Fake) *
         i2_I2C2_CallbackReturnReset *
         i2_I2C2_CallbackReturnStop *
         i2_I2C2_MasterDisableRestart *
         i2_I2C2_MasterEnableRestart *
         i2_I2C2_MasterSetCounter *
         i2_I2C2_NackCb *
           i2_I2C2_CallbackReturnStop
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                     i2_UART1_is_tx_ready
                 i2_isdigit
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_rd1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rd2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_rdBlkRegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr1RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
         i2_wr2RegCompleteHandler *
           i2_I2C2_SetBuffer
           i2_I2C2_SetDataCompleteCallback
             i2_I2C2_SetCallback
       i2_I2C2_DO_SEND_ADR_READ *
         i2_I2C2_DO_RX_EMPTY
           Absolute function(Fake) *
           i2_I2C2_CallbackReturnReset *
           i2_I2C2_CallbackReturnStop *
           i2_I2C2_MasterDisableRestart *
           i2_I2C2_MasterEnableRestart *
           i2_I2C2_MasterSetCounter *
           i2_I2C2_NackCb *
             i2_I2C2_CallbackReturnStop
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_isdigit
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                           i2_UART1_is_tx_ready
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                             i2_UART1_is_tx_ready
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_rd1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rd2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_rdBlkRegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr1RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
           i2_wr2RegCompleteHandler *
             i2_I2C2_SetBuffer
             i2_I2C2_SetDataCompleteCallback
               i2_I2C2_SetCallback
         i2_I2C2_MasterSendTxData
       i2_I2C2_DO_SEND_ADR_WRITE *
         i2_I2C2_MasterSendTxData
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _vMeasureIsr *
       _isqrt
       i2_aCaptGetResult
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
                   i2_UART1_is_tx_ready
               i2_isdigit
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                       i2_UART1_is_tx_ready
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                         i2_UART1_is_tx_ready
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR4_ISR *
     Absolute function(Fake) *
     _SV2DelayOpen *
     _TMR4_DefaultInterruptHandler *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _lcdIrqHandler *
       i2_TMR6_Start
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     31      C1      11       75.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     91     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      75       5       73.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     393      32        0.0%
DATA                 0      0     393       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 19 10:35:07 2020

                                ?_vMeasureGet 00A4                                  ?_vMeasureIsr 0001  
                                ?_vMeasureRst 0001              __end_of_TMR2_SetInterruptHandler A31C  
                               ?_vMeasureInit 0001                            _I2C2_MasterSendAck A4A4  
                       _I2C2_DO_BUS_COLLISION 8D46                       _I2C2_MasterIsTxBufEmpty A3D4  
                                 __CFG_CP$OFF 000000                                    i2_adcGetCh 90B6  
                                          _IP 01FB                                ?_adcCaptureIsr 0001  
                                ___awdiv@sign 00A6                        __end_of_FVR_Initialize A452  
                         ___wmul@multiplicand 009D                           _I2C2_MasterSendNack A49E  
                        _I2C2_DO_ADDRESS_NACK 9062                                  _chHighVAlarm 01BA  
                       __end_ofi2_UART1_Write 946E                 I2C2_SetAddressNackCallback@cb 0090  
                        ?_I2C2_MasterClearIrq 0001                                   __CFG_LVP$ON 000000  
                    __end_of_I2C2_SetCallback 8874                           _I2C2_MasterResetBus A440  
                               ?_CtrlPowerOff 0001                                           l456 9402  
                                         _BPM 01FC                           ?_I2C2_MasterSendAck 0001  
                          i2___aodiv@quotient 0013                    pressureSensorChk@mPValMean 0185  
                             _timer1ReloadVal 02EE                                           _abs 94EE  
                                         _pad 7E90                                    _LcdI2CInit 75B4  
            __end_ofi2_I2C2_DO_SEND_ADR_WRITE A166                       __size_of_PMD_Initialize 0024  
                             _TMR2_Initialize 9BBE                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                    ?i2_rd1RegCompleteHandler 0005                           __end_ofi2_vfpfcnvrt 4CFA  
                    _I2C2_ClearInterruptFlags 9B32             __end_of_I2C2_MasterIsCountFlagSet A38C  
                                _rSV2ValveCRT 019B                                  _rSV2ValveORT 019D  
                   ??_I2C2_DO_RX_NACK_RESTART 0001                            _UART1_Transmit_ISR 997C  
                               __CFG_BBEN$OFF 000000                      ?i2_wr1RegCompleteHandler 0005  
          __size_of_I2C2_DO_SEND_RESTART_READ 000E                                  _rSV3ValveORT 0199  
            __end_of_I2C2_CallbackReturnReset A418                    ?_I2C2_DO_SEND_RESTART_READ 0001  
                                __CFG_ZCD$OFF 000000                           MonitorErrorClr@flag 008B  
                                ___fltol@exp1 00AE                             ?i2_I2C2_SetBuffer 0001  
                                ?_keyReadInit 0001                                          ?_abs 009D  
                     ??_rd2RegCompleteHandler 0094                                          l2082 84CE  
                                        l2091 9316                                          l3060 5B70  
                                        l3062 5B7C                                          l3049 7ECA  
                                        l1804 1316                                          l1740 0406  
                                        l3085 608C                                          l2446 330E  
                                        l3087 6098                                          l1751 0784  
                                        l3417 7B50                                          l2651 8AEA  
                                        l3179 844E                                          l1739 033C  
                                        l1684 4EF2                          _ADCC_StartConversion A1E2  
                                        l2663 9C66                                          l1935 8F74  
                                        l3623 893A                                          l1775 0CB0  
                                        l2833 3B66                                          l2770 3FD6  
                                        l3706 5708                                          l3618 8946  
                                        l1786 1028                                          l3643 8F54  
                                        l1963 9270                                          l1955 9226  
                                        l2819 39E6                                          l3707 5704  
                                        l1973 77AE                                          l1877 27A2  
                                        l1990 6448                                          l3814 700C  
                     ?_I2C2_DO_SEND_ADR_WRITE 0001                                          ?_pad 009D  
                                        l3807 6F86                                          l2953 6B84  
                                        l2945 6AEC                                          l2793 5188  
                                        l1969 77F6                                          l3681 55CE  
                                        l2954 6B8A                                          l3682 55AC  
                                        l3827 951E                                          l2795 5194  
                                        l3932 9054                                          l1996 6542  
                                        l2796 51A0                                          l3697 56A0  
                                        l3858 6DB8                                          STR_1 FC9C  
                                        STR_2 FEE3                                          STR_3 FF6B  
                                        STR_4 FD08                                          STR_5 FD68  
                                        STR_6 FEF4                                          STR_7 FEE3  
                                        STR_8 FEE3                                          STR_9 FEE3  
                        _I2C2_MasterOperation 9362                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        _T6PR 003F93                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PEEP 01FA                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                   I2C2_MasterSendTxData@data 008B                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                        ?_I2C2_MasterSendNack 0001                         ?_I2C2_MasterEnableIrq 0001  
              __size_of_I2C2_DO_SEND_ADR_READ 0026                       ??_wr2RegCompleteHandler 0094  
                                        _MaxP 01FF                                          _MaxV 01FE  
                       ?_I2C2_MasterGetRxData 0001                 __end_of_I2C2_DO_SEND_ADR_READ 9E0C  
                                        _bdP1 01E9                                          _bdP2 00D2  
                               __CFG_FCMEN$ON 000000                            ??i2_I2C2_SetBuffer 0005  
                         ?_UART1_Transmit_ISR 0001                                          _chIP 01BE  
                              ?_printstrblock 008F                                          _pAdj 01A3  
                                        abs@a 009D                                          _vAdj 023E  
                                        _dbuf 0253                          ?_I2C2_MasterResetBus 0001  
                  pressureSensorChk@chkResult 017C                                          _atoi 6C38  
                                        _main 001E                                          _dtoa 5AEA  
                                        _home A10E                                          _send 9D74  
                                        _prec 00B4                               _TMR0_StartTimer A4C4  
                                        _nout 0232                                          pad@i 00A4  
                                        pad@p 00A1                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 00A6                                          fsr2l 003FD9  
                        ??_I2C2_MasterSendAck 0001                                   main@tmpUVal 03B7  
                                        _xtoa 606C                                   main@tmpVal2 03BB  
                       ??_MonitorMsgSendBlock 00AF                                   i2_atoi$5374 0010  
                                 i2_atoi$5375 0014                                   i2_atoi$5376 0012  
                   __size_of_I2C2_DO_RX_EMPTY 0082                                          prodh 003FF4  
                                        prodl 003FF3                                          start 001A  
                              _MonitorMsgBusy A22A                                _MonitorMsgSend 9CFC  
                             __end_ofi2_fputc 8150             __size_of_I2C2_SetDataNackCallback 0020  
                               i2_I2C2_NackCb 99AE                         _I2C2_NackCb$intlevel0 95EA  
                             __end_ofi2_fputs 956A                     __size_of_I2C2_DO_TX_EMPTY 0064  
               ??_UART1_SetTxInterruptHandler 008D                     ?_I2C2_SetDataNackCallback 0090  
                             __end_ofi2_putch A1E2                              ??_I2C2_MasterFsm 000D  
                               __CFG_CSWEN$ON 000000                    i2rd1RegCompleteHandler@ptr 0005  
                            ??_I2C2_MasterIsr 000F                         _lastI2CMonTrfResponse 024C  
            __size_ofi2_I2C2_MasterSetCounter 000A                        ??_MonitorMsgForcedSend 016C  
                  ??_TMR4_SetInterruptHandler 008D                                   i2_dtoa$4890 0030  
                       _I2C2_MasterSetCounter A3BC                          aCaptGetResult@lclRaw 0168  
                         MonitorErrorSet@flag 008B                                  ___param_bank 000000  
            __size_ofi2_I2C2_MasterSendTxData 000A                    ??_I2C2_MasterIsNackFlagSet 0001  
                              ??_vMeasureInit 008D                         _I2C2_MasterSendTxData A3B0  
                                command@value 0091              __size_of_rdBlkRegCompleteHandler 0056  
                             __end_of_MenuMng 37D2                          aCaptGetResult@outVal 0160  
                                       ??_abs 009F                                         ??_pad 00A3  
                  __size_of_UART1_is_tx_ready 0010                                    i2_vfprintf 8A36  
                     __end_of_TMR0_Initialize A150                              ??_I2C2_SetBuffer 008F  
                 ??_I2C2_MasterDisableRestart 008B                                    _HighVAlarm 01FD  
                       ?_I2C2_DO_ADDRESS_NACK 0001                               ?_FVR_Initialize 0001  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                           __end_of_I2C2_MAck A492                 __end_of_OSCILLATOR_Initialize A0F6  
                       ??_I2C2_MasterClearIrq 008B                   ?_I2C2_DO_SEND_RESTART_WRITE 0001  
                                       l20020 55BA                                         l20022 55BE  
                                       l20120 578C                                         l20008 555C  
                                       l21000 2678                                         l20122 578E  
                                       l20116 5784                                         l20108 575E  
                                       l20044 5614                                         l20036 55F2  
                                       l21020 299C                                         l20046 5618  
                                       l20054 562A                                         l20310 01A2  
                                       l20072 56C4                                         l20064 5690  
                                       l21016 27AA                                         l20320 01C4  
                              ??_CtrlPowerOff 00AF                                         l20082 56DA  
                                       l20154 7C00                                         l20138 7BAA  
                                       l20242 006A                                         l20172 7C40  
                                       l20164 7C18                                         l20324 01D4  
                                       l20244 006E                                         l20166 7C24  
                                       l20158 7C10                                         l20422 07A2  
                                       l20406 0736                                         l20350 0328  
                                       l20334 02A4                                         l20262 00CA  
                                       l20088 56E4                                         l20440 07E4  
                                       l20434 07CE                                         l20274 00FE  
                                       l20258 00BC                                         l20380 0574  
                                       l20364 040E                                         l20348 0322  
                                       l20542 0CB4                                         l20454 082E  
                                       l20438 07DE                                         l20374 04D0  
                                       l20528 0C18                                         l20472 0882  
                                       l20384 05DC                                         l20288 0146  
                                       l20730 192E                                         l20714 18B6  
                                       l20562 0E1E                                         l20466 0874  
                                       l20378 0562                                         l20386 05E4  
                                       l20724 18F8                                         l20660 13D8  
                                       l20652 131E                                         l20644 12D4  
                                       l20580 0F30                                         l20548 0CE2  
                                       l20468 0878                                         l20822 1DB0  
                                       l20750 19E2                                         l20670 1570  
                                       l20590 0FB0                                         l20566 0E42  
                                       l16200 7428                                         l16024 800C  
                                       l16040 94B8                                         l20912 209C  
                                       l20816 1D84                                         l20664 14A0  
                                       l20656 1358                                         l20648 12FA  
                                       l20576 0ED6                                         l20496 094C  
                                       l20680 1710                                         l20832 1E46  
                                       l16050 995C                                         l20930 2184  
                                       l20738 1966                                         l20674 1586  
                                       l20594 0FC8                                         l20586 0F98  
                                       l20498 0952                                         l16204 744E  
                                       l16044 94D6                                         l16300 5D7E  
                                       l17100 869E                                         l20828 1DC6  
                                       l20764 1AA8                                         l16150 712A  
                                       l16142 70F0                                         l20862 1EC2  
                                       l20758 1A54                                         l20678 159A  
                                       l16216 9358                                         l16160 7186  
                                       l16136 70C8                                         l16048 9958  
                                       l16320 60F6                                         l20944 2286  
                                       l20928 217C                                         l20856 1EB4  
                                       l20768 1AB4                                         l20696 17A2  
                                       l16082 7EC2                                         l16314 60B4  
                                       l17050 9608                                         l17106 86AA  
                                       l20866 1ED2                                         l20698 17A8  
                                       l16148 7116                                         l16164 719C  
                                       l16180 7378                                         l16092 7F26  
                                       l16084 7ED4                                         l17052 960E  
                                       l17116 86BA                                         l18004 9212  
                                       l20964 240C                                         l20884 1F50  
                                       l20868 1ED8                                         l20796 1CB2  
                                       l16190 73CA                                         l16078 7EB0  
                                       l16262 5BA0                                         l16342 61B0  
                                       l16350 624A                                         l17302 856A  
                                       l20982 25B2                                         l20878 1F12  
                                       l17208 9D48                                         l16168 71C2  
                                       l16184 739C                                         l16088 7EF2  
                                       l16248 5B50                                         l16328 611A  
                                       l17400 641E                                         l18104 8F4A  
                                       l18120 6FBC                                         l18016 925C  
                                       l16266 5BB2                                         l16610 45E6  
                                       l18050 92A8                                         l18122 6FC2  
                                       l18114 6F9E                                         l19002 52CE  
                                       l20994 2624                                         l20898 1FAA  
                                       l16372 6C4C                                         l16196 7412  
                                       l16188 73B6                                         l16276 5CF6  
                                       l17412 64FC                                         l18060 8CAE  
                                       l18132 7032                                         l18124 6FCE  
                                       l19020 536E                                         l16390 6CC8  
                                       l16382 6CAA                                         l16374 6C52  
                                       l16366 62C8                                         l16606 45B4  
                                       l17094 8696                                         l17422 6516  
                                       l17430 655E                                         l17270 8504  
                                       l18046 9298                                         l17246 8E70  
                                       l18150 7082                                         l18134 703E  
                                       l18126 6FF4                                         l17512 9C72  
                                       l16392 6CD0                                         l16296 5D64  
                                       l16640 4824                                         l16608 45D8  
                                       l17088 868E                                         l17416 6500  
                                       l17408 64B6                                         l17600 78B2  
                                       l17248 8E7C                                         l18072 7B24  
                                       l18056 8C9A                                         l19016 535A  
                                       l16394 6D00                                         l16650 4872  
                                       l16626 471A                                         l16570 44B8  
                                       l17362 93A0                                         l17282 852A  
                                       l17258 8EA6                                         l18082 7B88  
                                       l19122 4CFC                                         l19130 4D0E  
                                       l17508 9C6C                                         l17188 8338  
                                       l16388 6CBE                                         l16580 44D2  
                                       l16572 44C6                                         l17284 8532  
                                       l17276 8514                                         l18092 8F22  
                                       l18076 7B3A                                         l18068 7AF0  
                                       l19124 4D00                                         l19132 4D3A  
                                       l16398 6D46                                         l16646 4866  
                                       l17358 9396                                         l17390 6356  
                                       l17294 8552                                         l17606 78F6  
                                       l18094 8F2A                                         l18430 2A22  
                                       l19222 81D0                                         l19038 5438  
                                       l19126 4D04                                         l16592 44E8  
                                       l16584 44D8                                         l16576 44CC  
                                       l16568 44B4                                         l16656 4888  
                                       l17392 6382                                         l18440 2ABE  
                                       l18432 2A60                                         l17456 9A3E  
                                       l19208 818C                                         l17712 8400  
                                       l19048 5466                                         l19400 3B04  
                                       l19064 8906                                         l19144 4DE6  
                                       l19128 4D08                                         l16594 4532  
                                       l16850 89E0                                         l17394 63AE  
                                       l17298 855C                                         l17650 6B6E  
                                       l17626 6AE4                                         l18602 92E8  
                                       l18506 2E30                                         l18450 2B8A  
                                       l18442 2B00                                         l18434 2A76  
                                       l17714 840C                                         l19410 3B5C  
                                       l19066 8910                                         l19138 4D98  
                                       l16844 8842                                         l17492 8AF0  
                                       l15972 93EC                                         l16588 44DE  
                                       l16852 8A10                                         l17396 63DA  
                                       l17660 6B9A                                         l17652 6B74  
                                       l18540 2F84                                         l18532 2F48  
                                       l18524 2F0C                                         l18460 2C12  
                                       l17724 8440                                         l19308 3844  
                                       l19236 916A                                         l19180 5062  
                                       l19164 4F52                                         l15990 A1A8  
                                       l17646 6B4A                                         l17638 6B12  
                                       l17590 7818                                         l18550 2FF4  
                                       l18518 2EAA                                         l18462 2C54  
                                       l18454 2BCA                                         l19510 3D72  
                                       l19158 4EB0                                         l17496 8AFE  
                                       l17672 6BBA                                         l17904 9DD6  
                                       l18544 2FA2                                         l18536 2F66  
                                       l18528 2F2A                                         l18480 2DAA  
                                       l18472 2CDC                                         l18448 2B48  
                                       l17568 9824                                         l19600 3164  
                                       l19440 3C06                                         l19416 3B6A  
                                       l19352 394C                                         l19176 504A  
                                       l15986 9424                                         l17690 6BF6  
                                       l17666 6BAA                                         l17922 8C4C  
                                       l18570 3062                                         l18562 302A  
                                       l19602 318A                                         l18650 84E6  
                                       l19434 3BD4                                         l19418 3B86  
                                       l18802 76B4                                         l15988 9426  
                                       l17684 6BE0                                         l17932 8C5C  
                                       l17916 8C30                                         l17588 780E  
                                       l18572 3070                                         l18564 3038  
                                       l18580 309A                                         l18548 2FE0  
                                       l18556 3010                                         l18476 2D1E  
                                       l18468 2CBE                                         l18484 2DD2  
                                       l18492 2DFC                                         l19620 31C8  
                                       l19604 319C                                         l18636 848C  
                                       l19460 3C76                                         l19380 3A32  
                                       l19364 39BC                                         l19372 3A08  
                                       l18660 8F68                                         l18812 76D0  
                                       l17678 6BCA                                         l18574 307E  
                                       l18566 3046                                         l19710 3314  
                                       l19702 32CE                                         l19614 31BA  
                                       l18654 84EC                                         l18910 4378  
                                       l19526 3DC8                                         l19470 3CB8  
                                       l19358 397E                                         l17696 6C0C  
                                       l18576 308C                                         l18568 3054  
                                       l18592 A108                                         l18904 4358  
                                       l19544 3E28                                         l19464 3C92  
                                       l18672 8F70                                         l18808 76C4  
                                       l17938 8C7A                                         l19802 34E8  
                                       l19810 34FE                                         l18930 4466  
                                       l18914 43C4                                         l18842 3EFE  
                                       l19554 3E7C                                         l19298 3824  
                                       l18666 8F6C                                         l19820 357A  
                                       l19812 3542                                         l19804 34F0  
                                       l19644 3202                                         l19636 31F2  
                                       l19628 31DA                                         l17964 8C0E  
                                       l18852 3FF8                                         l18836 3EC6  
                                       l19492 3D1C                                         l18772 7636  
                                       l17974 993C                                         l17982 76DE  
                                       l18926 4454                                         l18862 4050  
                                       l18846 3F1E                                         l19398 3AFC  
                                       l18686 8F92                                         l18790 768C  
                                       l18766 7618                                 ___fltol@sign1 00AD  
                                       l17896 9DB4                                         l17888 95CC  
                                       l19840 35F4                                         l19832 35B6  
                                       l19816 355A                                         l19760 339C  
                                       l19752 3388                                         l19744 3376  
                                       l19736 3364                                         l19728 3354  
                                       l19672 3288                                         l19664 3278  
                                       l19656 326C                                         l17984 7708  
                                       l17992 77CA                                         l18864 4108  
                                       l18784 7672                                         l17898 9DC4  
                                       l19594 314E                                         l19578 3108  
                                       l17986 7732                                         l18858 4030  
                                       l18874 4128                                         l19922 7CDC  
                                       l19914 7C98                                         l18778 7654  
                                       l19860 36CE                                         l19852 3668  
                                       l19836 35D6                                         l19828 359C  
                                       l19780 342E                                         l19772 33EE  
                                       l19764 33B4                                         l18964 51AE  
                                       l17988 775C                                         l19846 3652  
                                       l19790 348C                                         l19766 33CC  
                                       l19694 32BC                                         l19686 32AC  
                                       l19678 329E                                         l18982 5234  
                                       l18966 51D2                                         l19942 5496  
                                       l19918 7CB0                                         l18798 76A8  
                                       l19848 365A                                         l19792 3494  
                                       l19784 344E                                         l19776 340E  
                                       l19768 33D4                                         l19880 379C  
                                       l18976 5202                                         l19928 7CFE  
                                       l19858 36C6                                         l19866 36DC  
                                       l19794 34A2                                         l18986 5254  
                                       l19970 54E2                                         l19946 549A  
                                       l19868 3720                                         l19796 34AA  
                                       l19876 373E                                         l19878 3790  
                                       l19966 54DE                                         l19978 5502  
                             __end_of___aodiv 71F4                                         _ADCAP 003EF5  
                                       _ADACT 003EFE          __end_of_I2C2_SetDataCompleteCallback 9FEC  
       __size_of_I2C2_SetDataCompleteCallback 0020              ??i2_I2C2_SetDataCompleteCallback 000A  
             ?i2_I2C2_SetDataCompleteCallback 0006                                         ?_atoi 00A1  
                _I2C2_SetDataCompleteCallback 9FCC                               __end_of___fladd 57B2  
                                       ?_main 0001                                         ?_dtoa 0100  
                                       _ADCLK 003EFF                               __end_of___aomod 7480  
                                       ?_home 0001                             __end_of_I2C2_Open 833E  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 8578                                         ?_send 008F  
                                       STR_10 FADF                                         STR_11 FFE7  
                                       STR_20 FFF4                                         STR_12 FFE0  
                                       STR_21 FFFA                                         STR_13 FB47  
                                       STR_30 FFB1                                         STR_22 FC4A  
                                       STR_14 FB76                                         STR_31 FFB1  
                                       STR_23 FCCC                                         STR_15 FA95  
                                       STR_40 FCB7                                         STR_32 FFB1  
                                       STR_16 FCE0                                         STR_24 FC81  
                                       STR_33 FFB1                                         STR_41 FD55  
                                       STR_17 FC0D                                         STR_25 FBE9  
                               __CFG_WDTE$OFF 000000                                         STR_42 FCB7  
                                       STR_34 FFA8                                         STR_50 FF3D  
                                       STR_18 FF23                                         STR_26 FCF4  
                                       STR_43 FD55                                         STR_19 FF05  
                                       STR_35 FED2                                         STR_51 FD42  
                                       STR_27 FB16                                         STR_44 FCB7  
                                       STR_28 FFB1                                         STR_52 FF8A  
                                       STR_60 FF60                                         STR_36 FEB0  
                                       STR_53 FF8A                                         STR_45 FCB7  
                                       STR_29 FFB1                                         STR_61 FFCA  
                                       STR_37 FCB7                                         STR_62 FFB1  
                                       STR_46 FD55                                         STR_70 FF80  
                                       STR_54 FF55                                         STR_38 FD55  
                                       STR_63 FFB1                                         STR_47 FD55  
                                       STR_55 FF9E                                         STR_71 FF15  
                                       STR_39 FEC1                                         STR_72 FF80  
                                       STR_56 FF94                                         STR_48 FE9F  
                                       STR_80 FE5B                                         STR_64 FD2F  
                                       _ADRPT 003EEC                                         STR_73 FF15  
                                       STR_57 FF49                                         STR_49 FE8E  
                                       STR_81 FDD3                                         STR_65 FB9E  
                                       STR_82 FF80                                         STR_90 FFD9  
                                       STR_58 FF31                                         STR_74 FE06  
                                       STR_66 FBC4                                         STR_59 FF8A  
                                       STR_83 FF15                                         STR_91 FE6C  
                                       STR_75 FD9F                                         STR_67 FC2E  
                                       STR_84 FFB1                                         STR_92 FFEE  
                                       STR_76 FDF5                                         STR_68 FD1C  
                                       STR_77 FE06                                         STR_93 FF80  
                                       STR_69 FD7B                                         STR_85 FC66  
                                       STR_86 FE28                                         STR_94 FE17  
                                       STR_78 FDB1                                         STR_87 FE7D  
                                       STR_79 FDE4                                         STR_95 FD8D  
                                       STR_88 FE28                                         STR_96 FFC2  
                                       STR_97 FF80                                         STR_89 FDC2  
                                       STR_98 FE17                                         STR_99 FE4A  
                             __end_of___fltol 7C5A                               _TMR1_StartTimer A4C0  
                             aCaptureInit@idx 0163                               __end_of___lldiv 8468  
                                       u20000 38B2                                         _T1CLK 003FB5  
                                       u20130 3C02                                         u20140 3C04  
                                       u20060 3A2C                               ___awdiv@divisor 00A3  
                                       u20070 3A98                                         u21110 56E8  
                                       ?_xtoa 0100                                         u20080 3AA8  
                                       _T1CON 003FB2                                         u20090 3B28  
                                       u21130 56FE                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         u22005 106E  
                                       u21230 7B98                                         u22110 1252  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u20600 3446                                         u21240 7BD2  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       u22130 1298                                         _U1P3L 003DF0  
                                       u20620 347E                                         u22300 1736  
                                       u20701 35B4                                         u21245 7BC6  
                                       u21190 576A                                         u22070 11A2  
                                       u20711 35CC                                         u22215 13C8  
                                       u20640 34DA                                         u20560 33CC  
                                       u21280 7C2A                                         u22320 17D4  
                                       u22240 14AE                                         u22160 12CA  
                                       u21600 0278                                         u21520 00DC  
                                       u22250 14C0                                         u22090 11E0  
                                       u20731 361A                                         u22235 147E  
                                       u20740 3644                                         u20660 3572  
                                       u20580 3406                                         u22500 1BCC  
                                       u22260 1560                                         u21700 06FA  
                                       u16030 9354                                         u20590 3426  
                                       u22430 19DA                                         u22350 181A  
                                       u21710 0750                                         u20751 368E  
                                       u16120 5B64                                         u20760 36B8  
                                       u22520 1CCC                                         u22328 17D8  
                                       u21800 08E0                                         u21640 048A  
                                       _T4CON 003FA0                                         u22265 1558  
                                       u16210 5D4C                                         u20930 5580  
                                       u16140 5B98                                         u16300 6186  
                                       u20940 5590                                         u22540 1D36  
                                       u21580 01DE                                         _T2HLT 003FAD  
                                       u21645 0480                                         u15510 A268  
                                       u16150 5D06                                         u16310 6188  
                                       u20950 5592                                         u22710 21A0  
                                       u16080 5B22                                         u16240 6080  
                                       u21840 0ACA                                         u21680 0580  
                                       u16410 6CA4                                         u16170 5D28  
                                       u16090 5B24                                         u16330 6216  
                                       u22650 1FA2                                         u21690 05A4  
                                       u16171 5D26                               __end_of___ltdiv 895A  
                                       u21675 0528                                         u16180 5D36  
                                       u15700 976C                                         u16340 625C  
                                       u16260 6116                                         u20980 55D6  
                                       u22740 21E6                                         u22580 1DF4  
                                       u16430 6D7C                                         u15630 8004  
                                       u16190 5D3C                                         u16270 614C  
                                       u22718 21A4                                         u21870 0C90  
                                       u16335 6204                                         u21695 059C  
                                       u16440 6D7E                                         u15800 97A0  
                                       u16360 627E                                         u16280 614E  
                                       _T6CON 003F94                                         u16361 627C  
                                       u15650 804C                                         u15810 97A2  
                                       u16370 628C                                         u22690 2110  
                                       u18211 95B4                                         u15820 97D6  
                                       u16380 6292                                         u22780 2466  
                                       u22588 1DF8                                         _T4HLT 003FA1  
                                       u21965 0F88                                         u15830 97D8  
                              __CFG_DEBUG$OFF 000000                                         u15911 70F6  
                                       u15840 903C                                         u15930 712E  
                                       u15690 976A                                         u15850 903E  
                                       u16810 4628                                         u18090 8410  
                                       u21995 100E                                         u16820 462A  
                                       u15870 980C                                         u15790 94FC  
                                       u16830 4636                                         u18510 8F2E  
                                       u19150 84D8                                         u18335 76F8  
                                       u15880 980E                                         u19160 84DA  
                                       u18345 7722                                         u16850 4674  
                                       u19090 92E4                               __end_of___lwdiv 8F62  
                                       u18355 774C                                         u17660 637C  
                                       u17580 8536                                         u17820 9C16  
                                       _T6HLT 003F95                                         u18365 7776  
                                       u15990 73CE                                         u16870 4756  
                                       u17670 63A8                                         u17814 9C02  
                                       u17910 78DC                                         u17815 9BFE  
                                       u17488 86CA                                         u17680 63D4  
                                       u17920 78E2                                         u19600 4318  
                                       u17489 86DC                                         u17665 6372  
                  _ADCC_ADTI_InterruptHandler 02F8                                         u17690 6400  
                                       u17850 9C44                                         u19610 432C  
                                       u17675 639E                                         u17844 9C30  
                                       u18900 2D6C                                         u19620 4342  
                                       u17685 63CA                                         u17845 9C2C  
                                       u17917 78CE                                         u19525 4062  
                                       u17790 A238                                         u18590 7048  
                                       u19630 4358                                         u17695 63F6  
                                       u19535 40DA                                         u17880 7850  
                                       u18920 2DF4                                         u18760 29DE  
                                       u19640 43E0                                         u19536 40E0  
                                       u18905 2D62                                         u19537 40EE  
                                       u17890 7892                                         u19650 43FC  
                                       u19555 4166                                         u19475 3F30  
                                       u19660 4410                                         u19580 42E6  
                                       u19556 416C                                         _T2TMR 003FAA  
                                       u19565 41B0                                         u19557 417A  
                                       u19485 3FA8                                         u17990 6B66  
                                       u19670 4428                                         u19590 4302  
                                       u19566 41B6                                         u19486 3FAE  
                                       u17887 7842                                         u19567 41C4  
                                       u19487 3FBC                                         u19680 4440  
                                       u19920 5020                                         _U1UIR 003DF8  
                                       u17897 7884                                         u19690 4454  
                                       _T2RST 003FAF                                         u19940 505A  
                                       u19925 5016                                         u19790 8914  
                                       u19870 4E08                                         u19880 4E16  
                                       u19970 918E                                         u19890 4E54  
                                       _U1TXB 003DEA                                         _T4TMR 003F9E  
                                       u19990 386A                                         u19895 4E4C  
                                       _T4RST 003FA3                                         i2l340 7FA4  
                                       i2l342 7FAC                                         i2l334 7F76  
                                       i2l344 7FB8                                         i2l336 7F94  
                                       i2l346 7FC4                                         i2l338 7F9C  
                                       i2l347 7FDA                                         i2l348 7FD0  
                                       _T6TMR 003F92                                         i2l462 99A8  
                                       i2l456 9444                                         _T6RST 003F97  
                             ___awdiv@counter 00A5                                         _OSCEN 0039DD  
                       _rValveActuationTstamp 01A1                                  vfpfcnvrt@fmt 00AA  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 0133  
                                       _TMR1H 003FB1                                         _TMR0L 003FB6  
                                       _TMR1L 003FB0                                         _PORTC 003FCC  
                                       _PORTD 003FCD                  ?_I2C2_SetAddressNackCallback 0090  
                      ?_I2C2_MasterGetCounter 0001                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                 ??_aCaptRstFlt 0160  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         i2_abs 956A  
                                       i2_pad 7DDA                               _TMR4_Initialize 9B90  
                    ?i2_I2C2_DO_SEND_ADR_READ 0001                           ___lmul@multiplicand 008F  
                                       __Addr 01C0             __size_of_TMR6_SetInterruptHandler 000E  
                                       _chBPM 01BF                     ?_TMR6_SetInterruptHandler 008B  
                             __end_of_command A25C                              __end_of_TMR2_ISR 9F68  
                               __CFG_WRTB$OFF 000000                        ?_I2C2_MasterDisableIrq 0001  
                             __end_of_display A398                                 __CFG_WRTC$OFF 000000  
                            __end_of_TMR4_ISR 9F46                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR6_ISR 9F24                               __end_of_flowChk 546A  
                                       __cols 0252                __end_of_I2C2_DO_SEND_ADR_WRITE A0DE  
                                  i2isalpha@c 0001                                         _pCtrl 01E7  
                     __size_of_aCaptGetResult 0294                               __end_of_keyPeek 8C8A  
                                  i2isdigit@c 0001                               __end_of_keyRead 931C  
                                       _clear A124                                         _pInst 01EF  
                                       _blink A2AC                      ?_I2C2_CallbackReturnStop 0160  
                                       _flags 00B6                         pressureSensorChk@time 016C  
                                       _tInsp 023C                                         __rows 0251  
                                 ?_TMR2_Start 0001                                         _intIP 01B3  
                                       _keysC 02E1                                         _keysD 02DB  
                       ?_ADCC_StartConversion 0001                                         _fputc 7FF4  
                             __end_of_isalpha 97DE                                         _fputs 94AE  
                             __end_of_isdigit 9814                                   ?_TMR4_Start 0001  
                  pressureSensorChk@offsetCal 0179                                         _lungC 01DF  
                                       _lungR 02CD                                         _isqrt 81F6  
                       ?_I2C2_MasterOperation 0001                            __CFG_MCLRE$EXTMCLR 000000  
                                       atoi@n 0107                                         pad@fp 009D  
                                       atoi@s 00A1                                         _width 00B2  
                                       _putch A1A6                                   ?_TMR6_Start 0001  
                       I2C2_Close@returnValue 008B                               _I2C2_DO_TX$2655 000B  
                                       dtoa@d 0102                                         dtoa@i 0122  
                                       dtoa@n 011A                                         dtoa@p 0114  
                                       dtoa@s 0118                                         dtoa@w 0116  
                                 keyReadEC@ch 009D             __end_of_I2C2_DO_SEND_RESTART_READ A362  
                             __end_of_islower 9772                               __end_of_isspace 9362  
                       ??_I2C2_MasterSendNack 0001                                SelfTest@initOk 039E  
                     __end_of_TMR1_Initialize 94AE                               __end_of_isupper 97A8  
                             __end_of_timeGet A206                                         pclath 003FFA  
                                       tablat 003FF5                                SelfTest@vddVal 039C  
                            __end_ofi2___lmul 8D46                          _I2C2_DO_RX_NACK_STOP A346  
                       ??_I2C2_MasterResetBus 0001                              __end_ofi2___wmul 9CA4  
                                       plusw1 003FE3                                         plusw2 003FDB  
                             _MonitorErrorClr A218                               _MonitorErrorSet A206  
                __size_of_ADCC_GetFilterValue 0016                                    i2islower@c 0001  
                      __end_of_MonitorMsgBusy A23C                                         status 003FD8  
                                  i2isspace@c 0001                        __end_of_MonitorMsgSend 9D26  
                              SelfTest@tstamp 0396                               __end_of_sprintf 8F0A  
                                       xtoa@c 0125                                         xtoa@d 0102  
                                       xtoa@i 0123                                         xtoa@n 011B  
                                       xtoa@p 0117                             timeElapsed@intDur 0099  
                                       xtoa@w 0119                                         xtoa@x 010A  
                                ??_I2C2_DO_RX 0001                                  ??_I2C2_DO_TX 0007  
                             __end_of_toupper 9062              _UART1_DefaultFramingErrorHandler 000000  
                          __size_ofi2___aodiv 0158                                ?i2_I2C2_NackCb 0005  
                          __size_ofi2___aomod 0134                                  ??_I2C2_MOpen 0094  
                                  i2isupper@c 0001                                  ??_I2C2_Close 008B  
                            __end_ofi2_printf 9E32                          __end_of_digitalReadC 9C48  
                        __end_of_digitalReadD 9C1A                      _I2C2_MasterIsStopFlagSet A3E0  
              ??_TMR6_DefaultInterruptHandler 0001                                  _toupper$5482 0097  
                            __end_ofi2_strlen 9A12                             ??_I2C2_MasterOpen 008B  
                               _fsmStateTable FA6F                     ??_I2C2_MasterIsTxBufEmpty 0001  
                           ??_I2C2_MasterStop 0001                             ??_I2C2_Initialize 008B  
                             __initialization 8578                             aCaptGetResult@sel 0167  
                               send4bits@mode 008B                        ?_I2C2_DO_BUS_COLLISION 0001  
                          i2_I2C2_SetCallback 8874                                  __end_of_atoi 6DC6  
                                __end_of_main 29B0                                  __end_of_dtoa 5DBC  
                             ??_adcCaptureIsr 0057                                  __end_of_home A124  
                            i2_aCaptGetResult 659A                                  __end_of_send 9D9A  
                                  i2printf@ap 0052                                  __end_of_xtoa 6306  
                          _expanderWriteBlock A23C                                 i2adcGetCh@sel 0056  
                              __CFG_SAFEN$OFF 000000                                   ?i2_adcGetCh 0001  
                          __size_ofi2_isalpha 0034                       __end_of_TMR2_Initialize 9BEC  
         __end_of_I2C2_SetAddressNackCallback A02C                   _I2C2_SetAddressNackCallback A00C  
                          __size_ofi2_isdigit 0034                   ?_INTERRUPT_InterruptManager 0001  
                                flowChk@aPVal 0183                                   i2_vfpfcnvrt 48C4  
                                ?_UART1_Write 0001                            __size_ofi2_islower 0034  
                          __size_ofi2_isspace 0044                                 i2vfpfcnvrt@ap 0048  
                               i2vfpfcnvrt@fp 0045               __end_ofi2_rd1RegCompleteHandler 9B02  
                               i2vfpfcnvrt@ll 0060                                   i2_xtoa$4901 0031  
                                 i2_xtoa$4902 0033                            __size_ofi2_isupper 0034  
                         ?i2_I2C2_SetCallback 0001                                _keyReadEC$4077 009C  
                                      ??_atoi 00A3                      _TMR2_SetInterruptHandler A30E  
                                      ??_main 039F                                        ??_dtoa 010A  
                                      ??_home 009F                                        ??_send 0090  
                            __end_of_SelfTest 3E8C                                __CFG_PR1WAY$ON 000000  
               i2ADCC_StartConversion@channel 0001                                        ??_xtoa 010B  
                            main@pInspOSScale 03BD                                 __activetblptr 000003  
                        _rVLowActuationTstamp 00B8               __end_ofi2_wr1RegCompleteHandler 9AA2  
                               ?_aCaptureInit 0001                           ?_expanderWriteBlock 0001  
        __size_of_UART1_SetTxInterruptHandler 000E                                   ?_LcdI2CInit 009F  
                                      ?i2_abs 0013                            __size_ofi2_toupper 0052  
                                      ?i2_pad 0013                    i2wr1RegCompleteHandler@ptr 0005  
                           lcdIrqHandler@byte 0002                              __end_of_bRateGet 9EBE  
                          __end_of_I2C2_DO_RX 8782                            __end_of_I2C2_DO_TX 7ABC  
                             _TMR6_Initialize 9B62                              _UART1_Initialize 85FE  
                                  i2toupper@c 0007                                 vMeasureIsr@v1 0081  
                               vMeasureIsr@v2 0083                 ??_I2C2_SetAddressNackCallback 0094  
                          __end_of_I2C2_MOpen 8B02                       ??i2_I2C2_MasterClearIrq 0001  
                          __end_of_I2C2_Close 9D4E                                        ?_clear 0001  
                                      ?_blink 0001                              __end_of_adcGetCh 8FB8  
                     __end_of_TMR0_StartTimer A4C8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      ?_fputc 008D                                        _ADLTHH 003EDF  
                                      STR_100 FFBA                                        _ADLTHL 003EDE  
                                      STR_101 FF80                                        STR_102 FE17  
                                      ?_fputs 0096                                        STR_103 FE39  
                                      STR_104 FF76                                        STR_105 FFD2  
                                      STR_106 FEED                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      ?_isqrt 0001                             I2C2_MClose@trfRsp 008C  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 00A1  
                                      _ADUTHL 003EE0                      i2_I2C2_DO_SEND_ADR_WRITE A150  
                      ??_I2C2_MasterEnableIrq 008B                  ?i2_I2C2_MasterDisableRestart 0001  
                   _I2C2_MasterDisableRestart A486                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                               ??_printstrblock 0091  
                                      _RB1I2C 003A5A                        ??_I2C2_MasterGetRxData 0001  
                                      _T1GATE 003FB4                                        _RB2I2C 003A5B  
                                      _T1GCON 003FB3                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                           __end_of_aCaptRstFlt 77FC  
                                      _RB1PPS 003A09               _I2C2_DO_SEND_ADR_READ$intlevel0 9DEC  
                         i2UART1_Write@txData 0001                                        _RB2PPS 003A0A  
                       ?_I2C2_DO_RX_NACK_STOP 0001                                        _RC1PPS 003A11  
                               ??_MonitorInit 008B                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                __displaymode 00C6                                        i2l1080 8738  
                              __CFG_WDTCCS$SC 000000                                        i2l3060 5E3E  
                                      i2l3062 5E4A                                        i2l3049 7E16  
                                      i2l3085 6840                                        i2l3087 684C  
                                      i2l1941 5ACE                                        i2l1935 90C6  
                                      i2l1939 57EA                                        i2l1990 66D6  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i2l3827 959A                                        _INLVLC 003A64  
                                      i2l3932 914E                                        i2l1996 67CA  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l2982 8286                                        i2l3858 6F28  
                                      _FVRCON 003EC1                                     ??i2_fputc 0007  
                                   ??i2_fputs 0010                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 013C                          ??i2_I2C2_SetCallback 0005  
                             flowChk@aPValMax 017E                               flowChk@aPValMin 017A  
                                   ??i2_putch 0002                              i2___lmul@product 0009  
                 ?i2_I2C2_CallbackReturnReset 0005                      _I2C2_CallbackReturnReset A40E  
                           _pressureSensorChk 3E8C                         _UART1_SetErrorHandler A2E4  
                             ?_MonitorMsgBusy 0001                                        _BdTrig 01F9  
                             ?_MonitorMsgSend 0001                                i2___aodiv@sign 0012  
                                 INTSTAT_ADDR 0000D3                              __end_of___xxtofl 709C  
                                      i2abs@a 0013                          ??_expanderWriteBlock 008F  
                                ?_timeDelayMs 009B                                        i2_atoi 6DC6  
                                      i2_dtoa 5DBC                                        i2pad@i 001A  
                                      i2pad@p 0017                     pressureSensorChk@aPValMax 0181  
                                      i2pad@w 001C                     pressureSensorChk@aPValMin 0183  
                                   ??_MenuMng 0160                                        i2_xtoa 6824  
                                ?_timeElapsed 0093                            ?_pressureSensorChk 016C  
                      ?_I2C2_MasterSetCounter 0001                        __size_of_inspOSMeasure 0414  
                        __size_of_noBacklight 000C                                        _eBRate 00BF  
                      ?_I2C2_MasterSendTxData 0001                          _rVMedActuationTstamp 019F  
                              __CFG_XINST$OFF 000000                          _effectiveFlowRateInv 01D1  
                      pressureSensorChk@aPVal 018F                                        _chPEEP 01BC  
                                vfprintf@cfmt 00AD                                        ___flge 7ABC  
                      pressureSensorChk@mPVal 018D                                i2___aomod@sign 0012  
                        I2C2_SetBuffer@buffer 008B                                        _chMaxP 01BD  
                                      _chMaxV 01B9             __size_of_I2C2_MasterClearNackFlag 0004  
                                      ___lmul 8C8A                       __end_of_TMR1_StartTimer A4C4  
                           _ADCC_ThresholdISR 9F8A                                     ??___aodiv 009B  
                                      ___tmul 928C                                 i2vfprintf@fmt 0077  
                                   ??___fladd 00A1                     ?_I2C2_MasterClearNackFlag 0001  
                                   ??___aomod 009B                                        ___wmul 9A42  
                                   ??___awdiv 00A5                                        _pExpOS 01E1  
                              __CFG_STVREN$ON 000000                                     ??___fltol 0100  
                                   ??___lldiv 009F                        ??_I2C2_DO_ADDRESS_NACK 0007  
                                   ??___ltdiv 0091                           MonitorMsgSend@state 0172  
                                   ??___lwdiv 008F                           __size_of_TMR2_Start 0004  
                         ??_pressureSensorChk 016E                                   ?i2_vfprintf 0075  
                          keyReadEC@longPress 009B                          __size_of_vMeasureGet 005A  
                         __size_of_TMR4_Start 0004                          __size_of_vMeasureIsr 00A0  
                        __size_of_vMeasureRst 001C                              ?_TMR0_Initialize 0001  
                          ?_ADCC_ThresholdISR 0001                       __end_of_TMR4_Initialize 9BBE  
                         __size_of_TMR6_Start 0004                                        clear_0 85C2  
                                      clear_1 85CE                                        clear_2 85DA  
                                      clear_3 85E6                              ___awdiv@quotient 00A7  
             __end_ofi2_I2C2_DO_SEND_ADR_READ 9F8A                     pressureSensorChk@mPValMax 017D  
                   pressureSensorChk@mPValMin 017F                                        _printf 9CD0  
                                      pad@buf 009F                                ??_aCaptureInit 00AF  
                                      dtoa@fp 0100                                     ??_command 0091  
                                      _strlen 994A                                        _volume 022B  
                                   ??_display 0092                                     ??_flowChk 0173  
                                   ??_keyPeek 008E                                     ??_keyRead 0090  
                             _ADCC_Initialize 895A          __end_of_TMR4_DefaultInterruptHandler A4FE  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler A4FC  
             __end_of_I2C2_CallbackReturnStop A422                                        fputc@c 008D  
                              _PMD_Initialize 9E56                            __size_of_bRateInit 0024  
                            __end_of_timeDiff 994A                                        fputs@c 009A  
                                      fputs@i 009B                             __end_ofi2___aodiv 734C  
                                      fputs@s 0096                                     ??_isalpha 008D  
                                   ??_isdigit 008D                             __end_ofi2___aomod 75B4  
                            __end_of_timeInit A40E                            __size_of_bRateUpdt 00C8  
                               main@printTime 03B4                   ??_I2C2_MasterIsCountFlagSet 0001  
                         ??_ADCC_ThresholdISR 005F                                        isqrt@x 0001  
                                   ??_islower 008D                                  __mediumconst FA6E  
                                   ??_isspace 008D                                        tblptrh 003FF7  
                                   ??_isupper 008D                                        tblptrl 003FF6  
                                   ??_timeGet 0095                                        tblptru 003FF8  
                      ??_ADCC_StartConversion 008B                       __end_of_MonitorErrorClr A22A  
                            __end_of_printstr 7900                       __end_of_MonitorErrorSet A218  
                          timeElapsedR@intDur 0099                        ??_I2C2_MasterOperation 00AF  
            i2I2C2_CallbackReturnReset@funPtr 0005                I2C2_CallbackReturnReset@funPtr 0160  
                          i2___aomod@dividend 0001                              __end_of_vfprintf 8A36  
                        __end_of_vMeasureInit 9D74      TMR6_SetInterruptHandler@InterruptHandler 008B  
    TMR4_SetInterruptHandler@InterruptHandler 008B      I2C2_SetInterruptHandler@InterruptHandler 008B  
    TMR2_SetInterruptHandler@InterruptHandler 008B   UART1_SetTxInterruptHandler@InterruptHandler 008B  
ADCC_SetADTIInterruptHandler@InterruptHandler 008B          __end_of_UART1_SetOverrunErrorHandler A2D6  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler A2C8  
                   _UART1_DefaultErrorHandler 000000                                     ??_sprintf 00AF  
                             flowChk@maxFlowL 0178                               _pValveActuation 01E5  
                                      xtoa@fp 0100                                     ??_toupper 0093  
           __size_of_I2C2_MasterClearStopFlag 0004                                 main@tstScreen 03AE  
                          timeElapsed@intTime 0097                               flowChk@minFlowL 0180  
                   ?_I2C2_MasterClearStopFlag 0001                 __size_of_INTERRUPT_Initialize 0004  
                   __end_of_pressureSensorChk 446C                 __size_of_I2C2_DO_SEND_RESTART 0004  
                                  ___flge@ff1 0099                                    ___flge@ff2 009D  
                            ?_TMR1_Initialize 0001                                  ___xxtofl@arg 0095  
                           __end_ofi2_isalpha 98E4                             __end_ofi2_isdigit 9918  
                                ___xxtofl@exp 0094                             _SYSTEM_Initialize 9706  
                                ___xxtofl@val 008B                           __size_ofi2_adcGetCh 0054  
                               ??_I2C2_MClose 008C                 ??i2_I2C2_MasterDisableRestart 0001  
                                  __accesstop 0060                       __end_of__initialization 85F8  
                               ?_setBacklight 0001                               ??i2_I2C2_NackCb 0007  
                           __end_ofi2_islower 987C                          __size_of_keyReadInit 0014  
                           __end_ofi2_isspace 93EA                       ?_I2C2_MasterIsRxBufFull 0001  
                           ?_I2C2_MasterClose 0001                             __end_ofi2_isupper 98B0  
                              _screenMng$6102 015E                          __end_of_CtrlPowerOff 81F6  
                               ??_I2C2_NackCb 00AF                            ?_SYSTEM_Initialize 0001  
                            I2C2_MOpen@trfRsp 0094                              _I2C2_DO_RX_EMPTY 8684  
                               ___rparam_used 000001             _rdBlkRegCompleteHandler$intlevel0 8FBE  
                                  ___fltol@f1 00A9                            __size_of_backlight 000C  
                    I2C2_SetBuffer@bufferSize 008D                       i2_I2C2_MasterSetCounter A436  
                          ??_I2C2_MasterClose 008B                              _I2C2_DO_TX_EMPTY 8B66  
                     i2_I2C2_MasterSendTxData A42C                             __end_ofi2_toupper 915C  
                                 SelfTest@idx 0392                     __end_of_ADCC_ThresholdISR 9FAC  
                               __end_ofi2_abs 95A8                           __end_of_MonitorInit A4FA  
                         __size_of_LcdI2CInit 0124                                 __end_ofi2_pad 7E90  
                  ?i2_rdBlkRegCompleteHandler 0005                       _rdBlkRegCompleteHandler 8FB8  
                        _lastI2C2LTrfResponse 024E                                __pcstackCOMRAM 0001  
                              send4bits@value 008C                        aCaptGetResult@lclValid 0166  
                                __pidataBANK1 A3F8                                  __pidataBANK2 A17C  
                         ??_SYSTEM_Initialize 008D                                 __end_of_clear A13A  
                                   ?_TMR2_ISR 0001                                 __end_of_blink A2BA  
                       __end_of_lcdIrqHandler 79DE                                     ?_TMR4_ISR 0001  
                                   ?_TMR6_ISR 0001                                 __end_of_fputc 80A2  
                               __end_of_fputs 94EE                    ??_I2C2_ClearInterruptFlags 0001  
                               __end_of_isqrt 829C                                aCaptRstFlt@sel 0164  
                               __end_of_putch A1BA                                   i2printf@fmt 007B  
                            ?_TMR2_Initialize 0001                       __end_of_TMR6_Initialize 9B90  
                      __end_of_PMD_Initialize 9E7A                                    _pAvgUShort 01EB  
                                  _chVentMode 024F                                     ?i2___lmul 0001  
                                   ?i2___wmul 0001                             ?_I2C2_SetCallback 008B  
                ??i2_I2C2_MasterEnableRestart 0001                    I2C2_SetDataNackCallback@cb 0090  
                               _inspOSMeasure 4CFA                                       ??i2_abs 0015  
                                 i2putch@byte 0002                                       ??i2_pad 0019  
                                 _aCaptRstFlt 76D8                       __size_of_TMR1_ReadTimer 002C  
                   _UART1_FramingErrorHandler 02F4                            ??_I2C2_SetCallback 008F  
               ?_TMR4_DefaultInterruptHandler 0001                          _lastI2C2MTrfResponse 00C0  
                              _aCaptGetResult 6306                                i2vfpfcnvrt@fmt 0047  
                                   ?i2_printf 007B                                i2vfpfcnvrt@llu 0068  
                 ADCC_StartConversion@channel 008B                                timeDiff@intDur 0099  
                     __size_of_aCaptureOffGet 004A                              timeDelayMs@delms 009B  
            __end_of_I2C2_SetDataNackCallback A00C                                       ??_clear 009F  
                                   ?i2_strlen 0001                                       ??_blink 0092  
                     __size_of_aCaptureOffSet 004A                              ?_TMR0_StartTimer 0001  
                      ??_I2C2_DO_RX_NACK_STOP 0001                                       ??_fputc 0091  
                   __end_of_SYSTEM_Initialize 973C                                       ??_fputs 009A  
                                     ??_isqrt 0003                         __end_of_I2C2_DO_RESET A28C  
                 ??_I2C2_DO_SEND_RESTART_READ 0002                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 008C                         _I2C2_InterruptHandler 00BC  
                              timeDiff@startT 0095                                 ?i2_TMR6_Start 0001  
                               flowChk@initOk 0182                            __size_of_keyReadEC 0088  
                                  __pbssBANK0 00AF                                    __pbssBANK1 0191  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
              __end_of_I2C2_MasterIsRxBufFull A37E                 ?_UART1_SetOverrunErrorHandler 008B  
                              ??_setBacklight 0090                        ?_UART1_SetErrorHandler 008B  
                  __end_ofi2_I2C2_DO_RX_EMPTY 87FC                         __size_of_digitalReadC 002E  
                       __size_of_digitalReadD 002E                __size_of_rd2RegCompleteHandler 003A  
           __size_of_I2C2_SetInterruptHandler 000E                           __size_ofi2_vfprintf 0068  
               __end_of_rd2RegCompleteHandler 9692                     ?_I2C2_SetInterruptHandler 008B  
                             __CFG_MVECEN$OFF 000000                                 flowChk@tstamp 017C  
              __size_of_wr2RegCompleteHandler 003A                 __end_of_wr2RegCompleteHandler 9706  
                                     ?i2_atoi 0008                                       ?i2_dtoa 001E  
                       _TMR4_InterruptHandler 02EA              __size_ofi2_rd1RegCompleteHandler 0030  
                       _rd1RegCompleteHandler 9692                                    _rCycleTime 01CF  
                                     ?i2_xtoa 001E                                       IVTBASEH 003FD6  
                   _I2C2_MasterIsCountFlagSet A37E                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                     ?_SelfTest 0001  
                           __end_of_bRateInit 9E56                             __end_of_bRateUpdt 7D22  
                        i2I2C2_SetCallback@cb 0001              __size_ofi2_wr1RegCompleteHandler 0030  
                       _wr1RegCompleteHandler 961E                              ??_FVR_Initialize 008B  
             _rd1RegCompleteHandler$intlevel0 9698               _wr1RegCompleteHandler$intlevel0 9624  
                            vMeasureIsr@instP 0085                            __size_of_send4bits 005A  
                           aCaptureOffGet@sel 0162                      rd1RegCompleteHandler@ptr 0160  
                         __end_of_I2C2_MClose 9C76             __end_ofi2_rdBlkRegCompleteHandler 91F8  
                                   ?_bRateGet 0001                                       ?___flge 0099  
                                  _lcdBtnRRow 02C1                                       ?___lmul 008B  
         __size_ofi2_I2C2_MasterEnableRestart 0006                     __size_ofi2_I2C2_SetBuffer 0020  
                                     _I2C2CLK 003D65                                       ?___tmul 008B  
                                     _I2C2CNT 003D56                                       _I2C2ERR 003D60  
                                     ?___wmul 009B                                       _I2C2PIE 003D64  
                                     _I2C2PIR 003D63                           __end_of_I2C2_NackCb 961E  
                            ?_TMR1_StartTimer 0001                                       _I2C2RXB 003D54  
                                     _I2C2TXB 003D55                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler A300                                    ??_TMR2_ISR 0060  
                              i2_toupper$5482 000D                                    ??_TMR4_ISR 0001  
                     __end_of_ADCC_Initialize 89C8                                    ??_TMR6_ISR 0003  
                          __size_of_setCursor 003C                                     ?_adcGetCh 0001  
        __size_ofi2_I2C2_MasterDisableRestart 0006                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                            __size_of_screenMng 0726  
                           aCaptureOffSet@sel 0162                                ___lmul@product 0093  
        __end_of_ADCC_SetADTIInterruptHandler A32A         __size_of_ADCC_SetADTIInterruptHandler 000E  
                _ADCC_SetADTIInterruptHandler A31C                       ??_I2C2_MasterGetCounter 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                  __size_ofi2_UART1_is_tx_ready 0010  
                                     ?_printf 0146                               ?_PMD_Initialize 0001  
                         _ADCC_GetFilterValue A166                                    _lcdPrintBR 01CD  
                                  _lcdPrintTR 01CE                                       ?_strlen 008B  
                                  ??i2___lmul 0009                                    ??i2___wmul 0005  
                                     _U1ERRIE 003DFA                                ?_inspOSMeasure 0001  
                                     _U1ERRIR 003DF9                       ??_I2C2_MasterDisableIrq 008B  
                                     _T4INPPS 003ACB                                       i2l12002 A0A4  
                                     _T6INPPS 003ACC                           __CFG_PWRTS$PWRT_OFF 000000  
                            main@vInspOSScale 03B2                                       i2l13016 79D8  
                                     i2l12512 8D0C                                       i2l12272 8274  
                                     i2l12264 8214                                       i2l12266 8220  
                                     i2l12508 8CF8                                       i2l12268 822E  
                                     i2l11902 9B42                                       i2l16000 942E  
                                     i2l11906 9B52                        __end_of_aCaptGetResult 659A  
                        __size_of_UART1_Write 0042                                       i2l16014 9466  
                                     i2l16016 9468                                       i2l16032 A1D0  
                                     i2l13392 99A4                                       i2l10994 88B8  
                                     i2l16222 9536                                       i2l16230 99EE  
                                     i2l16232 99F2                                       i2l16066 80BA  
                                     i2l16226 9552                                       i2l16500 74EA  
                                     i2l16420 7E0E                                       i2l16502 74FE  
                                     i2l16430 7E72                                       i2l16422 7E20  
                                     i2l17134 99CC                                       i2l16512 755C  
                                     i2l16416 7DFC                                       i2l17136 99D2  
                                     i2l17320 8796                                       i2l16426 7E3C  
                                     i2l17314 878E                                       i2l18210 663C  
                                     i2l16540 93E0                                       i2l16460 726E  
                                     i2l16516 7582                                       i2l16508 7546  
                                     i2l17308 8786                                       i2l18212 6668  
                                     i2l16462 7282                                       i2l16454 7248  
                                     i2l16702 5FB4                                       i2l17326 87A2  
                                     i2l18206 65E4                                       i2l16800 6DDC  
                                     i2l16480 731A                                       i2l16472 72DE  
                                     i2l16448 7220                                       i2l17336 87B2  
                                     i2l18232 678E                                       i2l18224 6744  
                                     i2l18208 6610                                       i2l18216 66AC  
                                     i2l16722 601C                                       i2l18162 90BE  
                                     i2l16820 6E7C                                       i2l16476 72F4  
                                     i2l16492 74AC                                       i2l16740 6864  
                                     i2l18156 90BA                                       i2l18412 8B22  
                                     i2l18228 678A                                       i2l16814 6E40  
                                     i2l16726 6036                                       i2l16902 49FA  
                                     i2l18182 90E6                                       i2l17542 8B72  
                                     i2l18238 679E                                       i2l18246 67E8  
                                     i2l16824 6EBA                                       i2l16816 6E48  
                                     i2l16808 6E2E                                       i2l16496 74D0  
                                     i2l16904 4A1E                                       i2l18168 90C2  
                                     i2l17536 8B6A                                       i2l16818 6E4E  
                                     i2l16674 5E22                                       i2l16754 68C6  
                                     i2l16746 68A4                                       i2l16922 4B56  
                                     i2l16906 4A2A                                       i2l17802 8714  
                                     i2l16692 5E78                                       i2l17548 8B7E  
                                     i2l17556 8B86                                       i2l16942 4CA0  
                                     i2l17830 906E                                       i2l16688 5E68  
                                     i2l16792 6A6E                                       i2l16768 695C  
                                     i2l16776 69F4                                       i2l16936 4C5E  
                                     i2l16880 4928                                       i2l16872 4920  
                                     i2l16864 490C                                       i2l16952 4CC0  
                                     i2l18704 57DC                                       i2l17752 79F6  
                                     i2l17744 79EA                                       i2l17760 7A42  
                                     i2l17816 8760                                       i2l17840 9078  
                                     i2l16946 4CAA                                       i2l16866 490E  
                                     i2l16890 497C                                       i2l17834 9074  
                                     i2l16884 492C                                       i2l16876 4924  
                                     i2l16868 491C                                       i2l18724 585E  
                                     i2l17748 79F0                                       i2l17860 8D5E  
                                     i2l17852 8D52                                       i2l16798 6DD8  
                                     i2l16990 8A4E                                       i2l17774 7AA0  
                                     i2l17766 7A70                                       i2l17758 79FA  
                                     i2l16888 4936                                       i2l16992 8A78  
                                     i2l17776 7AA8                                       i2l17856 8D58  
                                     i2l17786 7AB8                                       i2l17866 8D64  
                                     i2l18826 83AA                                       i2l18828 83B2  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 008B  
                           __end_of_backlight A3B0                                     _I2C2_MAck A48C  
                                  _pQuantaExp 01D3                      ?i2_rd2RegCompleteHandler 0005  
                                _digitalReadC 9C1A                                  _digitalReadD 9BEC  
           __size_of_I2C2_MasterEnableRestart 0006                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                     _I2C2_Open 829C  
                          __size_of_vfpfcnvrt 0458                     ?_I2C2_MasterEnableRestart 0001  
                     __size_of_I2C2_DO_RX_ACK 0008                       __size_of_I2C2_DO_TX_ACK 0008  
                            flowChk@aPValMean 0176                                    ??i2_printf 0050  
                                     _OSCTUNE 0039DE                              ?_MonitorErrorClr 0001  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                    ?i2_wr2RegCompleteHandler 0005                                       _SLRCONE 003A83  
                            ?_MonitorErrorSet 0001                                    ??i2_strlen 0003  
                                ??_TMR2_Start 008B                            _inspOSMeasure$6099 0164  
                    __end_ofi2_aCaptGetResult 6824                                       _OSCheck 01C3  
                                ??_TMR4_Start 008B                                ??i2_TMR6_Start 0001  
                  ??_I2C2_MasterIsStopFlagSet 0001                                  ??_TMR6_Start 008B  
                 __end_of_MonitorMsgSendBlock 9DE6                               _I2C2_MasterOpen 9EE0  
                               ?_SV2DelayOpen 0001                               _I2C2_MasterStop A498  
                             _I2C2_Initialize 9E7A                    __size_of_pressureSensorChk 05E0  
                                     i2_fputc 80A2                                       i2_fputs 952C  
                                 _MonitorInit A4F8                          ?_ADCC_GetFilterValue 0001  
                   ??i2_I2C2_MasterSetCounter 0001                                       i2atoi@n 0015  
                                     i2pad@fp 0013                                       i2atoi@s 0008  
                                     i2_putch A1CE                                       i2dtoa@d 0020  
                                     i2dtoa@i 0040                                       i2dtoa@n 0038  
                                     i2dtoa@p 0032                                       i2dtoa@s 0036  
                                     i2dtoa@w 0034                     ??i2_I2C2_MasterSendTxData 0001  
                                     _i2cBuff 0300                                 ?_timeElapsedR 0093  
                   ??_rdBlkRegCompleteHandler 0094                        __size_ofi2_UART1_Write 0042  
                        __end_of_aCaptureInit 91AC                   __size_of_I2C2_MasterSendAck 0006  
                     ??_I2C2_DO_BUS_COLLISION 0007              __size_ofi2_I2C2_DO_SEND_ADR_READ 0022  
                                  _parBuffLen 00C2                         _I2C2_DO_SEND_ADR_READ 9DE6  
                                     _MenuMng 30D6                               __size_ofi2_atoi 0170  
                                  _parBuffPtr 00C3                               __size_ofi2_dtoa 02B0  
                                  ??_SelfTest 02FA                                    _ctrlStatus 01C8  
                             __size_ofi2_xtoa 0280                                       i2xtoa@c 0043  
                                     i2xtoa@d 0020                                       i2xtoa@i 0041  
                                     i2xtoa@n 0039                                       i2xtoa@p 0035  
                                     i2xtoa@w 0037                                       i2xtoa@x 0028  
                                     __Hparam 0000                    __size_of_ADCC_ThresholdISR 0022  
                                     __Lparam 0000                      __end_of_UART1_Initialize 8684  
                                   ?_timeDiff 0095              __size_of_I2C2_CallbackReturnStop 000A  
                  ??_TMR2_SetInterruptHandler 008D                          __size_of_timeDelayMs 0034  
                                   ?_timeInit 0001                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                  i2rd2RegCompleteHandler@ptr 0005                   __end_of_I2C2_MasterClearIrq A45A  
                                  ??_bRateGet 00A9                          __size_of_timeElapsed 0030  
                               ?_PrintStrBusy 0001                               __size_of___flge 00D0  
                                     ___aodiv 709C                     _I2C2_DO_SEND_RESTART_READ A354  
                                     ___fladd 546A                                       ___aomod 734C  
                    ??i2_ADCC_StartConversion 0001                                       ___awdiv 84F0  
                             __size_of___lmul 005E                                     ?_printstr 008B  
                                     ___fltol 7B8C                 __size_of_MonitorMsgForcedSend 0194  
                             __size_of___tmul 004A                                       ___lldiv 83DE  
                             __size_of___wmul 0030                                       ___ltdiv 88EA  
                                     ___lwdiv 8F0A                                  ??i2_adcGetCh 0054  
                         setBacklight@new_val 0090                                    ??_adcGetCh 0160  
                                   ?_vfprintf 0140                                i2vfprintf@cfmt 004E  
                           __end_of_keyReadEC 84F0                            __end_of_TMR2_Start A4C0  
                                ?i2_vfpfcnvrt 0045                                       _sBreath 01C9  
                                     __pcinit 8578                                       _pInspOS 00D0  
                          __end_of_TMR4_Start A4CC                              ?_TMR6_Initialize 0001  
                                     __ramtop 1000                                    _menuStatus 01B7  
                    TMR1_ReadTimer@readValLow 0092                   __size_of_UART1_Transmit_ISR 0032  
                                     _lcdBusy 00C1                            __end_of_TMR6_Start A4D4  
                                  _menuTstamp 0238                                       _curASrc 00CC  
                                     __ptext0 001E                                       __ptext1 9D4E  
                                     __ptext2 A4BC                                       __ptext3 A404  
                                     __ptext4 A4C0                                       __ptext5 A4C4  
                                     __ptext6 8DA2                                       __ptext7 A2AC  
                                     __ptext8 75B4                                       __ptext9 A10E  
                               ?_I2C2_DO_IDLE 0001            __size_of_I2C2_MasterClearCountFlag 0004  
                             __size_of_printf 002C                                       _command A24C  
                                     _intPEEP 01B1                                       _display A38C  
                    ?_I2C2_DO_RX_NACK_RESTART 0001                                       _vInspOS 01D9  
                  ??i2_I2C2_DO_SEND_ADR_WRITE 0001                 ?_ADCC_SetADTIInterruptHandler 008B  
                                     _flowChk 510E                               __CFG_WRTAPP$OFF 000000  
                   TMR1_ReadTimer@readValHigh 0091                    ?_I2C2_MasterClearCountFlag 0001  
                             __size_of_strlen 0032                                       _keyPeek 8C2A  
                                     _keyRead 92D6                                     _T1CONbits 003FB2  
                     pressureSensorChk@tstamp 017A                                       _intMaxP 01F3  
                                     _intMaxV 01F1                         __size_of_vMeasureInit 0026  
                       _OSCILLATOR_Initialize A0DE                                  ??_LcdI2CInit 00A1  
                                   _T2CONbits 003FAC                                  __size_of_abs 003E  
                                     _lastkey 00CB                         inspOSMeasure@setScale 016A  
                                     _menuVal 0193                                  __size_of_pad 00B4  
                                     _vQuanta 01A5                                       _isalpha 97A8  
                             ?_aCaptGetResult 0160                                       _isdigit 97DE  
                                  ??___xxtofl 008F                                    ?_I2C2_MAck 0001  
                                 _I2C2ERRbits 003D60                                     _T4CONbits 003FA0  
                 __end_of_I2C2_MasterSendNack A4A4                               _ctrlErrorStatus 01CB  
                                     _islower 973C                      ??_PIN_MANAGER_Initialize 008B  
           __size_of_TMR4_SetInterruptHandler 000E                                       _isspace 931C  
                             __CFG_WRTSAF$OFF 000000                      wr1RegCompleteHandler@ptr 0160  
                  ??_I2C2_CallbackReturnReset 0094                                    ?_I2C2_Open 0001  
                   ?_TMR4_SetInterruptHandler 008B             __size_of_I2C2_MasterIsNackFlagSet 000C  
                                     _isupper 9772                                       _timeGet A1F4  
                                 _I2C2PIEbits 003D64                               __displaycontrol 00C7  
                   ?_I2C2_MasterIsNackFlagSet 0001                                     _T6CONbits 003F94  
                 __end_of_I2C2_MasterResetBus A44A                             __end_of_send4bits 8EB0  
                                  _vddValMean 0191                                   _I2C2PIRbits 003D63  
                                     atoi@neg 0100                              ??_MonitorMsgBusy 008D  
                            ??_MonitorMsgSend 00AF                                ??_SV2DelayOpen 0001  
                                 _QuantaCheck 01C2                             _I2C2_DO_BUS_ERROR A26C  
                  __size_of_SYSTEM_Initialize 0036                         __size_of_CtrlPowerOff 00A6  
                                     _sprintf 8EB0               i2I2C2_CallbackReturnStop@funPtr 0005  
               I2C2_CallbackReturnStop@funPtr 0160                  MonitorMsgForcedSend@trfError 016D  
                                     _toupper 900E                __size_ofi2_I2C2_MasterClearIrq 0008  
                        end_of_initialization 85F8                             __end_of_setCursor 95E4  
               __end_ofi2_I2C2_MasterClearIrq A47A                          adcCaptureIsr@adcData 007F  
                i2rdBlkRegCompleteHandler@ptr 0005              __end_of_I2C2_MasterClearNackFlag A4F4  
              ??_TMR4_DefaultInterruptHandler 0001                            ?_I2C2_DO_BUS_ERROR 0001  
                       ??_ADCC_GetFilterValue 0003                             __end_of_screenMng 30D6  
                     ??_I2C2_MasterSetCounter 008B                                ??_timeElapsedR 0097  
                                     fputc@fp 008F                      _I2C2_SetDataNackCallback 9FEC  
                                 _I2C2_MClose 9C48                       ??_I2C2_MasterSendTxData 008B  
                          __end_ofi2_adcGetCh 910A           __end_of_UART1_SetTxInterruptHandler A2C8  
                 _UART1_SetTxInterruptHandler A2BA                                       fputs@fp 0098  
                         i2___wmul@multiplier 0001                                 keyPeek@n_4072 008F  
                      ?_rd1RegCompleteHandler 0160                                     i2u1010_40 A37A  
                                  _screenInit 8DA2                                     i2u1004_40 A36C  
                                   i2u1005_40 A388                                     i2u1006_40 A3E8  
                                   i2u1007_40 A3F4                                     i2u1008_40 A3DC  
                                   i2u1242_48 9F12                                     i2u1180_40 795C  
                                   i2u1244_48 9F34                                     i2u2132_48 7F68  
                                   i2u1182_40 7972                                     i2u1181_48 795E  
                                   i2u2134_40 7F7C                                   _I2C2_NackCb 95E4  
                                   i2u1184_40 798A                                     i2u1183_48 7974  
                                   i2u1176_40 7926                                     i2u2135_48 7F80  
                                   i2u1186_40 79A2                                     i2u1185_48 798C  
                                   i2u1178_40 7942                                     i2u1177_48 7928  
                                   i2u1700_40 5FF8                                     i2u1188_40 79BC  
                                   i2u1187_48 79A4                                     i2u1179_48 7944  
                                   i2u1702_40 6006                                     i2u1606_40 9874  
                                   i2u1189_48 79BE                                     i2u1607_40 9876  
                                   i2u1711_40 6932                                     i2u1712_40 6934  
                                   i2u1705_40 6836                                     i2u1722_40 6E2A  
                                   i2u1714_40 69C0                                     i2u1714_45 69AE  
                                   i2u1715_40 6A04                                     i2u1707_40 68C2  
                                   i2u1724_40 6EF0                                     i2u1572_40 80B2  
                                   i2u1708_40 68F8                                     i2u1725_40 6EF2  
                                   i2u1661_40 7502                                     i2u1557_40 A298  
                                   i2u1717_40 6A26                                     i2u1709_40 68FA  
                                   i2u1741_40 4B92                                     i2u1812_48 7A0A  
                                   i2u1820_48 8D74                                     i2u1653_41 724E  
                                   i2u1717_41 6A24                                     i2u1812_49 7A1E  
                                   i2u1820_49 8D86                        ?_wr1RegCompleteHandler 0160  
                                   i2u1670_40 93DC                                     i2u1574_40 80FA  
                                   i2u1718_40 6A34                                     i2u1655_40 7286  
                                   i2u1671_40 98A8                                     i2u1719_40 6A3A  
                                   i2u1735_40 4A66                                     i2u1664_40 9578  
                                   i2u1672_40 98AA                                     i2u1736_40 4A68  
                                   i2u1816_40 8710                                     i2u1665_40 98DC  
                                   i2u1673_40 9136                                     i2u1737_40 4A76  
                                   i2u1690_40 5DF6                                     i2u1666_40 98DE  
                                   i2u1674_40 9138                                     i2u1930_45 5A40  
                                   i2u1667_40 9910                                     i2u1739_40 4AB2  
                                   i2u1931_40 5AA0                                     i2u1762_48 87C2  
                                   i2u1762_49 87D4                                     i2u1931_45 5A96  
                                   i2u1668_40 9912                                     i2u1819_48 9088  
                                   i2u1819_49 909A                                     i2u1924_45 587E  
                                     isqrt@op 0005                                     i2u1693_40 5E34  
                                   i2u1925_40 58DE                                 ?_I2C2_MuxInit 0001  
                                   i2u1925_45 58D4                                     i2u1942_40 8362  
              ??_UART1_SetOverrunErrorHandler 008D                                     i2u1926_45 5914  
                                   i2u1695_40 5E62                                     i2u1927_40 5974  
                                   i2u1943_40 83BE                                     i2u1927_45 596A  
                                   i2u1696_40 5FC2                                     i2u1871_48 8B4E  
                                   i2u1864_40 660A                                     i2u1871_49 8B60  
                                   i2u1928_45 59AA                                     i2u1864_45 6600  
                                   i2u1689_40 5DF4                                     i2u1929_40 5A0A  
                                   i2u1865_40 6636                                     i2u1929_45 5A00  
                                   i2u1865_45 662C                                     i2u1698_40 5FE4  
                                   i2u1777_48 8B96                                     i2u1866_40 6662  
                                   i2u1698_41 5FE2                                     i2u1777_49 8BA8  
                                   i2u1866_45 6658                               ___lldiv@divisor 009B  
                                   i2u1699_40 5FF2                                     i2u1867_40 668E  
                                   i2u1867_45 6684                              ___ltdiv@dividend 008B  
                                   i2u1982_48 9F9A                                     i2u1984_48 9F56  
                                  _monitorMsg 02B7                               ___lldiv@counter 00A3  
                         ??_I2C2_DO_BUS_ERROR 0001                                    ??_timeDiff 0099  
                           _I2C2_DO_SEND_STOP A08A                                    ??_timeInit 008B  
                                 _I2C2_Status 0200                                ??_PrintStrBusy 008B  
                           __end_of_vfpfcnvrt 48C4                            __end_of_LcdI2CInit 76D8  
                                     postdec1 003FE5                                       postdec2 003FDD  
                         timeElapsedR@intTime 009B                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                          ?_I2C2_DO_SEND_STOP 0001                            LcdI2CInit@lcd_Addr 00A1  
                         i2___lmul@multiplier 0001                                    ??_printstr 008D  
                                _vMeasureInit 9D4E                              ?_ADCC_Initialize 0001  
                                ??i2_vfprintf 004E                                    ??_vfprintf 00AD  
                       __end_of_adcCaptureIsr 5AEA                                     _EDuration 0246  
                           UART1_Write@txData 008B                            LcdI2CInit@lcd_cols 009F  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 008D  
                                     strlen@s 008B                            LcdI2CInit@lcd_rows 00A0  
                             ??_inspOSMeasure 0160                                ??_I2C2_DO_IDLE 0001  
                                  _pressMills 023A                          __end_of_setBacklight A10E  
             __end_ofi2_rd2RegCompleteHandler 9AD2              __end_of_I2C2_MasterClearStopFlag A4F0  
                                _mainPSensCal 01F5                          I2C2_Open@returnValue 008E  
          __end_ofi2_I2C2_MasterEnableRestart A4B6                    i2_I2C2_MasterEnableRestart A4B0  
                         timeElapsed@duration 0095               __end_of_rdBlkRegCompleteHandler 900E  
                    _TMR6_SetInterruptHandler A2F2                                 i2_UART1_Write 942C  
                         ??_I2C2_DO_SEND_STOP 0002                                  _CtrlPowerOff 8150  
             __end_ofi2_wr2RegCompleteHandler 9B32                       __size_of_I2C2_MasterFsm 0064  
                     __size_of_I2C2_MasterIsr 0006                                printstrblock@c 008F  
                    __end_of_I2C2_DO_RX_EMPTY 8706                             i2___aodiv@divisor 0009  
                                 ___fladd@grs 00A8                       __end_of_I2C2_MasterOpen 9F02  
           __end_of_I2C2_MasterClearCountFlag A4F8                       __end_of_I2C2_MasterStop A49E  
                     __end_of_I2C2_Initialize 9E9C                                _TMR1_ReadTimer 9CA4  
                           i2___aodiv@counter 0011                                     _IDuration 01AD  
                    __end_of_I2C2_DO_TX_EMPTY 8BCA                                 ___xxtofl@sign 0093  
                   __end_of_I2C2_DO_BUS_ERROR A27C                    i2wr2RegCompleteHandler@ptr 0005  
                           _I2C2_MasterIsNack A362                                _aCaptureOffGet 9242  
                            ___ltdiv@quotient 0091                                _aCaptureOffSet 91F8  
                     __size_of_I2C2_SetBuffer 0022                           timeElapsed@prevTime 0093  
                                   i2___aodiv 71F4                                  _intEDuration 0248  
                                   i2___aomod 7480                            ?_I2C2_MasterIsNack 0001  
            _I2C2_DO_SEND_ADR_WRITE$intlevel0 A0CA                              __CFG_FEXTOSC$OFF 000000  
                 i2I2C2_MasterSendTxData@data 0001                                 ??_noBacklight 0090  
                       __end_of_printstrblock 9DC0                 __size_of_I2C2_MasterEnableIrq 0014  
               __size_of_I2C2_MasterGetRxData 0006                            __end_ofi2_vfprintf 8A9E  
                 __size_ofi2_I2C2_SetCallback 0076                       i2_rd1RegCompleteHandler 9AD2  
                      ?_I2C2_DO_SEND_ADR_READ 0001                    rdBlkRegCompleteHandler@ptr 0160  
                    ?_I2C2_MasterIsTxBufEmpty 0001                           ??_I2C2_MasterIsNack 0001  
                                  main@keyTmp 03B6                                  _intIDuration 01AF  
                              ??_I2C2_MuxInit 008B                     __end_of_I2C2_DO_SEND_STOP A0A8  
                                SelfTest@cIdx 0394                   __size_of_expanderWriteBlock 0010  
                     i2_wr1RegCompleteHandler 9A72                                     i2_isalpha 98B0  
                                   i2_isdigit 98E4                                    main@tmpVal 03BF  
                              __end_ofi2_atoi 6F36                                __end_ofi2_dtoa 606C  
                                   i2_islower 9848                                     i2_isspace 93A6  
                                _MenuMng$4363 0164                                  _MenuMng$4364 0166  
                                _MenuMng$4365 0168                                  _MenuMng$4366 016A  
                              __end_ofi2_xtoa 6AA4                                     i2_isupper 987C  
                               ??_vMeasureGet 00A6                   ??i2_rdBlkRegCompleteHandler 0003  
                               ??_vMeasureIsr 005E                                 ??_vMeasureRst 008B  
              i2I2C2_MasterSetCounter@counter 0001                                     i2atoi@neg 000E  
                                 adcGetCh@sel 0162                              i2_I2C2_SetBuffer A04C  
                __end_of_INTERRUPT_Initialize A4D0               __end_of_I2C2_DO_RX_NACK_RESTART A462  
        __end_of_TMR2_DefaultInterruptHandler A500         __size_of_TMR2_DefaultInterruptHandler 0002  
                _TMR2_DefaultInterruptHandler A4FE                  __end_of_I2C2_DO_SEND_RESTART A4DC  
             __size_ofi2_ADCC_StartConversion 0010                ??_ADCC_DefaultInterruptHandler 0001  
                                   i2_toupper 910A                                __end_of___flge 7B8C  
                        __end_ofi2_TMR6_Start A4D8                      I2C2_MasterOperation@read 0164  
                              __end_of___lmul 8CE8                                   _chLowVAlarm 01BB  
                              __end_of___tmul 92D6                                   vfpfcnvrt@ap 00AB  
                                 vfpfcnvrt@fp 00A8                                   vfpfcnvrt@ll 012B  
                              __end_of___wmul 9A72                 __size_of_I2C2_DO_ADDRESS_NACK 0054  
                   __size_of_I2C2_MasterClose 000A                             __size_of_TMR2_ISR 0022  
                           __size_of_TMR4_ISR 0022                                     i2fputc@fp 0005  
                           __size_of_TMR6_ISR 0022                                ?i2_UART1_Write 0001  
                      ?_OSCILLATOR_Initialize 0001                                     i2fputs@fp 000E  
                      __end_of_TMR1_ReadTimer 9CD0                      ??_I2C2_DO_SEND_ADR_WRITE 008C  
                                 printstr@idx 008E                     __end_of_I2C2_MasterIsNack A370  
            __end_of_I2C2_SetInterruptHandler A338                              i2___wmul@product 0005  
                              __end_of_printf 9CFC                                    keyRead@tmp 0092  
                      __end_of_aCaptureOffGet 928C                        __end_of_aCaptureOffSet 9242  
                              __end_of_strlen 997C                                   ??_I2C2_MAck 008B  
                                ?_aCaptRstFlt 0001                           start_initialization 8578  
                              _I2C2_DO_RX_ACK A46A                             __size_ofi2___lmul 005E  
                              _I2C2_DO_TX_ACK A462                            bRateUpdt@triggered 008E  
                                 ??_I2C2_Open 008D                             __size_ofi2___wmul 002E  
                            _rValveDelayStart 0197                      __size_of_TMR0_Initialize 0016  
                                send4bits@idx 008D               __size_of_PIN_MANAGER_Initialize 00B8  
                                 __end_of_abs 952C                                   __end_of_pad 7F44  
               ?_I2C2_SetDataCompleteCallback 0090                       ??_UART1_SetErrorHandler 008D  
                                _lastCycleVol 0244                                    ?i2___aodiv 0001  
                                  ?i2___aomod 0001                                 ??_keyReadInit 008B  
                                i2vfpfcnvrt@c 0070                 __size_of_ADCC_StartConversion 0012  
                       __size_of_aCaptureInit 0050                                    ivt0x8_base 0008  
                                   _LowVAlarm 01F7                 __size_of_I2C2_MasterOperation 0044  
                           __size_ofi2_printf 0026                             __size_ofi2_strlen 0032  
                                   i2strlen@a 0003                                     i2strlen@s 0001  
                         i2_UART1_is_tx_ready A28C                       i2_I2C2_DO_SEND_ADR_READ 9F68  
                 I2C2_SetDataNackCallback@ptr 0092                     __size_of_I2C2_SetCallback 0078  
                               _uart1TxBuffer 0350                                   ?_screenInit 0001  
                                    ??i2_atoi 000A                                      ??i2_dtoa 0028  
          __size_ofi2_I2C2_CallbackReturnStop 0004                         __end_ofi2_I2C2_NackCb 99E0  
                                    ??i2_xtoa 0029                      _I2C2_MasterClearNackFlag A4F0  
                                  ?i2_isalpha 0001                    ?i2_I2C2_CallbackReturnStop 0005  
                     _I2C2_CallbackReturnStop A418                                    ?i2_isdigit 0001  
                                  ?i2_islower 0001                                    ?i2_isspace 0001  
                            __CFG_LPBOREN$OFF 000000                                    ?i2_isupper 0001  
                    __size_of_TMR1_Initialize 0040                                   vfprintf@fmt 0142  
                             setCursor@F16920 02D3                           __end_of_noBacklight A3A4  
                                i2vfprintf@ap 0079                               i2vfpfcnvrt@done 0071  
                                i2vfprintf@fp 0075                                      ??___flge 00A1  
                           __size_of_SelfTest 06BA                              ??_PMD_Initialize 008B  
                                    ??___lmul 0093                                      ??___tmul 0091  
                                    ??___wmul 009F              __end_of_I2C2_MasterEnableRestart A486  
                                   _bRateHist 022F                                     _bRateInit 9E32  
                          i2_I2C2_DO_RX_EMPTY 8782                                     _bRateUpdt 7C5A  
                                  ?i2_toupper 0007                          __end_of_SV2DelayOpen A346  
                                 __pdataBANK1 01F5                                   __pdataBANK2 02D3  
                              _currentTrfAddr 01B6                             __size_of_bRateGet 0022  
               ?_TMR2_DefaultInterruptHandler 0001                          ?i2_UART1_is_tx_ready 0001  
                                    ??_printf 00AF                                ___tmul@product 0091  
                         __end_of_vMeasureGet 8E56                           __end_of_vMeasureIsr 83DE  
                           timeDelayMs@tstamp 009D                             i2___aomod@divisor 0009  
                         __end_of_vMeasureRst A0C4                             __size_of_adcGetCh 0056  
                ??_I2C2_DO_SEND_RESTART_WRITE 0001                                flowChk@flowVal 0175  
                                    ??_strlen 008D                               ?_TMR1_ReadTimer 008B  
                        __end_of_timeElapsedR 8C2A                __size_of_I2C2_MasterGetCounter 0004  
                           i2___aomod@counter 0011                    _I2C2_DO_RX_EMPTY$intlevel0 868A  
                      __end_of_I2C2_DO_RX_ACK A472                                     ___fladd@a 009D  
                                   ___fladd@b 0099                 __end_of_I2C2_MasterGetCounter A4E4  
                         ?i2_I2C2_DO_RX_EMPTY 0001                        __end_of_I2C2_DO_TX_ACK A46A  
                        __size_ofi2_vfpfcnvrt 0436                                  _aCaptureInit 915C  
                             ?_aCaptureOffGet 0160                               ?_aCaptureOffSet 0160  
                            ?_I2C2_MasterOpen 0001                              ?_I2C2_MasterStop 0001  
                            ?_I2C2_Initialize 0001                         _rVHighActuationTstamp 00BA  
              __size_of_I2C2_MasterDisableIrq 001E                I2C2_SetAddressNackCallback@ptr 0092  
                   i2_rdBlkRegCompleteHandler 91AC                    __size_of_I2C2_DO_BUS_ERROR 0010  
               __end_of_I2C2_MasterDisableIrq A08A                            _UART1_ErrorHandler 02F0  
                    MonitorMsgSendBlock@state 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                                 __pcstackBANK2 02FA  
                    _I2C2_MasterClearStopFlag A4EC                                 __pcstackBANK3 0390  
                            ___aodiv@dividend 008B                      __size_of_TMR2_Initialize 002E  
                           __size_of___xxtofl 0166                          __end_of_PrintStrBusy A480  
                                 _pPeepActual 01A9           __end_ofi2_I2C2_MasterDisableRestart A4BC  
                 i2_I2C2_MasterDisableRestart A4B6                        i2_ADCC_StartConversion A29C  
             __end_of_I2C2_MasterIsTxBufEmpty A3E0                                     _backlight A3A4  
           __size_of_I2C2_ClearInterruptFlags 0030                             ?i2_aCaptGetResult 007F  
                   ??i2_rd1RegCompleteHandler 0003                     ?_I2C2_ClearInterruptFlags 0001  
                                 _pInspOSVSet 0240                                     _pAvgShort 01ED  
                      __size_of_lcdIrqHandler 00DE                                  ?_MonitorInit 0001  
               __size_of_I2C2_DO_RX_NACK_STOP 000E                                      ?i2_fputc 0003  
                             vMeasureGet@rawV 00A6                                      ?i2_fputs 000C  
                   ??i2_wr1RegCompleteHandler 0003                            ??i2_aCaptGetResult 0054  
                                    ?i2_putch 0001                          __end_of_I2C2_DO_IDLE A3D4  
                        ??i2_I2C2_DO_RX_EMPTY 0007                    __size_of_I2C2_DO_SEND_STOP 001E  
                                   _atoi$5374 0102                                     _atoi$5375 0106  
                                   _atoi$5376 0104                         _TMR6_InterruptHandler 02E8  
                                   __pnvBANK0 00D4                                     __pnvBANK2 02E8  
            __size_ofi2_rd2RegCompleteHandler 0030                           __end_of_keyReadInit A1A6  
                    i2aCaptGetResult@lclValid 0058                                      ?_MenuMng 0001  
                       _rd2RegCompleteHandler 9658                      __size_of_TMR0_StartTimer 0004  
                       i2I2C2_SetCallback@idx 0005                         __end_of_fsmStateTable FA95  
                       i2I2C2_SetCallback@ptr 0003                                     _pInspVSet 01D7  
           _I2C2_CallbackReturnStop$intlevel0 A41E                __size_of_I2C2_DO_BUS_COLLISION 005C  
                                   _main$6100 03AF                                     _main$6101 03B9  
                                   _main$3847 03AA                                     _main$3848 03AC  
            __size_ofi2_wr2RegCompleteHandler 0030             __end_ofi2_I2C2_CallbackReturnStop A4EC  
                            ___lwdiv@dividend 008B                        _PIN_MANAGER_Initialize 7D22  
                      i2aCaptGetResult@lclRaw 005A                    MonitorMsgForcedSend@vddVal 0170  
               __end_of_I2C2_DO_BUS_COLLISION 8DA2                         _wr2RegCompleteHandler 96CC  
                                   _dtoa$4890 0112                    MonitorMsgForcedSend@trfAck 016F  
                                   _pPlatInsp 01E3           __size_of_I2C2_DO_SEND_RESTART_WRITE 0004  
                           ?_UART1_Initialize 0001                                     _lcdBtnRow 028F  
                    rd2RegCompleteHandler@ptr 0160            _I2C2_CallbackReturnReset$intlevel0 A414  
        __end_of_UART1_SetFramingErrorHandler A2E4         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler A2D6                         __size_of_setBacklight 0018  
                               __pmediumconst FA6E                        i2aCaptGetResult@outVal 007F  
                                    ?___aodiv 008B                                      ?___fladd 0099  
                                    ?___aomod 008B              __end_of_TMR4_SetInterruptHandler A30E  
                                  ?_bRateInit 0001                                      ?___awdiv 00A1  
                                   __ptext100 8684                                     __ptext101 95E4  
                                   __ptext110 9EBE                                     __ptext102 A40E  
                            ___aodiv@quotient 009D                                     __ptext111 9CD0  
                                   __ptext103 A418                                     __ptext200 A440  
                                   __ptext120 7E90                                     __ptext112 89C8  
                                   __ptext104 8FB8                                     __ptext201 99AE  
                                   __ptext121 994A                                     __ptext113 446C  
                                   __ptext105 961E                                     __ptext210 8874  
                                   __ptext202 A4E4                                     __ptext130 6C38  
                                   __ptext122 94AE                                     __ptext114 606C  
                                   __ptext106 9658                                     __ptext211 A04C  
                                   __ptext203 A4E8                                     __ptext131 931C  
                                   __ptext123 7FF4                                     __ptext115 900E  
                                   __ptext107 9692                                     __ptext220 A500  
                                   __ptext212 9B32                                     __ptext204 91AC  
                                   __ptext140 87FC                                     __ptext132 97DE  
                                   __ptext124 A1A6                                     __ptext116 973C  
                                   __ptext108 96CC                                     __ptext221 57B2  
                                   __ptext213 A3E0                                     __ptext205 9A72  
                                   __ptext141 829C                                     __ptext133 9A42  
                                   __ptext125 A25C                                     __ptext117 9772  
                                   __ptext109 9FCC                                     __ptext230 98B0  
                                   __ptext222 90B6                                     __ptext214 A3EC  
                                   __ptext206 9AA2                                     __ptext150 A422  
                                   __ptext142 A32A                                     __ptext134 A3BC  
                                   __ptext126 93EA                                     __ptext118 97A8  
                                   __ptext231 5DBC                                     __ptext223 9E0C  
                                   __ptext215 A37E                                     __ptext207 9AD2  
                                   __ptext151 A452                                     __ptext143 9EE0  
                                   __ptext135 A480                                     __ptext127 94EE  
                                   __ptext119 5AEA                                     __ptext240 7480  
                                   __ptext232 7DDA                                     __ptext224 8A36  
                                   __ptext216 A4EC                                     __ptext208 9B02  
                                   __ptext160 A4FC                                     __ptext152 7F44  
                                   __ptext144 A1BA                                     __ptext136 A486  
                                   __ptext128 734C                                     __ptext241 71F4  
                                   __ptext233 99E0                                     __ptext225 48C4  
                                   __ptext217 A4F0                                     __ptext209 A02C  
                                   __ptext161 9F46                                     __ptext153 997C  
                                   __ptext145 A48C                                     __ptext137 8A9E  
                                   __ptext129 709C                                     __ptext242 6DC6  
                                   __ptext234 952C                                     __ptext226 6824  
                                   __ptext218 A4F4                                     __ptext170 A26C  
                                   __ptext162 A4FE                                     __ptext154 9F02  
                                   __ptext146 A22A                                     __ptext138 9FEC  
                                   __ptext243 93A6                                     __ptext235 80A2  
                                   __ptext227 910A                                     __ptext219 9F8A  
                                   __ptext171 8D46                                     __ptext163 833E  
                                   __ptext155 A4FA                                     __ptext147 9C48  
                                   __ptext139 A00C                                     __ptext244 98E4  
                                   __ptext236 A1CE                                     __ptext228 9848  
                                   __ptext180 A4DC                                     __ptext172 9062  
                                   __ptext164 659A                                     __ptext156 7900  
                                   __ptext148 9D26                                     __ptext245 9C76  
                                   __ptext237 A28C                                     __ptext229 987C  
                                   __ptext181 A354                                     __ptext173 A27C  
                                   __ptext165 81F6                                     __ptext157 A4D4  
                                   __ptext149 A06C                                     __ptext246 8CE8  
                                   __ptext238 942C                                     __ptext190 A498  
                                   __ptext182 8B66                                     __ptext174 A45A  
                                   __ptext166 A492                                     __ptext158 9F24  
                                   __ptext247 A29C                                     __ptext239 956A  
                                   __ptext191 A49E                                     __ptext183 8706  
                                   __ptext175 A346                                     __ptext167 8B02  
                                   __ptext159 A338                                     __ptext248 A166  
                                   __ptext192 A4A4                                     __ptext184 79DE  
                                   __ptext176 A462                                     __ptext168 8782  
                                   __ptext249 0000                                     __ptext193 A370  
                                   __ptext185 A3C8                                     __ptext177 A46A  
                                   __ptext169 9F68                                     __ptext194 A4AA  
                                   __ptext186 A150                                     __ptext178 A08A  
                                   __ptext195 A472                                     __ptext187 A3D4  
                                   __ptext179 A4D8                                     __ptext196 A42C  
                                   __ptext188 A362                                     __ptext197 A436  
                                   __ptext189 A4E0                                     __ptext198 A4B0  
                                   __ptext199 A4B6                                      ?___fltol 00A9  
            __end_of_I2C2_MasterIsNackFlagSet A3F8                                      ?___lldiv 0097  
                                  ?_bRateUpdt 0001                             __size_of_timeDiff 0032  
                                    ?___ltdiv 008B                             __size_of_timeInit 000A  
                                    ?___lwdiv 008B                            ??_UART1_Initialize 008D  
                                   __numlines 00C5                                      _I2C2CON0 003D5D  
                                    _I2C2CON1 003D5E                                      _I2C2CON2 003D5F  
                                   _lcdTopRow 02A3                               ??i2_UART1_Write 0001  
                            ??_aCaptGetResult 0162                              I2C2_DO_TX@dataTx 0009  
                      __size_of_I2C2_DO_RESET 0010                         ??i2_UART1_is_tx_ready 0001  
                            _uart1RxLastError 00CD                                 ??_UART1_Write 008B  
                ??_INTERRUPT_InterruptManager 0087                             __size_of_printstr 0104  
                           __size_of_vfprintf 006E                                      ?_command 0001  
                              _I2C2_MasterFsm 8B02                                _I2C2_MasterIsr A492  
                                    ?_display 0001                                      ?_flowChk 0001  
                             ?_I2C2_DO_RX_ACK 0001                                      ?_keyPeek 0001  
                                    ?_keyRead 0001               __size_of_I2C2_DO_SEND_ADR_WRITE 001A  
                  __size_of_I2C2_MasterIsNack 000E                        __CFG_BBSIZE$BBSIZE_512 000000  
                                   _intBdTrig 024A                               ?_I2C2_DO_TX_ACK 0001  
                 ??_I2C2_MasterClearCountFlag 0001                                     _keyFilter 00C9  
                         __size_of_screenInit 005A                                     _keyReadEC 8468  
                    __size_of_TMR1_StartTimer 0004              _UART1_DefaultOverrunErrorHandler 000000  
                                    ?_isalpha 008B                          __end_of_I2C2_MuxInit 9FCC  
                                    ?_isdigit 008B                              i2I2C2_NackCb@ptr 0005  
                              __size_ofi2_abs 003E                                __size_ofi2_pad 00B6  
                                    ?_islower 008B                                      ?_isspace 008B  
                  ??_I2C2_SetDataNackCallback 0094                                      ?_isupper 008B  
                                    ?_timeGet 0093                                _I2C2_SetBuffer 9EBE  
                    __size_of_TMR4_Initialize 002E                         I2C2_DO_RX@retFsmState 0003  
                __end_of_MonitorMsgForcedSend 6C38                                     _lastkeyEC 00CA  
                            ___lwdiv@quotient 0090                      _I2C2_SetInterruptHandler A32A  
                              __size_of_clear 0016                                   ??i2___aodiv 0011  
                                 _lcdPrintBRR 01CC                                __size_of_blink 000E  
                                setCursor@col 009B                                   ??i2___aomod 0011  
                                setCursor@row 0092                                      ?_sprintf 0146  
                              __size_of_fputc 00AE                                    ?_backlight 0001  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0040  
                     ??_rd1RegCompleteHandler 0094                                      ?_toupper 0091  
                   ??i2_I2C2_DO_SEND_ADR_READ 0001                                __size_of_isqrt 00A6  
                                    _T4CLKCON 003FA2                                __size_of_putch 0014  
                        _INTERRUPT_Initialize A4CC                                      _T6CLKCON 003F96  
                        _I2C2_DO_SEND_RESTART A4D8                                    _I2C2SDAPPS 003AE4  
                  __end_of_I2C2_MasterSendAck A4AA                                     _send4bits 8E56  
                                  _I2C2SCLPPS 003AE3                       ??_wr1RegCompleteHandler 0094  
            __size_of_I2C2_DO_RX_NACK_RESTART 0008                          inspOSMeasure@tmpUVal 0168  
                   ??_I2C2_CallbackReturnStop 0094                ??_I2C2_SetDataCompleteCallback 0094  
                           ??_TMR0_Initialize 008B                                  ?_I2C2_MClose 0001  
             I2C2_MasterOperation@returnValue 0165                                  _setBacklight A0F6  
                              ___wmul@product 009F                                   _noBacklight A398  
                                   _monTstamp 02CB                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 008B                                      _LATBbits 003FBB  
                                    _LATCbits 003FBC                                      _LATDbits 003FBD  
                               ??_timeDelayMs 009D                                   _auxPSensCal 02E6  
                ??i2_I2C2_CallbackReturnReset 0005                      __size_of_MonitorErrorClr 0012  
                                  _I2C2_DO_RX 8706                           adcCaptureIsr@adcSel 0083  
                                  _I2C2_DO_TX 79DE                __size_of_I2C2_MasterSetCounter 000C  
                                ?_I2C2_NackCb 0160                                     _setCursor 95A8  
                    __size_of_MonitorErrorSet 0012                 __end_of_I2C2_MasterSetCounter A3C8  
                                    _PIE1bits 003991                __size_of_I2C2_MasterSendTxData 000C  
                               ??_timeElapsed 0097                                   _pQuantaInsp 01D5  
                                    _PIE3bits 003993                                      _PIE4bits 003994  
                                    _PIE5bits 003995                                   ??i2_isalpha 0003  
                                    _PIE6bits 003996                                   ??i2_isdigit 0003  
                                    _PIE7bits 003997                 __end_of_I2C2_MasterSendTxData A3BC  
                         __CFG_BORV$VBOR_2P45 000000                                      _PIE9bits 003999  
                                  _I2C2_MOpen 8A9E                                     _screenMng 29B0  
                __size_of_MonitorMsgSendBlock 0026                                    _I2C2_Close 9D26  
                       __size_ofi2_TMR6_Start 0004                                   ??i2_islower 0003  
                                 ??i2_isspace 0003           __size_of_INTERRUPT_InterruptManager 00B0  
                            i2_vfpfcnvrt$4916 0073                               ___ltdiv@divisor 008E  
                                    _PIR1bits 0039A1                                   ??i2_isupper 0003  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                                    _PIR5bits 0039A5                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR9bits 0039A9  
                             ___ltdiv@counter 0094                    ??_TMR6_SetInterruptHandler 008D  
                                 _vMeasureGet 8DFC                                   _vMeasureIsr 833E  
                                 _vMeasureRst A0A8             __size_of_I2C2_MasterIsStopFlagSet 000C  
                                   _resultTbl 0273                                 _I2C2STAT1bits 003D62  
                                    _TMR2_ISR 9F46                     ?_I2C2_MasterIsStopFlagSet 0001  
                                    _TMR4_ISR 9F24                    __end_of_UART1_Transmit_ISR 99AE  
                                    _TMR6_ISR 9F02                                   ??i2_toupper 0009  
               ?_UART1_SetFramingErrorHandler 008B                                 _lcdIrqHandler 7900  
                      __end_of_I2C2_MasterFsm 8B66                        __end_of_I2C2_MasterIsr A498  
                                   _vfpfcnvrt 446C                              _I2C2_MasterClose A422  
                                   _xtoa$4901 0113                                     _xtoa$4902 0115  
                           ??_TMR1_Initialize 008B                                    _ADCON0bits 003EF8  
                           ___wmul@multiplier 009B                   ?i2_I2C2_MasterEnableRestart 0001  
                    _I2C2_MasterEnableRestart A480                  __size_of_I2C2_MasterClearIrq 0008  
                                    i2___lmul 8CE8                                      i2___wmul 9C76  
                            I2C2_Open@address 008D                       __size_of_FVR_Initialize 0008  
                      __end_of_I2C2_SetBuffer 9EE0                                    ?_keyReadEC 0001  
                           ?_I2C2_DO_RX_EMPTY 0001                      ??_I2C2_MasterIsRxBufFull 0001  
              ??_TMR2_DefaultInterruptHandler 0001             __size_of_TMR2_SetInterruptHandler 000E  
                         ___tmul@multiplicand 008E                     ?_TMR2_SetInterruptHandler 008B  
                           ?_I2C2_DO_TX_EMPTY 0001                   __end_of_ADCC_GetFilterValue A17C  
                         __end_of_UART1_Write 942C                      wr2RegCompleteHandler@ptr 0160  
                                    i2_printf 9E0C                                      i2pad@buf 0015  
                                _isspace$5401 0091           __size_ofi2_I2C2_CallbackReturnReset 0004  
                        aCaptureOffSet@offVal 0160                            ??_I2C2_DO_RX_EMPTY 0162  
                    __size_of_TMR6_Initialize 002E                                      i2dtoa@fp 001E  
                                    i2_strlen 99E0                          __size_of_aCaptRstFlt 0124  
                    ?i2_I2C2_MasterSetCounter 0001                      __end_ofi2_I2C2_SetBuffer A06C  
                                  vfpfcnvrt@c 013B                            ??_I2C2_DO_TX_EMPTY 0007  
                    ?i2_I2C2_MasterSendTxData 0001                                   _INTCON0bits 003FD2  
                           ___lmul@multiplier 008B                       ??_I2C2_DO_SEND_ADR_READ 00AF  
                                   copy_data0 858C                                     copy_data1 85AE  
                                    i2fputc@c 0003                         ?_INTERRUPT_Initialize 0001  
                                 _keyReadInit A192                                      i2fputs@c 0010  
                    ?_rdBlkRegCompleteHandler 0160                                      i2fputs@i 0011  
                                    i2fputs@s 000C                         ?_I2C2_DO_SEND_RESTART 0001  
                                   keyRead@ch 0094                                  i2_TMR6_Start A4D4  
                               _I2C2_DO_RESET A27C                                    ?_send4bits 008B  
                __size_of_I2C2_MasterSendNack 0006                        _uart1TxBufferRemaining 00D4  
                           ??_TMR2_Initialize 008D             __size_ofi2_I2C2_DO_SEND_ADR_WRITE 0016  
                       i2_I2C2_MasterClearIrq A472                              _I2C2_SetCallback 87FC  
                            __size_ofi2_fputc 00AE                              __size_ofi2_fputs 003E  
                      ?_rd2RegCompleteHandler 0160                  __size_of_I2C2_MasterResetBus 000A  
                   ?i2_I2C2_DO_SEND_ADR_WRITE 0001                        _I2C2_DO_SEND_ADR_WRITE A0C4  
                   _I2C2_MasterClearCountFlag A4F4                              __size_ofi2_putch 0014  
                                  ?_setCursor 0092        __end_ofi2_I2C2_SetDataCompleteCallback A04C  
     __size_ofi2_I2C2_SetDataCompleteCallback 0020                i2_I2C2_SetDataCompleteCallback A02C  
                                    i2xtoa@fp 001E                        ?_wr2RegCompleteHandler 0160  
                                    _SelfTest 37D2                                    ?_screenMng 0001  
                       __size_of_SV2DelayOpen 000E               _wr2RegCompleteHandler$intlevel0 96D2  
             _rd2RegCompleteHandler$intlevel0 965E                                      __Hrparam 0000  
           __size_of_I2C2_CallbackReturnReset 000A                              __size_of_MenuMng 06FC  
                   ?_I2C2_CallbackReturnReset 0160                                    vfprintf@ap 0144  
                                    __Lrparam 0000                                    vfprintf@fp 0140  
                      i2I2C2_SetBuffer@buffer 0001                            __CFG_BOREN$SBORDIS 000000  
                       TMR1_ReadTimer@readVal 008F                        expanderWriteBlock@data 008F  
                                    _bRateGet 9E9C                                      _bRateCnt 00BE  
                                    _VentMode 01F8                                      _bRatePtr 00AF  
                                 ??_bRateInit 008B                           __end_of_timeDelayMs 9848  
                       __size_of_timeElapsedR 0060            __size_of_I2C2_MasterDisableRestart 0006  
                                 ??_bRateUpdt 008B                                ?_lcdIrqHandler 0001  
                                    _chBdTrig 0250                       ??_OSCILLATOR_Initialize 008B  
                           ??_TMR0_StartTimer 008B                              __size_of___aodiv 0158  
                  ?_I2C2_MasterDisableRestart 0001                           __end_of_timeElapsed 9A42  
                            __size_of___fladd 0348                                      _adcGetCh 8F62  
                            __size_of___aomod 0134                              __size_of___awdiv 0088  
                            __size_of___fltol 00CE                         i2___wmul@multiplicand 0003  
                            __size_of___lldiv 008A                  __end_of_I2C2_MasterEnableIrq A1CE  
                             ?_I2C2_MasterFsm 0001                               ?_I2C2_MasterIsr 0001  
                                  ?_vfpfcnvrt 00A8                              __size_of___ltdiv 0070  
                __end_of_I2C2_MasterGetRxData A4B0                              __size_of___lwdiv 0058  
            __size_of_I2C2_MasterIsTxBufEmpty 000C            __end_of_I2C2_DO_SEND_RESTART_WRITE A4E0  
                  _I2C2_DO_SEND_RESTART_WRITE A4DC                                   _intVentMode 01CA  
                             ___aodiv@divisor 0093                               ___aodiv@counter 009B  
                    _TMR4_SetInterruptHandler A300                      _I2C2_MasterIsNackFlagSet A3EC  
                       __end_of_inspOSMeasure 510E                         __size_of_PrintStrBusy 0006  
                                timeDiff@endT 0097                              __size_of_command 0010  
                            __size_of_display 000C                                    sprintf@fmt 0148  
                             ?_I2C2_SetBuffer 008B                              __size_of_flowChk 035C  
                                    ___xxtofl 6F36                              __size_of_keyPeek 0060  
                            __size_of_keyRead 0046                                    _T0CON0bits 003FB8  
                    __size_of_ADCC_Initialize 006E                                      _pInspOS2 01DB  
                                    _pInspOS3 01DD                  I2C2_MasterSetCounter@counter 008B  
                                   send@value 0090                              __size_of_isalpha 0036  
                            __size_of_isdigit 0036                                      __pivt0x8 0008  
                             ___lwdiv@divisor 008D                                      _pPlatMax 01AB  
                         i2aCaptGetResult@sel 0059                                      _pPlatExp 02CF  
                                    _lcdBlink 01B8                     MonitorMsgForcedSend@state 016E  
                                _I2C2CON0bits 003D5D                              __size_of_islower 0036  
                                _I2C2CON1bits 003D5E                              __size_of_isspace 0046  
                             ___lwdiv@counter 008F                                      __ptext10 A38C  
                                    __ptext11 A124                                      __ptext20 546A  
                                    __ptext12 4CFA                                      __ptext21 A4C8  
                                    __ptext13 88EA                                      __ptext30 A0A8  
                                    __ptext22 37D2                                      __ptext14 7C5A  
                                    __ptext31 8DFC                                      __ptext23 3E8C  
                                    __ptext15 9E32                                      __ptext40 A2C8  
                                    __ptext32 83DE                                      __ptext24 91F8  
                                    __ptext16 915C                                      __ptext41 A2D6  
                                    __ptext33 9242                                      __ptext25 76D8  
                                    __ptext17 8F62                                      __ptext50 A13A  
                                    __ptext42 A2E4                                      __ptext34 6F36  
                                    __ptext26 A192                                      __ptext18 A1E2  
                                    __ptext51 9E56                                      __ptext43 9B62  
                                    __ptext35 8C8A                                      __ptext27 8468  
                                    __ptext19 7B8C                                      __ptext60 8BCA  
                                    __ptext52 7D22                                      __ptext44 A2F2  
                                    __ptext36 7ABC                                      __ptext28 9918  
                                    __ptext61 A4F8                                      __ptext53 A0DE  
                                    __ptext45 9B90                                      __ptext37 9706  
                                    __ptext29 510E                                      __ptext70 A23C  
                                    __ptext62 30D6                                      __ptext54 A4CC  
                                    __ptext46 A300                                      __ptext38 85FE  
                                    __ptext71 29B0                                      __ptext63 9FAC  
                                    __ptext55 9E7A                                      __ptext47 9BBE  
                                    __ptext39 A2BA                                      __ptext80 A4D0  
                                    __ptext72 95A8                                      __ptext64 8150  
                                    __ptext56 A44A                                      __ptext48 A30E  
                                    __ptext81 A47A                                      __ptext73 A24C  
                                    __ptext65 9814                                      __ptext57 895A  
                                    __ptext49 946E                                      __ptext90 8EB0  
                                    __ptext82 92D6                                      __ptext74 9D74  
                                    __ptext66 9A12                                      __ptext58 A31C  
                                    __ptext91 9E9C                                      __ptext83 8C2A  
                                    __ptext75 8E56                                      __ptext67 A0F6  
                                    __ptext59 9CFC                                      __ptext92 84F0  
                                    __ptext84 9BEC                                      __ptext76 928C  
                                    __ptext68 A398                                      __ptext93 6306  
                                    __ptext85 9C1A                                      __ptext77 8F0A  
                                    __ptext69 A3A4                                      __ptext94 A206  
                                    __ptext86 9DC0                                      __ptext78 9D9A  
                                    __ptext95 A218                                      __ptext87 6AA4  
                                    __ptext79 77FC                                      __ptext96 9362  
                                    __ptext88 A1F4                                      __ptext97 A0C4  
                                    __ptext89 9CA4                                      __ptext98 9DE6  
                                    __ptext99 A3B0                              __size_of_isupper 0036  
                            __size_of_timeGet 0012                         __size_of_I2C2_DO_IDLE 000C  
                        _lastI2C2LAckResponse 024D                    ??_I2C2_MasterClearNackFlag 0001  
                                 ??_backlight 0090                                ?_I2C2_DO_RESET 0001  
                                    _rTimeTmp 0195                __size_of_UART1_SetErrorHandler 000E  
                  __end_ofi2_I2C2_SetCallback 88EA                             ??_TMR1_StartTimer 008B  
               __end_of_UART1_SetErrorHandler A2F2                              __size_of_sprintf 005A  
                                _SV2DelayOpen A338                              _initInspSubState 01C6  
                __end_of_I2C2_DO_ADDRESS_NACK 90B6                              __size_of_toupper 0054  
                                    _vPlateau 0242                    __end_of_expanderWriteBlock A24C  
                      __size_of_adcCaptureIsr 0338          __size_of_I2C2_SetAddressNackCallback 0020  
          __size_ofi2_rdBlkRegCompleteHandler 004C                             ??_TMR4_Initialize 008D  
                     i2_rd2RegCompleteHandler 9AA2                                 __size_of_atoi 018E  
                               __size_of_main 2992                                 __size_of_dtoa 02D2  
                                ??_screenInit 00A2                             SelfTest@lcdBLight 0391  
                               __size_of_home 0016                                 __size_of_send 0026  
                                 ?_I2C2_DO_RX 0001                                   ?_I2C2_DO_TX 0001  
                               __size_of_xtoa 029A                                  _timeElapsedR 8BCA  
                        __size_of_MonitorInit 0002                                I2C2_NackCb@ptr 0160  
                         inspOSMeasure@tmpVal 016B                       i2_wr2RegCompleteHandler 9B02  
                        __CFG_WDTCWS$WDTCWS_7 000000                                   ?_I2C2_MOpen 0001  
                                 ?_I2C2_Close 0001                   ??i2_I2C2_CallbackReturnStop 0003  
                         I2C2_SetCallback@idx 008F                       __size_of_MonitorMsgBusy 0012  
                     __size_of_MonitorMsgSend 002A                           I2C2_SetCallback@ptr 008D  
                                    _timeDiff 9918                               _vValveActuation 01A7  
                                    _timeInit A404                     _UART1_OverrunErrorHandler 02F2  
UART1_SetOverrunErrorHandler@interruptHandler 008B                  __end_of_ADCC_StartConversion A1F4  
                            ??_TMR1_ReadTimer 008D                  __end_of_I2C2_MasterOperation 93A6  
                        _lastI2C2MAckResponse 01B5                                  _PrintStrBusy A47A  
                           ??_MonitorErrorClr 008B                             ??_MonitorErrorSet 008B  
                                    _printstr 77FC                          _MonitorMsgForcedSend 6AA4  
                            __displayfunction 00C8                                      _vfprintf 89C8  
          __end_of_INTERRUPT_InterruptManager 7FF4                    _INTERRUPT_InterruptManager 7F44  
                  ??_I2C2_MasterClearStopFlag 0001                              ??_aCaptureOffGet 00AF  
                                   printf@fmt 0146                         __size_of_I2C2_MuxInit 0020  
                            ??_aCaptureOffSet 00AF             __end_of_I2C2_MasterDisableRestart A48C  
            __end_of_I2C2_ClearInterruptFlags 9B62                                   _UART1_Write 93EA  
                           _UART1_is_tx_ready A25C                              ___aomod@dividend 008B  
                                _I2C2_DO_IDLE A3C8                                     printstr@c 008B  
                      __size_of_printstrblock 0026                                      keyPeek@n 008E  
                             _initExpSubState 01C7                ??_UART1_SetFramingErrorHandler 008D  
             __end_ofi2_I2C2_MasterSetCounter A440                                   ??_keyReadEC 009B  
                                   putch@byte 008C                            ?_UART1_is_tx_ready 0001  
                              _vfpfcnvrt$4916 013E               __end_ofi2_I2C2_MasterSendTxData A436  
                     ?i2_ADCC_StartConversion 0001                                 ?_digitalReadC 0001  
                               ?_digitalReadD 0001                         i2___lmul@multiplicand 0005  
                          __end_of_screenInit 8DFC                                   _uart1TxHead 00CF  
                                 _uart1TxTail 00CE               __size_of_I2C2_MasterIsRxBufFull 000E  
                                    isalpha@c 008B                                      isdigit@c 008B  
                      ??_INTERRUPT_Initialize 008B                               digitalReadC@pin 008D  
                             digitalReadD@pin 008D                        ??_I2C2_DO_SEND_RESTART 0001  
        __end_of_TMR6_DefaultInterruptHandler A4FC         __size_of_TMR6_DefaultInterruptHandler 0002  
                _TMR6_DefaultInterruptHandler A4FA                           ??_UART1_is_tx_ready 008B  
                     _I2C2_DO_RX_NACK_RESTART A45A          __end_of_ADCC_DefaultInterruptHandler A502  
       __size_of_ADCC_DefaultInterruptHandler 0002                  _ADCC_DefaultInterruptHandler A500  
                                    intlevel2 0000                             SelfTest@vddValMax 0398  
                           SelfTest@vddValMin 039A                                     sprintf@ap 0154  
                      ?i2_I2C2_MasterClearIrq 0001                                   ??_send4bits 008C  
                                    send@mode 008F            __end_ofi2_I2C2_CallbackReturnReset A4E8  
                  i2_I2C2_CallbackReturnReset A4E4                                  _resultTblVal 0224  
                                    islower@c 008B                                      isspace@c 008B  
                            ___lldiv@dividend 0097                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 008D                                      isqrt@one 0009  
                                    isqrt@res 0007                                   ??_setCursor 0093  
                           __CFG_CLKOUTEN$OFF 000000                                   _timeDelayMs 9814  
                                    isupper@c 008B                                   ??_screenMng 015C  
                        __size_of_I2C2_MClose 002E                                   _timeElapsed 9A12  
                                _I2C2_MuxInit 9FAC                            I2C2_SetCallback@cb 008B  
                        __size_of_I2C2_NackCb 003A                               ??_lcdIrqHandler 0001  
                               _sv2DelayCheck 01C5                         ?_MonitorMsgForcedSend 0001  
                   __size_ofi2_aCaptGetResult 028A                                      printf@ap 015E  
                           ___tmul@multiplier 008B                              ??_I2C2_DO_RX_ACK 0001  
                             MenuMng@keyPress 016C  UART1_SetFramingErrorHandler@interruptHandler 008B  
                            ??_I2C2_DO_TX_ACK 0001                     __end_of_UART1_is_tx_ready A26C  
                __end_of_I2C2_DO_RX_NACK_STOP A354                               ___aomod@divisor 0093  
                               ??i2_vfpfcnvrt 004A                          timeElapsedR@duration 0095  
                                 ??_vfpfcnvrt 0127                               ___aomod@counter 009B  
                               _freeFlowRateF 02D1                                 _freeFlowRateL 0234  
                               _freeFlowRateM 0236                                 _adcCaptureIsr 57B2  
                  ??_I2C2_SetInterruptHandler 008D                                 _sv3DelayCheck 01C4  
                           SelfTest@tstScreen 0390                                _FVR_Initialize A44A  
              __end_ofi2_ADCC_StartConversion A2AC                                      sprintf@f 0156  
                                    sprintf@s 0146            __size_of_I2C2_MasterIsCountFlagSet 000E  
                              ??_digitalReadC 008B                                ??_digitalReadD 008B  
                   i2_I2C2_CallbackReturnStop A4E8                              ___lldiv@quotient 009F  
                         __size_of_I2C2_DO_RX 007C                           __size_of_I2C2_DO_TX 00DE  
                  ?_I2C2_MasterIsCountFlagSet 0001                           _MonitorMsgSendBlock 9DC0  
                             _TMR0_Initialize A13A                          timeElapsedR@prevTime 0093  
           i2I2C2_SetDataCompleteCallback@ptr 0008               I2C2_SetDataCompleteCallback@ptr 0092  
                      __size_ofi2_I2C2_NackCb 0032                                      toupper@c 0091  
                         __size_of_I2C2_MOpen 0064                     __size_of_UART1_Initialize 0086  
                       _I2C2_MasterGetCounter A4E0                           __size_of_I2C2_Close 0028  
                             ??_I2C2_DO_RESET 0001                      _UART1_TxInterruptHandler 02F6  
                                  _TMR2_Start A4BC                         _I2C2_MasterDisableIrq A06C  
                        setCursor@row_offsets 0093                                 ___fladd@signs 00A5  
                  pressureSensorChk@aPValMean 0189                         I2C2_DO_TX@retFsmState 000A  
                                  _TMR4_Start A4C8                     ??i2_rd2RegCompleteHandler 0003  
                                  _TMR6_Start A4D0                                i2_isspace$5401 0007  
                                ___aodiv@sign 009C                ??_ADCC_SetADTIInterruptHandler 008D  
              __end_of_PIN_MANAGER_Initialize 7DDA                             ??_ADCC_Initialize 008D  
            i2I2C2_SetDataCompleteCallback@cb 0006                I2C2_SetDataCompleteCallback@cb 0090  
                          __size_of_I2C2_MAck 0006              __end_of_I2C2_MasterIsStopFlagSet A3EC  
                    __size_of_I2C2_MasterOpen 0022                 ?_TMR6_DefaultInterruptHandler 0001  
              __size_of_rd1RegCompleteHandler 003A                     ??i2_wr2RegCompleteHandler 0003  
                    __size_of_I2C2_MasterStop 0006                      __size_of_I2C2_Initialize 0022  
                          i2___aodiv@dividend 0001                 __end_of_rd1RegCompleteHandler 96CC  
                    __end_of_I2C2_MasterClose A42C                          _I2C2_MasterEnableIrq A1BA  
                          __size_of_I2C2_Open 00A2                                  ___fladd@aexp 00A6  
                                ___fladd@bexp 00A7                 ?_ADCC_DefaultInterruptHandler 0001  
                        _I2C2_MasterGetRxData A4AA                                    _OSCheckInt 01C1  
                                ?_noBacklight 0001                           _I2C2_MasterClearIrq A452  
                               _printstrblock 9D9A                __size_of_wr1RegCompleteHandler 003A  
               __end_of_wr1RegCompleteHandler 9658                  ?_UART1_SetTxInterruptHandler 008B  
                       _TMR2_InterruptHandler 02EC                   __size_ofi2_I2C2_DO_RX_EMPTY 007A  
                  i2I2C2_SetBuffer@bufferSize 0003                          ?_MonitorMsgSendBlock 0001  
                                ___aomod@sign 009C                               _TMR1_Initialize 946E  
                      _I2C2_MasterIsRxBufFull A370                                 __backlightval 00C4  
                 __end_ofi2_UART1_is_tx_ready A29C                    ??_I2C2_MasterEnableRestart 008B  
