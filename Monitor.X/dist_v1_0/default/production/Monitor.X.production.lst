

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 19 09:59:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1,inline
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=2
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=2
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	text253,global,reloc=2,class=CODE,delta=1
   279                           	psect	text254,global,reloc=2,class=CODE,delta=1,group=1
   280                           	psect	text255,global,reloc=2,class=CODE,delta=1,group=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	text287,global,reloc=2,class=CODE,delta=1
   313                           	psect	text288,global,reloc=2,class=CODE,delta=1
   314                           	psect	text289,global,reloc=2,class=CODE,delta=1
   315                           	psect	text290,global,reloc=2,class=CODE,delta=1
   316                           	psect	text291,global,reloc=2,class=CODE,delta=1
   317                           	psect	text292,global,reloc=2,class=CODE,delta=1
   318                           	psect	text293,global,reloc=2,class=CODE,delta=1
   319                           	psect	text294,global,reloc=2,class=CODE,delta=1
   320                           	psect	text295,global,reloc=2,class=CODE,delta=1
   321                           	psect	text296,global,reloc=2,class=CODE,delta=1
   322                           	psect	text297,global,reloc=2,class=CODE,delta=1
   323                           	psect	text298,global,reloc=2,class=CODE,delta=1
   324                           	psect	text299,global,reloc=2,class=CODE,delta=1
   325                           	psect	text300,global,reloc=2,class=CODE,delta=1
   326                           	psect	text301,global,reloc=2,class=CODE,delta=1
   327                           	psect	text302,global,reloc=2,class=CODE,delta=1
   328                           	psect	text303,global,reloc=2,class=CODE,delta=1
   329                           	psect	text304,global,reloc=2,class=CODE,delta=1
   330                           	psect	text305,global,reloc=2,class=CODE,delta=1
   331                           	psect	text306,global,reloc=2,class=CODE,delta=1
   332                           	psect	text307,global,reloc=2,class=CODE,delta=1
   333                           	psect	text308,global,reloc=2,class=CODE,delta=1
   334                           	psect	text309,global,reloc=2,class=CODE,delta=1
   335                           	psect	text310,global,reloc=2,class=CODE,delta=1
   336                           	psect	text311,global,reloc=2,class=CODE,delta=1
   337                           	psect	text312,global,reloc=2,class=CODE,delta=1
   338                           	psect	text313,global,reloc=2,class=CODE,delta=1
   339                           	psect	text314,global,reloc=2,class=CODE,delta=1
   340                           	psect	text315,global,reloc=2,class=CODE,delta=1
   341                           	psect	text316,global,reloc=2,class=CODE,delta=1,inline
   342                           	psect	text317,global,reloc=2,class=CODE,delta=1
   343                           	psect	text318,global,reloc=2,class=CODE,delta=1
   344                           	psect	text319,global,reloc=2,class=CODE,delta=1
   345                           	psect	text320,global,reloc=2,class=CODE,delta=1
   346                           	psect	text321,global,reloc=2,class=CODE,delta=1
   347                           	psect	text322,global,reloc=2,class=CODE,delta=1
   348                           	psect	text323,global,reloc=2,class=CODE,delta=1
   349                           	psect	text324,global,reloc=2,class=CODE,delta=1
   350                           	psect	text325,global,reloc=2,class=CODE,delta=1
   351                           	psect	text326,global,reloc=2,class=CODE,delta=1
   352                           	psect	text327,global,reloc=2,class=CODE,delta=1
   353                           	psect	text328,global,reloc=2,class=CODE,delta=1
   354                           	psect	text329,global,reloc=2,class=CODE,delta=1
   355                           	psect	text330,global,reloc=2,class=CODE,delta=1
   356                           	psect	text331,global,reloc=2,class=CODE,delta=1
   357                           	psect	text332,global,reloc=2,class=CODE,delta=1
   358                           	psect	text333,global,reloc=2,class=CODE,delta=1
   359                           	psect	text334,global,reloc=2,class=CODE,delta=1
   360                           	psect	text335,global,reloc=2,class=CODE,delta=1
   361                           	psect	text336,global,reloc=2,class=CODE,delta=1
   362                           	psect	text337,global,reloc=2,class=CODE,delta=1,inline
   363                           	psect	text338,global,reloc=2,class=CODE,delta=1,inline
   364                           	psect	text339,global,reloc=2,class=CODE,delta=1
   365                           	psect	text340,global,reloc=2,class=CODE,delta=1
   366                           	psect	text341,global,reloc=2,class=CODE,delta=1
   367                           	psect	text342,global,reloc=2,class=CODE,delta=1
   368                           	psect	text343,global,reloc=2,class=CODE,delta=1,inline
   369                           	psect	text344,global,reloc=2,class=CODE,delta=1,inline
   370                           	psect	text345,global,reloc=2,class=CODE,delta=1,inline
   371                           	psect	text346,global,reloc=2,class=CODE,delta=1,inline
   372                           	psect	text347,global,reloc=2,class=CODE,delta=1
   373                           	psect	text348,global,reloc=2,class=CODE,delta=1
   374                           	psect	text349,global,reloc=2,class=CODE,delta=1,inline
   375                           	psect	text350,global,reloc=2,class=CODE,delta=1
   376                           	psect	text351,global,reloc=2,class=CODE,delta=1
   377                           	psect	text352,global,reloc=2,class=CODE,delta=1
   378                           	psect	text353,global,reloc=2,class=CODE,delta=1
   379                           	psect	text354,global,reloc=2,class=CODE,delta=1
   380                           	psect	text355,global,reloc=2,class=CODE,delta=1
   381                           	psect	text356,global,reloc=2,class=CODE,delta=1
   382                           	psect	text357,global,reloc=2,class=CODE,delta=1
   383                           	psect	text358,global,reloc=2,class=CODE,delta=1
   384                           	psect	text359,global,reloc=2,class=CODE,delta=1
   385                           	psect	text360,global,reloc=2,class=CODE,delta=1
   386                           	psect	text361,global,reloc=2,class=CODE,delta=1
   387                           	psect	text362,global,reloc=2,class=CODE,delta=1
   388                           	psect	text363,global,reloc=2,class=CODE,delta=1
   389                           	psect	text364,global,reloc=2,class=CODE,delta=1
   390                           	psect	text365,global,reloc=2,class=CODE,delta=1
   391                           	psect	text366,global,reloc=2,class=CODE,delta=1
   392                           	psect	text367,global,reloc=2,class=CODE,delta=1
   393                           	psect	text368,global,reloc=2,class=CODE,delta=1
   394                           	psect	text369,global,reloc=2,class=CODE,delta=1
   395                           	psect	text370,global,reloc=2,class=CODE,delta=1
   396                           	psect	text371,global,reloc=2,class=CODE,delta=1
   397                           	psect	text372,global,reloc=2,class=CODE,delta=1
   398                           	psect	text373,global,reloc=2,class=CODE,delta=1
   399                           	psect	text374,global,reloc=2,class=CODE,delta=1
   400                           	psect	text375,global,reloc=2,class=CODE,delta=1
   401                           	psect	text376,global,reloc=2,class=CODE,delta=1
   402                           	psect	text377,global,reloc=2,class=CODE,delta=1
   403                           	psect	text378,global,reloc=2,class=CODE,delta=1
   404                           	psect	text379,global,reloc=2,class=CODE,delta=1
   405                           	psect	text380,global,reloc=2,class=CODE,delta=1
   406                           	psect	text381,global,reloc=2,class=CODE,delta=1
   407                           	psect	text382,global,reloc=2,class=CODE,delta=1
   408                           	psect	text383,global,reloc=2,class=CODE,delta=1
   409                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   410                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   411                           	psect	text384,global,reloc=2,class=CODE,delta=1
   412                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   413  0000                     
   414                           ; Version 2.10
   415                           ; Generated 31/07/2019 GMT
   416                           ; 
   417                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   418                           ; All rights reserved.
   419                           ; 
   420                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   421                           ; 
   422                           ; Redistribution and use in source and binary forms, with or without modification, are
   423                           ; permitted provided that the following conditions are met:
   424                           ; 
   425                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   426                           ;        conditions and the following disclaimer.
   427                           ; 
   428                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   429                           ;        of conditions and the following disclaimer in the documentation and/or other
   430                           ;        materials provided with the distribution.
   431                           ; 
   432                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   433                           ;        software without specific prior written permission.
   434                           ; 
   435                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   436                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   437                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   438                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   439                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   440                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   441                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   442                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   443                           ; 
   444                           ; 
   445                           ; Code-generator required, PIC18F46K42 Definitions
   446                           ; 
   447                           ; SFR Addresses
   448  0000                     
   449 ;; Function _I2C2_SlaveDefWrInterruptHandler is unused but had its address taken
   450  0000                     
   451 ;; Function _I2C2_SlaveDefAddrInterruptHandler is unused but had its address taken
   452  0000                     
   453 ;; Function _I2C2_SlaveDefWrColInterruptHandler is unused but had its address taken
   454  0000                     
   455 ;; Function _I2C2_SlaveDefBusColInterruptHandler is unused but had its address taken
   456  0000                     
   457                           	psect	idataBIGRAM
   458  004D00                     __pidataBIGRAM:
   459                           	opt callstack 0
   460                           
   461                           ;initializer for _alarmData
   462  004D00  42                 	db	66
   463  004D01  61                 	db	97
   464  004D02  74                 	db	116
   465  004D03  74                 	db	116
   466  004D04  65                 	db	101
   467  004D05  72                 	db	114
   468  004D06  79                 	db	121
   469  004D07  20                 	db	32
   470  004D08  46                 	db	70
   471  004D09  61                 	db	97
   472  004D0A  69                 	db	105
   473  004D0B  6C                 	db	108
   474  004D0C  20                 	db	32
   475  004D0D  20                 	db	32
   476  004D0E  00                 	db	0
   477  004D0F  00                 	db	0
   478  004D10  00                 	db	0
   479  004D11  0004               	dw	4
   480  004D13  1A                 	db	low _BatteryFailAlarm
   481  004D14  75                 	db	high _BatteryFailAlarm
   482  004D15  4D                 	db	77
   483  004D16  6F                 	db	111
   484  004D17  6E                 	db	110
   485  004D18  69                 	db	105
   486  004D19  74                 	db	116
   487  004D1A  6F                 	db	111
   488  004D1B  72                 	db	114
   489  004D1C  20                 	db	32
   490  004D1D  46                 	db	70
   491  004D1E  61                 	db	97
   492  004D1F  69                 	db	105
   493  004D20  6C                 	db	108
   494  004D21  20                 	db	32
   495  004D22  20                 	db	32
   496  004D23  00                 	db	0
   497  004D24  00                 	db	0
   498  004D25  00                 	db	0
   499  004D26  0004               	dw	4
   500  004D28  68                 	db	low _MonitorFailAlarm
   501  004D29  79                 	db	high _MonitorFailAlarm
   502  004D2A  43                 	db	67
   503  004D2B  6F                 	db	111
   504  004D2C  6E                 	db	110
   505  004D2D  74                 	db	116
   506  004D2E  72                 	db	114
   507  004D2F  6F                 	db	111
   508  004D30  6C                 	db	108
   509  004D31  20                 	db	32
   510  004D32  46                 	db	70
   511  004D33  61                 	db	97
   512  004D34  69                 	db	105
   513  004D35  6C                 	db	108
   514  004D36  20                 	db	32
   515  004D37  20                 	db	32
   516  004D38  00                 	db	0
   517  004D39  00                 	db	0
   518  004D3A  00                 	db	0
   519  004D3B  0004               	dw	4
   520  004D3D  D2                 	db	low _ControlFailAlarm
   521  004D3E  AA                 	db	high _ControlFailAlarm
   522  004D3F  56                 	db	86
   523  004D40  65                 	db	101
   524  004D41  72                 	db	114
   525  004D42  79                 	db	121
   526  004D43  20                 	db	32
   527  004D44  48                 	db	72
   528  004D45  69                 	db	105
   529  004D46  67                 	db	103
   530  004D47  68                 	db	104
   531  004D48  20                 	db	32
   532  004D49  50                 	db	80
   533  004D4A  72                 	db	114
   534  004D4B  65                 	db	101
   535  004D4C  73                 	db	115
   536  004D4D  00                 	db	0
   537  004D4E  00                 	db	0
   538  004D4F  00                 	db	0
   539  004D50  0004               	dw	4
   540  004D52  20                 	db	low _VeryHighPressureAlarmHigh
   541  004D53  B0                 	db	high _VeryHighPressureAlarmHigh
   542  004D54  48                 	db	72
   543  004D55  69                 	db	105
   544  004D56  67                 	db	103
   545  004D57  68                 	db	104
   546  004D58  20                 	db	32
   547  004D59  50                 	db	80
   548  004D5A  72                 	db	114
   549  004D5B  65                 	db	101
   550  004D5C  73                 	db	115
   551  004D5D  73                 	db	115
   552  004D5E  75                 	db	117
   553  004D5F  72                 	db	114
   554  004D60  65                 	db	101
   555  004D61  20                 	db	32
   556  004D62  00                 	db	0
   557  004D63  00                 	db	0
   558  004D64  00                 	db	0
   559  004D65  0004               	dw	4
   560  004D67  18                 	db	low _HighPressureAlarmHigh
   561  004D68  B0                 	db	high _HighPressureAlarmHigh
   562  004D69  48                 	db	72
   563  004D6A  69                 	db	105
   564  004D6B  67                 	db	103
   565  004D6C  68                 	db	104
   566  004D6D  20                 	db	32
   567  004D6E  50                 	db	80
   568  004D6F  72                 	db	114
   569  004D70  65                 	db	101
   570  004D71  73                 	db	115
   571  004D72  73                 	db	115
   572  004D73  75                 	db	117
   573  004D74  72                 	db	114
   574  004D75  65                 	db	101
   575  004D76  20                 	db	32
   576  004D77  00                 	db	0
   577  004D78  00                 	db	0
   578  004D79  00                 	db	0
   579  004D7A  0001               	dw	1
   580  004D7C  90                 	db	low _HighPressureAlarmLow
   581  004D7D  8C                 	db	high _HighPressureAlarmLow
   582  004D7E  43                 	db	67
   583  004D7F  69                 	db	105
   584  004D80  72                 	db	114
   585  004D81  63                 	db	99
   586  004D82  75                 	db	117
   587  004D83  69                 	db	105
   588  004D84  74                 	db	116
   589  004D85  20                 	db	32
   590  004D86  46                 	db	70
   591  004D87  61                 	db	97
   592  004D88  69                 	db	105
   593  004D89  6C                 	db	108
   594  004D8A  20                 	db	32
   595  004D8B  20                 	db	32
   596  004D8C  00                 	db	0
   597  004D8D  00                 	db	0
   598  004D8E  00                 	db	0
   599  004D8F  0004               	dw	4
   600  004D91  14                 	db	low _CircuitFailureAlarm
   601  004D92  B0                 	db	high _CircuitFailureAlarm
   602  004D93  47                 	db	71
   603  004D94  61                 	db	97
   604  004D95  73                 	db	115
   605  004D96  20                 	db	32
   606  004D97  46                 	db	70
   607  004D98  61                 	db	97
   608  004D99  69                 	db	105
   609  004D9A  6C                 	db	108
   610  004D9B  75                 	db	117
   611  004D9C  72                 	db	114
   612  004D9D  65                 	db	101
   613  004D9E  20                 	db	32
   614  004D9F  20                 	db	32
   615  004DA0  20                 	db	32
   616  004DA1  00                 	db	0
   617  004DA2  00                 	db	0
   618  004DA3  00                 	db	0
   619  004DA4  0004               	dw	4
   620  004DA6  1C                 	db	low _GasFailureAlarm
   621  004DA7  B0                 	db	high _GasFailureAlarm
   622  004DA8  42                 	db	66
   623  004DA9  61                 	db	97
   624  004DAA  74                 	db	116
   625  004DAB  74                 	db	116
   626  004DAC  65                 	db	101
   627  004DAD  72                 	db	114
   628  004DAE  79                 	db	121
   629  004DAF  20                 	db	32
   630  004DB0  4C                 	db	76
   631  004DB1  6F                 	db	111
   632  004DB2  77                 	db	119
   633  004DB3  20                 	db	32
   634  004DB4  20                 	db	32
   635  004DB5  20                 	db	32
   636  004DB6  00                 	db	0
   637  004DB7  00                 	db	0
   638  004DB8  00                 	db	0
   639  004DB9  0002               	dw	2
   640  004DBB  10                 	db	low _BaterryLowAlarmMed
   641  004DBC  B0                 	db	high _BaterryLowAlarmMed
   642  004DBD  42                 	db	66
   643  004DBE  61                 	db	97
   644  004DBF  74                 	db	116
   645  004DC0  74                 	db	116
   646  004DC1  65                 	db	101
   647  004DC2  72                 	db	114
   648  004DC3  79                 	db	121
   649  004DC4  20                 	db	32
   650  004DC5  4C                 	db	76
   651  004DC6  6F                 	db	111
   652  004DC7  77                 	db	119
   653  004DC8  20                 	db	32
   654  004DC9  20                 	db	32
   655  004DCA  20                 	db	32
   656  004DCB  00                 	db	0
   657  004DCC  00                 	db	0
   658  004DCD  00                 	db	0
   659  004DCE  0004               	dw	4
   660  004DD0  0C                 	db	low _BaterryLowAlarmHigh
   661  004DD1  B0                 	db	high _BaterryLowAlarmHigh
   662  004DD2  45                 	db	69
   663  004DD3  50                 	db	80
   664  004DD4  20                 	db	32
   665  004DD5  42                 	db	66
   666  004DD6  65                 	db	101
   667  004DD7  6C                 	db	108
   668  004DD8  6F                 	db	111
   669  004DD9  77                 	db	119
   670  004DDA  20                 	db	32
   671  004DDB  53                 	db	83
   672  004DDC  65                 	db	101
   673  004DDD  74                 	db	116
   674  004DDE  20                 	db	32
   675  004DDF  20                 	db	32
   676  004DE0  00                 	db	0
   677  004DE1  00                 	db	0
   678  004DE2  00                 	db	0
   679  004DE3  0002               	dw	2
   680  004DE5  FE                 	db	low _EPBelowSetAlarm
   681  004DE6  A8                 	db	high _EPBelowSetAlarm
   682  004DE7  45                 	db	69
   683  004DE8  50                 	db	80
   684  004DE9  20                 	db	32
   685  004DEA  41                 	db	65
   686  004DEB  62                 	db	98
   687  004DEC  6F                 	db	111
   688  004DED  76                 	db	118
   689  004DEE  65                 	db	101
   690  004DEF  20                 	db	32
   691  004DF0  53                 	db	83
   692  004DF1  65                 	db	101
   693  004DF2  74                 	db	116
   694  004DF3  20                 	db	32
   695  004DF4  20                 	db	32
   696  004DF5  00                 	db	0
   697  004DF6  00                 	db	0
   698  004DF7  00                 	db	0
   699  004DF8  0002               	dw	2
   700  004DFA  E4                 	db	low _EPAboveSetAlarm
   701  004DFB  A8                 	db	high _EPAboveSetAlarm
   702  004DFC  49                 	db	73
   703  004DFD  50                 	db	80
   704  004DFE  20                 	db	32
   705  004DFF  42                 	db	66
   706  004E00  65                 	db	101
   707  004E01  6C                 	db	108
   708  004E02  6F                 	db	111
   709  004E03  77                 	db	119
   710  004E04  20                 	db	32
   711  004E05  53                 	db	83
   712  004E06  65                 	db	101
   713  004E07  74                 	db	116
   714  004E08  20                 	db	32
   715  004E09  20                 	db	32
   716  004E0A  00                 	db	0
   717  004E0B  00                 	db	0
   718  004E0C  00                 	db	0
   719  004E0D  0002               	dw	2
   720  004E0F  CA                 	db	low _IPBelowSetAlarm
   721  004E10  A8                 	db	high _IPBelowSetAlarm
   722  004E11  49                 	db	73
   723  004E12  50                 	db	80
   724  004E13  20                 	db	32
   725  004E14  41                 	db	65
   726  004E15  62                 	db	98
   727  004E16  6F                 	db	111
   728  004E17  76                 	db	118
   729  004E18  65                 	db	101
   730  004E19  20                 	db	32
   731  004E1A  53                 	db	83
   732  004E1B  65                 	db	101
   733  004E1C  74                 	db	116
   734  004E1D  20                 	db	32
   735  004E1E  20                 	db	32
   736  004E1F  00                 	db	0
   737  004E20  00                 	db	0
   738  004E21  00                 	db	0
   739  004E22  0002               	dw	2
   740  004E24  62                 	db	low _IPAboveSetAlarm
   741  004E25  A9                 	db	high _IPAboveSetAlarm
   742  004E26  54                 	db	84
   743  004E27  64                 	db	100
   744  004E28  69                 	db	105
   745  004E29  20                 	db	32
   746  004E2A  74                 	db	116
   747  004E2B  6F                 	db	111
   748  004E2C  6F                 	db	111
   749  004E2D  20                 	db	32
   750  004E2E  6C                 	db	108
   751  004E2F  6F                 	db	111
   752  004E30  6E                 	db	110
   753  004E31  67                 	db	103
   754  004E32  20                 	db	32
   755  004E33  20                 	db	32
   756  004E34  00                 	db	0
   757  004E35  00                 	db	0
   758  004E36  00                 	db	0
   759  004E37  0002               	dw	2
   760  004E39  08                 	db	low _TdiTooLongAlarm
   761  004E3A  B0                 	db	high _TdiTooLongAlarm
   762  004E3B  54                 	db	84
   763  004E3C  64                 	db	100
   764  004E3D  65                 	db	101
   765  004E3E  20                 	db	32
   766  004E3F  74                 	db	116
   767  004E40  6F                 	db	111
   768  004E41  6F                 	db	111
   769  004E42  20                 	db	32
   770  004E43  6C                 	db	108
   771  004E44  6F                 	db	111
   772  004E45  6E                 	db	110
   773  004E46  67                 	db	103
   774  004E47  20                 	db	32
   775  004E48  20                 	db	32
   776  004E49  00                 	db	0
   777  004E4A  00                 	db	0
   778  004E4B  00                 	db	0
   779  004E4C  0002               	dw	2
   780  004E4E  04                 	db	low _TdeTooLongAlarm
   781  004E4F  B0                 	db	high _TdeTooLongAlarm
   782  004E50  4F                 	db	79
   783  004E51  76                 	db	118
   784  004E52  65                 	db	101
   785  004E53  72                 	db	114
   786  004E54  20                 	db	32
   787  004E55  4D                 	db	77
   788  004E56  61                 	db	97
   789  004E57  78                 	db	120
   790  004E58  20                 	db	32
   791  004E59  56                 	db	86
   792  004E5A  6F                 	db	111
   793  004E5B  6C                 	db	108
   794  004E5C  20                 	db	32
   795  004E5D  20                 	db	32
   796  004E5E  00                 	db	0
   797  004E5F  00                 	db	0
   798  004E60  00                 	db	0
   799  004E61  0002               	dw	2
   800  004E63  00                 	db	low _VAboveMaxAlarm
   801  004E64  B0                 	db	high _VAboveMaxAlarm
   802  004E65  42                 	db	66
   803  004E66  65                 	db	101
   804  004E67  6C                 	db	108
   805  004E68  6F                 	db	111
   806  004E69  77                 	db	119
   807  004E6A  20                 	db	32
   808  004E6B  4D                 	db	77
   809  004E6C  69                 	db	105
   810  004E6D  6E                 	db	110
   811  004E6E  20                 	db	32
   812  004E6F  56                 	db	86
   813  004E70  6F                 	db	111
   814  004E71  6C                 	db	108
   815  004E72  20                 	db	32
   816  004E73  00                 	db	0
   817  004E74  00                 	db	0
   818  004E75  00                 	db	0
   819  004E76  0002               	dw	2
   820  004E78  FC                 	db	low _VBelowMinAlarm
   821  004E79  AF                 	db	high _VBelowMinAlarm
   822  004E7A  4E                 	db	78
   823  004E7B  6F                 	db	111
   824  004E7C  20                 	db	32
   825  004E7D  50                 	db	80
   826  004E7E  6F                 	db	111
   827  004E7F  77                 	db	119
   828  004E80  65                 	db	101
   829  004E81  72                 	db	114
   830  004E82  20                 	db	32
   831  004E83  53                 	db	83
   832  004E84  75                 	db	117
   833  004E85  70                 	db	112
   834  004E86  70                 	db	112
   835  004E87  6C                 	db	108
   836  004E88  00                 	db	0
   837  004E89  00                 	db	0
   838  004E8A  00                 	db	0
   839  004E8B  0001               	dw	1
   840  004E8D  F8                 	db	low _NoPowerSupplyAlarm
   841  004E8E  AF                 	db	high _NoPowerSupplyAlarm
   842                           
   843                           	psect	idataBANK0
   844  00AFD8                     __pidataBANK0:
   845                           	opt callstack 0
   846                           
   847                           ;initializer for _monitorSV1
   848  00AFD8  01                 	db	1
   849                           
   850                           ;initializer for _controlSV1
   851  00AFD9  01                 	db	1
   852                           
   853                           ;initializer for _batterySV1
   854  00AFDA  01                 	db	1
   855                           
   856                           ;initializer for _veryHighSV1
   857  00AFDB  01                 	db	1
   858                           
   859                           	psect	idataBANK2
   860  00A876                     __pidataBANK2:
   861                           	opt callstack 0
   862                           
   863                           ;initializer for _adcChannels
   864  00A876  04                 	db	4
   865  00A877  00                 	db	0
   866  00A878  0000               	dw	0
   867  00A87A  00                 	db	0
   868  00A87B  02                 	db	2
   869  00A87C  00                 	db	0
   870  00A87D  0000               	dw	0
   871  00A87F  03                 	db	3
   872  00A880  00                 	db	0
   873  00A881  00                 	db	0
   874  00A882  0000               	dw	0
   875  00A884  00                 	db	0
   876  00A885  05                 	db	5
   877  00A886  00                 	db	0
   878  00A887  0000               	dw	0
   879  00A889  03                 	db	3
   880                           
   881                           ;initializer for stoa@F1144
   882  00A88A  28                 	db	40
   883  00A88B  6E                 	db	110
   884  00A88C  75                 	db	117
   885  00A88D  6C                 	db	108
   886  00A88E  6C                 	db	108
   887  00A88F  29                 	db	41
   888  00A890  00                 	db	0
   889                           
   890                           ;initializer for _alarmPmax
   891  00A891  0028               	dw	40
   892                           
   893                           	psect	nvBANK2
   894  0002D9                     __pnvBANK2:
   895                           	opt callstack 0
   896  0002D9                     _TMR6_InterruptHandler:
   897                           	opt callstack 0
   898  0002D9                     	ds	2
   899  0002DB                     _TMR1_InterruptHandler:
   900                           	opt callstack 0
   901  0002DB                     	ds	2
   902  0002DD                     _timer1ReloadVal:
   903                           	opt callstack 0
   904  0002DD                     	ds	2
   905  0002DF                     _TMR0_InterruptHandler:
   906                           	opt callstack 0
   907  0002DF                     	ds	2
   908  0002E1                     _TMR5_InterruptHandler:
   909                           	opt callstack 0
   910  0002E1                     	ds	2
   911  0002E3                     _timer5ReloadVal:
   912                           	opt callstack 0
   913  0002E3                     	ds	2
   914  0002E5                     _UART1_ErrorHandler:
   915                           	opt callstack 0
   916  0002E5                     	ds	2
   917  0002E7                     _UART1_OverrunErrorHandler:
   918                           	opt callstack 0
   919  0002E7                     	ds	2
   920  0002E9                     _UART1_FramingErrorHandler:
   921                           	opt callstack 0
   922  0002E9                     	ds	2
   923  0002EB                     _uart1TxBufferRemaining:
   924                           	opt callstack 0
   925  0002EB                     	ds	2
   926  0002ED                     _TMR4_InterruptHandler:
   927                           	opt callstack 0
   928  0002ED                     	ds	2
   929  0002EF                     _UART1_TxInterruptHandler:
   930                           	opt callstack 0
   931  0002EF                     	ds	2
   932  0002F1                     _UART1_RxInterruptHandler:
   933                           	opt callstack 0
   934  0002F1                     	ds	2
   935  0002F3                     _ADCC_ADI_InterruptHandler:
   936                           	opt callstack 0
   937  0002F3                     	ds	2
   938  0000                     _PMD7	set	14791
   939  0000                     _PMD6	set	14790
   940  0000                     _PMD5	set	14789
   941  0000                     _PMD4	set	14788
   942  0000                     _PMD3	set	14787
   943  0000                     _PMD2	set	14786
   944  0000                     _PMD1	set	14785
   945  0000                     _PMD0	set	14784
   946  0000                     _OSCTUNE	set	14814
   947  0000                     _OSCFRQ	set	14815
   948  0000                     _OSCEN	set	14813
   949  0000                     _OSCCON3	set	14811
   950  0000                     _OSCCON1	set	14809
   951  0000                     _PIR4bits	set	14756
   952  0000                     _PIE4bits	set	14740
   953  0000                     _PIR7bits	set	14759
   954  0000                     _PIE7bits	set	14743
   955  0000                     _PIR8bits	set	14760
   956  0000                     _PIE8bits	set	14744
   957  0000                     _PIR9bits	set	14761
   958  0000                     _PIE9bits	set	14745
   959  0000                     _PIR5bits	set	14757
   960  0000                     _PIE5bits	set	14741
   961  0000                     _PIR6bits	set	14758
   962  0000                     _PIE6bits	set	14742
   963  0000                     _PIR3bits	set	14755
   964  0000                     _PIE3bits	set	14739
   965  0000                     _PIE1bits	set	14737
   966  0000                     _PIR1bits	set	14753
   967  0000                     _I2C2SDAPPS	set	15076
   968  0000                     _U1RXPPS	set	15077
   969  0000                     _RD0PPS	set	14872
   970  0000                     _RB4PPS	set	14860
   971  0000                     _RC1PPS	set	14865
   972  0000                     _RB5PPS	set	14861
   973  0000                     _I2C2SCLPPS	set	15075
   974  0000                     _INLVLE	set	14980
   975  0000                     _INLVLD	set	14964
   976  0000                     _INLVLC	set	14948
   977  0000                     _INLVLB	set	14932
   978  0000                     _INLVLA	set	14916
   979  0000                     _SLRCONE	set	14979
   980  0000                     _SLRCOND	set	14963
   981  0000                     _SLRCONC	set	14947
   982  0000                     _SLRCONB	set	14931
   983  0000                     _SLRCONA	set	14915
   984  0000                     _ODCOND	set	14962
   985  0000                     _ODCONC	set	14946
   986  0000                     _ODCONB	set	14930
   987  0000                     _ODCONA	set	14914
   988  0000                     _ODCONE	set	14978
   989  0000                     _RD1I2C	set	14971
   990  0000                     _RD0I2C	set	14970
   991  0000                     _RC4I2C	set	14955
   992  0000                     _RC3I2C	set	14954
   993  0000                     _RB2I2C	set	14939
   994  0000                     _RB1I2C	set	14938
   995  0000                     _WPUC	set	14945
   996  0000                     _WPUA	set	14913
   997  0000                     _WPUB	set	14929
   998  0000                     _WPUE	set	14977
   999  0000                     _WPUD	set	14961
  1000  0000                     _ANSELA	set	14912
  1001  0000                     _ANSELE	set	14976
  1002  0000                     _ANSELB	set	14928
  1003  0000                     _ANSELC	set	14944
  1004  0000                     _ANSELD	set	14960
  1005  0000                     _I2C2STAT1	set	15714
  1006  0000                     _I2C2STAT0	set	15713
  1007  0000                     _I2C2ADB0	set	15703
  1008  0000                     _I2C2RXB	set	15700
  1009  0000                     _I2C2TXB	set	15701
  1010  0000                     _I2C2PIRbits	set	15715
  1011  0000                     _I2C2ERRbits	set	15712
  1012  0000                     _I2C2PIEbits	set	15716
  1013  0000                     _I2C2ADR1	set	15706
  1014  0000                     _I2C2ADR0	set	15705
  1015  0000                     _I2C2STAT1bits	set	15714
  1016  0000                     _I2C2CON0bits	set	15709
  1017  0000                     _I2C2PIR	set	15715
  1018  0000                     _I2C2CNT	set	15702
  1019  0000                     _I2C2CON2	set	15711
  1020  0000                     _I2C2CON1	set	15710
  1021  0000                     _I2C2CON0	set	15709
  1022  0000                     _U1RXB	set	15848
  1023  0000                     _U1TXB	set	15850
  1024  0000                     _U1ERRIRbits	set	15865
  1025  0000                     _U1ERRIE	set	15866
  1026  0000                     _U1ERRIR	set	15865
  1027  0000                     _U1UIR	set	15864
  1028  0000                     _U1FIFO	set	15863
  1029  0000                     _U1BRGH	set	15862
  1030  0000                     _U1BRGL	set	15861
  1031  0000                     _U1CON2	set	15860
  1032  0000                     _U1CON1	set	15859
  1033  0000                     _U1CON0	set	15858
  1034  0000                     _U1P3H	set	15857
  1035  0000                     _U1P3L	set	15856
  1036  0000                     _U1P2H	set	15855
  1037  0000                     _U1P2L	set	15854
  1038  0000                     _U1P1H	set	15853
  1039  0000                     _U1P1L	set	15852
  1040  0000                     _CM1PCH	set	16063
  1041  0000                     _CM1NCH	set	16062
  1042  0000                     _CM1CON1	set	16061
  1043  0000                     _CM1CON0	set	16060
  1044  0000                     _FVRCON	set	16065
  1045  0000                     _ADRESL	set	16111
  1046  0000                     _ADRESH	set	16112
  1047  0000                     _ADCON0bits	set	16120
  1048  0000                     _ADCON0	set	16120
  1049  0000                     _ADCLK	set	16127
  1050  0000                     _ADACT	set	16126
  1051  0000                     _ADREF	set	16125
  1052  0000                     _ADSTAT	set	16124
  1053  0000                     _ADCON3	set	16123
  1054  0000                     _ADCON2	set	16122
  1055  0000                     _ADCON1	set	16121
  1056  0000                     _ADPREH	set	16119
  1057  0000                     _ADPREL	set	16118
  1058  0000                     _ADCAP	set	16117
  1059  0000                     _ADACQH	set	16116
  1060  0000                     _ADACQL	set	16115
  1061  0000                     _ADPCH	set	16113
  1062  0000                     _ADRPT	set	16108
  1063  0000                     _ADACCU	set	16106
  1064  0000                     _ADSTPTH	set	16101
  1065  0000                     _ADSTPTL	set	16100
  1066  0000                     _ADUTHH	set	16097
  1067  0000                     _ADUTHL	set	16096
  1068  0000                     _ADLTHH	set	16095
  1069  0000                     _ADLTHL	set	16094
  1070  0000                     _CCPTMRS1bits	set	16223
  1071  0000                     _LATAbits	set	16314
  1072  0000                     _PORTDbits	set	16333
  1073  0000                     _LATDbits	set	16317
  1074  0000                     _LATCbits	set	16316
  1075  0000                     _PCON0	set	16368
  1076  0000                     _TRISD	set	16325
  1077  0000                     _TRISC	set	16324
  1078  0000                     _TRISB	set	16323
  1079  0000                     _TRISA	set	16322
  1080  0000                     _TRISE	set	16326
  1081  0000                     _LATC	set	16316
  1082  0000                     _LATB	set	16315
  1083  0000                     _LATA	set	16314
  1084  0000                     _LATD	set	16317
  1085  0000                     _LATE	set	16318
  1086  0000                     _T6CONbits	set	16276
  1087  0000                     _T6CON	set	16276
  1088  0000                     _T6TMR	set	16274
  1089  0000                     _T6PR	set	16275
  1090  0000                     _T6RST	set	16279
  1091  0000                     _T6HLT	set	16277
  1092  0000                     _T6CLKCON	set	16278
  1093  0000                     _T1CONbits	set	16306
  1094  0000                     _T1CON	set	16306
  1095  0000                     _TMR1L	set	16304
  1096  0000                     _TMR1H	set	16305
  1097  0000                     _T1CLK	set	16309
  1098  0000                     _T1GATE	set	16308
  1099  0000                     _T1GCON	set	16307
  1100  0000                     _T0CON0bits	set	16312
  1101  0000                     _T0CON0	set	16312
  1102  0000                     _TMR0L	set	16310
  1103  0000                     _TMR0H	set	16311
  1104  0000                     _T0CON1	set	16313
  1105  0000                     _T5CONbits	set	16282
  1106  0000                     _T5CON	set	16282
  1107  0000                     _TMR5L	set	16280
  1108  0000                     _TMR5H	set	16281
  1109  0000                     _T5CLK	set	16285
  1110  0000                     _T5GATE	set	16284
  1111  0000                     _T5GCON	set	16283
  1112  0000                     _PWM6DCL	set	16232
  1113  0000                     _PWM6DCH	set	16233
  1114  0000                     _PWM6CON	set	16234
  1115  0000                     _PR4	set	16287
  1116  0000                     _T4CONbits	set	16288
  1117  0000                     _T4CON	set	16288
  1118  0000                     _T4TMR	set	16286
  1119  0000                     _T4PR	set	16287
  1120  0000                     _T4RST	set	16291
  1121  0000                     _T4HLT	set	16289
  1122  0000                     _T4CLKCON	set	16290
  1123  0000                     _T2CON	set	16300
  1124  0000                     _T2TMR	set	16298
  1125  0000                     _T2PR	set	16299
  1126  0000                     _T2RST	set	16303
  1127  0000                     _T2HLT	set	16301
  1128  0000                     _T2CLKCON	set	16302
  1129  0000                     _INTCON0bits	set	16338
  1130                           
  1131                           	psect	mediumconst
  1132  00FC56                     __pmediumconst:
  1133                           	opt callstack 0
  1134  00FC56  00                 	db	0
  1135  00FC57                     STR_33:
  1136                           
  1137                           ; BSR set to: 2
  1138  00FC57  0D                 	db	13
  1139  00FC58  0A                 	db	10
  1140  00FC59  4E                 	db	78	;'N'
  1141  00FC5A  65                 	db	101	;'e'
  1142  00FC5B  77                 	db	119	;'w'
  1143  00FC5C  20                 	db	32
  1144  00FC5D  42                 	db	66	;'B'
  1145  00FC5E  72                 	db	114	;'r'
  1146  00FC5F  65                 	db	101	;'e'
  1147  00FC60  61                 	db	97	;'a'
  1148  00FC61  74                 	db	116	;'t'
  1149  00FC62  68                 	db	104	;'h'
  1150  00FC63  3A                 	db	58	;':'
  1151  00FC64  20                 	db	32
  1152  00FC65  54                 	db	84	;'T'
  1153  00FC66  54                 	db	84	;'T'
  1154  00FC67  31                 	db	49	;'1'
  1155  00FC68  32                 	db	50	;'2'
  1156  00FC69  3A                 	db	58	;':'
  1157  00FC6A  20                 	db	32
  1158  00FC6B  25                 	db	37
  1159  00FC6C  64                 	db	100	;'d'
  1160  00FC6D  20                 	db	32
  1161  00FC6E  54                 	db	84	;'T'
  1162  00FC6F  54                 	db	84	;'T'
  1163  00FC70  32                 	db	50	;'2'
  1164  00FC71  3A                 	db	58	;':'
  1165  00FC72  20                 	db	32
  1166  00FC73  25                 	db	37
  1167  00FC74  64                 	db	100	;'d'
  1168  00FC75  20                 	db	32
  1169  00FC76  54                 	db	84	;'T'
  1170  00FC77  54                 	db	84	;'T'
  1171  00FC78  33                 	db	51	;'3'
  1172  00FC79  3A                 	db	58	;':'
  1173  00FC7A  20                 	db	32
  1174  00FC7B  25                 	db	37
  1175  00FC7C  64                 	db	100	;'d'
  1176  00FC7D  20                 	db	32
  1177  00FC7E  54                 	db	84	;'T'
  1178  00FC7F  54                 	db	84	;'T'
  1179  00FC80  33                 	db	51	;'3'
  1180  00FC81  34                 	db	52	;'4'
  1181  00FC82  3A                 	db	58	;':'
  1182  00FC83  20                 	db	32
  1183  00FC84  25                 	db	37
  1184  00FC85  64                 	db	100	;'d'
  1185  00FC86  20                 	db	32
  1186  00FC87  54                 	db	84	;'T'
  1187  00FC88  54                 	db	84	;'T'
  1188  00FC89  34                 	db	52	;'4'
  1189  00FC8A  3A                 	db	58	;':'
  1190  00FC8B  20                 	db	32
  1191  00FC8C  25                 	db	37
  1192  00FC8D  64                 	db	100	;'d'
  1193  00FC8E  20                 	db	32
  1194  00FC8F  54                 	db	84	;'T'
  1195  00FC90  54                 	db	84	;'T'
  1196  00FC91  31                 	db	49	;'1'
  1197  00FC92  3A                 	db	58	;':'
  1198  00FC93  20                 	db	32
  1199  00FC94  25                 	db	37
  1200  00FC95  64                 	db	100	;'d'
  1201  00FC96  20                 	db	32
  1202  00FC97  00                 	db	0
  1203  00FC98                     STR_41:
  1204                           
  1205                           ; BSR set to: 2
  1206  00FC98  0D                 	db	13
  1207  00FC99  0A                 	db	10
  1208  00FC9A  43                 	db	67	;'C'
  1209  00FC9B  61                 	db	97	;'a'
  1210  00FC9C  6C                 	db	108	;'l'
  1211  00FC9D  69                 	db	105	;'i'
  1212  00FC9E  62                 	db	98	;'b'
  1213  00FC9F  72                 	db	114	;'r'
  1214  00FCA0  61                 	db	97	;'a'
  1215  00FCA1  74                 	db	116	;'t'
  1216  00FCA2  65                 	db	101	;'e'
  1217  00FCA3  64                 	db	100	;'d'
  1218  00FCA4  3A                 	db	58	;':'
  1219  00FCA5  20                 	db	32
  1220  00FCA6  50                 	db	80	;'P'
  1221  00FCA7  72                 	db	114	;'r'
  1222  00FCA8  65                 	db	101	;'e'
  1223  00FCA9  73                 	db	115	;'s'
  1224  00FCAA  3A                 	db	58	;':'
  1225  00FCAB  25                 	db	37
  1226  00FCAC  64                 	db	100	;'d'
  1227  00FCAD  20                 	db	32
  1228  00FCAE  4F                 	db	79	;'O'
  1229  00FCAF  66                 	db	102	;'f'
  1230  00FCB0  66                 	db	102	;'f'
  1231  00FCB1  3A                 	db	58	;':'
  1232  00FCB2  25                 	db	37
  1233  00FCB3  64                 	db	100	;'d'
  1234  00FCB4  20                 	db	32
  1235  00FCB5  2F                 	db	47
  1236  00FCB6  2F                 	db	47
  1237  00FCB7  56                 	db	86	;'V'
  1238  00FCB8  6F                 	db	111	;'o'
  1239  00FCB9  6C                 	db	108	;'l'
  1240  00FCBA  75                 	db	117	;'u'
  1241  00FCBB  6D                 	db	109	;'m'
  1242  00FCBC  65                 	db	101	;'e'
  1243  00FCBD  20                 	db	32
  1244  00FCBE  70                 	db	112	;'p'
  1245  00FCBF  72                 	db	114	;'r'
  1246  00FCC0  65                 	db	101	;'e'
  1247  00FCC1  73                 	db	115	;'s'
  1248  00FCC2  3A                 	db	58	;':'
  1249  00FCC3  25                 	db	37
  1250  00FCC4  64                 	db	100	;'d'
  1251  00FCC5  20                 	db	32
  1252  00FCC6  4F                 	db	79	;'O'
  1253  00FCC7  66                 	db	102	;'f'
  1254  00FCC8  66                 	db	102	;'f'
  1255  00FCC9  3A                 	db	58	;':'
  1256  00FCCA  25                 	db	37
  1257  00FCCB  64                 	db	100	;'d'
  1258  00FCCC  0D                 	db	13
  1259  00FCCD  0A                 	db	10
  1260  00FCCE  00                 	db	0
  1261  00FCCF                     STR_38:
  1262                           
  1263                           ; BSR set to: 2
  1264  00FCCF  41                 	db	65	;'A'
  1265  00FCD0  44                 	db	68	;'D'
  1266  00FCD1  43                 	db	67	;'C'
  1267  00FCD2  6F                 	db	111	;'o'
  1268  00FCD3  66                 	db	102	;'f'
  1269  00FCD4  66                 	db	102	;'f'
  1270  00FCD5  73                 	db	115	;'s'
  1271  00FCD6  65                 	db	101	;'e'
  1272  00FCD7  74                 	db	116	;'t'
  1273  00FCD8  3A                 	db	58	;':'
  1274  00FCD9  20                 	db	32
  1275  00FCDA  25                 	db	37
  1276  00FCDB  64                 	db	100	;'d'
  1277  00FCDC  20                 	db	32
  1278  00FCDD  41                 	db	65	;'A'
  1279  00FCDE  44                 	db	68	;'D'
  1280  00FCDF  43                 	db	67	;'C'
  1281  00FCE0  56                 	db	86	;'V'
  1282  00FCE1  6F                 	db	111	;'o'
  1283  00FCE2  66                 	db	102	;'f'
  1284  00FCE3  66                 	db	102	;'f'
  1285  00FCE4  73                 	db	115	;'s'
  1286  00FCE5  65                 	db	101	;'e'
  1287  00FCE6  74                 	db	116	;'t'
  1288  00FCE7  3A                 	db	58	;':'
  1289  00FCE8  20                 	db	32
  1290  00FCE9  25                 	db	37
  1291  00FCEA  64                 	db	100	;'d'
  1292  00FCEB  20                 	db	32
  1293  00FCEC  31                 	db	49	;'1'
  1294  00FCED  32                 	db	50	;'2'
  1295  00FCEE  56                 	db	86	;'V'
  1296  00FCEF  3A                 	db	58	;':'
  1297  00FCF0  20                 	db	32
  1298  00FCF1  25                 	db	37
  1299  00FCF2  64                 	db	100	;'d'
  1300  00FCF3  20                 	db	32
  1301  00FCF4  6D                 	db	109	;'m'
  1302  00FCF5  56                 	db	86	;'V'
  1303  00FCF6  20                 	db	32
  1304  00FCF7  35                 	db	53	;'5'
  1305  00FCF8  56                 	db	86	;'V'
  1306  00FCF9  3A                 	db	58	;':'
  1307  00FCFA  20                 	db	32
  1308  00FCFB  25                 	db	37
  1309  00FCFC  64                 	db	100	;'d'
  1310  00FCFD  20                 	db	32
  1311  00FCFE  6D                 	db	109	;'m'
  1312  00FCFF  56                 	db	86	;'V'
  1313  00FD00  20                 	db	32
  1314  00FD01  2D                 	db	45
  1315  00FD02  2D                 	db	45
  1316  00FD03  20                 	db	32
  1317  00FD04  00                 	db	0
  1318  00FD05                     STR_40:
  1319                           
  1320                           ; BSR set to: 2
  1321  00FD05  0D                 	db	13
  1322  00FD06  0A                 	db	10
  1323  00FD07  50                 	db	80	;'P'
  1324  00FD08  72                 	db	114	;'r'
  1325  00FD09  65                 	db	101	;'e'
  1326  00FD0A  43                 	db	67	;'C'
  1327  00FD0B  61                 	db	97	;'a'
  1328  00FD0C  6C                 	db	108	;'l'
  1329  00FD0D  69                 	db	105	;'i'
  1330  00FD0E  62                 	db	98	;'b'
  1331  00FD0F  3A                 	db	58	;':'
  1332  00FD10  20                 	db	32
  1333  00FD11  50                 	db	80	;'P'
  1334  00FD12  72                 	db	114	;'r'
  1335  00FD13  65                 	db	101	;'e'
  1336  00FD14  73                 	db	115	;'s'
  1337  00FD15  3A                 	db	58	;':'
  1338  00FD16  25                 	db	37
  1339  00FD17  64                 	db	100	;'d'
  1340  00FD18  20                 	db	32
  1341  00FD19  4F                 	db	79	;'O'
  1342  00FD1A  66                 	db	102	;'f'
  1343  00FD1B  66                 	db	102	;'f'
  1344  00FD1C  3A                 	db	58	;':'
  1345  00FD1D  25                 	db	37
  1346  00FD1E  64                 	db	100	;'d'
  1347  00FD1F  20                 	db	32
  1348  00FD20  2F                 	db	47
  1349  00FD21  2F                 	db	47
  1350  00FD22  56                 	db	86	;'V'
  1351  00FD23  6F                 	db	111	;'o'
  1352  00FD24  6C                 	db	108	;'l'
  1353  00FD25  75                 	db	117	;'u'
  1354  00FD26  6D                 	db	109	;'m'
  1355  00FD27  65                 	db	101	;'e'
  1356  00FD28  20                 	db	32
  1357  00FD29  70                 	db	112	;'p'
  1358  00FD2A  72                 	db	114	;'r'
  1359  00FD2B  65                 	db	101	;'e'
  1360  00FD2C  73                 	db	115	;'s'
  1361  00FD2D  3A                 	db	58	;':'
  1362  00FD2E  25                 	db	37
  1363  00FD2F  64                 	db	100	;'d'
  1364  00FD30  20                 	db	32
  1365  00FD31  4F                 	db	79	;'O'
  1366  00FD32  66                 	db	102	;'f'
  1367  00FD33  66                 	db	102	;'f'
  1368  00FD34  3A                 	db	58	;':'
  1369  00FD35  25                 	db	37
  1370  00FD36  64                 	db	100	;'d'
  1371  00FD37  0D                 	db	13
  1372  00FD38  0A                 	db	10
  1373  00FD39  00                 	db	0
  1374  00FD3A                     STR_4:
  1375                           
  1376                           ; BSR set to: 2
  1377  00FD3A  0D                 	db	13
  1378  00FD3B  0A                 	db	10
  1379  00FD3C  50                 	db	80	;'P'
  1380  00FD3D  52                 	db	82	;'R'
  1381  00FD3E  53                 	db	83	;'S'
  1382  00FD3F  3A                 	db	58	;':'
  1383  00FD40  20                 	db	32
  1384  00FD41  25                 	db	37
  1385  00FD42  64                 	db	100	;'d'
  1386  00FD43  20                 	db	32
  1387  00FD44  70                 	db	112	;'p'
  1388  00FD45  61                 	db	97	;'a'
  1389  00FD46  20                 	db	32
  1390  00FD47  50                 	db	80	;'P'
  1391  00FD48  52                 	db	82	;'R'
  1392  00FD49  53                 	db	83	;'S'
  1393  00FD4A  56                 	db	86	;'V'
  1394  00FD4B  3A                 	db	58	;':'
  1395  00FD4C  20                 	db	32
  1396  00FD4D  25                 	db	37
  1397  00FD4E  64                 	db	100	;'d'
  1398  00FD4F  20                 	db	32
  1399  00FD50  70                 	db	112	;'p'
  1400  00FD51  61                 	db	97	;'a'
  1401  00FD52  20                 	db	32
  1402  00FD53  31                 	db	49	;'1'
  1403  00FD54  32                 	db	50	;'2'
  1404  00FD55  56                 	db	86	;'V'
  1405  00FD56  3A                 	db	58	;':'
  1406  00FD57  20                 	db	32
  1407  00FD58  25                 	db	37
  1408  00FD59  64                 	db	100	;'d'
  1409  00FD5A  20                 	db	32
  1410  00FD5B  6D                 	db	109	;'m'
  1411  00FD5C  56                 	db	86	;'V'
  1412  00FD5D  20                 	db	32
  1413  00FD5E  35                 	db	53	;'5'
  1414  00FD5F  56                 	db	86	;'V'
  1415  00FD60  3A                 	db	58	;':'
  1416  00FD61  25                 	db	37
  1417  00FD62  64                 	db	100	;'d'
  1418  00FD63  20                 	db	32
  1419  00FD64  0D                 	db	13
  1420  00FD65  0A                 	db	10
  1421  00FD66  00                 	db	0
  1422  00FD67                     STR_39:
  1423                           
  1424                           ; BSR set to: 2
  1425  00FD67  54                 	db	84	;'T'
  1426  00FD68  61                 	db	97	;'a'
  1427  00FD69  72                 	db	114	;'r'
  1428  00FD6A  67                 	db	103	;'g'
  1429  00FD6B  65                 	db	101	;'e'
  1430  00FD6C  74                 	db	116	;'t'
  1431  00FD6D  73                 	db	115	;'s'
  1432  00FD6E  3A                 	db	58	;':'
  1433  00FD6F  20                 	db	32
  1434  00FD70  50                 	db	80	;'P'
  1435  00FD71  6D                 	db	109	;'m'
  1436  00FD72  61                 	db	97	;'a'
  1437  00FD73  78                 	db	120	;'x'
  1438  00FD74  3A                 	db	58	;':'
  1439  00FD75  20                 	db	32
  1440  00FD76  25                 	db	37
  1441  00FD77  64                 	db	100	;'d'
  1442  00FD78  20                 	db	32
  1443  00FD79  49                 	db	73	;'I'
  1444  00FD7A  50                 	db	80	;'P'
  1445  00FD7B  3A                 	db	58	;':'
  1446  00FD7C  20                 	db	32
  1447  00FD7D  25                 	db	37
  1448  00FD7E  64                 	db	100	;'d'
  1449  00FD7F  20                 	db	32
  1450  00FD80  45                 	db	69	;'E'
  1451  00FD81  50                 	db	80	;'P'
  1452  00FD82  3A                 	db	58	;':'
  1453  00FD83  20                 	db	32
  1454  00FD84  25                 	db	37
  1455  00FD85  64                 	db	100	;'d'
  1456  00FD86  20                 	db	32
  1457  00FD87  56                 	db	86	;'V'
  1458  00FD88  3A                 	db	58	;':'
  1459  00FD89  20                 	db	32
  1460  00FD8A  25                 	db	37
  1461  00FD8B  64                 	db	100	;'d'
  1462  00FD8C  2F                 	db	47
  1463  00FD8D  25                 	db	37
  1464  00FD8E  64                 	db	100	;'d'
  1465  00FD8F  0D                 	db	13
  1466  00FD90  0A                 	db	10
  1467  00FD91  00                 	db	0
  1468  00FD92                     STR_35:
  1469                           
  1470                           ; BSR set to: 2
  1471  00FD92  20                 	db	32
  1472  00FD93  20                 	db	32
  1473  00FD94  20                 	db	32
  1474  00FD95  50                 	db	80	;'P'
  1475  00FD96  6D                 	db	109	;'m'
  1476  00FD97  61                 	db	97	;'a'
  1477  00FD98  78                 	db	120	;'x'
  1478  00FD99  3A                 	db	58	;':'
  1479  00FD9A  20                 	db	32
  1480  00FD9B  25                 	db	37
  1481  00FD9C  64                 	db	100	;'d'
  1482  00FD9D  20                 	db	32
  1483  00FD9E  6C                 	db	108	;'l'
  1484  00FD9F  49                 	db	73	;'I'
  1485  00FDA0  50                 	db	80	;'P'
  1486  00FDA1  3A                 	db	58	;':'
  1487  00FDA2  20                 	db	32
  1488  00FDA3  25                 	db	37
  1489  00FDA4  64                 	db	100	;'d'
  1490  00FDA5  20                 	db	32
  1491  00FDA6  49                 	db	73	;'I'
  1492  00FDA7  50                 	db	80	;'P'
  1493  00FDA8  3A                 	db	58	;':'
  1494  00FDA9  20                 	db	32
  1495  00FDAA  25                 	db	37
  1496  00FDAB  64                 	db	100	;'d'
  1497  00FDAC  20                 	db	32
  1498  00FDAD  50                 	db	80	;'P'
  1499  00FDAE  68                 	db	104	;'h'
  1500  00FDAF  69                 	db	105	;'i'
  1501  00FDB0  67                 	db	103	;'g'
  1502  00FDB1  68                 	db	104	;'h'
  1503  00FDB2  3A                 	db	58	;':'
  1504  00FDB3  20                 	db	32
  1505  00FDB4  25                 	db	37
  1506  00FDB5  64                 	db	100	;'d'
  1507  00FDB6  20                 	db	32
  1508  00FDB7  2D                 	db	45
  1509  00FDB8  2D                 	db	45
  1510  00FDB9  20                 	db	32
  1511  00FDBA  00                 	db	0
  1512  00FDBB                     STR_37:
  1513                           
  1514                           ; BSR set to: 2
  1515  00FDBB  48                 	db	72	;'H'
  1516  00FDBC  69                 	db	105	;'i'
  1517  00FDBD  4C                 	db	76	;'L'
  1518  00FDBE  69                 	db	105	;'i'
  1519  00FDBF  6D                 	db	109	;'m'
  1520  00FDC0  69                 	db	105	;'i'
  1521  00FDC1  74                 	db	116	;'t'
  1522  00FDC2  3A                 	db	58	;':'
  1523  00FDC3  20                 	db	32
  1524  00FDC4  25                 	db	37
  1525  00FDC5  64                 	db	100	;'d'
  1526  00FDC6  20                 	db	32
  1527  00FDC7  4C                 	db	76	;'L'
  1528  00FDC8  6F                 	db	111	;'o'
  1529  00FDC9  4C                 	db	76	;'L'
  1530  00FDCA  69                 	db	105	;'i'
  1531  00FDCB  6D                 	db	109	;'m'
  1532  00FDCC  69                 	db	105	;'i'
  1533  00FDCD  74                 	db	116	;'t'
  1534  00FDCE  3A                 	db	58	;':'
  1535  00FDCF  20                 	db	32
  1536  00FDD0  25                 	db	37
  1537  00FDD1  64                 	db	100	;'d'
  1538  00FDD2  20                 	db	32
  1539  00FDD3  2D                 	db	45
  1540  00FDD4  2D                 	db	45
  1541  00FDD5  20                 	db	32
  1542  00FDD6  56                 	db	86	;'V'
  1543  00FDD7  6F                 	db	111	;'o'
  1544  00FDD8  6C                 	db	108	;'l'
  1545  00FDD9  75                 	db	117	;'u'
  1546  00FDDA  6D                 	db	109	;'m'
  1547  00FDDB  65                 	db	101	;'e'
  1548  00FDDC  3A                 	db	58	;':'
  1549  00FDDD  20                 	db	32
  1550  00FDDE  25                 	db	37
  1551  00FDDF  64                 	db	100	;'d'
  1552  00FDE0  0D                 	db	13
  1553  00FDE1  0A                 	db	10
  1554  00FDE2  00                 	db	0
  1555  00FDE3                     STR_36:
  1556                           
  1557                           ; BSR set to: 2
  1558  00FDE3  50                 	db	80	;'P'
  1559  00FDE4  6D                 	db	109	;'m'
  1560  00FDE5  69                 	db	105	;'i'
  1561  00FDE6  6E                 	db	110	;'n'
  1562  00FDE7  3A                 	db	58	;':'
  1563  00FDE8  20                 	db	32
  1564  00FDE9  25                 	db	37
  1565  00FDEA  64                 	db	100	;'d'
  1566  00FDEB  20                 	db	32
  1567  00FDEC  6C                 	db	108	;'l'
  1568  00FDED  45                 	db	69	;'E'
  1569  00FDEE  50                 	db	80	;'P'
  1570  00FDEF  3A                 	db	58	;':'
  1571  00FDF0  20                 	db	32
  1572  00FDF1  25                 	db	37
  1573  00FDF2  64                 	db	100	;'d'
  1574  00FDF3  20                 	db	32
  1575  00FDF4  45                 	db	69	;'E'
  1576  00FDF5  50                 	db	80	;'P'
  1577  00FDF6  3A                 	db	58	;':'
  1578  00FDF7  20                 	db	32
  1579  00FDF8  25                 	db	37
  1580  00FDF9  64                 	db	100	;'d'
  1581  00FDFA  20                 	db	32
  1582  00FDFB  50                 	db	80	;'P'
  1583  00FDFC  6C                 	db	108	;'l'
  1584  00FDFD  6F                 	db	111	;'o'
  1585  00FDFE  77                 	db	119	;'w'
  1586  00FDFF  3A                 	db	58	;':'
  1587  00FE00  25                 	db	37
  1588  00FE01  64                 	db	100	;'d'
  1589  00FE02  20                 	db	32
  1590  00FE03  2D                 	db	45
  1591  00FE04  2D                 	db	45
  1592  00FE05  20                 	db	32
  1593  00FE06  00                 	db	0
  1594  00FE07                     STR_51:
  1595                           
  1596                           ; BSR set to: 2
  1597  00FE07  0D                 	db	13
  1598  00FE08  0A                 	db	10
  1599  00FE09  20                 	db	32
  1600  00FE0A  43                 	db	67	;'C'
  1601  00FE0B  6F                 	db	111	;'o'
  1602  00FE0C  6E                 	db	110	;'n'
  1603  00FE0D  74                 	db	116	;'t'
  1604  00FE0E  72                 	db	114	;'r'
  1605  00FE0F  6F                 	db	111	;'o'
  1606  00FE10  6C                 	db	108	;'l'
  1607  00FE11  6C                 	db	108	;'l'
  1608  00FE12  65                 	db	101	;'e'
  1609  00FE13  72                 	db	114	;'r'
  1610  00FE14  20                 	db	32
  1611  00FE15  62                 	db	98	;'b'
  1612  00FE16  75                 	db	117	;'u'
  1613  00FE17  7A                 	db	122	;'z'
  1614  00FE18  7A                 	db	122	;'z'
  1615  00FE19  65                 	db	101	;'e'
  1616  00FE1A  72                 	db	114	;'r'
  1617  00FE1B  20                 	db	32
  1618  00FE1C  64                 	db	100	;'d'
  1619  00FE1D  65                 	db	101	;'e'
  1620  00FE1E  74                 	db	116	;'t'
  1621  00FE1F  65                 	db	101	;'e'
  1622  00FE20  63                 	db	99	;'c'
  1623  00FE21  74                 	db	116	;'t'
  1624  00FE22  65                 	db	101	;'e'
  1625  00FE23  64                 	db	100	;'d'
  1626  00FE24  0D                 	db	13
  1627  00FE25  0A                 	db	10
  1628  00FE26  00                 	db	0
  1629  00FE27                     STR_50:
  1630                           
  1631                           ; BSR set to: 2
  1632  00FE27  0D                 	db	13
  1633  00FE28  0A                 	db	10
  1634  00FE29  20                 	db	32
  1635  00FE2A  45                 	db	69	;'E'
  1636  00FE2B  72                 	db	114	;'r'
  1637  00FE2C  72                 	db	114	;'r'
  1638  00FE2D  6F                 	db	111	;'o'
  1639  00FE2E  72                 	db	114	;'r'
  1640  00FE2F  20                 	db	32
  1641  00FE30  69                 	db	105	;'i'
  1642  00FE31  6E                 	db	110	;'n'
  1643  00FE32  20                 	db	32
  1644  00FE33  43                 	db	67	;'C'
  1645  00FE34  6F                 	db	111	;'o'
  1646  00FE35  6E                 	db	110	;'n'
  1647  00FE36  74                 	db	116	;'t'
  1648  00FE37  72                 	db	114	;'r'
  1649  00FE38  6F                 	db	111	;'o'
  1650  00FE39  6C                 	db	108	;'l'
  1651  00FE3A  6C                 	db	108	;'l'
  1652  00FE3B  65                 	db	101	;'e'
  1653  00FE3C  72                 	db	114	;'r'
  1654  00FE3D  20                 	db	32
  1655  00FE3E  62                 	db	98	;'b'
  1656  00FE3F  75                 	db	117	;'u'
  1657  00FE40  7A                 	db	122	;'z'
  1658  00FE41  7A                 	db	122	;'z'
  1659  00FE42  65                 	db	101	;'e'
  1660  00FE43  72                 	db	114	;'r'
  1661  00FE44  0D                 	db	13
  1662  00FE45  0A                 	db	10
  1663  00FE46  00                 	db	0
  1664  00FE47                     STR_34:
  1665                           
  1666                           ; BSR set to: 2
  1667  00FE47  54                 	db	84	;'T'
  1668  00FE48  49                 	db	73	;'I'
  1669  00FE49  3A                 	db	58	;':'
  1670  00FE4A  20                 	db	32
  1671  00FE4B  25                 	db	37
  1672  00FE4C  64                 	db	100	;'d'
  1673  00FE4D  20                 	db	32
  1674  00FE4E  54                 	db	84	;'T'
  1675  00FE4F  45                 	db	69	;'E'
  1676  00FE50  3A                 	db	58	;':'
  1677  00FE51  20                 	db	32
  1678  00FE52  25                 	db	37
  1679  00FE53  64                 	db	100	;'d'
  1680  00FE54  20                 	db	32
  1681  00FE55  54                 	db	84	;'T'
  1682  00FE56  44                 	db	68	;'D'
  1683  00FE57  49                 	db	73	;'I'
  1684  00FE58  3A                 	db	58	;':'
  1685  00FE59  20                 	db	32
  1686  00FE5A  25                 	db	37
  1687  00FE5B  64                 	db	100	;'d'
  1688  00FE5C  20                 	db	32
  1689  00FE5D  54                 	db	84	;'T'
  1690  00FE5E  44                 	db	68	;'D'
  1691  00FE5F  45                 	db	69	;'E'
  1692  00FE60  3A                 	db	58	;':'
  1693  00FE61  20                 	db	32
  1694  00FE62  25                 	db	37
  1695  00FE63  64                 	db	100	;'d'
  1696  00FE64  0D                 	db	13
  1697  00FE65  0A                 	db	10
  1698  00FE66  00                 	db	0
  1699  00FE67                     STR_10:
  1700                           
  1701                           ; BSR set to: 2
  1702  00FE67  25                 	db	37
  1703  00FE68  32                 	db	50	;'2'
  1704  00FE69  64                 	db	100	;'d'
  1705  00FE6A  25                 	db	37
  1706  00FE6B  25                 	db	37
  1707  00FE6C  20                 	db	32
  1708  00FE6D  25                 	db	37
  1709  00FE6E  64                 	db	100	;'d'
  1710  00FE6F  2E                 	db	46
  1711  00FE70  25                 	db	37
  1712  00FE71  30                 	db	48	;'0'
  1713  00FE72  32                 	db	50	;'2'
  1714  00FE73  64                 	db	100	;'d'
  1715  00FE74  20                 	db	32
  1716  00FE75  25                 	db	37
  1717  00FE76  64                 	db	100	;'d'
  1718  00FE77  2E                 	db	46
  1719  00FE78  25                 	db	37
  1720  00FE79  30                 	db	48	;'0'
  1721  00FE7A  32                 	db	50	;'2'
  1722  00FE7B  64                 	db	100	;'d'
  1723  00FE7C  25                 	db	37
  1724  00FE7D  63                 	db	99	;'c'
  1725  00FE7E  25                 	db	37
  1726  00FE7F  73                 	db	115	;'s'
  1727  00FE80  00                 	db	0
  1728  00FE81                     STR_12:
  1729                           
  1730                           ; BSR set to: 2
  1731  00FE81  25                 	db	37
  1732  00FE82  31                 	db	49	;'1'
  1733  00FE83  64                 	db	100	;'d'
  1734  00FE84  25                 	db	37
  1735  00FE85  31                 	db	49	;'1'
  1736  00FE86  64                 	db	100	;'d'
  1737  00FE87  20                 	db	32
  1738  00FE88  25                 	db	37
  1739  00FE89  32                 	db	50	;'2'
  1740  00FE8A  64                 	db	100	;'d'
  1741  00FE8B  20                 	db	32
  1742  00FE8C  25                 	db	37
  1743  00FE8D  32                 	db	50	;'2'
  1744  00FE8E  64                 	db	100	;'d'
  1745  00FE8F  20                 	db	32
  1746  00FE90  25                 	db	37
  1747  00FE91  32                 	db	50	;'2'
  1748  00FE92  64                 	db	100	;'d'
  1749  00FE93  20                 	db	32
  1750  00FE94  25                 	db	37
  1751  00FE95  34                 	db	52	;'4'
  1752  00FE96  64                 	db	100	;'d'
  1753  00FE97  00                 	db	0
  1754  00FE98                     STR_14:
  1755                           
  1756                           ; BSR set to: 2
  1757  00FE98  0D                 	db	13
  1758  00FE99  0A                 	db	10
  1759  00FE9A  44                 	db	68	;'D'
  1760  00FE9B  49                 	db	73	;'I'
  1761  00FE9C  53                 	db	83	;'S'
  1762  00FE9D  20                 	db	32
  1763  00FE9E  53                 	db	83	;'S'
  1764  00FE9F  56                 	db	86	;'V'
  1765  00FEA0  31                 	db	49	;'1'
  1766  00FEA1  20                 	db	32
  1767  00FEA2  41                 	db	65	;'A'
  1768  00FEA3  4C                 	db	76	;'L'
  1769  00FEA4  41                 	db	65	;'A'
  1770  00FEA5  52                 	db	82	;'R'
  1771  00FEA6  4D                 	db	77	;'M'
  1772  00FEA7  21                 	db	33
  1773  00FEA8  0D                 	db	13
  1774  00FEA9  0A                 	db	10
  1775  00FEAA  00                 	db	0
  1776  00FEAB                     STR_22:
  1777                           
  1778                           ; BSR set to: 2
  1779  00FEAB  0D                 	db	13
  1780  00FEAC  0A                 	db	10
  1781  00FEAD  46                 	db	70	;'F'
  1782  00FEAE  61                 	db	97	;'a'
  1783  00FEAF  69                 	db	105	;'i'
  1784  00FEB0  6C                 	db	108	;'l'
  1785  00FEB1  20                 	db	32
  1786  00FEB2  35                 	db	53	;'5'
  1787  00FEB3  56                 	db	86	;'V'
  1788  00FEB4  20                 	db	32
  1789  00FEB5  3A                 	db	58	;':'
  1790  00FEB6  20                 	db	32
  1791  00FEB7  25                 	db	37
  1792  00FEB8  64                 	db	100	;'d'
  1793  00FEB9  20                 	db	32
  1794  00FEBA  0D                 	db	13
  1795  00FEBB  0A                 	db	10
  1796  00FEBC  00                 	db	0
  1797  00FEBD                     STR_9:
  1798                           
  1799                           ; BSR set to: 2
  1800  00FEBD  56                 	db	86	;'V'
  1801  00FEBE  65                 	db	101	;'e'
  1802  00FEBF  6E                 	db	110	;'n'
  1803  00FEC0  74                 	db	116	;'t'
  1804  00FEC1  69                 	db	105	;'i'
  1805  00FEC2  6C                 	db	108	;'l'
  1806  00FEC3  61                 	db	97	;'a'
  1807  00FEC4  74                 	db	116	;'t'
  1808  00FEC5  6F                 	db	111	;'o'
  1809  00FEC6  72                 	db	114	;'r'
  1810  00FEC7  20                 	db	32
  1811  00FEC8  76                 	db	118	;'v'
  1812  00FEC9  31                 	db	49	;'1'
  1813  00FECA  2E                 	db	46
  1814  00FECB  30                 	db	48	;'0'
  1815  00FECC  20                 	db	32
  1816  00FECD  00                 	db	0
  1817  00FECE                     STR_8:
  1818                           
  1819                           ; BSR set to: 2
  1820  00FECE  4F                 	db	79	;'O'
  1821  00FECF  78                 	db	120	;'x'
  1822  00FED0  79                 	db	121	;'y'
  1823  00FED1  56                 	db	86	;'V'
  1824  00FED2  69                 	db	105	;'i'
  1825  00FED3  74                 	db	116	;'t'
  1826  00FED4  61                 	db	97	;'a'
  1827  00FED5  45                 	db	69	;'E'
  1828  00FED6  6D                 	db	109	;'m'
  1829  00FED7  65                 	db	101	;'e'
  1830  00FED8  72                 	db	114	;'r'
  1831  00FED9  67                 	db	103	;'g'
  1832  00FEDA  65                 	db	101	;'e'
  1833  00FEDB  6E                 	db	110	;'n'
  1834  00FEDC  63                 	db	99	;'c'
  1835  00FEDD  79                 	db	121	;'y'
  1836  00FEDE  00                 	db	0
  1837  00FEDF                     STR_6:
  1838                           
  1839                           ; BSR set to: 2
  1840  00FEDF  20                 	db	32
  1841  00FEE0  20                 	db	32
  1842  00FEE1  20                 	db	32
  1843  00FEE2  20                 	db	32
  1844  00FEE3  4F                 	db	79	;'O'
  1845  00FEE4  78                 	db	120	;'x'
  1846  00FEE5  79                 	db	121	;'y'
  1847  00FEE6  56                 	db	86	;'V'
  1848  00FEE7  69                 	db	105	;'i'
  1849  00FEE8  74                 	db	116	;'t'
  1850  00FEE9  61                 	db	97	;'a'
  1851  00FEEA  20                 	db	32
  1852  00FEEB  20                 	db	32
  1853  00FEEC  20                 	db	32
  1854  00FEED  20                 	db	32
  1855  00FEEE  20                 	db	32
  1856  00FEEF  00                 	db	0
  1857  00FEF0                     STR_5:
  1858                           
  1859                           ; BSR set to: 2
  1860  00FEF0  45                 	db	69	;'E'
  1861  00FEF1  6D                 	db	109	;'m'
  1862  00FEF2  65                 	db	101	;'e'
  1863  00FEF3  72                 	db	114	;'r'
  1864  00FEF4  67                 	db	103	;'g'
  1865  00FEF5  20                 	db	32
  1866  00FEF6  52                 	db	82	;'R'
  1867  00FEF7  65                 	db	101	;'e'
  1868  00FEF8  73                 	db	115	;'s'
  1869  00FEF9  70                 	db	112	;'p'
  1870  00FEFA  69                 	db	105	;'i'
  1871  00FEFB  72                 	db	114	;'r'
  1872  00FEFC  61                 	db	97	;'a'
  1873  00FEFD  74                 	db	116	;'t'
  1874  00FEFE  6F                 	db	111	;'o'
  1875  00FEFF  72                 	db	114	;'r'
  1876  00FF00  00                 	db	0
  1877  00FF01                     STR_52:
  1878                           
  1879                           ; BSR set to: 2
  1880  00FF01  0D                 	db	13
  1881  00FF02  0A                 	db	10
  1882  00FF03  20                 	db	32
  1883  00FF04  53                 	db	83	;'S'
  1884  00FF05  4C                 	db	76	;'L'
  1885  00FF06  45                 	db	69	;'E'
  1886  00FF07  45                 	db	69	;'E'
  1887  00FF08  50                 	db	80	;'P'
  1888  00FF09  20                 	db	32
  1889  00FF0A  4D                 	db	77	;'M'
  1890  00FF0B  4F                 	db	79	;'O'
  1891  00FF0C  44                 	db	68	;'D'
  1892  00FF0D  45                 	db	69	;'E'
  1893  00FF0E  0D                 	db	13
  1894  00FF0F  0A                 	db	10
  1895  00FF10  00                 	db	0
  1896  00FF11                     STR_53:
  1897                           
  1898                           ; BSR set to: 2
  1899  00FF11  49                 	db	73	;'I'
  1900  00FF12  32                 	db	50	;'2'
  1901  00FF13  43                 	db	67	;'C'
  1902  00FF14  3A                 	db	58	;':'
  1903  00FF15  20                 	db	32
  1904  00FF16  6D                 	db	109	;'m'
  1905  00FF17  69                 	db	105	;'i'
  1906  00FF18  73                 	db	115	;'s'
  1907  00FF19  73                 	db	115	;'s'
  1908  00FF1A  20                 	db	32
  1909  00FF1B  25                 	db	37
  1910  00FF1C  64                 	db	100	;'d'
  1911  00FF1D  0D                 	db	13
  1912  00FF1E  0A                 	db	10
  1913  00FF1F  00                 	db	0
  1914  00FF20                     STR_21:
  1915                           
  1916                           ; BSR set to: 2
  1917  00FF20  46                 	db	70	;'F'
  1918  00FF21  6F                 	db	111	;'o'
  1919  00FF22  75                 	db	117	;'u'
  1920  00FF23  6E                 	db	110	;'n'
  1921  00FF24  64                 	db	100	;'d'
  1922  00FF25  20                 	db	32
  1923  00FF26  42                 	db	66	;'B'
  1924  00FF27  75                 	db	117	;'u'
  1925  00FF28  7A                 	db	122	;'z'
  1926  00FF29  7A                 	db	122	;'z'
  1927  00FF2A  65                 	db	101	;'e'
  1928  00FF2B  72                 	db	114	;'r'
  1929  00FF2C  0D                 	db	13
  1930  00FF2D  0A                 	db	10
  1931  00FF2E  00                 	db	0
  1932  00FF2F                     STR_20:
  1933                           
  1934                           ; BSR set to: 2
  1935  00FF2F  45                 	db	69	;'E'
  1936  00FF30  72                 	db	114	;'r'
  1937  00FF31  72                 	db	114	;'r'
  1938  00FF32  6F                 	db	111	;'o'
  1939  00FF33  72                 	db	114	;'r'
  1940  00FF34  20                 	db	32
  1941  00FF35  42                 	db	66	;'B'
  1942  00FF36  75                 	db	117	;'u'
  1943  00FF37  7A                 	db	122	;'z'
  1944  00FF38  7A                 	db	122	;'z'
  1945  00FF39  65                 	db	101	;'e'
  1946  00FF3A  72                 	db	114	;'r'
  1947  00FF3B  0D                 	db	13
  1948  00FF3C  0A                 	db	10
  1949  00FF3D  00                 	db	0
  1950  00FF3E                     STR_7:
  1951                           
  1952                           ; BSR set to: 2
  1953  00FF3E  43                 	db	67	;'C'
  1954  00FF3F  61                 	db	97	;'a'
  1955  00FF40  6C                 	db	108	;'l'
  1956  00FF41  3A                 	db	58	;':'
  1957  00FF42  20                 	db	32
  1958  00FF43  25                 	db	37
  1959  00FF44  34                 	db	52	;'4'
  1960  00FF45  64                 	db	100	;'d'
  1961  00FF46  20                 	db	32
  1962  00FF47  2D                 	db	45
  1963  00FF48  20                 	db	32
  1964  00FF49  25                 	db	37
  1965  00FF4A  34                 	db	52	;'4'
  1966  00FF4B  64                 	db	100	;'d'
  1967  00FF4C  00                 	db	0
  1968  00FF4D                     STR_2:
  1969                           
  1970                           ; BSR set to: 2
  1971  00FF4D  0D                 	db	13
  1972  00FF4E  0A                 	db	10
  1973  00FF4F  53                 	db	83	;'S'
  1974  00FF50  74                 	db	116	;'t'
  1975  00FF51  61                 	db	97	;'a'
  1976  00FF52  63                 	db	99	;'c'
  1977  00FF53  6B                 	db	107	;'k'
  1978  00FF54  3A                 	db	58	;':'
  1979  00FF55  25                 	db	37
  1980  00FF56  30                 	db	48	;'0'
  1981  00FF57  32                 	db	50	;'2'
  1982  00FF58  58                 	db	88	;'X'
  1983  00FF59  0D                 	db	13
  1984  00FF5A  0A                 	db	10
  1985  00FF5B  00                 	db	0
  1986  00FF5C                     STR_47:
  1987                           
  1988                           ; BSR set to: 2
  1989  00FF5C  0D                 	db	13
  1990  00FF5D  0A                 	db	10
  1991  00FF5E  41                 	db	65	;'A'
  1992  00FF5F  6C                 	db	108	;'l'
  1993  00FF60  53                 	db	83	;'S'
  1994  00FF61  56                 	db	86	;'V'
  1995  00FF62  31                 	db	49	;'1'
  1996  00FF63  3A                 	db	58	;':'
  1997  00FF64  20                 	db	32
  1998  00FF65  25                 	db	37
  1999  00FF66  64                 	db	100	;'d'
  2000  00FF67  0D                 	db	13
  2001  00FF68  0A                 	db	10
  2002  00FF69  00                 	db	0
  2003  00FF6A                     STR_49:
  2004                           
  2005                           ; BSR set to: 2
  2006  00FF6A  0D                 	db	13
  2007  00FF6B  0A                 	db	10
  2008  00FF6C  49                 	db	73	;'I'
  2009  00FF6D  4E                 	db	78	;'N'
  2010  00FF6E  49                 	db	73	;'I'
  2011  00FF6F  54                 	db	84	;'T'
  2012  00FF70  3A                 	db	58	;':'
  2013  00FF71  20                 	db	32
  2014  00FF72  25                 	db	37
  2015  00FF73  64                 	db	100	;'d'
  2016  00FF74  0D                 	db	13
  2017  00FF75  0A                 	db	10
  2018  00FF76  00                 	db	0
  2019  00FF77                     STR_1:
  2020                           
  2021                           ; BSR set to: 2
  2022  00FF77  1B                 	db	27
  2023  00FF78  63                 	db	99	;'c'
  2024  00FF79  20                 	db	32
  2025  00FF7A  4F                 	db	79	;'O'
  2026  00FF7B  78                 	db	120	;'x'
  2027  00FF7C  79                 	db	121	;'y'
  2028  00FF7D  76                 	db	118	;'v'
  2029  00FF7E  69                 	db	105	;'i'
  2030  00FF7F  74                 	db	116	;'t'
  2031  00FF80  61                 	db	97	;'a'
  2032  00FF81  0D                 	db	13
  2033  00FF82  0A                 	db	10
  2034  00FF83  00                 	db	0
  2035  00FF84                     STR_31:
  2036                           
  2037                           ; BSR set to: 2
  2038  00FF84  45                 	db	69	;'E'
  2039  00FF85  41                 	db	65	;'A'
  2040  00FF86  49                 	db	73	;'I'
  2041  00FF87  3A                 	db	58	;':'
  2042  00FF88  20                 	db	32
  2043  00FF89  25                 	db	37
  2044  00FF8A  30                 	db	48	;'0'
  2045  00FF8B  32                 	db	50	;'2'
  2046  00FF8C  58                 	db	88	;'X'
  2047  00FF8D  0D                 	db	13
  2048  00FF8E  0A                 	db	10
  2049  00FF8F  00                 	db	0
  2050  00FF90                     STR_48:
  2051                           
  2052                           ; BSR set to: 2
  2053  00FF90  0D                 	db	13
  2054  00FF91  0A                 	db	10
  2055  00FF92  53                 	db	83	;'S'
  2056  00FF93  56                 	db	86	;'V'
  2057  00FF94  31                 	db	49	;'1'
  2058  00FF95  3A                 	db	58	;':'
  2059  00FF96  20                 	db	32
  2060  00FF97  25                 	db	37
  2061  00FF98  64                 	db	100	;'d'
  2062  00FF99  0D                 	db	13
  2063  00FF9A  0A                 	db	10
  2064  00FF9B  00                 	db	0
  2065  00FF9C                     STR_19:
  2066                           
  2067                           ; BSR set to: 2
  2068  00FF9C  42                 	db	66	;'B'
  2069  00FF9D  43                 	db	67	;'C'
  2070  00FF9E  4D                 	db	77	;'M'
  2071  00FF9F  50                 	db	80	;'P'
  2072  00FFA0  48                 	db	72	;'H'
  2073  00FFA1  5F                 	db	95	;'_'
  2074  00FFA2  43                 	db	67	;'C'
  2075  00FFA3  6E                 	db	110	;'n'
  2076  00FFA4  74                 	db	116	;'t'
  2077  00FFA5  0D                 	db	13
  2078  00FFA6  0A                 	db	10
  2079  00FFA7  00                 	db	0
  2080  00FFA8                     STR_43:
  2081                           
  2082                           ; BSR set to: 2
  2083  00FFA8  20                 	db	32
  2084  00FFA9  28                 	db	40
  2085  00FFAA  45                 	db	69	;'E'
  2086  00FFAB  72                 	db	114	;'r'
  2087  00FFAC  72                 	db	114	;'r'
  2088  00FFAD  44                 	db	68	;'D'
  2089  00FFAE  52                 	db	82	;'R'
  2090  00FFAF  29                 	db	41
  2091  00FFB0  20                 	db	32
  2092  00FFB1  00                 	db	0
  2093  00FFB2                     STR_13:
  2094                           
  2095                           ; BSR set to: 2
  2096  00FFB2  25                 	db	37
  2097  00FFB3  63                 	db	99	;'c'
  2098  00FFB4  20                 	db	32
  2099  00FFB5  25                 	db	37
  2100  00FFB6  31                 	db	49	;'1'
  2101  00FFB7  34                 	db	52	;'4'
  2102  00FFB8  73                 	db	115	;'s'
  2103  00FFB9  00                 	db	0
  2104  00FFBA                     STR_23:
  2105                           
  2106                           ; BSR set to: 2
  2107  00FFBA  0D                 	db	13
  2108  00FFBB  0A                 	db	10
  2109  00FFBC  54                 	db	84	;'T'
  2110  00FFBD  41                 	db	65	;'A'
  2111  00FFBE  3A                 	db	58	;':'
  2112  00FFBF  20                 	db	32
  2113  00FFC0  00                 	db	0
  2114  00FFC1                     STR_25:
  2115                           
  2116                           ; BSR set to: 2
  2117  00FFC1  4D                 	db	77	;'M'
  2118  00FFC2  55                 	db	85	;'U'
  2119  00FFC3  54                 	db	84	;'T'
  2120  00FFC4  45                 	db	69	;'E'
  2121  00FFC5  00                 	db	0
  2122  00FFC6                     STR_15:
  2123                           
  2124                           ; BSR set to: 2
  2125  00FFC6  5F                 	db	95	;'_'
  2126  00FFC7  44                 	db	68	;'D'
  2127  00FFC8  42                 	db	66	;'B'
  2128  00FFC9  5F                 	db	95	;'_'
  2129  00FFCA  00                 	db	0
  2130  00FFCB                     STR_16:
  2131                           
  2132                           ; BSR set to: 2
  2133  00FFCB  5F                 	db	95	;'_'
  2134  00FFCC  45                 	db	69	;'E'
  2135  00FFCD  42                 	db	66	;'B'
  2136  00FFCE  5F                 	db	95	;'_'
  2137  00FFCF  00                 	db	0
  2138  00FFD0                     STR_55:
  2139                           
  2140                           ; BSR set to: 2
  2141  00FFD0  26                 	db	38
  2142  00FFD1  0D                 	db	13
  2143  00FFD2  0A                 	db	10
  2144  00FFD3  00                 	db	0
  2145  00FFD4                     STR_54:
  2146                           
  2147                           ; BSR set to: 2
  2148  00FFD4  45                 	db	69	;'E'
  2149  00FFD5  43                 	db	67	;'C'
  2150  00FFD6  20                 	db	32
  2151  00FFD7  00                 	db	0
  2152  00FFD8                     STR_42:
  2153                           
  2154                           ; BSR set to: 2
  2155  00FFD8  30                 	db	48	;'0'
  2156  00FFD9  0D                 	db	13
  2157  00FFDA  0A                 	db	10
  2158  00FFDB  00                 	db	0
  2159  00FFDC                     STR_46:
  2160                           
  2161                           ; BSR set to: 2
  2162  00FFDC  50                 	db	80	;'P'
  2163  00FFDD  0D                 	db	13
  2164  00FFDE  0A                 	db	10
  2165  00FFDF  00                 	db	0
  2166  00FFE0                     STR_45:
  2167                           
  2168                           ; BSR set to: 2
  2169  00FFE0  65                 	db	101	;'e'
  2170  00FFE1  0D                 	db	13
  2171  00FFE2  0A                 	db	10
  2172  00FFE3  00                 	db	0
  2173  00FFE4                     STR_32:
  2174                           
  2175                           ; BSR set to: 2
  2176  00FFE4  6F                 	db	111	;'o'
  2177  00FFE5  0D                 	db	13
  2178  00FFE6  0A                 	db	10
  2179  00FFE7  00                 	db	0
  2180  00FFE8                     STR_30:
  2181                           
  2182                           ; BSR set to: 2
  2183  00FFE8  41                 	db	65	;'A'
  2184  00FFE9  0D                 	db	13
  2185  00FFEA  0A                 	db	10
  2186  00FFEB  00                 	db	0
  2187  00FFEC                     STR_3:
  2188                           
  2189                           ; BSR set to: 2
  2190  00FFEC  6D                 	db	109	;'m'
  2191  00FFED  0D                 	db	13
  2192  00FFEE  0A                 	db	10
  2193  00FFEF  00                 	db	0
  2194  00FFF0                     STR_26:
  2195                           
  2196                           ; BSR set to: 2
  2197  00FFF0  48                 	db	72	;'H'
  2198  00FFF1  69                 	db	105	;'i'
  2199  00FFF2  00                 	db	0
  2200  00FFF3                     STR_28:
  2201                           
  2202                           ; BSR set to: 2
  2203  00FFF3  41                 	db	65	;'A'
  2204  00FFF4  6C                 	db	108	;'l'
  2205  00FFF5  00                 	db	0
  2206  00FFF6                     STR_27:
  2207                           
  2208                           ; BSR set to: 2
  2209  00FFF6  4D                 	db	77	;'M'
  2210  00FFF7  75                 	db	117	;'u'
  2211  00FFF8  00                 	db	0
  2212  00FFF9                     STR_11:
  2213                           
  2214                           ; BSR set to: 2
  2215  00FFF9  43                 	db	67	;'C'
  2216  00FFFA  61                 	db	97	;'a'
  2217  00FFFB  00                 	db	0
  2218  00FFFC                     STR_44:
  2219                           
  2220                           ; BSR set to: 2
  2221  00FFFC  3D                 	db	61	;'='
  2222  00FFFD  00                 	db	0
  2223  0000                     
  2224                           ; #config settings
  2225  00FFFE  00                 	db	0	; dummy byte at the end
  2226  0000                     
  2227                           	psect	cinit
  2228  007BE8                     __pcinit:
  2229                           	opt callstack 0
  2230  007BE8                     start_initialization:
  2231                           	opt callstack 0
  2232  007BE8                     __initialization:
  2233                           	opt callstack 0
  2234                           
  2235                           ; Initialize objects allocated to BIGRAM (399 bytes)
  2236                           ; load TBLPTR registers with __pidataBIGRAM
  2237  007BE8  0E00               	movlw	low __pidataBIGRAM
  2238  007BEA  6EF6               	movwf	tblptrl,c
  2239  007BEC  0E4D               	movlw	high __pidataBIGRAM
  2240  007BEE  6EF7               	movwf	tblptrh,c
  2241  007BF0  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  2242  007BF2  6EF8               	movwf	tblptru,c
  2243  007BF4  EE02  F114         	lfsr	0,__pdataBIGRAM
  2244  007BF8  EE10 F18F          	lfsr	1,399
  2245  007BFC                     copy_data0:
  2246  007BFC  0009               	tblrd		*+
  2247  007BFE  006F FFD7 FFEE     	movff	tablat,postinc0
  2248  007C04  50E5               	movf	postdec1,w,c
  2249  007C06  50E1               	movf	fsr1l,w,c
  2250  007C08  E1F9               	bnz	copy_data0
  2251  007C0A  50E2               	movf	fsr1h,w,c
  2252  007C0C  E1F7               	bnz	copy_data0
  2253                           
  2254                           ; Initialize objects allocated to BANK2 (29 bytes)
  2255                           ; load TBLPTR registers with __pidataBANK2
  2256  007C0E  0E76               	movlw	low __pidataBANK2
  2257  007C10  6EF6               	movwf	tblptrl,c
  2258  007C12  0EA8               	movlw	high __pidataBANK2
  2259  007C14  6EF7               	movwf	tblptrh,c
  2260  007C16  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2261  007C18  6EF8               	movwf	tblptru,c
  2262  007C1A  EE00  F2BC         	lfsr	0,__pdataBANK2
  2263  007C1E  EE10 F01D          	lfsr	1,29
  2264  007C22                     copy_data1:
  2265  007C22  0009               	tblrd		*+
  2266  007C24  006F FFD7 FFEE     	movff	tablat,postinc0
  2267  007C2A  50E5               	movf	postdec1,w,c
  2268  007C2C  50E1               	movf	fsr1l,w,c
  2269  007C2E  E1F9               	bnz	copy_data1
  2270                           
  2271                           ; Initialize objects allocated to BANK0 (4 bytes)
  2272                           ; load TBLPTR registers with __pidataBANK0
  2273  007C30  0ED8               	movlw	low __pidataBANK0
  2274  007C32  6EF6               	movwf	tblptrl,c
  2275  007C34  0EAF               	movlw	high __pidataBANK0
  2276  007C36  6EF7               	movwf	tblptrh,c
  2277  007C38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2278  007C3A  6EF8               	movwf	tblptru,c
  2279  007C3C  EE00  F0FC         	lfsr	0,__pdataBANK0
  2280  007C40  EE10 F004          	lfsr	1,4
  2281  007C44                     copy_data2:
  2282  007C44  0009               	tblrd		*+
  2283  007C46  006F FFD7 FFEE     	movff	tablat,postinc0
  2284  007C4C  50E5               	movf	postdec1,w,c
  2285  007C4E  50E1               	movf	fsr1l,w,c
  2286  007C50  E1F9               	bnz	copy_data2
  2287                           
  2288                           ; Clear objects allocated to BIGRAM (1200 bytes)
  2289  007C52  EE01  F064         	lfsr	0,__pbssBIGRAM
  2290  007C56  EE11 F0B0          	lfsr	1,1200
  2291  007C5A                     clear_0:
  2292  007C5A  6AEE               	clrf	postinc0,c
  2293  007C5C  50E5               	movf	postdec1,w,c
  2294  007C5E  50E1               	movf	fsr1l,w,c
  2295  007C60  E1FC               	bnz	clear_0
  2296  007C62  50E2               	movf	fsr1h,w,c
  2297  007C64  E1FA               	bnz	clear_0
  2298                           
  2299                           ; Clear objects allocated to BANK4 (100 bytes)
  2300  007C66  EE01  F000         	lfsr	0,__pbssBANK4
  2301  007C6A  0E64               	movlw	100
  2302  007C6C                     clear_1:
  2303  007C6C  6AEE               	clrf	postinc0,c
  2304  007C6E  06E8               	decf	wreg,f,c
  2305  007C70  E1FD               	bnz	clear_1
  2306                           
  2307                           ; Clear objects allocated to BANK3 (249 bytes)
  2308  007C72  EE00  F300         	lfsr	0,__pbssBANK3
  2309  007C76  0EF9               	movlw	249
  2310  007C78                     clear_2:
  2311  007C78  6AEE               	clrf	postinc0,c
  2312  007C7A  06E8               	decf	wreg,f,c
  2313  007C7C  E1FD               	bnz	clear_2
  2314                           
  2315                           ; Clear objects allocated to BANK2 (188 bytes)
  2316  007C7E  EE00  F200         	lfsr	0,__pbssBANK2
  2317  007C82  0EBC               	movlw	188
  2318  007C84                     clear_3:
  2319  007C84  6AEE               	clrf	postinc0,c
  2320  007C86  06E8               	decf	wreg,f,c
  2321  007C88  E1FD               	bnz	clear_3
  2322                           
  2323                           ; Clear objects allocated to BANK1 (53 bytes)
  2324  007C8A  EE00  F1C7         	lfsr	0,__pbssBANK1
  2325  007C8E  0E35               	movlw	53
  2326  007C90                     clear_4:
  2327  007C90  6AEE               	clrf	postinc0,c
  2328  007C92  06E8               	decf	wreg,f,c
  2329  007C94  E1FD               	bnz	clear_4
  2330                           
  2331                           ; Clear objects allocated to BANK0 (52 bytes)
  2332  007C96  EE00  F0C8         	lfsr	0,__pbssBANK0
  2333  007C9A  0E34               	movlw	52
  2334  007C9C                     clear_5:
  2335  007C9C  6AEE               	clrf	postinc0,c
  2336  007C9E  06E8               	decf	wreg,f,c
  2337  007CA0  E1FD               	bnz	clear_5
  2338                           
  2339                           ;
  2340                           ; Setup IVTBASE
  2341                           ;
  2342  007CA2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2343  007CA4  6ED5               	movwf	213,c
  2344  007CA6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2345  007CA8  6ED6               	movwf	214,c
  2346  007CAA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2347  007CAC  6ED7               	movwf	215,c
  2348  007CAE                     end_of_initialization:
  2349                           	opt callstack 0
  2350  007CAE                     __end_of__initialization:
  2351                           	opt callstack 0
  2352  007CAE  0100               	movlb	0
  2353  007CB0  EFCE  F016         	goto	_main	;jump to C main() function
  2354                           
  2355                           	psect	bssBANK0
  2356  0000C8                     __pbssBANK0:
  2357                           	opt callstack 0
  2358  0000C8                     _tt:
  2359                           	opt callstack 0
  2360  0000C8                     	ds	4
  2361  0000CC                     _cntByte:
  2362                           	opt callstack 0
  2363  0000CC                     	ds	2
  2364  0000CE                     _prSlow:
  2365                           	opt callstack 0
  2366  0000CE                     	ds	2
  2367  0000D0                     _numtde:
  2368                           	opt callstack 0
  2369  0000D0                     	ds	2
  2370  0000D2                     _numtdi:
  2371                           	opt callstack 0
  2372  0000D2                     	ds	2
  2373  0000D4                     _minPressure:
  2374                           	opt callstack 0
  2375  0000D4                     	ds	2
  2376  0000D6                     _pmax:
  2377                           	opt callstack 0
  2378  0000D6                     	ds	2
  2379  0000D8                     _tt4:
  2380                           	opt callstack 0
  2381  0000D8                     	ds	2
  2382  0000DA                     _tt2:
  2383                           	opt callstack 0
  2384  0000DA                     	ds	2
  2385  0000DC                     _tt1:
  2386                           	opt callstack 0
  2387  0000DC                     	ds	2
  2388  0000DE                     _histSec:
  2389                           	opt callstack 0
  2390  0000DE                     	ds	2
  2391  0000E0                     _ipBelowSetAlarm:
  2392                           	opt callstack 0
  2393  0000E0                     	ds	2
  2394  0000E2                     _epAboveSetAlarm:
  2395                           	opt callstack 0
  2396  0000E2                     	ds	2
  2397  0000E4                     _epBelowSetAlarm:
  2398                           	opt callstack 0
  2399  0000E4                     	ds	2
  2400  0000E6                     _ledCnt:
  2401                           	opt callstack 0
  2402  0000E6                     	ds	2
  2403  0000E8                     _uart1TxTail:
  2404                           	opt callstack 0
  2405  0000E8                     	ds	2
  2406  0000EA                     _I2C2_InterruptHandler:
  2407                           	opt callstack 0
  2408  0000EA                     	ds	2
  2409  0000EC                     _run:
  2410                           	opt callstack 0
  2411  0000EC                     	ds	1
  2412  0000ED                     SetSV1@last:
  2413                           	opt callstack 0
  2414  0000ED                     	ds	1
  2415  0000EE                     SetAlarmSV1@last:
  2416                           	opt callstack 0
  2417  0000EE                     	ds	1
  2418  0000EF                     _disableAlarmSV1:
  2419                           	opt callstack 0
  2420  0000EF                     	ds	1
  2421  0000F0                     _enableAlarms:
  2422                           	opt callstack 0
  2423  0000F0                     	ds	1
  2424  0000F1                     MonitorFailAlarm@monitorFailAlarm5V:
  2425                           	opt callstack 0
  2426  0000F1                     	ds	1
  2427  0000F2                     _controlFailAlarm:
  2428                           	opt callstack 0
  2429  0000F2                     	ds	1
  2430  0000F3                     _batteryFailAlarm:
  2431                           	opt callstack 0
  2432  0000F3                     	ds	1
  2433  0000F4                     _detected:
  2434                           	opt callstack 0
  2435  0000F4                     	ds	1
  2436  0000F5                     _on:
  2437                           	opt callstack 0
  2438  0000F5                     	ds	1
  2439  0000F6                     _alarmState:
  2440                           	opt callstack 0
  2441  0000F6                     	ds	1
  2442  0000F7                     _ledType:
  2443                           	opt callstack 0
  2444  0000F7                     	ds	1
  2445  0000F8                     _histButton:
  2446                           	opt callstack 0
  2447  0000F8                     	ds	1
  2448  0000F9                     _muteButton:
  2449                           	opt callstack 0
  2450  0000F9                     	ds	1
  2451  0000FA                     _enable:
  2452                           	opt callstack 0
  2453  0000FA                     	ds	1
  2454  0000FB                     _calibrate:
  2455                           	opt callstack 0
  2456  0000FB                     	ds	1
  2457                           
  2458                           	psect	dataBANK0
  2459  0000FC                     __pdataBANK0:
  2460                           	opt callstack 0
  2461  0000FC                     _monitorSV1:
  2462                           	opt callstack 0
  2463  0000FC                     	ds	1
  2464  0000FD                     _controlSV1:
  2465                           	opt callstack 0
  2466  0000FD                     	ds	1
  2467  0000FE                     _batterySV1:
  2468                           	opt callstack 0
  2469  0000FE                     	ds	1
  2470  0000FF                     _veryHighSV1:
  2471                           	opt callstack 0
  2472  0000FF                     	ds	1
  2473                           
  2474                           	psect	bssBANK1
  2475  0001C7                     __pbssBANK1:
  2476                           	opt callstack 0
  2477  0001C7                     _width:
  2478                           	opt callstack 0
  2479  0001C7                     	ds	2
  2480  0001C9                     _prec:
  2481                           	opt callstack 0
  2482  0001C9                     	ds	2
  2483  0001CB                     _flags:
  2484                           	opt callstack 0
  2485  0001CB                     	ds	2
  2486  0001CD                     _loLimit:
  2487                           	opt callstack 0
  2488  0001CD                     	ds	2
  2489  0001CF                     _hiLimit:
  2490                           	opt callstack 0
  2491  0001CF                     	ds	2
  2492  0001D1                     _lrpe:
  2493                           	opt callstack 0
  2494  0001D1                     	ds	2
  2495  0001D3                     _lrpi:
  2496                           	opt callstack 0
  2497  0001D3                     	ds	2
  2498  0001D5                     _pLow:
  2499                           	opt callstack 0
  2500  0001D5                     	ds	2
  2501  0001D7                     _pHigh:
  2502                           	opt callstack 0
  2503  0001D7                     	ds	2
  2504  0001D9                     _pe:
  2505                           	opt callstack 0
  2506  0001D9                     	ds	2
  2507  0001DB                     _pi:
  2508                           	opt callstack 0
  2509  0001DB                     	ds	2
  2510  0001DD                     _tde:
  2511                           	opt callstack 0
  2512  0001DD                     	ds	2
  2513  0001DF                     _tdi:
  2514                           	opt callstack 0
  2515  0001DF                     	ds	2
  2516  0001E1                     _tt3:
  2517                           	opt callstack 0
  2518  0001E1                     	ds	2
  2519  0001E3                     _volume:
  2520                           	opt callstack 0
  2521  0001E3                     	ds	2
  2522  0001E5                     _state:
  2523                           	opt callstack 0
  2524  0001E5                     	ds	2
  2525  0001E7                     _targetLow:
  2526                           	opt callstack 0
  2527  0001E7                     	ds	2
  2528  0001E9                     _targetHigh:
  2529                           	opt callstack 0
  2530  0001E9                     	ds	2
  2531  0001EB                     _currentChannel:
  2532                           	opt callstack 0
  2533  0001EB                     	ds	2
  2534  0001ED                     _hist:
  2535                           	opt callstack 0
  2536  0001ED                     	ds	2
  2537  0001EF                     _muteSec:
  2538                           	opt callstack 0
  2539  0001EF                     	ds	2
  2540  0001F1                     _uart1TxHead:
  2541                           	opt callstack 0
  2542  0001F1                     	ds	2
  2543  0001F3                     _alarmStep:
  2544                           	opt callstack 0
  2545  0001F3                     	ds	1
  2546  0001F4                     _LED:
  2547                           	opt callstack 0
  2548  0001F4                     	ds	1
  2549  0001F5                     _uart1RxCount:
  2550                           	opt callstack 0
  2551  0001F5                     	ds	1
  2552  0001F6                     _uart1RxTail:
  2553                           	opt callstack 0
  2554  0001F6                     	ds	1
  2555  0001F7                     _uart1RxHead:
  2556                           	opt callstack 0
  2557  0001F7                     	ds	1
  2558  0001F8                     _adcVOffset:
  2559                           	opt callstack 0
  2560  0001F8                     	ds	2
  2561  0001FA                     _adcOffset:
  2562                           	opt callstack 0
  2563  0001FA                     	ds	2
  2564                           
  2565                           	psect	bssBANK2
  2566  000200                     __pbssBANK2:
  2567                           	opt callstack 0
  2568  000200                     _msg:
  2569                           	opt callstack 0
  2570  000200                     	ds	10
  2571  00020A                     _uart1RxStatusBuffer:
  2572                           	opt callstack 0
  2573  00020A                     	ds	8
  2574  000212                     _uart1RxBuffer:
  2575                           	opt callstack 0
  2576  000212                     	ds	8
  2577  00021A                     _pLowAcc:
  2578                           	opt callstack 0
  2579  00021A                     	ds	4
  2580  00021E                     _pHighAcc:
  2581                           	opt callstack 0
  2582  00021E                     	ds	4
  2583  000222                     _volumeAcc:
  2584                           	opt callstack 0
  2585  000222                     	ds	4
  2586  000226                     main@cnt:
  2587                           	opt callstack 0
  2588  000226                     	ds	4
  2589  00022A                     _nout:
  2590                           	opt callstack 0
  2591  00022A                     	ds	2
  2592  00022C                     ControllerTimerHandler@cnt:
  2593                           	opt callstack 0
  2594  00022C                     	ds	2
  2595  00022E                     ControllerTimerHandler@errors:
  2596                           	opt callstack 0
  2597  00022E                     	ds	2
  2598  000230                     UpdateState@cnt:
  2599                           	opt callstack 0
  2600  000230                     	ds	2
  2601  000232                     _spr:
  2602                           	opt callstack 0
  2603  000232                     	ds	2
  2604  000234                     MonitorPressureTask@cnt2:
  2605                           	opt callstack 0
  2606  000234                     	ds	2
  2607  000236                     MonitorPressureTask@ecnt:
  2608                           	opt callstack 0
  2609  000236                     	ds	2
  2610  000238                     MonitorPressureTask@nt_4874:
  2611                           	opt callstack 0
  2612  000238                     	ds	2
  2613  00023A                     MonitorPressureTask@cnt:
  2614                           	opt callstack 0
  2615  00023A                     	ds	2
  2616  00023C                     	ds	2
  2617  00023E                     _prFast:
  2618                           	opt callstack 0
  2619  00023E                     	ds	2
  2620  000240                     _prSlowNumStable:
  2621                           	opt callstack 0
  2622  000240                     	ds	2
  2623  000242                     _prSlowDev:
  2624                           	opt callstack 0
  2625  000242                     	ds	2
  2626  000244                     _count:
  2627                           	opt callstack 0
  2628  000244                     	ds	2
  2629  000246                     _rpe:
  2630                           	opt callstack 0
  2631  000246                     	ds	2
  2632  000248                     _rpi:
  2633                           	opt callstack 0
  2634  000248                     	ds	2
  2635  00024A                     _numLow:
  2636                           	opt callstack 0
  2637  00024A                     	ds	2
  2638  00024C                     _numHigh:
  2639                           	opt callstack 0
  2640  00024C                     	ds	2
  2641  00024E                     _alarmMaxPressure:
  2642                           	opt callstack 0
  2643  00024E                     	ds	2
  2644  000250                     _maxPressure:
  2645                           	opt callstack 0
  2646  000250                     	ds	2
  2647  000252                     _pmin:
  2648                           	opt callstack 0
  2649  000252                     	ds	2
  2650  000254                     _bpm:
  2651                           	opt callstack 0
  2652  000254                     	ds	2
  2653  000256                     _te:
  2654                           	opt callstack 0
  2655  000256                     	ds	2
  2656  000258                     _ti:
  2657                           	opt callstack 0
  2658  000258                     	ds	2
  2659  00025A                     _ttAlarm:
  2660                           	opt callstack 0
  2661  00025A                     	ds	2
  2662  00025C                     _ttNoAlarm:
  2663                           	opt callstack 0
  2664  00025C                     	ds	2
  2665  00025E                     _tt34:
  2666                           	opt callstack 0
  2667  00025E                     	ds	2
  2668  000260                     _tt12:
  2669                           	opt callstack 0
  2670  000260                     	ds	2
  2671  000262                     _ttExt:
  2672                           	opt callstack 0
  2673  000262                     	ds	2
  2674  000264                     _volumeMin:
  2675                           	opt callstack 0
  2676  000264                     	ds	2
  2677  000266                     _volumeMax:
  2678                           	opt callstack 0
  2679  000266                     	ds	2
  2680  000268                     _targetBp:
  2681                           	opt callstack 0
  2682  000268                     	ds	2
  2683  00026A                     _targetPmax:
  2684                           	opt callstack 0
  2685  00026A                     	ds	2
  2686  00026C                     AdcHandler@cnt:
  2687                           	opt callstack 0
  2688  00026C                     	ds	2
  2689  00026E                     AlarmHandler@cnt:
  2690                           	opt callstack 0
  2691  00026E                     	ds	2
  2692  000270                     AlarmCheckTask@current:
  2693                           	opt callstack 0
  2694  000270                     	ds	2
  2695  000272                     _displayStatus:
  2696                           	opt callstack 0
  2697  000272                     	ds	2
  2698  000274                     	ds	2
  2699  000276                     HighPressureAlarmLow@count:
  2700                           	opt callstack 0
  2701  000276                     	ds	2
  2702  000278                     MonitorFailAlarm@cnt5v:
  2703                           	opt callstack 0
  2704  000278                     	ds	2
  2705  00027A                     BatteryFailAlarm@timeFail:
  2706                           	opt callstack 0
  2707  00027A                     	ds	2
  2708  00027C                     BatteryFailAlarm@timeBelow10:
  2709                           	opt callstack 0
  2710  00027C                     	ds	2
  2711  00027E                     BatteryFailAlarm@timeBattery:
  2712                           	opt callstack 0
  2713  00027E                     	ds	2
  2714  000280                     _ipAboveSetAlarm:
  2715                           	opt callstack 0
  2716  000280                     	ds	2
  2717  000282                     BuzzerTask@noDetections:
  2718                           	opt callstack 0
  2719  000282                     	ds	2
  2720  000284                     ButtonTask@cnt:
  2721                           	opt callstack 0
  2722  000284                     	ds	2
  2723  000286                     AlarmDisplay@cnt:
  2724                           	opt callstack 0
  2725  000286                     	ds	2
  2726  000288                     ValueDisplay@cnt:
  2727                           	opt callstack 0
  2728  000288                     	ds	2
  2729  00028A                     _CMP1_InterruptHandler:
  2730                           	opt callstack 0
  2731  00028A                     	ds	2
  2732  00028C                     _I2C2_SlaveWrColInterruptHandler:
  2733                           	opt callstack 0
  2734  00028C                     	ds	2
  2735  00028E                     _I2C2_SlaveBusColInterruptHandler:
  2736                           	opt callstack 0
  2737  00028E                     	ds	2
  2738  000290                     _I2C2_SlaveAddrInterruptHandler:
  2739                           	opt callstack 0
  2740  000290                     	ds	2
  2741  000292                     _I2C2_SlaveStopInterruptHandler:
  2742                           	opt callstack 0
  2743  000292                     	ds	2
  2744  000294                     _I2C2_SlaveWrInterruptHandler:
  2745                           	opt callstack 0
  2746  000294                     	ds	2
  2747  000296                     _I2C2_SlaveRdInterruptHandler:
  2748                           	opt callstack 0
  2749  000296                     	ds	2
  2750  000298                     UpdateState@old:
  2751                           	opt callstack 0
  2752  000298                     	ds	1
  2753  000299                     controller@volumeControl:
  2754                           	opt callstack 0
  2755  000299                     	ds	1
  2756  00029A                     _init:
  2757                           	opt callstack 0
  2758  00029A                     	ds	1
  2759  00029B                     _commandReceived:
  2760                           	opt callstack 0
  2761  00029B                     	ds	1
  2762  00029C                     MonitorPressureTask@down:
  2763                           	opt callstack 0
  2764  00029C                     	ds	1
  2765  00029D                     MonitorPressureTask@measPe:
  2766                           	opt callstack 0
  2767  00029D                     	ds	1
  2768  00029E                     MonitorPressureTask@measPi:
  2769                           	opt callstack 0
  2770  00029E                     	ds	1
  2771  00029F                     _normalSV1:
  2772                           	opt callstack 0
  2773  00029F                     	ds	1
  2774  0002A0                     _alarmSV1:
  2775                           	opt callstack 0
  2776  0002A0                     	ds	1
  2777  0002A1                     _volumeControl:
  2778                           	opt callstack 0
  2779  0002A1                     	ds	1
  2780  0002A2                     monitor@enable:
  2781                           	opt callstack 0
  2782  0002A2                     	ds	1
  2783  0002A3                     _alarmCheck:
  2784                           	opt callstack 0
  2785  0002A3                     	ds	1
  2786  0002A4                     _noPowerSupplyAlarm:
  2787                           	opt callstack 0
  2788  0002A4                     	ds	1
  2789  0002A5                     _vAboveMaxAlarm:
  2790                           	opt callstack 0
  2791  0002A5                     	ds	1
  2792  0002A6                     _vBelowMinAlarm:
  2793                           	opt callstack 0
  2794  0002A6                     	ds	1
  2795  0002A7                     _tdeTooLongAlarm:
  2796                           	opt callstack 0
  2797  0002A7                     	ds	1
  2798  0002A8                     _tdiTooLongAlarm:
  2799                           	opt callstack 0
  2800  0002A8                     	ds	1
  2801  0002A9                     _baterryLowAlarmHigh:
  2802                           	opt callstack 0
  2803  0002A9                     	ds	1
  2804  0002AA                     _baterryLowAlarmMed:
  2805                           	opt callstack 0
  2806  0002AA                     	ds	1
  2807  0002AB                     _circuitFailureAlarm:
  2808                           	opt callstack 0
  2809  0002AB                     	ds	1
  2810  0002AC                     _veryHighPressureAlarmHigh:
  2811                           	opt callstack 0
  2812  0002AC                     	ds	1
  2813  0002AD                     _highPressureAlarmHigh:
  2814                           	opt callstack 0
  2815  0002AD                     	ds	1
  2816  0002AE                     _highPressureAlarmLow:
  2817                           	opt callstack 0
  2818  0002AE                     	ds	1
  2819  0002AF                     _gasFailureAlarm:
  2820                           	opt callstack 0
  2821  0002AF                     	ds	1
  2822  0002B0                     _monitorFailAlarm:
  2823                           	opt callstack 0
  2824  0002B0                     	ds	1
  2825  0002B1                     _controllerDetected:
  2826                           	opt callstack 0
  2827  0002B1                     	ds	1
  2828  0002B2                     _checkController:
  2829                           	opt callstack 0
  2830  0002B2                     	ds	1
  2831  0002B3                     _buzzerState:
  2832                           	opt callstack 0
  2833  0002B3                     	ds	1
  2834  0002B4                     _I2C2_on:
  2835                           	opt callstack 0
  2836  0002B4                     	ds	1
  2837  0002B5                     _i2c2SlaveAddr:
  2838                           	opt callstack 0
  2839  0002B5                     	ds	1
  2840  0002B6                     _i2c2RdData:
  2841                           	opt callstack 0
  2842  0002B6                     	ds	1
  2843  0002B7                     _i2c2WrData:
  2844                           	opt callstack 0
  2845  0002B7                     	ds	1
  2846  0002B8                     _i2c2State:
  2847                           	opt callstack 0
  2848  0002B8                     	ds	1
  2849  0002B9                     _uart1RxLastError:
  2850                           	opt callstack 0
  2851  0002B9                     	ds	1
  2852  0002BA                     _bp:
  2853                           	opt callstack 0
  2854  0002BA                     	ds	2
  2855                           
  2856                           	psect	dataBANK2
  2857  0002BC                     __pdataBANK2:
  2858                           	opt callstack 0
  2859  0002BC                     _adcChannels:
  2860                           	opt callstack 0
  2861  0002BC                     	ds	20
  2862  0002D0                     stoa@F1144:
  2863                           	opt callstack 0
  2864  0002D0                     	ds	7
  2865  0002D7                     _alarmPmax:
  2866                           	opt callstack 0
  2867  0002D7                     	ds	2
  2868                           
  2869                           	psect	bssBANK3
  2870  000300                     __pbssBANK3:
  2871                           	opt callstack 0
  2872  000300                     _alarms:
  2873                           	opt callstack 0
  2874  000300                     	ds	38
  2875  000326                     _testAlarm:
  2876                           	opt callstack 0
  2877  000326                     	ds	38
  2878  00034C                     _a:
  2879                           	opt callstack 0
  2880  00034C                     	ds	21
  2881  000361                     _tdiBuffer:
  2882                           	opt callstack 0
  2883  000361                     	ds	20
  2884  000375                     _tdeBuffer:
  2885                           	opt callstack 0
  2886  000375                     	ds	20
  2887  000389                     _dbuf:
  2888                           	opt callstack 0
  2889  000389                     	ds	32
  2890  0003A9                     _msg4:
  2891                           	opt callstack 0
  2892  0003A9                     	ds	20
  2893  0003BD                     _msg3:
  2894                           	opt callstack 0
  2895  0003BD                     	ds	20
  2896  0003D1                     _msg2:
  2897                           	opt callstack 0
  2898  0003D1                     	ds	20
  2899  0003E5                     _msg1:
  2900                           	opt callstack 0
  2901  0003E5                     	ds	20
  2902                           
  2903                           	psect	bssBANK4
  2904  000400                     __pbssBANK4:
  2905                           	opt callstack 0
  2906  000400                     _prFastBuffer:
  2907                           	opt callstack 0
  2908  000400                     	ds	50
  2909  000432                     _prSlowBuffer:
  2910                           	opt callstack 0
  2911  000432                     	ds	50
  2912                           
  2913                           	psect	bssBIGRAM
  2914  000464                     __pbssBIGRAM:
  2915                           	opt callstack 0
  2916  000464                     _uart1TxBuffer:
  2917                           	opt callstack 0
  2918  000464                     	ds	1200
  2919                           
  2920                           	psect	dataBIGRAM
  2921  000914                     __pdataBIGRAM:
  2922                           	opt callstack 0
  2923  000914                     _alarmData:
  2924                           	opt callstack 0
  2925  000914                     	ds	399
  2926                           
  2927                           	psect	cstackBANK3
  2928  0003F9                     __pcstackBANK3:
  2929                           	opt callstack 0
  2930  0003F9                     main@ch:
  2931                           	opt callstack 0
  2932                           
  2933                           ; 1 bytes @ 0x0
  2934  0003F9                     	ds	1
  2935                           
  2936                           	psect	cstackBANK2
  2937  0002F5                     __pcstackBANK2:
  2938                           	opt callstack 0
  2939  0002F5                     
  2940                           ; 1 bytes @ 0x0
  2941  0002F5                     	ds	2
  2942  0002F7                     HistAlarm@i:
  2943                           	opt callstack 0
  2944  0002F7                     _AlarmCheckTask$6536:
  2945                           	opt callstack 0
  2946                           
  2947                           ; 2 bytes @ 0x2
  2948  0002F7                     	ds	2
  2949  0002F9                     _AlarmCheckTask$6540:
  2950                           	opt callstack 0
  2951                           
  2952                           ; 2 bytes @ 0x4
  2953  0002F9                     	ds	2
  2954  0002FB                     _AlarmCheckTask$4558:
  2955                           	opt callstack 0
  2956                           
  2957                           ; 1 bytes @ 0x6
  2958  0002FB                     	ds	1
  2959  0002FC                     AlarmCheckTask@type:
  2960                           	opt callstack 0
  2961                           
  2962                           ; 2 bytes @ 0x7
  2963  0002FC                     	ds	2
  2964  0002FE                     AlarmCheckTask@id:
  2965                           	opt callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x9
  2968  0002FE                     	ds	2
  2969                           
  2970                           	psect	cstackBANK1
  2971  000100                     __pcstackBANK1:
  2972                           	opt callstack 0
  2973  000100                     ??_INTERRUPT_InterruptManager:
  2974                           
  2975                           ; 1 bytes @ 0x0
  2976  000100                     	ds	4
  2977  000104                     ?_strlen:
  2978                           	opt callstack 0
  2979  000104                     ?_GetTdi:
  2980                           	opt callstack 0
  2981  000104                     ?_GetTde:
  2982                           	opt callstack 0
  2983  000104                     ?_GetTi:
  2984                           	opt callstack 0
  2985  000104                     ?_GetTe:
  2986                           	opt callstack 0
  2987  000104                     ?_GetBpm:
  2988                           	opt callstack 0
  2989  000104                     ?_GetVolume:
  2990                           	opt callstack 0
  2991  000104                     ?_GetSpr:
  2992                           	opt callstack 0
  2993  000104                     ?_isupper:
  2994                           	opt callstack 0
  2995  000104                     ?_isalpha:
  2996                           	opt callstack 0
  2997  000104                     ?_isdigit:
  2998                           	opt callstack 0
  2999  000104                     ?_isspace:
  3000                           	opt callstack 0
  3001  000104                     ?_islower:
  3002                           	opt callstack 0
  3003  000104                     ?___wmul:
  3004                           	opt callstack 0
  3005  000104                     ?___awmod:
  3006                           	opt callstack 0
  3007  000104                     ?___lmul:
  3008                           	opt callstack 0
  3009  000104                     ?___llmod:
  3010                           	opt callstack 0
  3011  000104                     ?___aodiv:
  3012                           	opt callstack 0
  3013  000104                     ?___aomod:
  3014                           	opt callstack 0
  3015  000104                     ADCC_StartConversion@channel:
  3016                           	opt callstack 0
  3017  000104                     TMR4_Period8BitSet@periodVal:
  3018                           	opt callstack 0
  3019  000104                     UART1_Read@readValue:
  3020                           	opt callstack 0
  3021  000104                     UART1_Write@txData:
  3022                           	opt callstack 0
  3023  000104                     I2C2_SlaveSetSlaveAddr@slaveAddr:
  3024                           	opt callstack 0
  3025  000104                     I2C2_SlaveSetSlaveMask@maskAddr:
  3026                           	opt callstack 0
  3027  000104                     LCDWriteChar@chr:
  3028                           	opt callstack 0
  3029  000104                     LCDWrite4@chr:
  3030                           	opt callstack 0
  3031  000104                     LCDWriteCmd@data:
  3032                           	opt callstack 0
  3033  000104                     SetAlarmLED@type:
  3034                           	opt callstack 0
  3035  000104                     BuzzerOn@period:
  3036                           	opt callstack 0
  3037  000104                     AlarmSet@id:
  3038                           	opt callstack 0
  3039  000104                     AlarmClear@id:
  3040                           	opt callstack 0
  3041  000104                     ADCC_SetADIInterruptHandler@InterruptHandler:
  3042                           	opt callstack 0
  3043  000104                     TMR4_SetInterruptHandler@InterruptHandler:
  3044                           	opt callstack 0
  3045  000104                     UART1_SetFramingErrorHandler@interruptHandler:
  3046                           	opt callstack 0
  3047  000104                     UART1_SetOverrunErrorHandler@interruptHandler:
  3048                           	opt callstack 0
  3049  000104                     UART1_SetErrorHandler@interruptHandler:
  3050                           	opt callstack 0
  3051  000104                     UART1_SetRxInterruptHandler@InterruptHandler:
  3052                           	opt callstack 0
  3053  000104                     UART1_SetTxInterruptHandler@InterruptHandler:
  3054                           	opt callstack 0
  3055  000104                     TMR5_SetInterruptHandler@InterruptHandler:
  3056                           	opt callstack 0
  3057  000104                     TMR0_SetInterruptHandler@InterruptHandler:
  3058                           	opt callstack 0
  3059  000104                     TMR1_SetInterruptHandler@InterruptHandler:
  3060                           	opt callstack 0
  3061  000104                     TMR6_SetInterruptHandler@InterruptHandler:
  3062                           	opt callstack 0
  3063  000104                     I2C2_SlaveSetIsrHandler@handler:
  3064                           	opt callstack 0
  3065  000104                     I2C2_SlaveSetReadIntHandler@handler:
  3066                           	opt callstack 0
  3067  000104                     I2C2_SlaveSetWriteIntHandler@handler:
  3068                           	opt callstack 0
  3069  000104                     I2C2_SlaveSetStopIntHandler@handler:
  3070                           	opt callstack 0
  3071  000104                     I2C2_SlaveSetAddrIntHandler@handler:
  3072                           	opt callstack 0
  3073  000104                     I2C2_SlaveSetWrColIntHandler@handler:
  3074                           	opt callstack 0
  3075  000104                     I2C2_SlaveSetBusColIntHandler@handler:
  3076                           	opt callstack 0
  3077  000104                     CMP1_SetIntHandler@handler:
  3078                           	opt callstack 0
  3079  000104                     ClearVars@i:
  3080                           	opt callstack 0
  3081  000104                     ___wmul@multiplier:
  3082                           	opt callstack 0
  3083  000104                     ___awmod@dividend:
  3084                           	opt callstack 0
  3085  000104                     isalpha@c:
  3086                           	opt callstack 0
  3087  000104                     isdigit@c:
  3088                           	opt callstack 0
  3089  000104                     isspace@c:
  3090                           	opt callstack 0
  3091  000104                     isupper@c:
  3092                           	opt callstack 0
  3093  000104                     strlen@s:
  3094                           	opt callstack 0
  3095  000104                     islower@c:
  3096                           	opt callstack 0
  3097  000104                     ___lmul@multiplier:
  3098                           	opt callstack 0
  3099  000104                     ___llmod@dividend:
  3100                           	opt callstack 0
  3101  000104                     ___aodiv@dividend:
  3102                           	opt callstack 0
  3103  000104                     ___aomod@dividend:
  3104                           	opt callstack 0
  3105                           
  3106                           ; 8 bytes @ 0x4
  3107  000104                     	ds	1
  3108  000105                     putch@txData:
  3109                           	opt callstack 0
  3110                           
  3111                           ; 1 bytes @ 0x5
  3112  000105                     	ds	1
  3113  000106                     ??_TMR5_Initialize:
  3114  000106                     ??_TMR1_Initialize:
  3115  000106                     ??_BuzzerTest:
  3116  000106                     ??_isupper:
  3117  000106                     ??_isalpha:
  3118  000106                     ??_isdigit:
  3119  000106                     ??_isspace:
  3120  000106                     ??_islower:
  3121  000106                     ?_fputc:
  3122                           	opt callstack 0
  3123  000106                     AnyAlarm@i:
  3124                           	opt callstack 0
  3125  000106                     AlarmInit@i:
  3126                           	opt callstack 0
  3127  000106                     ClearVars@i_4909:
  3128                           	opt callstack 0
  3129  000106                     ___wmul@multiplicand:
  3130                           	opt callstack 0
  3131  000106                     ___awmod@divisor:
  3132                           	opt callstack 0
  3133  000106                     fputc@c:
  3134                           	opt callstack 0
  3135  000106                     strlen@a:
  3136                           	opt callstack 0
  3137                           
  3138                           ; 2 bytes @ 0x6
  3139  000106                     	ds	2
  3140  000108                     ?_GetAlarmState:
  3141                           	opt callstack 0
  3142  000108                     BuzzerTest@note:
  3143                           	opt callstack 0
  3144  000108                     ___awmod@counter:
  3145                           	opt callstack 0
  3146  000108                     LCDMessage@str:
  3147                           	opt callstack 0
  3148  000108                     ___wmul@product:
  3149                           	opt callstack 0
  3150  000108                     fputc@fp:
  3151                           	opt callstack 0
  3152  000108                     ___lmul@multiplicand:
  3153                           	opt callstack 0
  3154  000108                     ___llmod@divisor:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 4 bytes @ 0x8
  3158  000108                     	ds	1
  3159  000109                     ___awmod@sign:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 1 bytes @ 0x9
  3163  000109                     	ds	1
  3164  00010A                     ??_LCDMessage:
  3165  00010A                     ??_fputc:
  3166  00010A                     ?_toupper:
  3167                           	opt callstack 0
  3168  00010A                     ?_HigherAlarm:
  3169                           	opt callstack 0
  3170  00010A                     ?_AdcSeeData:
  3171                           	opt callstack 0
  3172  00010A                     ?_AdcGetData:
  3173                           	opt callstack 0
  3174  00010A                     ?___awdiv:
  3175                           	opt callstack 0
  3176  00010A                     _isspace$5704:
  3177                           	opt callstack 0
  3178  00010A                     AdcDataReady@id:
  3179                           	opt callstack 0
  3180  00010A                     AdcSeeData@id:
  3181                           	opt callstack 0
  3182  00010A                     AdcGetData@id:
  3183                           	opt callstack 0
  3184  00010A                     ___awdiv@dividend:
  3185                           	opt callstack 0
  3186  00010A                     toupper@c:
  3187                           	opt callstack 0
  3188                           
  3189                           ; 2 bytes @ 0xA
  3190  00010A                     	ds	1
  3191  00010B                     ?_atoi:
  3192                           	opt callstack 0
  3193  00010B                     atoi@s:
  3194                           	opt callstack 0
  3195                           
  3196                           ; 2 bytes @ 0xB
  3197  00010B                     	ds	1
  3198  00010C                     ??_toupper:
  3199  00010C                     ??_HigherAlarm:
  3200  00010C                     ___llmod@counter:
  3201                           	opt callstack 0
  3202  00010C                     LCDMessage@length:
  3203                           	opt callstack 0
  3204  00010C                     AdcSeeData@data:
  3205                           	opt callstack 0
  3206  00010C                     AdcGetData@data:
  3207                           	opt callstack 0
  3208  00010C                     ___awdiv@divisor:
  3209                           	opt callstack 0
  3210  00010C                     ___lmul@product:
  3211                           	opt callstack 0
  3212  00010C                     ___aodiv@divisor:
  3213                           	opt callstack 0
  3214  00010C                     ___aomod@divisor:
  3215                           	opt callstack 0
  3216                           
  3217                           ; 8 bytes @ 0xC
  3218  00010C                     	ds	1
  3219  00010D                     ??_atoi:
  3220                           
  3221                           ; 1 bytes @ 0xD
  3222  00010D                     	ds	1
  3223  00010E                     ___awdiv@counter:
  3224                           	opt callstack 0
  3225  00010E                     LCDMessage@i:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 2 bytes @ 0xE
  3229  00010E                     	ds	1
  3230  00010F                     ?_stoa:
  3231                           	opt callstack 0
  3232  00010F                     ___awdiv@sign:
  3233                           	opt callstack 0
  3234  00010F                     stoa@fp:
  3235                           	opt callstack 0
  3236  00010F                     fputs@s:
  3237                           	opt callstack 0
  3238  00010F                     putchar@c:
  3239                           	opt callstack 0
  3240                           
  3241                           ; 2 bytes @ 0xF
  3242  00010F                     	ds	1
  3243  000110                     ?___aldiv:
  3244                           	opt callstack 0
  3245  000110                     LCDMessage1@str:
  3246                           	opt callstack 0
  3247  000110                     LCDMessage12@str1:
  3248                           	opt callstack 0
  3249  000110                     LCDMessage2@str:
  3250                           	opt callstack 0
  3251  000110                     ___awdiv@quotient:
  3252                           	opt callstack 0
  3253  000110                     _toupper$5792:
  3254                           	opt callstack 0
  3255  000110                     ___aldiv@dividend:
  3256                           	opt callstack 0
  3257                           
  3258                           ; 4 bytes @ 0x10
  3259  000110                     	ds	1
  3260  000111                     HigherAlarm@max:
  3261                           	opt callstack 0
  3262  000111                     stoa@s:
  3263                           	opt callstack 0
  3264  000111                     atoi@neg:
  3265                           	opt callstack 0
  3266  000111                     fputs@fp:
  3267                           	opt callstack 0
  3268                           
  3269                           ; 2 bytes @ 0x11
  3270  000111                     	ds	1
  3271  000112                     ?_GetIp:
  3272                           	opt callstack 0
  3273  000112                     ?_GetEp:
  3274                           	opt callstack 0
  3275  000112                     ?_GetTargetIp:
  3276                           	opt callstack 0
  3277  000112                     ?_GetTargetEp:
  3278                           	opt callstack 0
  3279  000112                     ?_GetPmax:
  3280                           	opt callstack 0
  3281  000112                     ?_GetMaxPressure:
  3282                           	opt callstack 0
  3283  000112                     LCDMessage12@str2:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 2 bytes @ 0x12
  3287  000112                     	ds	1
  3288  000113                     ??_stoa:
  3289  000113                     fputs@c:
  3290                           	opt callstack 0
  3291  000113                     HigherAlarm@i:
  3292                           	opt callstack 0
  3293  000113                     _atoi$5677:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x13
  3297  000113                     	ds	1
  3298  000114                     ??_LCDTest:
  3299  000114                     ??_GetIp:
  3300  000114                     ??_GetEp:
  3301  000114                     ___aodiv@counter:
  3302                           	opt callstack 0
  3303  000114                     ___aomod@counter:
  3304                           	opt callstack 0
  3305  000114                     GetMaxPressure@temp:
  3306                           	opt callstack 0
  3307  000114                     fputs@i:
  3308                           	opt callstack 0
  3309  000114                     ___aldiv@divisor:
  3310                           	opt callstack 0
  3311  000114                     stoa@nuls:
  3312                           	opt callstack 0
  3313                           
  3314                           ; 7 bytes @ 0x14
  3315  000114                     	ds	1
  3316  000115                     ___aodiv@sign:
  3317                           	opt callstack 0
  3318  000115                     ___aomod@sign:
  3319                           	opt callstack 0
  3320  000115                     _atoi$5679:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 2 bytes @ 0x15
  3324  000115                     	ds	1
  3325  000116                     ??_HighPressureAlarmLow:
  3326  000116                     ?_abs:
  3327                           	opt callstack 0
  3328  000116                     ?_pad:
  3329                           	opt callstack 0
  3330  000116                     pad@fp:
  3331                           	opt callstack 0
  3332  000116                     abs@a:
  3333                           	opt callstack 0
  3334  000116                     ___aodiv@quotient:
  3335                           	opt callstack 0
  3336  000116                     LCDTest@msg1:
  3337                           	opt callstack 0
  3338                           
  3339                           ; 17 bytes @ 0x16
  3340  000116                     	ds	1
  3341  000117                     _atoi$5678:
  3342                           	opt callstack 0
  3343  000117                     HighPressureAlarmLow@max:
  3344                           	opt callstack 0
  3345  000117                     _GetEp$4808:
  3346                           	opt callstack 0
  3347  000117                     _GetIp$4811:
  3348                           	opt callstack 0
  3349                           
  3350                           ; 2 bytes @ 0x17
  3351  000117                     	ds	1
  3352  000118                     ??_abs:
  3353  000118                     ___aldiv@counter:
  3354                           	opt callstack 0
  3355  000118                     pad@buf:
  3356                           	opt callstack 0
  3357  000118                     atoi@n:
  3358                           	opt callstack 0
  3359                           
  3360                           ; 2 bytes @ 0x18
  3361  000118                     	ds	1
  3362  000119                     ___aldiv@sign:
  3363                           	opt callstack 0
  3364  000119                     _GetEp$4809:
  3365                           	opt callstack 0
  3366  000119                     _GetIp$4812:
  3367                           	opt callstack 0
  3368                           
  3369                           ; 2 bytes @ 0x19
  3370  000119                     	ds	1
  3371  00011A                     pad@p:
  3372                           	opt callstack 0
  3373  00011A                     ___aldiv@quotient:
  3374                           	opt callstack 0
  3375                           
  3376                           ; 4 bytes @ 0x1A
  3377  00011A                     	ds	1
  3378  00011B                     stoa@i:
  3379                           	opt callstack 0
  3380                           
  3381                           ; 2 bytes @ 0x1B
  3382  00011B                     	ds	1
  3383  00011C                     ??_pad:
  3384                           
  3385                           ; 1 bytes @ 0x1C
  3386  00011C                     	ds	1
  3387  00011D                     pad@i:
  3388                           	opt callstack 0
  3389  00011D                     stoa@w:
  3390                           	opt callstack 0
  3391                           
  3392                           ; 2 bytes @ 0x1D
  3393  00011D                     	ds	1
  3394  00011E                     ?_SeePressure_pa:
  3395                           	opt callstack 0
  3396  00011E                     ?_SeePressureV_pa:
  3397                           	opt callstack 0
  3398  00011E                     ?_See12V:
  3399                           	opt callstack 0
  3400  00011E                     ?_See5V:
  3401                           	opt callstack 0
  3402  00011E                     ?_Get12V:
  3403                           	opt callstack 0
  3404  00011E                     ?_Get5V:
  3405                           	opt callstack 0
  3406  00011E                     ?_GetPressure_pa:
  3407                           	opt callstack 0
  3408  00011E                     ?_GetPressureV_pa:
  3409                           	opt callstack 0
  3410                           
  3411                           ; 2 bytes @ 0x1E
  3412  00011E                     	ds	1
  3413  00011F                     pad@w:
  3414                           	opt callstack 0
  3415  00011F                     stoa@cp:
  3416                           	opt callstack 0
  3417                           
  3418                           ; 2 bytes @ 0x1F
  3419  00011F                     	ds	1
  3420  000120                     ??_SeePressure_pa:
  3421  000120                     ??_SeePressureV_pa:
  3422  000120                     ??_See12V:
  3423  000120                     ??_See5V:
  3424  000120                     ??_Get12V:
  3425  000120                     ??_Get5V:
  3426  000120                     ??_GetPressure_pa:
  3427  000120                     ??_GetPressureV_pa:
  3428                           
  3429                           ; 1 bytes @ 0x20
  3430  000120                     	ds	1
  3431  000121                     ?_ctoa:
  3432                           	opt callstack 0
  3433  000121                     ?_dtoa:
  3434                           	opt callstack 0
  3435  000121                     ?_xtoa:
  3436                           	opt callstack 0
  3437  000121                     ctoa@fp:
  3438                           	opt callstack 0
  3439  000121                     dtoa@fp:
  3440                           	opt callstack 0
  3441  000121                     stoa@p:
  3442                           	opt callstack 0
  3443  000121                     xtoa@fp:
  3444                           	opt callstack 0
  3445                           
  3446                           ; 2 bytes @ 0x21
  3447  000121                     	ds	1
  3448  000122                     GetPressureV_pa@adcv:
  3449                           	opt callstack 0
  3450  000122                     SeePressureV_pa@adcv:
  3451                           	opt callstack 0
  3452  000122                     GetPressure_pa@p32:
  3453                           	opt callstack 0
  3454  000122                     SeePressure_pa@p32:
  3455                           	opt callstack 0
  3456                           
  3457                           ; 4 bytes @ 0x22
  3458  000122                     	ds	1
  3459  000123                     ctoa@c:
  3460                           	opt callstack 0
  3461  000123                     stoa@l:
  3462                           	opt callstack 0
  3463  000123                     dtoa@d:
  3464                           	opt callstack 0
  3465  000123                     xtoa@d:
  3466                           	opt callstack 0
  3467                           
  3468                           ; 8 bytes @ 0x23
  3469  000123                     	ds	1
  3470  000124                     SeePressureV_pa@p:
  3471                           	opt callstack 0
  3472  000124                     See5V@adc:
  3473                           	opt callstack 0
  3474  000124                     Get5V@adc:
  3475                           	opt callstack 0
  3476  000124                     See12V@adc:
  3477                           	opt callstack 0
  3478  000124                     Get12V@adc:
  3479                           	opt callstack 0
  3480  000124                     ctoa@w:
  3481                           	opt callstack 0
  3482  000124                     GetPressureV_pa@mv:
  3483                           	opt callstack 0
  3484                           
  3485                           ; 4 bytes @ 0x24
  3486  000124                     	ds	2
  3487  000126                     GetPressure_pa@adc:
  3488                           	opt callstack 0
  3489  000126                     SeePressure_pa@adc:
  3490                           	opt callstack 0
  3491  000126                     See5V@v12:
  3492                           	opt callstack 0
  3493  000126                     Get5V@v12:
  3494                           	opt callstack 0
  3495  000126                     See12V@v12:
  3496                           	opt callstack 0
  3497  000126                     Get12V@v12:
  3498                           	opt callstack 0
  3499  000126                     SeePressureV_pa@mv:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 4 bytes @ 0x26
  3503  000126                     	ds	1
  3504  000127                     LCDTest@msg2:
  3505                           	opt callstack 0
  3506                           
  3507                           ; 17 bytes @ 0x27
  3508  000127                     	ds	1
  3509  000128                     GetPressureV_pa@p:
  3510                           	opt callstack 0
  3511  000128                     GetPressure_pa@mv:
  3512                           	opt callstack 0
  3513  000128                     SeePressure_pa@mv:
  3514                           	opt callstack 0
  3515  000128                     See5V@mv:
  3516                           	opt callstack 0
  3517  000128                     Get5V@mv:
  3518                           	opt callstack 0
  3519  000128                     See12V@mv:
  3520                           	opt callstack 0
  3521  000128                     Get12V@mv:
  3522                           	opt callstack 0
  3523                           
  3524                           ; 4 bytes @ 0x28
  3525  000128                     	ds	3
  3526  00012B                     ??_dtoa:
  3527  00012B                     xtoa@x:
  3528                           	opt callstack 0
  3529                           
  3530                           ; 1 bytes @ 0x2B
  3531  00012B                     	ds	1
  3532  00012C                     ??_xtoa:
  3533  00012C                     BatteryFailAlarm@bat:
  3534                           	opt callstack 0
  3535  00012C                     GetPressure_pa@p:
  3536                           	opt callstack 0
  3537  00012C                     SeePressure_pa@p:
  3538                           	opt callstack 0
  3539                           
  3540                           ; 2 bytes @ 0x2C
  3541  00012C                     	ds	7
  3542  000133                     _dtoa$5181:
  3543                           	opt callstack 0
  3544                           
  3545                           ; 2 bytes @ 0x33
  3546  000133                     	ds	1
  3547  000134                     _xtoa$5202:
  3548                           	opt callstack 0
  3549                           
  3550                           ; 2 bytes @ 0x34
  3551  000134                     	ds	1
  3552  000135                     dtoa@p:
  3553                           	opt callstack 0
  3554                           
  3555                           ; 2 bytes @ 0x35
  3556  000135                     	ds	1
  3557  000136                     _xtoa$5203:
  3558                           	opt callstack 0
  3559                           
  3560                           ; 2 bytes @ 0x36
  3561  000136                     	ds	1
  3562  000137                     dtoa@w:
  3563                           	opt callstack 0
  3564                           
  3565                           ; 2 bytes @ 0x37
  3566  000137                     	ds	1
  3567  000138                     LCDTest@i:
  3568                           	opt callstack 0
  3569  000138                     xtoa@p:
  3570                           	opt callstack 0
  3571                           
  3572                           ; 2 bytes @ 0x38
  3573  000138                     	ds	1
  3574  000139                     dtoa@s:
  3575                           	opt callstack 0
  3576                           
  3577                           ; 2 bytes @ 0x39
  3578  000139                     	ds	1
  3579  00013A                     LCDTest@j:
  3580                           	opt callstack 0
  3581  00013A                     xtoa@w:
  3582                           	opt callstack 0
  3583                           
  3584                           ; 2 bytes @ 0x3A
  3585  00013A                     	ds	1
  3586  00013B                     dtoa@n:
  3587                           	opt callstack 0
  3588                           
  3589                           ; 8 bytes @ 0x3B
  3590  00013B                     	ds	1
  3591  00013C                     ??_LCDInit:
  3592  00013C                     xtoa@n:
  3593                           	opt callstack 0
  3594                           
  3595                           ; 8 bytes @ 0x3C
  3596  00013C                     	ds	2
  3597  00013E                     
  3598                           ; 1 bytes @ 0x3E
  3599  00013E                     	ds	5
  3600  000143                     dtoa@i:
  3601                           	opt callstack 0
  3602                           
  3603                           ; 2 bytes @ 0x43
  3604  000143                     	ds	1
  3605  000144                     xtoa@i:
  3606                           	opt callstack 0
  3607                           
  3608                           ; 2 bytes @ 0x44
  3609  000144                     	ds	2
  3610  000146                     xtoa@c:
  3611                           	opt callstack 0
  3612                           
  3613                           ; 2 bytes @ 0x46
  3614  000146                     	ds	2
  3615  000148                     ?_vfpfcnvrt:
  3616                           	opt callstack 0
  3617  000148                     vfpfcnvrt@fp:
  3618                           	opt callstack 0
  3619                           
  3620                           ; 2 bytes @ 0x48
  3621  000148                     	ds	2
  3622  00014A                     vfpfcnvrt@fmt:
  3623                           	opt callstack 0
  3624                           
  3625                           ; 2 bytes @ 0x4A
  3626  00014A                     	ds	2
  3627  00014C                     vfpfcnvrt@ap:
  3628                           	opt callstack 0
  3629                           
  3630                           ; 2 bytes @ 0x4C
  3631  00014C                     	ds	2
  3632  00014E                     ??_vfpfcnvrt:
  3633                           
  3634                           ; 1 bytes @ 0x4E
  3635  00014E                     	ds	4
  3636  000152                     vfpfcnvrt@ll:
  3637                           	opt callstack 0
  3638                           
  3639                           ; 8 bytes @ 0x52
  3640  000152                     	ds	8
  3641  00015A                     vfpfcnvrt@llu:
  3642                           	opt callstack 0
  3643                           
  3644                           ; 8 bytes @ 0x5A
  3645  00015A                     	ds	8
  3646  000162                     vfpfcnvrt@cp:
  3647                           	opt callstack 0
  3648                           
  3649                           ; 2 bytes @ 0x62
  3650  000162                     	ds	2
  3651  000164                     vfpfcnvrt@done:
  3652                           	opt callstack 0
  3653                           
  3654                           ; 2 bytes @ 0x64
  3655  000164                     	ds	2
  3656  000166                     _vfpfcnvrt$5217:
  3657                           	opt callstack 0
  3658                           
  3659                           ; 2 bytes @ 0x66
  3660  000166                     	ds	2
  3661  000168                     vfpfcnvrt@c:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 1 bytes @ 0x68
  3665  000168                     	ds	1
  3666  000169                     ?_vfprintf:
  3667                           	opt callstack 0
  3668  000169                     vfprintf@fp:
  3669                           	opt callstack 0
  3670                           
  3671                           ; 2 bytes @ 0x69
  3672  000169                     	ds	2
  3673  00016B                     vfprintf@fmt:
  3674                           	opt callstack 0
  3675                           
  3676                           ; 2 bytes @ 0x6B
  3677  00016B                     	ds	2
  3678  00016D                     vfprintf@ap:
  3679                           	opt callstack 0
  3680                           
  3681                           ; 2 bytes @ 0x6D
  3682  00016D                     	ds	2
  3683  00016F                     vfprintf@cfmt:
  3684                           	opt callstack 0
  3685                           
  3686                           ; 2 bytes @ 0x6F
  3687  00016F                     	ds	2
  3688  000171                     ?_printf:
  3689                           	opt callstack 0
  3690  000171                     ?_sprintf:
  3691                           	opt callstack 0
  3692  000171                     sprintf@s:
  3693                           	opt callstack 0
  3694  000171                     printf@fmt:
  3695                           	opt callstack 0
  3696                           
  3697                           ; 2 bytes @ 0x71
  3698  000171                     	ds	2
  3699  000173                     sprintf@fmt:
  3700                           	opt callstack 0
  3701                           
  3702                           ; 2 bytes @ 0x73
  3703  000173                     	ds	12
  3704  00017F                     
  3705                           ; 1 bytes @ 0x7F
  3706  00017F                     	ds	2
  3707  000181                     printf@ap:
  3708                           	opt callstack 0
  3709                           
  3710                           ; 2 bytes @ 0x81
  3711  000181                     	ds	2
  3712  000183                     ??_BuzzerCheck:
  3713  000183                     ??_BuzzerTask:
  3714  000183                     _MonitorFailAlarm$4446:
  3715                           	opt callstack 0
  3716  000183                     SetCalibrateState@calib:
  3717                           	opt callstack 0
  3718  000183                     SetAlarmSV1@value:
  3719                           	opt callstack 0
  3720  000183                     SetSV1@value:
  3721                           	opt callstack 0
  3722  000183                     TestAlarm@id:
  3723                           	opt callstack 0
  3724                           
  3725                           ; 2 bytes @ 0x83
  3726  000183                     	ds	1
  3727  000184                     MonitorFailAlarm@v5:
  3728                           	opt callstack 0
  3729                           
  3730                           ; 2 bytes @ 0x84
  3731  000184                     	ds	1
  3732  000185                     ??_TestAlarm:
  3733  000185                     BuzzerSet@state:
  3734                           	opt callstack 0
  3735  000185                     sprintf@ap:
  3736                           	opt callstack 0
  3737                           
  3738                           ; 2 bytes @ 0x85
  3739  000185                     	ds	1
  3740  000186                     _MuteAlarm$4543:
  3741                           	opt callstack 0
  3742                           
  3743                           ; 1 bytes @ 0x86
  3744  000186                     	ds	1
  3745  000187                     MuteAlarm@high:
  3746                           	opt callstack 0
  3747  000187                     sprintf@f:
  3748                           	opt callstack 0
  3749                           
  3750                           ; 6 bytes @ 0x87
  3751  000187                     	ds	2
  3752  000189                     TestAlarm@i:
  3753                           	opt callstack 0
  3754                           
  3755                           ; 2 bytes @ 0x89
  3756  000189                     	ds	4
  3757  00018D                     
  3758                           ; 1 bytes @ 0x8D
  3759  00018D                     	ds	8
  3760  000195                     ValueDisplay@pi:
  3761                           	opt callstack 0
  3762                           
  3763                           ; 2 bytes @ 0x95
  3764  000195                     	ds	2
  3765  000197                     ValueDisplay@pe:
  3766                           	opt callstack 0
  3767                           
  3768                           ; 2 bytes @ 0x97
  3769  000197                     	ds	2
  3770  000199                     ValueDisplay@vol:
  3771                           	opt callstack 0
  3772                           
  3773                           ; 2 bytes @ 0x99
  3774  000199                     	ds	2
  3775  00019B                     ValueDisplay@pmax:
  3776                           	opt callstack 0
  3777                           
  3778                           ; 2 bytes @ 0x9B
  3779  00019B                     	ds	2
  3780  00019D                     ValueDisplay@spr:
  3781                           	opt callstack 0
  3782                           
  3783                           ; 2 bytes @ 0x9D
  3784  00019D                     	ds	2
  3785  00019F                     _ValueDisplay$6533:
  3786                           	opt callstack 0
  3787                           
  3788                           ; 2 bytes @ 0x9F
  3789  00019F                     	ds	2
  3790  0001A1                     ValueDisplay@eti:
  3791                           	opt callstack 0
  3792                           
  3793                           ; 1 bytes @ 0xA1
  3794  0001A1                     	ds	1
  3795  0001A2                     ValueDisplay@ete:
  3796                           	opt callstack 0
  3797                           
  3798                           ; 1 bytes @ 0xA2
  3799  0001A2                     	ds	1
  3800  0001A3                     ValueDisplay@dtdi:
  3801                           	opt callstack 0
  3802                           
  3803                           ; 1 bytes @ 0xA3
  3804  0001A3                     	ds	1
  3805  0001A4                     ValueDisplay@dtde:
  3806                           	opt callstack 0
  3807                           
  3808                           ; 1 bytes @ 0xA4
  3809  0001A4                     	ds	1
  3810  0001A5                     ValueDisplay@dr:
  3811                           	opt callstack 0
  3812                           
  3813                           ; 1 bytes @ 0xA5
  3814  0001A5                     	ds	1
  3815  0001A6                     _ValueDisplay$4007:
  3816                           	opt callstack 0
  3817                           
  3818                           ; 2 bytes @ 0xA6
  3819  0001A6                     	ds	2
  3820  0001A8                     _ValueDisplay$4008:
  3821                           	opt callstack 0
  3822                           
  3823                           ; 2 bytes @ 0xA8
  3824  0001A8                     	ds	2
  3825  0001AA                     ValueDisplay@tdi:
  3826                           	opt callstack 0
  3827                           
  3828                           ; 2 bytes @ 0xAA
  3829  0001AA                     	ds	2
  3830  0001AC                     ValueDisplay@tde:
  3831                           	opt callstack 0
  3832                           
  3833                           ; 2 bytes @ 0xAC
  3834  0001AC                     	ds	2
  3835  0001AE                     ValueDisplay@etdi:
  3836                           	opt callstack 0
  3837                           
  3838                           ; 1 bytes @ 0xAE
  3839  0001AE                     	ds	1
  3840  0001AF                     ValueDisplay@etde:
  3841                           	opt callstack 0
  3842                           
  3843                           ; 1 bytes @ 0xAF
  3844  0001AF                     	ds	1
  3845  0001B0                     ValueDisplay@er:
  3846                           	opt callstack 0
  3847                           
  3848                           ; 1 bytes @ 0xB0
  3849  0001B0                     	ds	1
  3850  0001B1                     ValueDisplay@r:
  3851                           	opt callstack 0
  3852                           
  3853                           ; 2 bytes @ 0xB1
  3854  0001B1                     	ds	2
  3855  0001B3                     ValueDisplay@te:
  3856                           	opt callstack 0
  3857                           
  3858                           ; 2 bytes @ 0xB3
  3859  0001B3                     	ds	2
  3860  0001B5                     ValueDisplay@ti:
  3861                           	opt callstack 0
  3862                           
  3863                           ; 2 bytes @ 0xB5
  3864  0001B5                     	ds	2
  3865  0001B7                     AlarmDisplay@type:
  3866                           	opt callstack 0
  3867                           
  3868                           ; 2 bytes @ 0xB7
  3869  0001B7                     	ds	2
  3870  0001B9                     AlarmDisplay@alarm:
  3871                           	opt callstack 0
  3872                           
  3873                           ; 2 bytes @ 0xB9
  3874  0001B9                     	ds	2
  3875  0001BB                     AlarmDisplay@t:
  3876                           	opt callstack 0
  3877                           
  3878                           ; 1 bytes @ 0xBB
  3879  0001BB                     	ds	1
  3880  0001BC                     _AlarmDisplay$4015:
  3881                           	opt callstack 0
  3882                           
  3883                           ; 2 bytes @ 0xBC
  3884  0001BC                     	ds	2
  3885  0001BE                     _AlarmDisplay$4016:
  3886                           	opt callstack 0
  3887                           
  3888                           ; 2 bytes @ 0xBE
  3889  0001BE                     	ds	2
  3890  0001C0                     AlarmUpdateLCD@id:
  3891                           	opt callstack 0
  3892                           
  3893                           ; 2 bytes @ 0xC0
  3894  0001C0                     	ds	2
  3895  0001C2                     _AlarmUpdateLCD$6534:
  3896                           	opt callstack 0
  3897                           
  3898                           ; 2 bytes @ 0xC2
  3899  0001C2                     	ds	2
  3900  0001C4                     _AlarmUpdateLCD$6535:
  3901                           	opt callstack 0
  3902                           
  3903                           ; 2 bytes @ 0xC4
  3904  0001C4                     	ds	2
  3905  0001C6                     ??_main:
  3906                           
  3907                           ; 1 bytes @ 0xC6
  3908  0001C6                     	ds	1
  3909                           
  3910                           	psect	cstackBANK0
  3911  000060                     __pcstackBANK0:
  3912                           	opt callstack 0
  3913  000060                     i2vfpfcnvrt@ll:
  3914                           	opt callstack 0
  3915                           
  3916                           ; 8 bytes @ 0x0
  3917  000060                     	ds	8
  3918  000068                     i2vfpfcnvrt@llu:
  3919                           	opt callstack 0
  3920                           
  3921                           ; 8 bytes @ 0x8
  3922  000068                     	ds	8
  3923  000070                     i2vfpfcnvrt@cp:
  3924                           	opt callstack 0
  3925                           
  3926                           ; 2 bytes @ 0x10
  3927  000070                     	ds	2
  3928  000072                     i2vfpfcnvrt@done:
  3929                           	opt callstack 0
  3930                           
  3931                           ; 2 bytes @ 0x12
  3932  000072                     	ds	2
  3933  000074                     i2_vfpfcnvrt$5217:
  3934                           	opt callstack 0
  3935                           
  3936                           ; 2 bytes @ 0x14
  3937  000074                     	ds	2
  3938  000076                     i2vfpfcnvrt@c:
  3939                           	opt callstack 0
  3940                           
  3941                           ; 1 bytes @ 0x16
  3942  000076                     	ds	1
  3943  000077                     ?i2_sprintf:
  3944                           	opt callstack 0
  3945  000077                     ?i2_printf:
  3946                           	opt callstack 0
  3947  000077                     i2sprintf@s:
  3948                           	opt callstack 0
  3949  000077                     i2printf@fmt:
  3950                           	opt callstack 0
  3951                           
  3952                           ; 2 bytes @ 0x17
  3953  000077                     	ds	2
  3954  000079                     i2sprintf@fmt:
  3955                           	opt callstack 0
  3956                           
  3957                           ; 2 bytes @ 0x19
  3958  000079                     	ds	12
  3959  000085                     i2_MuteAlarm$4543:
  3960                           	opt callstack 0
  3961                           
  3962                           ; 1 bytes @ 0x25
  3963  000085                     	ds	1
  3964  000086                     i2MuteAlarm@high:
  3965                           	opt callstack 0
  3966                           
  3967                           ; 2 bytes @ 0x26
  3968  000086                     	ds	5
  3969  00008B                     i2sprintf@ap:
  3970                           	opt callstack 0
  3971                           
  3972                           ; 2 bytes @ 0x2B
  3973  00008B                     	ds	2
  3974  00008D                     i2sprintf@f:
  3975                           	opt callstack 0
  3976                           
  3977                           ; 6 bytes @ 0x2D
  3978  00008D                     	ds	6
  3979  000093                     DisplayCalibrate@pr:
  3980                           	opt callstack 0
  3981                           
  3982                           ; 2 bytes @ 0x33
  3983  000093                     	ds	2
  3984  000095                     DisplayCalibrate@off:
  3985                           	opt callstack 0
  3986                           
  3987                           ; 2 bytes @ 0x35
  3988  000095                     	ds	2
  3989  000097                     DisplayCalibrate@prv:
  3990                           	opt callstack 0
  3991                           
  3992                           ; 2 bytes @ 0x37
  3993  000097                     	ds	2
  3994  000099                     DisplayCalibrate@offv:
  3995                           	opt callstack 0
  3996                           
  3997                           ; 2 bytes @ 0x39
  3998  000099                     	ds	2
  3999  00009B                     MonitorPressureTask@v12:
  4000                           	opt callstack 0
  4001  00009B                     i2ValueDisplay@pi:
  4002                           	opt callstack 0
  4003                           
  4004                           ; 2 bytes @ 0x3B
  4005  00009B                     	ds	2
  4006  00009D                     MonitorPressureTask@v5:
  4007                           	opt callstack 0
  4008  00009D                     i2ValueDisplay@pe:
  4009                           	opt callstack 0
  4010                           
  4011                           ; 2 bytes @ 0x3D
  4012  00009D                     	ds	2
  4013  00009F                     MonitorPressureTask@halfLimit:
  4014                           	opt callstack 0
  4015  00009F                     i2ValueDisplay@vol:
  4016                           	opt callstack 0
  4017                           
  4018                           ; 2 bytes @ 0x3F
  4019  00009F                     	ds	2
  4020  0000A1                     MonitorPressureTask@v1:
  4021                           	opt callstack 0
  4022  0000A1                     i2ValueDisplay@pmax:
  4023                           	opt callstack 0
  4024                           
  4025                           ; 2 bytes @ 0x41
  4026  0000A1                     	ds	2
  4027  0000A3                     _MonitorPressureTask$4888:
  4028                           	opt callstack 0
  4029  0000A3                     i2ValueDisplay@spr:
  4030                           	opt callstack 0
  4031                           
  4032                           ; 2 bytes @ 0x43
  4033  0000A3                     	ds	2
  4034  0000A5                     _MonitorPressureTask$4891:
  4035                           	opt callstack 0
  4036  0000A5                     i2_ValueDisplay$7139:
  4037                           	opt callstack 0
  4038                           
  4039                           ; 2 bytes @ 0x45
  4040  0000A5                     	ds	2
  4041  0000A7                     i2ValueDisplay@eti:
  4042                           	opt callstack 0
  4043  0000A7                     _MonitorPressureTask$4898:
  4044                           	opt callstack 0
  4045                           
  4046                           ; 2 bytes @ 0x47
  4047  0000A7                     	ds	1
  4048  0000A8                     i2ValueDisplay@ete:
  4049                           	opt callstack 0
  4050                           
  4051                           ; 1 bytes @ 0x48
  4052  0000A8                     	ds	1
  4053  0000A9                     i2ValueDisplay@dtdi:
  4054                           	opt callstack 0
  4055  0000A9                     _MonitorPressureTask$4899:
  4056                           	opt callstack 0
  4057                           
  4058                           ; 2 bytes @ 0x49
  4059  0000A9                     	ds	1
  4060  0000AA                     i2ValueDisplay@dtde:
  4061                           	opt callstack 0
  4062                           
  4063                           ; 1 bytes @ 0x4A
  4064  0000AA                     	ds	1
  4065  0000AB                     i2ValueDisplay@dr:
  4066                           	opt callstack 0
  4067  0000AB                     _MonitorPressureTask$4901:
  4068                           	opt callstack 0
  4069                           
  4070                           ; 2 bytes @ 0x4B
  4071  0000AB                     	ds	1
  4072  0000AC                     i2_ValueDisplay$4007:
  4073                           	opt callstack 0
  4074                           
  4075                           ; 2 bytes @ 0x4C
  4076  0000AC                     	ds	1
  4077  0000AD                     _MonitorPressureTask$4902:
  4078                           	opt callstack 0
  4079                           
  4080                           ; 2 bytes @ 0x4D
  4081  0000AD                     	ds	1
  4082  0000AE                     i2_ValueDisplay$4008:
  4083                           	opt callstack 0
  4084                           
  4085                           ; 2 bytes @ 0x4E
  4086  0000AE                     	ds	1
  4087  0000AF                     MonitorPressureTask@adcv:
  4088                           	opt callstack 0
  4089                           
  4090                           ; 2 bytes @ 0x4F
  4091  0000AF                     	ds	1
  4092  0000B0                     i2ValueDisplay@tdi:
  4093                           	opt callstack 0
  4094                           
  4095                           ; 2 bytes @ 0x50
  4096  0000B0                     	ds	1
  4097  0000B1                     MonitorPressureTask@tmp:
  4098                           	opt callstack 0
  4099                           
  4100                           ; 2 bytes @ 0x51
  4101  0000B1                     	ds	1
  4102  0000B2                     i2ValueDisplay@tde:
  4103                           	opt callstack 0
  4104                           
  4105                           ; 2 bytes @ 0x52
  4106  0000B2                     	ds	1
  4107  0000B3                     MonitorPressureTask@tmp2:
  4108                           	opt callstack 0
  4109                           
  4110                           ; 2 bytes @ 0x53
  4111  0000B3                     	ds	1
  4112  0000B4                     i2ValueDisplay@etdi:
  4113                           	opt callstack 0
  4114                           
  4115                           ; 1 bytes @ 0x54
  4116  0000B4                     	ds	1
  4117  0000B5                     i2ValueDisplay@etde:
  4118                           	opt callstack 0
  4119  0000B5                     MonitorPressureTask@next:
  4120                           	opt callstack 0
  4121                           
  4122                           ; 2 bytes @ 0x55
  4123  0000B5                     	ds	1
  4124  0000B6                     i2ValueDisplay@er:
  4125                           	opt callstack 0
  4126                           
  4127                           ; 1 bytes @ 0x56
  4128  0000B6                     	ds	1
  4129  0000B7                     MonitorPressureTask@i_4897:
  4130                           	opt callstack 0
  4131  0000B7                     i2ValueDisplay@r:
  4132                           	opt callstack 0
  4133                           
  4134                           ; 2 bytes @ 0x57
  4135  0000B7                     	ds	2
  4136  0000B9                     MonitorPressureTask@i_4900:
  4137                           	opt callstack 0
  4138  0000B9                     i2ValueDisplay@te:
  4139                           	opt callstack 0
  4140                           
  4141                           ; 2 bytes @ 0x59
  4142  0000B9                     	ds	2
  4143  0000BB                     MonitorPressureTask@temp:
  4144                           	opt callstack 0
  4145  0000BB                     i2ValueDisplay@ti:
  4146                           	opt callstack 0
  4147                           
  4148                           ; 2 bytes @ 0x5B
  4149  0000BB                     	ds	2
  4150  0000BD                     ??_UpdateState:
  4151  0000BD                     MonitorPressureTask@i:
  4152                           	opt callstack 0
  4153  0000BD                     i2AlarmDisplay@type:
  4154                           	opt callstack 0
  4155                           
  4156                           ; 2 bytes @ 0x5D
  4157  0000BD                     	ds	2
  4158  0000BF                     MonitorPressureTask@i_4883:
  4159                           	opt callstack 0
  4160  0000BF                     i2AlarmDisplay@alarm:
  4161                           	opt callstack 0
  4162                           
  4163                           ; 2 bytes @ 0x5F
  4164  0000BF                     	ds	2
  4165  0000C1                     MonitorPressureTask@v2:
  4166                           	opt callstack 0
  4167  0000C1                     i2AlarmUpdateLCD@id:
  4168                           	opt callstack 0
  4169                           
  4170                           ; 2 bytes @ 0x61
  4171  0000C1                     	ds	2
  4172  0000C3                     MonitorPressureTask@pr:
  4173                           	opt callstack 0
  4174  0000C3                     i2_AlarmUpdateLCD$7140:
  4175                           	opt callstack 0
  4176                           
  4177                           ; 2 bytes @ 0x63
  4178  0000C3                     	ds	2
  4179  0000C5                     i2_AlarmUpdateLCD$7141:
  4180                           	opt callstack 0
  4181                           
  4182                           ; 2 bytes @ 0x65
  4183  0000C5                     	ds	2
  4184  0000C7                     ??_ButtonTask:
  4185                           
  4186                           ; 1 bytes @ 0x67
  4187  0000C7                     	ds	1
  4188                           
  4189                           	psect	cstackCOMRAM
  4190  000001                     __pcstackCOMRAM:
  4191                           	opt callstack 0
  4192  000001                     ?_isqrt:
  4193                           	opt callstack 0
  4194  000001                     ?_ADCC_GetConversionResult:
  4195                           	opt callstack 0
  4196  000001                     ?___lwdiv:
  4197                           	opt callstack 0
  4198  000001                     ?i2_GetTde:
  4199                           	opt callstack 0
  4200  000001                     ?i2_GetTdi:
  4201                           	opt callstack 0
  4202  000001                     ?i2_GetTi:
  4203                           	opt callstack 0
  4204  000001                     ?i2_GetTe:
  4205                           	opt callstack 0
  4206  000001                     ?i2_GetBpm:
  4207                           	opt callstack 0
  4208  000001                     ?i2_GetVolume:
  4209                           	opt callstack 0
  4210  000001                     ?i2_GetSpr:
  4211                           	opt callstack 0
  4212  000001                     ?i2___wmul:
  4213                           	opt callstack 0
  4214  000001                     ?i2___awmod:
  4215                           	opt callstack 0
  4216  000001                     ?i2_isalpha:
  4217                           	opt callstack 0
  4218  000001                     ?i2_isdigit:
  4219                           	opt callstack 0
  4220  000001                     ?i2_isspace:
  4221                           	opt callstack 0
  4222  000001                     ?i2_isupper:
  4223                           	opt callstack 0
  4224  000001                     ?i2_strlen:
  4225                           	opt callstack 0
  4226  000001                     ?i2_islower:
  4227                           	opt callstack 0
  4228  000001                     ?___lldiv:
  4229                           	opt callstack 0
  4230  000001                     ?i2___lmul:
  4231                           	opt callstack 0
  4232  000001                     ?i2___aodiv:
  4233                           	opt callstack 0
  4234  000001                     ?i2___aomod:
  4235                           	opt callstack 0
  4236  000001                     I2C2_SlaveSetCounter@counter:
  4237                           	opt callstack 0
  4238  000001                     GetControllerBuzzerCheck@tmp:
  4239                           	opt callstack 0
  4240  000001                     SetVolumeControl@vc:
  4241                           	opt callstack 0
  4242  000001                     i2ADCC_StartConversion@channel:
  4243                           	opt callstack 0
  4244  000001                     i2TMR4_Period8BitSet@periodVal:
  4245                           	opt callstack 0
  4246  000001                     i2UART1_Write@txData:
  4247                           	opt callstack 0
  4248  000001                     i2BuzzerOn@period:
  4249                           	opt callstack 0
  4250  000001                     isqrt@x:
  4251                           	opt callstack 0
  4252  000001                     TMR5_WriteTimer@timerVal:
  4253                           	opt callstack 0
  4254  000001                     TMR1_WriteTimer@timerVal:
  4255                           	opt callstack 0
  4256  000001                     SetMaxPressure@pr:
  4257                           	opt callstack 0
  4258  000001                     ___lwdiv@dividend:
  4259                           	opt callstack 0
  4260  000001                     i2ADCC_SetADIInterruptHandler@InterruptHandler:
  4261                           	opt callstack 0
  4262  000001                     i2TMR4_SetInterruptHandler@InterruptHandler:
  4263                           	opt callstack 0
  4264  000001                     i2ClearVars@i:
  4265                           	opt callstack 0
  4266  000001                     i2___wmul@multiplier:
  4267                           	opt callstack 0
  4268  000001                     i2___awmod@dividend:
  4269                           	opt callstack 0
  4270  000001                     i2isalpha@c:
  4271                           	opt callstack 0
  4272  000001                     i2isdigit@c:
  4273                           	opt callstack 0
  4274  000001                     i2isspace@c:
  4275                           	opt callstack 0
  4276  000001                     i2isupper@c:
  4277                           	opt callstack 0
  4278  000001                     i2strlen@s:
  4279                           	opt callstack 0
  4280  000001                     i2islower@c:
  4281                           	opt callstack 0
  4282  000001                     ___lldiv@dividend:
  4283                           	opt callstack 0
  4284  000001                     i2___lmul@multiplier:
  4285                           	opt callstack 0
  4286  000001                     i2___aodiv@dividend:
  4287                           	opt callstack 0
  4288  000001                     i2___aomod@dividend:
  4289                           	opt callstack 0
  4290                           
  4291                           ; 8 bytes @ 0x0
  4292  000001                     	ds	1
  4293  000002                     i2putch@txData:
  4294                           	opt callstack 0
  4295                           
  4296                           ; 1 bytes @ 0x1
  4297  000002                     	ds	1
  4298  000003                     ??_isqrt:
  4299  000003                     ??_ADCC_GetConversionResult:
  4300  000003                     ??i2_isalpha:
  4301  000003                     ??i2_isdigit:
  4302  000003                     ??i2_isspace:
  4303  000003                     ??i2_isupper:
  4304  000003                     ??i2_islower:
  4305  000003                     ___lwdiv@divisor:
  4306                           	opt callstack 0
  4307  000003                     i2AnyAlarm@i:
  4308                           	opt callstack 0
  4309  000003                     i2ClearVars@i_4909:
  4310                           	opt callstack 0
  4311  000003                     i2___wmul@multiplicand:
  4312                           	opt callstack 0
  4313  000003                     i2___awmod@divisor:
  4314                           	opt callstack 0
  4315  000003                     i2fputc@c:
  4316                           	opt callstack 0
  4317  000003                     i2strlen@a:
  4318                           	opt callstack 0
  4319                           
  4320                           ; 2 bytes @ 0x2
  4321  000003                     	ds	1
  4322  000004                     ReceiveHandler@data:
  4323                           	opt callstack 0
  4324                           
  4325                           ; 1 bytes @ 0x3
  4326  000004                     	ds	1
  4327  000005                     ?i2_GetAlarmState:
  4328                           	opt callstack 0
  4329  000005                     i2___awmod@counter:
  4330                           	opt callstack 0
  4331  000005                     isqrt@op:
  4332                           	opt callstack 0
  4333  000005                     ___lwdiv@quotient:
  4334                           	opt callstack 0
  4335  000005                     i2___wmul@product:
  4336                           	opt callstack 0
  4337  000005                     i2fputc@fp:
  4338                           	opt callstack 0
  4339  000005                     ___lldiv@divisor:
  4340                           	opt callstack 0
  4341  000005                     i2___lmul@multiplicand:
  4342                           	opt callstack 0
  4343                           
  4344                           ; 4 bytes @ 0x4
  4345  000005                     	ds	1
  4346  000006                     i2___awmod@sign:
  4347                           	opt callstack 0
  4348                           
  4349                           ; 1 bytes @ 0x5
  4350  000006                     	ds	1
  4351  000007                     ??i2_fputc:
  4352  000007                     ?i2_HigherAlarm:
  4353                           	opt callstack 0
  4354  000007                     ?i2_AdcSeeData:
  4355                           	opt callstack 0
  4356  000007                     ?i2_AdcGetData:
  4357                           	opt callstack 0
  4358  000007                     ?i2___awdiv:
  4359                           	opt callstack 0
  4360  000007                     ?i2_toupper:
  4361                           	opt callstack 0
  4362  000007                     ___lwdiv@counter:
  4363                           	opt callstack 0
  4364  000007                     i2_isspace$5704:
  4365                           	opt callstack 0
  4366  000007                     isqrt@res:
  4367                           	opt callstack 0
  4368  000007                     i2AdcDataReady@id:
  4369                           	opt callstack 0
  4370  000007                     i2AdcSeeData@id:
  4371                           	opt callstack 0
  4372  000007                     i2AdcGetData@id:
  4373                           	opt callstack 0
  4374  000007                     i2___awdiv@dividend:
  4375                           	opt callstack 0
  4376  000007                     i2toupper@c:
  4377                           	opt callstack 0
  4378                           
  4379                           ; 2 bytes @ 0x6
  4380  000007                     	ds	1
  4381  000008                     ?i2_atoi:
  4382                           	opt callstack 0
  4383  000008                     i2atoi@s:
  4384                           	opt callstack 0
  4385                           
  4386                           ; 2 bytes @ 0x7
  4387  000008                     	ds	1
  4388  000009                     ??i2_HigherAlarm:
  4389  000009                     ??i2_toupper:
  4390  000009                     isqrt@one:
  4391                           	opt callstack 0
  4392  000009                     i2AdcSeeData@data:
  4393                           	opt callstack 0
  4394  000009                     i2AdcGetData@data:
  4395                           	opt callstack 0
  4396  000009                     i2___awdiv@divisor:
  4397                           	opt callstack 0
  4398  000009                     ___lldiv@quotient:
  4399                           	opt callstack 0
  4400  000009                     i2___lmul@product:
  4401                           	opt callstack 0
  4402  000009                     i2___aodiv@divisor:
  4403                           	opt callstack 0
  4404  000009                     i2___aomod@divisor:
  4405                           	opt callstack 0
  4406                           
  4407                           ; 8 bytes @ 0x8
  4408  000009                     	ds	1
  4409  00000A                     ??i2_atoi:
  4410                           
  4411                           ; 1 bytes @ 0x9
  4412  00000A                     	ds	1
  4413  00000B                     i2___awdiv@counter:
  4414                           	opt callstack 0
  4415                           
  4416                           ; 1 bytes @ 0xA
  4417  00000B                     	ds	1
  4418  00000C                     ?i2_stoa:
  4419                           	opt callstack 0
  4420  00000C                     i2___awdiv@sign:
  4421                           	opt callstack 0
  4422  00000C                     i2stoa@fp:
  4423                           	opt callstack 0
  4424  00000C                     i2fputs@s:
  4425                           	opt callstack 0
  4426                           
  4427                           ; 2 bytes @ 0xB
  4428  00000C                     	ds	1
  4429  00000D                     ?i2___aldiv:
  4430                           	opt callstack 0
  4431  00000D                     ___lldiv@counter:
  4432                           	opt callstack 0
  4433  00000D                     i2___awdiv@quotient:
  4434                           	opt callstack 0
  4435  00000D                     i2_toupper$5792:
  4436                           	opt callstack 0
  4437  00000D                     i2___aldiv@dividend:
  4438                           	opt callstack 0
  4439                           
  4440                           ; 4 bytes @ 0xC
  4441  00000D                     	ds	1
  4442  00000E                     i2HigherAlarm@max:
  4443                           	opt callstack 0
  4444  00000E                     i2stoa@s:
  4445                           	opt callstack 0
  4446  00000E                     i2atoi@neg:
  4447                           	opt callstack 0
  4448  00000E                     i2fputs@fp:
  4449                           	opt callstack 0
  4450                           
  4451                           ; 2 bytes @ 0xD
  4452  00000E                     	ds	1
  4453  00000F                     ?i2_GetEp:
  4454                           	opt callstack 0
  4455  00000F                     ?i2_GetIp:
  4456                           	opt callstack 0
  4457  00000F                     ?i2_GetPmax:
  4458                           	opt callstack 0
  4459  00000F                     ?i2_GetTargetIp:
  4460                           	opt callstack 0
  4461  00000F                     ?i2_GetTargetEp:
  4462                           	opt callstack 0
  4463                           
  4464                           ; 2 bytes @ 0xE
  4465  00000F                     	ds	1
  4466  000010                     ??i2_stoa:
  4467  000010                     i2fputs@c:
  4468                           	opt callstack 0
  4469  000010                     i2HigherAlarm@i:
  4470                           	opt callstack 0
  4471  000010                     i2_atoi$5677:
  4472                           	opt callstack 0
  4473                           
  4474                           ; 2 bytes @ 0xF
  4475  000010                     	ds	1
  4476  000011                     ??i2_GetEp:
  4477  000011                     ??i2_GetIp:
  4478  000011                     i2___aodiv@counter:
  4479                           	opt callstack 0
  4480  000011                     i2___aomod@counter:
  4481                           	opt callstack 0
  4482  000011                     i2fputs@i:
  4483                           	opt callstack 0
  4484  000011                     i2___aldiv@divisor:
  4485                           	opt callstack 0
  4486  000011                     i2stoa@nuls:
  4487                           	opt callstack 0
  4488                           
  4489                           ; 7 bytes @ 0x10
  4490  000011                     	ds	1
  4491  000012                     i2___aodiv@sign:
  4492                           	opt callstack 0
  4493  000012                     i2___aomod@sign:
  4494                           	opt callstack 0
  4495  000012                     i2_atoi$5679:
  4496                           	opt callstack 0
  4497                           
  4498                           ; 2 bytes @ 0x11
  4499  000012                     	ds	1
  4500  000013                     ?i2_pad:
  4501                           	opt callstack 0
  4502  000013                     ?i2_abs:
  4503                           	opt callstack 0
  4504  000013                     i2pad@fp:
  4505                           	opt callstack 0
  4506  000013                     i2abs@a:
  4507                           	opt callstack 0
  4508  000013                     i2___aodiv@quotient:
  4509                           	opt callstack 0
  4510                           
  4511                           ; 8 bytes @ 0x12
  4512  000013                     	ds	1
  4513  000014                     i2_atoi$5678:
  4514                           	opt callstack 0
  4515  000014                     i2_GetEp$4808:
  4516                           	opt callstack 0
  4517  000014                     i2_GetIp$4811:
  4518                           	opt callstack 0
  4519                           
  4520                           ; 2 bytes @ 0x13
  4521  000014                     	ds	1
  4522  000015                     ??i2_abs:
  4523  000015                     i2___aldiv@counter:
  4524                           	opt callstack 0
  4525  000015                     i2pad@buf:
  4526                           	opt callstack 0
  4527  000015                     i2atoi@n:
  4528                           	opt callstack 0
  4529                           
  4530                           ; 2 bytes @ 0x14
  4531  000015                     	ds	1
  4532  000016                     i2___aldiv@sign:
  4533                           	opt callstack 0
  4534  000016                     i2_GetEp$4809:
  4535                           	opt callstack 0
  4536  000016                     i2_GetIp$4812:
  4537                           	opt callstack 0
  4538                           
  4539                           ; 2 bytes @ 0x15
  4540  000016                     	ds	1
  4541  000017                     i2pad@p:
  4542                           	opt callstack 0
  4543  000017                     i2___aldiv@quotient:
  4544                           	opt callstack 0
  4545                           
  4546                           ; 4 bytes @ 0x16
  4547  000017                     	ds	1
  4548  000018                     i2stoa@i:
  4549                           	opt callstack 0
  4550                           
  4551                           ; 2 bytes @ 0x17
  4552  000018                     	ds	1
  4553  000019                     ??i2_pad:
  4554                           
  4555                           ; 1 bytes @ 0x18
  4556  000019                     	ds	1
  4557  00001A                     i2pad@i:
  4558                           	opt callstack 0
  4559  00001A                     i2stoa@w:
  4560                           	opt callstack 0
  4561                           
  4562                           ; 2 bytes @ 0x19
  4563  00001A                     	ds	1
  4564  00001B                     ?i2_GetPressure_pa:
  4565                           	opt callstack 0
  4566  00001B                     ?i2_GetPressureV_pa:
  4567                           	opt callstack 0
  4568  00001B                     ?i2_See5V:
  4569                           	opt callstack 0
  4570  00001B                     ?i2_See12V:
  4571                           	opt callstack 0
  4572  00001B                     SetTarget@pmax:
  4573                           	opt callstack 0
  4574                           
  4575                           ; 2 bytes @ 0x1A
  4576  00001B                     	ds	1
  4577  00001C                     i2pad@w:
  4578                           	opt callstack 0
  4579  00001C                     i2stoa@cp:
  4580                           	opt callstack 0
  4581                           
  4582                           ; 2 bytes @ 0x1B
  4583  00001C                     	ds	1
  4584  00001D                     ??i2_GetPressure_pa:
  4585  00001D                     ??i2_GetPressureV_pa:
  4586  00001D                     ??i2_See5V:
  4587  00001D                     ??i2_See12V:
  4588  00001D                     SetTarget@ip:
  4589                           	opt callstack 0
  4590                           
  4591                           ; 2 bytes @ 0x1C
  4592  00001D                     	ds	1
  4593  00001E                     ?i2_ctoa:
  4594                           	opt callstack 0
  4595  00001E                     ?i2_dtoa:
  4596                           	opt callstack 0
  4597  00001E                     ?i2_xtoa:
  4598                           	opt callstack 0
  4599  00001E                     i2ctoa@fp:
  4600                           	opt callstack 0
  4601  00001E                     i2dtoa@fp:
  4602                           	opt callstack 0
  4603  00001E                     i2stoa@p:
  4604                           	opt callstack 0
  4605  00001E                     i2xtoa@fp:
  4606                           	opt callstack 0
  4607                           
  4608                           ; 2 bytes @ 0x1D
  4609  00001E                     	ds	1
  4610  00001F                     SetTarget@ep:
  4611                           	opt callstack 0
  4612  00001F                     i2GetPressureV_pa@adcv:
  4613                           	opt callstack 0
  4614  00001F                     i2GetPressure_pa@p32:
  4615                           	opt callstack 0
  4616                           
  4617                           ; 4 bytes @ 0x1E
  4618  00001F                     	ds	1
  4619  000020                     i2ctoa@c:
  4620                           	opt callstack 0
  4621  000020                     i2stoa@l:
  4622                           	opt callstack 0
  4623  000020                     i2dtoa@d:
  4624                           	opt callstack 0
  4625  000020                     i2xtoa@d:
  4626                           	opt callstack 0
  4627                           
  4628                           ; 8 bytes @ 0x1F
  4629  000020                     	ds	1
  4630  000021                     SetTarget@br:
  4631                           	opt callstack 0
  4632  000021                     i2See5V@adc:
  4633                           	opt callstack 0
  4634  000021                     i2See12V@adc:
  4635                           	opt callstack 0
  4636  000021                     i2ctoa@w:
  4637                           	opt callstack 0
  4638  000021                     i2GetPressureV_pa@mv:
  4639                           	opt callstack 0
  4640                           
  4641                           ; 4 bytes @ 0x20
  4642  000021                     	ds	2
  4643  000023                     SetTarget@vmax:
  4644                           	opt callstack 0
  4645  000023                     i2GetPressure_pa@adc:
  4646                           	opt callstack 0
  4647  000023                     i2See5V@v12:
  4648                           	opt callstack 0
  4649  000023                     i2See12V@v12:
  4650                           	opt callstack 0
  4651                           
  4652                           ; 2 bytes @ 0x22
  4653  000023                     	ds	2
  4654  000025                     SetTarget@vmin:
  4655                           	opt callstack 0
  4656  000025                     i2GetPressureV_pa@p:
  4657                           	opt callstack 0
  4658  000025                     i2GetPressure_pa@mv:
  4659                           	opt callstack 0
  4660  000025                     i2See5V@mv:
  4661                           	opt callstack 0
  4662  000025                     i2See12V@mv:
  4663                           	opt callstack 0
  4664                           
  4665                           ; 4 bytes @ 0x24
  4666  000025                     	ds	2
  4667  000027                     
  4668                           ; 1 bytes @ 0x26
  4669  000027                     	ds	1
  4670  000028                     ??i2_dtoa:
  4671  000028                     i2xtoa@x:
  4672                           	opt callstack 0
  4673                           
  4674                           ; 1 bytes @ 0x27
  4675  000028                     	ds	1
  4676  000029                     ??i2_xtoa:
  4677  000029                     i2GetPressure_pa@p:
  4678                           	opt callstack 0
  4679                           
  4680                           ; 2 bytes @ 0x28
  4681  000029                     	ds	2
  4682  00002B                     ?_GetPressure_mbar02:
  4683                           	opt callstack 0
  4684                           
  4685                           ; 2 bytes @ 0x2A
  4686  00002B                     	ds	2
  4687  00002D                     _GetPressure_mbar02$7138:
  4688                           	opt callstack 0
  4689                           
  4690                           ; 2 bytes @ 0x2C
  4691  00002D                     	ds	3
  4692  000030                     i2_dtoa$5181:
  4693                           	opt callstack 0
  4694                           
  4695                           ; 2 bytes @ 0x2F
  4696  000030                     	ds	1
  4697  000031                     i2_xtoa$5202:
  4698                           	opt callstack 0
  4699                           
  4700                           ; 2 bytes @ 0x30
  4701  000031                     	ds	1
  4702  000032                     i2dtoa@p:
  4703                           	opt callstack 0
  4704                           
  4705                           ; 2 bytes @ 0x31
  4706  000032                     	ds	1
  4707  000033                     i2_xtoa$5203:
  4708                           	opt callstack 0
  4709                           
  4710                           ; 2 bytes @ 0x32
  4711  000033                     	ds	1
  4712  000034                     i2dtoa@w:
  4713                           	opt callstack 0
  4714                           
  4715                           ; 2 bytes @ 0x33
  4716  000034                     	ds	1
  4717  000035                     i2xtoa@p:
  4718                           	opt callstack 0
  4719                           
  4720                           ; 2 bytes @ 0x34
  4721  000035                     	ds	1
  4722  000036                     i2dtoa@s:
  4723                           	opt callstack 0
  4724                           
  4725                           ; 2 bytes @ 0x35
  4726  000036                     	ds	1
  4727  000037                     i2xtoa@w:
  4728                           	opt callstack 0
  4729                           
  4730                           ; 2 bytes @ 0x36
  4731  000037                     	ds	1
  4732  000038                     i2dtoa@n:
  4733                           	opt callstack 0
  4734                           
  4735                           ; 8 bytes @ 0x37
  4736  000038                     	ds	1
  4737  000039                     i2xtoa@n:
  4738                           	opt callstack 0
  4739                           
  4740                           ; 8 bytes @ 0x38
  4741  000039                     	ds	7
  4742  000040                     i2dtoa@i:
  4743                           	opt callstack 0
  4744                           
  4745                           ; 2 bytes @ 0x3F
  4746  000040                     	ds	1
  4747  000041                     i2xtoa@i:
  4748                           	opt callstack 0
  4749                           
  4750                           ; 2 bytes @ 0x40
  4751  000041                     	ds	2
  4752  000043                     i2xtoa@c:
  4753                           	opt callstack 0
  4754                           
  4755                           ; 2 bytes @ 0x42
  4756  000043                     	ds	2
  4757  000045                     ?i2_vfpfcnvrt:
  4758                           	opt callstack 0
  4759  000045                     i2vfpfcnvrt@fp:
  4760                           	opt callstack 0
  4761                           
  4762                           ; 2 bytes @ 0x44
  4763  000045                     	ds	2
  4764  000047                     i2vfpfcnvrt@fmt:
  4765                           	opt callstack 0
  4766                           
  4767                           ; 2 bytes @ 0x46
  4768  000047                     	ds	2
  4769  000049                     i2vfpfcnvrt@ap:
  4770                           	opt callstack 0
  4771                           
  4772                           ; 2 bytes @ 0x48
  4773  000049                     	ds	2
  4774  00004B                     ??i2_vfpfcnvrt:
  4775                           
  4776                           ; 1 bytes @ 0x4A
  4777  00004B                     	ds	4
  4778  00004F                     ?i2_vfprintf:
  4779                           	opt callstack 0
  4780  00004F                     i2vfprintf@fp:
  4781                           	opt callstack 0
  4782                           
  4783                           ; 2 bytes @ 0x4E
  4784  00004F                     	ds	2
  4785  000051                     i2vfprintf@fmt:
  4786                           	opt callstack 0
  4787                           
  4788                           ; 2 bytes @ 0x50
  4789  000051                     	ds	2
  4790  000053                     i2vfprintf@ap:
  4791                           	opt callstack 0
  4792                           
  4793                           ; 2 bytes @ 0x52
  4794  000053                     	ds	2
  4795  000055                     i2vfprintf@cfmt:
  4796                           	opt callstack 0
  4797                           
  4798                           ; 2 bytes @ 0x54
  4799  000055                     	ds	2
  4800  000057                     i2AlarmDisplay@t:
  4801                           	opt callstack 0
  4802                           
  4803                           ; 1 bytes @ 0x56
  4804  000057                     	ds	1
  4805  000058                     i2_AlarmDisplay$4015:
  4806                           	opt callstack 0
  4807                           
  4808                           ; 2 bytes @ 0x57
  4809  000058                     	ds	1
  4810  000059                     i2printf@ap:
  4811                           	opt callstack 0
  4812                           
  4813                           ; 2 bytes @ 0x58
  4814  000059                     	ds	1
  4815  00005A                     i2_AlarmDisplay$4016:
  4816                           	opt callstack 0
  4817                           
  4818                           ; 2 bytes @ 0x59
  4819  00005A                     	ds	1
  4820  00005B                     ??_AlarmHandler:
  4821  00005B                     ??_MonitorPressureTask:
  4822  00005B                     ??i2_BuzzerTask:
  4823  00005B                     i2SetCalibrateState@calib:
  4824                           	opt callstack 0
  4825  00005B                     i2SetAlarmSV1@value:
  4826                           	opt callstack 0
  4827  00005B                     i2SetSV1@value:
  4828                           	opt callstack 0
  4829                           
  4830                           ; 1 bytes @ 0x5A
  4831  00005B                     	ds	1
  4832  00005C                     UpdateState@initPhase:
  4833                           	opt callstack 0
  4834                           
  4835                           ; 2 bytes @ 0x5B
  4836  00005C                     	ds	1
  4837  00005D                     
  4838                           ; 1 bytes @ 0x5C
  4839  00005D                     	ds	1
  4840  00005E                     i2HistAlarm@i:
  4841                           	opt callstack 0
  4842                           
  4843                           ; 2 bytes @ 0x5D
  4844  00005E                     	ds	2
  4845  000060                     
  4846                           ; 1 bytes @ 0x5F
  4847 ;;
  4848 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4849 ;;
  4850 ;; *************** function _main *****************
  4851 ;; Defined at:
  4852 ;;		line 75 in file "main.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  ch              1    0[BANK3 ] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 3F/3
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Totals:         0       0       1       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;Total ram usage:        2 bytes
  4871 ;; Hardware stack levels required when called:   29
  4872 ;; This function calls:
  4873 ;;		_AlarmCheckTask
  4874 ;;		_AlarmInit
  4875 ;;		_ButtonInit
  4876 ;;		_BuzzerCheck
  4877 ;;		_BuzzerTest
  4878 ;;		_ControllerInit
  4879 ;;		_DisableAlarmSV1
  4880 ;;		_DisplayTask
  4881 ;;		_DumpI2C
  4882 ;;		_EnableAlarmSV1
  4883 ;;		_HistAlarm
  4884 ;;		_InitDisplay
  4885 ;;		_LCDOff
  4886 ;;		_LCDOn
  4887 ;;		_MonitorDisable
  4888 ;;		_MonitorDump
  4889 ;;		_MonitorEnable
  4890 ;;		_MonitorInit
  4891 ;;		_MuteAlarm
  4892 ;;		_SYSTEM_Initialize
  4893 ;;		_See12V
  4894 ;;		_See5V
  4895 ;;		_SeePressureV_pa
  4896 ;;		_SeePressure_pa
  4897 ;;		_SetAlarmSV1
  4898 ;;		_SetCalibrateState
  4899 ;;		_SetSV1
  4900 ;;		_TestAlarm
  4901 ;;		_UART1_is_rx_ready
  4902 ;;		___llmod
  4903 ;;		_getch
  4904 ;;		_printf
  4905 ;; This function is called by:
  4906 ;;		Startup code after reset
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text0
  4911  002D9C                     __ptext0:
  4912                           	opt callstack 0
  4913  002D9C                     _main:
  4914                           	opt callstack 2
  4915                           
  4916                           ;main.c: 78:     SYSTEM_Initialize();
  4917                           
  4918                           ;incstack = 0
  4919  002D9C  EC35  F04E         	call	_SYSTEM_Initialize	;wreg free
  4920                           
  4921                           ; BSR set to: 61
  4922                           ;main.c: 79:     SetSV1(0);
  4923  002DA0  0E00               	movlw	0
  4924  002DA2  EC30  F050         	call	_SetSV1
  4925                           
  4926                           ;main.c: 80:     SetAlarmSV1(1);
  4927  002DA6  0E01               	movlw	1
  4928  002DA8  EC4A  F050         	call	_SetAlarmSV1
  4929                           
  4930                           ;main.c: 81:     PWM6CON = 0x00;
  4931  002DAC  0E00               	movlw	0
  4932  002DAE  6E6A               	movwf	106,c	;volatile
  4933                           
  4934                           ;main.c: 90:     (INTCON0bits.GIE = 1);
  4935  002DB0  8ED2               	bsf	210,7,c	;volatile
  4936                           
  4937                           ;main.c: 95:     printf ("\033c Oxyvita\r\n");
  4938  002DB2  0E77               	movlw	low STR_1
  4939  002DB4  0101               	movlb	1	; () banked
  4940  002DB6  6F71               	movwf	printf@fmt& (0+255),b
  4941  002DB8  0EFF               	movlw	high STR_1
  4942  002DBA  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4943  002DBC  ECE6  F051         	call	_printf	;wreg free
  4944                           
  4945                           ; BSR set to: 2
  4946                           ;main.c: 96:     LCDOn();
  4947  002DC0  ECD4  F056         	call	_LCDOn	;wreg free
  4948                           
  4949                           ; BSR set to: 1
  4950                           ;main.c: 97:     InitDisplay();
  4951  002DC4  ECA4  F056         	call	_InitDisplay	;wreg free
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;main.c: 99:     AlarmInit();
  4955  002DC8  EC89  F046         	call	_AlarmInit	;wreg free
  4956                           
  4957                           ;main.c: 100:     MonitorInit();
  4958  002DCC  EC75  F047         	call	_MonitorInit	;wreg free
  4959                           
  4960                           ;main.c: 101:     ControllerInit();
  4961  002DD0  EC56  F04E         	call	_ControllerInit	;wreg free
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;main.c: 102:     ButtonInit();
  4965  002DD4  ECD1  F051         	call	_ButtonInit	;wreg free
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;main.c: 117:     BuzzerCheck();
  4969  002DD8  EC5F  F044         	call	_BuzzerCheck	;wreg free
  4970  002DDC                     l22400:
  4971                           
  4972                           ;main.c: 120:     {;main.c: 123:         DisplayTask();
  4973  002DDC  ECE8  F041         	call	_DisplayTask	;wreg free
  4974                           
  4975                           ;main.c: 124:         AlarmCheckTask();
  4976  002DE0  EC48  F027         	call	_AlarmCheckTask	;wreg free
  4977                           
  4978                           ;main.c: 126:         if (PCON0&0xC0) printf("\r\nStack:%02X\r\n");
  4979  002DE4  006F FFC0  F1C6    	movff	16368,??_main	;volatile
  4980  002DEA  0EC0               	movlw	192
  4981  002DEC  0101               	movlb	1	; () banked
  4982  002DEE  17C6               	andwf	??_main& (0+255),f,b
  4983  002DF0  B4D8               	btfsc	status,2,c
  4984  002DF2  D006               	goto	l22408
  4985                           
  4986                           ; BSR set to: 1
  4987  002DF4  0E4D               	movlw	low STR_2
  4988  002DF6  6F71               	movwf	printf@fmt& (0+255),b
  4989  002DF8  0EFF               	movlw	high STR_2
  4990  002DFA  6F72               	movwf	(printf@fmt+1)& (0+255),b
  4991  002DFC  ECE6  F051         	call	_printf	;wreg free
  4992  002E00                     l22408:
  4993                           
  4994                           ;main.c: 127:         static uint32_t cnt = 0;;main.c: 128:         if (cnt==0) printf("
      +                          m\r\n");
  4995  002E00  0102               	movlb	2	; () banked
  4996  002E02  5126               	movf	main@cnt& (0+255),w,b
  4997  002E04  1127               	iorwf	(main@cnt+1)& (0+255),w,b
  4998  002E06  1128               	iorwf	(main@cnt+2)& (0+255),w,b
  4999  002E08  1129               	iorwf	(main@cnt+3)& (0+255),w,b
  5000  002E0A  A4D8               	btfss	status,2,c
  5001  002E0C  D007               	goto	l22412
  5002                           
  5003                           ; BSR set to: 2
  5004  002E0E  0EEC               	movlw	low STR_3
  5005  002E10  0101               	movlb	1	; () banked
  5006  002E12  6F71               	movwf	printf@fmt& (0+255),b
  5007  002E14  0EFF               	movlw	high STR_3
  5008  002E16  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5009  002E18  ECE6  F051         	call	_printf	;wreg free
  5010  002E1C                     l22412:
  5011                           
  5012                           ; BSR set to: 2
  5013                           ;main.c: 129:         cnt = (cnt+1)%300000;
  5014  002E1C  0E01               	movlw	1
  5015  002E1E  2526               	addwf	main@cnt& (0+255),w,b
  5016  002E20  0101               	movlb	1	; () banked
  5017  002E22  6F04               	movwf	___llmod@dividend& (0+255),b
  5018  002E24  0E00               	movlw	0
  5019  002E26  0102               	movlb	2	; () banked
  5020  002E28  2127               	addwfc	(main@cnt+1)& (0+255),w,b
  5021  002E2A  0101               	movlb	1	; () banked
  5022  002E2C  6F05               	movwf	(___llmod@dividend+1)& (0+255),b
  5023  002E2E  0E00               	movlw	0
  5024  002E30  0102               	movlb	2	; () banked
  5025  002E32  2128               	addwfc	(main@cnt+2)& (0+255),w,b
  5026  002E34  0101               	movlb	1	; () banked
  5027  002E36  6F06               	movwf	(___llmod@dividend+2)& (0+255),b
  5028  002E38  0E00               	movlw	0
  5029  002E3A  0102               	movlb	2	; () banked
  5030  002E3C  2129               	addwfc	(main@cnt+3)& (0+255),w,b
  5031  002E3E  0101               	movlb	1	; () banked
  5032  002E40  6F07               	movwf	(___llmod@dividend+3)& (0+255),b
  5033  002E42  0EE0               	movlw	224
  5034  002E44  6F08               	movwf	___llmod@divisor& (0+255),b
  5035  002E46  0E93               	movlw	147
  5036  002E48  6F09               	movwf	(___llmod@divisor+1)& (0+255),b
  5037  002E4A  0E04               	movlw	4
  5038  002E4C  6F0A               	movwf	(___llmod@divisor+2)& (0+255),b
  5039  002E4E  0E00               	movlw	0
  5040  002E50  6F0B               	movwf	(___llmod@divisor+3)& (0+255),b
  5041  002E52  EC1F  F048         	call	___llmod	;wreg free
  5042  002E56  0060  F410  F226   	movff	?___llmod,main@cnt
  5043  002E5C  0060  F414  F227   	movff	?___llmod+1,main@cnt+1
  5044  002E62  0060  F418  F228   	movff	?___llmod+2,main@cnt+2
  5045  002E68  0060  F41C  F229   	movff	?___llmod+3,main@cnt+3
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;main.c: 131:         if (UART1_is_rx_ready())
  5049  002E6E  ECA1  F055         	call	_UART1_is_rx_ready	;wreg free
  5050  002E72  0900               	iorlw	0
  5051  002E74  B4D8               	btfsc	status,2,c
  5052  002E76  D7B2               	goto	l22400
  5053                           
  5054                           ; BSR set to: 1
  5055                           ;main.c: 132:         {;main.c: 133:             char ch = getch();
  5056  002E78  EC9B  F057         	call	_getch	;wreg free
  5057  002E7C  0103               	movlb	3	; () banked
  5058  002E7E  6FF9               	movwf	main@ch& (0+255),b
  5059                           
  5060                           ; BSR set to: 3
  5061                           ;main.c: 134:             if (ch=='a') BuzzerTest('A');
  5062  002E80  0E61               	movlw	97
  5063  002E82  19F9               	xorwf	main@ch& (0+255),w,b
  5064  002E84  A4D8               	btfss	status,2,c
  5065  002E86  D003               	goto	l22422
  5066                           
  5067                           ; BSR set to: 3
  5068  002E88  0E41               	movlw	65
  5069  002E8A  ECF2  F044         	call	_BuzzerTest
  5070  002E8E                     l22422:
  5071                           
  5072                           ;main.c: 135:             if (ch=='b') BuzzerTest('B');
  5073  002E8E  0E62               	movlw	98
  5074  002E90  0103               	movlb	3	; () banked
  5075  002E92  19F9               	xorwf	main@ch& (0+255),w,b
  5076  002E94  A4D8               	btfss	status,2,c
  5077  002E96  D003               	goto	l22426
  5078                           
  5079                           ; BSR set to: 3
  5080  002E98  0E42               	movlw	66
  5081  002E9A  ECF2  F044         	call	_BuzzerTest
  5082  002E9E                     l22426:
  5083                           
  5084                           ;main.c: 136:             if (ch=='c') BuzzerTest('C');
  5085  002E9E  0E63               	movlw	99
  5086  002EA0  0103               	movlb	3	; () banked
  5087  002EA2  19F9               	xorwf	main@ch& (0+255),w,b
  5088  002EA4  A4D8               	btfss	status,2,c
  5089  002EA6  D003               	goto	l22430
  5090                           
  5091                           ; BSR set to: 3
  5092  002EA8  0E43               	movlw	67
  5093  002EAA  ECF2  F044         	call	_BuzzerTest
  5094  002EAE                     l22430:
  5095                           
  5096                           ;main.c: 137:             if (ch=='d') BuzzerTest('D');
  5097  002EAE  0E64               	movlw	100
  5098  002EB0  0103               	movlb	3	; () banked
  5099  002EB2  19F9               	xorwf	main@ch& (0+255),w,b
  5100  002EB4  A4D8               	btfss	status,2,c
  5101  002EB6  D003               	goto	l22434
  5102                           
  5103                           ; BSR set to: 3
  5104  002EB8  0E44               	movlw	68
  5105  002EBA  ECF2  F044         	call	_BuzzerTest
  5106  002EBE                     l22434:
  5107                           
  5108                           ;main.c: 138:             if (ch=='e') BuzzerTest('E');
  5109  002EBE  0E65               	movlw	101
  5110  002EC0  0103               	movlb	3	; () banked
  5111  002EC2  19F9               	xorwf	main@ch& (0+255),w,b
  5112  002EC4  A4D8               	btfss	status,2,c
  5113  002EC6  D003               	goto	l22438
  5114                           
  5115                           ; BSR set to: 3
  5116  002EC8  0E45               	movlw	69
  5117  002ECA  ECF2  F044         	call	_BuzzerTest
  5118  002ECE                     l22438:
  5119                           
  5120                           ;main.c: 139:             if (ch=='f') BuzzerTest('F');
  5121  002ECE  0E66               	movlw	102
  5122  002ED0  0103               	movlb	3	; () banked
  5123  002ED2  19F9               	xorwf	main@ch& (0+255),w,b
  5124  002ED4  A4D8               	btfss	status,2,c
  5125  002ED6  D003               	goto	l22442
  5126                           
  5127                           ; BSR set to: 3
  5128  002ED8  0E46               	movlw	70
  5129  002EDA  ECF2  F044         	call	_BuzzerTest
  5130  002EDE                     l22442:
  5131                           
  5132                           ;main.c: 140:             if (ch=='o') BuzzerTest('O');
  5133  002EDE  0E6F               	movlw	111
  5134  002EE0  0103               	movlb	3	; () banked
  5135  002EE2  19F9               	xorwf	main@ch& (0+255),w,b
  5136  002EE4  A4D8               	btfss	status,2,c
  5137  002EE6  D003               	goto	l22446
  5138                           
  5139                           ; BSR set to: 3
  5140  002EE8  0E4F               	movlw	79
  5141  002EEA  ECF2  F044         	call	_BuzzerTest
  5142  002EEE                     l22446:
  5143                           
  5144                           ;main.c: 141:             if (ch=='t') BuzzerCheck();
  5145  002EEE  0E74               	movlw	116
  5146  002EF0  0103               	movlb	3	; () banked
  5147  002EF2  19F9               	xorwf	main@ch& (0+255),w,b
  5148  002EF4  B4D8               	btfsc	status,2,c
  5149                           
  5150                           ; BSR set to: 3
  5151  002EF6  EC5F  F044         	call	_BuzzerCheck	;wreg free
  5152                           
  5153                           ;main.c: 142:             if (ch=='h') HistAlarm();
  5154  002EFA  0E68               	movlw	104
  5155  002EFC  0103               	movlb	3	; () banked
  5156  002EFE  19F9               	xorwf	main@ch& (0+255),w,b
  5157  002F00  B4D8               	btfsc	status,2,c
  5158                           
  5159                           ; BSR set to: 3
  5160  002F02  EC94  F035         	call	_HistAlarm	;wreg free
  5161                           
  5162                           ;main.c: 143:             if (ch=='m') MuteAlarm();
  5163  002F06  0E6D               	movlw	109
  5164  002F08  0103               	movlb	3	; () banked
  5165  002F0A  19F9               	xorwf	main@ch& (0+255),w,b
  5166  002F0C  B4D8               	btfsc	status,2,c
  5167                           
  5168                           ; BSR set to: 3
  5169  002F0E  EC90  F024         	call	_MuteAlarm	;wreg free
  5170                           
  5171                           ;main.c: 144:             if (ch=='i') DumpI2C();
  5172  002F12  0E69               	movlw	105
  5173  002F14  0103               	movlb	3	; () banked
  5174  002F16  19F9               	xorwf	main@ch& (0+255),w,b
  5175  002F18  B4D8               	btfsc	status,2,c
  5176                           
  5177                           ; BSR set to: 3
  5178  002F1A  EC26  F058         	call	_DumpI2C	;wreg free
  5179                           
  5180                           ; BSR set to: 3
  5181                           ;main.c: 145:             if (ch=='v') SetSV1(0);
  5182  002F1E  0E76               	movlw	118
  5183  002F20  19F9               	xorwf	main@ch& (0+255),w,b
  5184  002F22  A4D8               	btfss	status,2,c
  5185  002F24  D003               	goto	l22466
  5186                           
  5187                           ; BSR set to: 3
  5188  002F26  0E00               	movlw	0
  5189  002F28  EC30  F050         	call	_SetSV1
  5190  002F2C                     l22466:
  5191                           
  5192                           ;main.c: 146:             if (ch=='V') SetSV1(1);
  5193  002F2C  0E56               	movlw	86
  5194  002F2E  0103               	movlb	3	; () banked
  5195  002F30  19F9               	xorwf	main@ch& (0+255),w,b
  5196  002F32  A4D8               	btfss	status,2,c
  5197  002F34  D003               	goto	l22470
  5198                           
  5199                           ; BSR set to: 3
  5200  002F36  0E01               	movlw	1
  5201  002F38  EC30  F050         	call	_SetSV1
  5202  002F3C                     l22470:
  5203                           
  5204                           ;main.c: 147:             if (ch=='0') TestAlarm(0);
  5205  002F3C  0E30               	movlw	48
  5206  002F3E  0103               	movlb	3	; () banked
  5207  002F40  19F9               	xorwf	main@ch& (0+255),w,b
  5208  002F42  A4D8               	btfss	status,2,c
  5209  002F44  D007               	goto	l22474
  5210                           
  5211                           ; BSR set to: 3
  5212  002F46  0E00               	movlw	0
  5213  002F48  0101               	movlb	1	; () banked
  5214  002F4A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5215  002F4C  0E00               	movlw	0
  5216  002F4E  6F83               	movwf	TestAlarm@id& (0+255),b
  5217  002F50  EC3A  F041         	call	_TestAlarm	;wreg free
  5218  002F54                     l22474:
  5219                           
  5220                           ;main.c: 148:             if (ch=='1') TestAlarm(1);
  5221  002F54  0E31               	movlw	49
  5222  002F56  0103               	movlb	3	; () banked
  5223  002F58  19F9               	xorwf	main@ch& (0+255),w,b
  5224  002F5A  A4D8               	btfss	status,2,c
  5225  002F5C  D007               	goto	l22478
  5226                           
  5227                           ; BSR set to: 3
  5228  002F5E  0E00               	movlw	0
  5229  002F60  0101               	movlb	1	; () banked
  5230  002F62  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5231  002F64  0E01               	movlw	1
  5232  002F66  6F83               	movwf	TestAlarm@id& (0+255),b
  5233  002F68  EC3A  F041         	call	_TestAlarm	;wreg free
  5234  002F6C                     l22478:
  5235                           
  5236                           ;main.c: 149:             if (ch=='2') TestAlarm(2);
  5237  002F6C  0E32               	movlw	50
  5238  002F6E  0103               	movlb	3	; () banked
  5239  002F70  19F9               	xorwf	main@ch& (0+255),w,b
  5240  002F72  A4D8               	btfss	status,2,c
  5241  002F74  D007               	goto	l22482
  5242                           
  5243                           ; BSR set to: 3
  5244  002F76  0E00               	movlw	0
  5245  002F78  0101               	movlb	1	; () banked
  5246  002F7A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5247  002F7C  0E02               	movlw	2
  5248  002F7E  6F83               	movwf	TestAlarm@id& (0+255),b
  5249  002F80  EC3A  F041         	call	_TestAlarm	;wreg free
  5250  002F84                     l22482:
  5251                           
  5252                           ;main.c: 150:             if (ch=='3') TestAlarm(3);
  5253  002F84  0E33               	movlw	51
  5254  002F86  0103               	movlb	3	; () banked
  5255  002F88  19F9               	xorwf	main@ch& (0+255),w,b
  5256  002F8A  A4D8               	btfss	status,2,c
  5257  002F8C  D007               	goto	l22486
  5258                           
  5259                           ; BSR set to: 3
  5260  002F8E  0E00               	movlw	0
  5261  002F90  0101               	movlb	1	; () banked
  5262  002F92  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5263  002F94  0E03               	movlw	3
  5264  002F96  6F83               	movwf	TestAlarm@id& (0+255),b
  5265  002F98  EC3A  F041         	call	_TestAlarm	;wreg free
  5266  002F9C                     l22486:
  5267                           
  5268                           ;main.c: 151:             if (ch=='4') TestAlarm(4);
  5269  002F9C  0E34               	movlw	52
  5270  002F9E  0103               	movlb	3	; () banked
  5271  002FA0  19F9               	xorwf	main@ch& (0+255),w,b
  5272  002FA2  A4D8               	btfss	status,2,c
  5273  002FA4  D007               	goto	l22490
  5274                           
  5275                           ; BSR set to: 3
  5276  002FA6  0E00               	movlw	0
  5277  002FA8  0101               	movlb	1	; () banked
  5278  002FAA  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5279  002FAC  0E04               	movlw	4
  5280  002FAE  6F83               	movwf	TestAlarm@id& (0+255),b
  5281  002FB0  EC3A  F041         	call	_TestAlarm	;wreg free
  5282  002FB4                     l22490:
  5283                           
  5284                           ;main.c: 152:             if (ch=='5') TestAlarm(5);
  5285  002FB4  0E35               	movlw	53
  5286  002FB6  0103               	movlb	3	; () banked
  5287  002FB8  19F9               	xorwf	main@ch& (0+255),w,b
  5288  002FBA  A4D8               	btfss	status,2,c
  5289  002FBC  D007               	goto	l22494
  5290                           
  5291                           ; BSR set to: 3
  5292  002FBE  0E00               	movlw	0
  5293  002FC0  0101               	movlb	1	; () banked
  5294  002FC2  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5295  002FC4  0E05               	movlw	5
  5296  002FC6  6F83               	movwf	TestAlarm@id& (0+255),b
  5297  002FC8  EC3A  F041         	call	_TestAlarm	;wreg free
  5298  002FCC                     l22494:
  5299                           
  5300                           ;main.c: 153:             if (ch=='6') TestAlarm(6);
  5301  002FCC  0E36               	movlw	54
  5302  002FCE  0103               	movlb	3	; () banked
  5303  002FD0  19F9               	xorwf	main@ch& (0+255),w,b
  5304  002FD2  A4D8               	btfss	status,2,c
  5305  002FD4  D007               	goto	l22498
  5306                           
  5307                           ; BSR set to: 3
  5308  002FD6  0E00               	movlw	0
  5309  002FD8  0101               	movlb	1	; () banked
  5310  002FDA  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5311  002FDC  0E06               	movlw	6
  5312  002FDE  6F83               	movwf	TestAlarm@id& (0+255),b
  5313  002FE0  EC3A  F041         	call	_TestAlarm	;wreg free
  5314  002FE4                     l22498:
  5315                           
  5316                           ;main.c: 154:             if (ch=='7') TestAlarm(7);
  5317  002FE4  0E37               	movlw	55
  5318  002FE6  0103               	movlb	3	; () banked
  5319  002FE8  19F9               	xorwf	main@ch& (0+255),w,b
  5320  002FEA  A4D8               	btfss	status,2,c
  5321  002FEC  D007               	goto	l22502
  5322                           
  5323                           ; BSR set to: 3
  5324  002FEE  0E00               	movlw	0
  5325  002FF0  0101               	movlb	1	; () banked
  5326  002FF2  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5327  002FF4  0E07               	movlw	7
  5328  002FF6  6F83               	movwf	TestAlarm@id& (0+255),b
  5329  002FF8  EC3A  F041         	call	_TestAlarm	;wreg free
  5330  002FFC                     l22502:
  5331                           
  5332                           ;main.c: 155:             if (ch=='8') TestAlarm(8);
  5333  002FFC  0E38               	movlw	56
  5334  002FFE  0103               	movlb	3	; () banked
  5335  003000  19F9               	xorwf	main@ch& (0+255),w,b
  5336  003002  A4D8               	btfss	status,2,c
  5337  003004  D007               	goto	l22506
  5338                           
  5339                           ; BSR set to: 3
  5340  003006  0E00               	movlw	0
  5341  003008  0101               	movlb	1	; () banked
  5342  00300A  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5343  00300C  0E08               	movlw	8
  5344  00300E  6F83               	movwf	TestAlarm@id& (0+255),b
  5345  003010  EC3A  F041         	call	_TestAlarm	;wreg free
  5346  003014                     l22506:
  5347                           
  5348                           ;main.c: 156:             if (ch=='9') TestAlarm(9);
  5349  003014  0E39               	movlw	57
  5350  003016  0103               	movlb	3	; () banked
  5351  003018  19F9               	xorwf	main@ch& (0+255),w,b
  5352  00301A  A4D8               	btfss	status,2,c
  5353  00301C  D007               	goto	l22510
  5354                           
  5355                           ; BSR set to: 3
  5356  00301E  0E00               	movlw	0
  5357  003020  0101               	movlb	1	; () banked
  5358  003022  6F84               	movwf	(TestAlarm@id+1)& (0+255),b
  5359  003024  0E09               	movlw	9
  5360  003026  6F83               	movwf	TestAlarm@id& (0+255),b
  5361  003028  EC3A  F041         	call	_TestAlarm	;wreg free
  5362  00302C                     l22510:
  5363                           
  5364                           ;main.c: 157:             if (ch=='G') SetSV1(1);
  5365  00302C  0E47               	movlw	71
  5366  00302E  0103               	movlb	3	; () banked
  5367  003030  19F9               	xorwf	main@ch& (0+255),w,b
  5368  003032  A4D8               	btfss	status,2,c
  5369  003034  D003               	goto	l22514
  5370                           
  5371                           ; BSR set to: 3
  5372  003036  0E01               	movlw	1
  5373  003038  EC30  F050         	call	_SetSV1
  5374  00303C                     l22514:
  5375                           
  5376                           ;main.c: 158:             if (ch=='g') SetSV1(0);
  5377  00303C  0E67               	movlw	103
  5378  00303E  0103               	movlb	3	; () banked
  5379  003040  19F9               	xorwf	main@ch& (0+255),w,b
  5380  003042  A4D8               	btfss	status,2,c
  5381  003044  D003               	goto	l22518
  5382                           
  5383                           ; BSR set to: 3
  5384  003046  0E00               	movlw	0
  5385  003048  EC30  F050         	call	_SetSV1
  5386  00304C                     l22518:
  5387                           
  5388                           ;main.c: 159:             if (ch=='R') MonitorEnable();
  5389  00304C  0E52               	movlw	82
  5390  00304E  0103               	movlb	3	; () banked
  5391  003050  19F9               	xorwf	main@ch& (0+255),w,b
  5392  003052  B4D8               	btfsc	status,2,c
  5393                           
  5394                           ; BSR set to: 3
  5395  003054  EC23  F057         	call	_MonitorEnable	;wreg free
  5396                           
  5397                           ;main.c: 160:             if (ch=='r') MonitorDisable();
  5398  003058  0E72               	movlw	114
  5399  00305A  0103               	movlb	3	; () banked
  5400  00305C  19F9               	xorwf	main@ch& (0+255),w,b
  5401  00305E  B4D8               	btfsc	status,2,c
  5402                           
  5403                           ; BSR set to: 3
  5404  003060  EC27  F057         	call	_MonitorDisable	;wreg free
  5405                           
  5406                           ;main.c: 161:             if (ch=='d') DisableAlarmSV1();
  5407  003064  0E64               	movlw	100
  5408  003066  0103               	movlb	3	; () banked
  5409  003068  19F9               	xorwf	main@ch& (0+255),w,b
  5410  00306A  B4D8               	btfsc	status,2,c
  5411                           
  5412                           ; BSR set to: 3
  5413  00306C  EC2F  F057         	call	_DisableAlarmSV1	;wreg free
  5414                           
  5415                           ;main.c: 162:             if (ch=='D') EnableAlarmSV1();
  5416  003070  0E44               	movlw	68
  5417  003072  0103               	movlb	3	; () banked
  5418  003074  19F9               	xorwf	main@ch& (0+255),w,b
  5419  003076  B4D8               	btfsc	status,2,c
  5420                           
  5421                           ; BSR set to: 3
  5422  003078  EC2B  F057         	call	_EnableAlarmSV1	;wreg free
  5423                           
  5424                           ;main.c: 164:             if (ch=='l') printf("\r\nPRS: %d pa PRSV: %d pa 12V: %d mV 5V:
      +                          %d \r\n", SeePressure_pa(), SeePressureV_pa(), See12V(), See5V());
  5425  00307C  0E6C               	movlw	108
  5426  00307E  0103               	movlb	3	; () banked
  5427  003080  19F9               	xorwf	main@ch& (0+255),w,b
  5428  003082  A4D8               	btfss	status,2,c
  5429  003084  D027               	goto	l22538
  5430                           
  5431                           ; BSR set to: 3
  5432  003086  0E3A               	movlw	low STR_4
  5433  003088  0101               	movlb	1	; () banked
  5434  00308A  6F71               	movwf	printf@fmt& (0+255),b
  5435  00308C  0EFD               	movlw	high STR_4
  5436  00308E  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5437  003090  EC5B  F02F         	call	_SeePressure_pa	;wreg free
  5438  003094  0060  F478  F173   	movff	?_SeePressure_pa,?_printf+2
  5439  00309A  0060  F47C  F174   	movff	?_SeePressure_pa+1,?_printf+3
  5440  0030A0  ECFE  F03A         	call	_SeePressureV_pa	;wreg free
  5441  0030A4  0060  F478  F175   	movff	?_SeePressureV_pa,?_printf+4
  5442  0030AA  0060  F47C  F176   	movff	?_SeePressureV_pa+1,?_printf+5
  5443  0030B0  EC19  F036         	call	_See12V	;wreg free
  5444  0030B4  0060  F478  F177   	movff	?_See12V,?_printf+6
  5445  0030BA  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
  5446  0030C0  EC6D  F03B         	call	_See5V	;wreg free
  5447  0030C4  0060  F478  F179   	movff	?_See5V,?_printf+8
  5448  0030CA  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
  5449  0030D0  ECE6  F051         	call	_printf	;wreg free
  5450  0030D4                     l22538:
  5451                           
  5452                           ;main.c: 165:             if (ch=='p') MonitorDump();
  5453  0030D4  0E70               	movlw	112
  5454  0030D6  0103               	movlb	3	; () banked
  5455  0030D8  19F9               	xorwf	main@ch& (0+255),w,b
  5456  0030DA  B4D8               	btfsc	status,2,c
  5457                           
  5458                           ; BSR set to: 3
  5459  0030DC  EC8E  F018         	call	_MonitorDump	;wreg free
  5460                           
  5461                           ;main.c: 166:             if (ch=='z') SetCalibrateState(0);
  5462  0030E0  0E7A               	movlw	122
  5463  0030E2  0103               	movlb	3	; () banked
  5464  0030E4  19F9               	xorwf	main@ch& (0+255),w,b
  5465  0030E6  A4D8               	btfss	status,2,c
  5466  0030E8  D003               	goto	l22546
  5467                           
  5468                           ; BSR set to: 3
  5469  0030EA  0E00               	movlw	0
  5470  0030EC  EC03  F035         	call	_SetCalibrateState
  5471  0030F0                     l22546:
  5472                           
  5473                           ;main.c: 167:             if (ch=='Z') SetCalibrateState(1);
  5474  0030F0  0E5A               	movlw	90
  5475  0030F2  0103               	movlb	3	; () banked
  5476  0030F4  19F9               	xorwf	main@ch& (0+255),w,b
  5477  0030F6  A4D8               	btfss	status,2,c
  5478  0030F8  D003               	goto	l22550
  5479                           
  5480                           ; BSR set to: 3
  5481  0030FA  0E01               	movlw	1
  5482  0030FC  EC03  F035         	call	_SetCalibrateState
  5483  003100                     l22550:
  5484                           
  5485                           ;main.c: 168:             if (ch=='o') LCDOff();
  5486  003100  0E6F               	movlw	111
  5487  003102  0103               	movlb	3	; () banked
  5488  003104  19F9               	xorwf	main@ch& (0+255),w,b
  5489  003106  B4D8               	btfsc	status,2,c
  5490                           
  5491                           ; BSR set to: 3
  5492  003108  ECD9  F056         	call	_LCDOff	;wreg free
  5493                           
  5494                           ;main.c: 169:             if (ch=='O') LCDOn();
  5495  00310C  0E4F               	movlw	79
  5496  00310E  0103               	movlb	3	; () banked
  5497  003110  19F9               	xorwf	main@ch& (0+255),w,b
  5498  003112  A4D8               	btfss	status,2,c
  5499  003114  D663               	goto	l22400
  5500                           
  5501                           ; BSR set to: 3
  5502  003116  ECD4  F056         	call	_LCDOn	;wreg free
  5503                           
  5504                           ; BSR set to: 3
  5505                           
  5506                           ;main.c: 174:         }
  5507  00311A  D660               	goto	l22400
  5508  00311C                     __end_of_main:
  5509                           	opt callstack 0
  5510                           
  5511 ;; *************** function _getch *****************
  5512 ;; Defined at:
  5513 ;;		line 224 in file "mcc_generated_files/uart1.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      unsigned char 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 3F/1
  5524 ;;		On exit  : 3F/1
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:   17
  5534 ;; This function calls:
  5535 ;;		_UART1_Read
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text1
  5542  00AF36                     __ptext1:
  5543                           	opt callstack 0
  5544  00AF36                     _getch:
  5545                           	opt callstack 13
  5546                           
  5547                           ; BSR set to: 1
  5548                           ;mcc_generated_files/uart1.c: 226:     return UART1_Read();
  5549                           
  5550                           ; BSR set to: 3
  5551                           ;incstack = 0
  5552  00AF36  ECA8  F04D         	call	_UART1_Read	;wreg free
  5553                           
  5554                           ; BSR set to: 1
  5555  00AF3A  0012               	return		;funcret
  5556  00AF3C                     __end_of_getch:
  5557                           	opt callstack 0
  5558                           
  5559 ;; *************** function _UART1_Read *****************
  5560 ;; Defined at:
  5561 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  readValue       1    4[BANK1 ] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      unsigned char 
  5568 ;; Registers used:
  5569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 3F/1
  5572 ;;		On exit  : 3F/1
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;Total ram usage:        1 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:   16
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_getch
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text2
  5590  009B50                     __ptext2:
  5591                           	opt callstack 0
  5592  009B50                     _UART1_Read:
  5593                           	opt callstack 13
  5594                           
  5595                           ; BSR set to: 1
  5596                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;mcc_generated_files/uart1.c: 183:     while(0 == uart1RxCount)
  5600                           
  5601                           ; BSR set to: 1
  5602                           ;incstack = 0
  5603  009B50  51F5               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5604  009B52  B4D8               	btfsc	status,2,c
  5605  009B54  D7FD               	goto	_UART1_Read
  5606                           
  5607                           ; BSR set to: 1
  5608                           ;mcc_generated_files/uart1.c: 187:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
  5609  009B56  0E0A               	movlw	low _uart1RxStatusBuffer
  5610  009B58  25F6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5611  009B5A  6ED9               	movwf	fsr2l,c
  5612  009B5C  6ADA               	clrf	fsr2h,c
  5613  009B5E  0E02               	movlw	high _uart1RxStatusBuffer
  5614  009B60  22DA               	addwfc	fsr2h,f,c
  5615  009B62  50DF               	movf	indf2,w,c
  5616  009B64  0102               	movlb	2	; () banked
  5617  009B66  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  5618                           
  5619                           ;mcc_generated_files/uart1.c: 189:     readValue = uart1RxBuffer[uart1RxTail++];
  5620  009B68  0E12               	movlw	low _uart1RxBuffer
  5621  009B6A  0101               	movlb	1	; () banked
  5622  009B6C  25F6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
  5623  009B6E  6ED9               	movwf	fsr2l,c
  5624  009B70  6ADA               	clrf	fsr2h,c
  5625  009B72  0E02               	movlw	high _uart1RxBuffer
  5626  009B74  22DA               	addwfc	fsr2h,f,c
  5627  009B76  50DF               	movf	indf2,w,c
  5628  009B78  6F04               	movwf	UART1_Read@readValue& (0+255),b
  5629                           
  5630                           ; BSR set to: 1
  5631  009B7A  2BF6               	incf	_uart1RxTail& (0+255),f,b	;volatile
  5632                           
  5633                           ; BSR set to: 1
  5634                           ;mcc_generated_files/uart1.c: 190:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
  5635  009B7C  0E07               	movlw	7
  5636  009B7E  65F6               	cpfsgt	_uart1RxTail& (0+255),b
  5637  009B80  D002               	goto	l20530
  5638                           
  5639                           ; BSR set to: 1
  5640                           ;mcc_generated_files/uart1.c: 191:     {;mcc_generated_files/uart1.c: 192:         uart1
      +                          RxTail = 0;
  5641  009B82  0E00               	movlw	0
  5642  009B84  6FF6               	movwf	_uart1RxTail& (0+255),b	;volatile
  5643  009B86                     l20530:
  5644                           
  5645                           ; BSR set to: 1
  5646                           ;mcc_generated_files/uart1.c: 194:     PIE3bits.U1RXIE = 0;
  5647  009B86  0139               	movlb	57	; () banked
  5648  009B88  9793               	bcf	147,3,b	;volatile
  5649                           
  5650                           ; BSR set to: 57
  5651                           ;mcc_generated_files/uart1.c: 195:     uart1RxCount--;
  5652  009B8A  0101               	movlb	1	; () banked
  5653  009B8C  07F5               	decf	_uart1RxCount& (0+255),f,b	;volatile
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;mcc_generated_files/uart1.c: 196:     PIE3bits.U1RXIE = 1;
  5657  009B8E  0139               	movlb	57	; () banked
  5658  009B90  8793               	bsf	147,3,b	;volatile
  5659                           
  5660                           ; BSR set to: 57
  5661                           ;mcc_generated_files/uart1.c: 198:     return readValue;
  5662  009B92  0101               	movlb	1	; () banked
  5663  009B94  5104               	movf	UART1_Read@readValue& (0+255),w,b
  5664                           
  5665                           ; BSR set to: 1
  5666  009B96  0012               	return		;funcret
  5667  009B98                     __end_of_UART1_Read:
  5668                           	opt callstack 0
  5669                           
  5670 ;; *************** function ___llmod *****************
  5671 ;; Defined at:
  5672 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/llmod.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  dividend        4    4[BANK1 ] unsigned long 
  5675 ;;  divisor         4    8[BANK1 ] unsigned long 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  counter         1   12[BANK1 ] unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  4    4[BANK1 ] unsigned long 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0
  5682 ;; Tracked objects:
  5683 ;;		On entry : 3F/1
  5684 ;;		On exit  : 3F/1
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5687 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;Total ram usage:        9 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:   16
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text3
  5702  00903E                     __ptext3:
  5703                           	opt callstack 0
  5704  00903E                     ___llmod:
  5705                           	opt callstack 14
  5706                           
  5707                           ; BSR set to: 1
  5708                           
  5709                           ; BSR set to: 1
  5710                           ;incstack = 0
  5711  00903E  5108               	movf	___llmod@divisor& (0+255),w,b
  5712  009040  1109               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5713  009042  110A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5714  009044  110B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5715  009046  B4D8               	btfsc	status,2,c
  5716  009048  D024               	goto	l4027
  5717                           
  5718                           ; BSR set to: 1
  5719  00904A  0E01               	movlw	1
  5720  00904C  6F0C               	movwf	___llmod@counter& (0+255),b
  5721  00904E  D006               	goto	l22310
  5722  009050                     l22308:
  5723                           
  5724                           ; BSR set to: 1
  5725  009050  90D8               	bcf	status,0,c
  5726  009052  3708               	rlcf	___llmod@divisor& (0+255),f,b
  5727  009054  3709               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5728  009056  370A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5729  009058  370B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5730  00905A  2B0C               	incf	___llmod@counter& (0+255),f,b
  5731  00905C                     l22310:
  5732                           
  5733                           ; BSR set to: 1
  5734  00905C  AF0B               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5735  00905E  D7F8               	goto	l22308
  5736  009060                     u22240:
  5737                           
  5738                           ; BSR set to: 1
  5739  009060  5108               	movf	___llmod@divisor& (0+255),w,b
  5740  009062  5D04               	subwf	___llmod@dividend& (0+255),w,b
  5741  009064  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5742  009066  5905               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5743  009068  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5744  00906A  5906               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5745  00906C  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5746  00906E  5907               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5747  009070  A0D8               	btfss	status,0,c
  5748  009072  D008               	goto	l22316
  5749                           
  5750                           ; BSR set to: 1
  5751  009074  5108               	movf	___llmod@divisor& (0+255),w,b
  5752  009076  5F04               	subwf	___llmod@dividend& (0+255),f,b
  5753  009078  5109               	movf	(___llmod@divisor+1)& (0+255),w,b
  5754  00907A  5B05               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5755  00907C  510A               	movf	(___llmod@divisor+2)& (0+255),w,b
  5756  00907E  5B06               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5757  009080  510B               	movf	(___llmod@divisor+3)& (0+255),w,b
  5758  009082  5B07               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5759  009084                     l22316:
  5760                           
  5761                           ; BSR set to: 1
  5762  009084  90D8               	bcf	status,0,c
  5763  009086  330B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5764  009088  330A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5765  00908A  3309               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5766  00908C  3308               	rrcf	___llmod@divisor& (0+255),f,b
  5767                           
  5768                           ; BSR set to: 1
  5769  00908E  2F0C               	decfsz	___llmod@counter& (0+255),f,b
  5770  009090  D7E7               	goto	u22240
  5771  009092                     l4027:
  5772                           
  5773                           ; BSR set to: 1
  5774  009092  0060  F410  F104   	movff	___llmod@dividend,?___llmod
  5775  009098  0060  F414  F105   	movff	___llmod@dividend+1,?___llmod+1
  5776  00909E  0060  F418  F106   	movff	___llmod@dividend+2,?___llmod+2
  5777  0090A4  0060  F41C  F107   	movff	___llmod@dividend+3,?___llmod+3
  5778                           
  5779                           ; BSR set to: 1
  5780  0090AA  0012               	return		;funcret
  5781  0090AC                     __end_of___llmod:
  5782                           	opt callstack 0
  5783                           
  5784 ;; *************** function _UART1_is_rx_ready *****************
  5785 ;; Defined at:
  5786 ;;		line 160 in file "mcc_generated_files/uart1.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      _Bool 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2
  5795 ;; Tracked objects:
  5796 ;;		On entry : 3F/1
  5797 ;;		On exit  : 3F/1
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:   16
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text4
  5815  00AB42                     __ptext4:
  5816                           	opt callstack 0
  5817  00AB42                     _UART1_is_rx_ready:
  5818                           	opt callstack 14
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;incstack = 0
  5825  00AB42  51F5               	movf	_uart1RxCount& (0+255),w,b	;volatile
  5826  00AB44  B4D8               	btfsc	status,2,c
  5827  00AB46  D002               	goto	u21530
  5828  00AB48  0E01               	movlw	1
  5829  00AB4A  0012               	return	
  5830  00AB4C                     u21530:
  5831  00AB4C  0E00               	movlw	0
  5832                           
  5833                           ; BSR set to: 1
  5834  00AB4E  0012               	return		;funcret
  5835  00AB50                     __end_of_UART1_is_rx_ready:
  5836                           	opt callstack 0
  5837                           
  5838 ;; *************** function _TestAlarm *****************
  5839 ;; Defined at:
  5840 ;;		line 341 in file "alarm.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  id              2  131[BANK1 ] int 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  i               2  137[BANK1 ] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 3F/1
  5851 ;;		On exit  : 3F/2
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5854 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;Total ram usage:        8 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:   25
  5861 ;; This function calls:
  5862 ;;		_printf
  5863 ;;		_putchar
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text5
  5870  008274                     __ptext5:
  5871                           	opt callstack 0
  5872  008274                     _TestAlarm:
  5873                           	opt callstack 5
  5874                           
  5875                           ; BSR set to: 1
  5876                           ;alarm.c: 342:     testAlarm[id] = !testAlarm[id];
  5877                           
  5878                           ; BSR set to: 1
  5879                           ;incstack = 0
  5880  008274  90D8               	bcf	status,0,c
  5881  008276  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5882  008278  6ED9               	movwf	fsr2l,c
  5883  00827A  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5884  00827C  6EDA               	movwf	fsr2h,c
  5885  00827E  0E26               	movlw	low _testAlarm
  5886  008280  26D9               	addwf	fsr2l,f,c
  5887  008282  0E03               	movlw	high _testAlarm
  5888  008284  22DA               	addwfc	fsr2h,f,c
  5889  008286  50DE               	movf	postinc2,w,c
  5890  008288  10DE               	iorwf	postinc2,w,c
  5891  00828A  A4D8               	btfss	status,2,c
  5892  00828C  D002               	goto	u22160
  5893  00828E  0E01               	movlw	1
  5894  008290  D001               	goto	u22170
  5895  008292                     u22160:
  5896  008292  0E00               	movlw	0
  5897  008294                     u22170:
  5898  008294  6F87               	movwf	(??_TestAlarm+2)& (0+255),b
  5899  008296  6B88               	clrf	(??_TestAlarm+3)& (0+255),b
  5900  008298  90D8               	bcf	status,0,c
  5901  00829A  3583               	rlcf	TestAlarm@id& (0+255),w,b
  5902  00829C  6ED9               	movwf	fsr2l,c
  5903  00829E  3584               	rlcf	(TestAlarm@id+1)& (0+255),w,b
  5904  0082A0  6EDA               	movwf	fsr2h,c
  5905  0082A2  0E26               	movlw	low _testAlarm
  5906  0082A4  26D9               	addwf	fsr2l,f,c
  5907  0082A6  0E03               	movlw	high _testAlarm
  5908  0082A8  22DA               	addwfc	fsr2h,f,c
  5909  0082AA  0060  F61F  FFDE   	movff	??_TestAlarm+2,postinc2
  5910  0082B0  0060  F623  FFDD   	movff	??_TestAlarm+3,postdec2
  5911                           
  5912                           ; BSR set to: 1
  5913                           ;alarm.c: 343:     printf("\r\nTA: ");
  5914  0082B6  0EBA               	movlw	low STR_23
  5915  0082B8  6F71               	movwf	printf@fmt& (0+255),b
  5916  0082BA  0EFF               	movlw	high STR_23
  5917  0082BC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5918  0082BE  ECE6  F051         	call	_printf	;wreg free
  5919                           
  5920                           ; BSR set to: 2
  5921                           ;alarm.c: 344:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++)
  5922  0082C2  0E00               	movlw	0
  5923  0082C4  0101               	movlb	1	; () banked
  5924  0082C6  6F8A               	movwf	(TestAlarm@i+1)& (0+255),b
  5925  0082C8  0E00               	movlw	0
  5926  0082CA  6F89               	movwf	TestAlarm@i& (0+255),b
  5927  0082CC                     l22228:
  5928                           
  5929                           ; BSR set to: 1
  5930                           ;alarm.c: 345:     {;alarm.c: 346:         if (testAlarm[i]) putchar('0'+i); else putcha
      +                          r('.');
  5931  0082CC  90D8               	bcf	status,0,c
  5932  0082CE  3589               	rlcf	TestAlarm@i& (0+255),w,b
  5933  0082D0  6ED9               	movwf	fsr2l,c
  5934  0082D2  358A               	rlcf	(TestAlarm@i+1)& (0+255),w,b
  5935  0082D4  6EDA               	movwf	fsr2h,c
  5936  0082D6  0E26               	movlw	low _testAlarm
  5937  0082D8  26D9               	addwf	fsr2l,f,c
  5938  0082DA  0E03               	movlw	high _testAlarm
  5939  0082DC  22DA               	addwfc	fsr2h,f,c
  5940  0082DE  50DE               	movf	postinc2,w,c
  5941  0082E0  10DE               	iorwf	postinc2,w,c
  5942  0082E2  B4D8               	btfsc	status,2,c
  5943  0082E4  D009               	goto	l22232
  5944                           
  5945                           ; BSR set to: 1
  5946  0082E6  0E30               	movlw	48
  5947  0082E8  2589               	addwf	TestAlarm@i& (0+255),w,b
  5948  0082EA  6F0F               	movwf	putchar@c& (0+255),b
  5949  0082EC  0E00               	movlw	0
  5950  0082EE  218A               	addwfc	(TestAlarm@i+1)& (0+255),w,b
  5951  0082F0  6F10               	movwf	(putchar@c+1)& (0+255),b
  5952  0082F2  EC58  F054         	call	_putchar	;wreg free
  5953  0082F6  D006               	goto	l22234
  5954  0082F8                     l22232:
  5955                           
  5956                           ; BSR set to: 1
  5957  0082F8  0E00               	movlw	0
  5958  0082FA  6F10               	movwf	(putchar@c+1)& (0+255),b
  5959  0082FC  0E2E               	movlw	46
  5960  0082FE  6F0F               	movwf	putchar@c& (0+255),b
  5961  008300  EC58  F054         	call	_putchar	;wreg free
  5962  008304                     l22234:
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;alarm.c: 347:     }
  5966  008304  4B89               	infsnz	TestAlarm@i& (0+255),f,b
  5967  008306  2B8A               	incf	(TestAlarm@i+1)& (0+255),f,b
  5968                           
  5969                           ; BSR set to: 1
  5970  008308  518A               	movf	(TestAlarm@i+1)& (0+255),w,b
  5971  00830A  E104               	bnz	u22190
  5972  00830C  0E13               	movlw	19
  5973  00830E  5D89               	subwf	TestAlarm@i& (0+255),w,b
  5974  008310  A0D8               	btfss	status,0,c
  5975  008312  D7DC               	goto	l22228
  5976  008314                     u22190:
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;alarm.c: 348:     printf("\r\n");
  5980  008314  0EBA               	movlw	low (STR_22+15)
  5981  008316  6F71               	movwf	printf@fmt& (0+255),b
  5982  008318  0EFE               	movlw	high (STR_22+15)
  5983  00831A  6F72               	movwf	(printf@fmt+1)& (0+255),b
  5984  00831C  ECE6  F051         	call	_printf	;wreg free
  5985                           
  5986                           ; BSR set to: 2
  5987  008320  0012               	return		;funcret
  5988  008322                     __end_of_TestAlarm:
  5989                           	opt callstack 0
  5990                           
  5991 ;; *************** function _putchar *****************
  5992 ;; Defined at:
  5993 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/putchar.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  c               2   15[BANK1 ] int 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2   15[BANK1 ] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 3F/1
  6004 ;;		On exit  : 3F/1
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:        2 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:   19
  6014 ;; This function calls:
  6015 ;;		_fputc
  6016 ;; This function is called by:
  6017 ;;		_TestAlarm
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text6
  6022  00A8B0                     __ptext6:
  6023                           	opt callstack 0
  6024  00A8B0                     _putchar:
  6025                           	opt callstack 10
  6026                           
  6027                           ; BSR set to: 1
  6028                           ;	Return value of _putchar is never used
  6029                           
  6030                           ; BSR set to: 2
  6031                           ;incstack = 0
  6032  00A8B0  0060  F43C  F106   	movff	putchar@c,fputc@c
  6033  00A8B6  0060  F440  F107   	movff	putchar@c+1,fputc@c+1
  6034  00A8BC  0E00               	movlw	0
  6035  00A8BE  6F08               	movwf	fputc@fp& (0+255),b
  6036  00A8C0  0E00               	movlw	0
  6037  00A8C2  6F09               	movwf	(fputc@fp+1)& (0+255),b
  6038  00A8C4  EC1F  F03F         	call	_fputc	;wreg free
  6039                           
  6040                           ; BSR set to: 1
  6041  00A8C8  0012               	return		;funcret
  6042  00A8CA                     __end_of_putchar:
  6043                           	opt callstack 0
  6044                           
  6045 ;; *************** function _SetSV1 *****************
  6046 ;; Defined at:
  6047 ;;		line 871 in file "monitor.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  value           1    wreg     _Bool 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  value           1  131[BANK1 ] _Bool 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 1/3D
  6058 ;;		On exit  : 3D/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        1 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:   25
  6068 ;; This function calls:
  6069 ;;		_printf
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text7
  6076  00A060                     __ptext7:
  6077                           	opt callstack 0
  6078  00A060                     _SetSV1:
  6079                           	opt callstack 5
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;incstack = 0
  6083                           ;SetSV1@value stored from wreg
  6084  00A060  0101               	movlb	1	; () banked
  6085  00A062  6F83               	movwf	SetSV1@value& (0+255),b
  6086                           
  6087                           ;monitor.c: 872:     static _Bool last= 0;;monitor.c: 873:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
  6088  00A064  0101               	movlb	1	; () banked
  6089  00A066  5183               	movf	SetSV1@value& (0+255),w,b
  6090  00A068  0100               	movlb	0	; () banked
  6091  00A06A  19ED               	xorwf	SetSV1@last& (0+255),w,b
  6092  00A06C  B4D8               	btfsc	status,2,c
  6093  00A06E  D00B               	goto	l21846
  6094                           
  6095                           ; BSR set to: 0
  6096  00A070  0E90               	movlw	low STR_48
  6097  00A072  0101               	movlb	1	; () banked
  6098  00A074  6F71               	movwf	printf@fmt& (0+255),b
  6099  00A076  0EFF               	movlw	high STR_48
  6100  00A078  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6101  00A07A  0060  F60C  F173   	movff	SetSV1@value,?_printf+2
  6102  00A080  6B74               	clrf	(?_printf+3)& (0+255),b
  6103  00A082  ECE6  F051         	call	_printf	;wreg free
  6104  00A086                     l21846:
  6105                           
  6106                           ;monitor.c: 874:     last = value;
  6107  00A086  0060  F60C  F0ED   	movff	SetSV1@value,SetSV1@last
  6108                           
  6109                           ;monitor.c: 875:     normalSV1 = value;
  6110  00A08C  0060  F60C  F29F   	movff	SetSV1@value,_normalSV1
  6111  00A092  0012               	return		;funcret
  6112  00A094                     __end_of_SetSV1:
  6113                           	opt callstack 0
  6114                           
  6115 ;; *************** function _SetCalibrateState *****************
  6116 ;; Defined at:
  6117 ;;		line 243 in file "monitor.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  calib           1    wreg     _Bool 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  calib           1  131[BANK1 ] _Bool 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 3F/3
  6128 ;;		On exit  : 3C/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;Total ram usage:        1 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:   25
  6138 ;; This function calls:
  6139 ;;		_ClearVars
  6140 ;;		_GetPressureV_pa
  6141 ;;		_GetPressure_pa
  6142 ;;		_TMR0_StartTimer
  6143 ;;		_TMR0_StopTimer
  6144 ;;		_UnDisplayCalibrate
  6145 ;;		___awdiv
  6146 ;;		_printf
  6147 ;; This function is called by:
  6148 ;;		_main
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text8
  6153  006A06                     __ptext8:
  6154                           	opt callstack 0
  6155  006A06                     _SetCalibrateState:
  6156                           	opt callstack 5
  6157                           
  6158                           ;incstack = 0
  6159                           ;SetCalibrateState@calib stored from wreg
  6160  006A06  0101               	movlb	1	; () banked
  6161  006A08  6F83               	movwf	SetCalibrateState@calib& (0+255),b
  6162                           
  6163                           ;monitor.c: 244:     TMR0_StopTimer();
  6164  006A0A  ECEE  F057         	call	_TMR0_StopTimer	;wreg free
  6165                           
  6166                           ;monitor.c: 245:     if (calib) {
  6167  006A0E  0101               	movlb	1	; () banked
  6168  006A10  5183               	movf	SetCalibrateState@calib& (0+255),w,b
  6169  006A12  B4D8               	btfsc	status,2,c
  6170  006A14  D005               	goto	l22286
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;monitor.c: 247:         state = 1;
  6174  006A16  0E00               	movlw	0
  6175  006A18  6FE6               	movwf	(_state+1)& (0+255),b
  6176  006A1A  0E01               	movlw	1
  6177  006A1C  6FE5               	movwf	_state& (0+255),b
  6178                           
  6179                           ;monitor.c: 248:     } else {
  6180  006A1E  D07F               	goto	l22296
  6181  006A20                     l22286:
  6182                           
  6183                           ; BSR set to: 1
  6184                           ;monitor.c: 259:         if (state == 1) {
  6185  006A20  05E5               	decf	_state& (0+255),w,b
  6186  006A22  11E6               	iorwf	(_state+1)& (0+255),w,b
  6187  006A24  A4D8               	btfss	status,2,c
  6188  006A26  D079               	goto	l22294
  6189                           
  6190                           ; BSR set to: 1
  6191                           ;monitor.c: 260:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6192  006A28  0E05               	movlw	low STR_40
  6193  006A2A  6F71               	movwf	printf@fmt& (0+255),b
  6194  006A2C  0EFD               	movlw	high STR_40
  6195  006A2E  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6196  006A30  EC33  F02D         	call	_GetPressure_pa	;wreg free
  6197  006A34  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6198  006A3A  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6199  006A40  0060  F7E8  F10A   	movff	_adcOffset,___awdiv@dividend
  6200  006A46  0060  F7EC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6201  006A4C  0E00               	movlw	0
  6202  006A4E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6203  006A50  0E08               	movlw	8
  6204  006A52  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6205  006A54  EC7D  F045         	call	___awdiv	;wreg free
  6206  006A58  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6207  006A5E  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6208  006A64  ECA5  F038         	call	_GetPressureV_pa	;wreg free
  6209  006A68  0060  F478  F177   	movff	?_GetPressureV_pa,?_printf+6
  6210  006A6E  0060  F47C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6211  006A74  0060  F7E0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6212  006A7A  0060  F7E4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6213  006A80  0E00               	movlw	0
  6214  006A82  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6215  006A84  0E08               	movlw	8
  6216  006A86  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6217  006A88  EC7D  F045         	call	___awdiv	;wreg free
  6218  006A8C  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6219  006A92  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6220  006A98  ECE6  F051         	call	_printf	;wreg free
  6221                           
  6222                           ; BSR set to: 2
  6223                           ;monitor.c: 261:             state = 0;
  6224  006A9C  0E00               	movlw	0
  6225  006A9E  0101               	movlb	1	; () banked
  6226  006AA0  6FE6               	movwf	(_state+1)& (0+255),b
  6227  006AA2  0E00               	movlw	0
  6228  006AA4  6FE5               	movwf	_state& (0+255),b
  6229                           
  6230                           ; BSR set to: 1
  6231                           ;monitor.c: 262:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
  6232  006AA6  0E98               	movlw	low STR_41
  6233  006AA8  6F71               	movwf	printf@fmt& (0+255),b
  6234  006AAA  0EFC               	movlw	high STR_41
  6235  006AAC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  6236  006AAE  EC33  F02D         	call	_GetPressure_pa	;wreg free
  6237  006AB2  0060  F478  F173   	movff	?_GetPressure_pa,?_printf+2
  6238  006AB8  0060  F47C  F174   	movff	?_GetPressure_pa+1,?_printf+3
  6239  006ABE  0060  F7E8  F10A   	movff	_adcOffset,___awdiv@dividend
  6240  006AC4  0060  F7EC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6241  006ACA  0E00               	movlw	0
  6242  006ACC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6243  006ACE  0E08               	movlw	8
  6244  006AD0  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6245  006AD2  EC7D  F045         	call	___awdiv	;wreg free
  6246  006AD6  0060  F428  F175   	movff	?___awdiv,?_printf+4
  6247  006ADC  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
  6248  006AE2  ECA5  F038         	call	_GetPressureV_pa	;wreg free
  6249  006AE6  0060  F478  F177   	movff	?_GetPressureV_pa,?_printf+6
  6250  006AEC  0060  F47C  F178   	movff	?_GetPressureV_pa+1,?_printf+7
  6251  006AF2  0060  F7E0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6252  006AF8  0060  F7E4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6253  006AFE  0E00               	movlw	0
  6254  006B00  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6255  006B02  0E08               	movlw	8
  6256  006B04  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6257  006B06  EC7D  F045         	call	___awdiv	;wreg free
  6258  006B0A  0060  F428  F179   	movff	?___awdiv,?_printf+8
  6259  006B10  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
  6260  006B16  ECE6  F051         	call	_printf	;wreg free
  6261  006B1A                     l22294:
  6262                           
  6263                           ;monitor.c: 264:         UnDisplayCalibrate();
  6264  006B1A  ECA8  F055         	call	_UnDisplayCalibrate	;wreg free
  6265  006B1E                     l22296:
  6266                           
  6267                           ;monitor.c: 266:     ClearVars();
  6268  006B1E  EC4B  F022         	call	_ClearVars	;wreg free
  6269                           
  6270                           ; BSR set to: 2
  6271                           ;monitor.c: 267:     TMR0_StartTimer();
  6272  006B22  ECF2  F057         	call	_TMR0_StartTimer	;wreg free
  6273  006B26  0012               	return		;funcret
  6274  006B28                     __end_of_SetCalibrateState:
  6275                           	opt callstack 0
  6276                           
  6277 ;; *************** function _UnDisplayCalibrate *****************
  6278 ;; Defined at:
  6279 ;;		line 61 in file "display.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2
  6288 ;; Tracked objects:
  6289 ;;		On entry : 3C/1
  6290 ;;		On exit  : 3F/3
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:   16
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_SetCalibrateState
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text9
  6308  00AB50                     __ptext9:
  6309                           	opt callstack 0
  6310  00AB50                     _UnDisplayCalibrate:
  6311                           	opt callstack 13
  6312                           
  6313                           ;display.c: 62:     calibrate=0;
  6314                           
  6315                           ;incstack = 0
  6316  00AB50  0E00               	movlw	0
  6317  00AB52  0100               	movlb	0	; () banked
  6318  00AB54  6FFB               	movwf	_calibrate& (0+255),b
  6319                           
  6320                           ;display.c: 63:     msg4[0]=0;
  6321  00AB56  0E00               	movlw	0
  6322  00AB58  0103               	movlb	3	; () banked
  6323  00AB5A  6FA9               	movwf	_msg4& (0+255),b
  6324                           
  6325                           ; BSR set to: 3
  6326  00AB5C  0012               	return		;funcret
  6327  00AB5E                     __end_of_UnDisplayCalibrate:
  6328                           	opt callstack 0
  6329                           
  6330 ;; *************** function _TMR0_StopTimer *****************
  6331 ;; Defined at:
  6332 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		None
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/1
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:   16
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_SetCalibrateState
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text10
  6361  00AFDC                     __ptext10:
  6362                           	opt callstack 0
  6363  00AFDC                     _TMR0_StopTimer:
  6364                           	opt callstack 13
  6365                           
  6366                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
  6367                           
  6368                           ; BSR set to: 3
  6369                           ;incstack = 0
  6370  00AFDC  9EB8               	bcf	184,7,c	;volatile
  6371  00AFDE  0012               	return		;funcret
  6372  00AFE0                     __end_of_TMR0_StopTimer:
  6373                           	opt callstack 0
  6374                           
  6375 ;; *************** function _GetPressure_pa *****************
  6376 ;; Defined at:
  6377 ;;		line 773 in file "monitor.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  mv              4   40[BANK1 ] long 
  6382 ;;  p32             4   34[BANK1 ] long 
  6383 ;;  p               2   44[BANK1 ] short 
  6384 ;;  adc             2   38[BANK1 ] unsigned short 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  2   30[BANK1 ] short 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 3F/1
  6391 ;;		On exit  : 3F/1
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6394 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;Total ram usage:       16 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:   18
  6401 ;; This function calls:
  6402 ;;		_AdcGetData
  6403 ;;		___aldiv
  6404 ;;		___awdiv
  6405 ;;		___lmul
  6406 ;; This function is called by:
  6407 ;;		_SetCalibrateState
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text11
  6412  005A66                     __ptext11:
  6413                           	opt callstack 0
  6414  005A66                     _GetPressure_pa:
  6415                           	opt callstack 11
  6416                           
  6417                           ; BSR set to: 1
  6418                           ;monitor.c: 774:     adc_result_t adc = AdcGetData(0);
  6419                           
  6420                           ;incstack = 0
  6421  005A66  0E00               	movlw	0
  6422  005A68  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6423  005A6A  0E00               	movlw	0
  6424  005A6C  6F0A               	movwf	AdcGetData@id& (0+255),b
  6425  005A6E  EC95  F049         	call	_AdcGetData	;wreg free
  6426  005A72  0060  F428  F126   	movff	?_AdcGetData,GetPressure_pa@adc
  6427  005A78  0060  F42C  F127   	movff	?_AdcGetData+1,GetPressure_pa@adc+1
  6428                           
  6429                           ; BSR set to: 1
  6430                           ;monitor.c: 775:     if (state == 1) {
  6431  005A7E  05E5               	decf	_state& (0+255),w,b
  6432  005A80  11E6               	iorwf	(_state+1)& (0+255),w,b
  6433  005A82  A4D8               	btfss	status,2,c
  6434  005A84  D007               	goto	l21100
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;monitor.c: 776:         return adc;
  6438  005A86  0060  F498  F11E   	movff	GetPressure_pa@adc,?_GetPressure_pa
  6439  005A8C  0060  F49C  F11F   	movff	GetPressure_pa@adc+1,?_GetPressure_pa+1
  6440  005A92  0012               	return	
  6441  005A94                     l21100:
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;monitor.c: 779:     int32_t mv = adc - adcOffset/8;
  6445  005A94  0060  F7E8  F10A   	movff	_adcOffset,___awdiv@dividend
  6446  005A9A  0060  F7EC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6447  005AA0  0E00               	movlw	0
  6448  005AA2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6449  005AA4  0E08               	movlw	8
  6450  005AA6  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6451  005AA8  EC7D  F045         	call	___awdiv	;wreg free
  6452  005AAC  0060  F498  F120   	movff	GetPressure_pa@adc,??_GetPressure_pa
  6453  005AB2  0060  F49C  F121   	movff	GetPressure_pa@adc+1,??_GetPressure_pa+1
  6454  005AB8  510A               	movf	?___awdiv& (0+255),w,b
  6455  005ABA  5F20               	subwf	??_GetPressure_pa& (0+255),f,b
  6456  005ABC  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6457  005ABE  5B21               	subwfb	(??_GetPressure_pa+1)& (0+255),f,b
  6458  005AC0  0060  F480  F128   	movff	??_GetPressure_pa,GetPressure_pa@mv
  6459  005AC6  0060  F484  F129   	movff	??_GetPressure_pa+1,GetPressure_pa@mv+1
  6460  005ACC  6B2A               	clrf	(GetPressure_pa@mv+2)& (0+255),b
  6461  005ACE  6B2B               	clrf	(GetPressure_pa@mv+3)& (0+255),b
  6462                           
  6463                           ;monitor.c: 780:     mv = ( mv * 5000 )/ 4096;
  6464  005AD0  0060  F4A0  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6465  005AD6  0060  F4A4  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6466  005ADC  0060  F4A8  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6467  005AE2  0060  F4AC  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6468  005AE8  0E88               	movlw	136
  6469  005AEA  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6470  005AEC  0E13               	movlw	19
  6471  005AEE  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6472  005AF0  0E00               	movlw	0
  6473  005AF2  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6474  005AF4  0E00               	movlw	0
  6475  005AF6  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6476  005AF8  EC8F  F04A         	call	___lmul	;wreg free
  6477  005AFC  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6478  005B02  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6479  005B08  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6480  005B0E  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6481  005B14  0E00               	movlw	0
  6482  005B16  6F14               	movwf	___aldiv@divisor& (0+255),b
  6483  005B18  0E10               	movlw	16
  6484  005B1A  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6485  005B1C  0E00               	movlw	0
  6486  005B1E  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6487  005B20  0E00               	movlw	0
  6488  005B22  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6489  005B24  EC20  F03D         	call	___aldiv	;wreg free
  6490  005B28  0060  F440  F128   	movff	?___aldiv,GetPressure_pa@mv
  6491  005B2E  0060  F444  F129   	movff	?___aldiv+1,GetPressure_pa@mv+1
  6492  005B34  0060  F448  F12A   	movff	?___aldiv+2,GetPressure_pa@mv+2
  6493  005B3A  0060  F44C  F12B   	movff	?___aldiv+3,GetPressure_pa@mv+3
  6494                           
  6495                           ;monitor.c: 782:     int32_t p32 = (mv*100)/45;
  6496  005B40  0060  F4A0  F104   	movff	GetPressure_pa@mv,___lmul@multiplier
  6497  005B46  0060  F4A4  F105   	movff	GetPressure_pa@mv+1,___lmul@multiplier+1
  6498  005B4C  0060  F4A8  F106   	movff	GetPressure_pa@mv+2,___lmul@multiplier+2
  6499  005B52  0060  F4AC  F107   	movff	GetPressure_pa@mv+3,___lmul@multiplier+3
  6500  005B58  0E64               	movlw	100
  6501  005B5A  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6502  005B5C  0E00               	movlw	0
  6503  005B5E  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6504  005B60  0E00               	movlw	0
  6505  005B62  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6506  005B64  0E00               	movlw	0
  6507  005B66  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6508  005B68  EC8F  F04A         	call	___lmul	;wreg free
  6509  005B6C  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6510  005B72  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6511  005B78  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6512  005B7E  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6513  005B84  0E2D               	movlw	45
  6514  005B86  6F14               	movwf	___aldiv@divisor& (0+255),b
  6515  005B88  0E00               	movlw	0
  6516  005B8A  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6517  005B8C  0E00               	movlw	0
  6518  005B8E  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6519  005B90  0E00               	movlw	0
  6520  005B92  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6521  005B94  EC20  F03D         	call	___aldiv	;wreg free
  6522  005B98  0060  F440  F122   	movff	?___aldiv,GetPressure_pa@p32
  6523  005B9E  0060  F444  F123   	movff	?___aldiv+1,GetPressure_pa@p32+1
  6524  005BA4  0060  F448  F124   	movff	?___aldiv+2,GetPressure_pa@p32+2
  6525  005BAA  0060  F44C  F125   	movff	?___aldiv+3,GetPressure_pa@p32+3
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;monitor.c: 783:     int16_t p = ((int16_t) p32);
  6529  005BB0  0060  F488  F12C   	movff	GetPressure_pa@p32,GetPressure_pa@p
  6530  005BB6  0060  F48C  F12D   	movff	GetPressure_pa@p32+1,GetPressure_pa@p+1
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;monitor.c: 784:     if (p<0) p=0;
  6534  005BBC  AF2D               	btfss	(GetPressure_pa@p+1)& (0+255),7,b
  6535  005BBE  D004               	goto	l21108
  6536                           
  6537                           ; BSR set to: 1
  6538  005BC0  0E00               	movlw	0
  6539  005BC2  6F2D               	movwf	(GetPressure_pa@p+1)& (0+255),b
  6540  005BC4  0E00               	movlw	0
  6541  005BC6  6F2C               	movwf	GetPressure_pa@p& (0+255),b
  6542  005BC8                     l21108:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;monitor.c: 785:     return p;
  6546  005BC8  0060  F4B0  F11E   	movff	GetPressure_pa@p,?_GetPressure_pa
  6547  005BCE  0060  F4B4  F11F   	movff	GetPressure_pa@p+1,?_GetPressure_pa+1
  6548                           
  6549                           ; BSR set to: 1
  6550  005BD4  0012               	return		;funcret
  6551  005BD6                     __end_of_GetPressure_pa:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function _GetPressureV_pa *****************
  6555 ;; Defined at:
  6556 ;;		line 798 in file "monitor.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  mv              4   36[BANK1 ] long 
  6561 ;;  p               2   40[BANK1 ] short 
  6562 ;;  adcv            2   34[BANK1 ] unsigned short 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2   30[BANK1 ] short 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 3F/1
  6569 ;;		On exit  : 3F/1
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6572 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;Total ram usage:       12 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:   18
  6579 ;; This function calls:
  6580 ;;		_AdcGetData
  6581 ;;		___aldiv
  6582 ;;		___awdiv
  6583 ;;		___lmul
  6584 ;; This function is called by:
  6585 ;;		_SetCalibrateState
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text12
  6590  00714A                     __ptext12:
  6591                           	opt callstack 0
  6592  00714A                     _GetPressureV_pa:
  6593                           	opt callstack 11
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;monitor.c: 800:     adc_result_t adcv = AdcGetData(2);
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;incstack = 0
  6600  00714A  0E00               	movlw	0
  6601  00714C  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
  6602  00714E  0E02               	movlw	2
  6603  007150  6F0A               	movwf	AdcGetData@id& (0+255),b
  6604  007152  EC95  F049         	call	_AdcGetData	;wreg free
  6605  007156  0060  F428  F122   	movff	?_AdcGetData,GetPressureV_pa@adcv
  6606  00715C  0060  F42C  F123   	movff	?_AdcGetData+1,GetPressureV_pa@adcv+1
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;monitor.c: 801:     if (state == 1) {
  6610  007162  05E5               	decf	_state& (0+255),w,b
  6611  007164  11E6               	iorwf	(_state+1)& (0+255),w,b
  6612  007166  A4D8               	btfss	status,2,c
  6613  007168  D007               	goto	l21118
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;monitor.c: 802:         return adcv;
  6617  00716A  0060  F488  F11E   	movff	GetPressureV_pa@adcv,?_GetPressureV_pa
  6618  007170  0060  F48C  F11F   	movff	GetPressureV_pa@adcv+1,?_GetPressureV_pa+1
  6619  007176  0012               	return	
  6620  007178                     l21118:
  6621                           
  6622                           ; BSR set to: 1
  6623                           ;monitor.c: 805:     int32_t mv = adcv - adcVOffset/8;
  6624  007178  0060  F7E0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6625  00717E  0060  F7E4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6626  007184  0E00               	movlw	0
  6627  007186  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6628  007188  0E08               	movlw	8
  6629  00718A  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6630  00718C  EC7D  F045         	call	___awdiv	;wreg free
  6631  007190  0060  F488  F120   	movff	GetPressureV_pa@adcv,??_GetPressureV_pa
  6632  007196  0060  F48C  F121   	movff	GetPressureV_pa@adcv+1,??_GetPressureV_pa+1
  6633  00719C  510A               	movf	?___awdiv& (0+255),w,b
  6634  00719E  5F20               	subwf	??_GetPressureV_pa& (0+255),f,b
  6635  0071A0  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6636  0071A2  5B21               	subwfb	(??_GetPressureV_pa+1)& (0+255),f,b
  6637  0071A4  0060  F480  F124   	movff	??_GetPressureV_pa,GetPressureV_pa@mv
  6638  0071AA  0060  F484  F125   	movff	??_GetPressureV_pa+1,GetPressureV_pa@mv+1
  6639  0071B0  6B26               	clrf	(GetPressureV_pa@mv+2)& (0+255),b
  6640  0071B2  6B27               	clrf	(GetPressureV_pa@mv+3)& (0+255),b
  6641                           
  6642                           ;monitor.c: 806:     mv = ( mv * 5000 )/ 4096;
  6643  0071B4  0060  F490  F104   	movff	GetPressureV_pa@mv,___lmul@multiplier
  6644  0071BA  0060  F494  F105   	movff	GetPressureV_pa@mv+1,___lmul@multiplier+1
  6645  0071C0  0060  F498  F106   	movff	GetPressureV_pa@mv+2,___lmul@multiplier+2
  6646  0071C6  0060  F49C  F107   	movff	GetPressureV_pa@mv+3,___lmul@multiplier+3
  6647  0071CC  0E88               	movlw	136
  6648  0071CE  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6649  0071D0  0E13               	movlw	19
  6650  0071D2  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6651  0071D4  0E00               	movlw	0
  6652  0071D6  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6653  0071D8  0E00               	movlw	0
  6654  0071DA  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6655  0071DC  EC8F  F04A         	call	___lmul	;wreg free
  6656  0071E0  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6657  0071E6  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6658  0071EC  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6659  0071F2  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6660  0071F8  0E00               	movlw	0
  6661  0071FA  6F14               	movwf	___aldiv@divisor& (0+255),b
  6662  0071FC  0E10               	movlw	16
  6663  0071FE  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6664  007200  0E00               	movlw	0
  6665  007202  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6666  007204  0E00               	movlw	0
  6667  007206  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6668  007208  EC20  F03D         	call	___aldiv	;wreg free
  6669  00720C  0060  F440  F124   	movff	?___aldiv,GetPressureV_pa@mv
  6670  007212  0060  F444  F125   	movff	?___aldiv+1,GetPressureV_pa@mv+1
  6671  007218  0060  F448  F126   	movff	?___aldiv+2,GetPressureV_pa@mv+2
  6672  00721E  0060  F44C  F127   	movff	?___aldiv+3,GetPressureV_pa@mv+3
  6673                           
  6674                           ; BSR set to: 1
  6675                           ;monitor.c: 808:     int16_t p = mv;
  6676  007224  0060  F490  F128   	movff	GetPressureV_pa@mv,GetPressureV_pa@p
  6677  00722A  0060  F494  F129   	movff	GetPressureV_pa@mv+1,GetPressureV_pa@p+1
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;monitor.c: 810:     if (p<0) p=0;
  6681  007230  AF29               	btfss	(GetPressureV_pa@p+1)& (0+255),7,b
  6682  007232  D004               	goto	l21126
  6683                           
  6684                           ; BSR set to: 1
  6685  007234  0E00               	movlw	0
  6686  007236  6F29               	movwf	(GetPressureV_pa@p+1)& (0+255),b
  6687  007238  0E00               	movlw	0
  6688  00723A  6F28               	movwf	GetPressureV_pa@p& (0+255),b
  6689  00723C                     l21126:
  6690                           
  6691                           ; BSR set to: 1
  6692                           ;monitor.c: 811:     return p;
  6693  00723C  0060  F4A0  F11E   	movff	GetPressureV_pa@p,?_GetPressureV_pa
  6694  007242  0060  F4A4  F11F   	movff	GetPressureV_pa@p+1,?_GetPressureV_pa+1
  6695                           
  6696                           ; BSR set to: 1
  6697  007248  0012               	return		;funcret
  6698  00724A                     __end_of_GetPressureV_pa:
  6699                           	opt callstack 0
  6700                           
  6701 ;; *************** function _SeePressure_pa *****************
  6702 ;; Defined at:
  6703 ;;		line 788 in file "monitor.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  mv              4   40[BANK1 ] long 
  6708 ;;  p32             4   34[BANK1 ] long 
  6709 ;;  p               2   44[BANK1 ] short 
  6710 ;;  adc             2   38[BANK1 ] unsigned short 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  2   30[BANK1 ] short 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 3F/1
  6717 ;;		On exit  : 3F/1
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:       16 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:   18
  6727 ;; This function calls:
  6728 ;;		_AdcSeeData
  6729 ;;		___aldiv
  6730 ;;		___awdiv
  6731 ;;		___lmul
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text13
  6738  005EB6                     __ptext13:
  6739                           	opt callstack 0
  6740  005EB6                     _SeePressure_pa:
  6741                           	opt callstack 12
  6742                           
  6743                           ; BSR set to: 1
  6744                           ;monitor.c: 789:     adc_result_t adc = AdcSeeData(0);
  6745                           
  6746                           ; BSR set to: 1
  6747                           ;incstack = 0
  6748  005EB6  0E00               	movlw	0
  6749  005EB8  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6750  005EBA  0E00               	movlw	0
  6751  005EBC  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6752  005EBE  EC76  F04E         	call	_AdcSeeData	;wreg free
  6753  005EC2  0060  F428  F126   	movff	?_AdcSeeData,SeePressure_pa@adc
  6754  005EC8  0060  F42C  F127   	movff	?_AdcSeeData+1,SeePressure_pa@adc+1
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;monitor.c: 790:     int32_t mv = adc - adcOffset/8;
  6758  005ECE  0060  F7E8  F10A   	movff	_adcOffset,___awdiv@dividend
  6759  005ED4  0060  F7EC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
  6760  005EDA  0E00               	movlw	0
  6761  005EDC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6762  005EDE  0E08               	movlw	8
  6763  005EE0  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6764  005EE2  EC7D  F045         	call	___awdiv	;wreg free
  6765  005EE6  0060  F498  F120   	movff	SeePressure_pa@adc,??_SeePressure_pa
  6766  005EEC  0060  F49C  F121   	movff	SeePressure_pa@adc+1,??_SeePressure_pa+1
  6767  005EF2  510A               	movf	?___awdiv& (0+255),w,b
  6768  005EF4  5F20               	subwf	??_SeePressure_pa& (0+255),f,b
  6769  005EF6  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6770  005EF8  5B21               	subwfb	(??_SeePressure_pa+1)& (0+255),f,b
  6771  005EFA  0060  F480  F128   	movff	??_SeePressure_pa,SeePressure_pa@mv
  6772  005F00  0060  F484  F129   	movff	??_SeePressure_pa+1,SeePressure_pa@mv+1
  6773  005F06  6B2A               	clrf	(SeePressure_pa@mv+2)& (0+255),b
  6774  005F08  6B2B               	clrf	(SeePressure_pa@mv+3)& (0+255),b
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;monitor.c: 791:     mv = ( mv * 5000 )/ 4096;
  6778  005F0A  0060  F4A0  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6779  005F10  0060  F4A4  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6780  005F16  0060  F4A8  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6781  005F1C  0060  F4AC  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6782  005F22  0E88               	movlw	136
  6783  005F24  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6784  005F26  0E13               	movlw	19
  6785  005F28  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6786  005F2A  0E00               	movlw	0
  6787  005F2C  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6788  005F2E  0E00               	movlw	0
  6789  005F30  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6790  005F32  EC8F  F04A         	call	___lmul	;wreg free
  6791  005F36  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6792  005F3C  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6793  005F42  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6794  005F48  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6795  005F4E  0E00               	movlw	0
  6796  005F50  6F14               	movwf	___aldiv@divisor& (0+255),b
  6797  005F52  0E10               	movlw	16
  6798  005F54  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6799  005F56  0E00               	movlw	0
  6800  005F58  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6801  005F5A  0E00               	movlw	0
  6802  005F5C  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6803  005F5E  EC20  F03D         	call	___aldiv	;wreg free
  6804  005F62  0060  F440  F128   	movff	?___aldiv,SeePressure_pa@mv
  6805  005F68  0060  F444  F129   	movff	?___aldiv+1,SeePressure_pa@mv+1
  6806  005F6E  0060  F448  F12A   	movff	?___aldiv+2,SeePressure_pa@mv+2
  6807  005F74  0060  F44C  F12B   	movff	?___aldiv+3,SeePressure_pa@mv+3
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;monitor.c: 792:     int32_t p32 = (mv*100)/45;
  6811  005F7A  0060  F4A0  F104   	movff	SeePressure_pa@mv,___lmul@multiplier
  6812  005F80  0060  F4A4  F105   	movff	SeePressure_pa@mv+1,___lmul@multiplier+1
  6813  005F86  0060  F4A8  F106   	movff	SeePressure_pa@mv+2,___lmul@multiplier+2
  6814  005F8C  0060  F4AC  F107   	movff	SeePressure_pa@mv+3,___lmul@multiplier+3
  6815  005F92  0E64               	movlw	100
  6816  005F94  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6817  005F96  0E00               	movlw	0
  6818  005F98  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6819  005F9A  0E00               	movlw	0
  6820  005F9C  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6821  005F9E  0E00               	movlw	0
  6822  005FA0  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6823  005FA2  EC8F  F04A         	call	___lmul	;wreg free
  6824  005FA6  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6825  005FAC  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6826  005FB2  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6827  005FB8  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6828  005FBE  0E2D               	movlw	45
  6829  005FC0  6F14               	movwf	___aldiv@divisor& (0+255),b
  6830  005FC2  0E00               	movlw	0
  6831  005FC4  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6832  005FC6  0E00               	movlw	0
  6833  005FC8  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6834  005FCA  0E00               	movlw	0
  6835  005FCC  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6836  005FCE  EC20  F03D         	call	___aldiv	;wreg free
  6837  005FD2  0060  F440  F122   	movff	?___aldiv,SeePressure_pa@p32
  6838  005FD8  0060  F444  F123   	movff	?___aldiv+1,SeePressure_pa@p32+1
  6839  005FDE  0060  F448  F124   	movff	?___aldiv+2,SeePressure_pa@p32+2
  6840  005FE4  0060  F44C  F125   	movff	?___aldiv+3,SeePressure_pa@p32+3
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;monitor.c: 793:     int16_t p = ((int16_t) p32);
  6844  005FEA  0060  F488  F12C   	movff	SeePressure_pa@p32,SeePressure_pa@p
  6845  005FF0  0060  F48C  F12D   	movff	SeePressure_pa@p32+1,SeePressure_pa@p+1
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;monitor.c: 794:     if (p<0) p=0;
  6849  005FF6  AF2D               	btfss	(SeePressure_pa@p+1)& (0+255),7,b
  6850  005FF8  D004               	goto	l22262
  6851                           
  6852                           ; BSR set to: 1
  6853  005FFA  0E00               	movlw	0
  6854  005FFC  6F2D               	movwf	(SeePressure_pa@p+1)& (0+255),b
  6855  005FFE  0E00               	movlw	0
  6856  006000  6F2C               	movwf	SeePressure_pa@p& (0+255),b
  6857  006002                     l22262:
  6858                           
  6859                           ; BSR set to: 1
  6860                           ;monitor.c: 795:     return p;
  6861  006002  0060  F4B0  F11E   	movff	SeePressure_pa@p,?_SeePressure_pa
  6862  006008  0060  F4B4  F11F   	movff	SeePressure_pa@p+1,?_SeePressure_pa+1
  6863                           
  6864                           ; BSR set to: 1
  6865  00600E  0012               	return		;funcret
  6866  006010                     __end_of_SeePressure_pa:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _SeePressureV_pa *****************
  6870 ;; Defined at:
  6871 ;;		line 814 in file "monitor.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  mv              4   38[BANK1 ] long 
  6876 ;;  p               2   36[BANK1 ] short 
  6877 ;;  adcv            2   34[BANK1 ] unsigned short 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2   30[BANK1 ] short 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 3F/1
  6884 ;;		On exit  : 3F/1
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:       12 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   18
  6894 ;; This function calls:
  6895 ;;		_AdcSeeData
  6896 ;;		___aldiv
  6897 ;;		___awdiv
  6898 ;;		___lmul
  6899 ;; This function is called by:
  6900 ;;		_main
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text14
  6905  0075FC                     __ptext14:
  6906                           	opt callstack 0
  6907  0075FC                     _SeePressureV_pa:
  6908                           	opt callstack 12
  6909                           
  6910                           ; BSR set to: 1
  6911                           ;monitor.c: 815:     adc_result_t adcv = AdcSeeData(2);
  6912                           
  6913                           ; BSR set to: 1
  6914                           ;incstack = 0
  6915  0075FC  0E00               	movlw	0
  6916  0075FE  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
  6917  007600  0E02               	movlw	2
  6918  007602  6F0A               	movwf	AdcSeeData@id& (0+255),b
  6919  007604  EC76  F04E         	call	_AdcSeeData	;wreg free
  6920  007608  0060  F428  F122   	movff	?_AdcSeeData,SeePressureV_pa@adcv
  6921  00760E  0060  F42C  F123   	movff	?_AdcSeeData+1,SeePressureV_pa@adcv+1
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;monitor.c: 816:     int32_t mv = adcv - adcVOffset/8;
  6925  007614  0060  F7E0  F10A   	movff	_adcVOffset,___awdiv@dividend
  6926  00761A  0060  F7E4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
  6927  007620  0E00               	movlw	0
  6928  007622  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6929  007624  0E08               	movlw	8
  6930  007626  6F0C               	movwf	___awdiv@divisor& (0+255),b
  6931  007628  EC7D  F045         	call	___awdiv	;wreg free
  6932  00762C  0060  F488  F120   	movff	SeePressureV_pa@adcv,??_SeePressureV_pa
  6933  007632  0060  F48C  F121   	movff	SeePressureV_pa@adcv+1,??_SeePressureV_pa+1
  6934  007638  510A               	movf	?___awdiv& (0+255),w,b
  6935  00763A  5F20               	subwf	??_SeePressureV_pa& (0+255),f,b
  6936  00763C  510B               	movf	(?___awdiv+1)& (0+255),w,b
  6937  00763E  5B21               	subwfb	(??_SeePressureV_pa+1)& (0+255),f,b
  6938  007640  0060  F480  F126   	movff	??_SeePressureV_pa,SeePressureV_pa@mv
  6939  007646  0060  F484  F127   	movff	??_SeePressureV_pa+1,SeePressureV_pa@mv+1
  6940  00764C  6B28               	clrf	(SeePressureV_pa@mv+2)& (0+255),b
  6941  00764E  6B29               	clrf	(SeePressureV_pa@mv+3)& (0+255),b
  6942                           
  6943                           ; BSR set to: 1
  6944                           ;monitor.c: 817:     mv = ( mv * 5000 )/ 4096;
  6945  007650  0060  F498  F104   	movff	SeePressureV_pa@mv,___lmul@multiplier
  6946  007656  0060  F49C  F105   	movff	SeePressureV_pa@mv+1,___lmul@multiplier+1
  6947  00765C  0060  F4A0  F106   	movff	SeePressureV_pa@mv+2,___lmul@multiplier+2
  6948  007662  0060  F4A4  F107   	movff	SeePressureV_pa@mv+3,___lmul@multiplier+3
  6949  007668  0E88               	movlw	136
  6950  00766A  6F08               	movwf	___lmul@multiplicand& (0+255),b
  6951  00766C  0E13               	movlw	19
  6952  00766E  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6953  007670  0E00               	movlw	0
  6954  007672  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6955  007674  0E00               	movlw	0
  6956  007676  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6957  007678  EC8F  F04A         	call	___lmul	;wreg free
  6958  00767C  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
  6959  007682  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
  6960  007688  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
  6961  00768E  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
  6962  007694  0E00               	movlw	0
  6963  007696  6F14               	movwf	___aldiv@divisor& (0+255),b
  6964  007698  0E10               	movlw	16
  6965  00769A  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
  6966  00769C  0E00               	movlw	0
  6967  00769E  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
  6968  0076A0  0E00               	movlw	0
  6969  0076A2  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
  6970  0076A4  EC20  F03D         	call	___aldiv	;wreg free
  6971  0076A8  0060  F440  F126   	movff	?___aldiv,SeePressureV_pa@mv
  6972  0076AE  0060  F444  F127   	movff	?___aldiv+1,SeePressureV_pa@mv+1
  6973  0076B4  0060  F448  F128   	movff	?___aldiv+2,SeePressureV_pa@mv+2
  6974  0076BA  0060  F44C  F129   	movff	?___aldiv+3,SeePressureV_pa@mv+3
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;monitor.c: 818:     int16_t p = mv;
  6978  0076C0  0060  F498  F124   	movff	SeePressureV_pa@mv,SeePressureV_pa@p
  6979  0076C6  0060  F49C  F125   	movff	SeePressureV_pa@mv+1,SeePressureV_pa@p+1
  6980                           
  6981                           ; BSR set to: 1
  6982                           ;monitor.c: 819:     return p;
  6983  0076CC  0060  F490  F11E   	movff	SeePressureV_pa@p,?_SeePressureV_pa
  6984  0076D2  0060  F494  F11F   	movff	SeePressureV_pa@p+1,?_SeePressureV_pa+1
  6985                           
  6986                           ; BSR set to: 1
  6987  0076D8  0012               	return		;funcret
  6988  0076DA                     __end_of_SeePressureV_pa:
  6989                           	opt callstack 0
  6990                           
  6991 ;; *************** function _SYSTEM_Initialize *****************
  6992 ;; Defined at:
  6993 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 3F/3D
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;Total ram usage:        0 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:   18
  7014 ;; This function calls:
  7015 ;;		_ADCC_Initialize
  7016 ;;		_CMP1_Initialize
  7017 ;;		_FVR_Initialize
  7018 ;;		_I2C2_Initialize
  7019 ;;		_INTERRUPT_Initialize
  7020 ;;		_OSCILLATOR_Initialize
  7021 ;;		_PIN_MANAGER_Initialize
  7022 ;;		_PMD_Initialize
  7023 ;;		_PWM6_Initialize
  7024 ;;		_TMR0_Initialize
  7025 ;;		_TMR1_Initialize
  7026 ;;		_TMR2_Initialize
  7027 ;;		_TMR4_Initialize
  7028 ;;		_TMR5_Initialize
  7029 ;;		_TMR6_Initialize
  7030 ;;		_UART1_Initialize
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text15
  7037  009C6A                     __ptext15:
  7038                           	opt callstack 0
  7039  009C6A                     _SYSTEM_Initialize:
  7040                           	opt callstack 12
  7041                           
  7042                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;incstack = 0
  7046  009C6A  ECF0  F057         	call	_INTERRUPT_Initialize	;wreg free
  7047                           
  7048                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7049  009C6E  ECE0  F052         	call	_PMD_Initialize	;wreg free
  7050                           
  7051                           ; BSR set to: 57
  7052                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7053  009C72  ECD6  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
  7054                           
  7055                           ; BSR set to: 58
  7056                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7057  009C76  ECA5  F054         	call	_OSCILLATOR_Initialize	;wreg free
  7058                           
  7059                           ; BSR set to: 57
  7060                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  7061  009C7A  EC0B  F057         	call	_FVR_Initialize	;wreg free
  7062                           
  7063                           ; BSR set to: 62
  7064                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  7065  009C7E  EC56  F048         	call	_ADCC_Initialize	;wreg free
  7066                           
  7067                           ; BSR set to: 1
  7068                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  7069  009C82  EC47  F051         	call	_TMR4_Initialize	;wreg free
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7073  009C86  EC1D  F054         	call	_TMR2_Initialize	;wreg free
  7074                           
  7075                           ; BSR set to: 57
  7076                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7077  009C8A  ECCE  F052         	call	_TMR0_Initialize	;wreg free
  7078                           
  7079                           ; BSR set to: 1
  7080                           ;mcc_generated_files/mcc.c: 61:     PWM6_Initialize();
  7081  009C8E  EC99  F054         	call	_PWM6_Initialize	;wreg free
  7082                           
  7083                           ; BSR set to: 63
  7084                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
  7085  009C92  EC30  F051         	call	_TMR6_Initialize	;wreg free
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;mcc_generated_files/mcc.c: 63:     CMP1_Initialize();
  7089  009C96  EC7D  F053         	call	_CMP1_Initialize	;wreg free
  7090                           
  7091                           ; BSR set to: 57
  7092                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
  7093  009C9A  ECE5  F04C         	call	_TMR5_Initialize	;wreg free
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  7097  009C9E  ECEF  F04B         	call	_TMR1_Initialize	;wreg free
  7098                           
  7099                           ; BSR set to: 1
  7100                           ;mcc_generated_files/mcc.c: 66:     UART1_Initialize();
  7101  009CA2  ECBF  F03E         	call	_UART1_Initialize	;wreg free
  7102                           
  7103                           ; BSR set to: 57
  7104                           ;mcc_generated_files/mcc.c: 67:     I2C2_Initialize();
  7105  009CA6  EC3E  F055         	call	_I2C2_Initialize	;wreg free
  7106                           
  7107                           ; BSR set to: 61
  7108  009CAA  0012               	return		;funcret
  7109  009CAC                     __end_of_SYSTEM_Initialize:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _UART1_Initialize *****************
  7113 ;; Defined at:
  7114 ;;		line 86 in file "mcc_generated_files/uart1.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 3F/1
  7125 ;;		On exit  : 3F/39
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   17
  7135 ;; This function calls:
  7136 ;;		_UART1_SetErrorHandler
  7137 ;;		_UART1_SetFramingErrorHandler
  7138 ;;		_UART1_SetOverrunErrorHandler
  7139 ;;		_UART1_SetRxInterruptHandler
  7140 ;;		_UART1_SetTxInterruptHandler
  7141 ;; This function is called by:
  7142 ;;		_SYSTEM_Initialize
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text16
  7147  007D7E                     __ptext16:
  7148                           	opt callstack 0
  7149  007D7E                     _UART1_Initialize:
  7150                           	opt callstack 12
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  7154                           
  7155                           ; BSR set to: 61
  7156                           ;incstack = 0
  7157  007D7E  0139               	movlb	57	; () banked
  7158  007D80  9793               	bcf	147,3,b	;volatile
  7159                           
  7160                           ; BSR set to: 57
  7161                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  7162  007D82  0EC0               	movlw	low _UART1_Receive_ISR
  7163  007D84  0101               	movlb	1	; () banked
  7164  007D86  6F04               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
  7165  007D88  0E85               	movlw	high _UART1_Receive_ISR
  7166  007D8A  6F05               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
  7167  007D8C  ECB6  F055         	call	_UART1_SetRxInterruptHandler	;wreg free
  7168                           
  7169                           ; BSR set to: 1
  7170                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  7171  007D90  0139               	movlb	57	; () banked
  7172  007D92  9993               	bcf	147,4,b	;volatile
  7173                           
  7174                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  7175  007D94  0E98               	movlw	low _UART1_Transmit_ISR
  7176  007D96  0101               	movlb	1	; () banked
  7177  007D98  6F04               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
  7178  007D9A  0E9B               	movlw	high _UART1_Transmit_ISR
  7179  007D9C  6F05               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
  7180  007D9E  ECAF  F055         	call	_UART1_SetTxInterruptHandler	;wreg free
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  7184  007DA2  0E00               	movlw	0
  7185  007DA4  013D               	movlb	61	; () banked
  7186  007DA6  6FEC               	movwf	236,b	;volatile
  7187                           
  7188                           ; BSR set to: 61
  7189                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  7190  007DA8  0E00               	movlw	0
  7191  007DAA  6FED               	movwf	237,b	;volatile
  7192                           
  7193                           ; BSR set to: 61
  7194                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  7195  007DAC  0E00               	movlw	0
  7196  007DAE  6FEE               	movwf	238,b	;volatile
  7197                           
  7198                           ; BSR set to: 61
  7199                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  7200  007DB0  0E00               	movlw	0
  7201  007DB2  6FEF               	movwf	239,b	;volatile
  7202                           
  7203                           ; BSR set to: 61
  7204                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  7205  007DB4  0E00               	movlw	0
  7206  007DB6  6FF0               	movwf	240,b	;volatile
  7207                           
  7208                           ; BSR set to: 61
  7209                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  7210  007DB8  0E00               	movlw	0
  7211  007DBA  6FF1               	movwf	241,b	;volatile
  7212                           
  7213                           ; BSR set to: 61
  7214                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  7215  007DBC  0EB0               	movlw	176
  7216  007DBE  6FF2               	movwf	242,b	;volatile
  7217                           
  7218                           ; BSR set to: 61
  7219                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  7220  007DC0  0E80               	movlw	128
  7221  007DC2  6FF3               	movwf	243,b	;volatile
  7222                           
  7223                           ; BSR set to: 61
  7224                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  7225  007DC4  0E00               	movlw	0
  7226  007DC6  6FF4               	movwf	244,b	;volatile
  7227                           
  7228                           ; BSR set to: 61
  7229                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x8A;
  7230  007DC8  0E8A               	movlw	138
  7231  007DCA  6FF5               	movwf	245,b	;volatile
  7232                           
  7233                           ; BSR set to: 61
  7234                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  7235  007DCC  0E00               	movlw	0
  7236  007DCE  6FF6               	movwf	246,b	;volatile
  7237                           
  7238                           ; BSR set to: 61
  7239                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  7240  007DD0  0E00               	movlw	0
  7241  007DD2  6FF7               	movwf	247,b	;volatile
  7242                           
  7243                           ; BSR set to: 61
  7244                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  7245  007DD4  0E00               	movlw	0
  7246  007DD6  6FF8               	movwf	248,b	;volatile
  7247                           
  7248                           ; BSR set to: 61
  7249                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  7250  007DD8  0E00               	movlw	0
  7251  007DDA  6FF9               	movwf	249,b	;volatile
  7252                           
  7253                           ; BSR set to: 61
  7254                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  7255  007DDC  0E00               	movlw	0
  7256  007DDE  6FFA               	movwf	250,b	;volatile
  7257                           
  7258                           ; BSR set to: 61
  7259                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  7260  007DE0  0E50               	movlw	low _UART1_DefaultFramingErrorHandler
  7261  007DE2  0101               	movlb	1	; () banked
  7262  007DE4  6F04               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  7263  007DE6  0EB0               	movlw	high _UART1_DefaultFramingErrorHandler
  7264  007DE8  6F05               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  7265  007DEA  ECC4  F055         	call	_UART1_SetFramingErrorHandler	;wreg free
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  7269  007DEE  0E4E               	movlw	low _UART1_DefaultOverrunErrorHandler
  7270  007DF0  6F04               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  7271  007DF2  0EB0               	movlw	high _UART1_DefaultOverrunErrorHandler
  7272  007DF4  6F05               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  7273  007DF6  ECBD  F055         	call	_UART1_SetOverrunErrorHandler	;wreg free
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  7277  007DFA  0E78               	movlw	low _UART1_DefaultErrorHandler
  7278  007DFC  6F04               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  7279  007DFE  0EAF               	movlw	high _UART1_DefaultErrorHandler
  7280  007E00  6F05               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  7281  007E02  ECCB  F055         	call	_UART1_SetErrorHandler	;wreg free
  7282                           
  7283                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  7284  007E06  0E00               	movlw	0
  7285  007E08  0102               	movlb	2	; () banked
  7286  007E0A  6FB9               	movwf	_uart1RxLastError& (0+255),b	;volatile
  7287                           
  7288                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  7289  007E0C  0E00               	movlw	0
  7290  007E0E  0101               	movlb	1	; () banked
  7291  007E10  6FF2               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
  7292  007E12  0E00               	movlw	0
  7293  007E14  6FF1               	movwf	_uart1TxHead& (0+255),b	;volatile
  7294                           
  7295                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  7296  007E16  0E00               	movlw	0
  7297  007E18  0100               	movlb	0	; () banked
  7298  007E1A  6FE9               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
  7299  007E1C  0E00               	movlw	0
  7300  007E1E  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
  7301                           
  7302                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  7303  007E20  0E04               	movlw	4
  7304  007E22  0102               	movlb	2	; () banked
  7305  007E24  6FEC               	movwf	(_uart1TxBufferRemaining+1)& (0+255),b	;volatile
  7306  007E26  0EB0               	movlw	176
  7307  007E28  6FEB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  7308                           
  7309                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  7310  007E2A  0E00               	movlw	0
  7311  007E2C  0101               	movlb	1	; () banked
  7312  007E2E  6FF7               	movwf	_uart1RxHead& (0+255),b	;volatile
  7313                           
  7314                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  7315  007E30  0E00               	movlw	0
  7316  007E32  6FF6               	movwf	_uart1RxTail& (0+255),b	;volatile
  7317                           
  7318                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  7319  007E34  0E00               	movlw	0
  7320  007E36  6FF5               	movwf	_uart1RxCount& (0+255),b	;volatile
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  7324  007E38  0139               	movlb	57	; () banked
  7325  007E3A  8793               	bsf	147,3,b	;volatile
  7326                           
  7327                           ; BSR set to: 57
  7328  007E3C  0012               	return		;funcret
  7329  007E3E                     __end_of_UART1_Initialize:
  7330                           	opt callstack 0
  7331                           
  7332 ;; *************** function _UART1_SetTxInterruptHandler *****************
  7333 ;; Defined at:
  7334 ;;		line 318 in file "mcc_generated_files/uart1.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7337 ;;		 -> UART1_Transmit_ISR(1), 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 3F/1
  7346 ;;		On exit  : 3F/1
  7347 ;;		Unchanged: 3F/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7349 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;Total ram usage:        2 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:   16
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_UART1_Initialize
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text17
  7364  00AB5E                     __ptext17:
  7365                           	opt callstack 0
  7366  00AB5E                     _UART1_SetTxInterruptHandler:
  7367                           	opt callstack 12
  7368                           
  7369                           ; BSR set to: 1
  7370                           ;mcc_generated_files/uart1.c: 319:     UART1_TxInterruptHandler = InterruptHandler;
  7371                           
  7372                           ; BSR set to: 57
  7373                           ;incstack = 0
  7374  00AB5E  0060  F410  F2EF   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  7375  00AB64  0060  F414  F2F0   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  7376                           
  7377                           ; BSR set to: 1
  7378  00AB6A  0012               	return		;funcret
  7379  00AB6C                     __end_of_UART1_SetTxInterruptHandler:
  7380                           	opt callstack 0
  7381                           
  7382 ;; *************** function _UART1_SetRxInterruptHandler *****************
  7383 ;; Defined at:
  7384 ;;		line 314 in file "mcc_generated_files/uart1.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  7387 ;;		 -> UART1_Receive_ISR(1), 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 3F/1
  7396 ;;		On exit  : 3F/1
  7397 ;;		Unchanged: 3F/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7399 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;Total ram usage:        2 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:   16
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_UART1_Initialize
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text18
  7414  00AB6C                     __ptext18:
  7415                           	opt callstack 0
  7416  00AB6C                     _UART1_SetRxInterruptHandler:
  7417                           	opt callstack 12
  7418                           
  7419                           ; BSR set to: 1
  7420                           ;mcc_generated_files/uart1.c: 315:     UART1_RxInterruptHandler = InterruptHandler;
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;incstack = 0
  7424  00AB6C  0060  F410  F2F1   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  7425  00AB72  0060  F414  F2F2   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  7426                           
  7427                           ; BSR set to: 1
  7428  00AB78  0012               	return		;funcret
  7429  00AB7A                     __end_of_UART1_SetRxInterruptHandler:
  7430                           	opt callstack 0
  7431                           
  7432 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  7433 ;; Defined at:
  7434 ;;		line 304 in file "mcc_generated_files/uart1.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7437 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 3F/1
  7446 ;;		On exit  : 3F/1
  7447 ;;		Unchanged: 3F/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;Total ram usage:        2 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:   16
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_UART1_Initialize
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text19
  7464  00AB7A                     __ptext19:
  7465                           	opt callstack 0
  7466  00AB7A                     _UART1_SetOverrunErrorHandler:
  7467                           	opt callstack 12
  7468                           
  7469                           ; BSR set to: 1
  7470                           ;mcc_generated_files/uart1.c: 305:     UART1_OverrunErrorHandler = interruptHandler;
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;incstack = 0
  7474  00AB7A  0060  F410  F2E7   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  7475  00AB80  0060  F414  F2E8   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  7476                           
  7477                           ; BSR set to: 1
  7478  00AB86  0012               	return		;funcret
  7479  00AB88                     __end_of_UART1_SetOverrunErrorHandler:
  7480                           	opt callstack 0
  7481                           
  7482 ;; *************** function _UART1_SetFramingErrorHandler *****************
  7483 ;; Defined at:
  7484 ;;		line 300 in file "mcc_generated_files/uart1.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7487 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0
  7494 ;; Tracked objects:
  7495 ;;		On entry : 3F/1
  7496 ;;		On exit  : 3F/1
  7497 ;;		Unchanged: 3F/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7499 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:   16
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_UART1_Initialize
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text20
  7514  00AB88                     __ptext20:
  7515                           	opt callstack 0
  7516  00AB88                     _UART1_SetFramingErrorHandler:
  7517                           	opt callstack 12
  7518                           
  7519                           ; BSR set to: 1
  7520                           ;mcc_generated_files/uart1.c: 301:     UART1_FramingErrorHandler = interruptHandler;
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;incstack = 0
  7524  00AB88  0060  F410  F2E9   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  7525  00AB8E  0060  F414  F2EA   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  7526                           
  7527                           ; BSR set to: 1
  7528  00AB94  0012               	return		;funcret
  7529  00AB96                     __end_of_UART1_SetFramingErrorHandler:
  7530                           	opt callstack 0
  7531                           
  7532 ;; *************** function _UART1_SetErrorHandler *****************
  7533 ;; Defined at:
  7534 ;;		line 308 in file "mcc_generated_files/uart1.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  interruptHan    2    4[BANK1 ] PTR FTN()void 
  7537 ;;		 -> UART1_DefaultErrorHandler(1), 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 3F/1
  7546 ;;		On exit  : 3F/1
  7547 ;;		Unchanged: 3F/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;Total ram usage:        2 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:   16
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_UART1_Initialize
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text21
  7564  00AB96                     __ptext21:
  7565                           	opt callstack 0
  7566  00AB96                     _UART1_SetErrorHandler:
  7567                           	opt callstack 12
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;mcc_generated_files/uart1.c: 309:     UART1_ErrorHandler = interruptHandler;
  7571                           
  7572                           ; BSR set to: 1
  7573                           ;incstack = 0
  7574  00AB96  0060  F410  F2E5   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  7575  00AB9C  0060  F414  F2E6   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  7576                           
  7577                           ; BSR set to: 1
  7578  00ABA2  0012               	return		;funcret
  7579  00ABA4                     __end_of_UART1_SetErrorHandler:
  7580                           	opt callstack 0
  7581                           
  7582 ;; *************** function _TMR6_Initialize *****************
  7583 ;; Defined at:
  7584 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 3F/3F
  7595 ;;		On exit  : 3F/1
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:   17
  7605 ;; This function calls:
  7606 ;;		_TMR6_SetInterruptHandler
  7607 ;; This function is called by:
  7608 ;;		_SYSTEM_Initialize
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text22
  7613  00A260                     __ptext22:
  7614                           	opt callstack 0
  7615  00A260                     _TMR6_Initialize:
  7616                           	opt callstack 12
  7617                           
  7618                           ; BSR set to: 63
  7619                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x04;
  7620                           
  7621                           ; BSR set to: 1
  7622                           ;incstack = 0
  7623  00A260  0E04               	movlw	4
  7624  00A262  6E96               	movwf	150,c	;volatile
  7625                           
  7626                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x20;
  7627  00A264  0E20               	movlw	32
  7628  00A266  6E95               	movwf	149,c	;volatile
  7629                           
  7630                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
  7631  00A268  0E00               	movlw	0
  7632  00A26A  6E97               	movwf	151,c	;volatile
  7633                           
  7634                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0x90;
  7635  00A26C  0E90               	movlw	144
  7636  00A26E  6E93               	movwf	147,c	;volatile
  7637                           
  7638                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
  7639  00A270  0E00               	movlw	0
  7640  00A272  6E92               	movwf	146,c	;volatile
  7641                           
  7642                           ; BSR set to: 63
  7643                           ;mcc_generated_files/tmr6.c: 84:     PIR9bits.TMR6IF = 0;
  7644  00A274  0139               	movlb	57	; () banked
  7645  00A276  91A9               	bcf	169,0,b	;volatile
  7646                           
  7647                           ; BSR set to: 57
  7648                           ;mcc_generated_files/tmr6.c: 87:     PIE9bits.TMR6IE = 1;
  7649  00A278  8199               	bsf	153,0,b	;volatile
  7650                           
  7651                           ; BSR set to: 57
  7652                           ;mcc_generated_files/tmr6.c: 90:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  7653  00A27A  0E52               	movlw	low _TMR6_DefaultInterruptHandler
  7654  00A27C  0101               	movlb	1	; () banked
  7655  00A27E  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7656  00A280  0EB0               	movlw	high _TMR6_DefaultInterruptHandler
  7657  00A282  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7658  00A284  ECE0  F055         	call	_TMR6_SetInterruptHandler	;wreg free
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0xD0;
  7662  00A288  0ED0               	movlw	208
  7663  00A28A  6E94               	movwf	148,c	;volatile
  7664                           
  7665                           ; BSR set to: 1
  7666  00A28C  0012               	return		;funcret
  7667  00A28E                     __end_of_TMR6_Initialize:
  7668                           	opt callstack 0
  7669                           
  7670 ;; *************** function _TMR5_Initialize *****************
  7671 ;; Defined at:
  7672 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 3F/39
  7683 ;;		On exit  : 3F/1
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:        2 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:   17
  7693 ;; This function calls:
  7694 ;;		_TMR5_SetInterruptHandler
  7695 ;; This function is called by:
  7696 ;;		_SYSTEM_Initialize
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text23
  7701  0099CA                     __ptext23:
  7702                           	opt callstack 0
  7703  0099CA                     _TMR5_Initialize:
  7704                           	opt callstack 12
  7705                           
  7706                           ; BSR set to: 57
  7707                           ;mcc_generated_files/tmr5.c: 69:     T5GCON = 0x00;
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;incstack = 0
  7711  0099CA  0E00               	movlw	0
  7712  0099CC  6E9B               	movwf	155,c	;volatile
  7713                           
  7714                           ;mcc_generated_files/tmr5.c: 72:     T5GATE = 0x00;
  7715  0099CE  0E00               	movlw	0
  7716  0099D0  6E9C               	movwf	156,c	;volatile
  7717                           
  7718                           ;mcc_generated_files/tmr5.c: 75:     T5CLK = 0x04;
  7719  0099D2  0E04               	movlw	4
  7720  0099D4  6E9D               	movwf	157,c	;volatile
  7721                           
  7722                           ;mcc_generated_files/tmr5.c: 78:     TMR5H = 0xF0;
  7723  0099D6  0EF0               	movlw	240
  7724  0099D8  6E99               	movwf	153,c	;volatile
  7725                           
  7726                           ;mcc_generated_files/tmr5.c: 81:     TMR5L = 0xDD;
  7727  0099DA  0EDD               	movlw	221
  7728  0099DC  6E98               	movwf	152,c	;volatile
  7729                           
  7730                           ; BSR set to: 57
  7731                           ;mcc_generated_files/tmr5.c: 84:     PIR8bits.TMR5IF = 0;
  7732  0099DE  9DA8               	bcf	168,6,b	;volatile
  7733                           
  7734                           ; BSR set to: 57
  7735                           ;mcc_generated_files/tmr5.c: 87:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7736  0099E0  5098               	movf	152,w,c	;volatile
  7737  0099E2  006F FE64  F106    	movff	16281,??_TMR5_Initialize	;volatile
  7738  0099E8  0101               	movlb	1	; () banked
  7739  0099EA  6B07               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  7740  0099EC  0060  F418  F107   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7741  0099F2  6B06               	clrf	??_TMR5_Initialize& (0+255),b
  7742  0099F4  1106               	iorwf	??_TMR5_Initialize& (0+255),w,b
  7743  0099F6  0102               	movlb	2	; () banked
  7744  0099F8  6FE3               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  7745  0099FA  0101               	movlb	1	; () banked
  7746  0099FC  5107               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  7747  0099FE  0102               	movlb	2	; () banked
  7748  009A00  6FE4               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  7749                           
  7750                           ; BSR set to: 2
  7751                           ;mcc_generated_files/tmr5.c: 90:     PIE8bits.TMR5IE = 1;
  7752  009A02  0139               	movlb	57	; () banked
  7753  009A04  8D98               	bsf	152,6,b	;volatile
  7754                           
  7755                           ; BSR set to: 57
  7756                           ;mcc_generated_files/tmr5.c: 93:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  7757  009A06  0E54               	movlw	low _TMR5_DefaultInterruptHandler
  7758  009A08  0101               	movlb	1	; () banked
  7759  009A0A  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  7760  009A0C  0EB0               	movlw	high _TMR5_DefaultInterruptHandler
  7761  009A0E  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7762  009A10  EC1F  F056         	call	_TMR5_SetInterruptHandler	;wreg free
  7763                           
  7764                           ; BSR set to: 1
  7765                           ;mcc_generated_files/tmr5.c: 96:     T5CON = 0x31;
  7766  009A14  0E31               	movlw	49
  7767  009A16  6E9A               	movwf	154,c	;volatile
  7768                           
  7769                           ; BSR set to: 1
  7770  009A18  0012               	return		;funcret
  7771  009A1A                     __end_of_TMR5_Initialize:
  7772                           	opt callstack 0
  7773                           
  7774 ;; *************** function _TMR4_Initialize *****************
  7775 ;; Defined at:
  7776 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;		None
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 3F/1
  7787 ;;		On exit  : 3F/1
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;Total ram usage:        0 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:   17
  7797 ;; This function calls:
  7798 ;;		_TMR4_SetInterruptHandler
  7799 ;; This function is called by:
  7800 ;;		_SYSTEM_Initialize
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text24
  7805  00A28E                     __ptext24:
  7806                           	opt callstack 0
  7807  00A28E                     _TMR4_Initialize:
  7808                           	opt callstack 12
  7809                           
  7810                           ; BSR set to: 1
  7811                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x04;
  7812                           
  7813                           ; BSR set to: 1
  7814                           ;incstack = 0
  7815  00A28E  0E04               	movlw	4
  7816  00A290  6EA2               	movwf	162,c	;volatile
  7817                           
  7818                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x08;
  7819  00A292  0E08               	movlw	8
  7820  00A294  6EA1               	movwf	161,c	;volatile
  7821                           
  7822                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
  7823  00A296  0E00               	movlw	0
  7824  00A298  6EA3               	movwf	163,c	;volatile
  7825                           
  7826                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0x17;
  7827  00A29A  0E17               	movlw	23
  7828  00A29C  6E9F               	movwf	159,c	;volatile
  7829                           
  7830                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
  7831  00A29E  0E00               	movlw	0
  7832  00A2A0  6E9E               	movwf	158,c	;volatile
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;mcc_generated_files/tmr4.c: 84:     PIR7bits.TMR4IF = 0;
  7836  00A2A2  0139               	movlb	57	; () banked
  7837  00A2A4  91A7               	bcf	167,0,b	;volatile
  7838                           
  7839                           ; BSR set to: 57
  7840                           ;mcc_generated_files/tmr4.c: 87:     PIE7bits.TMR4IE = 1;
  7841  00A2A6  8197               	bsf	151,0,b	;volatile
  7842                           
  7843                           ; BSR set to: 57
  7844                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7845  00A2A8  0E56               	movlw	low _TMR4_DefaultInterruptHandler
  7846  00A2AA  0101               	movlb	1	; () banked
  7847  00A2AC  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  7848  00A2AE  0EB0               	movlw	high _TMR4_DefaultInterruptHandler
  7849  00A2B0  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7850  00A2B2  EC34  F056         	call	_TMR4_SetInterruptHandler	;wreg free
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
  7854  00A2B6  0EF0               	movlw	240
  7855  00A2B8  6EA0               	movwf	160,c	;volatile
  7856                           
  7857                           ; BSR set to: 1
  7858  00A2BA  0012               	return		;funcret
  7859  00A2BC                     __end_of_TMR4_Initialize:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _TMR2_Initialize *****************
  7863 ;; Defined at:
  7864 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2
  7873 ;; Tracked objects:
  7874 ;;		On entry : 3F/1
  7875 ;;		On exit  : 3F/39
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:   16
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_SYSTEM_Initialize
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text25
  7893  00A83A                     __ptext25:
  7894                           	opt callstack 0
  7895  00A83A                     _TMR2_Initialize:
  7896                           	opt callstack 13
  7897                           
  7898                           ; BSR set to: 1
  7899                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7900                           
  7901                           ; BSR set to: 1
  7902                           ;incstack = 0
  7903  00A83A  0E01               	movlw	1
  7904  00A83C  6EAE               	movwf	174,c	;volatile
  7905                           
  7906                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7907  00A83E  0E00               	movlw	0
  7908  00A840  6EAD               	movwf	173,c	;volatile
  7909                           
  7910                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7911  00A842  0E00               	movlw	0
  7912  00A844  6EAF               	movwf	175,c	;volatile
  7913                           
  7914                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xF9;
  7915  00A846  0EF9               	movlw	249
  7916  00A848  6EAB               	movwf	171,c	;volatile
  7917                           
  7918                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7919  00A84A  0E00               	movlw	0
  7920  00A84C  6EAA               	movwf	170,c	;volatile
  7921                           
  7922                           ; BSR set to: 1
  7923                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7924  00A84E  0139               	movlb	57	; () banked
  7925  00A850  95A4               	bcf	164,2,b	;volatile
  7926                           
  7927                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  7928  00A852  0EF0               	movlw	240
  7929  00A854  6EAC               	movwf	172,c	;volatile
  7930                           
  7931                           ; BSR set to: 57
  7932  00A856  0012               	return		;funcret
  7933  00A858                     __end_of_TMR2_Initialize:
  7934                           	opt callstack 0
  7935                           
  7936 ;; *************** function _TMR1_Initialize *****************
  7937 ;; Defined at:
  7938 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 3F/1
  7949 ;;		On exit  : 3F/1
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;Total ram usage:        2 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:   17
  7959 ;; This function calls:
  7960 ;;		_TMR1_SetInterruptHandler
  7961 ;; This function is called by:
  7962 ;;		_SYSTEM_Initialize
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text26
  7967  0097DE                     __ptext26:
  7968                           	opt callstack 0
  7969  0097DE                     _TMR1_Initialize:
  7970                           	opt callstack 12
  7971                           
  7972                           ; BSR set to: 1
  7973                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7974                           
  7975                           ; BSR set to: 57
  7976                           ;incstack = 0
  7977  0097DE  0E00               	movlw	0
  7978  0097E0  6EB3               	movwf	179,c	;volatile
  7979                           
  7980                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7981  0097E2  0E00               	movlw	0
  7982  0097E4  6EB4               	movwf	180,c	;volatile
  7983                           
  7984                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  7985  0097E6  0E01               	movlw	1
  7986  0097E8  6EB5               	movwf	181,c	;volatile
  7987                           
  7988                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  7989  0097EA  0E63               	movlw	99
  7990  0097EC  6EB1               	movwf	177,c	;volatile
  7991                           
  7992                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  7993  0097EE  0EC0               	movlw	192
  7994  0097F0  6EB0               	movwf	176,c	;volatile
  7995                           
  7996                           ; BSR set to: 1
  7997                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  7998  0097F2  0139               	movlb	57	; () banked
  7999  0097F4  91A4               	bcf	164,0,b	;volatile
  8000                           
  8001                           ; BSR set to: 57
  8002                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8003  0097F6  50B0               	movf	176,w,c	;volatile
  8004  0097F8  006F FEC4  F106    	movff	16305,??_TMR1_Initialize	;volatile
  8005  0097FE  0101               	movlb	1	; () banked
  8006  009800  6B07               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  8007  009802  0060  F418  F107   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  8008  009808  6B06               	clrf	??_TMR1_Initialize& (0+255),b
  8009  00980A  1106               	iorwf	??_TMR1_Initialize& (0+255),w,b
  8010  00980C  0102               	movlb	2	; () banked
  8011  00980E  6FDD               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  8012  009810  0101               	movlb	1	; () banked
  8013  009812  5107               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  8014  009814  0102               	movlb	2	; () banked
  8015  009816  6FDE               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  8016                           
  8017                           ; BSR set to: 2
  8018                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8019  009818  0139               	movlb	57	; () banked
  8020  00981A  8194               	bsf	148,0,b	;volatile
  8021                           
  8022                           ; BSR set to: 57
  8023                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8024  00981C  0E58               	movlw	low _TMR1_DefaultInterruptHandler
  8025  00981E  0101               	movlb	1	; () banked
  8026  009820  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8027  009822  0EB0               	movlw	high _TMR1_DefaultInterruptHandler
  8028  009824  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8029  009826  EC18  F056         	call	_TMR1_SetInterruptHandler	;wreg free
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  8033  00982A  0E31               	movlw	49
  8034  00982C  6EB2               	movwf	178,c	;volatile
  8035                           
  8036                           ; BSR set to: 1
  8037  00982E  0012               	return		;funcret
  8038  009830                     __end_of_TMR1_Initialize:
  8039                           	opt callstack 0
  8040                           
  8041 ;; *************** function _TMR0_Initialize *****************
  8042 ;; Defined at:
  8043 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;		None
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;		None
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		wreg, status,2, status,0, cstack
  8052 ;; Tracked objects:
  8053 ;;		On entry : 3F/39
  8054 ;;		On exit  : 3F/1
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;Total ram usage:        0 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:   17
  8064 ;; This function calls:
  8065 ;;		_TMR0_SetInterruptHandler
  8066 ;; This function is called by:
  8067 ;;		_SYSTEM_Initialize
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text27
  8072  00A59C                     __ptext27:
  8073                           	opt callstack 0
  8074  00A59C                     _TMR0_Initialize:
  8075                           	opt callstack 12
  8076                           
  8077                           ; BSR set to: 57
  8078                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x65;
  8079                           
  8080                           ; BSR set to: 1
  8081                           ;incstack = 0
  8082  00A59C  0E65               	movlw	101
  8083  00A59E  6EB9               	movwf	185,c	;volatile
  8084                           
  8085                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8086  00A5A0  0EF9               	movlw	249
  8087  00A5A2  6EB7               	movwf	183,c	;volatile
  8088                           
  8089                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8090  00A5A4  0E00               	movlw	0
  8091  00A5A6  6EB6               	movwf	182,c	;volatile
  8092                           
  8093                           ; BSR set to: 57
  8094                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  8095  00A5A8  9FA3               	bcf	163,7,b	;volatile
  8096                           
  8097                           ; BSR set to: 57
  8098                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  8099  00A5AA  8F93               	bsf	147,7,b	;volatile
  8100                           
  8101                           ; BSR set to: 57
  8102                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8103  00A5AC  0E5A               	movlw	low _TMR0_DefaultInterruptHandler
  8104  00A5AE  0101               	movlb	1	; () banked
  8105  00A5B0  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8106  00A5B2  0EB0               	movlw	high _TMR0_DefaultInterruptHandler
  8107  00A5B4  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8108  00A5B6  ECD2  F055         	call	_TMR0_SetInterruptHandler	;wreg free
  8109                           
  8110                           ; BSR set to: 1
  8111                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  8112  00A5BA  0E8F               	movlw	143
  8113  00A5BC  6EB8               	movwf	184,c	;volatile
  8114                           
  8115                           ; BSR set to: 1
  8116  00A5BE  0012               	return		;funcret
  8117  00A5C0                     __end_of_TMR0_Initialize:
  8118                           	opt callstack 0
  8119                           
  8120 ;; *************** function _PWM6_Initialize *****************
  8121 ;; Defined at:
  8122 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2
  8131 ;; Tracked objects:
  8132 ;;		On entry : 3F/1
  8133 ;;		On exit  : 3F/3F
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   16
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_SYSTEM_Initialize
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text28
  8151  00A932                     __ptext28:
  8152                           	opt callstack 0
  8153  00A932                     _PWM6_Initialize:
  8154                           	opt callstack 13
  8155                           
  8156                           ; BSR set to: 1
  8157                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;incstack = 0
  8161  00A932  0E80               	movlw	128
  8162  00A934  6E6A               	movwf	106,c	;volatile
  8163                           
  8164                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7C;
  8165  00A936  0E7C               	movlw	124
  8166  00A938  6E69               	movwf	105,c	;volatile
  8167                           
  8168                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  8169  00A93A  0EC0               	movlw	192
  8170  00A93C  6E68               	movwf	104,c	;volatile
  8171                           
  8172                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  8173  00A93E  013F               	movlb	63	; () banked
  8174  00A940  515F               	movf	95,w,b	;volatile
  8175  00A942  0BF3               	andlw	-13
  8176  00A944  0904               	iorlw	4
  8177  00A946  6F5F               	movwf	95,b	;volatile
  8178                           
  8179                           ; BSR set to: 63
  8180  00A948  0012               	return		;funcret
  8181  00A94A                     __end_of_PWM6_Initialize:
  8182                           	opt callstack 0
  8183                           
  8184 ;; *************** function _PMD_Initialize *****************
  8185 ;; Defined at:
  8186 ;;		line 84 in file "mcc_generated_files/mcc.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;		None
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 3F/39
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;Total ram usage:        0 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:   16
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_SYSTEM_Initialize
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text29
  8215  00A5C0                     __ptext29:
  8216                           	opt callstack 0
  8217  00A5C0                     _PMD_Initialize:
  8218                           	opt callstack 13
  8219                           
  8220                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  8221                           
  8222                           ; BSR set to: 63
  8223                           ;incstack = 0
  8224  00A5C0  0E00               	movlw	0
  8225  00A5C2  0139               	movlb	57	; () banked
  8226  00A5C4  6FC0               	movwf	192,b	;volatile
  8227                           
  8228                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  8229  00A5C6  0E00               	movlw	0
  8230  00A5C8  6FC1               	movwf	193,b	;volatile
  8231                           
  8232                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  8233  00A5CA  0E00               	movlw	0
  8234  00A5CC  6FC2               	movwf	194,b	;volatile
  8235                           
  8236                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  8237  00A5CE  0E00               	movlw	0
  8238  00A5D0  6FC3               	movwf	195,b	;volatile
  8239                           
  8240                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  8241  00A5D2  0E00               	movlw	0
  8242  00A5D4  6FC4               	movwf	196,b	;volatile
  8243                           
  8244                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  8245  00A5D6  0E00               	movlw	0
  8246  00A5D8  6FC5               	movwf	197,b	;volatile
  8247                           
  8248                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  8249  00A5DA  0E00               	movlw	0
  8250  00A5DC  6FC6               	movwf	198,b	;volatile
  8251                           
  8252                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  8253  00A5DE  0E00               	movlw	0
  8254  00A5E0  6FC7               	movwf	199,b	;volatile
  8255                           
  8256                           ; BSR set to: 57
  8257  00A5E2  0012               	return		;funcret
  8258  00A5E4                     __end_of_PMD_Initialize:
  8259                           	opt callstack 0
  8260                           
  8261 ;; *************** function _PIN_MANAGER_Initialize *****************
  8262 ;; Defined at:
  8263 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2
  8272 ;; Tracked objects:
  8273 ;;		On entry : 3F/39
  8274 ;;		On exit  : 3F/3A
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:   16
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_SYSTEM_Initialize
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text30
  8292  007FAC                     __ptext30:
  8293                           	opt callstack 0
  8294  007FAC                     _PIN_MANAGER_Initialize:
  8295                           	opt callstack 13
  8296                           
  8297                           ; BSR set to: 57
  8298                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8299                           
  8300                           ; BSR set to: 57
  8301                           ;incstack = 0
  8302  007FAC  0E00               	movlw	0
  8303  007FAE  6EBE               	movwf	190,c	;volatile
  8304                           
  8305                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8306  007FB0  0E00               	movlw	0
  8307  007FB2  6EBD               	movwf	189,c	;volatile
  8308                           
  8309                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x08;
  8310  007FB4  0E08               	movlw	8
  8311  007FB6  6EBA               	movwf	186,c	;volatile
  8312                           
  8313                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8314  007FB8  0E00               	movlw	0
  8315  007FBA  6EBB               	movwf	187,c	;volatile
  8316                           
  8317                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8318  007FBC  0E00               	movlw	0
  8319  007FBE  6EBC               	movwf	188,c	;volatile
  8320                           
  8321                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8322  007FC0  0E07               	movlw	7
  8323  007FC2  6EC6               	movwf	198,c	;volatile
  8324                           
  8325                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFD;
  8326  007FC4  0EFD               	movlw	253
  8327  007FC6  6EC2               	movwf	194,c	;volatile
  8328                           
  8329                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xCF;
  8330  007FC8  0ECF               	movlw	207
  8331  007FCA  6EC3               	movwf	195,c	;volatile
  8332                           
  8333                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x1D;
  8334  007FCC  0E1D               	movlw	29
  8335  007FCE  6EC4               	movwf	196,c	;volatile
  8336                           
  8337                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x06;
  8338  007FD0  0E06               	movlw	6
  8339  007FD2  6EC5               	movwf	197,c	;volatile
  8340                           
  8341                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF9;
  8342  007FD4  0EF9               	movlw	249
  8343  007FD6  013A               	movlb	58	; () banked
  8344  007FD8  6F70               	movwf	112,b	;volatile
  8345                           
  8346                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFE;
  8347  007FDA  0EFE               	movlw	254
  8348  007FDC  6F60               	movwf	96,b	;volatile
  8349                           
  8350                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xCF;
  8351  007FDE  0ECF               	movlw	207
  8352  007FE0  6F50               	movwf	80,b	;volatile
  8353                           
  8354                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8355  007FE2  0E07               	movlw	7
  8356  007FE4  6F80               	movwf	128,b	;volatile
  8357                           
  8358                           ; BSR set to: 58
  8359                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8360  007FE6  6940               	setf	64,b	;volatile
  8361                           
  8362                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8363  007FE8  0E00               	movlw	0
  8364  007FEA  6F71               	movwf	113,b	;volatile
  8365                           
  8366                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8367  007FEC  0E00               	movlw	0
  8368  007FEE  6F81               	movwf	129,b	;volatile
  8369                           
  8370                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x3C;
  8371  007FF0  0E3C               	movlw	60
  8372  007FF2  6F51               	movwf	81,b	;volatile
  8373                           
  8374                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8375  007FF4  0E00               	movlw	0
  8376  007FF6  6F41               	movwf	65,b	;volatile
  8377                           
  8378                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x18;
  8379  007FF8  0E18               	movlw	24
  8380  007FFA  6F61               	movwf	97,b	;volatile
  8381                           
  8382                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  8383  007FFC  0E00               	movlw	0
  8384  007FFE  6F5A               	movwf	90,b	;volatile
  8385                           
  8386                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  8387  008000  0E00               	movlw	0
  8388  008002  6F5B               	movwf	91,b	;volatile
  8389                           
  8390                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  8391  008004  0E00               	movlw	0
  8392  008006  6F6A               	movwf	106,b	;volatile
  8393                           
  8394                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  8395  008008  0E00               	movlw	0
  8396  00800A  6F6B               	movwf	107,b	;volatile
  8397                           
  8398                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  8399  00800C  0E00               	movlw	0
  8400  00800E  6F7A               	movwf	122,b	;volatile
  8401                           
  8402                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  8403  008010  0E00               	movlw	0
  8404  008012  6F7B               	movwf	123,b	;volatile
  8405                           
  8406                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  8407  008014  0E00               	movlw	0
  8408  008016  6F82               	movwf	130,b	;volatile
  8409                           
  8410                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  8411  008018  0E00               	movlw	0
  8412  00801A  6F42               	movwf	66,b	;volatile
  8413                           
  8414                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x7F;
  8415  00801C  0E7F               	movlw	127
  8416  00801E  6F52               	movwf	82,b	;volatile
  8417                           
  8418                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x18;
  8419  008020  0E18               	movlw	24
  8420  008022  6F62               	movwf	98,b	;volatile
  8421                           
  8422                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  8423  008024  0E00               	movlw	0
  8424  008026  6F72               	movwf	114,b	;volatile
  8425                           
  8426                           ; BSR set to: 58
  8427                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  8428  008028  6943               	setf	67,b	;volatile
  8429                           
  8430                           ; BSR set to: 58
  8431                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  8432  00802A  6953               	setf	83,b	;volatile
  8433                           
  8434                           ; BSR set to: 58
  8435                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  8436  00802C  6963               	setf	99,b	;volatile
  8437                           
  8438                           ; BSR set to: 58
  8439                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  8440  00802E  6973               	setf	115,b	;volatile
  8441                           
  8442                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  8443  008030  0E07               	movlw	7
  8444  008032  6F83               	movwf	131,b	;volatile
  8445                           
  8446                           ; BSR set to: 58
  8447                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  8448  008034  6944               	setf	68,b	;volatile
  8449                           
  8450                           ; BSR set to: 58
  8451                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  8452  008036  6954               	setf	84,b	;volatile
  8453                           
  8454                           ; BSR set to: 58
  8455                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  8456  008038  6964               	setf	100,b	;volatile
  8457                           
  8458                           ; BSR set to: 58
  8459                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  8460  00803A  6974               	setf	116,b	;volatile
  8461                           
  8462                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  8463  00803C  0E0F               	movlw	15
  8464  00803E  6F84               	movwf	132,b	;volatile
  8465                           
  8466                           ;mcc_generated_files/pin_manager.c: 137:     I2C2SCLPPS = 0x0D;
  8467  008040  0E0D               	movlw	13
  8468  008042  6FE3               	movwf	227,b	;volatile
  8469                           
  8470                           ;mcc_generated_files/pin_manager.c: 138:     RB5PPS = 0x23;
  8471  008044  0E23               	movlw	35
  8472  008046  6F0D               	movwf	13,b	;volatile
  8473                           
  8474                           ;mcc_generated_files/pin_manager.c: 139:     RC1PPS = 0x13;
  8475  008048  0E13               	movlw	19
  8476  00804A  6F11               	movwf	17,b	;volatile
  8477                           
  8478                           ;mcc_generated_files/pin_manager.c: 140:     RB4PPS = 0x24;
  8479  00804C  0E24               	movlw	36
  8480  00804E  6F0C               	movwf	12,b	;volatile
  8481                           
  8482                           ;mcc_generated_files/pin_manager.c: 141:     RD0PPS = 0x0E;
  8483  008050  0E0E               	movlw	14
  8484  008052  6F18               	movwf	24,b	;volatile
  8485                           
  8486                           ;mcc_generated_files/pin_manager.c: 142:     U1RXPPS = 0x10;
  8487  008054  0E10               	movlw	16
  8488  008056  6FE5               	movwf	229,b	;volatile
  8489                           
  8490                           ;mcc_generated_files/pin_manager.c: 143:     I2C2SDAPPS = 0x0C;
  8491  008058  0E0C               	movlw	12
  8492  00805A  6FE4               	movwf	228,b	;volatile
  8493                           
  8494                           ; BSR set to: 58
  8495  00805C  0012               	return		;funcret
  8496  00805E                     __end_of_PIN_MANAGER_Initialize:
  8497                           	opt callstack 0
  8498                           
  8499 ;; *************** function _OSCILLATOR_Initialize *****************
  8500 ;; Defined at:
  8501 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, status,2
  8510 ;; Tracked objects:
  8511 ;;		On entry : 3F/3A
  8512 ;;		On exit  : 3F/39
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:   16
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_SYSTEM_Initialize
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text31
  8530  00A94A                     __ptext31:
  8531                           	opt callstack 0
  8532  00A94A                     _OSCILLATOR_Initialize:
  8533                           	opt callstack 13
  8534                           
  8535                           ; BSR set to: 58
  8536                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x60;
  8537                           
  8538                           ; BSR set to: 58
  8539                           ;incstack = 0
  8540  00A94A  0E60               	movlw	96
  8541  00A94C  0139               	movlb	57	; () banked
  8542  00A94E  6FD9               	movwf	217,b	;volatile
  8543                           
  8544                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
  8545  00A950  0E00               	movlw	0
  8546  00A952  6FDB               	movwf	219,b	;volatile
  8547                           
  8548                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
  8549  00A954  0E00               	movlw	0
  8550  00A956  6FDD               	movwf	221,b	;volatile
  8551                           
  8552                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x08;
  8553  00A958  0E08               	movlw	8
  8554  00A95A  6FDF               	movwf	223,b	;volatile
  8555                           
  8556                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  8557  00A95C  0E00               	movlw	0
  8558  00A95E  6FDE               	movwf	222,b	;volatile
  8559                           
  8560                           ; BSR set to: 57
  8561  00A960  0012               	return		;funcret
  8562  00A962                     __end_of_OSCILLATOR_Initialize:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _INTERRUPT_Initialize *****************
  8566 ;; Defined at:
  8567 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;		None
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1    wreg      void 
  8574 ;; Registers used:
  8575 ;;		None
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;Total ram usage:        0 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:   16
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_SYSTEM_Initialize
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text32
  8596  00AFE0                     __ptext32:
  8597                           	opt callstack 0
  8598  00AFE0                     _INTERRUPT_Initialize:
  8599                           	opt callstack 13
  8600                           
  8601                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  8602                           
  8603                           ; BSR set to: 57
  8604                           ;incstack = 0
  8605  00AFE0  9AD2               	bcf	210,5,c	;volatile
  8606  00AFE2  0012               	return		;funcret
  8607  00AFE4                     __end_of_INTERRUPT_Initialize:
  8608                           	opt callstack 0
  8609                           
  8610 ;; *************** function _I2C2_Initialize *****************
  8611 ;; Defined at:
  8612 ;;		line 115 in file "mcc_generated_files/i2c2_slave.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2
  8621 ;; Tracked objects:
  8622 ;;		On entry : 3F/39
  8623 ;;		On exit  : 3F/3D
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;Total ram usage:        0 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:   16
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_SYSTEM_Initialize
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text33
  8641  00AA7C                     __ptext33:
  8642                           	opt callstack 0
  8643  00AA7C                     _I2C2_Initialize:
  8644                           	opt callstack 13
  8645                           
  8646                           ; BSR set to: 57
  8647                           ;mcc_generated_files/i2c2_slave.c: 118:     I2C2CON0 = 0x00;
  8648                           
  8649                           ;incstack = 0
  8650  00AA7C  0E00               	movlw	0
  8651  00AA7E  013D               	movlb	61	; () banked
  8652  00AA80  6F5D               	movwf	93,b	;volatile
  8653                           
  8654                           ;mcc_generated_files/i2c2_slave.c: 120:     I2C2CON1 = 0x00;
  8655  00AA82  0E00               	movlw	0
  8656  00AA84  6F5E               	movwf	94,b	;volatile
  8657                           
  8658                           ;mcc_generated_files/i2c2_slave.c: 122:     I2C2CON2 = 0x00;
  8659  00AA86  0E00               	movlw	0
  8660  00AA88  6F5F               	movwf	95,b	;volatile
  8661                           
  8662                           ; BSR set to: 61
  8663                           ;mcc_generated_files/i2c2_slave.c: 124:     I2C2CNT = 0xFF;
  8664  00AA8A  6956               	setf	86,b	;volatile
  8665                           
  8666                           ; BSR set to: 61
  8667  00AA8C  0012               	return		;funcret
  8668  00AA8E                     __end_of_I2C2_Initialize:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _FVR_Initialize *****************
  8672 ;; Defined at:
  8673 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2
  8682 ;; Tracked objects:
  8683 ;;		On entry : 3F/39
  8684 ;;		On exit  : 3F/3E
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:   16
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_SYSTEM_Initialize
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text34
  8702  00AE16                     __ptext34:
  8703                           	opt callstack 0
  8704  00AE16                     _FVR_Initialize:
  8705                           	opt callstack 13
  8706                           
  8707                           ; BSR set to: 57
  8708                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x87;
  8709                           
  8710                           ; BSR set to: 61
  8711                           ;incstack = 0
  8712  00AE16  0E87               	movlw	135
  8713  00AE18  013E               	movlb	62	; () banked
  8714  00AE1A  6FC1               	movwf	193,b	;volatile
  8715                           
  8716                           ; BSR set to: 62
  8717  00AE1C  0012               	return		;funcret
  8718  00AE1E                     __end_of_FVR_Initialize:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _CMP1_Initialize *****************
  8722 ;; Defined at:
  8723 ;;		line 60 in file "mcc_generated_files/cmp1.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 3F/1
  8734 ;;		On exit  : 3F/39
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:   17
  8744 ;; This function calls:
  8745 ;;		_CMP1_Disable
  8746 ;;		_CMP1_Enable
  8747 ;; This function is called by:
  8748 ;;		_SYSTEM_Initialize
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text35
  8753  00A6FA                     __ptext35:
  8754                           	opt callstack 0
  8755  00A6FA                     _CMP1_Initialize:
  8756                           	opt callstack 12
  8757                           
  8758                           ; BSR set to: 1
  8759                           ;mcc_generated_files/cmp1.c: 67:     CMP1_Disable();
  8760                           
  8761                           ; BSR set to: 62
  8762                           ;incstack = 0
  8763  00A6FA  EC43  F057         	call	_CMP1_Disable	;wreg free
  8764                           
  8765                           ; BSR set to: 57
  8766                           ;mcc_generated_files/cmp1.c: 70:     CM1CON0 = 0x80;
  8767  00A6FE  0E80               	movlw	128
  8768  00A700  013E               	movlb	62	; () banked
  8769  00A702  6FBC               	movwf	188,b	;volatile
  8770                           
  8771                           ; BSR set to: 62
  8772                           ;mcc_generated_files/cmp1.c: 73:     CM1CON1 = 0x02;
  8773  00A704  0E02               	movlw	2
  8774  00A706  6FBD               	movwf	189,b	;volatile
  8775                           
  8776                           ; BSR set to: 62
  8777                           ;mcc_generated_files/cmp1.c: 76:     CM1NCH = 0x06;
  8778  00A708  0E06               	movlw	6
  8779  00A70A  6FBE               	movwf	190,b	;volatile
  8780                           
  8781                           ; BSR set to: 62
  8782                           ;mcc_generated_files/cmp1.c: 79:     CM1PCH = 0x01;
  8783  00A70C  0E01               	movlw	1
  8784  00A70E  6FBF               	movwf	191,b	;volatile
  8785                           
  8786                           ; BSR set to: 62
  8787                           ;mcc_generated_files/cmp1.c: 82:     PIR1bits.C1IF = 0;
  8788  00A710  0139               	movlb	57	; () banked
  8789  00A712  99A1               	bcf	161,4,b	;volatile
  8790                           
  8791                           ;mcc_generated_files/cmp1.c: 85:     CMP1_Enable();
  8792  00A714  EC3F  F057         	call	_CMP1_Enable	;wreg free
  8793                           
  8794                           ; BSR set to: 57
  8795  00A718  0012               	return		;funcret
  8796  00A71A                     __end_of_CMP1_Initialize:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _ADCC_Initialize *****************
  8800 ;; Defined at:
  8801 ;;		line 63 in file "mcc_generated_files/adcc.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 3F/3E
  8812 ;;		On exit  : 3F/1
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:   17
  8822 ;; This function calls:
  8823 ;;		_ADCC_SetADIInterruptHandler
  8824 ;; This function is called by:
  8825 ;;		_SYSTEM_Initialize
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text36
  8830  0090AC                     __ptext36:
  8831                           	opt callstack 0
  8832  0090AC                     _ADCC_Initialize:
  8833                           	opt callstack 12
  8834                           
  8835                           ; BSR set to: 62
  8836                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  8837                           
  8838                           ; BSR set to: 57
  8839                           ;incstack = 0
  8840  0090AC  0E00               	movlw	0
  8841  0090AE  6FDE               	movwf	222,b	;volatile
  8842                           
  8843                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  8844  0090B0  0E00               	movlw	0
  8845  0090B2  6FDF               	movwf	223,b	;volatile
  8846                           
  8847                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  8848  0090B4  0E00               	movlw	0
  8849  0090B6  6FE0               	movwf	224,b	;volatile
  8850                           
  8851                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  8852  0090B8  0E00               	movlw	0
  8853  0090BA  6FE1               	movwf	225,b	;volatile
  8854                           
  8855                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  8856  0090BC  0E00               	movlw	0
  8857  0090BE  6FE4               	movwf	228,b	;volatile
  8858                           
  8859                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  8860  0090C0  0E00               	movlw	0
  8861  0090C2  6FE5               	movwf	229,b	;volatile
  8862                           
  8863                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
  8864  0090C4  0E00               	movlw	0
  8865  0090C6  6FEA               	movwf	234,b	;volatile
  8866                           
  8867                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
  8868  0090C8  0E00               	movlw	0
  8869  0090CA  6FEC               	movwf	236,b	;volatile
  8870                           
  8871                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
  8872  0090CC  0E00               	movlw	0
  8873  0090CE  6FF1               	movwf	241,b	;volatile
  8874                           
  8875                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x01;
  8876  0090D0  0E01               	movlw	1
  8877  0090D2  6FF3               	movwf	243,b	;volatile
  8878                           
  8879                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
  8880  0090D4  0E00               	movlw	0
  8881  0090D6  6FF4               	movwf	244,b	;volatile
  8882                           
  8883                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
  8884  0090D8  0E00               	movlw	0
  8885  0090DA  6FF5               	movwf	245,b	;volatile
  8886                           
  8887                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
  8888  0090DC  0E00               	movlw	0
  8889  0090DE  6FF6               	movwf	246,b	;volatile
  8890                           
  8891                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
  8892  0090E0  0E00               	movlw	0
  8893  0090E2  6FF7               	movwf	247,b	;volatile
  8894                           
  8895                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
  8896  0090E4  0E00               	movlw	0
  8897  0090E6  6FF9               	movwf	249,b	;volatile
  8898                           
  8899                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
  8900  0090E8  0E00               	movlw	0
  8901  0090EA  6FFA               	movwf	250,b	;volatile
  8902                           
  8903                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
  8904  0090EC  0E00               	movlw	0
  8905  0090EE  6FFB               	movwf	251,b	;volatile
  8906                           
  8907                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
  8908  0090F0  0E00               	movlw	0
  8909  0090F2  6FFC               	movwf	252,b	;volatile
  8910                           
  8911                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
  8912  0090F4  0E03               	movlw	3
  8913  0090F6  6FFD               	movwf	253,b	;volatile
  8914                           
  8915                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
  8916  0090F8  0E00               	movlw	0
  8917  0090FA  6FFE               	movwf	254,b	;volatile
  8918                           
  8919                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x3B;
  8920  0090FC  0E3B               	movlw	59
  8921  0090FE  6FFF               	movwf	255,b	;volatile
  8922                           
  8923                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
  8924  009100  0E84               	movlw	132
  8925  009102  6FF8               	movwf	248,b	;volatile
  8926                           
  8927                           ; BSR set to: 62
  8928                           ;mcc_generated_files/adcc.c: 112:     PIR1bits.ADIF = 0;
  8929  009104  0139               	movlb	57	; () banked
  8930  009106  95A1               	bcf	161,2,b	;volatile
  8931                           
  8932                           ; BSR set to: 57
  8933                           ;mcc_generated_files/adcc.c: 114:     PIE1bits.ADIE = 1;
  8934  009108  8591               	bsf	145,2,b	;volatile
  8935                           
  8936                           ; BSR set to: 57
  8937                           ;mcc_generated_files/adcc.c: 116:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  8938  00910A  0E5C               	movlw	low _ADCC_DefaultInterruptHandler
  8939  00910C  0101               	movlb	1	; () banked
  8940  00910E  6F04               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  8941  009110  0EB0               	movlw	high _ADCC_DefaultInterruptHandler
  8942  009112  6F05               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  8943  009114  ECD9  F055         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8944                           
  8945                           ; BSR set to: 1
  8946  009118  0012               	return		;funcret
  8947  00911A                     __end_of_ADCC_Initialize:
  8948                           	opt callstack 0
  8949                           
  8950 ;; *************** function _MuteAlarm *****************
  8951 ;; Defined at:
  8952 ;;		line 377 in file "alarm.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  high            2  135[BANK1 ] int 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8961 ;; Tracked objects:
  8962 ;;		On entry : 3F/3
  8963 ;;		On exit  : 3D/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;Total ram usage:        5 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:   26
  8973 ;; This function calls:
  8974 ;;		_AnyAlarm
  8975 ;;		_BuzzerClear
  8976 ;;		_ClearCircuitFailureAlarm
  8977 ;;		_ClearControlFailAlarm
  8978 ;;		_ClearGasFailureAlarm
  8979 ;;		_ClearHighPressureAlarmHigh
  8980 ;;		_ClearMonitorFailAlarm
  8981 ;;		_ClearVeryHighPressureAlarmHigh
  8982 ;;		_HigherAlarm
  8983 ;;		_SetAlarmSV1
  8984 ;;		___wmul
  8985 ;;		_printf
  8986 ;; This function is called by:
  8987 ;;		_main
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text37
  8992  004920                     __ptext37:
  8993                           	opt callstack 0
  8994  004920                     _MuteAlarm:
  8995                           	opt callstack 4
  8996                           
  8997                           ; BSR set to: 3
  8998                           ;alarm.c: 378:     printf("MUTE");
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;incstack = 0
  9002  004920  0EC1               	movlw	low STR_25
  9003  004922  0101               	movlb	1	; () banked
  9004  004924  6F71               	movwf	printf@fmt& (0+255),b
  9005  004926  0EFF               	movlw	high STR_25
  9006  004928  6F72               	movwf	(printf@fmt+1)& (0+255),b
  9007  00492A  ECE6  F051         	call	_printf	;wreg free
  9008                           
  9009                           ; BSR set to: 2
  9010                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
  9011  00492E  0101               	movlb	1	; () banked
  9012  004930  51EF               	movf	_muteSec& (0+255),w,b
  9013  004932  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
  9014  004934  B4D8               	btfsc	status,2,c
  9015  004936  D00C               	goto	l22166
  9016                           
  9017                           ; BSR set to: 1
  9018  004938  BFF0               	btfsc	(_muteSec+1)& (0+255),7,b
  9019  00493A  D006               	goto	u22020
  9020  00493C  51F0               	movf	(_muteSec+1)& (0+255),w,b
  9021  00493E  E108               	bnz	l22166
  9022  004940  0E73               	movlw	115
  9023  004942  5DEF               	subwf	_muteSec& (0+255),w,b
  9024  004944  B0D8               	btfsc	status,0,c
  9025  004946  D004               	goto	l22166
  9026  004948                     u22020:
  9027                           
  9028                           ; BSR set to: 1
  9029                           ;alarm.c: 381:         muteSec = 0;
  9030  004948  0E00               	movlw	0
  9031  00494A  6FF0               	movwf	(_muteSec+1)& (0+255),b
  9032  00494C  0E00               	movlw	0
  9033  00494E  6FEF               	movwf	_muteSec& (0+255),b
  9034  004950                     l22166:
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;alarm.c: 384:     if (AnyAlarm()) {
  9038  004950  EC6E  F04F         	call	_AnyAlarm	;wreg free
  9039  004954  0900               	iorlw	0
  9040  004956  B4D8               	btfsc	status,2,c
  9041  004958  D0B0               	goto	l2630
  9042                           
  9043                           ; BSR set to: 1
  9044                           ;alarm.c: 386:         BuzzerClear();
  9045  00495A  EC71  F055         	call	_BuzzerClear	;wreg free
  9046                           
  9047                           ; BSR set to: 57
  9048                           ;alarm.c: 387:         muteSec = 120;
  9049  00495E  0E00               	movlw	0
  9050  004960  0101               	movlb	1	; () banked
  9051  004962  6FF0               	movwf	(_muteSec+1)& (0+255),b
  9052  004964  0E78               	movlw	120
  9053  004966  6FEF               	movwf	_muteSec& (0+255),b
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;alarm.c: 389:         int high = HigherAlarm();
  9057  004968  EC2F  F040         	call	_HigherAlarm	;wreg free
  9058  00496C  0060  F428  F187   	movff	?_HigherAlarm,MuteAlarm@high
  9059  004972  0060  F42C  F188   	movff	?_HigherAlarm+1,MuteAlarm@high+1
  9060                           
  9061                           ; BSR set to: 1
  9062                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
  9063  004978  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9064  00497E  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9065  004984  0E00               	movlw	0
  9066  004986  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9067  004988  0E15               	movlw	21
  9068  00498A  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9069  00498C  EC5E  F051         	call	___wmul	;wreg free
  9070  004990  0E27               	movlw	low (_alarmData+19)
  9071  004992  2504               	addwf	?___wmul& (0+255),w,b
  9072  004994  6ED9               	movwf	fsr2l,c
  9073  004996  0E09               	movlw	high (_alarmData+19)
  9074  004998  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9075  00499A  6EDA               	movwf	fsr2h,c
  9076  00499C  0E18               	movlw	low _HighPressureAlarmHigh
  9077  00499E  18DE               	xorwf	postinc2,w,c
  9078  0049A0  E105               	bnz	l22178
  9079  0049A2  0EB0               	movlw	high _HighPressureAlarmHigh
  9080  0049A4  18DE               	xorwf	postinc2,w,c
  9081  0049A6  B4D8               	btfsc	status,2,c
  9082                           
  9083                           ; BSR set to: 1
  9084                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
  9085  0049A8  EC13  F057         	call	_ClearHighPressureAlarmHigh	;wreg free
  9086  0049AC                     l22178:
  9087                           
  9088                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
  9089  0049AC  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9090  0049B2  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9091  0049B8  0E00               	movlw	0
  9092  0049BA  0101               	movlb	1	; () banked
  9093  0049BC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9094  0049BE  0E15               	movlw	21
  9095  0049C0  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9096  0049C2  EC5E  F051         	call	___wmul	;wreg free
  9097  0049C6  0E27               	movlw	low (_alarmData+19)
  9098  0049C8  2504               	addwf	?___wmul& (0+255),w,b
  9099  0049CA  6ED9               	movwf	fsr2l,c
  9100  0049CC  0E09               	movlw	high (_alarmData+19)
  9101  0049CE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9102  0049D0  6EDA               	movwf	fsr2h,c
  9103  0049D2  0E20               	movlw	low _VeryHighPressureAlarmHigh
  9104  0049D4  18DE               	xorwf	postinc2,w,c
  9105  0049D6  E105               	bnz	l22182
  9106  0049D8  0EB0               	movlw	high _VeryHighPressureAlarmHigh
  9107  0049DA  18DE               	xorwf	postinc2,w,c
  9108  0049DC  B4D8               	btfsc	status,2,c
  9109                           
  9110                           ; BSR set to: 1
  9111                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
  9112  0049DE  EC0F  F057         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9113  0049E2                     l22182:
  9114                           
  9115                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
  9116  0049E2  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9117  0049E8  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9118  0049EE  0E00               	movlw	0
  9119  0049F0  0101               	movlb	1	; () banked
  9120  0049F2  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9121  0049F4  0E15               	movlw	21
  9122  0049F6  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9123  0049F8  EC5E  F051         	call	___wmul	;wreg free
  9124  0049FC  0E27               	movlw	low (_alarmData+19)
  9125  0049FE  2504               	addwf	?___wmul& (0+255),w,b
  9126  004A00  6ED9               	movwf	fsr2l,c
  9127  004A02  0E09               	movlw	high (_alarmData+19)
  9128  004A04  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9129  004A06  6EDA               	movwf	fsr2h,c
  9130  004A08  0E68               	movlw	low _MonitorFailAlarm
  9131  004A0A  18DE               	xorwf	postinc2,w,c
  9132  004A0C  E105               	bnz	l22186
  9133  004A0E  0E79               	movlw	high _MonitorFailAlarm
  9134  004A10  18DE               	xorwf	postinc2,w,c
  9135  004A12  B4D8               	btfsc	status,2,c
  9136                           
  9137                           ; BSR set to: 1
  9138                           ;alarm.c: 400:             ClearMonitorFailAlarm();
  9139  004A14  EC3B  F057         	call	_ClearMonitorFailAlarm	;wreg free
  9140  004A18                     l22186:
  9141                           
  9142                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
  9143  004A18  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9144  004A1E  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9145  004A24  0E00               	movlw	0
  9146  004A26  0101               	movlb	1	; () banked
  9147  004A28  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9148  004A2A  0E15               	movlw	21
  9149  004A2C  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9150  004A2E  EC5E  F051         	call	___wmul	;wreg free
  9151  004A32  0E27               	movlw	low (_alarmData+19)
  9152  004A34  2504               	addwf	?___wmul& (0+255),w,b
  9153  004A36  6ED9               	movwf	fsr2l,c
  9154  004A38  0E09               	movlw	high (_alarmData+19)
  9155  004A3A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9156  004A3C  6EDA               	movwf	fsr2h,c
  9157  004A3E  0ED2               	movlw	low _ControlFailAlarm
  9158  004A40  18DE               	xorwf	postinc2,w,c
  9159  004A42  E105               	bnz	l22190
  9160  004A44  0EAA               	movlw	high _ControlFailAlarm
  9161  004A46  18DE               	xorwf	postinc2,w,c
  9162  004A48  B4D8               	btfsc	status,2,c
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;alarm.c: 404:             ClearControlFailAlarm();
  9166  004A4A  EC1B  F057         	call	_ClearControlFailAlarm	;wreg free
  9167  004A4E                     l22190:
  9168                           
  9169                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
  9170  004A4E  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9171  004A54  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9172  004A5A  0E00               	movlw	0
  9173  004A5C  0101               	movlb	1	; () banked
  9174  004A5E  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9175  004A60  0E15               	movlw	21
  9176  004A62  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9177  004A64  EC5E  F051         	call	___wmul	;wreg free
  9178  004A68  0E27               	movlw	low (_alarmData+19)
  9179  004A6A  2504               	addwf	?___wmul& (0+255),w,b
  9180  004A6C  6ED9               	movwf	fsr2l,c
  9181  004A6E  0E09               	movlw	high (_alarmData+19)
  9182  004A70  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9183  004A72  6EDA               	movwf	fsr2h,c
  9184  004A74  0E1C               	movlw	low _GasFailureAlarm
  9185  004A76  18DE               	xorwf	postinc2,w,c
  9186  004A78  E105               	bnz	l22194
  9187  004A7A  0EB0               	movlw	high _GasFailureAlarm
  9188  004A7C  18DE               	xorwf	postinc2,w,c
  9189  004A7E  B4D8               	btfsc	status,2,c
  9190                           
  9191                           ; BSR set to: 1
  9192                           ;alarm.c: 408:             ClearGasFailureAlarm();
  9193  004A80  EC17  F057         	call	_ClearGasFailureAlarm	;wreg free
  9194  004A84                     l22194:
  9195                           
  9196                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
  9197  004A84  0060  F61C  F104   	movff	MuteAlarm@high,___wmul@multiplier
  9198  004A8A  0060  F620  F105   	movff	MuteAlarm@high+1,___wmul@multiplier+1
  9199  004A90  0E00               	movlw	0
  9200  004A92  0101               	movlb	1	; () banked
  9201  004A94  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9202  004A96  0E15               	movlw	21
  9203  004A98  6F06               	movwf	___wmul@multiplicand& (0+255),b
  9204  004A9A  EC5E  F051         	call	___wmul	;wreg free
  9205  004A9E  0E27               	movlw	low (_alarmData+19)
  9206  004AA0  2504               	addwf	?___wmul& (0+255),w,b
  9207  004AA2  6ED9               	movwf	fsr2l,c
  9208  004AA4  0E09               	movlw	high (_alarmData+19)
  9209  004AA6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
  9210  004AA8  6EDA               	movwf	fsr2h,c
  9211  004AAA  0E14               	movlw	low _CircuitFailureAlarm
  9212  004AAC  18DE               	xorwf	postinc2,w,c
  9213  004AAE  E105               	bnz	l2630
  9214  004AB0  0EB0               	movlw	high _CircuitFailureAlarm
  9215  004AB2  18DE               	xorwf	postinc2,w,c
  9216  004AB4  B4D8               	btfsc	status,2,c
  9217                           
  9218                           ; BSR set to: 1
  9219                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
  9220  004AB6  EC1F  F057         	call	_ClearCircuitFailureAlarm	;wreg free
  9221  004ABA                     l2630:
  9222                           
  9223                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
  9224  004ABA  EC0F  F057         	call	_ClearVeryHighPressureAlarmHigh	;wreg free
  9225                           
  9226                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
  9227  004ABE  EC13  F057         	call	_ClearHighPressureAlarmHigh	;wreg free
  9228                           
  9229                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
  9230  004AC2  EC1F  F057         	call	_ClearCircuitFailureAlarm	;wreg free
  9231                           
  9232                           ;alarm.c: 420:     ClearGasFailureAlarm();
  9233  004AC6  EC17  F057         	call	_ClearGasFailureAlarm	;wreg free
  9234                           
  9235                           ;alarm.c: 421:     ClearControlFailAlarm();
  9236  004ACA  EC1B  F057         	call	_ClearControlFailAlarm	;wreg free
  9237                           
  9238                           ;alarm.c: 422:     ClearMonitorFailAlarm();
  9239  004ACE  EC3B  F057         	call	_ClearMonitorFailAlarm	;wreg free
  9240                           
  9241                           ; BSR set to: 2
  9242                           ;alarm.c: 424:     controlSV1 = 1;
  9243  004AD2  0E01               	movlw	1
  9244  004AD4  0100               	movlb	0	; () banked
  9245  004AD6  6FFD               	movwf	_controlSV1& (0+255),b
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;alarm.c: 425:     monitorSV1 = 1;
  9249  004AD8  0E01               	movlw	1
  9250  004ADA  6FFC               	movwf	_monitorSV1& (0+255),b
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;alarm.c: 426:     veryHighSV1 = 1;
  9254  004ADC  0E01               	movlw	1
  9255  004ADE  6FFF               	movwf	_veryHighSV1& (0+255),b
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
  9259  004AE0  0E00               	movlw	0
  9260  004AE2  0101               	movlb	1	; () banked
  9261  004AE4  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9262                           
  9263                           ; BSR set to: 1
  9264  004AE6  0100               	movlb	0	; () banked
  9265  004AE8  51FD               	movf	_controlSV1& (0+255),w,b
  9266  004AEA  B4D8               	btfsc	status,2,c
  9267  004AEC  D00C               	goto	l22216
  9268                           
  9269                           ; BSR set to: 0
  9270  004AEE  51FC               	movf	_monitorSV1& (0+255),w,b
  9271  004AF0  B4D8               	btfsc	status,2,c
  9272  004AF2  D009               	goto	l22216
  9273                           
  9274                           ; BSR set to: 0
  9275  004AF4  51FF               	movf	_veryHighSV1& (0+255),w,b
  9276  004AF6  B4D8               	btfsc	status,2,c
  9277  004AF8  D006               	goto	l22216
  9278                           
  9279                           ; BSR set to: 0
  9280  004AFA  51FE               	movf	_batterySV1& (0+255),w,b
  9281  004AFC  B4D8               	btfsc	status,2,c
  9282  004AFE  D003               	goto	l22216
  9283                           
  9284                           ; BSR set to: 0
  9285  004B00  0E01               	movlw	1
  9286  004B02  0101               	movlb	1	; () banked
  9287  004B04  6F86               	movwf	_MuteAlarm$4543& (0+255),b
  9288  004B06                     l22216:
  9289  004B06  0101               	movlb	1	; () banked
  9290  004B08  5186               	movf	_MuteAlarm$4543& (0+255),w,b
  9291  004B0A  B4D8               	btfsc	status,2,c
  9292  004B0C  D002               	goto	u22140
  9293  004B0E  0E01               	movlw	1
  9294  004B10  D001               	goto	u22150
  9295  004B12                     u22140:
  9296  004B12  0E00               	movlw	0
  9297  004B14                     u22150:
  9298  004B14  EC4A  F050         	call	_SetAlarmSV1
  9299  004B18  0012               	return		;funcret
  9300  004B1A                     __end_of_MuteAlarm:
  9301                           	opt callstack 0
  9302                           
  9303 ;; *************** function _ClearVeryHighPressureAlarmHigh *****************
  9304 ;; Defined at:
  9305 ;;		line 278 in file "alarm.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1    wreg      void 
  9312 ;; Registers used:
  9313 ;;		wreg, status,2
  9314 ;; Tracked objects:
  9315 ;;		On entry : 3C/1
  9316 ;;		On exit  : 3F/2
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:   16
  9326 ;; This function calls:
  9327 ;;		Nothing
  9328 ;; This function is called by:
  9329 ;;		_MuteAlarm
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text38
  9334  00AE1E                     __ptext38:
  9335                           	opt callstack 0
  9336  00AE1E                     _ClearVeryHighPressureAlarmHigh:
  9337                           	opt callstack 13
  9338                           
  9339                           ;incstack = 0
  9340  00AE1E  0E00               	movlw	0
  9341  00AE20  0102               	movlb	2	; () banked
  9342  00AE22  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
  9343                           
  9344                           ; BSR set to: 2
  9345  00AE24  0012               	return		;funcret
  9346  00AE26                     __end_of_ClearVeryHighPressureAlarmHigh:
  9347                           	opt callstack 0
  9348                           
  9349 ;; *************** function _ClearHighPressureAlarmHigh *****************
  9350 ;; Defined at:
  9351 ;;		line 277 in file "alarm.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      void 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2
  9360 ;; Tracked objects:
  9361 ;;		On entry : 3C/1
  9362 ;;		On exit  : 3F/2
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; Hardware stack levels required when called:   16
  9372 ;; This function calls:
  9373 ;;		Nothing
  9374 ;; This function is called by:
  9375 ;;		_MuteAlarm
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text39
  9380  00AE26                     __ptext39:
  9381                           	opt callstack 0
  9382  00AE26                     _ClearHighPressureAlarmHigh:
  9383                           	opt callstack 13
  9384                           
  9385                           ; BSR set to: 2
  9386                           ;incstack = 0
  9387  00AE26  0E00               	movlw	0
  9388  00AE28  0102               	movlb	2	; () banked
  9389  00AE2A  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
  9390                           
  9391                           ; BSR set to: 2
  9392  00AE2C  0012               	return		;funcret
  9393  00AE2E                     __end_of_ClearHighPressureAlarmHigh:
  9394                           	opt callstack 0
  9395                           
  9396 ;; *************** function _ClearGasFailureAlarm *****************
  9397 ;; Defined at:
  9398 ;;		line 275 in file "alarm.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;		None
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;		None
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2
  9407 ;; Tracked objects:
  9408 ;;		On entry : 3C/1
  9409 ;;		On exit  : 3F/2
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:   16
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_MuteAlarm
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text40
  9427  00AE2E                     __ptext40:
  9428                           	opt callstack 0
  9429  00AE2E                     _ClearGasFailureAlarm:
  9430                           	opt callstack 13
  9431                           
  9432                           ; BSR set to: 2
  9433                           ;incstack = 0
  9434  00AE2E  0E00               	movlw	0
  9435  00AE30  0102               	movlb	2	; () banked
  9436  00AE32  6FAF               	movwf	_gasFailureAlarm& (0+255),b
  9437                           
  9438                           ; BSR set to: 2
  9439  00AE34  0012               	return		;funcret
  9440  00AE36                     __end_of_ClearGasFailureAlarm:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function _ClearControlFailAlarm *****************
  9444 ;; Defined at:
  9445 ;;		line 274 in file "alarm.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2
  9454 ;; Tracked objects:
  9455 ;;		On entry : 3C/1
  9456 ;;		On exit  : 3F/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   16
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_MuteAlarm
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text41
  9474  00AE36                     __ptext41:
  9475                           	opt callstack 0
  9476  00AE36                     _ClearControlFailAlarm:
  9477                           	opt callstack 13
  9478                           
  9479                           ; BSR set to: 2
  9480                           ;incstack = 0
  9481  00AE36  0E00               	movlw	0
  9482  00AE38  0100               	movlb	0	; () banked
  9483  00AE3A  6FF2               	movwf	_controlFailAlarm& (0+255),b
  9484                           
  9485                           ; BSR set to: 0
  9486  00AE3C  0012               	return		;funcret
  9487  00AE3E                     __end_of_ClearControlFailAlarm:
  9488                           	opt callstack 0
  9489                           
  9490 ;; *************** function _MonitorInit *****************
  9491 ;; Defined at:
  9492 ;;		line 738 in file "monitor.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 3C/0
  9503 ;;		On exit  : 3C/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:   18
  9513 ;; This function calls:
  9514 ;;		_AdcInit
  9515 ;;		_ClearVars
  9516 ;;		_TMR0_SetInterruptHandler
  9517 ;;		_TMR0_StartTimer
  9518 ;; This function is called by:
  9519 ;;		_main
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text42
  9524  008EEA                     __ptext42:
  9525                           	opt callstack 0
  9526  008EEA                     _MonitorInit:
  9527                           	opt callstack 12
  9528                           
  9529                           ;monitor.c: 740:     AdcInit();
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;incstack = 0
  9533  008EEA  ECC7  F046         	call	_AdcInit	;wreg free
  9534                           
  9535                           ; BSR set to: 62
  9536                           ;monitor.c: 743:     targetHigh = 20*5;
  9537  008EEE  0E00               	movlw	0
  9538  008EF0  0101               	movlb	1	; () banked
  9539  008EF2  6FEA               	movwf	(_targetHigh+1)& (0+255),b
  9540  008EF4  0E64               	movlw	100
  9541  008EF6  6FE9               	movwf	_targetHigh& (0+255),b
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;monitor.c: 744:     targetLow = 7*5;
  9545  008EF8  0E00               	movlw	0
  9546  008EFA  6FE8               	movwf	(_targetLow+1)& (0+255),b
  9547  008EFC  0E23               	movlw	35
  9548  008EFE  6FE7               	movwf	_targetLow& (0+255),b
  9549                           
  9550                           ; BSR set to: 1
  9551                           ;monitor.c: 745:     targetPmax = 25*5;
  9552  008F00  0E00               	movlw	0
  9553  008F02  0102               	movlb	2	; () banked
  9554  008F04  6F6B               	movwf	(_targetPmax+1)& (0+255),b
  9555  008F06  0E7D               	movlw	125
  9556  008F08  6F6A               	movwf	_targetPmax& (0+255),b
  9557                           
  9558                           ; BSR set to: 2
  9559                           ;monitor.c: 746:     adcVOffset = 162*8;
  9560  008F0A  0E05               	movlw	5
  9561  008F0C  0101               	movlb	1	; () banked
  9562  008F0E  6FF9               	movwf	(_adcVOffset+1)& (0+255),b
  9563  008F10  0E10               	movlw	16
  9564  008F12  6FF8               	movwf	_adcVOffset& (0+255),b
  9565                           
  9566                           ; BSR set to: 1
  9567                           ;monitor.c: 747:     adcOffset = 174*8;
  9568  008F14  0E05               	movlw	5
  9569  008F16  6FFB               	movwf	(_adcOffset+1)& (0+255),b
  9570  008F18  0E70               	movlw	112
  9571  008F1A  6FFA               	movwf	_adcOffset& (0+255),b
  9572                           
  9573                           ; BSR set to: 1
  9574                           ;monitor.c: 748:     volumeMax = 500;
  9575  008F1C  0E01               	movlw	1
  9576  008F1E  0102               	movlb	2	; () banked
  9577  008F20  6F67               	movwf	(_volumeMax+1)& (0+255),b
  9578  008F22  0EF4               	movlw	244
  9579  008F24  6F66               	movwf	_volumeMax& (0+255),b
  9580                           
  9581                           ; BSR set to: 2
  9582                           ;monitor.c: 749:     volumeMin = 100;
  9583  008F26  0E00               	movlw	0
  9584  008F28  6F65               	movwf	(_volumeMin+1)& (0+255),b
  9585  008F2A  0E64               	movlw	100
  9586  008F2C  6F64               	movwf	_volumeMin& (0+255),b
  9587                           
  9588                           ; BSR set to: 2
  9589                           ;monitor.c: 750:     disableAlarmSV1=0;
  9590  008F2E  0E00               	movlw	0
  9591  008F30  0100               	movlb	0	; () banked
  9592  008F32  6FEF               	movwf	_disableAlarmSV1& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;monitor.c: 751:     state = 0;
  9596  008F34  0E00               	movlw	0
  9597  008F36  0101               	movlb	1	; () banked
  9598  008F38  6FE6               	movwf	(_state+1)& (0+255),b
  9599  008F3A  0E00               	movlw	0
  9600  008F3C  6FE5               	movwf	_state& (0+255),b
  9601                           
  9602                           ; BSR set to: 1
  9603                           ;monitor.c: 752:     enable = 0;
  9604  008F3E  0E00               	movlw	0
  9605  008F40  0102               	movlb	2	; () banked
  9606  008F42  6FA2               	movwf	monitor@enable& (0+255),b
  9607                           
  9608                           ; BSR set to: 2
  9609                           ;monitor.c: 753:     ClearVars();
  9610  008F44  EC4B  F022         	call	_ClearVars	;wreg free
  9611                           
  9612                           ; BSR set to: 2
  9613                           ;monitor.c: 754:     TMR0_SetInterruptHandler(MonitorPressureTask);
  9614  008F48  0E1E               	movlw	low _MonitorPressureTask
  9615  008F4A  0101               	movlb	1	; () banked
  9616  008F4C  6F04               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9617  008F4E  0E00               	movlw	high _MonitorPressureTask
  9618  008F50  6F05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9619  008F52  ECD2  F055         	call	_TMR0_SetInterruptHandler	;wreg free
  9620                           
  9621                           ; BSR set to: 1
  9622                           ;monitor.c: 755:     TMR0_StartTimer();
  9623  008F56  ECF2  F057         	call	_TMR0_StartTimer	;wreg free
  9624  008F5A  0012               	return		;funcret
  9625  008F5C                     __end_of_MonitorInit:
  9626                           	opt callstack 0
  9627                           
  9628 ;; *************** function _TMR0_StartTimer *****************
  9629 ;; Defined at:
  9630 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		None
  9639 ;; Tracked objects:
  9640 ;;		On entry : 3C/2
  9641 ;;		On exit  : 3C/0
  9642 ;;		Unchanged: 3C/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;Total ram usage:        0 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:   16
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_SetCalibrateState
  9655 ;;		_MonitorInit
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text43
  9660  00AFE4                     __ptext43:
  9661                           	opt callstack 0
  9662  00AFE4                     _TMR0_StartTimer:
  9663                           	opt callstack 13
  9664                           
  9665                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  9666                           
  9667                           ;incstack = 0
  9668  00AFE4  8EB8               	bsf	184,7,c	;volatile
  9669  00AFE6  0012               	return		;funcret
  9670  00AFE8                     __end_of_TMR0_StartTimer:
  9671                           	opt callstack 0
  9672                           
  9673 ;; *************** function _TMR0_SetInterruptHandler *****************
  9674 ;; Defined at:
  9675 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
  9678 ;;		 -> MonitorPressureTask(1), TMR0_DefaultInterruptHandler(1), 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 3F/1
  9687 ;;		On exit  : 3F/1
  9688 ;;		Unchanged: 3F/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9690 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9693 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;Total ram usage:        2 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:   16
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_TMR0_Initialize
  9701 ;;		_MonitorInit
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text44
  9706  00ABA4                     __ptext44:
  9707                           	opt callstack 0
  9708  00ABA4                     _TMR0_SetInterruptHandler:
  9709                           	opt callstack 12
  9710                           
  9711                           ; BSR set to: 1
  9712                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  9713                           
  9714                           ;incstack = 0
  9715  00ABA4  0060  F410  F2DF   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9716  00ABAA  0060  F414  F2E0   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9717                           
  9718                           ; BSR set to: 1
  9719  00ABB0  0012               	return		;funcret
  9720  00ABB2                     __end_of_TMR0_SetInterruptHandler:
  9721                           	opt callstack 0
  9722                           
  9723 ;; *************** function _ClearVars *****************
  9724 ;; Defined at:
  9725 ;;		line 678 in file "monitor.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;		None
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  i               2    6[BANK1 ] int 
  9730 ;;  i               2    4[BANK1 ] int 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 3C/1
  9737 ;;		On exit  : 3F/2
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9743 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:   17
  9747 ;; This function calls:
  9748 ;;		_ClearCircuitFailureAlarm
  9749 ;;		_ClearEPAboveSetAlarm
  9750 ;;		_ClearEPBelowSetAlarm
  9751 ;;		_ClearIPAboveSetAlarm
  9752 ;;		_ClearIPBelowSetAlarm
  9753 ;; This function is called by:
  9754 ;;		_SetCalibrateState
  9755 ;;		_MonitorInit
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text45
  9760  004496                     __ptext45:
  9761                           	opt callstack 0
  9762  004496                     _ClearVars:
  9763                           	opt callstack 12
  9764                           
  9765                           ;monitor.c: 679:     count = 0;
  9766                           
  9767                           ; BSR set to: 1
  9768                           ;incstack = 0
  9769  004496  0E00               	movlw	0
  9770  004498  0102               	movlb	2	; () banked
  9771  00449A  6F45               	movwf	(_count+1)& (0+255),b
  9772  00449C  0E00               	movlw	0
  9773  00449E  6F44               	movwf	_count& (0+255),b
  9774                           
  9775                           ;monitor.c: 680:     tt = 0;
  9776  0044A0  0E00               	movlw	0
  9777  0044A2  0100               	movlb	0	; () banked
  9778  0044A4  6FC8               	movwf	_tt& (0+255),b
  9779  0044A6  0E00               	movlw	0
  9780  0044A8  6FC9               	movwf	(_tt+1)& (0+255),b
  9781  0044AA  0E00               	movlw	0
  9782  0044AC  6FCA               	movwf	(_tt+2)& (0+255),b
  9783  0044AE  0E00               	movlw	0
  9784  0044B0  6FCB               	movwf	(_tt+3)& (0+255),b
  9785                           
  9786                           ;monitor.c: 681:     for (int i=0; i<25; i++) {
  9787  0044B2  0E00               	movlw	0
  9788  0044B4  0101               	movlb	1	; () banked
  9789  0044B6  6F05               	movwf	(ClearVars@i+1)& (0+255),b
  9790  0044B8  0E00               	movlw	0
  9791  0044BA  6F04               	movwf	ClearVars@i& (0+255),b
  9792  0044BC                     l21136:
  9793                           
  9794                           ; BSR set to: 1
  9795                           ;monitor.c: 682:         prFastBuffer[i] = 0;
  9796  0044BC  90D8               	bcf	status,0,c
  9797  0044BE  3504               	rlcf	ClearVars@i& (0+255),w,b
  9798  0044C0  6ED9               	movwf	fsr2l,c
  9799  0044C2  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9800  0044C4  6EDA               	movwf	fsr2h,c
  9801  0044C6  0E00               	movlw	low _prFastBuffer
  9802  0044C8  26D9               	addwf	fsr2l,f,c
  9803  0044CA  0E04               	movlw	high _prFastBuffer
  9804  0044CC  22DA               	addwfc	fsr2h,f,c
  9805  0044CE  0E00               	movlw	0
  9806  0044D0  6EDE               	movwf	postinc2,c
  9807  0044D2  0E00               	movlw	0
  9808  0044D4  6EDD               	movwf	postdec2,c
  9809                           
  9810                           ;monitor.c: 683:         prSlowBuffer[i] = 0;
  9811  0044D6  90D8               	bcf	status,0,c
  9812  0044D8  3504               	rlcf	ClearVars@i& (0+255),w,b
  9813  0044DA  6ED9               	movwf	fsr2l,c
  9814  0044DC  3505               	rlcf	(ClearVars@i+1)& (0+255),w,b
  9815  0044DE  6EDA               	movwf	fsr2h,c
  9816  0044E0  0E32               	movlw	low _prSlowBuffer
  9817  0044E2  26D9               	addwf	fsr2l,f,c
  9818  0044E4  0E04               	movlw	high _prSlowBuffer
  9819  0044E6  22DA               	addwfc	fsr2h,f,c
  9820  0044E8  0E00               	movlw	0
  9821  0044EA  6EDE               	movwf	postinc2,c
  9822  0044EC  0E00               	movlw	0
  9823  0044EE  6EDD               	movwf	postdec2,c
  9824                           
  9825                           ; BSR set to: 1
  9826                           ;monitor.c: 684:     }
  9827  0044F0  4B04               	infsnz	ClearVars@i& (0+255),f,b
  9828  0044F2  2B05               	incf	(ClearVars@i+1)& (0+255),f,b
  9829                           
  9830                           ; BSR set to: 1
  9831  0044F4  BF05               	btfsc	(ClearVars@i+1)& (0+255),7,b
  9832  0044F6  D7E2               	goto	l21136
  9833  0044F8  5105               	movf	(ClearVars@i+1)& (0+255),w,b
  9834  0044FA  E104               	bnz	u20450
  9835  0044FC  0E19               	movlw	25
  9836  0044FE  5D04               	subwf	ClearVars@i& (0+255),w,b
  9837  004500  A0D8               	btfss	status,0,c
  9838  004502  D7DC               	goto	l21136
  9839  004504                     u20450:
  9840                           
  9841                           ; BSR set to: 1
  9842                           ;monitor.c: 685:     for (int i=0; i<10; i++) {
  9843  004504  0E00               	movlw	0
  9844  004506  6F07               	movwf	(ClearVars@i_4909+1)& (0+255),b
  9845  004508  0E00               	movlw	0
  9846  00450A  6F06               	movwf	ClearVars@i_4909& (0+255),b
  9847  00450C                     l21148:
  9848                           
  9849                           ; BSR set to: 1
  9850                           ;monitor.c: 686:         tdiBuffer[i] = 0;
  9851  00450C  90D8               	bcf	status,0,c
  9852  00450E  3506               	rlcf	ClearVars@i_4909& (0+255),w,b
  9853  004510  6ED9               	movwf	fsr2l,c
  9854  004512  3507               	rlcf	(ClearVars@i_4909+1)& (0+255),w,b
  9855  004514  6EDA               	movwf	fsr2h,c
  9856  004516  0E61               	movlw	low _tdiBuffer
  9857  004518  26D9               	addwf	fsr2l,f,c
  9858  00451A  0E03               	movlw	high _tdiBuffer
  9859  00451C  22DA               	addwfc	fsr2h,f,c
  9860  00451E  0E00               	movlw	0
  9861  004520  6EDE               	movwf	postinc2,c
  9862  004522  0E00               	movlw	0
  9863  004524  6EDD               	movwf	postdec2,c
  9864                           
  9865                           ;monitor.c: 687:         tdeBuffer[i] = 0;
  9866  004526  90D8               	bcf	status,0,c
  9867  004528  3506               	rlcf	ClearVars@i_4909& (0+255),w,b
  9868  00452A  6ED9               	movwf	fsr2l,c
  9869  00452C  3507               	rlcf	(ClearVars@i_4909+1)& (0+255),w,b
  9870  00452E  6EDA               	movwf	fsr2h,c
  9871  004530  0E75               	movlw	low _tdeBuffer
  9872  004532  26D9               	addwf	fsr2l,f,c
  9873  004534  0E03               	movlw	high _tdeBuffer
  9874  004536  22DA               	addwfc	fsr2h,f,c
  9875  004538  0E00               	movlw	0
  9876  00453A  6EDE               	movwf	postinc2,c
  9877  00453C  0E00               	movlw	0
  9878  00453E  6EDD               	movwf	postdec2,c
  9879                           
  9880                           ; BSR set to: 1
  9881                           ;monitor.c: 688:     }
  9882  004540  4B06               	infsnz	ClearVars@i_4909& (0+255),f,b
  9883  004542  2B07               	incf	(ClearVars@i_4909+1)& (0+255),f,b
  9884                           
  9885                           ; BSR set to: 1
  9886  004544  BF07               	btfsc	(ClearVars@i_4909+1)& (0+255),7,b
  9887  004546  D7E2               	goto	l21148
  9888  004548  5107               	movf	(ClearVars@i_4909+1)& (0+255),w,b
  9889  00454A  E104               	bnz	u20460
  9890  00454C  0E0A               	movlw	10
  9891  00454E  5D06               	subwf	ClearVars@i_4909& (0+255),w,b
  9892  004550  A0D8               	btfss	status,0,c
  9893  004552  D7DC               	goto	l21148
  9894  004554                     u20460:
  9895                           
  9896                           ; BSR set to: 1
  9897                           ;monitor.c: 689:     numtdi = 0;
  9898  004554  0E00               	movlw	0
  9899  004556  0100               	movlb	0	; () banked
  9900  004558  6FD3               	movwf	(_numtdi+1)& (0+255),b
  9901  00455A  0E00               	movlw	0
  9902  00455C  6FD2               	movwf	_numtdi& (0+255),b
  9903                           
  9904                           ;monitor.c: 690:     numtde = 0;
  9905  00455E  0E00               	movlw	0
  9906  004560  6FD1               	movwf	(_numtde+1)& (0+255),b
  9907  004562  0E00               	movlw	0
  9908  004564  6FD0               	movwf	_numtde& (0+255),b
  9909                           
  9910                           ;monitor.c: 691:     ti = 0;
  9911  004566  0E00               	movlw	0
  9912  004568  0102               	movlb	2	; () banked
  9913  00456A  6F59               	movwf	(_ti+1)& (0+255),b
  9914  00456C  0E00               	movlw	0
  9915  00456E  6F58               	movwf	_ti& (0+255),b
  9916                           
  9917                           ;monitor.c: 692:     te = 0;
  9918  004570  0E00               	movlw	0
  9919  004572  6F57               	movwf	(_te+1)& (0+255),b
  9920  004574  0E00               	movlw	0
  9921  004576  6F56               	movwf	_te& (0+255),b
  9922                           
  9923                           ;monitor.c: 693:     tdi = 0;
  9924  004578  0E00               	movlw	0
  9925  00457A  0101               	movlb	1	; () banked
  9926  00457C  6FE0               	movwf	(_tdi+1)& (0+255),b
  9927  00457E  0E00               	movlw	0
  9928  004580  6FDF               	movwf	_tdi& (0+255),b
  9929                           
  9930                           ;monitor.c: 694:     tde = 0;
  9931  004582  0E00               	movlw	0
  9932  004584  6FDE               	movwf	(_tde+1)& (0+255),b
  9933  004586  0E00               	movlw	0
  9934  004588  6FDD               	movwf	_tde& (0+255),b
  9935                           
  9936                           ;monitor.c: 695:     tt = 0;
  9937  00458A  0E00               	movlw	0
  9938  00458C  0100               	movlb	0	; () banked
  9939  00458E  6FC8               	movwf	_tt& (0+255),b
  9940  004590  0E00               	movlw	0
  9941  004592  6FC9               	movwf	(_tt+1)& (0+255),b
  9942  004594  0E00               	movlw	0
  9943  004596  6FCA               	movwf	(_tt+2)& (0+255),b
  9944  004598  0E00               	movlw	0
  9945  00459A  6FCB               	movwf	(_tt+3)& (0+255),b
  9946                           
  9947                           ;monitor.c: 696:     ttExt = 0;
  9948  00459C  0E00               	movlw	0
  9949  00459E  0102               	movlb	2	; () banked
  9950  0045A0  6F63               	movwf	(_ttExt+1)& (0+255),b
  9951  0045A2  0E00               	movlw	0
  9952  0045A4  6F62               	movwf	_ttExt& (0+255),b
  9953                           
  9954                           ;monitor.c: 697:     ttNoAlarm = 0;
  9955  0045A6  0E00               	movlw	0
  9956  0045A8  6F5D               	movwf	(_ttNoAlarm+1)& (0+255),b
  9957  0045AA  0E00               	movlw	0
  9958  0045AC  6F5C               	movwf	_ttNoAlarm& (0+255),b
  9959                           
  9960                           ;monitor.c: 698:     ttAlarm = 0;
  9961  0045AE  0E00               	movlw	0
  9962  0045B0  6F5B               	movwf	(_ttAlarm+1)& (0+255),b
  9963  0045B2  0E00               	movlw	0
  9964  0045B4  6F5A               	movwf	_ttAlarm& (0+255),b
  9965                           
  9966                           ;monitor.c: 699:     enableAlarms = 0;
  9967  0045B6  0E00               	movlw	0
  9968  0045B8  0100               	movlb	0	; () banked
  9969  0045BA  6FF0               	movwf	_enableAlarms& (0+255),b
  9970                           
  9971                           ;monitor.c: 700:     tt1 = 0;
  9972  0045BC  0E00               	movlw	0
  9973  0045BE  6FDD               	movwf	(_tt1+1)& (0+255),b
  9974  0045C0  0E00               	movlw	0
  9975  0045C2  6FDC               	movwf	_tt1& (0+255),b
  9976                           
  9977                           ;monitor.c: 701:     tt2 = 0;
  9978  0045C4  0E00               	movlw	0
  9979  0045C6  6FDB               	movwf	(_tt2+1)& (0+255),b
  9980  0045C8  0E00               	movlw	0
  9981  0045CA  6FDA               	movwf	_tt2& (0+255),b
  9982                           
  9983                           ;monitor.c: 702:     tt3 = 0;
  9984  0045CC  0E00               	movlw	0
  9985  0045CE  0101               	movlb	1	; () banked
  9986  0045D0  6FE2               	movwf	(_tt3+1)& (0+255),b
  9987  0045D2  0E00               	movlw	0
  9988  0045D4  6FE1               	movwf	_tt3& (0+255),b
  9989                           
  9990                           ;monitor.c: 703:     tt4 = 0;
  9991  0045D6  0E00               	movlw	0
  9992  0045D8  0100               	movlb	0	; () banked
  9993  0045DA  6FD9               	movwf	(_tt4+1)& (0+255),b
  9994  0045DC  0E00               	movlw	0
  9995  0045DE  6FD8               	movwf	_tt4& (0+255),b
  9996                           
  9997                           ;monitor.c: 704:     tt12 = 0;
  9998  0045E0  0E00               	movlw	0
  9999  0045E2  0102               	movlb	2	; () banked
 10000  0045E4  6F61               	movwf	(_tt12+1)& (0+255),b
 10001  0045E6  0E00               	movlw	0
 10002  0045E8  6F60               	movwf	_tt12& (0+255),b
 10003                           
 10004                           ;monitor.c: 705:     tt34 = 0;
 10005  0045EA  0E00               	movlw	0
 10006  0045EC  6F5F               	movwf	(_tt34+1)& (0+255),b
 10007  0045EE  0E00               	movlw	0
 10008  0045F0  6F5E               	movwf	_tt34& (0+255),b
 10009                           
 10010                           ;monitor.c: 706:     bpm = 0;
 10011  0045F2  0E00               	movlw	0
 10012  0045F4  6F55               	movwf	(_bpm+1)& (0+255),b
 10013  0045F6  0E00               	movlw	0
 10014  0045F8  6F54               	movwf	_bpm& (0+255),b
 10015                           
 10016                           ;monitor.c: 707:     bp = 0;
 10017  0045FA  0E00               	movlw	0
 10018  0045FC  6FBB               	movwf	(_bp+1)& (0+255),b
 10019  0045FE  0E00               	movlw	0
 10020  004600  6FBA               	movwf	_bp& (0+255),b
 10021                           
 10022                           ;monitor.c: 709:     pi = 0;
 10023  004602  0E00               	movlw	0
 10024  004604  0101               	movlb	1	; () banked
 10025  004606  6FDC               	movwf	(_pi+1)& (0+255),b
 10026  004608  0E00               	movlw	0
 10027  00460A  6FDB               	movwf	_pi& (0+255),b
 10028                           
 10029                           ;monitor.c: 710:     pe = 0;
 10030  00460C  0E00               	movlw	0
 10031  00460E  6FDA               	movwf	(_pe+1)& (0+255),b
 10032  004610  0E00               	movlw	0
 10033  004612  6FD9               	movwf	_pe& (0+255),b
 10034                           
 10035                           ;monitor.c: 711:     rpi = 0;
 10036  004614  0E00               	movlw	0
 10037  004616  0102               	movlb	2	; () banked
 10038  004618  6F49               	movwf	(_rpi+1)& (0+255),b
 10039  00461A  0E00               	movlw	0
 10040  00461C  6F48               	movwf	_rpi& (0+255),b
 10041                           
 10042                           ;monitor.c: 712:     rpe = 0;
 10043  00461E  0E00               	movlw	0
 10044  004620  6F47               	movwf	(_rpe+1)& (0+255),b
 10045  004622  0E00               	movlw	0
 10046  004624  6F46               	movwf	_rpe& (0+255),b
 10047                           
 10048                           ;monitor.c: 713:     lrpi = 0;
 10049  004626  0E00               	movlw	0
 10050  004628  0101               	movlb	1	; () banked
 10051  00462A  6FD4               	movwf	(_lrpi+1)& (0+255),b
 10052  00462C  0E00               	movlw	0
 10053  00462E  6FD3               	movwf	_lrpi& (0+255),b
 10054                           
 10055                           ;monitor.c: 714:     lrpe = 0;
 10056  004630  0E00               	movlw	0
 10057  004632  6FD2               	movwf	(_lrpe+1)& (0+255),b
 10058  004634  0E00               	movlw	0
 10059  004636  6FD1               	movwf	_lrpe& (0+255),b
 10060                           
 10061                           ;monitor.c: 715:     maxPressure = 0;
 10062  004638  0E00               	movlw	0
 10063  00463A  0102               	movlb	2	; () banked
 10064  00463C  6F51               	movwf	(_maxPressure+1)& (0+255),b
 10065  00463E  0E00               	movlw	0
 10066  004640  6F50               	movwf	_maxPressure& (0+255),b
 10067                           
 10068                           ;monitor.c: 716:     minPressure = 40*5;
 10069  004642  0E00               	movlw	0
 10070  004644  0100               	movlb	0	; () banked
 10071  004646  6FD5               	movwf	(_minPressure+1)& (0+255),b
 10072  004648  0EC8               	movlw	200
 10073  00464A  6FD4               	movwf	_minPressure& (0+255),b
 10074                           
 10075                           ;monitor.c: 717:     pHighAcc = 0;
 10076  00464C  0E00               	movlw	0
 10077  00464E  0102               	movlb	2	; () banked
 10078  004650  6F1E               	movwf	_pHighAcc& (0+255),b
 10079  004652  0E00               	movlw	0
 10080  004654  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 10081  004656  0E00               	movlw	0
 10082  004658  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 10083  00465A  0E00               	movlw	0
 10084  00465C  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 10085                           
 10086                           ;monitor.c: 718:     pLowAcc = 0;
 10087  00465E  0E00               	movlw	0
 10088  004660  6F1A               	movwf	_pLowAcc& (0+255),b
 10089  004662  0E00               	movlw	0
 10090  004664  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 10091  004666  0E00               	movlw	0
 10092  004668  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 10093  00466A  0E00               	movlw	0
 10094  00466C  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 10095                           
 10096                           ;monitor.c: 720:     alarmMaxPressure = 0;
 10097  00466E  0E00               	movlw	0
 10098  004670  6F4F               	movwf	(_alarmMaxPressure+1)& (0+255),b
 10099  004672  0E00               	movlw	0
 10100  004674  6F4E               	movwf	_alarmMaxPressure& (0+255),b
 10101                           
 10102                           ;monitor.c: 721:     prSlow = 0;
 10103  004676  0E00               	movlw	0
 10104  004678  0100               	movlb	0	; () banked
 10105  00467A  6FCF               	movwf	(_prSlow+1)& (0+255),b
 10106  00467C  0E00               	movlw	0
 10107  00467E  6FCE               	movwf	_prSlow& (0+255),b
 10108                           
 10109                           ;monitor.c: 722:     prSlowDev = 0;
 10110  004680  0E00               	movlw	0
 10111  004682  0102               	movlb	2	; () banked
 10112  004684  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 10113  004686  0E00               	movlw	0
 10114  004688  6F42               	movwf	_prSlowDev& (0+255),b
 10115                           
 10116                           ;monitor.c: 723:     prSlowNumStable = 0;
 10117  00468A  0E00               	movlw	0
 10118  00468C  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 10119  00468E  0E00               	movlw	0
 10120  004690  6F40               	movwf	_prSlowNumStable& (0+255),b
 10121                           
 10122                           ;monitor.c: 724:     hiLimit = 40*5;
 10123  004692  0E00               	movlw	0
 10124  004694  0101               	movlb	1	; () banked
 10125  004696  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 10126  004698  0EC8               	movlw	200
 10127  00469A  6FCF               	movwf	_hiLimit& (0+255),b
 10128                           
 10129                           ;monitor.c: 725:     loLimit = 0;
 10130  00469C  0E00               	movlw	0
 10131  00469E  6FCE               	movwf	(_loLimit+1)& (0+255),b
 10132  0046A0  0E00               	movlw	0
 10133  0046A2  6FCD               	movwf	_loLimit& (0+255),b
 10134                           
 10135                           ;monitor.c: 726:     volumeAcc = 0;
 10136  0046A4  0E00               	movlw	0
 10137  0046A6  0102               	movlb	2	; () banked
 10138  0046A8  6F22               	movwf	_volumeAcc& (0+255),b
 10139  0046AA  0E00               	movlw	0
 10140  0046AC  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 10141  0046AE  0E00               	movlw	0
 10142  0046B0  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 10143  0046B2  0E00               	movlw	0
 10144  0046B4  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 10145                           
 10146                           ;monitor.c: 727:     volume = 0;
 10147  0046B6  0E00               	movlw	0
 10148  0046B8  0101               	movlb	1	; () banked
 10149  0046BA  6FE4               	movwf	(_volume+1)& (0+255),b
 10150  0046BC  0E00               	movlw	0
 10151  0046BE  6FE3               	movwf	_volume& (0+255),b
 10152                           
 10153                           ;monitor.c: 729:     alarmSV1=1;
 10154  0046C0  0E01               	movlw	1
 10155  0046C2  0102               	movlb	2	; () banked
 10156  0046C4  6FA0               	movwf	_alarmSV1& (0+255),b
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;monitor.c: 731:     ClearEPAboveSetAlarm();
 10160  0046C6  ECD3  F054         	call	_ClearEPAboveSetAlarm	;wreg free
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;monitor.c: 732:     ClearEPBelowSetAlarm();
 10164  0046CA  EC20  F055         	call	_ClearEPBelowSetAlarm	;wreg free
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;monitor.c: 733:     ClearIPAboveSetAlarm();
 10168  0046CE  ECC8  F054         	call	_ClearIPAboveSetAlarm	;wreg free
 10169                           
 10170                           ; BSR set to: 2
 10171                           ;monitor.c: 734:     ClearIPBelowSetAlarm();
 10172  0046D2  ECBD  F054         	call	_ClearIPBelowSetAlarm	;wreg free
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;monitor.c: 735:     ClearCircuitFailureAlarm();
 10176  0046D6  EC1F  F057         	call	_ClearCircuitFailureAlarm	;wreg free
 10177                           
 10178                           ; BSR set to: 2
 10179  0046DA  0012               	return		;funcret
 10180  0046DC                     __end_of_ClearVars:
 10181                           	opt callstack 0
 10182                           
 10183 ;; *************** function _ClearIPBelowSetAlarm *****************
 10184 ;; Defined at:
 10185 ;;		line 284 in file "alarm.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;		None
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg, status,2, status,0
 10194 ;; Tracked objects:
 10195 ;;		On entry : 3F/2
 10196 ;;		On exit  : 3F/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;Total ram usage:        0 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; Hardware stack levels required when called:   16
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		_ClearVars
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text46
 10214  00A97A                     __ptext46:
 10215                           	opt callstack 0
 10216  00A97A                     _ClearIPBelowSetAlarm:
 10217                           	opt callstack 12
 10218                           
 10219                           ; BSR set to: 2
 10220                           
 10221                           ; BSR set to: 2
 10222                           ;incstack = 0
 10223  00A97A  0100               	movlb	0	; () banked
 10224  00A97C  07E0               	decf	_ipBelowSetAlarm& (0+255),f,b
 10225  00A97E  A0D8               	btfss	status,0,c
 10226  00A980  07E1               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 10227                           
 10228                           ; BSR set to: 0
 10229  00A982  AFE1               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 10230  00A984  0012               	return	
 10231                           
 10232                           ; BSR set to: 0
 10233  00A986  0E00               	movlw	0
 10234  00A988  6FE1               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 10235  00A98A  0E00               	movlw	0
 10236  00A98C  6FE0               	movwf	_ipBelowSetAlarm& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239  00A98E  0012               	return		;funcret
 10240  00A990                     __end_of_ClearIPBelowSetAlarm:
 10241                           	opt callstack 0
 10242                           
 10243 ;; *************** function _ClearIPAboveSetAlarm *****************
 10244 ;; Defined at:
 10245 ;;		line 285 in file "alarm.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  1    wreg      void 
 10252 ;; Registers used:
 10253 ;;		wreg, status,2, status,0
 10254 ;; Tracked objects:
 10255 ;;		On entry : 3F/0
 10256 ;;		On exit  : 3F/2
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;Total ram usage:        0 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:   16
 10266 ;; This function calls:
 10267 ;;		Nothing
 10268 ;; This function is called by:
 10269 ;;		_ClearVars
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text47
 10274  00A990                     __ptext47:
 10275                           	opt callstack 0
 10276  00A990                     _ClearIPAboveSetAlarm:
 10277                           	opt callstack 12
 10278                           
 10279                           ; BSR set to: 0
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;incstack = 0
 10283  00A990  0102               	movlb	2	; () banked
 10284  00A992  0780               	decf	_ipAboveSetAlarm& (0+255),f,b
 10285  00A994  A0D8               	btfss	status,0,c
 10286  00A996  0781               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 10287                           
 10288                           ; BSR set to: 2
 10289  00A998  AF81               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 10290  00A99A  0012               	return	
 10291                           
 10292                           ; BSR set to: 2
 10293  00A99C  0E00               	movlw	0
 10294  00A99E  6F81               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 10295  00A9A0  0E00               	movlw	0
 10296  00A9A2  6F80               	movwf	_ipAboveSetAlarm& (0+255),b
 10297                           
 10298                           ; BSR set to: 2
 10299  00A9A4  0012               	return		;funcret
 10300  00A9A6                     __end_of_ClearIPAboveSetAlarm:
 10301                           	opt callstack 0
 10302                           
 10303 ;; *************** function _ClearEPBelowSetAlarm *****************
 10304 ;; Defined at:
 10305 ;;		line 282 in file "alarm.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0
 10314 ;; Tracked objects:
 10315 ;;		On entry : 3F/0
 10316 ;;		On exit  : 3F/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:   16
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_ClearVars
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text48
 10334  00AA40                     __ptext48:
 10335                           	opt callstack 0
 10336  00AA40                     _ClearEPBelowSetAlarm:
 10337                           	opt callstack 12
 10338                           
 10339                           ; BSR set to: 0
 10340                           
 10341                           ; BSR set to: 2
 10342                           ;incstack = 0
 10343  00AA40  07E4               	decf	_epBelowSetAlarm& (0+255),f,b
 10344  00AA42  A0D8               	btfss	status,0,c
 10345  00AA44  07E5               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 10346                           
 10347                           ; BSR set to: 0
 10348  00AA46  AFE5               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 10349  00AA48  0012               	return	
 10350                           
 10351                           ; BSR set to: 0
 10352  00AA4A  0E00               	movlw	0
 10353  00AA4C  6FE5               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 10354  00AA4E  0E00               	movlw	0
 10355  00AA50  6FE4               	movwf	_epBelowSetAlarm& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358  00AA52  0012               	return		;funcret
 10359  00AA54                     __end_of_ClearEPBelowSetAlarm:
 10360                           	opt callstack 0
 10361                           
 10362 ;; *************** function _ClearEPAboveSetAlarm *****************
 10363 ;; Defined at:
 10364 ;;		line 283 in file "alarm.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;		None
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      void 
 10371 ;; Registers used:
 10372 ;;		wreg, status,2, status,0
 10373 ;; Tracked objects:
 10374 ;;		On entry : 3F/2
 10375 ;;		On exit  : 3F/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;Total ram usage:        0 bytes
 10383 ;; Hardware stack levels used:    1
 10384 ;; Hardware stack levels required when called:   16
 10385 ;; This function calls:
 10386 ;;		Nothing
 10387 ;; This function is called by:
 10388 ;;		_ClearVars
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text49
 10393  00A9A6                     __ptext49:
 10394                           	opt callstack 0
 10395  00A9A6                     _ClearEPAboveSetAlarm:
 10396                           	opt callstack 12
 10397                           
 10398                           ; BSR set to: 2
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;incstack = 0
 10402  00A9A6  0100               	movlb	0	; () banked
 10403  00A9A8  07E2               	decf	_epAboveSetAlarm& (0+255),f,b
 10404  00A9AA  A0D8               	btfss	status,0,c
 10405  00A9AC  07E3               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 10406                           
 10407                           ; BSR set to: 0
 10408  00A9AE  AFE3               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 10409  00A9B0  0012               	return	
 10410                           
 10411                           ; BSR set to: 0
 10412  00A9B2  0E00               	movlw	0
 10413  00A9B4  6FE3               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 10414  00A9B6  0E00               	movlw	0
 10415  00A9B8  6FE2               	movwf	_epAboveSetAlarm& (0+255),b
 10416                           
 10417                           ; BSR set to: 0
 10418  00A9BA  0012               	return		;funcret
 10419  00A9BC                     __end_of_ClearEPAboveSetAlarm:
 10420                           	opt callstack 0
 10421                           
 10422 ;; *************** function _ClearCircuitFailureAlarm *****************
 10423 ;; Defined at:
 10424 ;;		line 279 in file "alarm.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2
 10433 ;; Tracked objects:
 10434 ;;		On entry : 3C/1
 10435 ;;		On exit  : 3F/2
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   16
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_MuteAlarm
 10449 ;;		_ClearVars
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text50
 10454  00AE3E                     __ptext50:
 10455                           	opt callstack 0
 10456  00AE3E                     _ClearCircuitFailureAlarm:
 10457                           	opt callstack 12
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;incstack = 0
 10461  00AE3E  0E00               	movlw	0
 10462  00AE40  0102               	movlb	2	; () banked
 10463  00AE42  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 10464                           
 10465                           ; BSR set to: 2
 10466  00AE44  0012               	return		;funcret
 10467  00AE46                     __end_of_ClearCircuitFailureAlarm:
 10468                           	opt callstack 0
 10469                           
 10470 ;; *************** function _AdcInit *****************
 10471 ;; Defined at:
 10472 ;;		line 57 in file "monitor.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 3C/0
 10483 ;;		On exit  : 3F/3E
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:   17
 10493 ;; This function calls:
 10494 ;;		_ADCC_SetADIInterruptHandler
 10495 ;;		_ADCC_StartConversion
 10496 ;;		___wmul
 10497 ;; This function is called by:
 10498 ;;		_MonitorInit
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text51
 10503  008D8E                     __ptext51:
 10504                           	opt callstack 0
 10505  008D8E                     _AdcInit:
 10506                           	opt callstack 12
 10507                           
 10508                           ;monitor.c: 58:     currentChannel = 0;
 10509                           
 10510                           ; BSR set to: 2
 10511                           ;incstack = 0
 10512  008D8E  0E00               	movlw	0
 10513  008D90  0101               	movlb	1	; () banked
 10514  008D92  6FEC               	movwf	(_currentChannel+1)& (0+255),b
 10515  008D94  0E00               	movlw	0
 10516  008D96  6FEB               	movwf	_currentChannel& (0+255),b
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;monitor.c: 59:     ADCC_SetADIInterruptHandler(AdcHandler);
 10520  008D98  0E78               	movlw	low _AdcHandler
 10521  008D9A  6F04               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 10522  008D9C  0E66               	movlw	high _AdcHandler
 10523  008D9E  6F05               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 10524  008DA0  ECD9  F055         	call	_ADCC_SetADIInterruptHandler	;wreg free
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;monitor.c: 61:     ADCON0bits.ADON = 0;
 10528  008DA4  013E               	movlb	62	; () banked
 10529  008DA6  9FF8               	bcf	248,7,b	;volatile
 10530                           
 10531                           ; BSR set to: 62
 10532                           ;monitor.c: 62:     ADREF = adcChannels[currentChannel].ref;
 10533  008DA8  0060  F7AC  F104   	movff	_currentChannel,___wmul@multiplier
 10534  008DAE  0060  F7B0  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10535  008DB4  0E00               	movlw	0
 10536  008DB6  0101               	movlb	1	; () banked
 10537  008DB8  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10538  008DBA  0E05               	movlw	5
 10539  008DBC  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10540  008DBE  EC5E  F051         	call	___wmul	;wreg free
 10541  008DC2  0EC0               	movlw	low (_adcChannels+4)
 10542  008DC4  2504               	addwf	?___wmul& (0+255),w,b
 10543  008DC6  6ED9               	movwf	fsr2l,c
 10544  008DC8  0E02               	movlw	high (_adcChannels+4)
 10545  008DCA  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10546  008DCC  6EDA               	movwf	fsr2h,c
 10547  008DCE  50DF               	movf	indf2,w,c
 10548  008DD0  013E               	movlb	62	; () banked
 10549  008DD2  6FFD               	movwf	253,b	;volatile
 10550                           
 10551                           ; BSR set to: 62
 10552                           ;monitor.c: 63:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 10553  008DD4  0060  F7AC  F104   	movff	_currentChannel,___wmul@multiplier
 10554  008DDA  0060  F7B0  F105   	movff	_currentChannel+1,___wmul@multiplier+1
 10555  008DE0  0E00               	movlw	0
 10556  008DE2  0101               	movlb	1	; () banked
 10557  008DE4  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10558  008DE6  0E05               	movlw	5
 10559  008DE8  6F06               	movwf	___wmul@multiplicand& (0+255),b
 10560  008DEA  EC5E  F051         	call	___wmul	;wreg free
 10561  008DEE  0EBC               	movlw	low _adcChannels
 10562  008DF0  2504               	addwf	?___wmul& (0+255),w,b
 10563  008DF2  6ED9               	movwf	fsr2l,c
 10564  008DF4  0E02               	movlw	high _adcChannels
 10565  008DF6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 10566  008DF8  6EDA               	movwf	fsr2h,c
 10567  008DFA  50DF               	movf	indf2,w,c
 10568  008DFC  EC59  F055         	call	_ADCC_StartConversion
 10569                           
 10570                           ; BSR set to: 62
 10571  008E00  0012               	return		;funcret
 10572  008E02                     __end_of_AdcInit:
 10573                           	opt callstack 0
 10574                           
 10575 ;; *************** function _ADCC_StartConversion *****************
 10576 ;; Defined at:
 10577 ;;		line 120 in file "mcc_generated_files/adcc.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  channel         1    wreg     enum E16053
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  channel         1    4[BANK1 ] enum E16053
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg
 10586 ;; Tracked objects:
 10587 ;;		On entry : 3F/1
 10588 ;;		On exit  : 3F/3E
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;Total ram usage:        1 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:   16
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_AdcInit
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text52
 10606  00AAB2                     __ptext52:
 10607                           	opt callstack 0
 10608  00AAB2                     _ADCC_StartConversion:
 10609                           	opt callstack 12
 10610                           
 10611                           ; BSR set to: 62
 10612                           ;incstack = 0
 10613                           ;ADCC_StartConversion@channel stored from wreg
 10614  00AAB2  6F04               	movwf	ADCC_StartConversion@channel& (0+255),b
 10615                           
 10616                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 10617  00AAB4  0060  F413  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 10618                           
 10619                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 10620  00AABA  013E               	movlb	62	; () banked
 10621  00AABC  8FF8               	bsf	248,7,b	;volatile
 10622                           
 10623                           ; BSR set to: 62
 10624                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 10625  00AABE  81F8               	bsf	248,0,b	;volatile
 10626                           
 10627                           ; BSR set to: 62
 10628  00AAC0  0012               	return		;funcret
 10629  00AAC2                     __end_of_ADCC_StartConversion:
 10630                           	opt callstack 0
 10631                           
 10632 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 10633 ;; Defined at:
 10634 ;;		line 315 in file "mcc_generated_files/adcc.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 10637 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0
 10644 ;; Tracked objects:
 10645 ;;		On entry : 3F/1
 10646 ;;		On exit  : 3F/1
 10647 ;;		Unchanged: 3F/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10649 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;Total ram usage:        2 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:   16
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_ADCC_Initialize
 10660 ;;		_AdcInit
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text53
 10665  00ABB2                     __ptext53:
 10666                           	opt callstack 0
 10667  00ABB2                     _ADCC_SetADIInterruptHandler:
 10668                           	opt callstack 12
 10669                           
 10670                           ; BSR set to: 1
 10671                           ;mcc_generated_files/adcc.c: 316:     ADCC_ADI_InterruptHandler = InterruptHandler;
 10672                           
 10673                           ; BSR set to: 62
 10674                           ;incstack = 0
 10675  00ABB2  0060  F410  F2F3   	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 10676  00ABB8  0060  F414  F2F4   	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 10677                           
 10678                           ; BSR set to: 1
 10679  00ABBE  0012               	return		;funcret
 10680  00ABC0                     __end_of_ADCC_SetADIInterruptHandler:
 10681                           	opt callstack 0
 10682                           
 10683 ;; *************** function _MonitorEnable *****************
 10684 ;; Defined at:
 10685 ;;		line 270 in file "monitor.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  1    wreg      void 
 10692 ;; Registers used:
 10693 ;;		wreg, status,2
 10694 ;; Tracked objects:
 10695 ;;		On entry : 3F/3
 10696 ;;		On exit  : 3F/2
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;Total ram usage:        0 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:   16
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_main
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           	psect	text54
 10714  00AE46                     __ptext54:
 10715                           	opt callstack 0
 10716  00AE46                     _MonitorEnable:
 10717                           	opt callstack 14
 10718                           
 10719                           ; BSR set to: 3
 10720                           
 10721                           ; BSR set to: 1
 10722                           ;incstack = 0
 10723  00AE46  0E01               	movlw	1
 10724  00AE48  0102               	movlb	2	; () banked
 10725  00AE4A  6FA2               	movwf	monitor@enable& (0+255),b
 10726                           
 10727                           ; BSR set to: 2
 10728  00AE4C  0012               	return		;funcret
 10729  00AE4E                     __end_of_MonitorEnable:
 10730                           	opt callstack 0
 10731                           
 10732 ;; *************** function _MonitorDump *****************
 10733 ;; Defined at:
 10734 ;;		line 212 in file "monitor.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      void 
 10741 ;; Registers used:
 10742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10743 ;; Tracked objects:
 10744 ;;		On entry : 3F/3
 10745 ;;		On exit  : 3F/2
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;Total ram usage:        0 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:   25
 10755 ;; This function calls:
 10756 ;;		_See12V
 10757 ;;		_See5V
 10758 ;;		___awdiv
 10759 ;;		_printf
 10760 ;; This function is called by:
 10761 ;;		_main
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text55
 10766  00311C                     __ptext55:
 10767                           	opt callstack 0
 10768  00311C                     _MonitorDump:
 10769                           	opt callstack 5
 10770                           
 10771                           ; BSR set to: 3
 10772                           ;monitor.c: 215:             printf("\r\nNew Breath: TT12: %d TT2: %d TT3: %d TT34: %d T
      +                          T4: %d TT1: %d ", tt12*2, tt2*2, tt3*2, tt34*2, tt4*2, tt1*2);
 10773                           
 10774                           ; BSR set to: 2
 10775                           ;incstack = 0
 10776  00311C  0E57               	movlw	low STR_33
 10777  00311E  0101               	movlb	1	; () banked
 10778  003120  6F71               	movwf	printf@fmt& (0+255),b
 10779  003122  0EFC               	movlw	high STR_33
 10780  003124  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10781  003126  90D8               	bcf	status,0,c
 10782  003128  0102               	movlb	2	; () banked
 10783  00312A  3560               	rlcf	_tt12& (0+255),w,b
 10784  00312C  0101               	movlb	1	; () banked
 10785  00312E  6F73               	movwf	(?_printf+2)& (0+255),b
 10786  003130  0102               	movlb	2	; () banked
 10787  003132  3561               	rlcf	(_tt12+1)& (0+255),w,b
 10788  003134  0101               	movlb	1	; () banked
 10789  003136  6F74               	movwf	(?_printf+3)& (0+255),b
 10790  003138  90D8               	bcf	status,0,c
 10791  00313A  0100               	movlb	0	; () banked
 10792  00313C  35DA               	rlcf	_tt2& (0+255),w,b
 10793  00313E  0101               	movlb	1	; () banked
 10794  003140  6F75               	movwf	(?_printf+4)& (0+255),b
 10795  003142  0100               	movlb	0	; () banked
 10796  003144  35DB               	rlcf	(_tt2+1)& (0+255),w,b
 10797  003146  0101               	movlb	1	; () banked
 10798  003148  6F76               	movwf	(?_printf+5)& (0+255),b
 10799  00314A  90D8               	bcf	status,0,c
 10800  00314C  35E1               	rlcf	_tt3& (0+255),w,b
 10801  00314E  6F77               	movwf	(?_printf+6)& (0+255),b
 10802  003150  35E2               	rlcf	(_tt3+1)& (0+255),w,b
 10803  003152  6F78               	movwf	(?_printf+7)& (0+255),b
 10804  003154  90D8               	bcf	status,0,c
 10805  003156  0102               	movlb	2	; () banked
 10806  003158  355E               	rlcf	_tt34& (0+255),w,b
 10807  00315A  0101               	movlb	1	; () banked
 10808  00315C  6F79               	movwf	(?_printf+8)& (0+255),b
 10809  00315E  0102               	movlb	2	; () banked
 10810  003160  355F               	rlcf	(_tt34+1)& (0+255),w,b
 10811  003162  0101               	movlb	1	; () banked
 10812  003164  6F7A               	movwf	(?_printf+9)& (0+255),b
 10813  003166  90D8               	bcf	status,0,c
 10814  003168  0100               	movlb	0	; () banked
 10815  00316A  35D8               	rlcf	_tt4& (0+255),w,b
 10816  00316C  0101               	movlb	1	; () banked
 10817  00316E  6F7B               	movwf	(?_printf+10)& (0+255),b
 10818  003170  0100               	movlb	0	; () banked
 10819  003172  35D9               	rlcf	(_tt4+1)& (0+255),w,b
 10820  003174  0101               	movlb	1	; () banked
 10821  003176  6F7C               	movwf	(?_printf+11)& (0+255),b
 10822  003178  90D8               	bcf	status,0,c
 10823  00317A  0100               	movlb	0	; () banked
 10824  00317C  35DC               	rlcf	_tt1& (0+255),w,b
 10825  00317E  0101               	movlb	1	; () banked
 10826  003180  6F7D               	movwf	(?_printf+12)& (0+255),b
 10827  003182  0100               	movlb	0	; () banked
 10828  003184  35DD               	rlcf	(_tt1+1)& (0+255),w,b
 10829  003186  0101               	movlb	1	; () banked
 10830  003188  6F7E               	movwf	(?_printf+13)& (0+255),b
 10831  00318A  ECE6  F051         	call	_printf	;wreg free
 10832                           
 10833                           ;monitor.c: 216:             printf("TI: %d TE: %d TDI: %d TDE: %d\r\n", ti*2, te*2, tdi
      +                          *2, tde*2);
 10834  00318E  0E47               	movlw	low STR_34
 10835  003190  0101               	movlb	1	; () banked
 10836  003192  6F71               	movwf	printf@fmt& (0+255),b
 10837  003194  0EFE               	movlw	high STR_34
 10838  003196  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10839  003198  90D8               	bcf	status,0,c
 10840  00319A  0102               	movlb	2	; () banked
 10841  00319C  3558               	rlcf	_ti& (0+255),w,b
 10842  00319E  0101               	movlb	1	; () banked
 10843  0031A0  6F73               	movwf	(?_printf+2)& (0+255),b
 10844  0031A2  0102               	movlb	2	; () banked
 10845  0031A4  3559               	rlcf	(_ti+1)& (0+255),w,b
 10846  0031A6  0101               	movlb	1	; () banked
 10847  0031A8  6F74               	movwf	(?_printf+3)& (0+255),b
 10848  0031AA  90D8               	bcf	status,0,c
 10849  0031AC  0102               	movlb	2	; () banked
 10850  0031AE  3556               	rlcf	_te& (0+255),w,b
 10851  0031B0  0101               	movlb	1	; () banked
 10852  0031B2  6F75               	movwf	(?_printf+4)& (0+255),b
 10853  0031B4  0102               	movlb	2	; () banked
 10854  0031B6  3557               	rlcf	(_te+1)& (0+255),w,b
 10855  0031B8  0101               	movlb	1	; () banked
 10856  0031BA  6F76               	movwf	(?_printf+5)& (0+255),b
 10857  0031BC  90D8               	bcf	status,0,c
 10858  0031BE  35DF               	rlcf	_tdi& (0+255),w,b
 10859  0031C0  6F77               	movwf	(?_printf+6)& (0+255),b
 10860  0031C2  35E0               	rlcf	(_tdi+1)& (0+255),w,b
 10861  0031C4  6F78               	movwf	(?_printf+7)& (0+255),b
 10862  0031C6  90D8               	bcf	status,0,c
 10863  0031C8  35DD               	rlcf	_tde& (0+255),w,b
 10864  0031CA  6F79               	movwf	(?_printf+8)& (0+255),b
 10865  0031CC  35DE               	rlcf	(_tde+1)& (0+255),w,b
 10866  0031CE  6F7A               	movwf	(?_printf+9)& (0+255),b
 10867  0031D0  ECE6  F051         	call	_printf	;wreg free
 10868                           
 10869                           ;monitor.c: 217:             printf("   Pmax: %d lIP: %d IP: %d Phigh: %d -- ", pmax/5, 
      +                          lrpi/5, pi/5, pHigh/5);
 10870  0031D4  0E92               	movlw	low STR_35
 10871  0031D6  0101               	movlb	1	; () banked
 10872  0031D8  6F71               	movwf	printf@fmt& (0+255),b
 10873  0031DA  0EFD               	movlw	high STR_35
 10874  0031DC  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10875  0031DE  0060  F358  F10A   	movff	_pmax,___awdiv@dividend
 10876  0031E4  0060  F35C  F10B   	movff	_pmax+1,___awdiv@dividend+1
 10877  0031EA  0E00               	movlw	0
 10878  0031EC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10879  0031EE  0E05               	movlw	5
 10880  0031F0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10881  0031F2  EC7D  F045         	call	___awdiv	;wreg free
 10882  0031F6  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10883  0031FC  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10884  003202  0060  F74C  F10A   	movff	_lrpi,___awdiv@dividend
 10885  003208  0060  F750  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 10886  00320E  0E00               	movlw	0
 10887  003210  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10888  003212  0E05               	movlw	5
 10889  003214  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10890  003216  EC7D  F045         	call	___awdiv	;wreg free
 10891  00321A  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10892  003220  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10893  003226  0060  F76C  F10A   	movff	_pi,___awdiv@dividend
 10894  00322C  0060  F770  F10B   	movff	_pi+1,___awdiv@dividend+1
 10895  003232  0E00               	movlw	0
 10896  003234  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10897  003236  0E05               	movlw	5
 10898  003238  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10899  00323A  EC7D  F045         	call	___awdiv	;wreg free
 10900  00323E  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10901  003244  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10902  00324A  0060  F75C  F10A   	movff	_pHigh,___awdiv@dividend
 10903  003250  0060  F760  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 10904  003256  0E00               	movlw	0
 10905  003258  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10906  00325A  0E05               	movlw	5
 10907  00325C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10908  00325E  EC7D  F045         	call	___awdiv	;wreg free
 10909  003262  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10910  003268  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10911  00326E  ECE6  F051         	call	_printf	;wreg free
 10912                           
 10913                           ;monitor.c: 218:             printf("Pmin: %d lEP: %d EP: %d Plow:%d -- ", pmin/5, lrpe/
      +                          5, pe/5, pLow/5 );
 10914  003272  0EE3               	movlw	low STR_36
 10915  003274  0101               	movlb	1	; () banked
 10916  003276  6F71               	movwf	printf@fmt& (0+255),b
 10917  003278  0EFD               	movlw	high STR_36
 10918  00327A  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10919  00327C  0060  F948  F10A   	movff	_pmin,___awdiv@dividend
 10920  003282  0060  F94C  F10B   	movff	_pmin+1,___awdiv@dividend+1
 10921  003288  0E00               	movlw	0
 10922  00328A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10923  00328C  0E05               	movlw	5
 10924  00328E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10925  003290  EC7D  F045         	call	___awdiv	;wreg free
 10926  003294  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10927  00329A  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10928  0032A0  0060  F744  F10A   	movff	_lrpe,___awdiv@dividend
 10929  0032A6  0060  F748  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 10930  0032AC  0E00               	movlw	0
 10931  0032AE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10932  0032B0  0E05               	movlw	5
 10933  0032B2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10934  0032B4  EC7D  F045         	call	___awdiv	;wreg free
 10935  0032B8  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10936  0032BE  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10937  0032C4  0060  F764  F10A   	movff	_pe,___awdiv@dividend
 10938  0032CA  0060  F768  F10B   	movff	_pe+1,___awdiv@dividend+1
 10939  0032D0  0E00               	movlw	0
 10940  0032D2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10941  0032D4  0E05               	movlw	5
 10942  0032D6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10943  0032D8  EC7D  F045         	call	___awdiv	;wreg free
 10944  0032DC  0060  F428  F177   	movff	?___awdiv,?_printf+6
 10945  0032E2  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 10946  0032E8  0060  F754  F10A   	movff	_pLow,___awdiv@dividend
 10947  0032EE  0060  F758  F10B   	movff	_pLow+1,___awdiv@dividend+1
 10948  0032F4  0E00               	movlw	0
 10949  0032F6  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10950  0032F8  0E05               	movlw	5
 10951  0032FA  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10952  0032FC  EC7D  F045         	call	___awdiv	;wreg free
 10953  003300  0060  F428  F179   	movff	?___awdiv,?_printf+8
 10954  003306  0060  F42C  F17A   	movff	?___awdiv+1,?_printf+9
 10955  00330C  ECE6  F051         	call	_printf	;wreg free
 10956                           
 10957                           ;monitor.c: 219:             printf("HiLimit: %d LoLimit: %d -- Volume: %d\r\n", hiLimit
      +                          /5, loLimit/5, volume);
 10958  003310  0EBB               	movlw	low STR_37
 10959  003312  0101               	movlb	1	; () banked
 10960  003314  6F71               	movwf	printf@fmt& (0+255),b
 10961  003316  0EFD               	movlw	high STR_37
 10962  003318  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10963  00331A  0060  F73C  F10A   	movff	_hiLimit,___awdiv@dividend
 10964  003320  0060  F740  F10B   	movff	_hiLimit+1,___awdiv@dividend+1
 10965  003326  0E00               	movlw	0
 10966  003328  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10967  00332A  0E05               	movlw	5
 10968  00332C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10969  00332E  EC7D  F045         	call	___awdiv	;wreg free
 10970  003332  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10971  003338  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 10972  00333E  0060  F734  F10A   	movff	_loLimit,___awdiv@dividend
 10973  003344  0060  F738  F10B   	movff	_loLimit+1,___awdiv@dividend+1
 10974  00334A  0E00               	movlw	0
 10975  00334C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10976  00334E  0E05               	movlw	5
 10977  003350  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10978  003352  EC7D  F045         	call	___awdiv	;wreg free
 10979  003356  0060  F428  F175   	movff	?___awdiv,?_printf+4
 10980  00335C  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 10981  003362  0060  F78C  F177   	movff	_volume,?_printf+6
 10982  003368  0060  F790  F178   	movff	_volume+1,?_printf+7
 10983  00336E  ECE6  F051         	call	_printf	;wreg free
 10984                           
 10985                           ;monitor.c: 220:             printf("ADCoffset: %d ADCVoffset: %d 12V: %d mV 5V: %d mV -
      +                          - ", adcOffset/8, adcVOffset/8, See12V(), See5V());
 10986  003372  0ECF               	movlw	low STR_38
 10987  003374  0101               	movlb	1	; () banked
 10988  003376  6F71               	movwf	printf@fmt& (0+255),b
 10989  003378  0EFC               	movlw	high STR_38
 10990  00337A  6F72               	movwf	(printf@fmt+1)& (0+255),b
 10991  00337C  0060  F7E8  F10A   	movff	_adcOffset,___awdiv@dividend
 10992  003382  0060  F7EC  F10B   	movff	_adcOffset+1,___awdiv@dividend+1
 10993  003388  0E00               	movlw	0
 10994  00338A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 10995  00338C  0E08               	movlw	8
 10996  00338E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 10997  003390  EC7D  F045         	call	___awdiv	;wreg free
 10998  003394  0060  F428  F173   	movff	?___awdiv,?_printf+2
 10999  00339A  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 11000  0033A0  0060  F7E0  F10A   	movff	_adcVOffset,___awdiv@dividend
 11001  0033A6  0060  F7E4  F10B   	movff	_adcVOffset+1,___awdiv@dividend+1
 11002  0033AC  0E00               	movlw	0
 11003  0033AE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11004  0033B0  0E08               	movlw	8
 11005  0033B2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11006  0033B4  EC7D  F045         	call	___awdiv	;wreg free
 11007  0033B8  0060  F428  F175   	movff	?___awdiv,?_printf+4
 11008  0033BE  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 11009  0033C4  EC19  F036         	call	_See12V	;wreg free
 11010  0033C8  0060  F478  F177   	movff	?_See12V,?_printf+6
 11011  0033CE  0060  F47C  F178   	movff	?_See12V+1,?_printf+7
 11012  0033D4  EC6D  F03B         	call	_See5V	;wreg free
 11013  0033D8  0060  F478  F179   	movff	?_See5V,?_printf+8
 11014  0033DE  0060  F47C  F17A   	movff	?_See5V+1,?_printf+9
 11015  0033E4  ECE6  F051         	call	_printf	;wreg free
 11016                           
 11017                           ;monitor.c: 221:             printf("Targets: Pmax: %d IP: %d EP: %d V: %d/%d\r\n", targ
      +                          etPmax/5, targetHigh/5, targetLow/5, volumeMax, volumeMin);
 11018  0033E8  0E67               	movlw	low STR_39
 11019  0033EA  0101               	movlb	1	; () banked
 11020  0033EC  6F71               	movwf	printf@fmt& (0+255),b
 11021  0033EE  0EFD               	movlw	high STR_39
 11022  0033F0  6F72               	movwf	(printf@fmt+1)& (0+255),b
 11023  0033F2  0060  F9A8  F10A   	movff	_targetPmax,___awdiv@dividend
 11024  0033F8  0060  F9AC  F10B   	movff	_targetPmax+1,___awdiv@dividend+1
 11025  0033FE  0E00               	movlw	0
 11026  003400  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11027  003402  0E05               	movlw	5
 11028  003404  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11029  003406  EC7D  F045         	call	___awdiv	;wreg free
 11030  00340A  0060  F428  F173   	movff	?___awdiv,?_printf+2
 11031  003410  0060  F42C  F174   	movff	?___awdiv+1,?_printf+3
 11032  003416  0060  F7A4  F10A   	movff	_targetHigh,___awdiv@dividend
 11033  00341C  0060  F7A8  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 11034  003422  0E00               	movlw	0
 11035  003424  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11036  003426  0E05               	movlw	5
 11037  003428  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11038  00342A  EC7D  F045         	call	___awdiv	;wreg free
 11039  00342E  0060  F428  F175   	movff	?___awdiv,?_printf+4
 11040  003434  0060  F42C  F176   	movff	?___awdiv+1,?_printf+5
 11041  00343A  0060  F79C  F10A   	movff	_targetLow,___awdiv@dividend
 11042  003440  0060  F7A0  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 11043  003446  0E00               	movlw	0
 11044  003448  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 11045  00344A  0E05               	movlw	5
 11046  00344C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 11047  00344E  EC7D  F045         	call	___awdiv	;wreg free
 11048  003452  0060  F428  F177   	movff	?___awdiv,?_printf+6
 11049  003458  0060  F42C  F178   	movff	?___awdiv+1,?_printf+7
 11050  00345E  0060  F998  F179   	movff	_volumeMax,?_printf+8
 11051  003464  0060  F99C  F17A   	movff	_volumeMax+1,?_printf+9
 11052  00346A  0060  F990  F17B   	movff	_volumeMin,?_printf+10
 11053  003470  0060  F994  F17C   	movff	_volumeMin+1,?_printf+11
 11054  003476  ECE6  F051         	call	_printf	;wreg free
 11055                           
 11056                           ; BSR set to: 2
 11057  00347A  0012               	return		;funcret
 11058  00347C                     __end_of_MonitorDump:
 11059                           	opt callstack 0
 11060                           
 11061 ;; *************** function _See5V *****************
 11062 ;; Defined at:
 11063 ;;		line 822 in file "monitor.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  mv              4   40[BANK1 ] long 
 11068 ;;  v12             2   38[BANK1 ] short 
 11069 ;;  adc             2   36[BANK1 ] unsigned short 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  2   30[BANK1 ] short 
 11072 ;; Registers used:
 11073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 3F/1
 11076 ;;		On exit  : 3F/1
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11079 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;Total ram usage:       14 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:   18
 11086 ;; This function calls:
 11087 ;;		_AdcSeeData
 11088 ;;		___aldiv
 11089 ;; This function is called by:
 11090 ;;		_main
 11091 ;;		_MonitorDump
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text56
 11096  0076DA                     __ptext56:
 11097                           	opt callstack 0
 11098  0076DA                     _See5V:
 11099                           	opt callstack 12
 11100                           
 11101                           ; BSR set to: 1
 11102                           ;monitor.c: 823:     adc_result_t adc = AdcSeeData(1);
 11103                           
 11104                           ; BSR set to: 2
 11105                           ;incstack = 0
 11106  0076DA  0E00               	movlw	0
 11107  0076DC  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11108  0076DE  0E01               	movlw	1
 11109  0076E0  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11110  0076E2  EC76  F04E         	call	_AdcSeeData	;wreg free
 11111  0076E6  0060  F428  F124   	movff	?_AdcSeeData,See5V@adc
 11112  0076EC  0060  F42C  F125   	movff	?_AdcSeeData+1,See5V@adc+1
 11113                           
 11114                           ; BSR set to: 1
 11115                           ;monitor.c: 824:     int32_t mv = adc;
 11116  0076F2  0060  F490  F128   	movff	See5V@adc,See5V@mv
 11117  0076F8  0060  F494  F129   	movff	See5V@adc+1,See5V@mv+1
 11118  0076FE  6B2A               	clrf	(See5V@mv+2)& (0+255),b
 11119  007700  6B2B               	clrf	(See5V@mv+3)& (0+255),b
 11120                           
 11121                           ; BSR set to: 1
 11122                           ;monitor.c: 825:     mv = ( mv*4096) / 4096;
 11123  007702  0060  F4A0  F120   	movff	See5V@mv,??_See5V
 11124  007708  0060  F4A4  F121   	movff	See5V@mv+1,??_See5V+1
 11125  00770E  0060  F4A8  F122   	movff	See5V@mv+2,??_See5V+2
 11126  007714  0060  F4AC  F123   	movff	See5V@mv+3,??_See5V+3
 11127  00771A  0E0C               	movlw	12
 11128  00771C                     u19785:
 11129  00771C  90D8               	bcf	status,0,c
 11130  00771E  3720               	rlcf	??_See5V& (0+255),f,b
 11131  007720  3721               	rlcf	(??_See5V+1)& (0+255),f,b
 11132  007722  3722               	rlcf	(??_See5V+2)& (0+255),f,b
 11133  007724  3723               	rlcf	(??_See5V+3)& (0+255),f,b
 11134  007726  2EE8               	decfsz	wreg,f,c
 11135  007728  D7F9               	goto	u19785
 11136  00772A  0060  F480  F110   	movff	??_See5V,___aldiv@dividend
 11137  007730  0060  F484  F111   	movff	??_See5V+1,___aldiv@dividend+1
 11138  007736  0060  F488  F112   	movff	??_See5V+2,___aldiv@dividend+2
 11139  00773C  0060  F48C  F113   	movff	??_See5V+3,___aldiv@dividend+3
 11140  007742  0E00               	movlw	0
 11141  007744  6F14               	movwf	___aldiv@divisor& (0+255),b
 11142  007746  0E10               	movlw	16
 11143  007748  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11144  00774A  0E00               	movlw	0
 11145  00774C  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11146  00774E  0E00               	movlw	0
 11147  007750  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11148  007752  EC20  F03D         	call	___aldiv	;wreg free
 11149  007756  0060  F440  F128   	movff	?___aldiv,See5V@mv
 11150  00775C  0060  F444  F129   	movff	?___aldiv+1,See5V@mv+1
 11151  007762  0060  F448  F12A   	movff	?___aldiv+2,See5V@mv+2
 11152  007768  0060  F44C  F12B   	movff	?___aldiv+3,See5V@mv+3
 11153                           
 11154                           ; BSR set to: 1
 11155                           ;monitor.c: 826:     int16_t v12 = mv/2;
 11156  00776E  0060  F4A0  F110   	movff	See5V@mv,___aldiv@dividend
 11157  007774  0060  F4A4  F111   	movff	See5V@mv+1,___aldiv@dividend+1
 11158  00777A  0060  F4A8  F112   	movff	See5V@mv+2,___aldiv@dividend+2
 11159  007780  0060  F4AC  F113   	movff	See5V@mv+3,___aldiv@dividend+3
 11160  007786  0E02               	movlw	2
 11161  007788  6F14               	movwf	___aldiv@divisor& (0+255),b
 11162  00778A  0E00               	movlw	0
 11163  00778C  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11164  00778E  0E00               	movlw	0
 11165  007790  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11166  007792  0E00               	movlw	0
 11167  007794  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11168  007796  EC20  F03D         	call	___aldiv	;wreg free
 11169  00779A  0060  F440  F126   	movff	?___aldiv,See5V@v12
 11170  0077A0  0060  F444  F127   	movff	?___aldiv+1,See5V@v12+1
 11171                           
 11172                           ; BSR set to: 1
 11173                           ;monitor.c: 827:     return v12;
 11174  0077A6  0060  F498  F11E   	movff	See5V@v12,?_See5V
 11175  0077AC  0060  F49C  F11F   	movff	See5V@v12+1,?_See5V+1
 11176                           
 11177                           ; BSR set to: 1
 11178  0077B2  0012               	return		;funcret
 11179  0077B4                     __end_of_See5V:
 11180                           	opt callstack 0
 11181                           
 11182 ;; *************** function _See12V *****************
 11183 ;; Defined at:
 11184 ;;		line 838 in file "monitor.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  mv              4   40[BANK1 ] long 
 11189 ;;  v12             2   38[BANK1 ] short 
 11190 ;;  adc             2   36[BANK1 ] unsigned short 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  2   30[BANK1 ] short 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 3F/1
 11197 ;;		On exit  : 3F/1
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11200 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;Total ram usage:       14 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:   18
 11207 ;; This function calls:
 11208 ;;		_AdcSeeData
 11209 ;;		___aldiv
 11210 ;;		___lmul
 11211 ;; This function is called by:
 11212 ;;		_main
 11213 ;;		_MonitorDump
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text57
 11218  006C32                     __ptext57:
 11219                           	opt callstack 0
 11220  006C32                     _See12V:
 11221                           	opt callstack 12
 11222                           
 11223                           ; BSR set to: 1
 11224                           ;monitor.c: 839:     adc_result_t adc = AdcSeeData(3);
 11225                           
 11226                           ; BSR set to: 1
 11227                           ;incstack = 0
 11228  006C32  0E00               	movlw	0
 11229  006C34  6F0B               	movwf	(AdcSeeData@id+1)& (0+255),b
 11230  006C36  0E03               	movlw	3
 11231  006C38  6F0A               	movwf	AdcSeeData@id& (0+255),b
 11232  006C3A  EC76  F04E         	call	_AdcSeeData	;wreg free
 11233  006C3E  0060  F428  F124   	movff	?_AdcSeeData,See12V@adc
 11234  006C44  0060  F42C  F125   	movff	?_AdcSeeData+1,See12V@adc+1
 11235                           
 11236                           ; BSR set to: 1
 11237                           ;monitor.c: 840:     int32_t mv = adc;
 11238  006C4A  0060  F490  F128   	movff	See12V@adc,See12V@mv
 11239  006C50  0060  F494  F129   	movff	See12V@adc+1,See12V@mv+1
 11240  006C56  6B2A               	clrf	(See12V@mv+2)& (0+255),b
 11241  006C58  6B2B               	clrf	(See12V@mv+3)& (0+255),b
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;monitor.c: 841:     mv = ( mv*4096) / 4096;
 11245  006C5A  0060  F4A0  F120   	movff	See12V@mv,??_See12V
 11246  006C60  0060  F4A4  F121   	movff	See12V@mv+1,??_See12V+1
 11247  006C66  0060  F4A8  F122   	movff	See12V@mv+2,??_See12V+2
 11248  006C6C  0060  F4AC  F123   	movff	See12V@mv+3,??_See12V+3
 11249  006C72  0E0C               	movlw	12
 11250  006C74                     u19775:
 11251  006C74  90D8               	bcf	status,0,c
 11252  006C76  3720               	rlcf	??_See12V& (0+255),f,b
 11253  006C78  3721               	rlcf	(??_See12V+1)& (0+255),f,b
 11254  006C7A  3722               	rlcf	(??_See12V+2)& (0+255),f,b
 11255  006C7C  3723               	rlcf	(??_See12V+3)& (0+255),f,b
 11256  006C7E  2EE8               	decfsz	wreg,f,c
 11257  006C80  D7F9               	goto	u19775
 11258  006C82  0060  F480  F110   	movff	??_See12V,___aldiv@dividend
 11259  006C88  0060  F484  F111   	movff	??_See12V+1,___aldiv@dividend+1
 11260  006C8E  0060  F488  F112   	movff	??_See12V+2,___aldiv@dividend+2
 11261  006C94  0060  F48C  F113   	movff	??_See12V+3,___aldiv@dividend+3
 11262  006C9A  0E00               	movlw	0
 11263  006C9C  6F14               	movwf	___aldiv@divisor& (0+255),b
 11264  006C9E  0E10               	movlw	16
 11265  006CA0  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11266  006CA2  0E00               	movlw	0
 11267  006CA4  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11268  006CA6  0E00               	movlw	0
 11269  006CA8  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11270  006CAA  EC20  F03D         	call	___aldiv	;wreg free
 11271  006CAE  0060  F440  F128   	movff	?___aldiv,See12V@mv
 11272  006CB4  0060  F444  F129   	movff	?___aldiv+1,See12V@mv+1
 11273  006CBA  0060  F448  F12A   	movff	?___aldiv+2,See12V@mv+2
 11274  006CC0  0060  F44C  F12B   	movff	?___aldiv+3,See12V@mv+3
 11275                           
 11276                           ; BSR set to: 1
 11277                           ;monitor.c: 842:     int16_t v12 = (mv*33)/10;
 11278  006CC6  0060  F4A0  F104   	movff	See12V@mv,___lmul@multiplier
 11279  006CCC  0060  F4A4  F105   	movff	See12V@mv+1,___lmul@multiplier+1
 11280  006CD2  0060  F4A8  F106   	movff	See12V@mv+2,___lmul@multiplier+2
 11281  006CD8  0060  F4AC  F107   	movff	See12V@mv+3,___lmul@multiplier+3
 11282  006CDE  0E21               	movlw	33
 11283  006CE0  6F08               	movwf	___lmul@multiplicand& (0+255),b
 11284  006CE2  0E00               	movlw	0
 11285  006CE4  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11286  006CE6  0E00               	movlw	0
 11287  006CE8  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11288  006CEA  0E00               	movlw	0
 11289  006CEC  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11290  006CEE  EC8F  F04A         	call	___lmul	;wreg free
 11291  006CF2  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 11292  006CF8  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 11293  006CFE  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 11294  006D04  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 11295  006D0A  0E0A               	movlw	10
 11296  006D0C  6F14               	movwf	___aldiv@divisor& (0+255),b
 11297  006D0E  0E00               	movlw	0
 11298  006D10  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 11299  006D12  0E00               	movlw	0
 11300  006D14  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 11301  006D16  0E00               	movlw	0
 11302  006D18  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 11303  006D1A  EC20  F03D         	call	___aldiv	;wreg free
 11304  006D1E  0060  F440  F126   	movff	?___aldiv,See12V@v12
 11305  006D24  0060  F444  F127   	movff	?___aldiv+1,See12V@v12+1
 11306                           
 11307                           ; BSR set to: 1
 11308                           ;monitor.c: 843:     return v12;
 11309  006D2A  0060  F498  F11E   	movff	See12V@v12,?_See12V
 11310  006D30  0060  F49C  F11F   	movff	See12V@v12+1,?_See12V+1
 11311                           
 11312                           ; BSR set to: 1
 11313  006D36  0012               	return		;funcret
 11314  006D38                     __end_of_See12V:
 11315                           	opt callstack 0
 11316                           
 11317 ;; *************** function _AdcSeeData *****************
 11318 ;; Defined at:
 11319 ;;		line 81 in file "monitor.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  id              2   10[BANK1 ] int 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  data            2   12[BANK1 ] unsigned short 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  2   10[BANK1 ] unsigned short 
 11326 ;; Registers used:
 11327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 3F/1
 11330 ;;		On exit  : 3F/1
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11333 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;Total ram usage:        4 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:   17
 11340 ;; This function calls:
 11341 ;;		___wmul
 11342 ;; This function is called by:
 11343 ;;		_SeePressure_pa
 11344 ;;		_SeePressureV_pa
 11345 ;;		_See5V
 11346 ;;		_See12V
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text58
 11351  009CEC                     __ptext58:
 11352                           	opt callstack 0
 11353  009CEC                     _AdcSeeData:
 11354                           	opt callstack 12
 11355                           
 11356                           ; BSR set to: 1
 11357                           ;monitor.c: 82:     adc_result_t data;;monitor.c: 83:     data = adcChannels[id].data;
 11358                           
 11359                           ; BSR set to: 1
 11360                           ;incstack = 0
 11361  009CEC  0060  F428  F104   	movff	AdcSeeData@id,___wmul@multiplier
 11362  009CF2  0060  F42C  F105   	movff	AdcSeeData@id+1,___wmul@multiplier+1
 11363  009CF8  0E00               	movlw	0
 11364  009CFA  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11365  009CFC  0E05               	movlw	5
 11366  009CFE  6F06               	movwf	___wmul@multiplicand& (0+255),b
 11367  009D00  EC5E  F051         	call	___wmul	;wreg free
 11368  009D04  0EBE               	movlw	low (_adcChannels+2)
 11369  009D06  2504               	addwf	?___wmul& (0+255),w,b
 11370  009D08  6ED9               	movwf	fsr2l,c
 11371  009D0A  0E02               	movlw	high (_adcChannels+2)
 11372  009D0C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 11373  009D0E  6EDA               	movwf	fsr2h,c
 11374  009D10  006F FF78  F10C    	movff	postinc2,AdcSeeData@data
 11375  009D16  006F FF74  F10D    	movff	postdec2,AdcSeeData@data+1
 11376                           
 11377                           ; BSR set to: 1
 11378                           ;monitor.c: 85:     return data;
 11379  009D1C  0060  F430  F10A   	movff	AdcSeeData@data,?_AdcSeeData
 11380  009D22  0060  F434  F10B   	movff	AdcSeeData@data+1,?_AdcSeeData+1
 11381                           
 11382                           ; BSR set to: 1
 11383  009D28  0012               	return		;funcret
 11384  009D2A                     __end_of_AdcSeeData:
 11385                           	opt callstack 0
 11386                           
 11387 ;; *************** function _MonitorDisable *****************
 11388 ;; Defined at:
 11389 ;;		line 271 in file "monitor.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;		None
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		wreg, status,2
 11398 ;; Tracked objects:
 11399 ;;		On entry : 3F/3
 11400 ;;		On exit  : 3F/2
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;Total ram usage:        0 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:   16
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_main
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           	psect	text59
 11418  00AE4E                     __ptext59:
 11419                           	opt callstack 0
 11420  00AE4E                     _MonitorDisable:
 11421                           	opt callstack 14
 11422                           
 11423                           ; BSR set to: 3
 11424                           
 11425                           ; BSR set to: 1
 11426                           ;incstack = 0
 11427  00AE4E  0E00               	movlw	0
 11428  00AE50  0102               	movlb	2	; () banked
 11429  00AE52  6FA2               	movwf	monitor@enable& (0+255),b
 11430                           
 11431                           ; BSR set to: 2
 11432  00AE54  0012               	return		;funcret
 11433  00AE56                     __end_of_MonitorDisable:
 11434                           	opt callstack 0
 11435                           
 11436 ;; *************** function _LCDOn *****************
 11437 ;; Defined at:
 11438 ;;		line 119 in file "lcd.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2
 11447 ;; Tracked objects:
 11448 ;;		On entry : 3E/2
 11449 ;;		On exit  : 3F/1
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;Total ram usage:        0 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:   16
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text60
 11467  00ADA8                     __ptext60:
 11468                           	opt callstack 0
 11469  00ADA8                     _LCDOn:
 11470                           	opt callstack 14
 11471                           
 11472                           ;lcd.c: 120:     LED = 1;
 11473                           
 11474                           ; BSR set to: 2
 11475                           ;incstack = 0
 11476  00ADA8  0E01               	movlw	1
 11477  00ADAA  0101               	movlb	1	; () banked
 11478  00ADAC  6FF4               	movwf	_LED& (0+255),b
 11479                           
 11480                           ; BSR set to: 1
 11481  00ADAE  8ABC               	bsf	188,5,c	;volatile
 11482                           
 11483                           ; BSR set to: 1
 11484  00ADB0  0012               	return		;funcret
 11485  00ADB2                     __end_of_LCDOn:
 11486                           	opt callstack 0
 11487                           
 11488 ;; *************** function _LCDOff *****************
 11489 ;; Defined at:
 11490 ;;		line 112 in file "lcd.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      void 
 11497 ;; Registers used:
 11498 ;;		wreg, status,2
 11499 ;; Tracked objects:
 11500 ;;		On entry : 3F/3
 11501 ;;		On exit  : 3F/1
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;Total ram usage:        0 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:   16
 11511 ;; This function calls:
 11512 ;;		Nothing
 11513 ;; This function is called by:
 11514 ;;		_main
 11515 ;; This function uses a non-reentrant model
 11516 ;;
 11517                           
 11518                           	psect	text61
 11519  00ADB2                     __ptext61:
 11520                           	opt callstack 0
 11521  00ADB2                     _LCDOff:
 11522                           	opt callstack 14
 11523                           
 11524                           ; BSR set to: 3
 11525                           ;lcd.c: 113:     LED = 0;
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;incstack = 0
 11529  00ADB2  0E00               	movlw	0
 11530  00ADB4  0101               	movlb	1	; () banked
 11531  00ADB6  6FF4               	movwf	_LED& (0+255),b
 11532                           
 11533                           ; BSR set to: 1
 11534  00ADB8  9ABC               	bcf	188,5,c	;volatile
 11535                           
 11536                           ; BSR set to: 1
 11537  00ADBA  0012               	return		;funcret
 11538  00ADBC                     __end_of_LCDOff:
 11539                           	opt callstack 0
 11540                           
 11541 ;; *************** function _InitDisplay *****************
 11542 ;; Defined at:
 11543 ;;		line 40 in file "display.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 3F/1
 11554 ;;		On exit  : 3F/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;Total ram usage:        0 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:   21
 11564 ;; This function calls:
 11565 ;;		_LCDInit
 11566 ;; This function is called by:
 11567 ;;		_main
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text62
 11572  00AD48                     __ptext62:
 11573                           	opt callstack 0
 11574  00AD48                     _InitDisplay:
 11575                           	opt callstack 9
 11576                           
 11577                           ; BSR set to: 1
 11578                           ;display.c: 41:     LCDInit();
 11579                           
 11580                           ; BSR set to: 1
 11581                           ;incstack = 0
 11582  00AD48  EC1B  F03A         	call	_LCDInit	;wreg free
 11583                           
 11584                           ; BSR set to: 1
 11585                           ;display.c: 42:     calibrate=0;
 11586  00AD4C  0E00               	movlw	0
 11587  00AD4E  0100               	movlb	0	; () banked
 11588  00AD50  6FFB               	movwf	_calibrate& (0+255),b
 11589                           
 11590                           ; BSR set to: 0
 11591  00AD52  0012               	return		;funcret
 11592  00AD54                     __end_of_InitDisplay:
 11593                           	opt callstack 0
 11594                           
 11595 ;; *************** function _LCDInit *****************
 11596 ;; Defined at:
 11597 ;;		line 38 in file "lcd.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;		None
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;		None
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11606 ;; Tracked objects:
 11607 ;;		On entry : 3F/1
 11608 ;;		On exit  : 3F/1
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11614 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11615 ;;Total ram usage:        2 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:   20
 11618 ;; This function calls:
 11619 ;;		_LCDMessage
 11620 ;;		_LCDTest
 11621 ;;		_LCDWrite4
 11622 ;;		_LCDWriteCmd
 11623 ;; This function is called by:
 11624 ;;		_InitDisplay
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text63
 11629  007436                     __ptext63:
 11630                           	opt callstack 0
 11631  007436                     _LCDInit:
 11632                           	opt callstack 9
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;lcd.c: 40:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;incstack = 0
 11639  007436  0E05               	movlw	5
 11640  007438  0101               	movlb	1	; () banked
 11641  00743A  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11642  00743C  0E0F               	movlw	15
 11643  00743E  6F3C               	movwf	??_LCDInit& (0+255),b
 11644  007440  0EF1               	movlw	241
 11645  007442                     u22937:
 11646  007442  2EE8               	decfsz	wreg,f,c
 11647  007444  D7FE               	bra	u22937
 11648  007446  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11649  007448  D7FC               	bra	u22937
 11650  00744A  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11651  00744C  D7FA               	bra	u22937
 11652                           
 11653                           ;lcd.c: 42:     LCDWrite4(0x30);
 11654  00744E  0E30               	movlw	48
 11655  007450  EC35  F04D         	call	_LCDWrite4
 11656                           
 11657                           ;lcd.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11658  007454  0E68               	movlw	104
 11659  007456  0101               	movlb	1	; () banked
 11660  007458  6F3C               	movwf	??_LCDInit& (0+255),b
 11661  00745A  0EE4               	movlw	228
 11662  00745C                     u22947:
 11663  00745C  2EE8               	decfsz	wreg,f,c
 11664  00745E  D7FE               	bra	u22947
 11665  007460  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11666  007462  D7FC               	bra	u22947
 11667  007464  F000               	nop	
 11668                           
 11669                           ;lcd.c: 44:     LCDWrite4(0x30);
 11670  007466  0E30               	movlw	48
 11671  007468  EC35  F04D         	call	_LCDWrite4
 11672                           
 11673                           ;lcd.c: 45:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11674  00746C  0E68               	movlw	104
 11675  00746E  0101               	movlb	1	; () banked
 11676  007470  6F3C               	movwf	??_LCDInit& (0+255),b
 11677  007472  0EE4               	movlw	228
 11678  007474                     u22957:
 11679  007474  2EE8               	decfsz	wreg,f,c
 11680  007476  D7FE               	bra	u22957
 11681  007478  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11682  00747A  D7FC               	bra	u22957
 11683  00747C  F000               	nop	
 11684                           
 11685                           ;lcd.c: 46:     LCDWrite4(0x30);
 11686  00747E  0E30               	movlw	48
 11687  007480  EC35  F04D         	call	_LCDWrite4
 11688                           
 11689                           ;lcd.c: 47:     _delay((unsigned long)((1)*(64000000/4000.0)));
 11690  007484  0E15               	movlw	21
 11691  007486  0101               	movlb	1	; () banked
 11692  007488  6F3C               	movwf	??_LCDInit& (0+255),b
 11693  00748A  0EC6               	movlw	198
 11694  00748C                     u22967:
 11695  00748C  2EE8               	decfsz	wreg,f,c
 11696  00748E  D7FE               	bra	u22967
 11697  007490  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11698  007492  D7FC               	bra	u22967
 11699  007494  F000               	nop	
 11700                           
 11701                           ;lcd.c: 48:     LCDWrite4(0x20);
 11702  007496  0E20               	movlw	32
 11703  007498  EC35  F04D         	call	_LCDWrite4
 11704                           
 11705                           ;lcd.c: 50:     LCDWriteCmd(0x28);
 11706  00749C  0E28               	movlw	40
 11707  00749E  ECC9  F043         	call	_LCDWriteCmd
 11708                           
 11709                           ;lcd.c: 51:     LCDWriteCmd(0x08);
 11710  0074A2  0E08               	movlw	8
 11711  0074A4  ECC9  F043         	call	_LCDWriteCmd
 11712                           
 11713                           ;lcd.c: 52:     LCDWriteCmd(0x01);
 11714  0074A8  0E01               	movlw	1
 11715  0074AA  ECC9  F043         	call	_LCDWriteCmd
 11716                           
 11717                           ;lcd.c: 53:     _delay((unsigned long)((2)*(64000000/4000.0)));
 11718  0074AE  0E2A               	movlw	42
 11719  0074B0  0101               	movlb	1	; () banked
 11720  0074B2  6F3C               	movwf	??_LCDInit& (0+255),b
 11721  0074B4  0E8D               	movlw	141
 11722  0074B6                     u22977:
 11723  0074B6  2EE8               	decfsz	wreg,f,c
 11724  0074B8  D7FE               	bra	u22977
 11725  0074BA  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11726  0074BC  D7FC               	bra	u22977
 11727  0074BE  D000               	nop2	
 11728                           
 11729                           ;lcd.c: 54:     LCDWriteCmd(0x06);
 11730  0074C0  0E06               	movlw	6
 11731  0074C2  ECC9  F043         	call	_LCDWriteCmd
 11732                           
 11733                           ;lcd.c: 56:     LCDWriteCmd(0x0C);
 11734  0074C6  0E0C               	movlw	12
 11735  0074C8  ECC9  F043         	call	_LCDWriteCmd
 11736                           
 11737                           ;lcd.c: 57:     LCDWriteCmd(0x02);
 11738  0074CC  0E02               	movlw	2
 11739  0074CE  ECC9  F043         	call	_LCDWriteCmd
 11740                           
 11741                           ;lcd.c: 59:     LCDMessage("Emerg Respirator");
 11742  0074D2  0EF0               	movlw	low STR_5
 11743  0074D4  0101               	movlb	1	; () banked
 11744  0074D6  6F08               	movwf	LCDMessage@str& (0+255),b
 11745  0074D8  0EFE               	movlw	high STR_5
 11746  0074DA  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11747  0074DC  EC8F  F042         	call	_LCDMessage	;wreg free
 11748                           
 11749                           ; BSR set to: 1
 11750                           ;lcd.c: 60:     LCDWriteCmd(0xC0);
 11751  0074E0  0EC0               	movlw	192
 11752  0074E2  ECC9  F043         	call	_LCDWriteCmd
 11753                           
 11754                           ;lcd.c: 61:     LCDMessage("    OxyVita     ");
 11755  0074E6  0EDF               	movlw	low STR_6
 11756  0074E8  0101               	movlb	1	; () banked
 11757  0074EA  6F08               	movwf	LCDMessage@str& (0+255),b
 11758  0074EC  0EFE               	movlw	high STR_6
 11759  0074EE  6F09               	movwf	(LCDMessage@str+1)& (0+255),b
 11760  0074F0  EC8F  F042         	call	_LCDMessage	;wreg free
 11761                           
 11762                           ; BSR set to: 1
 11763                           ;lcd.c: 62:     LCDWriteCmd(0x02);
 11764  0074F4  0E02               	movlw	2
 11765  0074F6  ECC9  F043         	call	_LCDWriteCmd
 11766                           
 11767                           ;lcd.c: 63:     _delay((unsigned long)((750)*(64000000/4000.0)));
 11768  0074FA  0E3D               	movlw	61
 11769  0074FC  0101               	movlb	1	; () banked
 11770  0074FE  6F3D               	movwf	(??_LCDInit+1)& (0+255),b
 11771  007500  0EE1               	movlw	225
 11772  007502  6F3C               	movwf	??_LCDInit& (0+255),b
 11773  007504  0E3F               	movlw	63
 11774  007506                     u22987:
 11775  007506  2EE8               	decfsz	wreg,f,c
 11776  007508  D7FE               	bra	u22987
 11777  00750A  2F3C               	decfsz	??_LCDInit& (0+255),f,b
 11778  00750C  D7FC               	bra	u22987
 11779  00750E  2F3D               	decfsz	(??_LCDInit+1)& (0+255),f,b
 11780  007510  D7FA               	bra	u22987
 11781  007512  D000               	nop2	
 11782                           
 11783                           ;lcd.c: 65:     LCDTest();
 11784  007514  ECAA  F044         	call	_LCDTest	;wreg free
 11785                           
 11786                           ; BSR set to: 1
 11787  007518  0012               	return		;funcret
 11788  00751A                     __end_of_LCDInit:
 11789                           	opt callstack 0
 11790                           
 11791 ;; *************** function _LCDWrite4 *****************
 11792 ;; Defined at:
 11793 ;;		line 196 in file "lcd.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  chr             1    wreg     unsigned char 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  chr             1    4[BANK1 ] unsigned char 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  1    wreg      void 
 11800 ;; Registers used:
 11801 ;;		wreg, status,2, cstack
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/1
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;Total ram usage:        1 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:   16
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_LCDInit
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text64
 11822  009A6A                     __ptext64:
 11823                           	opt callstack 0
 11824  009A6A                     _LCDWrite4:
 11825                           	opt callstack 12
 11826                           
 11827                           ; BSR set to: 1
 11828                           ;incstack = 0
 11829                           ;LCDWrite4@chr stored from wreg
 11830  009A6A  0101               	movlb	1	; () banked
 11831  009A6C  6F04               	movwf	LCDWrite4@chr& (0+255),b
 11832                           
 11833                           ;lcd.c: 196: void LCDWrite4(uint8_t chr);lcd.c: 197: {;lcd.c: 208:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 11834  009A6E  0101               	movlb	1	; () banked
 11835  009A70  AF04               	btfss	LCDWrite4@chr& (0+255),7,b
 11836  009A72  D002               	goto	l1708
 11837                           
 11838                           ; BSR set to: 1
 11839  009A74  8EBD               	bsf	189,7,c	;volatile
 11840  009A76  D001               	goto	l19384
 11841  009A78                     l1708:
 11842                           
 11843                           ; BSR set to: 1
 11844  009A78  9EBD               	bcf	189,7,c	;volatile
 11845  009A7A                     l19384:
 11846                           
 11847                           ; BSR set to: 1
 11848                           ;lcd.c: 209:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 11849  009A7A  AD04               	btfss	LCDWrite4@chr& (0+255),6,b
 11850  009A7C  D002               	goto	l1714
 11851                           
 11852                           ; BSR set to: 1
 11853  009A7E  8CBD               	bsf	189,6,c	;volatile
 11854  009A80  D001               	goto	l19386
 11855  009A82                     l1714:
 11856                           
 11857                           ; BSR set to: 1
 11858  009A82  9CBD               	bcf	189,6,c	;volatile
 11859  009A84                     l19386:
 11860                           
 11861                           ; BSR set to: 1
 11862                           ;lcd.c: 210:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 11863  009A84  AB04               	btfss	LCDWrite4@chr& (0+255),5,b
 11864  009A86  D002               	goto	l1720
 11865                           
 11866                           ; BSR set to: 1
 11867  009A88  8ABD               	bsf	189,5,c	;volatile
 11868  009A8A  D001               	goto	l19388
 11869  009A8C                     l1720:
 11870                           
 11871                           ; BSR set to: 1
 11872  009A8C  9ABD               	bcf	189,5,c	;volatile
 11873  009A8E                     l19388:
 11874                           
 11875                           ; BSR set to: 1
 11876                           ;lcd.c: 211:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 11877  009A8E  A904               	btfss	LCDWrite4@chr& (0+255),4,b
 11878  009A90  D002               	goto	l1726
 11879                           
 11880                           ; BSR set to: 1
 11881  009A92  88BD               	bsf	189,4,c	;volatile
 11882  009A94  D001               	goto	l1728
 11883  009A96                     l1726:
 11884                           
 11885                           ; BSR set to: 1
 11886  009A96  98BD               	bcf	189,4,c	;volatile
 11887  009A98                     l1728:
 11888                           
 11889                           ; BSR set to: 1
 11890  009A98  9CBC               	bcf	188,6,c	;volatile
 11891                           
 11892                           ; BSR set to: 1
 11893                           ;lcd.c: 214:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 11894  009A9A  0E1A               	movlw	26
 11895  009A9C                     u22997:
 11896  009A9C  2EE8               	decfsz	wreg,f,c
 11897  009A9E  D7FE               	bra	u22997
 11898  009AA0  D000               	nop2	
 11899  009AA2  8EBC               	bsf	188,7,c	;volatile
 11900                           
 11901                           ;lcd.c: 216:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 11902  009AA4  0E35               	movlw	53
 11903  009AA6                     u23007:
 11904  009AA6  2EE8               	decfsz	wreg,f,c
 11905  009AA8  D7FE               	bra	u23007
 11906  009AAA  F000               	nop	
 11907  009AAC  9EBC               	bcf	188,7,c	;volatile
 11908                           
 11909                           ;lcd.c: 218:  _delay((unsigned long)((38)*(64000000/4000000.0)));
 11910  009AAE  0ECA               	movlw	202
 11911  009AB0                     u23017:
 11912  009AB0  2EE8               	decfsz	wreg,f,c
 11913  009AB2  D7FE               	bra	u23017
 11914  009AB4  D000               	nop2	
 11915  009AB6  0012               	return		;funcret
 11916  009AB8                     __end_of_LCDWrite4:
 11917                           	opt callstack 0
 11918                           
 11919 ;; *************** function _LCDTest *****************
 11920 ;; Defined at:
 11921 ;;		line 77 in file "lcd.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  j               2   58[BANK1 ] int 
 11926 ;;  i               2   56[BANK1 ] int 
 11927 ;;  msg2           17   39[BANK1 ] unsigned char [17]
 11928 ;;  msg1           17   22[BANK1 ] unsigned char [17]
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      void 
 11931 ;; Registers used:
 11932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/1
 11935 ;;		On exit  : 3F/1
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11941 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;Total ram usage:       40 bytes
 11943 ;; Hardware stack levels used:    1
 11944 ;; Hardware stack levels required when called:   19
 11945 ;; This function calls:
 11946 ;;		_LCDMessage12
 11947 ;; This function is called by:
 11948 ;;		_LCDInit
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text65
 11953  008954                     __ptext65:
 11954                           	opt callstack 0
 11955  008954                     _LCDTest:
 11956                           	opt callstack 9
 11957                           
 11958                           ;lcd.c: 78:     char msg1[17];;lcd.c: 79:     char msg2[17];;lcd.c: 81:     for (int i=0
      +                          ; i<9; i++) {
 11959                           
 11960                           ;incstack = 0
 11961  008954  0E00               	movlw	0
 11962  008956  0101               	movlb	1	; () banked
 11963  008958  6F39               	movwf	(LCDTest@i+1)& (0+255),b
 11964  00895A  0E00               	movlw	0
 11965  00895C  6F38               	movwf	LCDTest@i& (0+255),b
 11966  00895E                     l19402:
 11967                           
 11968                           ; BSR set to: 1
 11969                           ;lcd.c: 82:         for (int j=0; j<17; j++) {
 11970  00895E  0E00               	movlw	0
 11971  008960  6F3B               	movwf	(LCDTest@j+1)& (0+255),b
 11972  008962  0E00               	movlw	0
 11973  008964  6F3A               	movwf	LCDTest@j& (0+255),b
 11974  008966                     l19408:
 11975                           
 11976                           ; BSR set to: 1
 11977                           ;lcd.c: 83:             msg1[j] = '0' + i; msg2[j] = '0' + i + 1;
 11978  008966  0E16               	movlw	low LCDTest@msg1
 11979  008968  253A               	addwf	LCDTest@j& (0+255),w,b
 11980  00896A  6ED9               	movwf	fsr2l,c
 11981  00896C  0E01               	movlw	high LCDTest@msg1
 11982  00896E  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11983  008970  6EDA               	movwf	fsr2h,c
 11984  008972  5138               	movf	LCDTest@i& (0+255),w,b
 11985  008974  0F30               	addlw	48
 11986  008976  6EDF               	movwf	indf2,c
 11987  008978  0E27               	movlw	low LCDTest@msg2
 11988  00897A  253A               	addwf	LCDTest@j& (0+255),w,b
 11989  00897C  6ED9               	movwf	fsr2l,c
 11990  00897E  0E01               	movlw	high LCDTest@msg2
 11991  008980  213B               	addwfc	(LCDTest@j+1)& (0+255),w,b
 11992  008982  6EDA               	movwf	fsr2h,c
 11993  008984  5138               	movf	LCDTest@i& (0+255),w,b
 11994  008986  0F31               	addlw	49
 11995  008988  6EDF               	movwf	indf2,c
 11996                           
 11997                           ; BSR set to: 1
 11998                           ;lcd.c: 84:         }
 11999  00898A  4B3A               	infsnz	LCDTest@j& (0+255),f,b
 12000  00898C  2B3B               	incf	(LCDTest@j+1)& (0+255),f,b
 12001                           
 12002                           ; BSR set to: 1
 12003  00898E  BF3B               	btfsc	(LCDTest@j+1)& (0+255),7,b
 12004  008990  D7EA               	goto	l19408
 12005  008992  513B               	movf	(LCDTest@j+1)& (0+255),w,b
 12006  008994  E104               	bnz	u19210
 12007  008996  0E11               	movlw	17
 12008  008998  5D3A               	subwf	LCDTest@j& (0+255),w,b
 12009  00899A  A0D8               	btfss	status,0,c
 12010  00899C  D7E4               	goto	l19408
 12011  00899E                     u19210:
 12012                           
 12013                           ; BSR set to: 1
 12014                           ;lcd.c: 85:         LCDMessage12(msg1,msg2);
 12015  00899E  0E16               	movlw	low LCDTest@msg1
 12016  0089A0  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12017  0089A2  0E01               	movlw	high LCDTest@msg1
 12018  0089A4  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12019  0089A6  0E27               	movlw	low LCDTest@msg2
 12020  0089A8  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12021  0089AA  0E01               	movlw	high LCDTest@msg2
 12022  0089AC  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12023  0089AE  EC95  F04E         	call	_LCDMessage12	;wreg free
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;lcd.c: 86:         _delay((unsigned long)((500)*(64000000/4000.0)));
 12027  0089B2  0E29               	movlw	41
 12028  0089B4  0101               	movlb	1	; () banked
 12029  0089B6  6F15               	movwf	(??_LCDTest+1)& (0+255),b
 12030  0089B8  0E96               	movlw	150
 12031  0089BA  6F14               	movwf	??_LCDTest& (0+255),b
 12032  0089BC  0E7F               	movlw	127
 12033  0089BE                     u23027:
 12034  0089BE  2EE8               	decfsz	wreg,f,c
 12035  0089C0  D7FE               	bra	u23027
 12036  0089C2  2F14               	decfsz	??_LCDTest& (0+255),f,b
 12037  0089C4  D7FC               	bra	u23027
 12038  0089C6  2F15               	decfsz	(??_LCDTest+1)& (0+255),f,b
 12039  0089C8  D7FA               	bra	u23027
 12040                           
 12041                           ;lcd.c: 87:     }
 12042  0089CA  0101               	movlb	1	; () banked
 12043  0089CC  4B38               	infsnz	LCDTest@i& (0+255),f,b
 12044  0089CE  2B39               	incf	(LCDTest@i+1)& (0+255),f,b
 12045                           
 12046                           ; BSR set to: 1
 12047  0089D0  BF39               	btfsc	(LCDTest@i+1)& (0+255),7,b
 12048  0089D2  D7C5               	goto	l19402
 12049  0089D4  5139               	movf	(LCDTest@i+1)& (0+255),w,b
 12050  0089D6  E105               	bnz	u19220
 12051  0089D8  0E09               	movlw	9
 12052  0089DA  5D38               	subwf	LCDTest@i& (0+255),w,b
 12053  0089DC  B0D8               	btfsc	status,0,c
 12054  0089DE  0012               	return	
 12055  0089E0  D7BE               	goto	l19402
 12056  0089E2                     u19220:
 12057                           
 12058                           ; BSR set to: 1
 12059  0089E2  0012               	return		;funcret
 12060  0089E4                     __end_of_LCDTest:
 12061                           	opt callstack 0
 12062                           
 12063 ;; *************** function _HistAlarm *****************
 12064 ;; Defined at:
 12065 ;;		line 465 in file "alarm.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  i               2    2[BANK2 ] int 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 3F/3
 12076 ;;		On exit  : 3C/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;Total ram usage:        4 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:   28
 12086 ;; This function calls:
 12087 ;;		_AlarmUpdateLCD
 12088 ;;		_TMR5_StartTimer
 12089 ;;		_TMR5_StopTimer
 12090 ;; This function is called by:
 12091 ;;		_main
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text66
 12096  006B28                     __ptext66:
 12097                           	opt callstack 0
 12098  006B28                     _HistAlarm:
 12099                           	opt callstack 2
 12100                           
 12101                           ; BSR set to: 3
 12102                           ;alarm.c: 466:     TMR5_StopTimer();
 12103                           
 12104                           ; BSR set to: 1
 12105                           ;incstack = 0
 12106  006B28  ECF4  F057         	call	_TMR5_StopTimer	;wreg free
 12107                           
 12108                           ; BSR set to: 3
 12109                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 12110  006B2C  0100               	movlb	0	; () banked
 12111  006B2E  51DE               	movf	_histSec& (0+255),w,b
 12112  006B30  11DF               	iorwf	(_histSec+1)& (0+255),w,b
 12113  006B32  A4D8               	btfss	status,2,c
 12114  006B34  D02E               	goto	l22114
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12118  006B36  0E00               	movlw	0
 12119  006B38  0102               	movlb	2	; () banked
 12120  006B3A  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12121  006B3C  0E00               	movlw	0
 12122  006B3E  6FF7               	movwf	HistAlarm@i& (0+255),b
 12123  006B40                     l22096:
 12124                           
 12125                           ; BSR set to: 2
 12126                           ;alarm.c: 472:             if (alarms[i]) break;
 12127  006B40  90D8               	bcf	status,0,c
 12128  006B42  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12129  006B44  6ED9               	movwf	fsr2l,c
 12130  006B46  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12131  006B48  6EDA               	movwf	fsr2h,c
 12132  006B4A  0E00               	movlw	low _alarms
 12133  006B4C  26D9               	addwf	fsr2l,f,c
 12134  006B4E  0E03               	movlw	high _alarms
 12135  006B50  22DA               	addwfc	fsr2h,f,c
 12136  006B52  50DE               	movf	postinc2,w,c
 12137  006B54  10DE               	iorwf	postinc2,w,c
 12138  006B56  A4D8               	btfss	status,2,c
 12139  006B58  D008               	goto	u21920
 12140                           
 12141                           ; BSR set to: 2
 12142                           ;alarm.c: 473:         }
 12143  006B5A  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12144  006B5C  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12145                           
 12146                           ; BSR set to: 2
 12147  006B5E  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12148  006B60  E104               	bnz	u21920
 12149  006B62  0E13               	movlw	19
 12150  006B64  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12151  006B66  A0D8               	btfss	status,0,c
 12152  006B68  D7EB               	goto	l22096
 12153  006B6A                     u21920:
 12154                           
 12155                           ; BSR set to: 2
 12156                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 12157  006B6A  0E13               	movlw	19
 12158  006B6C  19F7               	xorwf	HistAlarm@i& (0+255),w,b
 12159  006B6E  11F8               	iorwf	(HistAlarm@i+1)& (0+255),w,b
 12160  006B70  A4D8               	btfss	status,2,c
 12161  006B72  D003               	goto	l22110
 12162  006B74                     u21930:
 12163                           
 12164                           ;alarm.c: 476:             TMR5_StartTimer();
 12165  006B74  ECFA  F057         	call	_TMR5_StartTimer	;wreg free
 12166  006B78  0012               	return	
 12167  006B7A                     l22110:
 12168                           
 12169                           ; BSR set to: 2
 12170                           ;alarm.c: 479:         histSec = 5;
 12171  006B7A  0E00               	movlw	0
 12172  006B7C  0100               	movlb	0	; () banked
 12173  006B7E  6FDF               	movwf	(_histSec+1)& (0+255),b
 12174  006B80  0E05               	movlw	5
 12175  006B82  6FDE               	movwf	_histSec& (0+255),b
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;alarm.c: 480:         hist=i;
 12179  006B84  0060  FBDC  F1ED   	movff	HistAlarm@i,_hist
 12180  006B8A  0060  FBE0  F1EE   	movff	HistAlarm@i+1,_hist+1
 12181                           
 12182                           ;alarm.c: 481:     } else {
 12183  006B90  D04D               	goto	l22154
 12184  006B92                     l22114:
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 12188  006B92  0E01               	movlw	1
 12189  006B94  0101               	movlb	1	; () banked
 12190  006B96  25ED               	addwf	_hist& (0+255),w,b
 12191  006B98  0102               	movlb	2	; () banked
 12192  006B9A  6FF7               	movwf	HistAlarm@i& (0+255),b
 12193  006B9C  0E00               	movlw	0
 12194  006B9E  0101               	movlb	1	; () banked
 12195  006BA0  21EE               	addwfc	(_hist+1)& (0+255),w,b
 12196  006BA2  0102               	movlb	2	; () banked
 12197  006BA4  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12198  006BA6  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12199  006BA8  E116               	bnz	l22126
 12200  006BAA  D011               	goto	L1
 12201  006BAC                     l22118:
 12202                           
 12203                           ; BSR set to: 2
 12204                           ;alarm.c: 485:             if (alarms[i]) break;
 12205  006BAC  90D8               	bcf	status,0,c
 12206  006BAE  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12207  006BB0  6ED9               	movwf	fsr2l,c
 12208  006BB2  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12209  006BB4  6EDA               	movwf	fsr2h,c
 12210  006BB6  0E00               	movlw	low _alarms
 12211  006BB8  26D9               	addwf	fsr2l,f,c
 12212  006BBA  0E03               	movlw	high _alarms
 12213  006BBC  22DA               	addwfc	fsr2h,f,c
 12214  006BBE  50DE               	movf	postinc2,w,c
 12215  006BC0  10DE               	iorwf	postinc2,w,c
 12216  006BC2  A4D8               	btfss	status,2,c
 12217  006BC4  D008               	goto	u21960
 12218                           
 12219                           ; BSR set to: 2
 12220                           ;alarm.c: 486:         }
 12221  006BC6  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12222  006BC8  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12223                           
 12224                           ; BSR set to: 2
 12225  006BCA  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12226  006BCC  E104               	bnz	u21960
 12227  006BCE                     L1:
 12228  006BCE  0E13               	movlw	19
 12229  006BD0  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12230  006BD2  A0D8               	btfss	status,0,c
 12231  006BD4  D7EB               	goto	l22118
 12232  006BD6                     u21960:
 12233  006BD6                     l22126:
 12234                           
 12235                           ; BSR set to: 2
 12236                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 12237  006BD6  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12238  006BD8  E104               	bnz	u21970
 12239  006BDA  0E13               	movlw	19
 12240  006BDC  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12241  006BDE  A0D8               	btfss	status,0,c
 12242  006BE0  D7CC               	goto	l22110
 12243  006BE2                     u21970:
 12244                           
 12245                           ; BSR set to: 2
 12246                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 12247  006BE2  0E00               	movlw	0
 12248  006BE4  6FF8               	movwf	(HistAlarm@i+1)& (0+255),b
 12249  006BE6  0E00               	movlw	0
 12250  006BE8  6FF7               	movwf	HistAlarm@i& (0+255),b
 12251  006BEA                     l22134:
 12252                           
 12253                           ; BSR set to: 2
 12254                           ;alarm.c: 491:                 if (alarms[i]) break;
 12255  006BEA  90D8               	bcf	status,0,c
 12256  006BEC  35F7               	rlcf	HistAlarm@i& (0+255),w,b
 12257  006BEE  6ED9               	movwf	fsr2l,c
 12258  006BF0  35F8               	rlcf	(HistAlarm@i+1)& (0+255),w,b
 12259  006BF2  6EDA               	movwf	fsr2h,c
 12260  006BF4  0E00               	movlw	low _alarms
 12261  006BF6  26D9               	addwf	fsr2l,f,c
 12262  006BF8  0E03               	movlw	high _alarms
 12263  006BFA  22DA               	addwfc	fsr2h,f,c
 12264  006BFC  50DE               	movf	postinc2,w,c
 12265  006BFE  10DE               	iorwf	postinc2,w,c
 12266  006C00  A4D8               	btfss	status,2,c
 12267  006C02  D008               	goto	u21990
 12268                           
 12269                           ; BSR set to: 2
 12270                           ;alarm.c: 492:             }
 12271  006C04  4BF7               	infsnz	HistAlarm@i& (0+255),f,b
 12272  006C06  2BF8               	incf	(HistAlarm@i+1)& (0+255),f,b
 12273                           
 12274                           ; BSR set to: 2
 12275  006C08  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12276  006C0A  E104               	bnz	u21990
 12277  006C0C  0E13               	movlw	19
 12278  006C0E  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12279  006C10  A0D8               	btfss	status,0,c
 12280  006C12  D7EB               	goto	l22134
 12281  006C14                     u21990:
 12282                           
 12283                           ; BSR set to: 2
 12284                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 12285  006C14  51F8               	movf	(HistAlarm@i+1)& (0+255),w,b
 12286  006C16  E104               	bnz	u22000
 12287  006C18  0E13               	movlw	19
 12288  006C1A  5DF7               	subwf	HistAlarm@i& (0+255),w,b
 12289  006C1C  A0D8               	btfss	status,0,c
 12290  006C1E  D7AD               	goto	l22110
 12291  006C20                     u22000:
 12292                           
 12293                           ; BSR set to: 2
 12294                           ;alarm.c: 495:                 histSec = 0;
 12295  006C20  0E00               	movlw	0
 12296  006C22  0100               	movlb	0	; () banked
 12297  006C24  6FDF               	movwf	(_histSec+1)& (0+255),b
 12298  006C26  0E00               	movlw	0
 12299  006C28  6FDE               	movwf	_histSec& (0+255),b
 12300  006C2A  D7A4               	goto	u21930
 12301  006C2C                     l22154:
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;alarm.c: 505:     AlarmUpdateLCD();
 12305  006C2C  EC60  F031         	call	_AlarmUpdateLCD	;wreg free
 12306  006C30  D7A1               	goto	u21930
 12307  006C32                     __end_of_HistAlarm:
 12308                           	opt callstack 0
 12309                           
 12310 ;; *************** function _TMR5_StopTimer *****************
 12311 ;; Defined at:
 12312 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		None
 12321 ;; Tracked objects:
 12322 ;;		On entry : 3F/3
 12323 ;;		On exit  : 3F/3
 12324 ;;		Unchanged: 3E/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:   16
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_HistAlarm
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text67
 12341  00AFE8                     __ptext67:
 12342                           	opt callstack 0
 12343  00AFE8                     _TMR5_StopTimer:
 12344                           	opt callstack 13
 12345                           
 12346                           ; BSR set to: 3
 12347                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 12348                           
 12349                           ;incstack = 0
 12350  00AFE8  909A               	bcf	154,0,c	;volatile
 12351                           
 12352                           ; BSR set to: 3
 12353  00AFEA  0012               	return		;funcret
 12354  00AFEC                     __end_of_TMR5_StopTimer:
 12355                           	opt callstack 0
 12356                           
 12357 ;; *************** function _EnableAlarmSV1 *****************
 12358 ;; Defined at:
 12359 ;;		line 858 in file "monitor.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2
 12368 ;; Tracked objects:
 12369 ;;		On entry : 3F/3
 12370 ;;		On exit  : 3F/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:   16
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_main
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text68
 12388  00AE56                     __ptext68:
 12389                           	opt callstack 0
 12390  00AE56                     _EnableAlarmSV1:
 12391                           	opt callstack 14
 12392                           
 12393                           ; BSR set to: 3
 12394                           ;monitor.c: 859:     disableAlarmSV1=0;
 12395                           
 12396                           ; BSR set to: 3
 12397                           ;incstack = 0
 12398  00AE56  0E00               	movlw	0
 12399  00AE58  0100               	movlb	0	; () banked
 12400  00AE5A  6FEF               	movwf	_disableAlarmSV1& (0+255),b
 12401                           
 12402                           ; BSR set to: 0
 12403  00AE5C  0012               	return		;funcret
 12404  00AE5E                     __end_of_EnableAlarmSV1:
 12405                           	opt callstack 0
 12406                           
 12407 ;; *************** function _DumpI2C *****************
 12408 ;; Defined at:
 12409 ;;		line 232 in file "controller.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;		None
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;		None
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		None
 12418 ;; Tracked objects:
 12419 ;;		On entry : 3F/3
 12420 ;;		On exit  : 3F/3
 12421 ;;		Unchanged: 3E/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;Total ram usage:        0 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:   16
 12430 ;; This function calls:
 12431 ;;		Nothing
 12432 ;; This function is called by:
 12433 ;;		_main
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text69
 12438  00B04C                     __ptext69:
 12439                           	opt callstack 0
 12440  00B04C                     _DumpI2C:
 12441                           	opt callstack 14
 12442                           
 12443                           ; BSR set to: 3
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;incstack = 0
 12447  00B04C  0012               	return		;funcret
 12448  00B04E                     __end_of_DumpI2C:
 12449                           	opt callstack 0
 12450                           
 12451 ;; *************** function _DisplayTask *****************
 12452 ;; Defined at:
 12453 ;;		line 122 in file "display.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/2
 12464 ;;		On exit  : 3D/1
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12471 ;;Total ram usage:        0 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; Hardware stack levels required when called:   19
 12474 ;; This function calls:
 12475 ;;		_LCDMessage1
 12476 ;;		_LCDMessage12
 12477 ;;		_LCDMessage2
 12478 ;; This function is called by:
 12479 ;;		_main
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text70
 12484  0083D0                     __ptext70:
 12485                           	opt callstack 0
 12486  0083D0                     _DisplayTask:
 12487                           	opt callstack 11
 12488                           
 12489                           ;display.c: 124:     if (msg1[0] && msg2[0]) {
 12490                           
 12491                           ; BSR set to: 3
 12492                           ;incstack = 0
 12493  0083D0  0103               	movlb	3	; () banked
 12494  0083D2  51E5               	movf	_msg1& (0+255),w,b
 12495  0083D4  B4D8               	btfsc	status,2,c
 12496  0083D6  D015               	goto	l21960
 12497                           
 12498                           ; BSR set to: 3
 12499  0083D8  51D1               	movf	_msg2& (0+255),w,b
 12500  0083DA  B4D8               	btfsc	status,2,c
 12501  0083DC  D012               	goto	l21960
 12502                           
 12503                           ; BSR set to: 3
 12504                           ;display.c: 126:         LCDMessage12(msg1,msg2);
 12505  0083DE  0EE5               	movlw	low _msg1
 12506  0083E0  0101               	movlb	1	; () banked
 12507  0083E2  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12508  0083E4  0E03               	movlw	high _msg1
 12509  0083E6  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12510  0083E8  0ED1               	movlw	low _msg2
 12511  0083EA  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12512  0083EC  0E03               	movlw	high _msg2
 12513  0083EE  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12514  0083F0  EC95  F04E         	call	_LCDMessage12	;wreg free
 12515                           
 12516                           ; BSR set to: 1
 12517                           ;display.c: 127:         msg2[0]=0;
 12518  0083F4  0E00               	movlw	0
 12519  0083F6  0103               	movlb	3	; () banked
 12520  0083F8  6FD1               	movwf	_msg2& (0+255),b
 12521  0083FA                     l21956:
 12522                           
 12523                           ;display.c: 128:         msg1[0]=0;
 12524  0083FA  0E00               	movlw	0
 12525  0083FC  0103               	movlb	3	; () banked
 12526  0083FE  6FE5               	movwf	_msg1& (0+255),b
 12527  008400  0012               	return	
 12528  008402                     l21960:
 12529                           
 12530                           ; BSR set to: 3
 12531                           ;display.c: 132:     if (msg4[0]) {
 12532  008402  51A9               	movf	_msg4& (0+255),w,b
 12533  008404  B4D8               	btfsc	status,2,c
 12534  008406  D008               	goto	l21966
 12535                           
 12536                           ; BSR set to: 3
 12537                           ;display.c: 134:         LCDMessage2(msg4);
 12538  008408  0EA9               	movlw	low _msg4
 12539  00840A  0101               	movlb	1	; () banked
 12540  00840C  6F10               	movwf	LCDMessage2@str& (0+255),b
 12541  00840E  0E03               	movlw	high _msg4
 12542  008410  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12543  008412  EC23  F052         	call	_LCDMessage2	;wreg free
 12544  008416  0012               	return	
 12545  008418                     l21966:
 12546                           
 12547                           ; BSR set to: 3
 12548                           ;display.c: 138:     if (msg2[0]) {
 12549  008418  51D1               	movf	_msg2& (0+255),w,b
 12550  00841A  B4D8               	btfsc	status,2,c
 12551  00841C  D00B               	goto	l21974
 12552                           
 12553                           ; BSR set to: 3
 12554                           ;display.c: 140:         LCDMessage2(msg2);
 12555  00841E  0ED1               	movlw	low _msg2
 12556  008420  0101               	movlb	1	; () banked
 12557  008422  6F10               	movwf	LCDMessage2@str& (0+255),b
 12558  008424  0E03               	movlw	high _msg2
 12559  008426  6F11               	movwf	(LCDMessage2@str+1)& (0+255),b
 12560  008428  EC23  F052         	call	_LCDMessage2	;wreg free
 12561                           
 12562                           ; BSR set to: 1
 12563                           ;display.c: 141:         msg2[0]=0;
 12564  00842C  0E00               	movlw	0
 12565  00842E  0103               	movlb	3	; () banked
 12566  008430  6FD1               	movwf	_msg2& (0+255),b
 12567  008432  0012               	return	
 12568  008434                     l21974:
 12569                           
 12570                           ; BSR set to: 3
 12571                           ;display.c: 145:     if (msg1[0] && msg3[0]) {
 12572  008434  51E5               	movf	_msg1& (0+255),w,b
 12573  008436  B4D8               	btfsc	status,2,c
 12574  008438  D014               	goto	l21986
 12575                           
 12576                           ; BSR set to: 3
 12577  00843A  51BD               	movf	_msg3& (0+255),w,b
 12578  00843C  B4D8               	btfsc	status,2,c
 12579  00843E  D011               	goto	l21986
 12580                           
 12581                           ; BSR set to: 3
 12582                           ;display.c: 147:         LCDMessage12(msg1,msg3);
 12583  008440  0EE5               	movlw	low _msg1
 12584  008442  0101               	movlb	1	; () banked
 12585  008444  6F10               	movwf	LCDMessage12@str1& (0+255),b
 12586  008446  0E03               	movlw	high _msg1
 12587  008448  6F11               	movwf	(LCDMessage12@str1+1)& (0+255),b
 12588  00844A  0EBD               	movlw	low _msg3
 12589  00844C  6F12               	movwf	LCDMessage12@str2& (0+255),b
 12590  00844E  0E03               	movlw	high _msg3
 12591  008450  6F13               	movwf	(LCDMessage12@str2+1)& (0+255),b
 12592  008452  EC95  F04E         	call	_LCDMessage12	;wreg free
 12593                           
 12594                           ; BSR set to: 1
 12595                           ;display.c: 148:         msg1[0]=0;
 12596  008456  0E00               	movlw	0
 12597  008458  0103               	movlb	3	; () banked
 12598  00845A  6FE5               	movwf	_msg1& (0+255),b
 12599                           
 12600                           ; BSR set to: 3
 12601                           ;display.c: 149:         msg3[0]=0;
 12602  00845C  0E00               	movlw	0
 12603  00845E  6FBD               	movwf	_msg3& (0+255),b
 12604  008460  0012               	return	
 12605  008462                     l21986:
 12606                           
 12607                           ; BSR set to: 3
 12608                           ;display.c: 154:     if (msg1[0]) {
 12609  008462  51E5               	movf	_msg1& (0+255),w,b
 12610  008464  B4D8               	btfsc	status,2,c
 12611  008466  0012               	return	
 12612                           
 12613                           ; BSR set to: 3
 12614                           ;display.c: 157:         LCDMessage1(msg1);
 12615  008468  0EE5               	movlw	low _msg1
 12616  00846A  0101               	movlb	1	; () banked
 12617  00846C  6F10               	movwf	LCDMessage1@str& (0+255),b
 12618  00846E  0E03               	movlw	high _msg1
 12619  008470  6F11               	movwf	(LCDMessage1@str+1)& (0+255),b
 12620  008472  EC8D  F053         	call	_LCDMessage1	;wreg free
 12621  008476  D7C1               	goto	l21956
 12622  008478                     __end_of_DisplayTask:
 12623                           	opt callstack 0
 12624                           
 12625 ;; *************** function _LCDMessage2 *****************
 12626 ;; Defined at:
 12627 ;;		line 148 in file "lcd.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12630 ;;		 -> msg2(20), msg4(20), 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 3F/1
 12639 ;;		On exit  : 3F/1
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12642 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;Total ram usage:        2 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   18
 12649 ;; This function calls:
 12650 ;;		_LCDMessage
 12651 ;;		_LCDWriteCmd
 12652 ;; This function is called by:
 12653 ;;		_DisplayTask
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           	psect	text71
 12658  00A446                     __ptext71:
 12659                           	opt callstack 0
 12660  00A446                     _LCDMessage2:
 12661                           	opt callstack 11
 12662                           
 12663                           ; BSR set to: 1
 12664                           ;lcd.c: 149:     LCDWriteCmd(0x02);
 12665                           
 12666                           ;incstack = 0
 12667  00A446  0E02               	movlw	2
 12668  00A448  ECC9  F043         	call	_LCDWriteCmd
 12669                           
 12670                           ;lcd.c: 150:     LCDWriteCmd(0xC0);
 12671  00A44C  0EC0               	movlw	192
 12672  00A44E  ECC9  F043         	call	_LCDWriteCmd
 12673                           
 12674                           ;lcd.c: 151:     if (LED) LCDMessage(str);
 12675  00A452  0101               	movlb	1	; () banked
 12676  00A454  51F4               	movf	_LED& (0+255),w,b
 12677  00A456  B4D8               	btfsc	status,2,c
 12678  00A458  0012               	return	
 12679                           
 12680                           ; BSR set to: 1
 12681  00A45A  0060  F440  F108   	movff	LCDMessage2@str,LCDMessage@str
 12682  00A460  0060  F444  F109   	movff	LCDMessage2@str+1,LCDMessage@str+1
 12683  00A466  EC8F  F042         	call	_LCDMessage	;wreg free
 12684                           
 12685                           ; BSR set to: 1
 12686  00A46A  0012               	return		;funcret
 12687  00A46C                     __end_of_LCDMessage2:
 12688                           	opt callstack 0
 12689                           
 12690 ;; *************** function _LCDMessage12 *****************
 12691 ;; Defined at:
 12692 ;;		line 141 in file "lcd.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;  str1            2   16[BANK1 ] PTR unsigned char 
 12695 ;;		 -> msg1(20), LCDTest@msg1(17), 
 12696 ;;  str2            2   18[BANK1 ] PTR unsigned char 
 12697 ;;		 -> msg3(20), msg2(20), LCDTest@msg2(17), 
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;		None
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12704 ;; Tracked objects:
 12705 ;;		On entry : 3F/1
 12706 ;;		On exit  : 3F/1
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12709 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12712 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12713 ;;Total ram usage:        4 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; Hardware stack levels required when called:   18
 12716 ;; This function calls:
 12717 ;;		_LCDMessage
 12718 ;;		_LCDWriteCmd
 12719 ;; This function is called by:
 12720 ;;		_LCDTest
 12721 ;;		_DisplayTask
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           	psect	text72
 12726  009D2A                     __ptext72:
 12727                           	opt callstack 0
 12728  009D2A                     _LCDMessage12:
 12729                           	opt callstack 9
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;lcd.c: 142:     LCDWriteCmd(0x02);
 12733                           
 12734                           ; BSR set to: 1
 12735                           ;incstack = 0
 12736  009D2A  0E02               	movlw	2
 12737  009D2C  ECC9  F043         	call	_LCDWriteCmd
 12738                           
 12739                           ;lcd.c: 143:     if (LED) LCDMessage(str1);
 12740  009D30  0101               	movlb	1	; () banked
 12741  009D32  51F4               	movf	_LED& (0+255),w,b
 12742  009D34  B4D8               	btfsc	status,2,c
 12743  009D36  D008               	goto	l18966
 12744                           
 12745                           ; BSR set to: 1
 12746  009D38  0060  F440  F108   	movff	LCDMessage12@str1,LCDMessage@str
 12747  009D3E  0060  F444  F109   	movff	LCDMessage12@str1+1,LCDMessage@str+1
 12748  009D44  EC8F  F042         	call	_LCDMessage	;wreg free
 12749  009D48                     l18966:
 12750                           
 12751                           ; BSR set to: 1
 12752                           ;lcd.c: 144:     LCDWriteCmd(0xC0);
 12753  009D48  0EC0               	movlw	192
 12754  009D4A  ECC9  F043         	call	_LCDWriteCmd
 12755                           
 12756                           ;lcd.c: 145:     if (LED) LCDMessage(str2);
 12757  009D4E  0101               	movlb	1	; () banked
 12758  009D50  51F4               	movf	_LED& (0+255),w,b
 12759  009D52  B4D8               	btfsc	status,2,c
 12760  009D54  0012               	return	
 12761                           
 12762                           ; BSR set to: 1
 12763  009D56  0060  F448  F108   	movff	LCDMessage12@str2,LCDMessage@str
 12764  009D5C  0060  F44C  F109   	movff	LCDMessage12@str2+1,LCDMessage@str+1
 12765  009D62  EC8F  F042         	call	_LCDMessage	;wreg free
 12766                           
 12767                           ; BSR set to: 1
 12768  009D66  0012               	return		;funcret
 12769  009D68                     __end_of_LCDMessage12:
 12770                           	opt callstack 0
 12771                           
 12772 ;; *************** function _LCDMessage1 *****************
 12773 ;; Defined at:
 12774 ;;		line 136 in file "lcd.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  str             2   16[BANK1 ] PTR unsigned char 
 12777 ;;		 -> msg1(20), 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;		None
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  1    wreg      void 
 12782 ;; Registers used:
 12783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12784 ;; Tracked objects:
 12785 ;;		On entry : 3F/1
 12786 ;;		On exit  : 3F/1
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12789 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12792 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12793 ;;Total ram usage:        2 bytes
 12794 ;; Hardware stack levels used:    1
 12795 ;; Hardware stack levels required when called:   18
 12796 ;; This function calls:
 12797 ;;		_LCDMessage
 12798 ;;		_LCDWriteCmd
 12799 ;; This function is called by:
 12800 ;;		_DisplayTask
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	text73
 12805  00A71A                     __ptext73:
 12806                           	opt callstack 0
 12807  00A71A                     _LCDMessage1:
 12808                           	opt callstack 11
 12809                           
 12810                           ; BSR set to: 1
 12811                           ;lcd.c: 137:     LCDWriteCmd(0x02);
 12812                           
 12813                           ; BSR set to: 1
 12814                           ;incstack = 0
 12815  00A71A  0E02               	movlw	2
 12816  00A71C  ECC9  F043         	call	_LCDWriteCmd
 12817                           
 12818                           ;lcd.c: 138:     if (LED) LCDMessage(str);
 12819  00A720  0101               	movlb	1	; () banked
 12820  00A722  51F4               	movf	_LED& (0+255),w,b
 12821  00A724  B4D8               	btfsc	status,2,c
 12822  00A726  0012               	return	
 12823                           
 12824                           ; BSR set to: 1
 12825  00A728  0060  F440  F108   	movff	LCDMessage1@str,LCDMessage@str
 12826  00A72E  0060  F444  F109   	movff	LCDMessage1@str+1,LCDMessage@str+1
 12827  00A734  EC8F  F042         	call	_LCDMessage	;wreg free
 12828                           
 12829                           ; BSR set to: 1
 12830  00A738  0012               	return		;funcret
 12831  00A73A                     __end_of_LCDMessage1:
 12832                           	opt callstack 0
 12833                           
 12834 ;; *************** function _LCDWriteCmd *****************
 12835 ;; Defined at:
 12836 ;;		line 222 in file "lcd.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  data            1    wreg     unsigned char 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  data            1    4[BANK1 ] unsigned char 
 12841 ;; Return value:  Size  Location     Type
 12842 ;;                  1    wreg      void 
 12843 ;; Registers used:
 12844 ;;		wreg, status,2, cstack
 12845 ;; Tracked objects:
 12846 ;;		On entry : 0/1
 12847 ;;		On exit  : 0/0
 12848 ;;		Unchanged: 0/0
 12849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12851 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;Total ram usage:        1 bytes
 12855 ;; Hardware stack levels used:    1
 12856 ;; Hardware stack levels required when called:   16
 12857 ;; This function calls:
 12858 ;;		Nothing
 12859 ;; This function is called by:
 12860 ;;		_LCDInit
 12861 ;;		_LCDMessage1
 12862 ;;		_LCDMessage12
 12863 ;;		_LCDMessage2
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           	psect	text74
 12868  008792                     __ptext74:
 12869                           	opt callstack 0
 12870  008792                     _LCDWriteCmd:
 12871                           	opt callstack 12
 12872                           
 12873                           ; BSR set to: 1
 12874                           ;incstack = 0
 12875                           ;LCDWriteCmd@data stored from wreg
 12876  008792  0101               	movlb	1	; () banked
 12877  008794  6F04               	movwf	LCDWriteCmd@data& (0+255),b
 12878                           
 12879                           ;lcd.c: 222: void LCDWriteCmd(uint8_t data);lcd.c: 223: {;lcd.c: 239:  if (data&0x80) do
      +                           { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 12880  008796  0101               	movlb	1	; () banked
 12881  008798  AF04               	btfss	LCDWriteCmd@data& (0+255),7,b
 12882  00879A  D002               	goto	l1741
 12883                           
 12884                           ; BSR set to: 1
 12885  00879C  8EBD               	bsf	189,7,c	;volatile
 12886  00879E  D001               	goto	l18608
 12887  0087A0                     l1741:
 12888                           
 12889                           ; BSR set to: 1
 12890  0087A0  9EBD               	bcf	189,7,c	;volatile
 12891  0087A2                     l18608:
 12892                           
 12893                           ; BSR set to: 1
 12894                           ;lcd.c: 240:     if (data&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.
      +                          LATD6 = 0; } while(0);
 12895  0087A2  AD04               	btfss	LCDWriteCmd@data& (0+255),6,b
 12896  0087A4  D002               	goto	l1747
 12897                           
 12898                           ; BSR set to: 1
 12899  0087A6  8CBD               	bsf	189,6,c	;volatile
 12900  0087A8  D001               	goto	l18610
 12901  0087AA                     l1747:
 12902                           
 12903                           ; BSR set to: 1
 12904  0087AA  9CBD               	bcf	189,6,c	;volatile
 12905  0087AC                     l18610:
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;lcd.c: 241:     if (data&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.
      +                          LATD5 = 0; } while(0);
 12909  0087AC  AB04               	btfss	LCDWriteCmd@data& (0+255),5,b
 12910  0087AE  D002               	goto	l1753
 12911                           
 12912                           ; BSR set to: 1
 12913  0087B0  8ABD               	bsf	189,5,c	;volatile
 12914  0087B2  D001               	goto	l18612
 12915  0087B4                     l1753:
 12916                           
 12917                           ; BSR set to: 1
 12918  0087B4  9ABD               	bcf	189,5,c	;volatile
 12919  0087B6                     l18612:
 12920                           
 12921                           ; BSR set to: 1
 12922                           ;lcd.c: 242:     if (data&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.
      +                          LATD4 = 0; } while(0);
 12923  0087B6  A904               	btfss	LCDWriteCmd@data& (0+255),4,b
 12924  0087B8  D002               	goto	l1759
 12925                           
 12926                           ; BSR set to: 1
 12927  0087BA  88BD               	bsf	189,4,c	;volatile
 12928  0087BC  D001               	goto	l1761
 12929  0087BE                     l1759:
 12930                           
 12931                           ; BSR set to: 1
 12932  0087BE  98BD               	bcf	189,4,c	;volatile
 12933  0087C0                     l1761:
 12934                           
 12935                           ; BSR set to: 1
 12936  0087C0  9CBC               	bcf	188,6,c	;volatile
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;lcd.c: 245:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 12940  0087C2  0E1A               	movlw	26
 12941  0087C4                     u23037:
 12942  0087C4  2EE8               	decfsz	wreg,f,c
 12943  0087C6  D7FE               	bra	u23037
 12944  0087C8  D000               	nop2	
 12945  0087CA  8EBC               	bsf	188,7,c	;volatile
 12946                           
 12947                           ;lcd.c: 247:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 12948  0087CC  0E35               	movlw	53
 12949  0087CE                     u23047:
 12950  0087CE  2EE8               	decfsz	wreg,f,c
 12951  0087D0  D7FE               	bra	u23047
 12952  0087D2  F000               	nop	
 12953  0087D4  9EBC               	bcf	188,7,c	;volatile
 12954                           
 12955                           ;lcd.c: 249:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 12956  0087D6  0E1A               	movlw	26
 12957  0087D8                     u23057:
 12958  0087D8  2EE8               	decfsz	wreg,f,c
 12959  0087DA  D7FE               	bra	u23057
 12960  0087DC  D000               	nop2	
 12961                           
 12962                           ;lcd.c: 250:     if (data&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.L
      +                          ATD7 = 0; } while(0);
 12963  0087DE  0101               	movlb	1	; () banked
 12964  0087E0  A704               	btfss	LCDWriteCmd@data& (0+255),3,b
 12965  0087E2  D002               	goto	l1771
 12966                           
 12967                           ; BSR set to: 1
 12968  0087E4  8EBD               	bsf	189,7,c	;volatile
 12969  0087E6  D001               	goto	l18622
 12970  0087E8                     l1771:
 12971                           
 12972                           ; BSR set to: 1
 12973  0087E8  9EBD               	bcf	189,7,c	;volatile
 12974  0087EA                     l18622:
 12975                           
 12976                           ; BSR set to: 1
 12977                           ;lcd.c: 251:     if (data&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 12978  0087EA  A504               	btfss	LCDWriteCmd@data& (0+255),2,b
 12979  0087EC  D002               	goto	l1777
 12980                           
 12981                           ; BSR set to: 1
 12982  0087EE  8CBD               	bsf	189,6,c	;volatile
 12983  0087F0  D001               	goto	l18624
 12984  0087F2                     l1777:
 12985                           
 12986                           ; BSR set to: 1
 12987  0087F2  9CBD               	bcf	189,6,c	;volatile
 12988  0087F4                     l18624:
 12989                           
 12990                           ; BSR set to: 1
 12991                           ;lcd.c: 252:     if (data&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 12992  0087F4  A304               	btfss	LCDWriteCmd@data& (0+255),1,b
 12993  0087F6  D002               	goto	l1783
 12994                           
 12995                           ; BSR set to: 1
 12996  0087F8  8ABD               	bsf	189,5,c	;volatile
 12997  0087FA  D001               	goto	l18626
 12998  0087FC                     l1783:
 12999                           
 13000                           ; BSR set to: 1
 13001  0087FC  9ABD               	bcf	189,5,c	;volatile
 13002  0087FE                     l18626:
 13003                           
 13004                           ; BSR set to: 1
 13005                           ;lcd.c: 253:     if (data&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 13006  0087FE  A104               	btfss	LCDWriteCmd@data& (0+255),0,b
 13007  008800  D002               	goto	l1789
 13008                           
 13009                           ; BSR set to: 1
 13010  008802  88BD               	bsf	189,4,c	;volatile
 13011  008804  D001               	goto	l1791
 13012  008806                     l1789:
 13013                           
 13014                           ; BSR set to: 1
 13015  008806  98BD               	bcf	189,4,c	;volatile
 13016  008808                     l1791:
 13017                           
 13018                           ; BSR set to: 1
 13019  008808  9CBC               	bcf	188,6,c	;volatile
 13020                           
 13021                           ; BSR set to: 1
 13022                           ;lcd.c: 256:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13023  00880A  0E1A               	movlw	26
 13024  00880C                     u23067:
 13025  00880C  2EE8               	decfsz	wreg,f,c
 13026  00880E  D7FE               	bra	u23067
 13027  008810  D000               	nop2	
 13028  008812  8EBC               	bsf	188,7,c	;volatile
 13029                           
 13030                           ;lcd.c: 258:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13031  008814  0E35               	movlw	53
 13032  008816                     u23077:
 13033  008816  2EE8               	decfsz	wreg,f,c
 13034  008818  D7FE               	bra	u23077
 13035  00881A  F000               	nop	
 13036  00881C  9EBC               	bcf	188,7,c	;volatile
 13037                           
 13038                           ;lcd.c: 260:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 13039  00881E  0ECA               	movlw	202
 13040  008820                     u23087:
 13041  008820  2EE8               	decfsz	wreg,f,c
 13042  008822  D7FE               	bra	u23087
 13043  008824  D000               	nop2	
 13044  008826  0012               	return		;funcret
 13045  008828                     __end_of_LCDWriteCmd:
 13046                           	opt callstack 0
 13047                           
 13048 ;; *************** function _LCDMessage *****************
 13049 ;; Defined at:
 13050 ;;		line 125 in file "lcd.c"
 13051 ;; Parameters:    Size  Location     Type
 13052 ;;  str             2    8[BANK1 ] PTR unsigned char 
 13053 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 13054 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  i               2   14[BANK1 ] int 
 13057 ;;  length          2   12[BANK1 ] int 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 3F/1
 13064 ;;		On exit  : 3F/1
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;Total ram usage:        8 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:   17
 13074 ;; This function calls:
 13075 ;;		_LCDWriteChar
 13076 ;;		_strlen
 13077 ;; This function is called by:
 13078 ;;		_LCDInit
 13079 ;;		_LCDMessage1
 13080 ;;		_LCDMessage12
 13081 ;;		_LCDMessage2
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text75
 13086  00851E                     __ptext75:
 13087                           	opt callstack 0
 13088  00851E                     _LCDMessage:
 13089                           	opt callstack 9
 13090                           
 13091                           ; BSR set to: 1
 13092                           ;lcd.c: 127:     int length = (strlen(str))>(16)?(16):(strlen(str));
 13093                           
 13094                           ;incstack = 0
 13095  00851E  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13096  008524  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13097  00852A  ECC5  F04B         	call	_strlen	;wreg free
 13098  00852E  5105               	movf	(?_strlen+1)& (0+255),w,b
 13099  008530  E113               	bnz	l18638
 13100  008532  0E11               	movlw	17
 13101  008534  5D04               	subwf	?_strlen& (0+255),w,b
 13102  008536  B0D8               	btfsc	status,0,c
 13103  008538  D00F               	goto	l18638
 13104                           
 13105                           ; BSR set to: 1
 13106  00853A  0060  F420  F104   	movff	LCDMessage@str,strlen@s
 13107  008540  0060  F424  F105   	movff	LCDMessage@str+1,strlen@s+1
 13108  008546  ECC5  F04B         	call	_strlen	;wreg free
 13109  00854A  0060  F410  F10C   	movff	?_strlen,LCDMessage@length
 13110  008550  0060  F414  F10D   	movff	?_strlen+1,LCDMessage@length+1
 13111  008556  D004               	goto	l1621
 13112  008558                     l18638:
 13113                           
 13114                           ; BSR set to: 1
 13115  008558  0E00               	movlw	0
 13116  00855A  6F0D               	movwf	(LCDMessage@length+1)& (0+255),b
 13117  00855C  0E10               	movlw	16
 13118  00855E  6F0C               	movwf	LCDMessage@length& (0+255),b
 13119  008560                     l1621:
 13120                           
 13121                           ; BSR set to: 1
 13122                           ;lcd.c: 129:     for (int i= 0; i<length; i++) {
 13123  008560  0E00               	movlw	0
 13124  008562  6F0F               	movwf	(LCDMessage@i+1)& (0+255),b
 13125  008564  0E00               	movlw	0
 13126  008566  6F0E               	movwf	LCDMessage@i& (0+255),b
 13127  008568  D020               	goto	l18644
 13128  00856A                     l18640:
 13129                           
 13130                           ; BSR set to: 1
 13131                           ;lcd.c: 130:         LCDWriteChar(str[i]);
 13132  00856A  510E               	movf	LCDMessage@i& (0+255),w,b
 13133  00856C  2508               	addwf	LCDMessage@str& (0+255),w,b
 13134  00856E  6F0A               	movwf	??_LCDMessage& (0+255),b
 13135  008570  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13136  008572  2109               	addwfc	(LCDMessage@str+1)& (0+255),w,b
 13137  008574  6F0B               	movwf	(??_LCDMessage+1)& (0+255),b
 13138  008576  0060  F42B  FFF6   	movff	??_LCDMessage,tblptrl
 13139  00857C  0060  F42F  FFF7   	movff	??_LCDMessage+1,tblptrh
 13140  008582  0E00               	movlw	low (__mediumconst shr (0+16))
 13141  008584  6EF8               	movwf	tblptru,c
 13142  008586  0E0F               	movlw	(high __ramtop+-1)
 13143  008588  64F7               	cpfsgt	tblptrh,c
 13144  00858A  D003               	bra	u18347
 13145  00858C  0008               	tblrd		*
 13146  00858E  50F5               	movf	tablat,w,c
 13147  008590  D007               	bra	u18340
 13148  008592                     u18347:
 13149  008592  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13150  008598  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13151  00859E  50E7               	movf	indf1,w,c
 13152  0085A0                     u18340:
 13153  0085A0  EC14  F044         	call	_LCDWriteChar
 13154                           
 13155                           ;lcd.c: 131:     }
 13156  0085A4  0101               	movlb	1	; () banked
 13157  0085A6  4B0E               	infsnz	LCDMessage@i& (0+255),f,b
 13158  0085A8  2B0F               	incf	(LCDMessage@i+1)& (0+255),f,b
 13159  0085AA                     l18644:
 13160                           
 13161                           ; BSR set to: 1
 13162  0085AA  510C               	movf	LCDMessage@length& (0+255),w,b
 13163  0085AC  5D0E               	subwf	LCDMessage@i& (0+255),w,b
 13164  0085AE  510F               	movf	(LCDMessage@i+1)& (0+255),w,b
 13165  0085B0  0A80               	xorlw	128
 13166  0085B2  6F0A               	movwf	??_LCDMessage& (0+255),b
 13167  0085B4  510D               	movf	(LCDMessage@length+1)& (0+255),w,b
 13168  0085B6  0A80               	xorlw	128
 13169  0085B8  590A               	subwfb	??_LCDMessage& (0+255),w,b
 13170  0085BA  B0D8               	btfsc	status,0,c
 13171  0085BC  0012               	return	
 13172  0085BE  D7D5               	goto	l18640
 13173  0085C0                     __end_of_LCDMessage:
 13174                           	opt callstack 0
 13175                           
 13176 ;; *************** function _LCDWriteChar *****************
 13177 ;; Defined at:
 13178 ;;		line 154 in file "lcd.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  chr             1    wreg     unsigned char 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  chr             1    4[BANK1 ] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, status,2, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/1
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13193 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13195 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;Total ram usage:        1 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:   16
 13199 ;; This function calls:
 13200 ;;		Nothing
 13201 ;; This function is called by:
 13202 ;;		_LCDMessage
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text76
 13207  008828                     __ptext76:
 13208                           	opt callstack 0
 13209  008828                     _LCDWriteChar:
 13210                           	opt callstack 9
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;incstack = 0
 13214                           ;LCDWriteChar@chr stored from wreg
 13215  008828  0101               	movlb	1	; () banked
 13216  00882A  6F04               	movwf	LCDWriteChar@chr& (0+255),b
 13217                           
 13218                           ;lcd.c: 154: void LCDWriteChar(char chr);lcd.c: 155: {;lcd.c: 171:     if (chr&0x80) do 
      +                          { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LATD7 = 0; } while(0);
 13219  00882C  0101               	movlb	1	; () banked
 13220  00882E  AF04               	btfss	LCDWriteChar@chr& (0+255),7,b
 13221  008830  D002               	goto	l1645
 13222                           
 13223                           ; BSR set to: 1
 13224  008832  8EBD               	bsf	189,7,c	;volatile
 13225  008834  D001               	goto	l18312
 13226  008836                     l1645:
 13227                           
 13228                           ; BSR set to: 1
 13229  008836  9EBD               	bcf	189,7,c	;volatile
 13230  008838                     l18312:
 13231                           
 13232                           ; BSR set to: 1
 13233                           ;lcd.c: 172:     if (chr&0x40) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.L
      +                          ATD6 = 0; } while(0);
 13234  008838  AD04               	btfss	LCDWriteChar@chr& (0+255),6,b
 13235  00883A  D002               	goto	l1651
 13236                           
 13237                           ; BSR set to: 1
 13238  00883C  8CBD               	bsf	189,6,c	;volatile
 13239  00883E  D001               	goto	l18314
 13240  008840                     l1651:
 13241                           
 13242                           ; BSR set to: 1
 13243  008840  9CBD               	bcf	189,6,c	;volatile
 13244  008842                     l18314:
 13245                           
 13246                           ; BSR set to: 1
 13247                           ;lcd.c: 173:     if (chr&0x20) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.L
      +                          ATD5 = 0; } while(0);
 13248  008842  AB04               	btfss	LCDWriteChar@chr& (0+255),5,b
 13249  008844  D002               	goto	l1657
 13250                           
 13251                           ; BSR set to: 1
 13252  008846  8ABD               	bsf	189,5,c	;volatile
 13253  008848  D001               	goto	l18316
 13254  00884A                     l1657:
 13255                           
 13256                           ; BSR set to: 1
 13257  00884A  9ABD               	bcf	189,5,c	;volatile
 13258  00884C                     l18316:
 13259                           
 13260                           ; BSR set to: 1
 13261                           ;lcd.c: 174:     if (chr&0x10) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.L
      +                          ATD4 = 0; } while(0);
 13262  00884C  A904               	btfss	LCDWriteChar@chr& (0+255),4,b
 13263  00884E  D002               	goto	l1663
 13264                           
 13265                           ; BSR set to: 1
 13266  008850  88BD               	bsf	189,4,c	;volatile
 13267  008852  D001               	goto	l1665
 13268  008854                     l1663:
 13269                           
 13270                           ; BSR set to: 1
 13271  008854  98BD               	bcf	189,4,c	;volatile
 13272  008856                     l1665:
 13273                           
 13274                           ; BSR set to: 1
 13275  008856  8CBC               	bsf	188,6,c	;volatile
 13276                           
 13277                           ; BSR set to: 1
 13278                           ;lcd.c: 177:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13279  008858  0E1A               	movlw	26
 13280  00885A                     u23097:
 13281  00885A  2EE8               	decfsz	wreg,f,c
 13282  00885C  D7FE               	bra	u23097
 13283  00885E  D000               	nop2	
 13284  008860  8EBC               	bsf	188,7,c	;volatile
 13285                           
 13286                           ;lcd.c: 179:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13287  008862  0E35               	movlw	53
 13288  008864                     u23107:
 13289  008864  2EE8               	decfsz	wreg,f,c
 13290  008866  D7FE               	bra	u23107
 13291  008868  F000               	nop	
 13292  00886A  9EBC               	bcf	188,7,c	;volatile
 13293                           
 13294                           ;lcd.c: 181:  _delay((unsigned long)((5)*(64000000/4000000.0)));
 13295  00886C  0E1A               	movlw	26
 13296  00886E                     u23117:
 13297  00886E  2EE8               	decfsz	wreg,f,c
 13298  008870  D7FE               	bra	u23117
 13299  008872  D000               	nop2	
 13300                           
 13301                           ;lcd.c: 182:     if (chr&0x8) do { LATDbits.LATD7 = 1; } while(0); else do { LATDbits.LA
      +                          TD7 = 0; } while(0);
 13302  008874  0101               	movlb	1	; () banked
 13303  008876  A704               	btfss	LCDWriteChar@chr& (0+255),3,b
 13304  008878  D002               	goto	l1675
 13305                           
 13306                           ; BSR set to: 1
 13307  00887A  8EBD               	bsf	189,7,c	;volatile
 13308  00887C  D001               	goto	l18326
 13309  00887E                     l1675:
 13310                           
 13311                           ; BSR set to: 1
 13312  00887E  9EBD               	bcf	189,7,c	;volatile
 13313  008880                     l18326:
 13314                           
 13315                           ; BSR set to: 1
 13316                           ;lcd.c: 183:     if (chr&0x4) do { LATDbits.LATD6 = 1; } while(0); else do { LATDbits.LA
      +                          TD6 = 0; } while(0);
 13317  008880  A504               	btfss	LCDWriteChar@chr& (0+255),2,b
 13318  008882  D002               	goto	l1681
 13319                           
 13320                           ; BSR set to: 1
 13321  008884  8CBD               	bsf	189,6,c	;volatile
 13322  008886  D001               	goto	l18328
 13323  008888                     l1681:
 13324                           
 13325                           ; BSR set to: 1
 13326  008888  9CBD               	bcf	189,6,c	;volatile
 13327  00888A                     l18328:
 13328                           
 13329                           ; BSR set to: 1
 13330                           ;lcd.c: 184:     if (chr&0x2) do { LATDbits.LATD5 = 1; } while(0); else do { LATDbits.LA
      +                          TD5 = 0; } while(0);
 13331  00888A  A304               	btfss	LCDWriteChar@chr& (0+255),1,b
 13332  00888C  D002               	goto	l1687
 13333                           
 13334                           ; BSR set to: 1
 13335  00888E  8ABD               	bsf	189,5,c	;volatile
 13336  008890  D001               	goto	l18330
 13337  008892                     l1687:
 13338                           
 13339                           ; BSR set to: 1
 13340  008892  9ABD               	bcf	189,5,c	;volatile
 13341  008894                     l18330:
 13342                           
 13343                           ; BSR set to: 1
 13344                           ;lcd.c: 185:     if (chr&0x1) do { LATDbits.LATD4 = 1; } while(0); else do { LATDbits.LA
      +                          TD4 = 0; } while(0);
 13345  008894  A104               	btfss	LCDWriteChar@chr& (0+255),0,b
 13346  008896  D002               	goto	l1693
 13347                           
 13348                           ; BSR set to: 1
 13349  008898  88BD               	bsf	189,4,c	;volatile
 13350  00889A  D001               	goto	l1695
 13351  00889C                     l1693:
 13352                           
 13353                           ; BSR set to: 1
 13354  00889C  98BD               	bcf	189,4,c	;volatile
 13355  00889E                     l1695:
 13356                           
 13357                           ; BSR set to: 1
 13358  00889E  8CBC               	bsf	188,6,c	;volatile
 13359                           
 13360                           ; BSR set to: 1
 13361                           ;lcd.c: 188:     _delay((unsigned long)((5)*(64000000/4000000.0)));
 13362  0088A0  0E1A               	movlw	26
 13363  0088A2                     u23127:
 13364  0088A2  2EE8               	decfsz	wreg,f,c
 13365  0088A4  D7FE               	bra	u23127
 13366  0088A6  D000               	nop2	
 13367  0088A8  8EBC               	bsf	188,7,c	;volatile
 13368                           
 13369                           ;lcd.c: 190:  _delay((unsigned long)((10)*(64000000/4000000.0)));
 13370  0088AA  0E35               	movlw	53
 13371  0088AC                     u23137:
 13372  0088AC  2EE8               	decfsz	wreg,f,c
 13373  0088AE  D7FE               	bra	u23137
 13374  0088B0  F000               	nop	
 13375  0088B2  9EBC               	bcf	188,7,c	;volatile
 13376                           
 13377                           ;lcd.c: 192:     _delay((unsigned long)((38)*(64000000/4000000.0)));
 13378  0088B4  0ECA               	movlw	202
 13379  0088B6                     u23147:
 13380  0088B6  2EE8               	decfsz	wreg,f,c
 13381  0088B8  D7FE               	bra	u23147
 13382  0088BA  D000               	nop2	
 13383  0088BC  0012               	return		;funcret
 13384  0088BE                     __end_of_LCDWriteChar:
 13385                           	opt callstack 0
 13386                           
 13387 ;; *************** function _DisableAlarmSV1 *****************
 13388 ;; Defined at:
 13389 ;;		line 854 in file "monitor.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;		None
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      void 
 13396 ;; Registers used:
 13397 ;;		wreg, status,2
 13398 ;; Tracked objects:
 13399 ;;		On entry : 3F/3
 13400 ;;		On exit  : 3F/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;Total ram usage:        0 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:   16
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_main
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           	psect	text77
 13418  00AE5E                     __ptext77:
 13419                           	opt callstack 0
 13420  00AE5E                     _DisableAlarmSV1:
 13421                           	opt callstack 14
 13422                           
 13423                           ; BSR set to: 3
 13424                           ;monitor.c: 855:     disableAlarmSV1=1;
 13425                           
 13426                           ;incstack = 0
 13427  00AE5E  0E01               	movlw	1
 13428  00AE60  0100               	movlb	0	; () banked
 13429  00AE62  6FEF               	movwf	_disableAlarmSV1& (0+255),b
 13430                           
 13431                           ; BSR set to: 0
 13432  00AE64  0012               	return		;funcret
 13433  00AE66                     __end_of_DisableAlarmSV1:
 13434                           	opt callstack 0
 13435                           
 13436 ;; *************** function _ControllerInit *****************
 13437 ;; Defined at:
 13438 ;;		line 214 in file "controller.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;		None
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;		None
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      void 
 13445 ;; Registers used:
 13446 ;;		wreg, status,2, status,0, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 3C/0
 13449 ;;		On exit  : 3F/1
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13456 ;;Total ram usage:        0 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:   18
 13459 ;; This function calls:
 13460 ;;		_I2C2_Open
 13461 ;;		_I2C2_SlaveSetReadIntHandler
 13462 ;;		_I2C2_SlaveSetStopIntHandler
 13463 ;;		_TMR6_SetInterruptHandler
 13464 ;;		_TMR6_StartTimer
 13465 ;; This function is called by:
 13466 ;;		_main
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text78
 13471  009CAC                     __ptext78:
 13472                           	opt callstack 0
 13473  009CAC                     _ControllerInit:
 13474                           	opt callstack 12
 13475                           
 13476                           ;controller.c: 216:     commandReceived = 0;
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;incstack = 0
 13480  009CAC  0E00               	movlw	0
 13481  009CAE  0102               	movlb	2	; () banked
 13482  009CB0  6F9B               	movwf	_commandReceived& (0+255),b
 13483                           
 13484                           ;controller.c: 217:     init = 0;
 13485  009CB2  0E00               	movlw	0
 13486  009CB4  6F9A               	movwf	_init& (0+255),b
 13487                           
 13488                           ;controller.c: 218:     run = 0;
 13489  009CB6  0E00               	movlw	0
 13490  009CB8  0100               	movlb	0	; () banked
 13491  009CBA  6FEC               	movwf	_run& (0+255),b
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;controller.c: 221:     I2C2_Open();
 13495  009CBC  EC62  F049         	call	_I2C2_Open	;wreg free
 13496                           
 13497                           ; BSR set to: 61
 13498                           ;controller.c: 225:     I2C2_SlaveSetReadIntHandler( ReceiveHandler);
 13499  009CC0  0E06               	movlw	low _ReceiveHandler
 13500  009CC2  0101               	movlb	1	; () banked
 13501  009CC4  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13502  009CC6  0E9B               	movlw	high _ReceiveHandler
 13503  009CC8  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13504  009CCA  ECFC  F055         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13505                           
 13506                           ; BSR set to: 1
 13507                           ;controller.c: 227:     I2C2_SlaveSetStopIntHandler( StopHandler);
 13508  009CCE  0EDE               	movlw	low _StopHandler
 13509  009CD0  6F04               	movwf	I2C2_SlaveSetStopIntHandler@handler& (0+255),b
 13510  009CD2  0E96               	movlw	high _StopHandler
 13511  009CD4  6F05               	movwf	(I2C2_SlaveSetStopIntHandler@handler+1)& (0+255),b
 13512  009CD6  ECE7  F055         	call	_I2C2_SlaveSetStopIntHandler	;wreg free
 13513                           
 13514                           ; BSR set to: 1
 13515                           ;controller.c: 228:     TMR6_SetInterruptHandler(ControllerTimerHandler);
 13516  009CDA  0E0A               	movlw	low _ControllerTimerHandler
 13517  009CDC  6F04               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 13518  009CDE  0E8C               	movlw	high _ControllerTimerHandler
 13519  009CE0  6F05               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13520  009CE2  ECE0  F055         	call	_TMR6_SetInterruptHandler	;wreg free
 13521                           
 13522                           ; BSR set to: 1
 13523                           ;controller.c: 229:     TMR6_StartTimer();
 13524  009CE6  EC9E  F057         	call	_TMR6_StartTimer	;wreg free
 13525                           
 13526                           ; BSR set to: 1
 13527  009CEA  0012               	return		;funcret
 13528  009CEC                     __end_of_ControllerInit:
 13529                           	opt callstack 0
 13530                           
 13531 ;; *************** function _TMR6_StartTimer *****************
 13532 ;; Defined at:
 13533 ;;		line 114 in file "mcc_generated_files/tmr6.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;		None
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;		None
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  1    wreg      void 
 13540 ;; Registers used:
 13541 ;;		cstack
 13542 ;; Tracked objects:
 13543 ;;		On entry : 3F/1
 13544 ;;		On exit  : 3F/1
 13545 ;;		Unchanged: 3F/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;Total ram usage:        0 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   17
 13554 ;; This function calls:
 13555 ;;		_TMR6_Start
 13556 ;; This function is called by:
 13557 ;;		_ControllerInit
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           	psect	text79
 13562  00AF3C                     __ptext79:
 13563                           	opt callstack 0
 13564  00AF3C                     _TMR6_StartTimer:
 13565                           	opt callstack 12
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;mcc_generated_files/tmr6.c: 116:     TMR6_Start();
 13569                           
 13570                           ; BSR set to: 1
 13571                           ;incstack = 0
 13572  00AF3C  ECF6  F057         	call	_TMR6_Start	;wreg free
 13573                           
 13574                           ; BSR set to: 1
 13575  00AF40  0012               	return		;funcret
 13576  00AF42                     __end_of_TMR6_StartTimer:
 13577                           	opt callstack 0
 13578                           
 13579 ;; *************** function _TMR6_Start *****************
 13580 ;; Defined at:
 13581 ;;		line 108 in file "mcc_generated_files/tmr6.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;		None
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;		None
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      void 
 13588 ;; Registers used:
 13589 ;;		None
 13590 ;; Tracked objects:
 13591 ;;		On entry : 3F/1
 13592 ;;		On exit  : 3F/1
 13593 ;;		Unchanged: 3F/0
 13594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13599 ;;Total ram usage:        0 bytes
 13600 ;; Hardware stack levels used:    1
 13601 ;; Hardware stack levels required when called:   16
 13602 ;; This function calls:
 13603 ;;		Nothing
 13604 ;; This function is called by:
 13605 ;;		_TMR6_StartTimer
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           	psect	text80
 13610  00AFEC                     __ptext80:
 13611                           	opt callstack 0
 13612  00AFEC                     _TMR6_Start:
 13613                           	opt callstack 12
 13614                           
 13615                           ; BSR set to: 1
 13616                           ;mcc_generated_files/tmr6.c: 111:     T6CONbits.TMR6ON = 1;
 13617                           
 13618                           ; BSR set to: 1
 13619                           ;incstack = 0
 13620  00AFEC  8E94               	bsf	148,7,c	;volatile
 13621                           
 13622                           ; BSR set to: 1
 13623  00AFEE  0012               	return		;funcret
 13624  00AFF0                     __end_of_TMR6_Start:
 13625                           	opt callstack 0
 13626                           
 13627 ;; *************** function _TMR6_SetInterruptHandler *****************
 13628 ;; Defined at:
 13629 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 13632 ;;		 -> ControllerTimerHandler(1), TMR6_DefaultInterruptHandler(1), 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  1    wreg      void 
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 3F/1
 13641 ;;		On exit  : 3F/1
 13642 ;;		Unchanged: 3F/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13644 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13647 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;Total ram usage:        2 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:   16
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_TMR6_Initialize
 13655 ;;		_ControllerInit
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659                           	psect	text81
 13660  00ABC0                     __ptext81:
 13661                           	opt callstack 0
 13662  00ABC0                     _TMR6_SetInterruptHandler:
 13663                           	opt callstack 12
 13664                           
 13665                           ; BSR set to: 1
 13666                           ;mcc_generated_files/tmr6.c: 179:     TMR6_InterruptHandler = InterruptHandler;
 13667                           
 13668                           ; BSR set to: 1
 13669                           ;incstack = 0
 13670  00ABC0  0060  F410  F2D9   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 13671  00ABC6  0060  F414  F2DA   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 13672                           
 13673                           ; BSR set to: 1
 13674  00ABCC  0012               	return		;funcret
 13675  00ABCE                     __end_of_TMR6_SetInterruptHandler:
 13676                           	opt callstack 0
 13677                           
 13678 ;; *************** function _I2C2_SlaveSetStopIntHandler *****************
 13679 ;; Defined at:
 13680 ;;		line 269 in file "mcc_generated_files/i2c2_slave.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13683 ;;		 -> StopHandler(1), 
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		wreg, status,2, status,0
 13690 ;; Tracked objects:
 13691 ;;		On entry : 3F/1
 13692 ;;		On exit  : 3F/1
 13693 ;;		Unchanged: 3F/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13695 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13698 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13699 ;;Total ram usage:        2 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:   16
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_ControllerInit
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           	psect	text82
 13710  00ABCE                     __ptext82:
 13711                           	opt callstack 0
 13712  00ABCE                     _I2C2_SlaveSetStopIntHandler:
 13713                           	opt callstack 13
 13714                           
 13715                           ; BSR set to: 1
 13716                           ;mcc_generated_files/i2c2_slave.c: 270:     I2C2_SlaveStopInterruptHandler = handler;
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;incstack = 0
 13720  00ABCE  0060  F410  F292   	movff	I2C2_SlaveSetStopIntHandler@handler,_I2C2_SlaveStopInterruptHandler
 13721  00ABD4  0060  F414  F293   	movff	I2C2_SlaveSetStopIntHandler@handler+1,_I2C2_SlaveStopInterruptHandler+1
 13722                           
 13723                           ; BSR set to: 1
 13724  00ABDA  0012               	return		;funcret
 13725  00ABDC                     __end_of_I2C2_SlaveSetStopIntHandler:
 13726                           	opt callstack 0
 13727                           
 13728 ;; *************** function _I2C2_Open *****************
 13729 ;; Defined at:
 13730 ;;		line 128 in file "mcc_generated_files/i2c2_slave.c"
 13731 ;; Parameters:    Size  Location     Type
 13732 ;;		None
 13733 ;; Auto vars:     Size  Location     Type
 13734 ;;		None
 13735 ;; Return value:  Size  Location     Type
 13736 ;;                  1    wreg      void 
 13737 ;; Registers used:
 13738 ;;		wreg, status,2, status,0, cstack
 13739 ;; Tracked objects:
 13740 ;;		On entry : 3F/0
 13741 ;;		On exit  : 3F/3D
 13742 ;;		Unchanged: 0/0
 13743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13748 ;;Total ram usage:        0 bytes
 13749 ;; Hardware stack levels used:    1
 13750 ;; Hardware stack levels required when called:   17
 13751 ;; This function calls:
 13752 ;;		_I2C2_SlaveEnableIrq
 13753 ;;		_I2C2_SlaveOpen
 13754 ;;		_I2C2_SlaveSetAddrIntHandler
 13755 ;;		_I2C2_SlaveSetBusColIntHandler
 13756 ;;		_I2C2_SlaveSetIsrHandler
 13757 ;;		_I2C2_SlaveSetReadIntHandler
 13758 ;;		_I2C2_SlaveSetSlaveAddr
 13759 ;;		_I2C2_SlaveSetSlaveMask
 13760 ;;		_I2C2_SlaveSetWrColIntHandler
 13761 ;;		_I2C2_SlaveSetWriteIntHandler
 13762 ;; This function is called by:
 13763 ;;		_ControllerInit
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767                           	psect	text83
 13768  0092C4                     __ptext83:
 13769                           	opt callstack 0
 13770  0092C4                     _I2C2_Open:
 13771                           	opt callstack 12
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;mcc_generated_files/i2c2_slave.c: 130:     I2C2_on = 1;
 13775                           
 13776                           ; BSR set to: 1
 13777                           ;incstack = 0
 13778  0092C4  0E01               	movlw	1
 13779  0092C6  0102               	movlb	2	; () banked
 13780  0092C8  6FB4               	movwf	_I2C2_on& (0+255),b
 13781                           
 13782                           ; BSR set to: 2
 13783                           ;mcc_generated_files/i2c2_slave.c: 131:     I2C2_SlaveOpen();
 13784  0092CA  ECDE  F056         	call	_I2C2_SlaveOpen	;wreg free
 13785                           
 13786                           ; BSR set to: 61
 13787                           ;mcc_generated_files/i2c2_slave.c: 132:     I2C2_SlaveSetSlaveAddr(0x50 << 1);
 13788  0092CE  0EA0               	movlw	160
 13789  0092D0  ECAA  F056         	call	_I2C2_SlaveSetSlaveAddr
 13790                           
 13791                           ;mcc_generated_files/i2c2_slave.c: 134:     I2C2_SlaveSetSlaveMask(0);
 13792  0092D4  0E00               	movlw	0
 13793  0092D6  EC61  F055         	call	_I2C2_SlaveSetSlaveMask
 13794                           
 13795                           ; BSR set to: 61
 13796                           ;mcc_generated_files/i2c2_slave.c: 135:     I2C2_SlaveSetIsrHandler(I2C2_Isr);
 13797  0092DA  0E5C               	movlw	low _I2C2_Isr
 13798  0092DC  0101               	movlb	1	; () banked
 13799  0092DE  6F04               	movwf	I2C2_SlaveSetIsrHandler@handler& (0+255),b
 13800  0092E0  0E92               	movlw	high _I2C2_Isr
 13801  0092E2  6F05               	movwf	(I2C2_SlaveSetIsrHandler@handler+1)& (0+255),b
 13802  0092E4  EC03  F056         	call	_I2C2_SlaveSetIsrHandler	;wreg free
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;mcc_generated_files/i2c2_slave.c: 136:     I2C2_SlaveSetBusColIntHandler(I2C2_SlaveDefB
      +                          usColInterruptHandler);
 13806  0092E8  0E00               	movlw	0
 13807  0092EA  6F04               	movwf	I2C2_SlaveSetBusColIntHandler@handler& (0+255),b
 13808  0092EC  0E00               	movlw	0
 13809  0092EE  6F05               	movwf	(I2C2_SlaveSetBusColIntHandler@handler+1)& (0+255),b
 13810  0092F0  EC0A  F056         	call	_I2C2_SlaveSetBusColIntHandler	;wreg free
 13811                           
 13812                           ; BSR set to: 1
 13813                           ;mcc_generated_files/i2c2_slave.c: 137:     I2C2_SlaveSetWriteIntHandler(I2C2_SlaveDefWr
      +                          InterruptHandler);
 13814  0092F4  0E00               	movlw	0
 13815  0092F6  6F04               	movwf	I2C2_SlaveSetWriteIntHandler@handler& (0+255),b
 13816  0092F8  0E00               	movlw	0
 13817  0092FA  6F05               	movwf	(I2C2_SlaveSetWriteIntHandler@handler+1)& (0+255),b
 13818  0092FC  ECEE  F055         	call	_I2C2_SlaveSetWriteIntHandler	;wreg free
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;mcc_generated_files/i2c2_slave.c: 138:     I2C2_SlaveSetReadIntHandler(I2C2_SlaveDefRdI
      +                          nterruptHandler);
 13822  009300  0E02               	movlw	low _I2C2_SlaveDefRdInterruptHandler
 13823  009302  6F04               	movwf	I2C2_SlaveSetReadIntHandler@handler& (0+255),b
 13824  009304  0EAE               	movlw	high _I2C2_SlaveDefRdInterruptHandler
 13825  009306  6F05               	movwf	(I2C2_SlaveSetReadIntHandler@handler+1)& (0+255),b
 13826  009308  ECFC  F055         	call	_I2C2_SlaveSetReadIntHandler	;wreg free
 13827                           
 13828                           ; BSR set to: 1
 13829                           ;mcc_generated_files/i2c2_slave.c: 139:     I2C2_SlaveSetAddrIntHandler(I2C2_SlaveDefAdd
      +                          rInterruptHandler);
 13830  00930C  0E00               	movlw	0
 13831  00930E  6F04               	movwf	I2C2_SlaveSetAddrIntHandler@handler& (0+255),b
 13832  009310  0E00               	movlw	0
 13833  009312  6F05               	movwf	(I2C2_SlaveSetAddrIntHandler@handler+1)& (0+255),b
 13834  009314  EC11  F056         	call	_I2C2_SlaveSetAddrIntHandler	;wreg free
 13835                           
 13836                           ; BSR set to: 1
 13837                           ;mcc_generated_files/i2c2_slave.c: 140:     I2C2_SlaveSetWrColIntHandler(I2C2_SlaveDefWr
      +                          ColInterruptHandler);
 13838  009318  0E00               	movlw	0
 13839  00931A  6F04               	movwf	I2C2_SlaveSetWrColIntHandler@handler& (0+255),b
 13840  00931C  0E00               	movlw	0
 13841  00931E  6F05               	movwf	(I2C2_SlaveSetWrColIntHandler@handler+1)& (0+255),b
 13842  009320  ECF5  F055         	call	_I2C2_SlaveSetWrColIntHandler	;wreg free
 13843                           
 13844                           ; BSR set to: 1
 13845                           ;mcc_generated_files/i2c2_slave.c: 141:     I2C2_SlaveEnableIrq();
 13846  009324  ECDE  F054         	call	_I2C2_SlaveEnableIrq	;wreg free
 13847                           
 13848                           ; BSR set to: 61
 13849  009328  0012               	return		;funcret
 13850  00932A                     __end_of_I2C2_Open:
 13851                           	opt callstack 0
 13852                           
 13853 ;; *************** function _I2C2_SlaveSetWriteIntHandler *****************
 13854 ;; Defined at:
 13855 ;;		line 252 in file "mcc_generated_files/i2c2_slave.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13858 ;;		 -> I2C2_SlaveDefWrInterruptHandler(1), 
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;		None
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      void 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0
 13865 ;; Tracked objects:
 13866 ;;		On entry : 3F/1
 13867 ;;		On exit  : 3F/1
 13868 ;;		Unchanged: 3F/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13870 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;Total ram usage:        2 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:   16
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_I2C2_Open
 13881 ;; This function uses a non-reentrant model
 13882 ;;
 13883                           
 13884                           	psect	text84
 13885  00ABDC                     __ptext84:
 13886                           	opt callstack 0
 13887  00ABDC                     _I2C2_SlaveSetWriteIntHandler:
 13888                           	opt callstack 12
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;mcc_generated_files/i2c2_slave.c: 253:     I2C2_SlaveWrInterruptHandler = handler;
 13892                           
 13893                           ; BSR set to: 61
 13894                           ;incstack = 0
 13895  00ABDC  0060  F410  F294   	movff	I2C2_SlaveSetWriteIntHandler@handler,_I2C2_SlaveWrInterruptHandler
 13896  00ABE2  0060  F414  F295   	movff	I2C2_SlaveSetWriteIntHandler@handler+1,_I2C2_SlaveWrInterruptHandler+1
 13897                           
 13898                           ; BSR set to: 1
 13899  00ABE8  0012               	return		;funcret
 13900  00ABEA                     __end_of_I2C2_SlaveSetWriteIntHandler:
 13901                           	opt callstack 0
 13902                           
 13903 ;; *************** function _I2C2_SlaveSetWrColIntHandler *****************
 13904 ;; Defined at:
 13905 ;;		line 301 in file "mcc_generated_files/i2c2_slave.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 13908 ;;		 -> I2C2_SlaveDefWrColInterruptHandler(1), 
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      void 
 13913 ;; Registers used:
 13914 ;;		wreg, status,2, status,0
 13915 ;; Tracked objects:
 13916 ;;		On entry : 3F/1
 13917 ;;		On exit  : 3F/1
 13918 ;;		Unchanged: 3F/0
 13919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13920 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;Total ram usage:        2 bytes
 13925 ;; Hardware stack levels used:    1
 13926 ;; Hardware stack levels required when called:   16
 13927 ;; This function calls:
 13928 ;;		Nothing
 13929 ;; This function is called by:
 13930 ;;		_I2C2_Open
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text85
 13935  00ABEA                     __ptext85:
 13936                           	opt callstack 0
 13937  00ABEA                     _I2C2_SlaveSetWrColIntHandler:
 13938                           	opt callstack 12
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;mcc_generated_files/i2c2_slave.c: 302:     I2C2_SlaveWrColInterruptHandler = handler;
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;incstack = 0
 13945  00ABEA  0060  F410  F28C   	movff	I2C2_SlaveSetWrColIntHandler@handler,_I2C2_SlaveWrColInterruptHandler
 13946  00ABF0  0060  F414  F28D   	movff	I2C2_SlaveSetWrColIntHandler@handler+1,_I2C2_SlaveWrColInterruptHandler+1
 13947                           
 13948                           ; BSR set to: 1
 13949  00ABF6  0012               	return		;funcret
 13950  00ABF8                     __end_of_I2C2_SlaveSetWrColIntHandler:
 13951                           	opt callstack 0
 13952                           
 13953 ;; *************** function _I2C2_SlaveSetSlaveMask *****************
 13954 ;; Defined at:
 13955 ;;		line 354 in file "mcc_generated_files/i2c2_slave.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  maskAddr        1    wreg     unsigned char 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  maskAddr        1    4[BANK1 ] unsigned char 
 13960 ;; Return value:  Size  Location     Type
 13961 ;;                  1    wreg      void 
 13962 ;; Registers used:
 13963 ;;		wreg, status,2, status,0
 13964 ;; Tracked objects:
 13965 ;;		On entry : 0/3D
 13966 ;;		On exit  : 3F/3D
 13967 ;;		Unchanged: 0/0
 13968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13970 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13972 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13973 ;;Total ram usage:        1 bytes
 13974 ;; Hardware stack levels used:    1
 13975 ;; Hardware stack levels required when called:   16
 13976 ;; This function calls:
 13977 ;;		Nothing
 13978 ;; This function is called by:
 13979 ;;		_I2C2_Open
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           	psect	text86
 13984  00AAC2                     __ptext86:
 13985                           	opt callstack 0
 13986  00AAC2                     _I2C2_SlaveSetSlaveMask:
 13987                           	opt callstack 12
 13988                           
 13989                           ; BSR set to: 1
 13990                           ;incstack = 0
 13991                           ;I2C2_SlaveSetSlaveMask@maskAddr stored from wreg
 13992  00AAC2  0101               	movlb	1	; () banked
 13993  00AAC4  6F04               	movwf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),b
 13994                           
 13995                           ;mcc_generated_files/i2c2_slave.c: 354: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c2_slave.c: 355: {;mcc_generated_file
      +                          s/i2c2_slave.c: 356:     I2C2ADR1 = ~maskAddr;
 13996  00AAC6  0101               	movlb	1	; () banked
 13997  00AAC8  5104               	movf	I2C2_SlaveSetSlaveMask@maskAddr& (0+255),w,b
 13998  00AACA  0AFF               	xorlw	255
 13999  00AACC  013D               	movlb	61	; () banked
 14000  00AACE  6F5A               	movwf	90,b	;volatile
 14001                           
 14002                           ; BSR set to: 61
 14003  00AAD0  0012               	return		;funcret
 14004  00AAD2                     __end_of_I2C2_SlaveSetSlaveMask:
 14005                           	opt callstack 0
 14006                           
 14007 ;; *************** function _I2C2_SlaveSetSlaveAddr *****************
 14008 ;; Defined at:
 14009 ;;		line 349 in file "mcc_generated_files/i2c2_slave.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;  slaveAddr       1    wreg     unsigned char 
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;  slaveAddr       1    4[BANK1 ] unsigned char 
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      void 
 14016 ;; Registers used:
 14017 ;;		wreg
 14018 ;; Tracked objects:
 14019 ;;		On entry : 3F/3D
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14024 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14026 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14027 ;;Total ram usage:        1 bytes
 14028 ;; Hardware stack levels used:    1
 14029 ;; Hardware stack levels required when called:   16
 14030 ;; This function calls:
 14031 ;;		Nothing
 14032 ;; This function is called by:
 14033 ;;		_I2C2_Open
 14034 ;; This function uses a non-reentrant model
 14035 ;;
 14036                           
 14037                           	psect	text87
 14038  00AD54                     __ptext87:
 14039                           	opt callstack 0
 14040  00AD54                     _I2C2_SlaveSetSlaveAddr:
 14041                           	opt callstack 12
 14042                           
 14043                           ; BSR set to: 61
 14044                           ;incstack = 0
 14045                           ;I2C2_SlaveSetSlaveAddr@slaveAddr stored from wreg
 14046  00AD54  0101               	movlb	1	; () banked
 14047  00AD56  6F04               	movwf	I2C2_SlaveSetSlaveAddr@slaveAddr& (0+255),b
 14048                           
 14049                           ;mcc_generated_files/i2c2_slave.c: 349: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c2_slave.c: 350: {;mcc_generated_fil
      +                          es/i2c2_slave.c: 351:     I2C2ADR0 = slaveAddr;
 14050  00AD58  0060  F413  FD59   	movff	I2C2_SlaveSetSlaveAddr@slaveAddr,15705	;volatile
 14051  00AD5E  0012               	return		;funcret
 14052  00AD60                     __end_of_I2C2_SlaveSetSlaveAddr:
 14053                           	opt callstack 0
 14054                           
 14055 ;; *************** function _I2C2_SlaveSetReadIntHandler *****************
 14056 ;; Defined at:
 14057 ;;		line 235 in file "mcc_generated_files/i2c2_slave.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14060 ;;		 -> ReceiveHandler(1), I2C2_SlaveDefRdInterruptHandler(1), 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;		None
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      void 
 14065 ;; Registers used:
 14066 ;;		wreg, status,2, status,0
 14067 ;; Tracked objects:
 14068 ;;		On entry : 3F/1
 14069 ;;		On exit  : 3F/1
 14070 ;;		Unchanged: 3F/0
 14071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14072 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;Total ram usage:        2 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:   16
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_I2C2_Open
 14083 ;;		_ControllerInit
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text88
 14088  00ABF8                     __ptext88:
 14089                           	opt callstack 0
 14090  00ABF8                     _I2C2_SlaveSetReadIntHandler:
 14091                           	opt callstack 13
 14092                           
 14093                           ; BSR set to: 1
 14094                           ;mcc_generated_files/i2c2_slave.c: 236:     I2C2_SlaveRdInterruptHandler = handler;
 14095                           
 14096                           ;incstack = 0
 14097  00ABF8  0060  F410  F296   	movff	I2C2_SlaveSetReadIntHandler@handler,_I2C2_SlaveRdInterruptHandler
 14098  00ABFE  0060  F414  F297   	movff	I2C2_SlaveSetReadIntHandler@handler+1,_I2C2_SlaveRdInterruptHandler+1
 14099                           
 14100                           ; BSR set to: 1
 14101  00AC04  0012               	return		;funcret
 14102  00AC06                     __end_of_I2C2_SlaveSetReadIntHandler:
 14103                           	opt callstack 0
 14104                           
 14105 ;; *************** function _I2C2_SlaveSetIsrHandler *****************
 14106 ;; Defined at:
 14107 ;;		line 229 in file "mcc_generated_files/i2c2_slave.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14110 ;;		 -> I2C2_Isr(1), 
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  1    wreg      void 
 14115 ;; Registers used:
 14116 ;;		wreg, status,2, status,0
 14117 ;; Tracked objects:
 14118 ;;		On entry : 3F/1
 14119 ;;		On exit  : 3F/1
 14120 ;;		Unchanged: 3F/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14122 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;Total ram usage:        2 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:   16
 14129 ;; This function calls:
 14130 ;;		Nothing
 14131 ;; This function is called by:
 14132 ;;		_I2C2_Open
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           	psect	text89
 14137  00AC06                     __ptext89:
 14138                           	opt callstack 0
 14139  00AC06                     _I2C2_SlaveSetIsrHandler:
 14140                           	opt callstack 12
 14141                           
 14142                           ; BSR set to: 1
 14143                           ;mcc_generated_files/i2c2_slave.c: 229: void I2C2_SlaveSetIsrHandler(interruptHandler ha
      +                          ndler);mcc_generated_files/i2c2_slave.c: 230: {;mcc_generated_files/i2c2_slave.c: 231:  
      +                             I2C2_InterruptHandler = handler;
 14144                           
 14145                           ; BSR set to: 1
 14146                           ;incstack = 0
 14147  00AC06  0060  F410  F0EA   	movff	I2C2_SlaveSetIsrHandler@handler,_I2C2_InterruptHandler
 14148  00AC0C  0060  F414  F0EB   	movff	I2C2_SlaveSetIsrHandler@handler+1,_I2C2_InterruptHandler+1
 14149                           
 14150                           ; BSR set to: 1
 14151  00AC12  0012               	return		;funcret
 14152  00AC14                     __end_of_I2C2_SlaveSetIsrHandler:
 14153                           	opt callstack 0
 14154                           
 14155 ;; *************** function _I2C2_SlaveSetBusColIntHandler *****************
 14156 ;; Defined at:
 14157 ;;		line 317 in file "mcc_generated_files/i2c2_slave.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14160 ;;		 -> I2C2_SlaveDefBusColInterruptHandler(1), 
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;		None
 14163 ;; Return value:  Size  Location     Type
 14164 ;;                  1    wreg      void 
 14165 ;; Registers used:
 14166 ;;		wreg, status,2, status,0
 14167 ;; Tracked objects:
 14168 ;;		On entry : 3F/1
 14169 ;;		On exit  : 3F/1
 14170 ;;		Unchanged: 3F/0
 14171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14172 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;Total ram usage:        2 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:   16
 14179 ;; This function calls:
 14180 ;;		Nothing
 14181 ;; This function is called by:
 14182 ;;		_I2C2_Open
 14183 ;; This function uses a non-reentrant model
 14184 ;;
 14185                           
 14186                           	psect	text90
 14187  00AC14                     __ptext90:
 14188                           	opt callstack 0
 14189  00AC14                     _I2C2_SlaveSetBusColIntHandler:
 14190                           	opt callstack 12
 14191                           
 14192                           ; BSR set to: 1
 14193                           ;mcc_generated_files/i2c2_slave.c: 318:     I2C2_SlaveBusColInterruptHandler = handler;
 14194                           
 14195                           ; BSR set to: 1
 14196                           ;incstack = 0
 14197  00AC14  0060  F410  F28E   	movff	I2C2_SlaveSetBusColIntHandler@handler,_I2C2_SlaveBusColInterruptHandler
 14198  00AC1A  0060  F414  F28F   	movff	I2C2_SlaveSetBusColIntHandler@handler+1,_I2C2_SlaveBusColInterruptHandler+1
 14199                           
 14200                           ; BSR set to: 1
 14201  00AC20  0012               	return		;funcret
 14202  00AC22                     __end_of_I2C2_SlaveSetBusColIntHandler:
 14203                           	opt callstack 0
 14204                           
 14205 ;; *************** function _I2C2_SlaveSetAddrIntHandler *****************
 14206 ;; Defined at:
 14207 ;;		line 285 in file "mcc_generated_files/i2c2_slave.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 14210 ;;		 -> I2C2_SlaveDefAddrInterruptHandler(1), 
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;		None
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  1    wreg      void 
 14215 ;; Registers used:
 14216 ;;		wreg, status,2, status,0
 14217 ;; Tracked objects:
 14218 ;;		On entry : 3F/1
 14219 ;;		On exit  : 3F/1
 14220 ;;		Unchanged: 3F/0
 14221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14222 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14226 ;;Total ram usage:        2 bytes
 14227 ;; Hardware stack levels used:    1
 14228 ;; Hardware stack levels required when called:   16
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_I2C2_Open
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           	psect	text91
 14237  00AC22                     __ptext91:
 14238                           	opt callstack 0
 14239  00AC22                     _I2C2_SlaveSetAddrIntHandler:
 14240                           	opt callstack 12
 14241                           
 14242                           ; BSR set to: 1
 14243                           ;mcc_generated_files/i2c2_slave.c: 286:     I2C2_SlaveAddrInterruptHandler = handler;
 14244                           
 14245                           ; BSR set to: 1
 14246                           ;incstack = 0
 14247  00AC22  0060  F410  F290   	movff	I2C2_SlaveSetAddrIntHandler@handler,_I2C2_SlaveAddrInterruptHandler
 14248  00AC28  0060  F414  F291   	movff	I2C2_SlaveSetAddrIntHandler@handler+1,_I2C2_SlaveAddrInterruptHandler+1
 14249                           
 14250                           ; BSR set to: 1
 14251  00AC2E  0012               	return		;funcret
 14252  00AC30                     __end_of_I2C2_SlaveSetAddrIntHandler:
 14253                           	opt callstack 0
 14254                           
 14255 ;; *************** function _I2C2_SlaveOpen *****************
 14256 ;; Defined at:
 14257 ;;		line 332 in file "mcc_generated_files/i2c2_slave.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;		None
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;		None
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      _Bool 
 14264 ;; Registers used:
 14265 ;;		None
 14266 ;; Tracked objects:
 14267 ;;		On entry : 3F/2
 14268 ;;		On exit  : 3F/3D
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;Total ram usage:        0 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:   16
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_I2C2_Open
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text92
 14286  00ADBC                     __ptext92:
 14287                           	opt callstack 0
 14288  00ADBC                     _I2C2_SlaveOpen:
 14289                           	opt callstack 12
 14290                           
 14291                           ; BSR set to: 2
 14292                           ;mcc_generated_files/i2c2_slave.c: 334:     if(!I2C2CON0bits.EN)
 14293                           
 14294                           ; BSR set to: 1
 14295                           ;incstack = 0
 14296  00ADBC  013D               	movlb	61	; () banked
 14297  00ADBE  BF5D               	btfsc	93,7,b	;volatile
 14298  00ADC0  0012               	return	
 14299                           
 14300                           ; BSR set to: 61
 14301                           ;mcc_generated_files/i2c2_slave.c: 335:     {;mcc_generated_files/i2c2_slave.c: 336:    
      +                               I2C2CON0bits.EN = 1;
 14302  00ADC2  8F5D               	bsf	93,7,b	;volatile
 14303                           
 14304                           ; BSR set to: 61
 14305                           
 14306                           ;mcc_generated_files/i2c2_slave.c: 337:         return 1;;	Return value of _I2C2_SlaveOp
      +                          en is never used
 14307  00ADC4  0012               	return		;funcret
 14308  00ADC6                     __end_of_I2C2_SlaveOpen:
 14309                           	opt callstack 0
 14310                           
 14311 ;; *************** function _I2C2_SlaveEnableIrq *****************
 14312 ;; Defined at:
 14313 ;;		line 359 in file "mcc_generated_files/i2c2_slave.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      void 
 14320 ;; Registers used:
 14321 ;;		None
 14322 ;; Tracked objects:
 14323 ;;		On entry : 3F/1
 14324 ;;		On exit  : 3F/3D
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:   16
 14334 ;; This function calls:
 14335 ;;		Nothing
 14336 ;; This function is called by:
 14337 ;;		_I2C2_Open
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text93
 14342  00A9BC                     __ptext93:
 14343                           	opt callstack 0
 14344  00A9BC                     _I2C2_SlaveEnableIrq:
 14345                           	opt callstack 12
 14346                           
 14347                           ; BSR set to: 1
 14348                           ;mcc_generated_files/i2c2_slave.c: 361:     PIE6bits.I2C2IE = 1;
 14349                           
 14350                           ; BSR set to: 61
 14351                           ;incstack = 0
 14352  00A9BC  0139               	movlb	57	; () banked
 14353  00A9BE  8196               	bsf	150,0,b	;volatile
 14354                           
 14355                           ;mcc_generated_files/i2c2_slave.c: 362:     PIE6bits.I2C2EIE = 0;
 14356  00A9C0  9396               	bcf	150,1,b	;volatile
 14357                           
 14358                           ;mcc_generated_files/i2c2_slave.c: 363:     PIE5bits.I2C2RXIE = 1;
 14359  00A9C2  8D95               	bsf	149,6,b	;volatile
 14360                           
 14361                           ;mcc_generated_files/i2c2_slave.c: 364:     PIE5bits.I2C2TXIE = 1;
 14362  00A9C4  8F95               	bsf	149,7,b	;volatile
 14363                           
 14364                           ;mcc_generated_files/i2c2_slave.c: 365:     I2C2PIEbits.PCIE = 1;
 14365  00A9C6  013D               	movlb	61	; () banked
 14366  00A9C8  8564               	bsf	100,2,b	;volatile
 14367                           
 14368                           ;mcc_generated_files/i2c2_slave.c: 366:     I2C2PIEbits.ADRIE = 0;
 14369  00A9CA  9764               	bcf	100,3,b	;volatile
 14370                           
 14371                           ;mcc_generated_files/i2c2_slave.c: 367:     I2C2ERRbits.NACKIE = 0;
 14372  00A9CC  9160               	bcf	96,0,b	;volatile
 14373                           
 14374                           ;mcc_generated_files/i2c2_slave.c: 369:     I2C2PIEbits.WRIE = 0;
 14375  00A9CE  9964               	bcf	100,4,b	;volatile
 14376                           
 14377                           ; BSR set to: 61
 14378  00A9D0  0012               	return		;funcret
 14379  00A9D2                     __end_of_I2C2_SlaveEnableIrq:
 14380                           	opt callstack 0
 14381                           
 14382 ;; *************** function _BuzzerTest *****************
 14383 ;; Defined at:
 14384 ;;		line 97 in file "buzzer.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;  note            1    wreg     unsigned char 
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;  note            1    8[BANK1 ] unsigned char 
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      void 
 14391 ;; Registers used:
 14392 ;;		wreg, status,2, status,0, cstack
 14393 ;; Tracked objects:
 14394 ;;		On entry : 3F/3
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14401 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14402 ;;Total ram usage:        3 bytes
 14403 ;; Hardware stack levels used:    1
 14404 ;; Hardware stack levels required when called:   18
 14405 ;; This function calls:
 14406 ;;		_BuzzerOff
 14407 ;;		_BuzzerOn
 14408 ;;		_TMR4_Period8BitSet
 14409 ;;		_TMR4_SetInterruptHandler
 14410 ;;		_TMR4_Start
 14411 ;; This function is called by:
 14412 ;;		_main
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text94
 14417  0089E4                     __ptext94:
 14418                           	opt callstack 0
 14419  0089E4                     _BuzzerTest:
 14420                           	opt callstack 12
 14421                           
 14422                           ; BSR set to: 61
 14423                           ;incstack = 0
 14424                           ;BuzzerTest@note stored from wreg
 14425  0089E4  0101               	movlb	1	; () banked
 14426  0089E6  6F08               	movwf	BuzzerTest@note& (0+255),b
 14427                           
 14428                           ;buzzer.c: 98:     TMR4_SetInterruptHandler(BuzzerTestHandler);
 14429  0089E8  0EEA               	movlw	low _BuzzerTestHandler
 14430  0089EA  0101               	movlb	1	; () banked
 14431  0089EC  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 14432  0089EE  0EA2               	movlw	high _BuzzerTestHandler
 14433  0089F0  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14434  0089F2  EC34  F056         	call	_TMR4_SetInterruptHandler	;wreg free
 14435                           
 14436                           ;buzzer.c: 99:     switch (note) {
 14437  0089F6  D01B               	goto	l22076
 14438  0089F8                     l22058:
 14439                           
 14440                           ; BSR set to: 1
 14441                           ;buzzer.c: 101:             BuzzerOn(0x8D);
 14442  0089F8  0E8D               	movlw	141
 14443  0089FA  EC2C  F054         	call	_BuzzerOn
 14444                           
 14445                           ;buzzer.c: 102:             break;
 14446  0089FE  D032               	goto	l22078
 14447  008A00                     l22060:
 14448                           
 14449                           ; BSR set to: 1
 14450                           ;buzzer.c: 104:             BuzzerOn(0xFC);
 14451  008A00  0EFC               	movlw	252
 14452  008A02  EC2C  F054         	call	_BuzzerOn
 14453                           
 14454                           ;buzzer.c: 105:             break;
 14455  008A06  D02E               	goto	l22078
 14456  008A08                     l22062:
 14457                           
 14458                           ; BSR set to: 1
 14459                           ;buzzer.c: 107:             BuzzerOn(0xEE);
 14460  008A08  0EEE               	movlw	238
 14461  008A0A  EC2C  F054         	call	_BuzzerOn
 14462                           
 14463                           ;buzzer.c: 108:             break;
 14464  008A0E  D02A               	goto	l22078
 14465  008A10                     l22064:
 14466                           
 14467                           ; BSR set to: 1
 14468                           ;buzzer.c: 110:             BuzzerOn(0xD4);
 14469  008A10  0ED4               	movlw	212
 14470  008A12  EC2C  F054         	call	_BuzzerOn
 14471                           
 14472                           ;buzzer.c: 111:             break;
 14473  008A16  D026               	goto	l22078
 14474  008A18                     l22066:
 14475                           
 14476                           ; BSR set to: 1
 14477                           ;buzzer.c: 113:             BuzzerOn(0xBD);
 14478  008A18  0EBD               	movlw	189
 14479  008A1A  EC2C  F054         	call	_BuzzerOn
 14480                           
 14481                           ;buzzer.c: 114:             break;
 14482  008A1E  D022               	goto	l22078
 14483  008A20                     l22068:
 14484                           
 14485                           ; BSR set to: 1
 14486                           ;buzzer.c: 116:             BuzzerOn(0xB2);
 14487  008A20  0EB2               	movlw	178
 14488  008A22  EC2C  F054         	call	_BuzzerOn
 14489                           
 14490                           ;buzzer.c: 117:             break;
 14491  008A26  D01E               	goto	l22078
 14492  008A28                     l22070:
 14493                           
 14494                           ; BSR set to: 1
 14495                           ;buzzer.c: 119:             BuzzerOff();
 14496  008A28  EC79  F055         	call	_BuzzerOff	;wreg free
 14497  008A2C  0012               	return	
 14498  008A2E                     l22076:
 14499                           
 14500                           ; BSR set to: 1
 14501  008A2E  5108               	movf	BuzzerTest@note& (0+255),w,b
 14502  008A30  6F06               	movwf	??_BuzzerTest& (0+255),b
 14503  008A32  6B07               	clrf	(??_BuzzerTest+1)& (0+255),b
 14504                           
 14505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14506                           ; Switch size 1, requested type "simple"
 14507                           ; Number of cases is 1, Range of values is 0 to 0
 14508                           ; switch strategies available:
 14509                           ; Name         Instructions Cycles
 14510                           ; simple_byte            4     3 (average)
 14511                           ;	Chosen strategy is simple_byte
 14512  008A34  5107               	movf	(??_BuzzerTest+1)& (0+255),w,b
 14513  008A36  0A00               	xorlw	0	; case 0
 14514  008A38  A4D8               	btfss	status,2,c
 14515  008A3A  D7F6               	goto	l22070
 14516                           
 14517                           ; BSR set to: 1
 14518                           ; Switch size 1, requested type "simple"
 14519                           ; Number of cases is 6, Range of values is 65 to 70
 14520                           ; switch strategies available:
 14521                           ; Name         Instructions Cycles
 14522                           ; simple_byte           19    10 (average)
 14523                           ;	Chosen strategy is simple_byte
 14524  008A3C  5106               	movf	??_BuzzerTest& (0+255),w,b
 14525  008A3E  0A41               	xorlw	65	; case 65
 14526  008A40  B4D8               	btfsc	status,2,c
 14527  008A42  D7DA               	goto	l22058
 14528  008A44  0A03               	xorlw	3	; case 66
 14529  008A46  B4D8               	btfsc	status,2,c
 14530  008A48  D7DB               	goto	l22060
 14531  008A4A  0A01               	xorlw	1	; case 67
 14532  008A4C  B4D8               	btfsc	status,2,c
 14533  008A4E  D7DC               	goto	l22062
 14534  008A50  0A07               	xorlw	7	; case 68
 14535  008A52  B4D8               	btfsc	status,2,c
 14536  008A54  D7DD               	goto	l22064
 14537  008A56  0A01               	xorlw	1	; case 69
 14538  008A58  B4D8               	btfsc	status,2,c
 14539  008A5A  D7DE               	goto	l22066
 14540  008A5C  0A03               	xorlw	3	; case 70
 14541  008A5E  B4D8               	btfsc	status,2,c
 14542  008A60  D7DF               	goto	l22068
 14543  008A62  D7E2               	goto	l22070
 14544  008A64                     l22078:
 14545                           
 14546                           ; BSR set to: 57
 14547                           ;buzzer.c: 122:     TMR4_Period8BitSet(51);
 14548  008A64  0E33               	movlw	51
 14549  008A66  ECB0  F056         	call	_TMR4_Period8BitSet
 14550                           
 14551                           ;buzzer.c: 123:     TMR4_Start();
 14552  008A6A  EC12  F058         	call	_TMR4_Start	;wreg free
 14553  008A6E  0012               	return		;funcret
 14554  008A70                     __end_of_BuzzerTest:
 14555                           	opt callstack 0
 14556                           
 14557 ;; *************** function _BuzzerCheck *****************
 14558 ;; Defined at:
 14559 ;;		line 427 in file "buzzer.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;		None
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;		None
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14568 ;; Tracked objects:
 14569 ;;		On entry : 3D/1
 14570 ;;		On exit  : 3F/2
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14577 ;;Total ram usage:        2 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; Hardware stack levels required when called:   25
 14580 ;; This function calls:
 14581 ;;		_BuzzerOff
 14582 ;;		_BuzzerOn
 14583 ;;		_SetMonitorFailAlarm
 14584 ;;		_printf
 14585 ;; This function is called by:
 14586 ;;		_main
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text95
 14591  0088BE                     __ptext95:
 14592                           	opt callstack 0
 14593  0088BE                     _BuzzerCheck:
 14594                           	opt callstack 5
 14595                           
 14596                           ;buzzer.c: 428:     BuzzerOn(0x8D);
 14597                           
 14598                           ;incstack = 0
 14599  0088BE  0E8D               	movlw	141
 14600  0088C0  EC2C  F054         	call	_BuzzerOn
 14601                           
 14602                           ; BSR set to: 57
 14603                           ;buzzer.c: 429:     _delay((unsigned long)((250)*(64000000/4000.0)));
 14604  0088C4  0E15               	movlw	21
 14605  0088C6  0101               	movlb	1	; () banked
 14606  0088C8  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14607  0088CA  0E4B               	movlw	75
 14608  0088CC  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14609  0088CE  0EBE               	movlw	190
 14610  0088D0                     u23157:
 14611  0088D0  2EE8               	decfsz	wreg,f,c
 14612  0088D2  D7FE               	bra	u23157
 14613  0088D4  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14614  0088D6  D7FC               	bra	u23157
 14615  0088D8  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14616  0088DA  D7FA               	bra	u23157
 14617  0088DC  F000               	nop	
 14618                           
 14619                           ;buzzer.c: 430:     BuzzerOff();
 14620  0088DE  EC79  F055         	call	_BuzzerOff	;wreg free
 14621                           
 14622                           ; BSR set to: 57
 14623                           ;buzzer.c: 431:     if (detected==0) {
 14624  0088E2  0100               	movlb	0	; () banked
 14625  0088E4  51F4               	movf	_detected& (0+255),w,b
 14626  0088E6  A4D8               	btfss	status,2,c
 14627  0088E8  D02D               	goto	l21946
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;buzzer.c: 432:         _delay((unsigned long)((100)*(64000000/4000.0)));
 14631  0088EA  0E09               	movlw	9
 14632  0088EC  0101               	movlb	1	; () banked
 14633  0088EE  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14634  0088F0  0E1E               	movlw	30
 14635  0088F2  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14636  0088F4  0EE4               	movlw	228
 14637  0088F6                     u23167:
 14638  0088F6  2EE8               	decfsz	wreg,f,c
 14639  0088F8  D7FE               	bra	u23167
 14640  0088FA  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14641  0088FC  D7FC               	bra	u23167
 14642  0088FE  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14643  008900  D7FA               	bra	u23167
 14644  008902  F000               	nop	
 14645                           
 14646                           ;buzzer.c: 433:         BuzzerOn(0x8D);
 14647  008904  0E8D               	movlw	141
 14648  008906  EC2C  F054         	call	_BuzzerOn
 14649                           
 14650                           ; BSR set to: 57
 14651                           ;buzzer.c: 434:         _delay((unsigned long)((250)*(64000000/4000.0)));
 14652  00890A  0E15               	movlw	21
 14653  00890C  0101               	movlb	1	; () banked
 14654  00890E  6F84               	movwf	(??_BuzzerCheck+1)& (0+255),b
 14655  008910  0E4B               	movlw	75
 14656  008912  6F83               	movwf	??_BuzzerCheck& (0+255),b
 14657  008914  0EBE               	movlw	190
 14658  008916                     u23177:
 14659  008916  2EE8               	decfsz	wreg,f,c
 14660  008918  D7FE               	bra	u23177
 14661  00891A  2F83               	decfsz	??_BuzzerCheck& (0+255),f,b
 14662  00891C  D7FC               	bra	u23177
 14663  00891E  2F84               	decfsz	(??_BuzzerCheck+1)& (0+255),f,b
 14664  008920  D7FA               	bra	u23177
 14665  008922  F000               	nop	
 14666                           
 14667                           ;buzzer.c: 435:         BuzzerOff();
 14668  008924  EC79  F055         	call	_BuzzerOff	;wreg free
 14669                           
 14670                           ; BSR set to: 57
 14671                           ;buzzer.c: 436:         if (detected==0) {
 14672  008928  0100               	movlb	0	; () banked
 14673  00892A  51F4               	movf	_detected& (0+255),w,b
 14674  00892C  A4D8               	btfss	status,2,c
 14675  00892E  D00A               	goto	l21946
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;buzzer.c: 437:             SetMonitorFailAlarm();
 14679  008930  EC37  F057         	call	_SetMonitorFailAlarm	;wreg free
 14680                           
 14681                           ; BSR set to: 2
 14682                           ;buzzer.c: 438:             printf("Error Buzzer\r\n");
 14683  008934  0E2F               	movlw	low STR_20
 14684  008936  0101               	movlb	1	; () banked
 14685  008938  6F71               	movwf	printf@fmt& (0+255),b
 14686  00893A  0EFF               	movlw	high STR_20
 14687  00893C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14688  00893E  ECE6  F051         	call	_printf	;wreg free
 14689  008942  0012               	return	
 14690  008944                     l21946:
 14691                           
 14692                           ; BSR set to: 0
 14693                           ;buzzer.c: 442:     printf("Found Buzzer\r\n");
 14694  008944  0E20               	movlw	low STR_21
 14695  008946  0101               	movlb	1	; () banked
 14696  008948  6F71               	movwf	printf@fmt& (0+255),b
 14697  00894A  0EFF               	movlw	high STR_21
 14698  00894C  6F72               	movwf	(printf@fmt+1)& (0+255),b
 14699  00894E  ECE6  F051         	call	_printf	;wreg free
 14700                           
 14701                           ; BSR set to: 2
 14702  008952  0012               	return		;funcret
 14703  008954                     __end_of_BuzzerCheck:
 14704                           	opt callstack 0
 14705                           
 14706 ;; *************** function _ButtonInit *****************
 14707 ;; Defined at:
 14708 ;;		line 34 in file "buttons.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;		None
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;		None
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      void 
 14715 ;; Registers used:
 14716 ;;		wreg, status,2, status,0, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 3F/1
 14719 ;;		On exit  : 3F/1
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14726 ;;Total ram usage:        0 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:   17
 14729 ;; This function calls:
 14730 ;;		_TMR1_SetInterruptHandler
 14731 ;;		_TMR1_StartTimer
 14732 ;; This function is called by:
 14733 ;;		_main
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737                           	psect	text96
 14738  00A3A2                     __ptext96:
 14739                           	opt callstack 0
 14740  00A3A2                     _ButtonInit:
 14741                           	opt callstack 13
 14742                           
 14743                           ; BSR set to: 1
 14744                           ;buttons.c: 35:     ledCnt=0;
 14745                           
 14746                           ; BSR set to: 2
 14747                           ;incstack = 0
 14748  00A3A2  0E00               	movlw	0
 14749  00A3A4  0100               	movlb	0	; () banked
 14750  00A3A6  6FE7               	movwf	(_ledCnt+1)& (0+255),b
 14751  00A3A8  0E00               	movlw	0
 14752  00A3AA  6FE6               	movwf	_ledCnt& (0+255),b
 14753                           
 14754                           ;buttons.c: 36:     ledType=0;
 14755  00A3AC  0E00               	movlw	0
 14756  00A3AE  6FF7               	movwf	_ledType& (0+255),b
 14757                           
 14758                           ;buttons.c: 37:     muteButton=0;
 14759  00A3B0  0E00               	movlw	0
 14760  00A3B2  6FF9               	movwf	_muteButton& (0+255),b
 14761                           
 14762                           ;buttons.c: 38:     histButton=0;
 14763  00A3B4  0E00               	movlw	0
 14764  00A3B6  6FF8               	movwf	_histButton& (0+255),b
 14765                           
 14766                           ; BSR set to: 0
 14767                           ;buttons.c: 39:     TMR1_SetInterruptHandler(ButtonTask);
 14768  00A3B8  0E44               	movlw	low _ButtonTask
 14769  00A3BA  0101               	movlb	1	; () banked
 14770  00A3BC  6F04               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 14771  00A3BE  0E6F               	movlw	high _ButtonTask
 14772  00A3C0  6F05               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14773  00A3C2  EC18  F056         	call	_TMR1_SetInterruptHandler	;wreg free
 14774                           
 14775                           ; BSR set to: 1
 14776                           ;buttons.c: 40:     TMR1_StartTimer();
 14777  00A3C6  ECF8  F057         	call	_TMR1_StartTimer	;wreg free
 14778                           
 14779                           ; BSR set to: 1
 14780  00A3CA  0012               	return		;funcret
 14781  00A3CC                     __end_of_ButtonInit:
 14782                           	opt callstack 0
 14783                           
 14784 ;; *************** function _TMR1_StartTimer *****************
 14785 ;; Defined at:
 14786 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		None
 14795 ;; Tracked objects:
 14796 ;;		On entry : 3F/1
 14797 ;;		On exit  : 3F/1
 14798 ;;		Unchanged: 3F/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:   16
 14807 ;; This function calls:
 14808 ;;		Nothing
 14809 ;; This function is called by:
 14810 ;;		_ButtonInit
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           	psect	text97
 14815  00AFF0                     __ptext97:
 14816                           	opt callstack 0
 14817  00AFF0                     _TMR1_StartTimer:
 14818                           	opt callstack 13
 14819                           
 14820                           ; BSR set to: 1
 14821                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 14822                           
 14823                           ; BSR set to: 1
 14824                           ;incstack = 0
 14825  00AFF0  80B2               	bsf	178,0,c	;volatile
 14826                           
 14827                           ; BSR set to: 1
 14828  00AFF2  0012               	return		;funcret
 14829  00AFF4                     __end_of_TMR1_StartTimer:
 14830                           	opt callstack 0
 14831                           
 14832 ;; *************** function _TMR1_SetInterruptHandler *****************
 14833 ;; Defined at:
 14834 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 14837 ;;		 -> ButtonTask(1), TMR1_DefaultInterruptHandler(1), 
 14838 ;; Auto vars:     Size  Location     Type
 14839 ;;		None
 14840 ;; Return value:  Size  Location     Type
 14841 ;;                  1    wreg      void 
 14842 ;; Registers used:
 14843 ;;		wreg, status,2, status,0
 14844 ;; Tracked objects:
 14845 ;;		On entry : 3F/1
 14846 ;;		On exit  : 3F/1
 14847 ;;		Unchanged: 3F/0
 14848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14849 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14852 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14853 ;;Total ram usage:        2 bytes
 14854 ;; Hardware stack levels used:    1
 14855 ;; Hardware stack levels required when called:   16
 14856 ;; This function calls:
 14857 ;;		Nothing
 14858 ;; This function is called by:
 14859 ;;		_TMR1_Initialize
 14860 ;;		_ButtonInit
 14861 ;; This function uses a non-reentrant model
 14862 ;;
 14863                           
 14864                           	psect	text98
 14865  00AC30                     __ptext98:
 14866                           	opt callstack 0
 14867  00AC30                     _TMR1_SetInterruptHandler:
 14868                           	opt callstack 12
 14869                           
 14870                           ; BSR set to: 1
 14871                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 14872                           
 14873                           ; BSR set to: 1
 14874                           ;incstack = 0
 14875  00AC30  0060  F410  F2DB   	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 14876  00AC36  0060  F414  F2DC   	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 14877                           
 14878                           ; BSR set to: 1
 14879  00AC3C  0012               	return		;funcret
 14880  00AC3E                     __end_of_TMR1_SetInterruptHandler:
 14881                           	opt callstack 0
 14882                           
 14883 ;; *************** function _AlarmInit *****************
 14884 ;; Defined at:
 14885 ;;		line 571 in file "alarm.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;		None
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;  i               2    6[BANK1 ] int 
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  1    wreg      void 
 14892 ;; Registers used:
 14893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14894 ;; Tracked objects:
 14895 ;;		On entry : 3F/0
 14896 ;;		On exit  : 3C/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14900 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;Total ram usage:        2 bytes
 14904 ;; Hardware stack levels used:    1
 14905 ;; Hardware stack levels required when called:   19
 14906 ;; This function calls:
 14907 ;;		_BuzzerInit
 14908 ;;		_TMR5_SetInterruptHandler
 14909 ;;		_TMR5_StartTimer
 14910 ;; This function is called by:
 14911 ;;		_main
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text99
 14916  008D12                     __ptext99:
 14917                           	opt callstack 0
 14918  008D12                     _AlarmInit:
 14919                           	opt callstack 11
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;alarm.c: 572:     BuzzerInit();
 14923                           
 14924                           ; BSR set to: 1
 14925                           ;incstack = 0
 14926  008D12  EC18  F051         	call	_BuzzerInit	;wreg free
 14927                           
 14928                           ; BSR set to: 2
 14929                           ;alarm.c: 573:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 14930  008D16  0E00               	movlw	0
 14931  008D18  0101               	movlb	1	; () banked
 14932  008D1A  6F07               	movwf	(AlarmInit@i+1)& (0+255),b
 14933  008D1C  0E00               	movlw	0
 14934  008D1E  6F06               	movwf	AlarmInit@i& (0+255),b
 14935  008D20                     l21866:
 14936                           
 14937                           ; BSR set to: 1
 14938                           ;alarm.c: 574:         alarms[i] = 0;
 14939  008D20  90D8               	bcf	status,0,c
 14940  008D22  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14941  008D24  6ED9               	movwf	fsr2l,c
 14942  008D26  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14943  008D28  6EDA               	movwf	fsr2h,c
 14944  008D2A  0E00               	movlw	low _alarms
 14945  008D2C  26D9               	addwf	fsr2l,f,c
 14946  008D2E  0E03               	movlw	high _alarms
 14947  008D30  22DA               	addwfc	fsr2h,f,c
 14948  008D32  0E00               	movlw	0
 14949  008D34  6EDE               	movwf	postinc2,c
 14950  008D36  0E00               	movlw	0
 14951  008D38  6EDD               	movwf	postdec2,c
 14952                           
 14953                           ;alarm.c: 575:         testAlarm[i] =0;
 14954  008D3A  90D8               	bcf	status,0,c
 14955  008D3C  3506               	rlcf	AlarmInit@i& (0+255),w,b
 14956  008D3E  6ED9               	movwf	fsr2l,c
 14957  008D40  3507               	rlcf	(AlarmInit@i+1)& (0+255),w,b
 14958  008D42  6EDA               	movwf	fsr2h,c
 14959  008D44  0E26               	movlw	low _testAlarm
 14960  008D46  26D9               	addwf	fsr2l,f,c
 14961  008D48  0E03               	movlw	high _testAlarm
 14962  008D4A  22DA               	addwfc	fsr2h,f,c
 14963  008D4C  0E00               	movlw	0
 14964  008D4E  6EDE               	movwf	postinc2,c
 14965  008D50  0E00               	movlw	0
 14966  008D52  6EDD               	movwf	postdec2,c
 14967                           
 14968                           ; BSR set to: 1
 14969                           ;alarm.c: 576:     }
 14970  008D54  4B06               	infsnz	AlarmInit@i& (0+255),f,b
 14971  008D56  2B07               	incf	(AlarmInit@i+1)& (0+255),f,b
 14972                           
 14973                           ; BSR set to: 1
 14974  008D58  5107               	movf	(AlarmInit@i+1)& (0+255),w,b
 14975  008D5A  E104               	bnz	u21660
 14976  008D5C  0E13               	movlw	19
 14977  008D5E  5D06               	subwf	AlarmInit@i& (0+255),w,b
 14978  008D60  A0D8               	btfss	status,0,c
 14979  008D62  D7DE               	goto	l21866
 14980  008D64                     u21660:
 14981                           
 14982                           ; BSR set to: 1
 14983                           ;alarm.c: 577:     displayStatus = 0;
 14984  008D64  0E00               	movlw	0
 14985  008D66  0102               	movlb	2	; () banked
 14986  008D68  6F73               	movwf	(_displayStatus+1)& (0+255),b
 14987  008D6A  0E00               	movlw	0
 14988  008D6C  6F72               	movwf	_displayStatus& (0+255),b
 14989                           
 14990                           ;alarm.c: 578:     alarmPmax = 40;
 14991  008D6E  0E00               	movlw	0
 14992  008D70  6FD8               	movwf	(_alarmPmax+1)& (0+255),b
 14993  008D72  0E28               	movlw	40
 14994  008D74  6FD7               	movwf	_alarmPmax& (0+255),b
 14995                           
 14996                           ;alarm.c: 579:     alarmCheck = 0;
 14997  008D76  0E00               	movlw	0
 14998  008D78  6FA3               	movwf	_alarmCheck& (0+255),b
 14999                           
 15000                           ; BSR set to: 2
 15001                           ;alarm.c: 581:     TMR5_SetInterruptHandler(AlarmHandler);
 15002  008D7A  0E88               	movlw	low _AlarmHandler
 15003  008D7C  0101               	movlb	1	; () banked
 15004  008D7E  6F04               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15005  008D80  0E91               	movlw	high _AlarmHandler
 15006  008D82  6F05               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15007  008D84  EC1F  F056         	call	_TMR5_SetInterruptHandler	;wreg free
 15008                           
 15009                           ; BSR set to: 1
 15010                           ;alarm.c: 582:     TMR5_StartTimer();
 15011  008D88  ECFA  F057         	call	_TMR5_StartTimer	;wreg free
 15012  008D8C  0012               	return		;funcret
 15013  008D8E                     __end_of_AlarmInit:
 15014                           	opt callstack 0
 15015                           
 15016 ;; *************** function _TMR5_StartTimer *****************
 15017 ;; Defined at:
 15018 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		None
 15027 ;; Tracked objects:
 15028 ;;		On entry : 3C/2
 15029 ;;		On exit  : 3C/0
 15030 ;;		Unchanged: 3C/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:   16
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		_HistAlarm
 15043 ;;		_AlarmInit
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           	psect	text100
 15048  00AFF4                     __ptext100:
 15049                           	opt callstack 0
 15050  00AFF4                     _TMR5_StartTimer:
 15051                           	opt callstack 13
 15052                           
 15053                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 15054                           
 15055                           ;incstack = 0
 15056  00AFF4  809A               	bsf	154,0,c	;volatile
 15057  00AFF6  0012               	return		;funcret
 15058  00AFF8                     __end_of_TMR5_StartTimer:
 15059                           	opt callstack 0
 15060                           
 15061 ;; *************** function _TMR5_SetInterruptHandler *****************
 15062 ;; Defined at:
 15063 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 15066 ;;		 -> AlarmHandler(1), TMR5_DefaultInterruptHandler(1), 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;		None
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg, status,2, status,0
 15073 ;; Tracked objects:
 15074 ;;		On entry : 3F/1
 15075 ;;		On exit  : 3F/1
 15076 ;;		Unchanged: 3F/0
 15077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15078 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15082 ;;Total ram usage:        2 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:   16
 15085 ;; This function calls:
 15086 ;;		Nothing
 15087 ;; This function is called by:
 15088 ;;		_TMR5_Initialize
 15089 ;;		_AlarmInit
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           	psect	text101
 15094  00AC3E                     __ptext101:
 15095                           	opt callstack 0
 15096  00AC3E                     _TMR5_SetInterruptHandler:
 15097                           	opt callstack 12
 15098                           
 15099                           ; BSR set to: 1
 15100                           ;mcc_generated_files/tmr5.c: 179:     TMR5_InterruptHandler = InterruptHandler;
 15101                           
 15102                           ;incstack = 0
 15103  00AC3E  0060  F410  F2E1   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15104  00AC44  0060  F414  F2E2   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15105                           
 15106                           ; BSR set to: 1
 15107  00AC4A  0012               	return		;funcret
 15108  00AC4C                     __end_of_TMR5_SetInterruptHandler:
 15109                           	opt callstack 0
 15110                           
 15111 ;; *************** function _BuzzerInit *****************
 15112 ;; Defined at:
 15113 ;;		line 405 in file "buzzer.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;		None
 15116 ;; Auto vars:     Size  Location     Type
 15117 ;;		None
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  1    wreg      void 
 15120 ;; Registers used:
 15121 ;;		wreg, status,2, status,0, cstack
 15122 ;; Tracked objects:
 15123 ;;		On entry : 3F/0
 15124 ;;		On exit  : 3F/2
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;Total ram usage:        0 bytes
 15132 ;; Hardware stack levels used:    1
 15133 ;; Hardware stack levels required when called:   18
 15134 ;; This function calls:
 15135 ;;		_BuzzerOff
 15136 ;;		_CMP1_SetIntHandler
 15137 ;;		_TMR4_SetInterruptHandler
 15138 ;; This function is called by:
 15139 ;;		_AlarmInit
 15140 ;; This function uses a non-reentrant model
 15141 ;;
 15142                           
 15143                           	psect	text102
 15144  00A230                     __ptext102:
 15145                           	opt callstack 0
 15146  00A230                     _BuzzerInit:
 15147                           	opt callstack 11
 15148                           
 15149                           ; BSR set to: 0
 15150                           ;buzzer.c: 407:     TMR4_SetInterruptHandler(BuzzerHandler);
 15151                           
 15152                           ; BSR set to: 1
 15153                           ;incstack = 0
 15154  00A230  0E7E               	movlw	low _BuzzerHandler
 15155  00A232  0101               	movlb	1	; () banked
 15156  00A234  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15157  00A236  0EAF               	movlw	high _BuzzerHandler
 15158  00A238  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15159  00A23A  EC34  F056         	call	_TMR4_SetInterruptHandler	;wreg free
 15160                           
 15161                           ;buzzer.c: 408:     CMP1_SetIntHandler(BuzzerCMPHandler);
 15162  00A23E  0E50               	movlw	low _BuzzerCMPHandler
 15163  00A240  6F04               	movwf	CMP1_SetIntHandler@handler& (0+255),b
 15164  00A242  0EA5               	movlw	high _BuzzerCMPHandler
 15165  00A244  6F05               	movwf	(CMP1_SetIntHandler@handler+1)& (0+255),b
 15166  00A246  EC26  F056         	call	_CMP1_SetIntHandler	;wreg free
 15167                           
 15168                           ; BSR set to: 1
 15169                           ;buzzer.c: 409:     BuzzerOff();
 15170  00A24A  EC79  F055         	call	_BuzzerOff	;wreg free
 15171                           
 15172                           ; BSR set to: 57
 15173                           ;buzzer.c: 410:     detected = 1;
 15174  00A24E  0E01               	movlw	1
 15175  00A250  0100               	movlb	0	; () banked
 15176  00A252  6FF4               	movwf	_detected& (0+255),b
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;buzzer.c: 411:     checkController = 0;
 15180  00A254  0E00               	movlw	0
 15181  00A256  0102               	movlb	2	; () banked
 15182  00A258  6FB2               	movwf	_checkController& (0+255),b
 15183                           
 15184                           ; BSR set to: 2
 15185                           ;buzzer.c: 412:     controllerDetected = 0;
 15186  00A25A  0E00               	movlw	0
 15187  00A25C  6FB1               	movwf	_controllerDetected& (0+255),b
 15188                           
 15189                           ; BSR set to: 2
 15190  00A25E  0012               	return		;funcret
 15191  00A260                     __end_of_BuzzerInit:
 15192                           	opt callstack 0
 15193                           
 15194 ;; *************** function _CMP1_SetIntHandler *****************
 15195 ;; Defined at:
 15196 ;;		line 94 in file "mcc_generated_files/cmp1.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;  handler         2    4[BANK1 ] PTR FTN()void 
 15199 ;;		 -> BuzzerCMPHandler(1), 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;		None
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		wreg, status,2, status,0
 15206 ;; Tracked objects:
 15207 ;;		On entry : 3F/1
 15208 ;;		On exit  : 3F/1
 15209 ;;		Unchanged: 3F/0
 15210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15211 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15214 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15215 ;;Total ram usage:        2 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:   16
 15218 ;; This function calls:
 15219 ;;		Nothing
 15220 ;; This function is called by:
 15221 ;;		_BuzzerInit
 15222 ;; This function uses a non-reentrant model
 15223 ;;
 15224                           
 15225                           	psect	text103
 15226  00AC4C                     __ptext103:
 15227                           	opt callstack 0
 15228  00AC4C                     _CMP1_SetIntHandler:
 15229                           	opt callstack 12
 15230                           
 15231                           ; BSR set to: 1
 15232                           ;mcc_generated_files/cmp1.c: 95:     CMP1_InterruptHandler = handler;
 15233                           
 15234                           ; BSR set to: 2
 15235                           ;incstack = 0
 15236  00AC4C  0060  F410  F28A   	movff	CMP1_SetIntHandler@handler,_CMP1_InterruptHandler
 15237  00AC52  0060  F414  F28B   	movff	CMP1_SetIntHandler@handler+1,_CMP1_InterruptHandler+1
 15238                           
 15239                           ; BSR set to: 1
 15240  00AC58  0012               	return		;funcret
 15241  00AC5A                     __end_of_CMP1_SetIntHandler:
 15242                           	opt callstack 0
 15243                           
 15244 ;; *************** function _AlarmCheckTask *****************
 15245 ;; Defined at:
 15246 ;;		line 510 in file "alarm.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;		None
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;  type            2    7[BANK2 ] int 
 15251 ;;  id              2    9[BANK2 ] int 
 15252 ;; Return value:  Size  Location     Type
 15253 ;;                  1    wreg      void 
 15254 ;; Registers used:
 15255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15256 ;; Tracked objects:
 15257 ;;		On entry : 3D/3
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15262 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15263 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15264 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15265 ;;Total ram usage:       11 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:   28
 15268 ;; This function calls:
 15269 ;;		_AlarmClear
 15270 ;;		_AlarmSet
 15271 ;;		_AlarmUpdateLCD
 15272 ;;		_AnyAlarm
 15273 ;;		_BaterryLowAlarmHigh
 15274 ;;		_BaterryLowAlarmMed
 15275 ;;		_BatteryFailAlarm
 15276 ;;		_BuzzerClear
 15277 ;;		_BuzzerSet
 15278 ;;		_CircuitFailureAlarm
 15279 ;;		_ClearAlarmLED
 15280 ;;		_ControlFailAlarm
 15281 ;;		_EPAboveSetAlarm
 15282 ;;		_EPBelowSetAlarm
 15283 ;;		_GasFailureAlarm
 15284 ;;		_HighPressureAlarmHigh
 15285 ;;		_HighPressureAlarmLow
 15286 ;;		_HigherAlarm
 15287 ;;		_IPAboveSetAlarm
 15288 ;;		_IPBelowSetAlarm
 15289 ;;		_MonitorFailAlarm
 15290 ;;		_NoPowerSupplyAlarm
 15291 ;;		_SetAlarmLED
 15292 ;;		_SetAlarmSV1
 15293 ;;		_TdeTooLongAlarm
 15294 ;;		_TdiTooLongAlarm
 15295 ;;		_VAboveMaxAlarm
 15296 ;;		_VBelowMinAlarm
 15297 ;;		_VeryHighPressureAlarmHigh
 15298 ;;		___wmul
 15299 ;; This function is called by:
 15300 ;;		_main
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text104
 15305  004E90                     __ptext104:
 15306                           	opt callstack 0
 15307  004E90                     _AlarmCheckTask:
 15308                           	opt callstack 2
 15309                           
 15310                           ;alarm.c: 511:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 15311                           
 15312                           ; BSR set to: 1
 15313                           ;incstack = 0
 15314  004E90  0E00               	movlw	0
 15315  004E92  0102               	movlb	2	; () banked
 15316  004E94  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15317  004E96  0100               	movlb	0	; () banked
 15318  004E98  51FD               	movf	_controlSV1& (0+255),w,b
 15319  004E9A  B4D8               	btfsc	status,2,c
 15320  004E9C  D00C               	goto	l22002
 15321                           
 15322                           ; BSR set to: 0
 15323  004E9E  51FC               	movf	_monitorSV1& (0+255),w,b
 15324  004EA0  B4D8               	btfsc	status,2,c
 15325  004EA2  D009               	goto	l22002
 15326                           
 15327                           ; BSR set to: 0
 15328  004EA4  51FF               	movf	_veryHighSV1& (0+255),w,b
 15329  004EA6  B4D8               	btfsc	status,2,c
 15330  004EA8  D006               	goto	l22002
 15331                           
 15332                           ; BSR set to: 0
 15333  004EAA  51FE               	movf	_batterySV1& (0+255),w,b
 15334  004EAC  B4D8               	btfsc	status,2,c
 15335  004EAE  D003               	goto	l22002
 15336                           
 15337                           ; BSR set to: 0
 15338  004EB0  0E01               	movlw	1
 15339  004EB2  0102               	movlb	2	; () banked
 15340  004EB4  6FFB               	movwf	_AlarmCheckTask$4558& (0+255),b
 15341  004EB6                     l22002:
 15342  004EB6  0102               	movlb	2	; () banked
 15343  004EB8  51FB               	movf	_AlarmCheckTask$4558& (0+255),w,b
 15344  004EBA  B4D8               	btfsc	status,2,c
 15345  004EBC  D002               	goto	u21800
 15346  004EBE  0E01               	movlw	1
 15347  004EC0  D001               	goto	u21810
 15348  004EC2                     u21800:
 15349  004EC2  0E00               	movlw	0
 15350  004EC4                     u21810:
 15351  004EC4  EC4A  F050         	call	_SetAlarmSV1
 15352                           
 15353                           ;alarm.c: 512:     if (alarmCheck == 0) return;
 15354  004EC8  0102               	movlb	2	; () banked
 15355  004ECA  51A3               	movf	_alarmCheck& (0+255),w,b
 15356  004ECC  B4D8               	btfsc	status,2,c
 15357  004ECE  0012               	return	
 15358                           
 15359                           ; BSR set to: 2
 15360                           ;alarm.c: 513:     alarmCheck = 0;
 15361  004ED0  0E00               	movlw	0
 15362  004ED2  6FA3               	movwf	_alarmCheck& (0+255),b
 15363                           
 15364                           ;alarm.c: 515:     static int current = 0;;alarm.c: 518:     for (int id=0; id<sizeof(al
      +                          armData)/sizeof(a); id++) {
 15365  004ED4  0E00               	movlw	0
 15366  004ED6  6FFF               	movwf	(AlarmCheckTask@id+1)& (0+255),b
 15367  004ED8  0E00               	movlw	0
 15368  004EDA  6FFE               	movwf	AlarmCheckTask@id& (0+255),b
 15369  004EDC                     l22014:
 15370                           
 15371                           ; BSR set to: 2
 15372                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15373  004EDC  0060  FBF8  F104   	movff	AlarmCheckTask@id,___wmul@multiplier
 15374  004EE2  0060  FBFC  F105   	movff	AlarmCheckTask@id+1,___wmul@multiplier+1
 15375  004EE8  0E00               	movlw	0
 15376  004EEA  0101               	movlb	1	; () banked
 15377  004EEC  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15378  004EEE  0E15               	movlw	21
 15379  004EF0  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15380  004EF2  EC5E  F051         	call	___wmul	;wreg free
 15381  004EF6  0E27               	movlw	low (_alarmData+19)
 15382  004EF8  2504               	addwf	?___wmul& (0+255),w,b
 15383  004EFA  6ED9               	movwf	fsr2l,c
 15384  004EFC  0E09               	movlw	high (_alarmData+19)
 15385  004EFE  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15386  004F00  6EDA               	movwf	fsr2h,c
 15387  004F02  006F FF78  F2F9    	movff	postinc2,_AlarmCheckTask$6540
 15388  004F08  006F FF74  F2FA    	movff	postdec2,_AlarmCheckTask$6540+1
 15389                           
 15390                           ; BSR set to: 1
 15391                           ;alarm.c: 519:         if (alarmData[id].func() || testAlarm[id]) {
 15392  004F0E  D801               	call	u21838
 15393  004F10  D00A               	goto	u21839
 15394  004F12                     u21838:
 15395  004F12  0005               	push	
 15396  004F14  6EFA               	movwf	pclath,c
 15397  004F16  0102               	movlb	2	; () banked
 15398  004F18  51F9               	movf	_AlarmCheckTask$6540& (0+255),w,b
 15399  004F1A  6EFD               	movwf	tosl,c
 15400  004F1C  51FA               	movf	(_AlarmCheckTask$6540+1)& (0+255),w,b
 15401  004F1E  6EFE               	movwf	tosh,c
 15402  004F20  6AFF               	clrf	tosu,c
 15403  004F22  50FA               	movf	pclath,w,c
 15404  004F24  0012               	return		;indir
 15405  004F26                     u21839:
 15406  004F26  0900               	iorlw	0
 15407  004F28  A4D8               	btfss	status,2,c
 15408  004F2A  D00E               	goto	u21850
 15409  004F2C  90D8               	bcf	status,0,c
 15410  004F2E  0102               	movlb	2	; () banked
 15411  004F30  35FE               	rlcf	AlarmCheckTask@id& (0+255),w,b
 15412  004F32  6ED9               	movwf	fsr2l,c
 15413  004F34  35FF               	rlcf	(AlarmCheckTask@id+1)& (0+255),w,b
 15414  004F36  6EDA               	movwf	fsr2h,c
 15415  004F38  0E26               	movlw	low _testAlarm
 15416  004F3A  26D9               	addwf	fsr2l,f,c
 15417  004F3C  0E03               	movlw	high _testAlarm
 15418  004F3E  22DA               	addwfc	fsr2h,f,c
 15419  004F40  50DE               	movf	postinc2,w,c
 15420  004F42  10DE               	iorwf	postinc2,w,c
 15421  004F44  B4D8               	btfsc	status,2,c
 15422  004F46  D005               	goto	l22022
 15423  004F48                     u21850:
 15424                           
 15425                           ;alarm.c: 520:             AlarmSet(id);
 15426  004F48  0102               	movlb	2	; () banked
 15427  004F4A  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15428  004F4C  EC9D  F053         	call	_AlarmSet
 15429                           
 15430                           ;alarm.c: 521:         } else {
 15431  004F50  D003               	goto	l22024
 15432  004F52                     l22022:
 15433                           
 15434                           ; BSR set to: 2
 15435                           ;alarm.c: 522:             AlarmClear(id);
 15436  004F52  51FE               	movf	AlarmCheckTask@id& (0+255),w,b
 15437  004F54  ECAD  F053         	call	_AlarmClear
 15438  004F58                     l22024:
 15439                           
 15440                           ; BSR set to: 1
 15441                           ;alarm.c: 524:     }
 15442  004F58  0102               	movlb	2	; () banked
 15443  004F5A  4BFE               	infsnz	AlarmCheckTask@id& (0+255),f,b
 15444  004F5C  2BFF               	incf	(AlarmCheckTask@id+1)& (0+255),f,b
 15445                           
 15446                           ; BSR set to: 2
 15447  004F5E  51FF               	movf	(AlarmCheckTask@id+1)& (0+255),w,b
 15448  004F60  E104               	bnz	u21860
 15449  004F62  0E13               	movlw	19
 15450  004F64  5DFE               	subwf	AlarmCheckTask@id& (0+255),w,b
 15451  004F66  A0D8               	btfss	status,0,c
 15452  004F68  D7B9               	goto	l22014
 15453  004F6A                     u21860:
 15454                           
 15455                           ; BSR set to: 2
 15456                           ;alarm.c: 526:     AlarmUpdateLCD();
 15457  004F6A  EC60  F031         	call	_AlarmUpdateLCD	;wreg free
 15458                           
 15459                           ;alarm.c: 530:     if (AnyAlarm()) {
 15460  004F6E  EC6E  F04F         	call	_AnyAlarm	;wreg free
 15461  004F72  0900               	iorlw	0
 15462  004F74  B4D8               	btfsc	status,2,c
 15463  004F76  D044               	goto	l22050
 15464                           
 15465                           ; BSR set to: 1
 15466                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15467  004F78  EC2F  F040         	call	_HigherAlarm	;wreg free
 15468  004F7C  0060  F428  F2F7   	movff	?_HigherAlarm,_AlarmCheckTask$6536
 15469  004F82  0060  F42C  F2F8   	movff	?_HigherAlarm+1,_AlarmCheckTask$6536+1
 15470                           
 15471                           ; BSR set to: 1
 15472                           ;alarm.c: 532:         int type = alarmData[HigherAlarm()].type;
 15473  004F88  0060  FBDC  F104   	movff	_AlarmCheckTask$6536,___wmul@multiplier
 15474  004F8E  0060  FBE0  F105   	movff	_AlarmCheckTask$6536+1,___wmul@multiplier+1
 15475  004F94  0E00               	movlw	0
 15476  004F96  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15477  004F98  0E15               	movlw	21
 15478  004F9A  6F06               	movwf	___wmul@multiplicand& (0+255),b
 15479  004F9C  EC5E  F051         	call	___wmul	;wreg free
 15480  004FA0  0E25               	movlw	low (_alarmData+17)
 15481  004FA2  2504               	addwf	?___wmul& (0+255),w,b
 15482  004FA4  6ED9               	movwf	fsr2l,c
 15483  004FA6  0E09               	movlw	high (_alarmData+17)
 15484  004FA8  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 15485  004FAA  6EDA               	movwf	fsr2h,c
 15486  004FAC  006F FF78  F2FC    	movff	postinc2,AlarmCheckTask@type
 15487  004FB2  006F FF74  F2FD    	movff	postdec2,AlarmCheckTask@type+1
 15488                           
 15489                           ; BSR set to: 1
 15490                           ;alarm.c: 534:         if (type!=current) {
 15491  004FB8  0102               	movlb	2	; () banked
 15492  004FBA  5170               	movf	AlarmCheckTask@current& (0+255),w,b
 15493  004FBC  19FC               	xorwf	AlarmCheckTask@type& (0+255),w,b
 15494  004FBE  E104               	bnz	u21880
 15495  004FC0  5171               	movf	(AlarmCheckTask@current+1)& (0+255),w,b
 15496  004FC2  19FD               	xorwf	(AlarmCheckTask@type+1)& (0+255),w,b
 15497  004FC4  B4D8               	btfsc	status,2,c
 15498  004FC6  0012               	return	
 15499  004FC8                     u21880:
 15500                           
 15501                           ; BSR set to: 2
 15502                           ;alarm.c: 536:             current = type;
 15503  004FC8  0060  FBF0  F270   	movff	AlarmCheckTask@type,AlarmCheckTask@current
 15504  004FCE  0060  FBF4  F271   	movff	AlarmCheckTask@type+1,AlarmCheckTask@current+1
 15505                           
 15506                           ; BSR set to: 2
 15507                           ;alarm.c: 537:             if (muteSec == 0) {
 15508  004FD4  0101               	movlb	1	; () banked
 15509  004FD6  51EF               	movf	_muteSec& (0+255),w,b
 15510  004FD8  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
 15511  004FDA  A4D8               	btfss	status,2,c
 15512  004FDC  D005               	goto	l22044
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;alarm.c: 538:                 BuzzerSet(type);
 15516  004FDE  0102               	movlb	2	; () banked
 15517  004FE0  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15518  004FE2  EC8C  F054         	call	_BuzzerSet
 15519                           
 15520                           ;alarm.c: 539:             } else {
 15521  004FE6  D007               	goto	l22048
 15522  004FE8                     l22044:
 15523                           
 15524                           ; BSR set to: 1
 15525                           ;alarm.c: 541:                 current = 0;
 15526  004FE8  0E00               	movlw	0
 15527  004FEA  0102               	movlb	2	; () banked
 15528  004FEC  6F71               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15529  004FEE  0E00               	movlw	0
 15530  004FF0  6F70               	movwf	AlarmCheckTask@current& (0+255),b
 15531                           
 15532                           ; BSR set to: 2
 15533                           ;alarm.c: 542:                 BuzzerClear();
 15534  004FF2  EC71  F055         	call	_BuzzerClear	;wreg free
 15535  004FF6                     l22048:
 15536                           
 15537                           ;alarm.c: 544:             SetAlarmLED(type);
 15538  004FF6  0102               	movlb	2	; () banked
 15539  004FF8  51FC               	movf	AlarmCheckTask@type& (0+255),w,b
 15540  004FFA  EC2D  F056         	call	_SetAlarmLED
 15541                           
 15542                           ;alarm.c: 545:         } else { }
 15543  004FFE  0012               	return	
 15544  005000                     l22050:
 15545                           
 15546                           ; BSR set to: 1
 15547                           ;alarm.c: 548:         current = 0;
 15548  005000  0E00               	movlw	0
 15549  005002  0102               	movlb	2	; () banked
 15550  005004  6F71               	movwf	(AlarmCheckTask@current+1)& (0+255),b
 15551  005006  0E00               	movlw	0
 15552  005008  6F70               	movwf	AlarmCheckTask@current& (0+255),b
 15553                           
 15554                           ; BSR set to: 2
 15555                           ;alarm.c: 549:         BuzzerClear();
 15556  00500A  EC71  F055         	call	_BuzzerClear	;wreg free
 15557                           
 15558                           ; BSR set to: 57
 15559                           ;alarm.c: 550:         ClearAlarmLED();
 15560  00500E  ECE3  F056         	call	_ClearAlarmLED	;wreg free
 15561  005012  0012               	return		;funcret
 15562  005014                     __end_of_AlarmCheckTask:
 15563                           	opt callstack 0
 15564                           
 15565 ;; *************** function _NoPowerSupplyAlarm *****************
 15566 ;; Defined at:
 15567 ;;		line 220 in file "alarm.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;		None
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      _Bool 
 15574 ;; Registers used:
 15575 ;;		wreg, status,2
 15576 ;; Tracked objects:
 15577 ;;		On entry : 3F/2
 15578 ;;		On exit  : 3F/2
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;Total ram usage:        0 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:   16
 15588 ;; This function calls:
 15589 ;;		Nothing
 15590 ;; This function is called by:
 15591 ;;		_AlarmCheckTask
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           	psect	text105
 15596  00AFF8                     __ptext105:
 15597                           	opt callstack 0
 15598  00AFF8                     _NoPowerSupplyAlarm:
 15599                           	opt callstack 13
 15600                           
 15601                           ; BSR set to: 2
 15602                           
 15603                           ;incstack = 0
 15604  00AFF8  51A4               	movf	_noPowerSupplyAlarm& (0+255),w,b
 15605                           
 15606                           ; BSR set to: 2
 15607  00AFFA  0012               	return		;funcret
 15608  00AFFC                     __end_of_NoPowerSupplyAlarm:
 15609                           	opt callstack 0
 15610                           
 15611 ;; *************** function _VBelowMinAlarm *****************
 15612 ;; Defined at:
 15613 ;;		line 216 in file "alarm.c"
 15614 ;; Parameters:    Size  Location     Type
 15615 ;;		None
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;		None
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  1    wreg      _Bool 
 15620 ;; Registers used:
 15621 ;;		wreg, status,2
 15622 ;; Tracked objects:
 15623 ;;		On entry : 3F/2
 15624 ;;		On exit  : 3F/2
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15631 ;;Total ram usage:        0 bytes
 15632 ;; Hardware stack levels used:    1
 15633 ;; Hardware stack levels required when called:   16
 15634 ;; This function calls:
 15635 ;;		Nothing
 15636 ;; This function is called by:
 15637 ;;		_AlarmCheckTask
 15638 ;; This function uses a non-reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text106
 15642  00AFFC                     __ptext106:
 15643                           	opt callstack 0
 15644  00AFFC                     _VBelowMinAlarm:
 15645                           	opt callstack 13
 15646                           
 15647                           ; BSR set to: 2
 15648                           ;alarm.c: 217:     return vBelowMinAlarm;
 15649                           
 15650                           ; BSR set to: 2
 15651                           ;incstack = 0
 15652  00AFFC  51A6               	movf	_vBelowMinAlarm& (0+255),w,b
 15653                           
 15654                           ; BSR set to: 2
 15655  00AFFE  0012               	return		;funcret
 15656  00B000                     __end_of_VBelowMinAlarm:
 15657                           	opt callstack 0
 15658                           
 15659 ;; *************** function _VAboveMaxAlarm *****************
 15660 ;; Defined at:
 15661 ;;		line 212 in file "alarm.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;		None
 15666 ;; Return value:  Size  Location     Type
 15667 ;;                  1    wreg      _Bool 
 15668 ;; Registers used:
 15669 ;;		wreg, status,2
 15670 ;; Tracked objects:
 15671 ;;		On entry : 3F/2
 15672 ;;		On exit  : 3F/2
 15673 ;;		Unchanged: 0/0
 15674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;Total ram usage:        0 bytes
 15680 ;; Hardware stack levels used:    1
 15681 ;; Hardware stack levels required when called:   16
 15682 ;; This function calls:
 15683 ;;		Nothing
 15684 ;; This function is called by:
 15685 ;;		_AlarmCheckTask
 15686 ;; This function uses a non-reentrant model
 15687 ;;
 15688                           
 15689                           	psect	text107
 15690  00B000                     __ptext107:
 15691                           	opt callstack 0
 15692  00B000                     _VAboveMaxAlarm:
 15693                           	opt callstack 13
 15694                           
 15695                           ; BSR set to: 2
 15696                           ;alarm.c: 213:     return vAboveMaxAlarm;
 15697                           
 15698                           ; BSR set to: 2
 15699                           ;incstack = 0
 15700  00B000  51A5               	movf	_vAboveMaxAlarm& (0+255),w,b
 15701                           
 15702                           ; BSR set to: 2
 15703  00B002  0012               	return		;funcret
 15704  00B004                     __end_of_VAboveMaxAlarm:
 15705                           	opt callstack 0
 15706                           
 15707 ;; *************** function _TdeTooLongAlarm *****************
 15708 ;; Defined at:
 15709 ;;		line 206 in file "alarm.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;		None
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;		None
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      _Bool 
 15716 ;; Registers used:
 15717 ;;		wreg, status,2
 15718 ;; Tracked objects:
 15719 ;;		On entry : 3F/2
 15720 ;;		On exit  : 3F/2
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15727 ;;Total ram usage:        0 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:   16
 15730 ;; This function calls:
 15731 ;;		Nothing
 15732 ;; This function is called by:
 15733 ;;		_AlarmCheckTask
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           	psect	text108
 15738  00B004                     __ptext108:
 15739                           	opt callstack 0
 15740  00B004                     _TdeTooLongAlarm:
 15741                           	opt callstack 13
 15742                           
 15743                           ; BSR set to: 2
 15744                           ;alarm.c: 209:     return tdeTooLongAlarm;
 15745                           
 15746                           ; BSR set to: 2
 15747                           ;incstack = 0
 15748  00B004  51A7               	movf	_tdeTooLongAlarm& (0+255),w,b
 15749                           
 15750                           ; BSR set to: 2
 15751  00B006  0012               	return		;funcret
 15752  00B008                     __end_of_TdeTooLongAlarm:
 15753                           	opt callstack 0
 15754                           
 15755 ;; *************** function _TdiTooLongAlarm *****************
 15756 ;; Defined at:
 15757 ;;		line 200 in file "alarm.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;		None
 15760 ;; Auto vars:     Size  Location     Type
 15761 ;;		None
 15762 ;; Return value:  Size  Location     Type
 15763 ;;                  1    wreg      _Bool 
 15764 ;; Registers used:
 15765 ;;		wreg, status,2
 15766 ;; Tracked objects:
 15767 ;;		On entry : 3F/2
 15768 ;;		On exit  : 3F/2
 15769 ;;		Unchanged: 0/0
 15770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15775 ;;Total ram usage:        0 bytes
 15776 ;; Hardware stack levels used:    1
 15777 ;; Hardware stack levels required when called:   16
 15778 ;; This function calls:
 15779 ;;		Nothing
 15780 ;; This function is called by:
 15781 ;;		_AlarmCheckTask
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           	psect	text109
 15786  00B008                     __ptext109:
 15787                           	opt callstack 0
 15788  00B008                     _TdiTooLongAlarm:
 15789                           	opt callstack 13
 15790                           
 15791                           ; BSR set to: 2
 15792                           ;alarm.c: 203:     return tdiTooLongAlarm;
 15793                           
 15794                           ; BSR set to: 2
 15795                           ;incstack = 0
 15796  00B008  51A8               	movf	_tdiTooLongAlarm& (0+255),w,b
 15797                           
 15798                           ; BSR set to: 2
 15799  00B00A  0012               	return		;funcret
 15800  00B00C                     __end_of_TdiTooLongAlarm:
 15801                           	opt callstack 0
 15802                           
 15803 ;; *************** function _IPAboveSetAlarm *****************
 15804 ;; Defined at:
 15805 ;;		line 196 in file "alarm.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;		None
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;		None
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1    wreg      _Bool 
 15812 ;; Registers used:
 15813 ;;		wreg, status,2, status,0
 15814 ;; Tracked objects:
 15815 ;;		On entry : 3F/2
 15816 ;;		On exit  : 3F/2
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;Total ram usage:        0 bytes
 15824 ;; Hardware stack levels used:    1
 15825 ;; Hardware stack levels required when called:   16
 15826 ;; This function calls:
 15827 ;;		Nothing
 15828 ;; This function is called by:
 15829 ;;		_AlarmCheckTask
 15830 ;; This function uses a non-reentrant model
 15831 ;;
 15832                           
 15833                           	psect	text110
 15834  00A962                     __ptext110:
 15835                           	opt callstack 0
 15836  00A962                     _IPAboveSetAlarm:
 15837                           	opt callstack 13
 15838                           
 15839                           ; BSR set to: 2
 15840                           ;alarm.c: 197:     if (ipAboveSetAlarm> 3) { return 1; }
 15841                           
 15842                           ; BSR set to: 2
 15843                           ;incstack = 0
 15844  00A962  BF81               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 15845  00A964  D008               	goto	l20960
 15846  00A966  5181               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 15847  00A968  E104               	bnz	u20280
 15848  00A96A  0E04               	movlw	4
 15849  00A96C  5D80               	subwf	_ipAboveSetAlarm& (0+255),w,b
 15850  00A96E  A0D8               	btfss	status,0,c
 15851  00A970  D002               	goto	l20960
 15852  00A972                     u20280:
 15853                           
 15854                           ; BSR set to: 2
 15855  00A972  0E01               	movlw	1
 15856  00A974  0012               	return	
 15857  00A976                     l20960:
 15858                           
 15859                           ; BSR set to: 2
 15860  00A976  0E00               	movlw	0
 15861                           
 15862                           ; BSR set to: 2
 15863  00A978  0012               	return		;funcret
 15864  00A97A                     __end_of_IPAboveSetAlarm:
 15865                           	opt callstack 0
 15866                           
 15867 ;; *************** function _IPBelowSetAlarm *****************
 15868 ;; Defined at:
 15869 ;;		line 192 in file "alarm.c"
 15870 ;; Parameters:    Size  Location     Type
 15871 ;;		None
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;		None
 15874 ;; Return value:  Size  Location     Type
 15875 ;;                  1    wreg      _Bool 
 15876 ;; Registers used:
 15877 ;;		wreg, status,2, status,0
 15878 ;; Tracked objects:
 15879 ;;		On entry : 3F/2
 15880 ;;		On exit  : 3F/0
 15881 ;;		Unchanged: 0/0
 15882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15887 ;;Total ram usage:        0 bytes
 15888 ;; Hardware stack levels used:    1
 15889 ;; Hardware stack levels required when called:   16
 15890 ;; This function calls:
 15891 ;;		Nothing
 15892 ;; This function is called by:
 15893 ;;		_AlarmCheckTask
 15894 ;; This function uses a non-reentrant model
 15895 ;;
 15896                           
 15897                           	psect	text111
 15898  00A8CA                     __ptext111:
 15899                           	opt callstack 0
 15900  00A8CA                     _IPBelowSetAlarm:
 15901                           	opt callstack 13
 15902                           
 15903                           ; BSR set to: 2
 15904                           ;alarm.c: 193:     if (ipBelowSetAlarm> 3) { return 1; }
 15905                           
 15906                           ; BSR set to: 2
 15907                           ;incstack = 0
 15908  00A8CA  0100               	movlb	0	; () banked
 15909  00A8CC  BFE1               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 15910  00A8CE  D008               	goto	l20948
 15911  00A8D0  51E1               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 15912  00A8D2  E104               	bnz	u20270
 15913  00A8D4  0E04               	movlw	4
 15914  00A8D6  5DE0               	subwf	_ipBelowSetAlarm& (0+255),w,b
 15915  00A8D8  A0D8               	btfss	status,0,c
 15916  00A8DA  D002               	goto	l20948
 15917  00A8DC                     u20270:
 15918                           
 15919                           ; BSR set to: 0
 15920  00A8DC  0E01               	movlw	1
 15921  00A8DE  0012               	return	
 15922  00A8E0                     l20948:
 15923                           
 15924                           ; BSR set to: 0
 15925  00A8E0  0E00               	movlw	0
 15926                           
 15927                           ; BSR set to: 0
 15928  00A8E2  0012               	return		;funcret
 15929  00A8E4                     __end_of_IPBelowSetAlarm:
 15930                           	opt callstack 0
 15931                           
 15932 ;; *************** function _EPAboveSetAlarm *****************
 15933 ;; Defined at:
 15934 ;;		line 188 in file "alarm.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;		None
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;		None
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      _Bool 
 15941 ;; Registers used:
 15942 ;;		wreg, status,2, status,0
 15943 ;; Tracked objects:
 15944 ;;		On entry : 3F/2
 15945 ;;		On exit  : 3F/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15952 ;;Total ram usage:        0 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:   16
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_AlarmCheckTask
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text112
 15963  00A8E4                     __ptext112:
 15964                           	opt callstack 0
 15965  00A8E4                     _EPAboveSetAlarm:
 15966                           	opt callstack 13
 15967                           
 15968                           ; BSR set to: 2
 15969                           ;alarm.c: 189:     if (epAboveSetAlarm> 3) return 1;
 15970                           
 15971                           ; BSR set to: 0
 15972                           ;incstack = 0
 15973  00A8E4  0100               	movlb	0	; () banked
 15974  00A8E6  BFE3               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 15975  00A8E8  D008               	goto	l20936
 15976  00A8EA  51E3               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 15977  00A8EC  E104               	bnz	u20260
 15978  00A8EE  0E04               	movlw	4
 15979  00A8F0  5DE2               	subwf	_epAboveSetAlarm& (0+255),w,b
 15980  00A8F2  A0D8               	btfss	status,0,c
 15981  00A8F4  D002               	goto	l20936
 15982  00A8F6                     u20260:
 15983                           
 15984                           ; BSR set to: 0
 15985  00A8F6  0E01               	movlw	1
 15986  00A8F8  0012               	return	
 15987  00A8FA                     l20936:
 15988                           
 15989                           ; BSR set to: 0
 15990  00A8FA  0E00               	movlw	0
 15991                           
 15992                           ; BSR set to: 0
 15993  00A8FC  0012               	return		;funcret
 15994  00A8FE                     __end_of_EPAboveSetAlarm:
 15995                           	opt callstack 0
 15996                           
 15997 ;; *************** function _EPBelowSetAlarm *****************
 15998 ;; Defined at:
 15999 ;;		line 184 in file "alarm.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;		None
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;		None
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  1    wreg      _Bool 
 16006 ;; Registers used:
 16007 ;;		wreg, status,2, status,0
 16008 ;; Tracked objects:
 16009 ;;		On entry : 3F/2
 16010 ;;		On exit  : 3F/0
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;Total ram usage:        0 bytes
 16018 ;; Hardware stack levels used:    1
 16019 ;; Hardware stack levels required when called:   16
 16020 ;; This function calls:
 16021 ;;		Nothing
 16022 ;; This function is called by:
 16023 ;;		_AlarmCheckTask
 16024 ;; This function uses a non-reentrant model
 16025 ;;
 16026                           
 16027                           	psect	text113
 16028  00A8FE                     __ptext113:
 16029                           	opt callstack 0
 16030  00A8FE                     _EPBelowSetAlarm:
 16031                           	opt callstack 13
 16032                           
 16033                           ; BSR set to: 2
 16034                           ;alarm.c: 185:     if (epBelowSetAlarm> 3) return 1;
 16035                           
 16036                           ; BSR set to: 0
 16037                           ;incstack = 0
 16038  00A8FE  0100               	movlb	0	; () banked
 16039  00A900  BFE5               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 16040  00A902  D008               	goto	l20924
 16041  00A904  51E5               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 16042  00A906  E104               	bnz	u20250
 16043  00A908  0E04               	movlw	4
 16044  00A90A  5DE4               	subwf	_epBelowSetAlarm& (0+255),w,b
 16045  00A90C  A0D8               	btfss	status,0,c
 16046  00A90E  D002               	goto	l20924
 16047  00A910                     u20250:
 16048                           
 16049                           ; BSR set to: 0
 16050  00A910  0E01               	movlw	1
 16051  00A912  0012               	return	
 16052  00A914                     l20924:
 16053                           
 16054                           ; BSR set to: 0
 16055  00A914  0E00               	movlw	0
 16056                           
 16057                           ; BSR set to: 0
 16058  00A916  0012               	return		;funcret
 16059  00A918                     __end_of_EPBelowSetAlarm:
 16060                           	opt callstack 0
 16061                           
 16062 ;; *************** function _BaterryLowAlarmHigh *****************
 16063 ;; Defined at:
 16064 ;;		line 183 in file "alarm.c"
 16065 ;; Parameters:    Size  Location     Type
 16066 ;;		None
 16067 ;; Auto vars:     Size  Location     Type
 16068 ;;		None
 16069 ;; Return value:  Size  Location     Type
 16070 ;;                  1    wreg      _Bool 
 16071 ;; Registers used:
 16072 ;;		wreg, status,2
 16073 ;; Tracked objects:
 16074 ;;		On entry : 3F/2
 16075 ;;		On exit  : 3F/2
 16076 ;;		Unchanged: 0/0
 16077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16082 ;;Total ram usage:        0 bytes
 16083 ;; Hardware stack levels used:    1
 16084 ;; Hardware stack levels required when called:   16
 16085 ;; This function calls:
 16086 ;;		Nothing
 16087 ;; This function is called by:
 16088 ;;		_AlarmCheckTask
 16089 ;; This function uses a non-reentrant model
 16090 ;;
 16091                           
 16092                           	psect	text114
 16093  00B00C                     __ptext114:
 16094                           	opt callstack 0
 16095  00B00C                     _BaterryLowAlarmHigh:
 16096                           	opt callstack 13
 16097                           
 16098                           ; BSR set to: 2
 16099                           
 16100                           ; BSR set to: 0
 16101                           ;incstack = 0
 16102  00B00C  51A9               	movf	_baterryLowAlarmHigh& (0+255),w,b
 16103                           
 16104                           ; BSR set to: 2
 16105  00B00E  0012               	return		;funcret
 16106  00B010                     __end_of_BaterryLowAlarmHigh:
 16107                           	opt callstack 0
 16108                           
 16109 ;; *************** function _BaterryLowAlarmMed *****************
 16110 ;; Defined at:
 16111 ;;		line 182 in file "alarm.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;		None
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;		None
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      _Bool 
 16118 ;; Registers used:
 16119 ;;		wreg, status,2
 16120 ;; Tracked objects:
 16121 ;;		On entry : 3F/2
 16122 ;;		On exit  : 3F/2
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;Total ram usage:        0 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:   16
 16132 ;; This function calls:
 16133 ;;		Nothing
 16134 ;; This function is called by:
 16135 ;;		_AlarmCheckTask
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text115
 16140  00B010                     __ptext115:
 16141                           	opt callstack 0
 16142  00B010                     _BaterryLowAlarmMed:
 16143                           	opt callstack 13
 16144                           
 16145                           ; BSR set to: 2
 16146                           
 16147                           ; BSR set to: 2
 16148                           ;incstack = 0
 16149  00B010  51AA               	movf	_baterryLowAlarmMed& (0+255),w,b
 16150                           
 16151                           ; BSR set to: 2
 16152  00B012  0012               	return		;funcret
 16153  00B014                     __end_of_BaterryLowAlarmMed:
 16154                           	opt callstack 0
 16155                           
 16156 ;; *************** function _CircuitFailureAlarm *****************
 16157 ;; Defined at:
 16158 ;;		line 179 in file "alarm.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;		None
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;		None
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1    wreg      _Bool 
 16165 ;; Registers used:
 16166 ;;		wreg, status,2
 16167 ;; Tracked objects:
 16168 ;;		On entry : 3F/2
 16169 ;;		On exit  : 3F/2
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16176 ;;Total ram usage:        0 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; Hardware stack levels required when called:   16
 16179 ;; This function calls:
 16180 ;;		Nothing
 16181 ;; This function is called by:
 16182 ;;		_MuteAlarm
 16183 ;;		i2_MuteAlarm
 16184 ;;		_AlarmCheckTask
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text116
 16189  00B014                     __ptext116:
 16190                           	opt callstack 0
 16191  00B014                     _CircuitFailureAlarm:
 16192                           	opt callstack 13
 16193                           
 16194                           ; BSR set to: 2
 16195                           ;alarm.c: 180:     return circuitFailureAlarm;
 16196                           
 16197                           ; BSR set to: 2
 16198                           ;incstack = 0
 16199  00B014  51AB               	movf	_circuitFailureAlarm& (0+255),w,b
 16200                           
 16201                           ; BSR set to: 2
 16202  00B016  0012               	return		;funcret
 16203  00B018                     __end_of_CircuitFailureAlarm:
 16204                           	opt callstack 0
 16205                           
 16206 ;; *************** function _HighPressureAlarmHigh *****************
 16207 ;; Defined at:
 16208 ;;		line 172 in file "alarm.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;		None
 16211 ;; Auto vars:     Size  Location     Type
 16212 ;;		None
 16213 ;; Return value:  Size  Location     Type
 16214 ;;                  1    wreg      _Bool 
 16215 ;; Registers used:
 16216 ;;		wreg, status,2
 16217 ;; Tracked objects:
 16218 ;;		On entry : 3F/2
 16219 ;;		On exit  : 3F/2
 16220 ;;		Unchanged: 0/0
 16221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16226 ;;Total ram usage:        0 bytes
 16227 ;; Hardware stack levels used:    1
 16228 ;; Hardware stack levels required when called:   16
 16229 ;; This function calls:
 16230 ;;		Nothing
 16231 ;; This function is called by:
 16232 ;;		_MuteAlarm
 16233 ;;		i2_MuteAlarm
 16234 ;;		_AlarmCheckTask
 16235 ;; This function uses a non-reentrant model
 16236 ;;
 16237                           
 16238                           	psect	text117
 16239  00B018                     __ptext117:
 16240                           	opt callstack 0
 16241  00B018                     _HighPressureAlarmHigh:
 16242                           	opt callstack 13
 16243                           
 16244                           ; BSR set to: 2
 16245                           ;alarm.c: 174:     return highPressureAlarmHigh;
 16246                           
 16247                           ; BSR set to: 2
 16248                           ;incstack = 0
 16249  00B018  51AD               	movf	_highPressureAlarmHigh& (0+255),w,b
 16250                           
 16251                           ; BSR set to: 2
 16252  00B01A  0012               	return		;funcret
 16253  00B01C                     __end_of_HighPressureAlarmHigh:
 16254                           	opt callstack 0
 16255                           
 16256 ;; *************** function _HighPressureAlarmLow *****************
 16257 ;; Defined at:
 16258 ;;		line 146 in file "alarm.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;  max             2   23[BANK1 ] short 
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      _Bool 
 16265 ;; Registers used:
 16266 ;;		wreg, status,2, status,0, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 3F/2
 16269 ;;		On exit  : 3F/2
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16273 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16275 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;Total ram usage:        3 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:   18
 16279 ;; This function calls:
 16280 ;;		_GetMaxPressure
 16281 ;;		_SetHighPressureAlarmHigh
 16282 ;;		_SetVeryHighPressureAlarmHigh
 16283 ;; This function is called by:
 16284 ;;		_AlarmCheckTask
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           	psect	text118
 16289  008C90                     __ptext118:
 16290                           	opt callstack 0
 16291  008C90                     _HighPressureAlarmLow:
 16292                           	opt callstack 11
 16293                           
 16294                           ; BSR set to: 2
 16295                           ;alarm.c: 147:     static int count = 0;;alarm.c: 148:     static int countVery = 0;;ala
      +                          rm.c: 149:     int16_t max = GetMaxPressure();
 16296                           
 16297                           ; BSR set to: 2
 16298                           ;incstack = 0
 16299  008C90  ECB4  F04E         	call	_GetMaxPressure	;wreg free
 16300  008C94  0060  F448  F117   	movff	?_GetMaxPressure,HighPressureAlarmLow@max
 16301  008C9A  0060  F44C  F118   	movff	?_GetMaxPressure+1,HighPressureAlarmLow@max+1
 16302                           
 16303                           ; BSR set to: 2
 16304                           ;alarm.c: 150:     if (max>alarmPmax) {
 16305  008CA0  0101               	movlb	1	; () banked
 16306  008CA2  5117               	movf	HighPressureAlarmLow@max& (0+255),w,b
 16307  008CA4  0102               	movlb	2	; () banked
 16308  008CA6  5DD7               	subwf	_alarmPmax& (0+255),w,b
 16309  008CA8  51D8               	movf	(_alarmPmax+1)& (0+255),w,b
 16310  008CAA  0A80               	xorlw	128
 16311  008CAC  0101               	movlb	1	; () banked
 16312  008CAE  6F16               	movwf	??_HighPressureAlarmLow& (0+255),b
 16313  008CB0  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16314  008CB2  0A80               	xorlw	128
 16315  008CB4  5916               	subwfb	??_HighPressureAlarmLow& (0+255),w,b
 16316  008CB6  B0D8               	btfsc	status,0,c
 16317  008CB8  D006               	goto	l20878
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;alarm.c: 151:         highPressureAlarmLow = 1;
 16321  008CBA  0E01               	movlw	1
 16322  008CBC  0102               	movlb	2	; () banked
 16323  008CBE  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16324                           
 16325                           ; BSR set to: 2
 16326                           ;alarm.c: 152:         count ++;
 16327  008CC0  4B76               	infsnz	HighPressureAlarmLow@count& (0+255),f,b
 16328  008CC2  2B77               	incf	(HighPressureAlarmLow@count+1)& (0+255),f,b
 16329                           
 16330                           ;alarm.c: 153:     } else
 16331  008CC4  D007               	goto	l20880
 16332  008CC6                     l20878:
 16333                           
 16334                           ; BSR set to: 1
 16335                           ;alarm.c: 154:     {;alarm.c: 155:         highPressureAlarmLow= 0;
 16336  008CC6  0E00               	movlw	0
 16337  008CC8  0102               	movlb	2	; () banked
 16338  008CCA  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 16339                           
 16340                           ;alarm.c: 156:         count = 0;
 16341  008CCC  0E00               	movlw	0
 16342  008CCE  6F77               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16343  008CD0  0E00               	movlw	0
 16344  008CD2  6F76               	movwf	HighPressureAlarmLow@count& (0+255),b
 16345  008CD4                     l20880:
 16346                           
 16347                           ; BSR set to: 2
 16348                           ;alarm.c: 158:     if (count >= 3) {
 16349  008CD4  BF77               	btfsc	(HighPressureAlarmLow@count+1)& (0+255),7,b
 16350  008CD6  D00C               	goto	l20886
 16351  008CD8  5177               	movf	(HighPressureAlarmLow@count+1)& (0+255),w,b
 16352  008CDA  E104               	bnz	u20230
 16353  008CDC  0E03               	movlw	3
 16354  008CDE  5D76               	subwf	HighPressureAlarmLow@count& (0+255),w,b
 16355  008CE0  A0D8               	btfss	status,0,c
 16356  008CE2  D006               	goto	l20886
 16357  008CE4                     u20230:
 16358                           
 16359                           ; BSR set to: 2
 16360                           ;alarm.c: 159:         SetHighPressureAlarmHigh();
 16361  008CE4  ECA1  F057         	call	_SetHighPressureAlarmHigh	;wreg free
 16362                           
 16363                           ; BSR set to: 2
 16364                           ;alarm.c: 160:         count = 3;
 16365  008CE8  0E00               	movlw	0
 16366  008CEA  6F77               	movwf	(HighPressureAlarmLow@count+1)& (0+255),b
 16367  008CEC  0E03               	movlw	3
 16368  008CEE  6F76               	movwf	HighPressureAlarmLow@count& (0+255),b
 16369  008CF0                     l20886:
 16370                           
 16371                           ; BSR set to: 2
 16372                           ;alarm.c: 164:     if (max>70){
 16373  008CF0  0101               	movlb	1	; () banked
 16374  008CF2  BF18               	btfsc	(HighPressureAlarmLow@max+1)& (0+255),7,b
 16375  008CF4  D00B               	goto	l20892
 16376  008CF6  5118               	movf	(HighPressureAlarmLow@max+1)& (0+255),w,b
 16377  008CF8  E104               	bnz	u20240
 16378  008CFA  0E47               	movlw	71
 16379  008CFC  5D17               	subwf	HighPressureAlarmLow@max& (0+255),w,b
 16380  008CFE  A0D8               	btfss	status,0,c
 16381  008D00  D005               	goto	l20892
 16382  008D02                     u20240:
 16383                           
 16384                           ; BSR set to: 1
 16385                           ;alarm.c: 165:         SetVeryHighPressureAlarmHigh();
 16386  008D02  EC33  F057         	call	_SetVeryHighPressureAlarmHigh	;wreg free
 16387                           
 16388                           ; BSR set to: 2
 16389                           ;alarm.c: 166:         veryHighSV1 = 0;
 16390  008D06  0E00               	movlw	0
 16391  008D08  0100               	movlb	0	; () banked
 16392  008D0A  6FFF               	movwf	_veryHighSV1& (0+255),b
 16393  008D0C                     l20892:
 16394                           
 16395                           ;alarm.c: 170:     return highPressureAlarmLow;
 16396  008D0C  0102               	movlb	2	; () banked
 16397  008D0E  51AE               	movf	_highPressureAlarmLow& (0+255),w,b
 16398                           
 16399                           ; BSR set to: 2
 16400  008D10  0012               	return		;funcret
 16401  008D12                     __end_of_HighPressureAlarmLow:
 16402                           	opt callstack 0
 16403                           
 16404 ;; *************** function _GasFailureAlarm *****************
 16405 ;; Defined at:
 16406 ;;		line 143 in file "alarm.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;		None
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;		None
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  1    wreg      _Bool 
 16413 ;; Registers used:
 16414 ;;		wreg, status,2
 16415 ;; Tracked objects:
 16416 ;;		On entry : 3F/2
 16417 ;;		On exit  : 3F/2
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;Total ram usage:        0 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:   16
 16427 ;; This function calls:
 16428 ;;		Nothing
 16429 ;; This function is called by:
 16430 ;;		_MuteAlarm
 16431 ;;		i2_MuteAlarm
 16432 ;;		_AlarmCheckTask
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text119
 16437  00B01C                     __ptext119:
 16438                           	opt callstack 0
 16439  00B01C                     _GasFailureAlarm:
 16440                           	opt callstack 13
 16441                           
 16442                           ; BSR set to: 2
 16443                           
 16444                           ; BSR set to: 2
 16445                           ;incstack = 0
 16446  00B01C  51AF               	movf	_gasFailureAlarm& (0+255),w,b
 16447                           
 16448                           ; BSR set to: 2
 16449  00B01E  0012               	return		;funcret
 16450  00B020                     __end_of_GasFailureAlarm:
 16451                           	opt callstack 0
 16452                           
 16453 ;; *************** function _ControlFailAlarm *****************
 16454 ;; Defined at:
 16455 ;;		line 136 in file "alarm.c"
 16456 ;; Parameters:    Size  Location     Type
 16457 ;;		None
 16458 ;; Auto vars:     Size  Location     Type
 16459 ;;		None
 16460 ;; Return value:  Size  Location     Type
 16461 ;;                  1    wreg      _Bool 
 16462 ;; Registers used:
 16463 ;;		wreg, status,2
 16464 ;; Tracked objects:
 16465 ;;		On entry : 3F/2
 16466 ;;		On exit  : 3F/0
 16467 ;;		Unchanged: 0/0
 16468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16473 ;;Total ram usage:        0 bytes
 16474 ;; Hardware stack levels used:    1
 16475 ;; Hardware stack levels required when called:   16
 16476 ;; This function calls:
 16477 ;;		Nothing
 16478 ;; This function is called by:
 16479 ;;		_MuteAlarm
 16480 ;;		i2_MuteAlarm
 16481 ;;		_AlarmCheckTask
 16482 ;; This function uses a non-reentrant model
 16483 ;;
 16484                           
 16485                           	psect	text120
 16486  00AAD2                     __ptext120:
 16487                           	opt callstack 0
 16488  00AAD2                     _ControlFailAlarm:
 16489                           	opt callstack 13
 16490                           
 16491                           ; BSR set to: 2
 16492                           ;alarm.c: 137:     if (controlFailAlarm) {
 16493                           
 16494                           ; BSR set to: 2
 16495                           ;incstack = 0
 16496  00AAD2  0100               	movlb	0	; () banked
 16497  00AAD4  51F2               	movf	_controlFailAlarm& (0+255),w,b
 16498  00AAD6  B4D8               	btfsc	status,2,c
 16499  00AAD8  D002               	goto	l2387
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;alarm.c: 138:         controlSV1=0;
 16503  00AADA  0E00               	movlw	0
 16504  00AADC  6FFD               	movwf	_controlSV1& (0+255),b
 16505  00AADE                     l2387:
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;alarm.c: 140:     return controlFailAlarm;
 16509  00AADE  51F2               	movf	_controlFailAlarm& (0+255),w,b
 16510                           
 16511                           ; BSR set to: 0
 16512  00AAE0  0012               	return		;funcret
 16513  00AAE2                     __end_of_ControlFailAlarm:
 16514                           	opt callstack 0
 16515                           
 16516 ;; *************** function _MonitorFailAlarm *****************
 16517 ;; Defined at:
 16518 ;;		line 107 in file "alarm.c"
 16519 ;; Parameters:    Size  Location     Type
 16520 ;;		None
 16521 ;; Auto vars:     Size  Location     Type
 16522 ;;  v5              2  132[BANK1 ] short 
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  1    wreg      _Bool 
 16525 ;; Registers used:
 16526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16527 ;; Tracked objects:
 16528 ;;		On entry : 3F/2
 16529 ;;		On exit  : 3F/1
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;Total ram usage:        3 bytes
 16537 ;; Hardware stack levels used:    1
 16538 ;; Hardware stack levels required when called:   25
 16539 ;; This function calls:
 16540 ;;		_AdcDataReady
 16541 ;;		_Get5V
 16542 ;;		_printf
 16543 ;; This function is called by:
 16544 ;;		_MuteAlarm
 16545 ;;		i2_MuteAlarm
 16546 ;;		_AlarmCheckTask
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           	psect	text121
 16551  007968                     __ptext121:
 16552                           	opt callstack 0
 16553  007968                     _MonitorFailAlarm:
 16554                           	opt callstack 4
 16555                           
 16556                           ; BSR set to: 2
 16557                           ;alarm.c: 108:     int16_t v5;;alarm.c: 109:     static _Bool monitorFailAlarm5V = 0;;al
      +                          arm.c: 110:     static int cnt5v = 0;;alarm.c: 111:     if (AdcDataReady(1)) {
 16558                           
 16559                           ; BSR set to: 0
 16560                           ;incstack = 0
 16561  007968  0E00               	movlw	0
 16562  00796A  0101               	movlb	1	; () banked
 16563  00796C  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16564  00796E  0E01               	movlw	1
 16565  007970  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16566  007972  ECFB  F051         	call	_AdcDataReady	;wreg free
 16567  007976  0900               	iorlw	0
 16568  007978  B4D8               	btfsc	status,2,c
 16569  00797A  D049               	goto	l2375
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;alarm.c: 112:         v5= Get5V();
 16573  00797C  ECDA  F03B         	call	_Get5V	;wreg free
 16574  007980  0060  F478  F184   	movff	?_Get5V,MonitorFailAlarm@v5
 16575  007986  0060  F47C  F185   	movff	?_Get5V+1,MonitorFailAlarm@v5+1
 16576                           
 16577                           ; BSR set to: 1
 16578                           ;alarm.c: 113:         if (v5>3000) {
 16579  00798C  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16580  00798E  D03F               	goto	l2375
 16581  007990  0EB9               	movlw	185
 16582  007992  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16583  007994  0E0B               	movlw	11
 16584  007996  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16585  007998  A0D8               	btfss	status,0,c
 16586  00799A  D039               	goto	l2375
 16587                           
 16588                           ; BSR set to: 1
 16589                           ;alarm.c: 114:             if (v5 < 4700/2 || v5 > 5300/2) {
 16590  00799C  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16591  00799E  D00E               	goto	u20150
 16592  0079A0  0E2E               	movlw	46
 16593  0079A2  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16594  0079A4  0E09               	movlw	9
 16595  0079A6  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16596  0079A8  A0D8               	btfss	status,0,c
 16597  0079AA  D008               	goto	u20150
 16598                           
 16599                           ; BSR set to: 1
 16600  0079AC  BF85               	btfsc	(MonitorFailAlarm@v5+1)& (0+255),7,b
 16601  0079AE  D027               	goto	l20852
 16602  0079B0  0E5B               	movlw	91
 16603  0079B2  5D84               	subwf	MonitorFailAlarm@v5& (0+255),w,b
 16604  0079B4  0E0A               	movlw	10
 16605  0079B6  5985               	subwfb	(MonitorFailAlarm@v5+1)& (0+255),w,b
 16606  0079B8  A0D8               	btfss	status,0,c
 16607  0079BA  D021               	goto	l20852
 16608  0079BC                     u20150:
 16609                           
 16610                           ; BSR set to: 1
 16611                           ;alarm.c: 115:                 cnt5v++;
 16612  0079BC  0102               	movlb	2	; () banked
 16613  0079BE  4B78               	infsnz	MonitorFailAlarm@cnt5v& (0+255),f,b
 16614  0079C0  2B79               	incf	(MonitorFailAlarm@cnt5v+1)& (0+255),f,b
 16615                           
 16616                           ; BSR set to: 2
 16617                           ;alarm.c: 116:                 if (cnt5v>3) {
 16618  0079C2  BF79               	btfsc	(MonitorFailAlarm@cnt5v+1)& (0+255),7,b
 16619  0079C4  D024               	goto	l2375
 16620  0079C6  5179               	movf	(MonitorFailAlarm@cnt5v+1)& (0+255),w,b
 16621  0079C8  E104               	bnz	u20160
 16622  0079CA  0E04               	movlw	4
 16623  0079CC  5D78               	subwf	MonitorFailAlarm@cnt5v& (0+255),w,b
 16624  0079CE  A0D8               	btfss	status,0,c
 16625  0079D0  D01E               	goto	l2375
 16626  0079D2                     u20160:
 16627                           
 16628                           ; BSR set to: 2
 16629                           ;alarm.c: 117:                     monitorFailAlarm5V = 1;
 16630  0079D2  0E01               	movlw	1
 16631  0079D4  0100               	movlb	0	; () banked
 16632  0079D6  6FF1               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16633                           
 16634                           ;alarm.c: 118:                     cnt5v = 4;
 16635  0079D8  0E00               	movlw	0
 16636  0079DA  0102               	movlb	2	; () banked
 16637  0079DC  6F79               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16638  0079DE  0E04               	movlw	4
 16639  0079E0  6F78               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16640                           
 16641                           ; BSR set to: 2
 16642                           ;alarm.c: 119:                     printf("\r\nFail 5V : %d \r\n", v5);
 16643  0079E2  0EAB               	movlw	low STR_22
 16644  0079E4  0101               	movlb	1	; () banked
 16645  0079E6  6F71               	movwf	printf@fmt& (0+255),b
 16646  0079E8  0EFE               	movlw	high STR_22
 16647  0079EA  6F72               	movwf	(printf@fmt+1)& (0+255),b
 16648  0079EC  0060  F610  F173   	movff	MonitorFailAlarm@v5,?_printf+2
 16649  0079F2  0060  F614  F174   	movff	MonitorFailAlarm@v5+1,?_printf+3
 16650  0079F8  ECE6  F051         	call	_printf	;wreg free
 16651  0079FC  D008               	goto	l2375
 16652  0079FE                     l20852:
 16653                           
 16654                           ; BSR set to: 1
 16655                           ;alarm.c: 122:             {;alarm.c: 123:                 monitorFailAlarm5V = 0;
 16656  0079FE  0E00               	movlw	0
 16657  007A00  0100               	movlb	0	; () banked
 16658  007A02  6FF1               	movwf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),b
 16659                           
 16660                           ;alarm.c: 124:                 cnt5v = 0;
 16661  007A04  0E00               	movlw	0
 16662  007A06  0102               	movlb	2	; () banked
 16663  007A08  6F79               	movwf	(MonitorFailAlarm@cnt5v+1)& (0+255),b
 16664  007A0A  0E00               	movlw	0
 16665  007A0C  6F78               	movwf	MonitorFailAlarm@cnt5v& (0+255),b
 16666  007A0E                     l2375:
 16667                           
 16668                           ;alarm.c: 128:     monitorSV1 = !monitorFailAlarm5V;
 16669  007A0E  0100               	movlb	0	; () banked
 16670  007A10  51F1               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16671  007A12  A4D8               	btfss	status,2,c
 16672  007A14  D002               	goto	u20170
 16673  007A16  0E01               	movlw	1
 16674  007A18  D001               	goto	u20180
 16675  007A1A                     u20170:
 16676  007A1A  0E00               	movlw	0
 16677  007A1C                     u20180:
 16678  007A1C  6FFC               	movwf	_monitorSV1& (0+255),b
 16679                           
 16680                           ;alarm.c: 133:     return monitorFailAlarm || monitorFailAlarm5V;
 16681  007A1E  0E01               	movlw	1
 16682  007A20  0101               	movlb	1	; () banked
 16683  007A22  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16684  007A24  0102               	movlb	2	; () banked
 16685  007A26  51B0               	movf	_monitorFailAlarm& (0+255),w,b
 16686  007A28  A4D8               	btfss	status,2,c
 16687  007A2A  D007               	goto	l2383
 16688                           
 16689                           ; BSR set to: 2
 16690  007A2C  0100               	movlb	0	; () banked
 16691  007A2E  51F1               	movf	MonitorFailAlarm@monitorFailAlarm5V& (0+255),w,b
 16692  007A30  A4D8               	btfss	status,2,c
 16693  007A32  D003               	goto	l2383
 16694                           
 16695                           ; BSR set to: 0
 16696  007A34  0E00               	movlw	0
 16697  007A36  0101               	movlb	1	; () banked
 16698  007A38  6F83               	movwf	_MonitorFailAlarm$4446& (0+255),b
 16699  007A3A                     l2383:
 16700  007A3A  0101               	movlb	1	; () banked
 16701  007A3C  5183               	movf	_MonitorFailAlarm$4446& (0+255),w,b
 16702                           
 16703                           ; BSR set to: 1
 16704  007A3E  0012               	return		;funcret
 16705  007A40                     __end_of_MonitorFailAlarm:
 16706                           	opt callstack 0
 16707                           
 16708 ;; *************** function _BatteryFailAlarm *****************
 16709 ;; Defined at:
 16710 ;;		line 58 in file "alarm.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;		None
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;  bat             2   44[BANK1 ] short 
 16715 ;; Return value:  Size  Location     Type
 16716 ;;                  1    wreg      _Bool 
 16717 ;; Registers used:
 16718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16719 ;; Tracked objects:
 16720 ;;		On entry : 3F/2
 16721 ;;		On exit  : 3F/0
 16722 ;;		Unchanged: 0/0
 16723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16725 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16727 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16728 ;;Total ram usage:        2 bytes
 16729 ;; Hardware stack levels used:    1
 16730 ;; Hardware stack levels required when called:   19
 16731 ;; This function calls:
 16732 ;;		_AdcDataReady
 16733 ;;		_ClearBaterryLowAlarmHigh
 16734 ;;		_ClearBaterryLowAlarmMed
 16735 ;;		_ClearBatteryFailAlarm
 16736 ;;		_ClearNoPowerSupplyAlarm
 16737 ;;		_Get12V
 16738 ;;		_SetBaterryLowAlarmHigh
 16739 ;;		_SetBaterryLowAlarmMed
 16740 ;;		_SetBatteryFailAlarm
 16741 ;;		_SetNoPowerSupplyAlarm
 16742 ;; This function is called by:
 16743 ;;		_AlarmCheckTask
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           	psect	text122
 16748  00751A                     __ptext122:
 16749                           	opt callstack 0
 16750  00751A                     _BatteryFailAlarm:
 16751                           	opt callstack 10
 16752                           
 16753                           ; BSR set to: 2
 16754                           ;alarm.c: 59:     static int timeBattery = 0;;alarm.c: 60:     static int timeBelow10 = 
      +                          0;;alarm.c: 61:     static int timeFail = 0;;alarm.c: 62:     int16_t bat;;alarm.c: 64: 
      +                              if (AdcDataReady(3)) {
 16755                           
 16756                           ; BSR set to: 1
 16757                           ;incstack = 0
 16758  00751A  0E00               	movlw	0
 16759  00751C  0101               	movlb	1	; () banked
 16760  00751E  6F0B               	movwf	(AdcDataReady@id+1)& (0+255),b
 16761  007520  0E03               	movlw	3
 16762  007522  6F0A               	movwf	AdcDataReady@id& (0+255),b
 16763  007524  ECFB  F051         	call	_AdcDataReady	;wreg free
 16764  007528  0900               	iorlw	0
 16765  00752A  B4D8               	btfsc	status,2,c
 16766  00752C  D064               	goto	l20826
 16767                           
 16768                           ; BSR set to: 1
 16769                           ;alarm.c: 65:         bat= Get12V();
 16770  00752E  EC9C  F036         	call	_Get12V	;wreg free
 16771  007532  0060  F478  F12C   	movff	?_Get12V,BatteryFailAlarm@bat
 16772  007538  0060  F47C  F12D   	movff	?_Get12V+1,BatteryFailAlarm@bat+1
 16773                           
 16774                           ; BSR set to: 1
 16775                           ;alarm.c: 67:         if (bat < 11300) {
 16776  00753E  BF2D               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16777  007540  D006               	goto	u20070
 16778  007542  0E24               	movlw	36
 16779  007544  5D2C               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16780  007546  0E2C               	movlw	44
 16781  007548  592D               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16782  00754A  B0D8               	btfsc	status,0,c
 16783  00754C  D010               	goto	l20796
 16784  00754E                     u20070:
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;alarm.c: 68:             timeFail++;
 16788  00754E  0102               	movlb	2	; () banked
 16789  007550  4B7A               	infsnz	BatteryFailAlarm@timeFail& (0+255),f,b
 16790  007552  2B7B               	incf	(BatteryFailAlarm@timeFail+1)& (0+255),f,b
 16791                           
 16792                           ; BSR set to: 2
 16793                           ;alarm.c: 69:             if (timeFail>10*60) {
 16794  007554  BF7B               	btfsc	(BatteryFailAlarm@timeFail+1)& (0+255),7,b
 16795  007556  D015               	goto	l20800
 16796  007558  0E59               	movlw	89
 16797  00755A  5D7A               	subwf	BatteryFailAlarm@timeFail& (0+255),w,b
 16798  00755C  0E02               	movlw	2
 16799  00755E  597B               	subwfb	(BatteryFailAlarm@timeFail+1)& (0+255),w,b
 16800  007560  A0D8               	btfss	status,0,c
 16801  007562  D00F               	goto	l20800
 16802                           
 16803                           ; BSR set to: 2
 16804                           ;alarm.c: 70:                 SetBatteryFailAlarm ();
 16805  007564  EC47  F057         	call	_SetBatteryFailAlarm	;wreg free
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;alarm.c: 71:                 batterySV1=0;
 16809  007568  0E00               	movlw	0
 16810  00756A  6FFE               	movwf	_batterySV1& (0+255),b
 16811  00756C  D00A               	goto	l20800
 16812  00756E                     l20796:
 16813                           
 16814                           ; BSR set to: 1
 16815                           ;alarm.c: 74:             timeFail = 0;
 16816  00756E  0E00               	movlw	0
 16817  007570  0102               	movlb	2	; () banked
 16818  007572  6F7B               	movwf	(BatteryFailAlarm@timeFail+1)& (0+255),b
 16819  007574  0E00               	movlw	0
 16820  007576  6F7A               	movwf	BatteryFailAlarm@timeFail& (0+255),b
 16821                           
 16822                           ;alarm.c: 75:             batterySV1=1;
 16823  007578  0E01               	movlw	1
 16824  00757A  0100               	movlb	0	; () banked
 16825  00757C  6FFE               	movwf	_batterySV1& (0+255),b
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;alarm.c: 76:             ClearBatteryFailAlarm ();
 16829  00757E  ECB0  F057         	call	_ClearBatteryFailAlarm	;wreg free
 16830  007582                     l20800:
 16831                           
 16832                           ;alarm.c: 79:         if (bat < 11500) {
 16833  007582  0101               	movlb	1	; () banked
 16834  007584  BF2D               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16835  007586  D006               	goto	u20090
 16836  007588  0EEC               	movlw	236
 16837  00758A  5D2C               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16838  00758C  0E2C               	movlw	44
 16839  00758E  592D               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16840  007590  B0D8               	btfsc	status,0,c
 16841  007592  D012               	goto	l20810
 16842  007594                     u20090:
 16843                           
 16844                           ; BSR set to: 1
 16845                           ;alarm.c: 80:             timeBelow10++;
 16846  007594  0102               	movlb	2	; () banked
 16847  007596  4B7C               	infsnz	BatteryFailAlarm@timeBelow10& (0+255),f,b
 16848  007598  2B7D               	incf	(BatteryFailAlarm@timeBelow10+1)& (0+255),f,b
 16849                           
 16850                           ; BSR set to: 2
 16851                           ;alarm.c: 81:             SetBaterryLowAlarmMed();
 16852  00759A  ECA7  F057         	call	_SetBaterryLowAlarmMed	;wreg free
 16853                           
 16854                           ; BSR set to: 2
 16855                           ;alarm.c: 82:             if (timeBelow10>3*60) {
 16856  00759E  BF7D               	btfsc	(BatteryFailAlarm@timeBelow10+1)& (0+255),7,b
 16857  0075A0  D014               	goto	l20816
 16858  0075A2  517D               	movf	(BatteryFailAlarm@timeBelow10+1)& (0+255),w,b
 16859  0075A4  E104               	bnz	u20100
 16860  0075A6  0EB5               	movlw	181
 16861  0075A8  5D7C               	subwf	BatteryFailAlarm@timeBelow10& (0+255),w,b
 16862  0075AA  A0D8               	btfss	status,0,c
 16863  0075AC  D00E               	goto	l20816
 16864  0075AE                     u20100:
 16865                           
 16866                           ; BSR set to: 2
 16867                           ;alarm.c: 83:                 SetBaterryLowAlarmHigh();
 16868  0075AE  ECAA  F057         	call	_SetBaterryLowAlarmHigh	;wreg free
 16869                           
 16870                           ;alarm.c: 84:                 ClearBaterryLowAlarmHigh();
 16871  0075B2  ECB6  F057         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16872  0075B6  D009               	goto	l20816
 16873  0075B8                     l20810:
 16874                           
 16875                           ; BSR set to: 1
 16876                           ;alarm.c: 87:             timeBelow10 = 0;
 16877  0075B8  0E00               	movlw	0
 16878  0075BA  0102               	movlb	2	; () banked
 16879  0075BC  6F7D               	movwf	(BatteryFailAlarm@timeBelow10+1)& (0+255),b
 16880  0075BE  0E00               	movlw	0
 16881  0075C0  6F7C               	movwf	BatteryFailAlarm@timeBelow10& (0+255),b
 16882                           
 16883                           ; BSR set to: 2
 16884                           ;alarm.c: 88:             ClearBaterryLowAlarmMed();
 16885  0075C2  ECB3  F057         	call	_ClearBaterryLowAlarmMed	;wreg free
 16886                           
 16887                           ; BSR set to: 2
 16888                           ;alarm.c: 89:             ClearBaterryLowAlarmHigh();
 16889  0075C6  ECB6  F057         	call	_ClearBaterryLowAlarmHigh	;wreg free
 16890  0075CA                     l20816:
 16891                           
 16892                           ; BSR set to: 2
 16893                           ;alarm.c: 92:         if (bat < 13250) {
 16894  0075CA  0101               	movlb	1	; () banked
 16895  0075CC  BF2D               	btfsc	(BatteryFailAlarm@bat+1)& (0+255),7,b
 16896  0075CE  D006               	goto	u20110
 16897  0075D0  0EC2               	movlw	194
 16898  0075D2  5D2C               	subwf	BatteryFailAlarm@bat& (0+255),w,b
 16899  0075D4  0E33               	movlw	51
 16900  0075D6  592D               	subwfb	(BatteryFailAlarm@bat+1)& (0+255),w,b
 16901  0075D8  B0D8               	btfsc	status,0,c
 16902  0075DA  D006               	goto	l20822
 16903  0075DC                     u20110:
 16904                           
 16905                           ; BSR set to: 1
 16906                           ;alarm.c: 93:             timeBattery++;
 16907  0075DC  0102               	movlb	2	; () banked
 16908  0075DE  4B7E               	infsnz	BatteryFailAlarm@timeBattery& (0+255),f,b
 16909  0075E0  2B7F               	incf	(BatteryFailAlarm@timeBattery+1)& (0+255),f,b
 16910                           
 16911                           ; BSR set to: 2
 16912                           ;alarm.c: 94:             SetNoPowerSupplyAlarm();
 16913  0075E2  ECA4  F057         	call	_SetNoPowerSupplyAlarm	;wreg free
 16914                           
 16915                           ;alarm.c: 95:         }
 16916  0075E6  D007               	goto	l20826
 16917  0075E8                     l20822:
 16918                           
 16919                           ; BSR set to: 1
 16920                           ;alarm.c: 97:         {;alarm.c: 98:             timeBattery = 0;
 16921  0075E8  0E00               	movlw	0
 16922  0075EA  0102               	movlb	2	; () banked
 16923  0075EC  6F7F               	movwf	(BatteryFailAlarm@timeBattery+1)& (0+255),b
 16924  0075EE  0E00               	movlw	0
 16925  0075F0  6F7E               	movwf	BatteryFailAlarm@timeBattery& (0+255),b
 16926                           
 16927                           ; BSR set to: 2
 16928                           ;alarm.c: 99:             ClearNoPowerSupplyAlarm();
 16929  0075F2  ECAD  F057         	call	_ClearNoPowerSupplyAlarm	;wreg free
 16930  0075F6                     l20826:
 16931                           
 16932                           ;alarm.c: 101:         return batteryFailAlarm;
 16933  0075F6  0100               	movlb	0	; () banked
 16934  0075F8  51F3               	movf	_batteryFailAlarm& (0+255),w,b
 16935                           
 16936                           ; BSR set to: 0
 16937  0075FA  0012               	return		;funcret
 16938  0075FC                     __end_of_BatteryFailAlarm:
 16939                           	opt callstack 0
 16940                           
 16941 ;; *************** function _VeryHighPressureAlarmHigh *****************
 16942 ;; Defined at:
 16943 ;;		line 176 in file "alarm.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;		None
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;		None
 16948 ;; Return value:  Size  Location     Type
 16949 ;;                  1    wreg      _Bool 
 16950 ;; Registers used:
 16951 ;;		wreg, status,2
 16952 ;; Tracked objects:
 16953 ;;		On entry : 3F/2
 16954 ;;		On exit  : 3F/2
 16955 ;;		Unchanged: 0/0
 16956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16961 ;;Total ram usage:        0 bytes
 16962 ;; Hardware stack levels used:    1
 16963 ;; Hardware stack levels required when called:   16
 16964 ;; This function calls:
 16965 ;;		Nothing
 16966 ;; This function is called by:
 16967 ;;		_MuteAlarm
 16968 ;;		i2_MuteAlarm
 16969 ;;		_AlarmCheckTask
 16970 ;; This function uses a non-reentrant model
 16971 ;;
 16972                           
 16973                           	psect	text123
 16974  00B020                     __ptext123:
 16975                           	opt callstack 0
 16976  00B020                     _VeryHighPressureAlarmHigh:
 16977                           	opt callstack 13
 16978                           
 16979                           ; BSR set to: 2
 16980                           ;alarm.c: 177:     return veryHighPressureAlarmHigh;
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;incstack = 0
 16984  00B020  51AC               	movf	_veryHighPressureAlarmHigh& (0+255),w,b
 16985                           
 16986                           ; BSR set to: 2
 16987  00B022  0012               	return		;funcret
 16988  00B024                     __end_of_VeryHighPressureAlarmHigh:
 16989                           	opt callstack 0
 16990                           
 16991 ;; *************** function _SetAlarmSV1 *****************
 16992 ;; Defined at:
 16993 ;;		line 864 in file "monitor.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;  value           1    wreg     _Bool 
 16996 ;; Auto vars:     Size  Location     Type
 16997 ;;  value           1  131[BANK1 ] _Bool 
 16998 ;; Return value:  Size  Location     Type
 16999 ;;                  1    wreg      void 
 17000 ;; Registers used:
 17001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17002 ;; Tracked objects:
 17003 ;;		On entry : 3C/0
 17004 ;;		On exit  : 3D/0
 17005 ;;		Unchanged: 0/0
 17006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17010 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17011 ;;Total ram usage:        1 bytes
 17012 ;; Hardware stack levels used:    1
 17013 ;; Hardware stack levels required when called:   25
 17014 ;; This function calls:
 17015 ;;		_printf
 17016 ;; This function is called by:
 17017 ;;		_main
 17018 ;;		_MuteAlarm
 17019 ;;		_AlarmCheckTask
 17020 ;; This function uses a non-reentrant model
 17021 ;;
 17022                           
 17023                           	psect	text124
 17024  00A094                     __ptext124:
 17025                           	opt callstack 0
 17026  00A094                     _SetAlarmSV1:
 17027                           	opt callstack 5
 17028                           
 17029                           ; BSR set to: 2
 17030                           ;incstack = 0
 17031                           ;SetAlarmSV1@value stored from wreg
 17032  00A094  0101               	movlb	1	; () banked
 17033  00A096  6F83               	movwf	SetAlarmSV1@value& (0+255),b
 17034                           
 17035                           ;monitor.c: 865:     static _Bool last= 0;;monitor.c: 866:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 17036  00A098  0101               	movlb	1	; () banked
 17037  00A09A  5183               	movf	SetAlarmSV1@value& (0+255),w,b
 17038  00A09C  0100               	movlb	0	; () banked
 17039  00A09E  19EE               	xorwf	SetAlarmSV1@last& (0+255),w,b
 17040  00A0A0  B4D8               	btfsc	status,2,c
 17041  00A0A2  D00B               	goto	l20588
 17042                           
 17043                           ; BSR set to: 0
 17044  00A0A4  0E5C               	movlw	low STR_47
 17045  00A0A6  0101               	movlb	1	; () banked
 17046  00A0A8  6F71               	movwf	printf@fmt& (0+255),b
 17047  00A0AA  0EFF               	movlw	high STR_47
 17048  00A0AC  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17049  00A0AE  0060  F60C  F173   	movff	SetAlarmSV1@value,?_printf+2
 17050  00A0B4  6B74               	clrf	(?_printf+3)& (0+255),b
 17051  00A0B6  ECE6  F051         	call	_printf	;wreg free
 17052  00A0BA                     l20588:
 17053                           
 17054                           ;monitor.c: 867:     alarmSV1 = value;
 17055  00A0BA  0060  F60C  F2A0   	movff	SetAlarmSV1@value,_alarmSV1
 17056                           
 17057                           ;monitor.c: 868:     last = value;
 17058  00A0C0  0060  F60C  F0EE   	movff	SetAlarmSV1@value,SetAlarmSV1@last
 17059  00A0C6  0012               	return		;funcret
 17060  00A0C8                     __end_of_SetAlarmSV1:
 17061                           	opt callstack 0
 17062                           
 17063 ;; *************** function _SetAlarmLED *****************
 17064 ;; Defined at:
 17065 ;;		line 88 in file "buttons.c"
 17066 ;; Parameters:    Size  Location     Type
 17067 ;;  type            1    wreg     unsigned char 
 17068 ;; Auto vars:     Size  Location     Type
 17069 ;;  type            1    4[BANK1 ] unsigned char 
 17070 ;; Return value:  Size  Location     Type
 17071 ;;                  1    wreg      void 
 17072 ;; Registers used:
 17073 ;;		wreg
 17074 ;; Tracked objects:
 17075 ;;		On entry : 3F/2
 17076 ;;		On exit  : 0/0
 17077 ;;		Unchanged: 0/0
 17078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17080 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17082 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;Total ram usage:        1 bytes
 17084 ;; Hardware stack levels used:    1
 17085 ;; Hardware stack levels required when called:   16
 17086 ;; This function calls:
 17087 ;;		Nothing
 17088 ;; This function is called by:
 17089 ;;		_AlarmCheckTask
 17090 ;; This function uses a non-reentrant model
 17091 ;;
 17092                           
 17093                           	psect	text125
 17094  00AC5A                     __ptext125:
 17095                           	opt callstack 0
 17096  00AC5A                     _SetAlarmLED:
 17097                           	opt callstack 13
 17098                           
 17099                           ;incstack = 0
 17100                           ;SetAlarmLED@type stored from wreg
 17101  00AC5A  0101               	movlb	1	; () banked
 17102  00AC5C  6F04               	movwf	SetAlarmLED@type& (0+255),b
 17103                           
 17104                           ;buttons.c: 89:     ledType = type;
 17105  00AC5E  0060  F410  F0F7   	movff	SetAlarmLED@type,_ledType
 17106  00AC64  86BD               	bsf	189,3,c	;volatile
 17107  00AC66  0012               	return		;funcret
 17108  00AC68                     __end_of_SetAlarmLED:
 17109                           	opt callstack 0
 17110                           
 17111 ;; *************** function _Get5V *****************
 17112 ;; Defined at:
 17113 ;;		line 830 in file "monitor.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;		None
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;  mv              4   40[BANK1 ] long 
 17118 ;;  v12             2   38[BANK1 ] short 
 17119 ;;  adc             2   36[BANK1 ] unsigned short 
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  2   30[BANK1 ] short 
 17122 ;; Registers used:
 17123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17124 ;; Tracked objects:
 17125 ;;		On entry : 3F/1
 17126 ;;		On exit  : 3F/1
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17129 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17130 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17131 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17132 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17133 ;;Total ram usage:       14 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:   18
 17136 ;; This function calls:
 17137 ;;		_AdcGetData
 17138 ;;		___aldiv
 17139 ;; This function is called by:
 17140 ;;		_MonitorFailAlarm
 17141 ;; This function uses a non-reentrant model
 17142 ;;
 17143                           
 17144                           	psect	text126
 17145  0077B4                     __ptext126:
 17146                           	opt callstack 0
 17147  0077B4                     _Get5V:
 17148                           	opt callstack 10
 17149                           
 17150                           ; BSR set to: 1
 17151                           ;monitor.c: 831:     adc_result_t adc = AdcGetData(1);
 17152                           
 17153                           ;incstack = 0
 17154  0077B4  0E00               	movlw	0
 17155  0077B6  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 17156  0077B8  0E01               	movlw	1
 17157  0077BA  6F0A               	movwf	AdcGetData@id& (0+255),b
 17158  0077BC  EC95  F049         	call	_AdcGetData	;wreg free
 17159  0077C0  0060  F428  F124   	movff	?_AdcGetData,Get5V@adc
 17160  0077C6  0060  F42C  F125   	movff	?_AdcGetData+1,Get5V@adc+1
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;monitor.c: 832:     int32_t mv = adc;
 17164  0077CC  0060  F490  F128   	movff	Get5V@adc,Get5V@mv
 17165  0077D2  0060  F494  F129   	movff	Get5V@adc+1,Get5V@mv+1
 17166  0077D8  6B2A               	clrf	(Get5V@mv+2)& (0+255),b
 17167  0077DA  6B2B               	clrf	(Get5V@mv+3)& (0+255),b
 17168                           
 17169                           ; BSR set to: 1
 17170                           ;monitor.c: 833:     mv = ( mv*4096) / 4096;
 17171  0077DC  0060  F4A0  F120   	movff	Get5V@mv,??_Get5V
 17172  0077E2  0060  F4A4  F121   	movff	Get5V@mv+1,??_Get5V+1
 17173  0077E8  0060  F4A8  F122   	movff	Get5V@mv+2,??_Get5V+2
 17174  0077EE  0060  F4AC  F123   	movff	Get5V@mv+3,??_Get5V+3
 17175  0077F4  0E0C               	movlw	12
 17176  0077F6                     u19295:
 17177  0077F6  90D8               	bcf	status,0,c
 17178  0077F8  3720               	rlcf	??_Get5V& (0+255),f,b
 17179  0077FA  3721               	rlcf	(??_Get5V+1)& (0+255),f,b
 17180  0077FC  3722               	rlcf	(??_Get5V+2)& (0+255),f,b
 17181  0077FE  3723               	rlcf	(??_Get5V+3)& (0+255),f,b
 17182  007800  2EE8               	decfsz	wreg,f,c
 17183  007802  D7F9               	goto	u19295
 17184  007804  0060  F480  F110   	movff	??_Get5V,___aldiv@dividend
 17185  00780A  0060  F484  F111   	movff	??_Get5V+1,___aldiv@dividend+1
 17186  007810  0060  F488  F112   	movff	??_Get5V+2,___aldiv@dividend+2
 17187  007816  0060  F48C  F113   	movff	??_Get5V+3,___aldiv@dividend+3
 17188  00781C  0E00               	movlw	0
 17189  00781E  6F14               	movwf	___aldiv@divisor& (0+255),b
 17190  007820  0E10               	movlw	16
 17191  007822  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 17192  007824  0E00               	movlw	0
 17193  007826  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 17194  007828  0E00               	movlw	0
 17195  00782A  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 17196  00782C  EC20  F03D         	call	___aldiv	;wreg free
 17197  007830  0060  F440  F128   	movff	?___aldiv,Get5V@mv
 17198  007836  0060  F444  F129   	movff	?___aldiv+1,Get5V@mv+1
 17199  00783C  0060  F448  F12A   	movff	?___aldiv+2,Get5V@mv+2
 17200  007842  0060  F44C  F12B   	movff	?___aldiv+3,Get5V@mv+3
 17201                           
 17202                           ; BSR set to: 1
 17203                           ;monitor.c: 834:     int16_t v12 = mv/2;
 17204  007848  0060  F4A0  F110   	movff	Get5V@mv,___aldiv@dividend
 17205  00784E  0060  F4A4  F111   	movff	Get5V@mv+1,___aldiv@dividend+1
 17206  007854  0060  F4A8  F112   	movff	Get5V@mv+2,___aldiv@dividend+2
 17207  00785A  0060  F4AC  F113   	movff	Get5V@mv+3,___aldiv@dividend+3
 17208  007860  0E02               	movlw	2
 17209  007862  6F14               	movwf	___aldiv@divisor& (0+255),b
 17210  007864  0E00               	movlw	0
 17211  007866  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 17212  007868  0E00               	movlw	0
 17213  00786A  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 17214  00786C  0E00               	movlw	0
 17215  00786E  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 17216  007870  EC20  F03D         	call	___aldiv	;wreg free
 17217  007874  0060  F440  F126   	movff	?___aldiv,Get5V@v12
 17218  00787A  0060  F444  F127   	movff	?___aldiv+1,Get5V@v12+1
 17219                           
 17220                           ; BSR set to: 1
 17221                           ;monitor.c: 835:     return v12;
 17222  007880  0060  F498  F11E   	movff	Get5V@v12,?_Get5V
 17223  007886  0060  F49C  F11F   	movff	Get5V@v12+1,?_Get5V+1
 17224                           
 17225                           ; BSR set to: 1
 17226  00788C  0012               	return		;funcret
 17227  00788E                     __end_of_Get5V:
 17228                           	opt callstack 0
 17229                           
 17230 ;; *************** function _SetVeryHighPressureAlarmHigh *****************
 17231 ;; Defined at:
 17232 ;;		line 233 in file "alarm.c"
 17233 ;; Parameters:    Size  Location     Type
 17234 ;;		None
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;		None
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  1    wreg      void 
 17239 ;; Registers used:
 17240 ;;		wreg, status,2
 17241 ;; Tracked objects:
 17242 ;;		On entry : 3F/1
 17243 ;;		On exit  : 3F/2
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17250 ;;Total ram usage:        0 bytes
 17251 ;; Hardware stack levels used:    1
 17252 ;; Hardware stack levels required when called:   16
 17253 ;; This function calls:
 17254 ;;		Nothing
 17255 ;; This function is called by:
 17256 ;;		_HighPressureAlarmLow
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           	psect	text127
 17261  00AE66                     __ptext127:
 17262                           	opt callstack 0
 17263  00AE66                     _SetVeryHighPressureAlarmHigh:
 17264                           	opt callstack 12
 17265                           
 17266                           ; BSR set to: 1
 17267                           
 17268                           ; BSR set to: 1
 17269                           ;incstack = 0
 17270  00AE66  0E01               	movlw	1
 17271  00AE68  0102               	movlb	2	; () banked
 17272  00AE6A  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 17273                           
 17274                           ; BSR set to: 2
 17275  00AE6C  0012               	return		;funcret
 17276  00AE6E                     __end_of_SetVeryHighPressureAlarmHigh:
 17277                           	opt callstack 0
 17278                           
 17279 ;; *************** function _SetHighPressureAlarmHigh *****************
 17280 ;; Defined at:
 17281 ;;		line 232 in file "alarm.c"
 17282 ;; Parameters:    Size  Location     Type
 17283 ;;		None
 17284 ;; Auto vars:     Size  Location     Type
 17285 ;;		None
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      void 
 17288 ;; Registers used:
 17289 ;;		wreg, status,2
 17290 ;; Tracked objects:
 17291 ;;		On entry : 3F/2
 17292 ;;		On exit  : 3F/2
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17299 ;;Total ram usage:        0 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:   16
 17302 ;; This function calls:
 17303 ;;		Nothing
 17304 ;; This function is called by:
 17305 ;;		_HighPressureAlarmLow
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           	psect	text128
 17310  00AF42                     __ptext128:
 17311                           	opt callstack 0
 17312  00AF42                     _SetHighPressureAlarmHigh:
 17313                           	opt callstack 12
 17314                           
 17315                           ; BSR set to: 2
 17316                           
 17317                           ; BSR set to: 2
 17318                           ;incstack = 0
 17319  00AF42  0E01               	movlw	1
 17320  00AF44  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 17321                           
 17322                           ; BSR set to: 2
 17323  00AF46  0012               	return		;funcret
 17324  00AF48                     __end_of_SetHighPressureAlarmHigh:
 17325                           	opt callstack 0
 17326                           
 17327 ;; *************** function _GetMaxPressure *****************
 17328 ;; Defined at:
 17329 ;;		line 169 in file "monitor.c"
 17330 ;; Parameters:    Size  Location     Type
 17331 ;;		None
 17332 ;; Auto vars:     Size  Location     Type
 17333 ;;  temp            2   20[BANK1 ] int 
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  2   18[BANK1 ] short 
 17336 ;; Registers used:
 17337 ;;		wreg, status,2, status,0, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 3F/2
 17340 ;;		On exit  : 3F/2
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17343 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17344 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17346 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17347 ;;Total ram usage:        4 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:   17
 17350 ;; This function calls:
 17351 ;;		___awdiv
 17352 ;; This function is called by:
 17353 ;;		_HighPressureAlarmLow
 17354 ;; This function uses a non-reentrant model
 17355 ;;
 17356                           
 17357                           	psect	text129
 17358  009D68                     __ptext129:
 17359                           	opt callstack 0
 17360  009D68                     _GetMaxPressure:
 17361                           	opt callstack 11
 17362                           
 17363                           ; BSR set to: 2
 17364                           ;monitor.c: 170:     int temp = alarmMaxPressure/5;
 17365                           
 17366                           ; BSR set to: 2
 17367                           ;incstack = 0
 17368  009D68  0060  F938  F10A   	movff	_alarmMaxPressure,___awdiv@dividend
 17369  009D6E  0060  F93C  F10B   	movff	_alarmMaxPressure+1,___awdiv@dividend+1
 17370  009D74  0E00               	movlw	0
 17371  009D76  0101               	movlb	1	; () banked
 17372  009D78  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 17373  009D7A  0E05               	movlw	5
 17374  009D7C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 17375  009D7E  EC7D  F045         	call	___awdiv	;wreg free
 17376  009D82  0060  F428  F114   	movff	?___awdiv,GetMaxPressure@temp
 17377  009D88  0060  F42C  F115   	movff	?___awdiv+1,GetMaxPressure@temp+1
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;monitor.c: 172:     alarmMaxPressure = 0;
 17381  009D8E  0E00               	movlw	0
 17382  009D90  0102               	movlb	2	; () banked
 17383  009D92  6F4F               	movwf	(_alarmMaxPressure+1)& (0+255),b
 17384  009D94  0E00               	movlw	0
 17385  009D96  6F4E               	movwf	_alarmMaxPressure& (0+255),b
 17386                           
 17387                           ; BSR set to: 2
 17388                           ;monitor.c: 173:     return temp;
 17389  009D98  0060  F450  F112   	movff	GetMaxPressure@temp,?_GetMaxPressure
 17390  009D9E  0060  F454  F113   	movff	GetMaxPressure@temp+1,?_GetMaxPressure+1
 17391                           
 17392                           ; BSR set to: 2
 17393  009DA4  0012               	return		;funcret
 17394  009DA6                     __end_of_GetMaxPressure:
 17395                           	opt callstack 0
 17396                           
 17397 ;; *************** function _ClearAlarmLED *****************
 17398 ;; Defined at:
 17399 ;;		line 93 in file "buttons.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;		None
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		wreg, status,2
 17408 ;; Tracked objects:
 17409 ;;		On entry : 3F/39
 17410 ;;		On exit  : 3F/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;Total ram usage:        0 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:   16
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_AlarmCheckTask
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427                           	psect	text130
 17428  00ADC6                     __ptext130:
 17429                           	opt callstack 0
 17430  00ADC6                     _ClearAlarmLED:
 17431                           	opt callstack 13
 17432                           
 17433                           ; BSR set to: 57
 17434                           ;buttons.c: 94:     ledType = 0;
 17435                           
 17436                           ; BSR set to: 2
 17437                           ;incstack = 0
 17438  00ADC6  0E00               	movlw	0
 17439  00ADC8  0100               	movlb	0	; () banked
 17440  00ADCA  6FF7               	movwf	_ledType& (0+255),b
 17441                           
 17442                           ; BSR set to: 0
 17443  00ADCC  96BD               	bcf	189,3,c	;volatile
 17444                           
 17445                           ; BSR set to: 0
 17446  00ADCE  0012               	return		;funcret
 17447  00ADD0                     __end_of_ClearAlarmLED:
 17448                           	opt callstack 0
 17449                           
 17450 ;; *************** function _BuzzerSet *****************
 17451 ;; Defined at:
 17452 ;;		line 64 in file "buzzer.c"
 17453 ;; Parameters:    Size  Location     Type
 17454 ;;  state           1    wreg     unsigned char 
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;  state           1  133[BANK1 ] unsigned char 
 17457 ;; Return value:  Size  Location     Type
 17458 ;;                  1    wreg      void 
 17459 ;; Registers used:
 17460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17461 ;; Tracked objects:
 17462 ;;		On entry : 3F/2
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17467 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17469 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17470 ;;Total ram usage:        1 bytes
 17471 ;; Hardware stack levels used:    1
 17472 ;; Hardware stack levels required when called:   26
 17473 ;; This function calls:
 17474 ;;		_BuzzerOff
 17475 ;;		_BuzzerTask
 17476 ;; This function is called by:
 17477 ;;		_AlarmCheckTask
 17478 ;; This function uses a non-reentrant model
 17479 ;;
 17480                           
 17481                           	psect	text131
 17482  00A918                     __ptext131:
 17483                           	opt callstack 0
 17484  00A918                     _BuzzerSet:
 17485                           	opt callstack 3
 17486                           
 17487                           ; BSR set to: 0
 17488                           ;incstack = 0
 17489                           ;BuzzerSet@state stored from wreg
 17490  00A918  0101               	movlb	1	; () banked
 17491  00A91A  6F85               	movwf	BuzzerSet@state& (0+255),b
 17492                           
 17493                           ;buzzer.c: 65:     alarmState = state;
 17494  00A91C  0060  F614  F0F6   	movff	BuzzerSet@state,_alarmState
 17495                           
 17496                           ;buzzer.c: 66:     alarmStep = 0;
 17497  00A922  0E00               	movlw	0
 17498  00A924  0101               	movlb	1	; () banked
 17499  00A926  6FF3               	movwf	_alarmStep& (0+255),b
 17500                           
 17501                           ; BSR set to: 1
 17502                           ;buzzer.c: 67:     BuzzerOff();
 17503  00A928  EC79  F055         	call	_BuzzerOff	;wreg free
 17504                           
 17505                           ; BSR set to: 57
 17506                           ;buzzer.c: 68:     BuzzerTask();
 17507  00A92C  ECFA  F014         	call	_BuzzerTask	;wreg free
 17508  00A930  0012               	return		;funcret
 17509  00A932                     __end_of_BuzzerSet:
 17510                           	opt callstack 0
 17511                           
 17512 ;; *************** function _BuzzerTask *****************
 17513 ;; Defined at:
 17514 ;;		line 132 in file "buzzer.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;		None
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1    wreg      void 
 17521 ;; Registers used:
 17522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17523 ;; Tracked objects:
 17524 ;;		On entry : 3F/39
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17530 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17531 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;Total ram usage:        2 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:   25
 17535 ;; This function calls:
 17536 ;;		_BuzzerOff
 17537 ;;		_BuzzerOn
 17538 ;;		_ClearMonitorFailAlarm
 17539 ;;		_SetMonitorFailAlarm
 17540 ;;		_TMR4_Period8BitSet
 17541 ;;		_TMR4_SetInterruptHandler
 17542 ;;		_TMR4_Start
 17543 ;;		_TMR4_Stop
 17544 ;;		_printf
 17545 ;; This function is called by:
 17546 ;;		_BuzzerSet
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text132
 17551  0029F4                     __ptext132:
 17552                           	opt callstack 0
 17553  0029F4                     _BuzzerTask:
 17554                           	opt callstack 3
 17555                           
 17556                           ; BSR set to: 57
 17557                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 17558                           
 17559                           ;incstack = 0
 17560  0029F4  0100               	movlb	0	; () banked
 17561  0029F6  51F5               	movf	_on& (0+255),w,b
 17562  0029F8  B4D8               	btfsc	status,2,c
 17563  0029FA  D026               	goto	l19466
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;buzzer.c: 136:         if (detected) {
 17567  0029FC  51F4               	movf	_detected& (0+255),w,b
 17568  0029FE  B4D8               	btfsc	status,2,c
 17569  002A00  D00E               	goto	l19458
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 17573  002A02  EC3B  F057         	call	_ClearMonitorFailAlarm	;wreg free
 17574                           
 17575                           ; BSR set to: 2
 17576                           ;buzzer.c: 139:             noDetections = 0;
 17577  002A06  0E00               	movlw	0
 17578  002A08  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 17579  002A0A  0E00               	movlw	0
 17580  002A0C  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 17581                           
 17582                           ; BSR set to: 2
 17583                           ;buzzer.c: 140:             printf("_DB_");
 17584  002A0E  0EC6               	movlw	low STR_15
 17585  002A10  0101               	movlb	1	; () banked
 17586  002A12  6F71               	movwf	printf@fmt& (0+255),b
 17587  002A14  0EFF               	movlw	high STR_15
 17588  002A16  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17589  002A18  ECE6  F051         	call	_printf	;wreg free
 17590                           
 17591                           ;buzzer.c: 141:         } else {
 17592  002A1C  D015               	goto	l19466
 17593  002A1E                     l19458:
 17594                           
 17595                           ; BSR set to: 0
 17596                           ;buzzer.c: 144:             if (noDetections>=3) {
 17597  002A1E  0102               	movlb	2	; () banked
 17598  002A20  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 17599  002A22  D009               	goto	l19462
 17600  002A24  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 17601  002A26  E104               	bnz	u19270
 17602  002A28  0E03               	movlw	3
 17603  002A2A  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 17604  002A2C  A0D8               	btfss	status,0,c
 17605  002A2E  D003               	goto	l19462
 17606  002A30                     u19270:
 17607                           
 17608                           ; BSR set to: 2
 17609                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 17610  002A30  EC37  F057         	call	_SetMonitorFailAlarm	;wreg free
 17611                           
 17612                           ;buzzer.c: 146:             } else {
 17613  002A34  D002               	goto	l19464
 17614  002A36                     l19462:
 17615                           
 17616                           ; BSR set to: 2
 17617                           ;buzzer.c: 147:                 noDetections ++;
 17618  002A36  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 17619  002A38  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 17620  002A3A                     l19464:
 17621                           
 17622                           ; BSR set to: 2
 17623                           ;buzzer.c: 149:             printf("_EB_");
 17624  002A3A  0ECB               	movlw	low STR_16
 17625  002A3C  0101               	movlb	1	; () banked
 17626  002A3E  6F71               	movwf	printf@fmt& (0+255),b
 17627  002A40  0EFF               	movlw	high STR_16
 17628  002A42  6F72               	movwf	(printf@fmt+1)& (0+255),b
 17629  002A44  ECE6  F051         	call	_printf	;wreg free
 17630  002A48                     l19466:
 17631                           
 17632                           ;buzzer.c: 152:     BuzzerOff();
 17633  002A48  EC79  F055         	call	_BuzzerOff	;wreg free
 17634                           
 17635                           ; BSR set to: 57
 17636                           ;buzzer.c: 153:     TMR4_Stop();
 17637  002A4C  EC14  F058         	call	_TMR4_Stop	;wreg free
 17638                           
 17639                           ; BSR set to: 57
 17640                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 17641  002A50  0E7E               	movlw	low _BuzzerHandler
 17642  002A52  0101               	movlb	1	; () banked
 17643  002A54  6F04               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 17644  002A56  0EAF               	movlw	high _BuzzerHandler
 17645  002A58  6F05               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17646  002A5A  EC34  F056         	call	_TMR4_SetInterruptHandler	;wreg free
 17647                           
 17648                           ;buzzer.c: 155:     switch(alarmState) {
 17649  002A5E  D187               	goto	l19734
 17650  002A60                     l19472:
 17651                           
 17652                           ; BSR set to: 1
 17653                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 17654  002A60  0EBD               	movlw	189
 17655  002A62  EC2C  F054         	call	_BuzzerOn
 17656                           
 17657                           ; BSR set to: 57
 17658                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 17659  002A66  0E33               	movlw	51
 17660  002A68  ECB0  F056         	call	_TMR4_Period8BitSet
 17661  002A6C                     l19476:
 17662                           
 17663                           ;buzzer.c: 161:                     alarmStep++;
 17664  002A6C  0101               	movlb	1	; () banked
 17665  002A6E  2BF3               	incf	_alarmStep& (0+255),f,b
 17666  002A70                     l19478:
 17667                           
 17668                           ; BSR set to: 1
 17669                           ;buzzer.c: 162:                     TMR4_Start();
 17670  002A70  EC12  F058         	call	_TMR4_Start	;wreg free
 17671                           
 17672                           ;buzzer.c: 163:                     break;
 17673  002A74  0012               	return	
 17674  002A76                     l19480:
 17675                           
 17676                           ; BSR set to: 1
 17677                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 17678  002A76  0E33               	movlw	51
 17679  002A78  ECB0  F056         	call	_TMR4_Period8BitSet
 17680  002A7C  D7F7               	goto	l19476
 17681  002A7E                     l19486:
 17682                           
 17683                           ; BSR set to: 1
 17684                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 17685  002A7E  0EEE               	movlw	238
 17686  002A80  EC2C  F054         	call	_BuzzerOn
 17687                           
 17688                           ; BSR set to: 57
 17689                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 17690  002A84  0E33               	movlw	51
 17691  002A86  ECB0  F056         	call	_TMR4_Period8BitSet
 17692  002A8A  D7F0               	goto	l19476
 17693  002A8C                     l2114:
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 17697                           
 17698                           ; BSR set to: 1
 17699  002A8C  0EFF               	movlw	255
 17700  002A8E  ECB0  F056         	call	_TMR4_Period8BitSet
 17701  002A92  D7EC               	goto	l19476
 17702  002A94                     l19500:
 17703                           
 17704                           ; BSR set to: 1
 17705                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 17706  002A94  0EFF               	movlw	255
 17707  002A96  ECB0  F056         	call	_TMR4_Period8BitSet
 17708  002A9A                     l19502:
 17709                           
 17710                           ;buzzer.c: 196:                     alarmStep=0;
 17711  002A9A  0E00               	movlw	0
 17712  002A9C  0101               	movlb	1	; () banked
 17713  002A9E  6FF3               	movwf	_alarmStep& (0+255),b
 17714  002AA0  D7E7               	goto	l19478
 17715  002AA2                     l19506:
 17716                           
 17717                           ; BSR set to: 1
 17718                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 17719  002AA2  0E33               	movlw	51
 17720  002AA4  ECB0  F056         	call	_TMR4_Period8BitSet
 17721  002AA8  D7F8               	goto	l19502
 17722  002AAA                     l19514:
 17723                           
 17724                           ; BSR set to: 1
 17725  002AAA  51F3               	movf	_alarmStep& (0+255),w,b
 17726  002AAC  6F83               	movwf	??_BuzzerTask& (0+255),b
 17727  002AAE  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17728                           
 17729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17730                           ; Switch size 1, requested type "simple"
 17731                           ; Number of cases is 1, Range of values is 0 to 0
 17732                           ; switch strategies available:
 17733                           ; Name         Instructions Cycles
 17734                           ; simple_byte            4     3 (average)
 17735                           ;	Chosen strategy is simple_byte
 17736  002AB0  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17737  002AB2  0A00               	xorlw	0	; case 0
 17738  002AB4  A4D8               	btfss	status,2,c
 17739  002AB6  D7F5               	goto	l19506
 17740                           
 17741                           ; BSR set to: 1
 17742                           ; Switch size 1, requested type "simple"
 17743                           ; Number of cases is 19, Range of values is 0 to 18
 17744                           ; switch strategies available:
 17745                           ; Name         Instructions Cycles
 17746                           ; simple_byte           58    30 (average)
 17747                           ;	Chosen strategy is simple_byte
 17748  002AB8  5183               	movf	??_BuzzerTask& (0+255),w,b
 17749  002ABA  0A00               	xorlw	0	; case 0
 17750  002ABC  B4D8               	btfsc	status,2,c
 17751  002ABE  D7D0               	goto	l19472
 17752  002AC0  0A01               	xorlw	1	; case 1
 17753  002AC2  B4D8               	btfsc	status,2,c
 17754  002AC4  D7D8               	goto	l19480
 17755  002AC6  0A03               	xorlw	3	; case 2
 17756  002AC8  B4D8               	btfsc	status,2,c
 17757  002ACA  D7D9               	goto	l19486
 17758  002ACC  0A01               	xorlw	1	; case 3
 17759  002ACE  B4D8               	btfsc	status,2,c
 17760  002AD0  D7DD               	goto	l2114
 17761  002AD2  0A07               	xorlw	7	; case 4
 17762  002AD4  B4D8               	btfsc	status,2,c
 17763  002AD6  D7DA               	goto	l2114
 17764  002AD8  0A01               	xorlw	1	; case 5
 17765  002ADA  B4D8               	btfsc	status,2,c
 17766  002ADC  D7D7               	goto	l2114
 17767  002ADE  0A03               	xorlw	3	; case 6
 17768  002AE0  B4D8               	btfsc	status,2,c
 17769  002AE2  D7D4               	goto	l2114
 17770  002AE4  0A01               	xorlw	1	; case 7
 17771  002AE6  B4D8               	btfsc	status,2,c
 17772  002AE8  D7D1               	goto	l2114
 17773  002AEA  0A0F               	xorlw	15	; case 8
 17774  002AEC  B4D8               	btfsc	status,2,c
 17775  002AEE  D7CE               	goto	l2114
 17776  002AF0  0A01               	xorlw	1	; case 9
 17777  002AF2  B4D8               	btfsc	status,2,c
 17778  002AF4  D7CB               	goto	l2114
 17779  002AF6  0A03               	xorlw	3	; case 10
 17780  002AF8  B4D8               	btfsc	status,2,c
 17781  002AFA  D7C8               	goto	l2114
 17782  002AFC  0A01               	xorlw	1	; case 11
 17783  002AFE  B4D8               	btfsc	status,2,c
 17784  002B00  D7C5               	goto	l2114
 17785  002B02  0A07               	xorlw	7	; case 12
 17786  002B04  B4D8               	btfsc	status,2,c
 17787  002B06  D7C2               	goto	l2114
 17788  002B08  0A01               	xorlw	1	; case 13
 17789  002B0A  B4D8               	btfsc	status,2,c
 17790  002B0C  D7BF               	goto	l2114
 17791  002B0E  0A03               	xorlw	3	; case 14
 17792  002B10  B4D8               	btfsc	status,2,c
 17793  002B12  D7BC               	goto	l2114
 17794  002B14  0A01               	xorlw	1	; case 15
 17795  002B16  B4D8               	btfsc	status,2,c
 17796  002B18  D7B9               	goto	l2114
 17797  002B1A  0A1F               	xorlw	31	; case 16
 17798  002B1C  B4D8               	btfsc	status,2,c
 17799  002B1E  D7B6               	goto	l2114
 17800  002B20  0A01               	xorlw	1	; case 17
 17801  002B22  B4D8               	btfsc	status,2,c
 17802  002B24  D7B3               	goto	l2114
 17803  002B26  0A03               	xorlw	3	; case 18
 17804  002B28  B4D8               	btfsc	status,2,c
 17805  002B2A  D7B4               	goto	l19500
 17806  002B2C  D7BA               	goto	l19506
 17807  002B2E                     l19516:
 17808                           
 17809                           ; BSR set to: 1
 17810                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 17811  002B2E  0EEE               	movlw	238
 17812  002B30  EC2C  F054         	call	_BuzzerOn
 17813                           
 17814                           ; BSR set to: 57
 17815                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 17816  002B34  0E33               	movlw	51
 17817  002B36  ECB0  F056         	call	_TMR4_Period8BitSet
 17818  002B3A  D798               	goto	l19476
 17819  002B3C                     l19524:
 17820                           
 17821                           ; BSR set to: 1
 17822                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 17823  002B3C  0E33               	movlw	51
 17824  002B3E  ECB0  F056         	call	_TMR4_Period8BitSet
 17825  002B42  D794               	goto	l19476
 17826  002B44                     l19530:
 17827                           
 17828                           ; BSR set to: 1
 17829                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 17830  002B44  0E8D               	movlw	141
 17831  002B46  EC2C  F054         	call	_BuzzerOn
 17832                           
 17833                           ; BSR set to: 57
 17834                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 17835  002B4A  0E33               	movlw	51
 17836  002B4C  ECB0  F056         	call	_TMR4_Period8BitSet
 17837  002B50  D78D               	goto	l19476
 17838  002B52                     l19538:
 17839                           
 17840                           ; BSR set to: 1
 17841                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 17842  002B52  0E33               	movlw	51
 17843  002B54  ECB0  F056         	call	_TMR4_Period8BitSet
 17844  002B58  D789               	goto	l19476
 17845  002B5A                     l19544:
 17846                           
 17847                           ; BSR set to: 1
 17848                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 17849  002B5A  0EB2               	movlw	178
 17850  002B5C  EC2C  F054         	call	_BuzzerOn
 17851                           
 17852                           ; BSR set to: 57
 17853                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 17854  002B60  0E33               	movlw	51
 17855  002B62  ECB0  F056         	call	_TMR4_Period8BitSet
 17856  002B66  D782               	goto	l19476
 17857  002B68                     l2140:
 17858                           
 17859                           ; BSR set to: 1
 17860                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 17861                           
 17862                           ; BSR set to: 1
 17863  002B68  0EFF               	movlw	255
 17864  002B6A  ECB0  F056         	call	_TMR4_Period8BitSet
 17865  002B6E  D77E               	goto	l19476
 17866  002B70                     l19558:
 17867                           
 17868                           ; BSR set to: 1
 17869                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 17870  002B70  0EFF               	movlw	255
 17871  002B72  ECB0  F056         	call	_TMR4_Period8BitSet
 17872  002B76  D791               	goto	l19502
 17873  002B78                     l19564:
 17874                           
 17875                           ; BSR set to: 1
 17876                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 17877  002B78  0E33               	movlw	51
 17878  002B7A  ECB0  F056         	call	_TMR4_Period8BitSet
 17879  002B7E  D78D               	goto	l19502
 17880  002B80                     l19572:
 17881                           
 17882                           ; BSR set to: 1
 17883  002B80  51F3               	movf	_alarmStep& (0+255),w,b
 17884  002B82  6F83               	movwf	??_BuzzerTask& (0+255),b
 17885  002B84  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 17886                           
 17887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17888                           ; Switch size 1, requested type "simple"
 17889                           ; Number of cases is 1, Range of values is 0 to 0
 17890                           ; switch strategies available:
 17891                           ; Name         Instructions Cycles
 17892                           ; simple_byte            4     3 (average)
 17893                           ;	Chosen strategy is simple_byte
 17894  002B86  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 17895  002B88  0A00               	xorlw	0	; case 0
 17896  002B8A  A4D8               	btfss	status,2,c
 17897  002B8C  D7F5               	goto	l19564
 17898                           
 17899                           ; BSR set to: 1
 17900                           ; Switch size 1, requested type "simple"
 17901                           ; Number of cases is 13, Range of values is 0 to 12
 17902                           ; switch strategies available:
 17903                           ; Name         Instructions Cycles
 17904                           ; simple_byte           40    21 (average)
 17905                           ;	Chosen strategy is simple_byte
 17906  002B8E  5183               	movf	??_BuzzerTask& (0+255),w,b
 17907  002B90  0A00               	xorlw	0	; case 0
 17908  002B92  B4D8               	btfsc	status,2,c
 17909  002B94  D7CC               	goto	l19516
 17910  002B96  0A01               	xorlw	1	; case 1
 17911  002B98  B4D8               	btfsc	status,2,c
 17912  002B9A  D7D0               	goto	l19524
 17913  002B9C  0A03               	xorlw	3	; case 2
 17914  002B9E  B4D8               	btfsc	status,2,c
 17915  002BA0  D7D1               	goto	l19530
 17916  002BA2  0A01               	xorlw	1	; case 3
 17917  002BA4  B4D8               	btfsc	status,2,c
 17918  002BA6  D7D5               	goto	l19538
 17919  002BA8  0A07               	xorlw	7	; case 4
 17920  002BAA  B4D8               	btfsc	status,2,c
 17921  002BAC  D7D6               	goto	l19544
 17922  002BAE  0A01               	xorlw	1	; case 5
 17923  002BB0  B4D8               	btfsc	status,2,c
 17924  002BB2  D7DA               	goto	l2140
 17925  002BB4  0A03               	xorlw	3	; case 6
 17926  002BB6  B4D8               	btfsc	status,2,c
 17927  002BB8  D7D7               	goto	l2140
 17928  002BBA  0A01               	xorlw	1	; case 7
 17929  002BBC  B4D8               	btfsc	status,2,c
 17930  002BBE  D7D4               	goto	l2140
 17931  002BC0  0A0F               	xorlw	15	; case 8
 17932  002BC2  B4D8               	btfsc	status,2,c
 17933  002BC4  D7D1               	goto	l2140
 17934  002BC6  0A01               	xorlw	1	; case 9
 17935  002BC8  B4D8               	btfsc	status,2,c
 17936  002BCA  D7CE               	goto	l2140
 17937  002BCC  0A03               	xorlw	3	; case 10
 17938  002BCE  B4D8               	btfsc	status,2,c
 17939  002BD0  D7CB               	goto	l2140
 17940  002BD2  0A01               	xorlw	1	; case 11
 17941  002BD4  B4D8               	btfsc	status,2,c
 17942  002BD6  D7C8               	goto	l2140
 17943  002BD8  0A07               	xorlw	7	; case 12
 17944  002BDA  B4D8               	btfsc	status,2,c
 17945  002BDC  D7C9               	goto	l19558
 17946  002BDE  D7CC               	goto	l19564
 17947  002BE0                     l19574:
 17948                           
 17949                           ; BSR set to: 1
 17950                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 17951  002BE0  0EEE               	movlw	238
 17952  002BE2  EC2C  F054         	call	_BuzzerOn
 17953                           
 17954                           ; BSR set to: 57
 17955                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 17956  002BE6  0E2E               	movlw	46
 17957  002BE8  ECB0  F056         	call	_TMR4_Period8BitSet
 17958  002BEC  D73F               	goto	l19476
 17959  002BEE                     l19582:
 17960                           
 17961                           ; BSR set to: 1
 17962                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 17963  002BEE  0E1A               	movlw	26
 17964  002BF0  ECB0  F056         	call	_TMR4_Period8BitSet
 17965  002BF4  D73B               	goto	l19476
 17966  002BF6                     l19588:
 17967                           
 17968                           ; BSR set to: 1
 17969                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 17970  002BF6  0E8D               	movlw	141
 17971  002BF8  EC2C  F054         	call	_BuzzerOn
 17972                           
 17973                           ; BSR set to: 57
 17974                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 17975  002BFC  0E2E               	movlw	46
 17976  002BFE  ECB0  F056         	call	_TMR4_Period8BitSet
 17977  002C02  D734               	goto	l19476
 17978  002C04                     l19596:
 17979                           
 17980                           ; BSR set to: 1
 17981                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 17982  002C04  0E1A               	movlw	26
 17983  002C06  ECB0  F056         	call	_TMR4_Period8BitSet
 17984  002C0A  D730               	goto	l19476
 17985  002C0C                     l19602:
 17986                           
 17987                           ; BSR set to: 1
 17988                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 17989  002C0C  0EB2               	movlw	178
 17990  002C0E  EC2C  F054         	call	_BuzzerOn
 17991                           
 17992                           ; BSR set to: 57
 17993                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 17994  002C12  0E2E               	movlw	46
 17995  002C14  ECB0  F056         	call	_TMR4_Period8BitSet
 17996  002C18  D729               	goto	l19476
 17997  002C1A                     l19610:
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 18001  002C1A  0E66               	movlw	102
 18002  002C1C  ECB0  F056         	call	_TMR4_Period8BitSet
 18003  002C20  D725               	goto	l19476
 18004  002C22                     l19616:
 18005                           
 18006                           ; BSR set to: 1
 18007                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 18008  002C22  0E8D               	movlw	141
 18009  002C24  EC2C  F054         	call	_BuzzerOn
 18010                           
 18011                           ; BSR set to: 57
 18012                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 18013  002C28  0E2E               	movlw	46
 18014  002C2A  ECB0  F056         	call	_TMR4_Period8BitSet
 18015  002C2E  D71E               	goto	l19476
 18016  002C30                     l19624:
 18017                           
 18018                           ; BSR set to: 1
 18019                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 18020  002C30  0E1A               	movlw	26
 18021  002C32  ECB0  F056         	call	_TMR4_Period8BitSet
 18022  002C36  D71A               	goto	l19476
 18023  002C38                     l19630:
 18024                           
 18025                           ; BSR set to: 1
 18026                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 18027  002C38  0EB2               	movlw	178
 18028  002C3A  EC2C  F054         	call	_BuzzerOn
 18029                           
 18030                           ; BSR set to: 57
 18031                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 18032  002C3E  0E2E               	movlw	46
 18033  002C40  ECB0  F056         	call	_TMR4_Period8BitSet
 18034  002C44  D713               	goto	l19476
 18035  002C46                     l19638:
 18036                           
 18037                           ; BSR set to: 1
 18038                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 18039  002C46  0EFF               	movlw	255
 18040  002C48  ECB0  F056         	call	_TMR4_Period8BitSet
 18041  002C4C  D70F               	goto	l19476
 18042  002C4E                     l19644:
 18043                           
 18044                           ; BSR set to: 1
 18045                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 18046  002C4E  0EEE               	movlw	238
 18047  002C50  EC2C  F054         	call	_BuzzerOn
 18048                           
 18049                           ; BSR set to: 57
 18050                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 18051  002C54  0E2E               	movlw	46
 18052  002C56  ECB0  F056         	call	_TMR4_Period8BitSet
 18053  002C5A  D708               	goto	l19476
 18054  002C5C                     l19652:
 18055                           
 18056                           ; BSR set to: 1
 18057                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 18058  002C5C  0E1A               	movlw	26
 18059  002C5E  ECB0  F056         	call	_TMR4_Period8BitSet
 18060  002C62  D704               	goto	l19476
 18061  002C64                     l19658:
 18062                           
 18063                           ; BSR set to: 1
 18064                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 18065  002C64  0E8D               	movlw	141
 18066  002C66  EC2C  F054         	call	_BuzzerOn
 18067                           
 18068                           ; BSR set to: 57
 18069                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 18070  002C6A  0E2E               	movlw	46
 18071  002C6C  ECB0  F056         	call	_TMR4_Period8BitSet
 18072  002C70  D6FD               	goto	l19476
 18073  002C72                     l19666:
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 18077  002C72  0E1A               	movlw	26
 18078  002C74  ECB0  F056         	call	_TMR4_Period8BitSet
 18079  002C78  D6F9               	goto	l19476
 18080  002C7A                     l19672:
 18081                           
 18082                           ; BSR set to: 1
 18083                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 18084  002C7A  0EB2               	movlw	178
 18085  002C7C  EC2C  F054         	call	_BuzzerOn
 18086                           
 18087                           ; BSR set to: 57
 18088                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 18089  002C80  0E2E               	movlw	46
 18090  002C82  ECB0  F056         	call	_TMR4_Period8BitSet
 18091  002C86  D6F2               	goto	l19476
 18092  002C88                     l19680:
 18093                           
 18094                           ; BSR set to: 1
 18095                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 18096  002C88  0E66               	movlw	102
 18097  002C8A  ECB0  F056         	call	_TMR4_Period8BitSet
 18098  002C8E  D6EE               	goto	l19476
 18099  002C90                     l19686:
 18100                           
 18101                           ; BSR set to: 1
 18102                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 18103  002C90  0E8D               	movlw	141
 18104  002C92  EC2C  F054         	call	_BuzzerOn
 18105                           
 18106                           ; BSR set to: 57
 18107                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 18108  002C96  0E2E               	movlw	46
 18109  002C98  ECB0  F056         	call	_TMR4_Period8BitSet
 18110  002C9C  D6E7               	goto	l19476
 18111  002C9E                     l19694:
 18112                           
 18113                           ; BSR set to: 1
 18114                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 18115  002C9E  0E1A               	movlw	26
 18116  002CA0  ECB0  F056         	call	_TMR4_Period8BitSet
 18117  002CA4  D6E3               	goto	l19476
 18118  002CA6                     l19700:
 18119                           
 18120                           ; BSR set to: 1
 18121                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 18122  002CA6  0EB2               	movlw	178
 18123  002CA8  EC2C  F054         	call	_BuzzerOn
 18124                           
 18125                           ; BSR set to: 57
 18126                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 18127  002CAC  0E2E               	movlw	46
 18128  002CAE  ECB0  F056         	call	_TMR4_Period8BitSet
 18129  002CB2  D6DC               	goto	l19476
 18130  002CB4                     l19708:
 18131                           
 18132                           ; BSR set to: 1
 18133                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 18134  002CB4  0EFF               	movlw	255
 18135  002CB6  ECB0  F056         	call	_TMR4_Period8BitSet
 18136  002CBA  D6D8               	goto	l19476
 18137  002CBC                     l19714:
 18138                           
 18139                           ; BSR set to: 1
 18140                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 18141  002CBC  0EFF               	movlw	255
 18142  002CBE  ECB0  F056         	call	_TMR4_Period8BitSet
 18143  002CC2  D6EB               	goto	l19502
 18144  002CC4                     l19720:
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 18148  002CC4  0E33               	movlw	51
 18149  002CC6  ECB0  F056         	call	_TMR4_Period8BitSet
 18150  002CCA  D6E7               	goto	l19502
 18151  002CCC                     l19728:
 18152                           
 18153                           ; BSR set to: 1
 18154  002CCC  51F3               	movf	_alarmStep& (0+255),w,b
 18155  002CCE  6F83               	movwf	??_BuzzerTask& (0+255),b
 18156  002CD0  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18157                           
 18158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18159                           ; Switch size 1, requested type "simple"
 18160                           ; Number of cases is 1, Range of values is 0 to 0
 18161                           ; switch strategies available:
 18162                           ; Name         Instructions Cycles
 18163                           ; simple_byte            4     3 (average)
 18164                           ;	Chosen strategy is simple_byte
 18165  002CD2  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18166  002CD4  0A00               	xorlw	0	; case 0
 18167  002CD6  A4D8               	btfss	status,2,c
 18168  002CD8  D7F5               	goto	l19720
 18169                           
 18170                           ; BSR set to: 1
 18171                           ; Switch size 1, requested type "simple"
 18172                           ; Number of cases is 23, Range of values is 0 to 22
 18173                           ; switch strategies available:
 18174                           ; Name         Instructions Cycles
 18175                           ; simple_byte           70    36 (average)
 18176                           ;	Chosen strategy is simple_byte
 18177  002CDA  5183               	movf	??_BuzzerTask& (0+255),w,b
 18178  002CDC  0A00               	xorlw	0	; case 0
 18179  002CDE  B4D8               	btfsc	status,2,c
 18180  002CE0  D77F               	goto	l19574
 18181  002CE2  0A01               	xorlw	1	; case 1
 18182  002CE4  B4D8               	btfsc	status,2,c
 18183  002CE6  D783               	goto	l19582
 18184  002CE8  0A03               	xorlw	3	; case 2
 18185  002CEA  B4D8               	btfsc	status,2,c
 18186  002CEC  D784               	goto	l19588
 18187  002CEE  0A01               	xorlw	1	; case 3
 18188  002CF0  B4D8               	btfsc	status,2,c
 18189  002CF2  D788               	goto	l19596
 18190  002CF4  0A07               	xorlw	7	; case 4
 18191  002CF6  B4D8               	btfsc	status,2,c
 18192  002CF8  D789               	goto	l19602
 18193  002CFA  0A01               	xorlw	1	; case 5
 18194  002CFC  B4D8               	btfsc	status,2,c
 18195  002CFE  D78D               	goto	l19610
 18196  002D00  0A03               	xorlw	3	; case 6
 18197  002D02  B4D8               	btfsc	status,2,c
 18198  002D04  D78E               	goto	l19616
 18199  002D06  0A01               	xorlw	1	; case 7
 18200  002D08  B4D8               	btfsc	status,2,c
 18201  002D0A  D792               	goto	l19624
 18202  002D0C  0A0F               	xorlw	15	; case 8
 18203  002D0E  B4D8               	btfsc	status,2,c
 18204  002D10  D793               	goto	l19630
 18205  002D12  0A01               	xorlw	1	; case 9
 18206  002D14  B4D8               	btfsc	status,2,c
 18207  002D16  D797               	goto	l19638
 18208  002D18  0A03               	xorlw	3	; case 10
 18209  002D1A  B4D8               	btfsc	status,2,c
 18210  002D1C  D798               	goto	l19644
 18211  002D1E  0A01               	xorlw	1	; case 11
 18212  002D20  B4D8               	btfsc	status,2,c
 18213  002D22  D79C               	goto	l19652
 18214  002D24  0A07               	xorlw	7	; case 12
 18215  002D26  B4D8               	btfsc	status,2,c
 18216  002D28  D79D               	goto	l19658
 18217  002D2A  0A01               	xorlw	1	; case 13
 18218  002D2C  B4D8               	btfsc	status,2,c
 18219  002D2E  D7A1               	goto	l19666
 18220  002D30  0A03               	xorlw	3	; case 14
 18221  002D32  B4D8               	btfsc	status,2,c
 18222  002D34  D7A2               	goto	l19672
 18223  002D36  0A01               	xorlw	1	; case 15
 18224  002D38  B4D8               	btfsc	status,2,c
 18225  002D3A  D7A6               	goto	l19680
 18226  002D3C  0A1F               	xorlw	31	; case 16
 18227  002D3E  B4D8               	btfsc	status,2,c
 18228  002D40  D7A7               	goto	l19686
 18229  002D42  0A01               	xorlw	1	; case 17
 18230  002D44  B4D8               	btfsc	status,2,c
 18231  002D46  D7AB               	goto	l19694
 18232  002D48  0A03               	xorlw	3	; case 18
 18233  002D4A  B4D8               	btfsc	status,2,c
 18234  002D4C  D7AC               	goto	l19700
 18235  002D4E  0A01               	xorlw	1	; case 19
 18236  002D50  B4D8               	btfsc	status,2,c
 18237  002D52  D7B0               	goto	l19708
 18238  002D54  0A07               	xorlw	7	; case 20
 18239  002D56  B4D8               	btfsc	status,2,c
 18240  002D58  D7AD               	goto	l19708
 18241  002D5A  0A01               	xorlw	1	; case 21
 18242  002D5C  B4D8               	btfsc	status,2,c
 18243  002D5E  D7AA               	goto	l19708
 18244  002D60  0A03               	xorlw	3	; case 22
 18245  002D62  B4D8               	btfsc	status,2,c
 18246  002D64  D7AB               	goto	l19714
 18247  002D66  D7AE               	goto	l19720
 18248  002D68                     l19730:
 18249                           
 18250                           ; BSR set to: 1
 18251                           ;buzzer.c: 387:             BuzzerOff();
 18252  002D68  EC79  F055         	call	_BuzzerOff	;wreg free
 18253                           
 18254                           ;buzzer.c: 388:             break;
 18255  002D6C  0012               	return	
 18256  002D6E                     l19734:
 18257                           
 18258                           ; BSR set to: 1
 18259  002D6E  0100               	movlb	0	; () banked
 18260  002D70  51F6               	movf	_alarmState& (0+255),w,b
 18261  002D72  0101               	movlb	1	; () banked
 18262  002D74  6F83               	movwf	??_BuzzerTask& (0+255),b
 18263  002D76  6B84               	clrf	(??_BuzzerTask+1)& (0+255),b
 18264                           
 18265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18266                           ; Switch size 1, requested type "simple"
 18267                           ; Number of cases is 1, Range of values is 0 to 0
 18268                           ; switch strategies available:
 18269                           ; Name         Instructions Cycles
 18270                           ; simple_byte            4     3 (average)
 18271                           ;	Chosen strategy is simple_byte
 18272  002D78  5184               	movf	(??_BuzzerTask+1)& (0+255),w,b
 18273  002D7A  0A00               	xorlw	0	; case 0
 18274  002D7C  A4D8               	btfss	status,2,c
 18275  002D7E  D7F4               	goto	l19730
 18276                           
 18277                           ; BSR set to: 1
 18278                           ; Switch size 1, requested type "simple"
 18279                           ; Number of cases is 4, Range of values is 0 to 4
 18280                           ; switch strategies available:
 18281                           ; Name         Instructions Cycles
 18282                           ; simple_byte           13     7 (average)
 18283                           ;	Chosen strategy is simple_byte
 18284  002D80  5183               	movf	??_BuzzerTask& (0+255),w,b
 18285  002D82  0A00               	xorlw	0	; case 0
 18286  002D84  B4D8               	btfsc	status,2,c
 18287  002D86  D7F0               	goto	l19730
 18288  002D88  0A01               	xorlw	1	; case 1
 18289  002D8A  B4D8               	btfsc	status,2,c
 18290  002D8C  D68E               	goto	l19514
 18291  002D8E  0A03               	xorlw	3	; case 2
 18292  002D90  B4D8               	btfsc	status,2,c
 18293  002D92  D6F6               	goto	l19572
 18294  002D94  0A06               	xorlw	6	; case 4
 18295  002D96  B4D8               	btfsc	status,2,c
 18296  002D98  D799               	goto	l19728
 18297  002D9A  D7E6               	goto	l19730
 18298  002D9C                     __end_of_BuzzerTask:
 18299                           	opt callstack 0
 18300                           
 18301 ;; *************** function _printf *****************
 18302 ;; Defined at:
 18303 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;  fmt             2  113[BANK1 ] PTR const unsigned char 
 18306 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 18307 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 18308 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 18309 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 18310 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 18311 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 18312 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 18313 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 18314 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 18315 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 18316 ;;		 -> STR_2(15), STR_1(13), 
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;  ap              2  129[BANK1 ] PTR void [1]
 18319 ;;		 -> ?_printf(2), ?_sprintf(2), 
 18320 ;;  ret             2    0        int 
 18321 ;; Return value:  Size  Location     Type
 18322 ;;                  2  113[BANK1 ] int 
 18323 ;; Registers used:
 18324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18325 ;; Tracked objects:
 18326 ;;		On entry : 3F/1
 18327 ;;		On exit  : 3F/2
 18328 ;;		Unchanged: 0/0
 18329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18330 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18331 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18333 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18334 ;;Total ram usage:       18 bytes
 18335 ;; Hardware stack levels used:    1
 18336 ;; Hardware stack levels required when called:   24
 18337 ;; This function calls:
 18338 ;;		_vfprintf
 18339 ;; This function is called by:
 18340 ;;		_main
 18341 ;;		_BuzzerTask
 18342 ;;		_BuzzerCheck
 18343 ;;		_MonitorFailAlarm
 18344 ;;		_TestAlarm
 18345 ;;		_MuteAlarm
 18346 ;;		_MonitorDump
 18347 ;;		_SetCalibrateState
 18348 ;;		_SetAlarmSV1
 18349 ;;		_SetSV1
 18350 ;; This function uses a non-reentrant model
 18351 ;;
 18352                           
 18353                           	psect	text133
 18354  00A3CC                     __ptext133:
 18355                           	opt callstack 0
 18356  00A3CC                     _printf:
 18357                           	opt callstack 6
 18358                           
 18359                           ; BSR set to: 1
 18360                           
 18361                           ;incstack = 0
 18362  00A3CC  0E73               	movlw	low (?_printf+2)
 18363  00A3CE  6F81               	movwf	printf@ap& (0+255),b
 18364  00A3D0  0E01               	movlw	high (?_printf+2)
 18365  00A3D2  6F82               	movwf	(printf@ap+1)& (0+255),b
 18366                           
 18367                           ; BSR set to: 1
 18368  00A3D4  0E00               	movlw	0
 18369  00A3D6  6F69               	movwf	vfprintf@fp& (0+255),b
 18370  00A3D8  0E00               	movlw	0
 18371  00A3DA  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 18372  00A3DC  0060  F5C4  F16B   	movff	printf@fmt,vfprintf@fmt
 18373  00A3E2  0060  F5C8  F16C   	movff	printf@fmt+1,vfprintf@fmt+1
 18374  00A3E8  0E81               	movlw	low printf@ap
 18375  00A3EA  6F6D               	movwf	vfprintf@ap& (0+255),b
 18376  00A3EC  0E01               	movlw	high printf@ap
 18377  00A3EE  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 18378  00A3F0  ECAE  F047         	call	_vfprintf	;wreg free
 18379                           
 18380                           ; BSR set to: 2
 18381  00A3F4  0012               	return		;funcret
 18382  00A3F6                     __end_of_printf:
 18383                           	opt callstack 0
 18384                           
 18385 ;; *************** function _TMR4_Start *****************
 18386 ;; Defined at:
 18387 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;		None
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      void 
 18394 ;; Registers used:
 18395 ;;		None
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/39
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;Total ram usage:        0 bytes
 18406 ;; Hardware stack levels used:    1
 18407 ;; Hardware stack levels required when called:   16
 18408 ;; This function calls:
 18409 ;;		Nothing
 18410 ;; This function is called by:
 18411 ;;		_BuzzerTest
 18412 ;;		_BuzzerTask
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text134
 18417  00B024                     __ptext134:
 18418                           	opt callstack 0
 18419  00B024                     _TMR4_Start:
 18420                           	opt callstack 13
 18421                           
 18422                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 18423                           
 18424                           ; BSR set to: 2
 18425                           ;incstack = 0
 18426  00B024  8EA0               	bsf	160,7,c	;volatile
 18427  00B026  0012               	return		;funcret
 18428  00B028                     __end_of_TMR4_Start:
 18429                           	opt callstack 0
 18430                           
 18431 ;; *************** function _TMR4_SetInterruptHandler *****************
 18432 ;; Defined at:
 18433 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  InterruptHan    2    4[BANK1 ] PTR FTN()void 
 18436 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 18437 ;; Auto vars:     Size  Location     Type
 18438 ;;		None
 18439 ;; Return value:  Size  Location     Type
 18440 ;;                  1    wreg      void 
 18441 ;; Registers used:
 18442 ;;		wreg, status,2, status,0
 18443 ;; Tracked objects:
 18444 ;;		On entry : 3F/1
 18445 ;;		On exit  : 3F/1
 18446 ;;		Unchanged: 3F/0
 18447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18448 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18451 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18452 ;;Total ram usage:        2 bytes
 18453 ;; Hardware stack levels used:    1
 18454 ;; Hardware stack levels required when called:   16
 18455 ;; This function calls:
 18456 ;;		Nothing
 18457 ;; This function is called by:
 18458 ;;		_TMR4_Initialize
 18459 ;;		_BuzzerTest
 18460 ;;		_BuzzerTask
 18461 ;;		_BuzzerInit
 18462 ;; This function uses a non-reentrant model
 18463 ;;
 18464                           
 18465                           	psect	text135
 18466  00AC68                     __ptext135:
 18467                           	opt callstack 0
 18468  00AC68                     _TMR4_SetInterruptHandler:
 18469                           	opt callstack 12
 18470                           
 18471                           ; BSR set to: 1
 18472                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 18473                           
 18474                           ;incstack = 0
 18475  00AC68  0060  F410  F2ED   	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 18476  00AC6E  0060  F414  F2EE   	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 18477                           
 18478                           ; BSR set to: 1
 18479  00AC74  0012               	return		;funcret
 18480  00AC76                     __end_of_TMR4_SetInterruptHandler:
 18481                           	opt callstack 0
 18482                           
 18483 ;; *************** function _TMR4_Period8BitSet *****************
 18484 ;; Defined at:
 18485 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 18486 ;; Parameters:    Size  Location     Type
 18487 ;;  periodVal       1    wreg     unsigned char 
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;  periodVal       1    4[BANK1 ] unsigned char 
 18490 ;; Return value:  Size  Location     Type
 18491 ;;                  1    wreg      void 
 18492 ;; Registers used:
 18493 ;;		wreg
 18494 ;; Tracked objects:
 18495 ;;		On entry : 7/39
 18496 ;;		On exit  : 0/0
 18497 ;;		Unchanged: 0/0
 18498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;Total ram usage:        1 bytes
 18504 ;; Hardware stack levels used:    1
 18505 ;; Hardware stack levels required when called:   16
 18506 ;; This function calls:
 18507 ;;		Nothing
 18508 ;; This function is called by:
 18509 ;;		_BuzzerTest
 18510 ;;		_BuzzerTask
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text136
 18515  00AD60                     __ptext136:
 18516                           	opt callstack 0
 18517  00AD60                     _TMR4_Period8BitSet:
 18518                           	opt callstack 13
 18519                           
 18520                           ; BSR set to: 1
 18521                           ;incstack = 0
 18522                           ;TMR4_Period8BitSet@periodVal stored from wreg
 18523  00AD60  0101               	movlb	1	; () banked
 18524  00AD62  6F04               	movwf	TMR4_Period8BitSet@periodVal& (0+255),b
 18525                           
 18526                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 18527  00AD64  0060  F413  FF9F   	movff	TMR4_Period8BitSet@periodVal,16287	;volatile
 18528  00AD6A  0012               	return		;funcret
 18529  00AD6C                     __end_of_TMR4_Period8BitSet:
 18530                           	opt callstack 0
 18531                           
 18532 ;; *************** function _SetMonitorFailAlarm *****************
 18533 ;; Defined at:
 18534 ;;		line 225 in file "alarm.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;		None
 18537 ;; Auto vars:     Size  Location     Type
 18538 ;;		None
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  1    wreg      void 
 18541 ;; Registers used:
 18542 ;;		wreg, status,2
 18543 ;; Tracked objects:
 18544 ;;		On entry : 3D/0
 18545 ;;		On exit  : 3F/2
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18552 ;;Total ram usage:        0 bytes
 18553 ;; Hardware stack levels used:    1
 18554 ;; Hardware stack levels required when called:   16
 18555 ;; This function calls:
 18556 ;;		Nothing
 18557 ;; This function is called by:
 18558 ;;		_BuzzerTask
 18559 ;;		_BuzzerCheck
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           	psect	text137
 18564  00AE6E                     __ptext137:
 18565                           	opt callstack 0
 18566  00AE6E                     _SetMonitorFailAlarm:
 18567                           	opt callstack 13
 18568                           
 18569                           ;alarm.c: 226:     monitorFailAlarm = 1;
 18570                           
 18571                           ;incstack = 0
 18572  00AE6E  0E01               	movlw	1
 18573  00AE70  0102               	movlb	2	; () banked
 18574  00AE72  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18575                           
 18576                           ; BSR set to: 2
 18577  00AE74  0012               	return		;funcret
 18578  00AE76                     __end_of_SetMonitorFailAlarm:
 18579                           	opt callstack 0
 18580                           
 18581 ;; *************** function _ClearMonitorFailAlarm *****************
 18582 ;; Defined at:
 18583 ;;		line 270 in file "alarm.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2
 18592 ;; Tracked objects:
 18593 ;;		On entry : 3E/1
 18594 ;;		On exit  : 3F/2
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;Total ram usage:        0 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:   16
 18604 ;; This function calls:
 18605 ;;		Nothing
 18606 ;; This function is called by:
 18607 ;;		_BuzzerTask
 18608 ;;		_MuteAlarm
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612                           	psect	text138
 18613  00AE76                     __ptext138:
 18614                           	opt callstack 0
 18615  00AE76                     _ClearMonitorFailAlarm:
 18616                           	opt callstack 13
 18617                           
 18618                           ;alarm.c: 272:     monitorFailAlarm = 0;
 18619                           
 18620                           ; BSR set to: 2
 18621                           ;incstack = 0
 18622  00AE76  0E00               	movlw	0
 18623  00AE78  0102               	movlb	2	; () banked
 18624  00AE7A  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 18625                           
 18626                           ; BSR set to: 2
 18627  00AE7C  0012               	return		;funcret
 18628  00AE7E                     __end_of_ClearMonitorFailAlarm:
 18629                           	opt callstack 0
 18630                           
 18631 ;; *************** function _BuzzerOn *****************
 18632 ;; Defined at:
 18633 ;;		line 446 in file "buzzer.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;  period          1    wreg     unsigned char 
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;  period          1    4[BANK1 ] unsigned char 
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      void 
 18640 ;; Registers used:
 18641 ;;		wreg, status,2, cstack
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/1
 18644 ;;		On exit  : 3F/39
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18648 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18650 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;Total ram usage:        1 bytes
 18652 ;; Hardware stack levels used:    1
 18653 ;; Hardware stack levels required when called:   17
 18654 ;; This function calls:
 18655 ;;		_CMP1_Enable
 18656 ;; This function is called by:
 18657 ;;		_BuzzerTest
 18658 ;;		_BuzzerTask
 18659 ;;		_BuzzerCheck
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text139
 18664  00A858                     __ptext139:
 18665                           	opt callstack 0
 18666  00A858                     _BuzzerOn:
 18667                           	opt callstack 12
 18668                           
 18669                           ; BSR set to: 2
 18670                           ;incstack = 0
 18671                           ;BuzzerOn@period stored from wreg
 18672  00A858  0101               	movlb	1	; () banked
 18673  00A85A  6F04               	movwf	BuzzerOn@period& (0+255),b
 18674                           
 18675                           ;buzzer.c: 448:     T2PR = period;
 18676  00A85C  0060  F413  FFAB   	movff	BuzzerOn@period,16299	;volatile
 18677                           
 18678                           ;buzzer.c: 449:     PWM6CON = 0x80;
 18679  00A862  0E80               	movlw	128
 18680  00A864  6E6A               	movwf	106,c	;volatile
 18681                           
 18682                           ;buzzer.c: 451:     on = 1;
 18683  00A866  0E01               	movlw	1
 18684  00A868  0100               	movlb	0	; () banked
 18685  00A86A  6FF5               	movwf	_on& (0+255),b
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;buzzer.c: 452:     detected = 0;
 18689  00A86C  0E00               	movlw	0
 18690  00A86E  6FF4               	movwf	_detected& (0+255),b
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;buzzer.c: 454:     CMP1_Enable();
 18694  00A870  EC3F  F057         	call	_CMP1_Enable	;wreg free
 18695                           
 18696                           ; BSR set to: 57
 18697  00A874  0012               	return		;funcret
 18698  00A876                     __end_of_BuzzerOn:
 18699                           	opt callstack 0
 18700                           
 18701 ;; *************** function _CMP1_Enable *****************
 18702 ;; Defined at:
 18703 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;		None
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;		None
 18708 ;; Return value:  Size  Location     Type
 18709 ;;                  1    wreg      void 
 18710 ;; Registers used:
 18711 ;;		None
 18712 ;; Tracked objects:
 18713 ;;		On entry : 6/39
 18714 ;;		On exit  : 3F/39
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18721 ;;Total ram usage:        0 bytes
 18722 ;; Hardware stack levels used:    1
 18723 ;; Hardware stack levels required when called:   16
 18724 ;; This function calls:
 18725 ;;		Nothing
 18726 ;; This function is called by:
 18727 ;;		_CMP1_Initialize
 18728 ;;		_BuzzerOn
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           	psect	text140
 18733  00AE7E                     __ptext140:
 18734                           	opt callstack 0
 18735  00AE7E                     _CMP1_Enable:
 18736                           	opt callstack 12
 18737                           
 18738                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 18739                           
 18740                           ; BSR set to: 57
 18741                           ;incstack = 0
 18742  00AE7E  0139               	movlb	57	; () banked
 18743  00AE80  99A1               	bcf	161,4,b	;volatile
 18744                           
 18745                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 18746  00AE82  8991               	bsf	145,4,b	;volatile
 18747                           
 18748                           ; BSR set to: 57
 18749  00AE84  0012               	return		;funcret
 18750  00AE86                     __end_of_CMP1_Enable:
 18751                           	opt callstack 0
 18752                           
 18753 ;; *************** function _BuzzerClear *****************
 18754 ;; Defined at:
 18755 ;;		line 71 in file "buzzer.c"
 18756 ;; Parameters:    Size  Location     Type
 18757 ;;		None
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;		None
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      void 
 18762 ;; Registers used:
 18763 ;;		wreg, status,2, cstack
 18764 ;; Tracked objects:
 18765 ;;		On entry : 3C/1
 18766 ;;		On exit  : 3F/39
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18773 ;;Total ram usage:        0 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:   18
 18776 ;; This function calls:
 18777 ;;		_BuzzerOff
 18778 ;;		_TMR4_Stop
 18779 ;; This function is called by:
 18780 ;;		_MuteAlarm
 18781 ;;		_AlarmCheckTask
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text141
 18786  00AAE2                     __ptext141:
 18787                           	opt callstack 0
 18788  00AAE2                     _BuzzerClear:
 18789                           	opt callstack 11
 18790                           
 18791                           ;buzzer.c: 72:     alarmState = 0;
 18792                           
 18793                           ; BSR set to: 57
 18794                           ;incstack = 0
 18795  00AAE2  0E00               	movlw	0
 18796  00AAE4  0100               	movlb	0	; () banked
 18797  00AAE6  6FF6               	movwf	_alarmState& (0+255),b
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;buzzer.c: 73:     BuzzerOff();
 18801  00AAE8  EC79  F055         	call	_BuzzerOff	;wreg free
 18802                           
 18803                           ;buzzer.c: 74:     TMR4_Stop();
 18804  00AAEC  EC14  F058         	call	_TMR4_Stop	;wreg free
 18805                           
 18806                           ; BSR set to: 57
 18807  00AAF0  0012               	return		;funcret
 18808  00AAF2                     __end_of_BuzzerClear:
 18809                           	opt callstack 0
 18810                           
 18811 ;; *************** function _TMR4_Stop *****************
 18812 ;; Defined at:
 18813 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;		None
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  1    wreg      void 
 18820 ;; Registers used:
 18821 ;;		None
 18822 ;; Tracked objects:
 18823 ;;		On entry : 3F/39
 18824 ;;		On exit  : 3F/39
 18825 ;;		Unchanged: 3E/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18831 ;;Total ram usage:        0 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:   16
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_BuzzerClear
 18838 ;;		_BuzzerTask
 18839 ;; This function uses a non-reentrant model
 18840 ;;
 18841                           
 18842                           	psect	text142
 18843  00B028                     __ptext142:
 18844                           	opt callstack 0
 18845  00B028                     _TMR4_Stop:
 18846                           	opt callstack 12
 18847                           
 18848                           ; BSR set to: 57
 18849                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 18850                           
 18851                           ; BSR set to: 57
 18852                           ;incstack = 0
 18853  00B028  9EA0               	bcf	160,7,c	;volatile
 18854                           
 18855                           ; BSR set to: 57
 18856  00B02A  0012               	return		;funcret
 18857  00B02C                     __end_of_TMR4_Stop:
 18858                           	opt callstack 0
 18859                           
 18860 ;; *************** function _BuzzerOff *****************
 18861 ;; Defined at:
 18862 ;;		line 458 in file "buzzer.c"
 18863 ;; Parameters:    Size  Location     Type
 18864 ;;		None
 18865 ;; Auto vars:     Size  Location     Type
 18866 ;;		None
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  1    wreg      void 
 18869 ;; Registers used:
 18870 ;;		wreg, status,2, cstack
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/1
 18873 ;;		On exit  : 3F/39
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18880 ;;Total ram usage:        0 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:   17
 18883 ;; This function calls:
 18884 ;;		_CMP1_Disable
 18885 ;; This function is called by:
 18886 ;;		_BuzzerSet
 18887 ;;		_BuzzerClear
 18888 ;;		_BuzzerTest
 18889 ;;		_BuzzerTask
 18890 ;;		_BuzzerInit
 18891 ;;		_BuzzerCheck
 18892 ;; This function uses a non-reentrant model
 18893 ;;
 18894                           
 18895                           	psect	text143
 18896  00AAF2                     __ptext143:
 18897                           	opt callstack 0
 18898  00AAF2                     _BuzzerOff:
 18899                           	opt callstack 11
 18900                           
 18901                           ;buzzer.c: 459:     PWM6CON = 0x00;
 18902                           
 18903                           ; BSR set to: 57
 18904                           ;incstack = 0
 18905  00AAF2  0E00               	movlw	0
 18906  00AAF4  6E6A               	movwf	106,c	;volatile
 18907                           
 18908                           ;buzzer.c: 460:     on = 0;
 18909  00AAF6  0E00               	movlw	0
 18910  00AAF8  0100               	movlb	0	; () banked
 18911  00AAFA  6FF5               	movwf	_on& (0+255),b
 18912                           
 18913                           ; BSR set to: 0
 18914                           ;buzzer.c: 461:     CMP1_Disable();
 18915  00AAFC  EC43  F057         	call	_CMP1_Disable	;wreg free
 18916                           
 18917                           ; BSR set to: 57
 18918  00AB00  0012               	return		;funcret
 18919  00AB02                     __end_of_BuzzerOff:
 18920                           	opt callstack 0
 18921                           
 18922 ;; *************** function _CMP1_Disable *****************
 18923 ;; Defined at:
 18924 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 18925 ;; Parameters:    Size  Location     Type
 18926 ;;		None
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;		None
 18929 ;; Return value:  Size  Location     Type
 18930 ;;                  1    wreg      void 
 18931 ;; Registers used:
 18932 ;;		None
 18933 ;; Tracked objects:
 18934 ;;		On entry : 3E/1
 18935 ;;		On exit  : 3F/39
 18936 ;;		Unchanged: 0/0
 18937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18942 ;;Total ram usage:        0 bytes
 18943 ;; Hardware stack levels used:    1
 18944 ;; Hardware stack levels required when called:   16
 18945 ;; This function calls:
 18946 ;;		Nothing
 18947 ;; This function is called by:
 18948 ;;		_CMP1_Initialize
 18949 ;;		_BuzzerOff
 18950 ;; This function uses a non-reentrant model
 18951 ;;
 18952                           
 18953                           	psect	text144
 18954  00AE86                     __ptext144:
 18955                           	opt callstack 0
 18956  00AE86                     _CMP1_Disable:
 18957                           	opt callstack 12
 18958                           
 18959                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 18960                           
 18961                           ; BSR set to: 57
 18962                           ;incstack = 0
 18963  00AE86  0139               	movlb	57	; () banked
 18964  00AE88  9991               	bcf	145,4,b	;volatile
 18965                           
 18966                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 18967  00AE8A  99A1               	bcf	161,4,b	;volatile
 18968                           
 18969                           ; BSR set to: 57
 18970  00AE8C  0012               	return		;funcret
 18971  00AE8E                     __end_of_CMP1_Disable:
 18972                           	opt callstack 0
 18973                           
 18974 ;; *************** function _SetNoPowerSupplyAlarm *****************
 18975 ;; Defined at:
 18976 ;;		line 245 in file "alarm.c"
 18977 ;; Parameters:    Size  Location     Type
 18978 ;;		None
 18979 ;; Auto vars:     Size  Location     Type
 18980 ;;		None
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  1    wreg      void 
 18983 ;; Registers used:
 18984 ;;		wreg, status,2
 18985 ;; Tracked objects:
 18986 ;;		On entry : 3F/2
 18987 ;;		On exit  : 3F/2
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18994 ;;Total ram usage:        0 bytes
 18995 ;; Hardware stack levels used:    1
 18996 ;; Hardware stack levels required when called:   16
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		_BatteryFailAlarm
 19001 ;; This function uses a non-reentrant model
 19002 ;;
 19003                           
 19004                           	psect	text145
 19005  00AF48                     __ptext145:
 19006                           	opt callstack 0
 19007  00AF48                     _SetNoPowerSupplyAlarm:
 19008                           	opt callstack 12
 19009                           
 19010                           ; BSR set to: 2
 19011                           
 19012                           ; BSR set to: 57
 19013                           ;incstack = 0
 19014  00AF48  0E01               	movlw	1
 19015  00AF4A  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 19016                           
 19017                           ; BSR set to: 2
 19018  00AF4C  0012               	return		;funcret
 19019  00AF4E                     __end_of_SetNoPowerSupplyAlarm:
 19020                           	opt callstack 0
 19021                           
 19022 ;; *************** function _SetBatteryFailAlarm *****************
 19023 ;; Defined at:
 19024 ;;		line 224 in file "alarm.c"
 19025 ;; Parameters:    Size  Location     Type
 19026 ;;		None
 19027 ;; Auto vars:     Size  Location     Type
 19028 ;;		None
 19029 ;; Return value:  Size  Location     Type
 19030 ;;                  1    wreg      void 
 19031 ;; Registers used:
 19032 ;;		wreg, status,2
 19033 ;; Tracked objects:
 19034 ;;		On entry : 3F/2
 19035 ;;		On exit  : 3F/0
 19036 ;;		Unchanged: 0/0
 19037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19042 ;;Total ram usage:        0 bytes
 19043 ;; Hardware stack levels used:    1
 19044 ;; Hardware stack levels required when called:   16
 19045 ;; This function calls:
 19046 ;;		Nothing
 19047 ;; This function is called by:
 19048 ;;		_BatteryFailAlarm
 19049 ;; This function uses a non-reentrant model
 19050 ;;
 19051                           
 19052                           	psect	text146
 19053  00AE8E                     __ptext146:
 19054                           	opt callstack 0
 19055  00AE8E                     _SetBatteryFailAlarm:
 19056                           	opt callstack 12
 19057                           
 19058                           ; BSR set to: 2
 19059                           
 19060                           ; BSR set to: 2
 19061                           ;incstack = 0
 19062  00AE8E  0E01               	movlw	1
 19063  00AE90  0100               	movlb	0	; () banked
 19064  00AE92  6FF3               	movwf	_batteryFailAlarm& (0+255),b
 19065                           
 19066                           ; BSR set to: 0
 19067  00AE94  0012               	return		;funcret
 19068  00AE96                     __end_of_SetBatteryFailAlarm:
 19069                           	opt callstack 0
 19070                           
 19071 ;; *************** function _SetBaterryLowAlarmMed *****************
 19072 ;; Defined at:
 19073 ;;		line 235 in file "alarm.c"
 19074 ;; Parameters:    Size  Location     Type
 19075 ;;		None
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;		None
 19078 ;; Return value:  Size  Location     Type
 19079 ;;                  1    wreg      void 
 19080 ;; Registers used:
 19081 ;;		wreg, status,2
 19082 ;; Tracked objects:
 19083 ;;		On entry : 3F/2
 19084 ;;		On exit  : 3F/2
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19091 ;;Total ram usage:        0 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:   16
 19094 ;; This function calls:
 19095 ;;		Nothing
 19096 ;; This function is called by:
 19097 ;;		_BatteryFailAlarm
 19098 ;; This function uses a non-reentrant model
 19099 ;;
 19100                           
 19101                           	psect	text147
 19102  00AF4E                     __ptext147:
 19103                           	opt callstack 0
 19104  00AF4E                     _SetBaterryLowAlarmMed:
 19105                           	opt callstack 12
 19106                           
 19107                           ; BSR set to: 2
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;incstack = 0
 19111  00AF4E  0E01               	movlw	1
 19112  00AF50  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 19113                           
 19114                           ; BSR set to: 2
 19115  00AF52  0012               	return		;funcret
 19116  00AF54                     __end_of_SetBaterryLowAlarmMed:
 19117                           	opt callstack 0
 19118                           
 19119 ;; *************** function _SetBaterryLowAlarmHigh *****************
 19120 ;; Defined at:
 19121 ;;		line 236 in file "alarm.c"
 19122 ;; Parameters:    Size  Location     Type
 19123 ;;		None
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;		None
 19126 ;; Return value:  Size  Location     Type
 19127 ;;                  1    wreg      void 
 19128 ;; Registers used:
 19129 ;;		wreg, status,2
 19130 ;; Tracked objects:
 19131 ;;		On entry : 3F/2
 19132 ;;		On exit  : 3F/2
 19133 ;;		Unchanged: 0/0
 19134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19139 ;;Total ram usage:        0 bytes
 19140 ;; Hardware stack levels used:    1
 19141 ;; Hardware stack levels required when called:   16
 19142 ;; This function calls:
 19143 ;;		Nothing
 19144 ;; This function is called by:
 19145 ;;		_BatteryFailAlarm
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           	psect	text148
 19150  00AF54                     __ptext148:
 19151                           	opt callstack 0
 19152  00AF54                     _SetBaterryLowAlarmHigh:
 19153                           	opt callstack 12
 19154                           
 19155                           ; BSR set to: 2
 19156                           
 19157                           ; BSR set to: 2
 19158                           ;incstack = 0
 19159  00AF54  0E01               	movlw	1
 19160  00AF56  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19161                           
 19162                           ; BSR set to: 2
 19163  00AF58  0012               	return		;funcret
 19164  00AF5A                     __end_of_SetBaterryLowAlarmHigh:
 19165                           	opt callstack 0
 19166                           
 19167 ;; *************** function _Get12V *****************
 19168 ;; Defined at:
 19169 ;;		line 846 in file "monitor.c"
 19170 ;; Parameters:    Size  Location     Type
 19171 ;;		None
 19172 ;; Auto vars:     Size  Location     Type
 19173 ;;  mv              4   40[BANK1 ] long 
 19174 ;;  v12             2   38[BANK1 ] short 
 19175 ;;  adc             2   36[BANK1 ] unsigned short 
 19176 ;; Return value:  Size  Location     Type
 19177 ;;                  2   30[BANK1 ] short 
 19178 ;; Registers used:
 19179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19180 ;; Tracked objects:
 19181 ;;		On entry : 3F/1
 19182 ;;		On exit  : 3F/1
 19183 ;;		Unchanged: 0/0
 19184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19185 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19186 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19187 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19188 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19189 ;;Total ram usage:       14 bytes
 19190 ;; Hardware stack levels used:    1
 19191 ;; Hardware stack levels required when called:   18
 19192 ;; This function calls:
 19193 ;;		_AdcGetData
 19194 ;;		___aldiv
 19195 ;;		___lmul
 19196 ;; This function is called by:
 19197 ;;		_BatteryFailAlarm
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           
 19201                           	psect	text149
 19202  006D38                     __ptext149:
 19203                           	opt callstack 0
 19204  006D38                     _Get12V:
 19205                           	opt callstack 10
 19206                           
 19207                           ; BSR set to: 1
 19208                           ;monitor.c: 847:     adc_result_t adc = AdcGetData(3);
 19209                           
 19210                           ; BSR set to: 2
 19211                           ;incstack = 0
 19212  006D38  0E00               	movlw	0
 19213  006D3A  6F0B               	movwf	(AdcGetData@id+1)& (0+255),b
 19214  006D3C  0E03               	movlw	3
 19215  006D3E  6F0A               	movwf	AdcGetData@id& (0+255),b
 19216  006D40  EC95  F049         	call	_AdcGetData	;wreg free
 19217  006D44  0060  F428  F124   	movff	?_AdcGetData,Get12V@adc
 19218  006D4A  0060  F42C  F125   	movff	?_AdcGetData+1,Get12V@adc+1
 19219                           
 19220                           ; BSR set to: 1
 19221                           ;monitor.c: 848:     int32_t mv = adc;
 19222  006D50  0060  F490  F128   	movff	Get12V@adc,Get12V@mv
 19223  006D56  0060  F494  F129   	movff	Get12V@adc+1,Get12V@mv+1
 19224  006D5C  6B2A               	clrf	(Get12V@mv+2)& (0+255),b
 19225  006D5E  6B2B               	clrf	(Get12V@mv+3)& (0+255),b
 19226                           
 19227                           ; BSR set to: 1
 19228                           ;monitor.c: 849:     mv = ( mv*4096) / 4096;
 19229  006D60  0060  F4A0  F120   	movff	Get12V@mv,??_Get12V
 19230  006D66  0060  F4A4  F121   	movff	Get12V@mv+1,??_Get12V+1
 19231  006D6C  0060  F4A8  F122   	movff	Get12V@mv+2,??_Get12V+2
 19232  006D72  0060  F4AC  F123   	movff	Get12V@mv+3,??_Get12V+3
 19233  006D78  0E0C               	movlw	12
 19234  006D7A                     u19285:
 19235  006D7A  90D8               	bcf	status,0,c
 19236  006D7C  3720               	rlcf	??_Get12V& (0+255),f,b
 19237  006D7E  3721               	rlcf	(??_Get12V+1)& (0+255),f,b
 19238  006D80  3722               	rlcf	(??_Get12V+2)& (0+255),f,b
 19239  006D82  3723               	rlcf	(??_Get12V+3)& (0+255),f,b
 19240  006D84  2EE8               	decfsz	wreg,f,c
 19241  006D86  D7F9               	goto	u19285
 19242  006D88  0060  F480  F110   	movff	??_Get12V,___aldiv@dividend
 19243  006D8E  0060  F484  F111   	movff	??_Get12V+1,___aldiv@dividend+1
 19244  006D94  0060  F488  F112   	movff	??_Get12V+2,___aldiv@dividend+2
 19245  006D9A  0060  F48C  F113   	movff	??_Get12V+3,___aldiv@dividend+3
 19246  006DA0  0E00               	movlw	0
 19247  006DA2  6F14               	movwf	___aldiv@divisor& (0+255),b
 19248  006DA4  0E10               	movlw	16
 19249  006DA6  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 19250  006DA8  0E00               	movlw	0
 19251  006DAA  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 19252  006DAC  0E00               	movlw	0
 19253  006DAE  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 19254  006DB0  EC20  F03D         	call	___aldiv	;wreg free
 19255  006DB4  0060  F440  F128   	movff	?___aldiv,Get12V@mv
 19256  006DBA  0060  F444  F129   	movff	?___aldiv+1,Get12V@mv+1
 19257  006DC0  0060  F448  F12A   	movff	?___aldiv+2,Get12V@mv+2
 19258  006DC6  0060  F44C  F12B   	movff	?___aldiv+3,Get12V@mv+3
 19259                           
 19260                           ; BSR set to: 1
 19261                           ;monitor.c: 850:     int16_t v12 = (mv*33)/10;
 19262  006DCC  0060  F4A0  F104   	movff	Get12V@mv,___lmul@multiplier
 19263  006DD2  0060  F4A4  F105   	movff	Get12V@mv+1,___lmul@multiplier+1
 19264  006DD8  0060  F4A8  F106   	movff	Get12V@mv+2,___lmul@multiplier+2
 19265  006DDE  0060  F4AC  F107   	movff	Get12V@mv+3,___lmul@multiplier+3
 19266  006DE4  0E21               	movlw	33
 19267  006DE6  6F08               	movwf	___lmul@multiplicand& (0+255),b
 19268  006DE8  0E00               	movlw	0
 19269  006DEA  6F09               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19270  006DEC  0E00               	movlw	0
 19271  006DEE  6F0A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19272  006DF0  0E00               	movlw	0
 19273  006DF2  6F0B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19274  006DF4  EC8F  F04A         	call	___lmul	;wreg free
 19275  006DF8  0060  F410  F110   	movff	?___lmul,___aldiv@dividend
 19276  006DFE  0060  F414  F111   	movff	?___lmul+1,___aldiv@dividend+1
 19277  006E04  0060  F418  F112   	movff	?___lmul+2,___aldiv@dividend+2
 19278  006E0A  0060  F41C  F113   	movff	?___lmul+3,___aldiv@dividend+3
 19279  006E10  0E0A               	movlw	10
 19280  006E12  6F14               	movwf	___aldiv@divisor& (0+255),b
 19281  006E14  0E00               	movlw	0
 19282  006E16  6F15               	movwf	(___aldiv@divisor+1)& (0+255),b
 19283  006E18  0E00               	movlw	0
 19284  006E1A  6F16               	movwf	(___aldiv@divisor+2)& (0+255),b
 19285  006E1C  0E00               	movlw	0
 19286  006E1E  6F17               	movwf	(___aldiv@divisor+3)& (0+255),b
 19287  006E20  EC20  F03D         	call	___aldiv	;wreg free
 19288  006E24  0060  F440  F126   	movff	?___aldiv,Get12V@v12
 19289  006E2A  0060  F444  F127   	movff	?___aldiv+1,Get12V@v12+1
 19290                           
 19291                           ; BSR set to: 1
 19292                           ;monitor.c: 851:     return v12;
 19293  006E30  0060  F498  F11E   	movff	Get12V@v12,?_Get12V
 19294  006E36  0060  F49C  F11F   	movff	Get12V@v12+1,?_Get12V+1
 19295                           
 19296                           ; BSR set to: 1
 19297  006E3C  0012               	return		;funcret
 19298  006E3E                     __end_of_Get12V:
 19299                           	opt callstack 0
 19300                           
 19301 ;; *************** function ___lmul *****************
 19302 ;; Defined at:
 19303 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19304 ;; Parameters:    Size  Location     Type
 19305 ;;  multiplier      4    4[BANK1 ] unsigned long 
 19306 ;;  multiplicand    4    8[BANK1 ] unsigned long 
 19307 ;; Auto vars:     Size  Location     Type
 19308 ;;  product         4   12[BANK1 ] unsigned long 
 19309 ;; Return value:  Size  Location     Type
 19310 ;;                  4    4[BANK1 ] unsigned long 
 19311 ;; Registers used:
 19312 ;;		wreg, status,2, status,0
 19313 ;; Tracked objects:
 19314 ;;		On entry : 3F/1
 19315 ;;		On exit  : 3F/1
 19316 ;;		Unchanged: 0/0
 19317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19318 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19319 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19321 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;Total ram usage:       12 bytes
 19323 ;; Hardware stack levels used:    1
 19324 ;; Hardware stack levels required when called:   16
 19325 ;; This function calls:
 19326 ;;		Nothing
 19327 ;; This function is called by:
 19328 ;;		_GetPressure_pa
 19329 ;;		_SeePressure_pa
 19330 ;;		_GetPressureV_pa
 19331 ;;		_SeePressureV_pa
 19332 ;;		_See12V
 19333 ;;		_Get12V
 19334 ;; This function uses a non-reentrant model
 19335 ;;
 19336                           
 19337                           	psect	text150
 19338  00951E                     __ptext150:
 19339                           	opt callstack 0
 19340  00951E                     ___lmul:
 19341                           	opt callstack 12
 19342                           
 19343                           ; BSR set to: 1
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;incstack = 0
 19347  00951E  0E00               	movlw	0
 19348  009520  6F0C               	movwf	___lmul@product& (0+255),b
 19349  009522  0E00               	movlw	0
 19350  009524  6F0D               	movwf	(___lmul@product+1)& (0+255),b
 19351  009526  0E00               	movlw	0
 19352  009528  6F0E               	movwf	(___lmul@product+2)& (0+255),b
 19353  00952A  0E00               	movlw	0
 19354  00952C  6F0F               	movwf	(___lmul@product+3)& (0+255),b
 19355  00952E                     l19196:
 19356                           
 19357                           ; BSR set to: 1
 19358  00952E  A104               	btfss	___lmul@multiplier& (0+255),0,b
 19359  009530  D008               	goto	l19200
 19360                           
 19361                           ; BSR set to: 1
 19362  009532  5108               	movf	___lmul@multiplicand& (0+255),w,b
 19363  009534  270C               	addwf	___lmul@product& (0+255),f,b
 19364  009536  5109               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19365  009538  230D               	addwfc	(___lmul@product+1)& (0+255),f,b
 19366  00953A  510A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19367  00953C  230E               	addwfc	(___lmul@product+2)& (0+255),f,b
 19368  00953E  510B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19369  009540  230F               	addwfc	(___lmul@product+3)& (0+255),f,b
 19370  009542                     l19200:
 19371                           
 19372                           ; BSR set to: 1
 19373  009542  90D8               	bcf	status,0,c
 19374  009544  3708               	rlcf	___lmul@multiplicand& (0+255),f,b
 19375  009546  3709               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19376  009548  370A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19377  00954A  370B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19378                           
 19379                           ; BSR set to: 1
 19380  00954C  90D8               	bcf	status,0,c
 19381  00954E  3307               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19382  009550  3306               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19383  009552  3305               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19384  009554  3304               	rrcf	___lmul@multiplier& (0+255),f,b
 19385  009556  5104               	movf	___lmul@multiplier& (0+255),w,b
 19386  009558  1105               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19387  00955A  1106               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19388  00955C  1107               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19389  00955E  A4D8               	btfss	status,2,c
 19390  009560  D7E6               	goto	l19196
 19391                           
 19392                           ; BSR set to: 1
 19393  009562  0060  F430  F104   	movff	___lmul@product,?___lmul
 19394  009568  0060  F434  F105   	movff	___lmul@product+1,?___lmul+1
 19395  00956E  0060  F438  F106   	movff	___lmul@product+2,?___lmul+2
 19396  009574  0060  F43C  F107   	movff	___lmul@product+3,?___lmul+3
 19397                           
 19398                           ; BSR set to: 1
 19399  00957A  0012               	return		;funcret
 19400  00957C                     __end_of___lmul:
 19401                           	opt callstack 0
 19402                           
 19403 ;; *************** function ___aldiv *****************
 19404 ;; Defined at:
 19405 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19406 ;; Parameters:    Size  Location     Type
 19407 ;;  dividend        4   16[BANK1 ] long 
 19408 ;;  divisor         4   20[BANK1 ] long 
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;  quotient        4   26[BANK1 ] long 
 19411 ;;  sign            1   25[BANK1 ] unsigned char 
 19412 ;;  counter         1   24[BANK1 ] unsigned char 
 19413 ;; Return value:  Size  Location     Type
 19414 ;;                  4   16[BANK1 ] long 
 19415 ;; Registers used:
 19416 ;;		wreg, status,2, status,0
 19417 ;; Tracked objects:
 19418 ;;		On entry : 3F/1
 19419 ;;		On exit  : 3F/1
 19420 ;;		Unchanged: 0/0
 19421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19422 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19423 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19425 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19426 ;;Total ram usage:       14 bytes
 19427 ;; Hardware stack levels used:    1
 19428 ;; Hardware stack levels required when called:   16
 19429 ;; This function calls:
 19430 ;;		Nothing
 19431 ;; This function is called by:
 19432 ;;		_GetPressure_pa
 19433 ;;		_SeePressure_pa
 19434 ;;		_GetPressureV_pa
 19435 ;;		_SeePressureV_pa
 19436 ;;		_See5V
 19437 ;;		_Get5V
 19438 ;;		_See12V
 19439 ;;		_Get12V
 19440 ;; This function uses a non-reentrant model
 19441 ;;
 19442                           
 19443                           	psect	text151
 19444  007A40                     __ptext151:
 19445                           	opt callstack 0
 19446  007A40                     ___aldiv:
 19447                           	opt callstack 12
 19448                           
 19449                           ; BSR set to: 1
 19450                           
 19451                           ; BSR set to: 1
 19452                           ;incstack = 0
 19453  007A40  0E00               	movlw	0
 19454  007A42  6F19               	movwf	___aldiv@sign& (0+255),b
 19455                           
 19456                           ; BSR set to: 1
 19457  007A44  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19458  007A46  D00A               	goto	l19212
 19459                           
 19460                           ; BSR set to: 1
 19461  007A48  1F17               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19462  007A4A  1F16               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19463  007A4C  1F15               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19464  007A4E  6D14               	negf	___aldiv@divisor& (0+255),b
 19465  007A50  0E00               	movlw	0
 19466  007A52  2315               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19467  007A54  2316               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19468  007A56  2317               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19469                           
 19470                           ; BSR set to: 1
 19471  007A58  0E01               	movlw	1
 19472  007A5A  6F19               	movwf	___aldiv@sign& (0+255),b
 19473  007A5C                     l19212:
 19474                           
 19475                           ; BSR set to: 1
 19476  007A5C  AF13               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 19477  007A5E  D00A               	goto	l19218
 19478                           
 19479                           ; BSR set to: 1
 19480  007A60  1F13               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19481  007A62  1F12               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19482  007A64  1F11               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19483  007A66  6D10               	negf	___aldiv@dividend& (0+255),b
 19484  007A68  0E00               	movlw	0
 19485  007A6A  2311               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19486  007A6C  2312               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19487  007A6E  2313               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19488                           
 19489                           ; BSR set to: 1
 19490  007A70  0E01               	movlw	1
 19491  007A72  1B19               	xorwf	___aldiv@sign& (0+255),f,b
 19492  007A74                     l19218:
 19493                           
 19494                           ; BSR set to: 1
 19495  007A74  0E00               	movlw	0
 19496  007A76  6F1A               	movwf	___aldiv@quotient& (0+255),b
 19497  007A78  0E00               	movlw	0
 19498  007A7A  6F1B               	movwf	(___aldiv@quotient+1)& (0+255),b
 19499  007A7C  0E00               	movlw	0
 19500  007A7E  6F1C               	movwf	(___aldiv@quotient+2)& (0+255),b
 19501  007A80  0E00               	movlw	0
 19502  007A82  6F1D               	movwf	(___aldiv@quotient+3)& (0+255),b
 19503                           
 19504                           ; BSR set to: 1
 19505  007A84  5114               	movf	___aldiv@divisor& (0+255),w,b
 19506  007A86  1115               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19507  007A88  1116               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19508  007A8A  1117               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 19509  007A8C  B4D8               	btfsc	status,2,c
 19510  007A8E  D02A               	goto	l19240
 19511                           
 19512                           ; BSR set to: 1
 19513  007A90  0E01               	movlw	1
 19514  007A92  6F18               	movwf	___aldiv@counter& (0+255),b
 19515  007A94  D006               	goto	l19226
 19516  007A96                     l19224:
 19517                           
 19518                           ; BSR set to: 1
 19519  007A96  90D8               	bcf	status,0,c
 19520  007A98  3714               	rlcf	___aldiv@divisor& (0+255),f,b
 19521  007A9A  3715               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19522  007A9C  3716               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19523  007A9E  3717               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19524  007AA0  2B18               	incf	___aldiv@counter& (0+255),f,b
 19525  007AA2                     l19226:
 19526                           
 19527                           ; BSR set to: 1
 19528  007AA2  AF17               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19529  007AA4  D7F8               	goto	l19224
 19530  007AA6                     u19060:
 19531                           
 19532                           ; BSR set to: 1
 19533  007AA6  90D8               	bcf	status,0,c
 19534  007AA8  371A               	rlcf	___aldiv@quotient& (0+255),f,b
 19535  007AAA  371B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19536  007AAC  371C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19537  007AAE  371D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19538                           
 19539                           ; BSR set to: 1
 19540  007AB0  5114               	movf	___aldiv@divisor& (0+255),w,b
 19541  007AB2  5D10               	subwf	___aldiv@dividend& (0+255),w,b
 19542  007AB4  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19543  007AB6  5911               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19544  007AB8  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19545  007ABA  5912               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 19546  007ABC  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19547  007ABE  5913               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 19548  007AC0  A0D8               	btfss	status,0,c
 19549  007AC2  D009               	goto	l19236
 19550                           
 19551                           ; BSR set to: 1
 19552  007AC4  5114               	movf	___aldiv@divisor& (0+255),w,b
 19553  007AC6  5F10               	subwf	___aldiv@dividend& (0+255),f,b
 19554  007AC8  5115               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19555  007ACA  5B11               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 19556  007ACC  5116               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19557  007ACE  5B12               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 19558  007AD0  5117               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19559  007AD2  5B13               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 19560                           
 19561                           ; BSR set to: 1
 19562  007AD4  811A               	bsf	___aldiv@quotient& (0+255),0,b
 19563  007AD6                     l19236:
 19564                           
 19565                           ; BSR set to: 1
 19566  007AD6  90D8               	bcf	status,0,c
 19567  007AD8  3317               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 19568  007ADA  3316               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 19569  007ADC  3315               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 19570  007ADE  3314               	rrcf	___aldiv@divisor& (0+255),f,b
 19571                           
 19572                           ; BSR set to: 1
 19573  007AE0  2F18               	decfsz	___aldiv@counter& (0+255),f,b
 19574  007AE2  D7E1               	goto	u19060
 19575  007AE4                     l19240:
 19576                           
 19577                           ; BSR set to: 1
 19578  007AE4  5119               	movf	___aldiv@sign& (0+255),w,b
 19579  007AE6  B4D8               	btfsc	status,2,c
 19580  007AE8  D008               	goto	l19244
 19581                           
 19582                           ; BSR set to: 1
 19583  007AEA  1F1D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 19584  007AEC  1F1C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 19585  007AEE  1F1B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 19586  007AF0  6D1A               	negf	___aldiv@quotient& (0+255),b
 19587  007AF2  0E00               	movlw	0
 19588  007AF4  231B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 19589  007AF6  231C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 19590  007AF8  231D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 19591  007AFA                     l19244:
 19592                           
 19593                           ; BSR set to: 1
 19594  007AFA  0060  F468  F110   	movff	___aldiv@quotient,?___aldiv
 19595  007B00  0060  F46C  F111   	movff	___aldiv@quotient+1,?___aldiv+1
 19596  007B06  0060  F470  F112   	movff	___aldiv@quotient+2,?___aldiv+2
 19597  007B0C  0060  F474  F113   	movff	___aldiv@quotient+3,?___aldiv+3
 19598                           
 19599                           ; BSR set to: 1
 19600  007B12  0012               	return		;funcret
 19601  007B14                     __end_of___aldiv:
 19602                           	opt callstack 0
 19603                           
 19604 ;; *************** function _AdcGetData *****************
 19605 ;; Defined at:
 19606 ;;		line 88 in file "monitor.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  id              2   10[BANK1 ] int 
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;  data            2   12[BANK1 ] unsigned short 
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  2   10[BANK1 ] unsigned short 
 19613 ;; Registers used:
 19614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 3F/1
 19617 ;;		On exit  : 3F/1
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19620 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19621 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19623 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19624 ;;Total ram usage:        4 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:   17
 19627 ;; This function calls:
 19628 ;;		___wmul
 19629 ;; This function is called by:
 19630 ;;		_GetPressure_pa
 19631 ;;		_GetPressureV_pa
 19632 ;;		_Get5V
 19633 ;;		_Get12V
 19634 ;; This function uses a non-reentrant model
 19635 ;;
 19636                           
 19637                           	psect	text152
 19638  00932A                     __ptext152:
 19639                           	opt callstack 0
 19640  00932A                     _AdcGetData:
 19641                           	opt callstack 11
 19642                           
 19643                           ; BSR set to: 1
 19644                           ;monitor.c: 89:     adc_result_t data;;monitor.c: 90:     data = adcChannels[id].data;
 19645                           
 19646                           ; BSR set to: 1
 19647                           ;incstack = 0
 19648  00932A  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19649  009330  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19650  009336  0E00               	movlw	0
 19651  009338  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19652  00933A  0E05               	movlw	5
 19653  00933C  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19654  00933E  EC5E  F051         	call	___wmul	;wreg free
 19655  009342  0EBE               	movlw	low (_adcChannels+2)
 19656  009344  2504               	addwf	?___wmul& (0+255),w,b
 19657  009346  6ED9               	movwf	fsr2l,c
 19658  009348  0E02               	movlw	high (_adcChannels+2)
 19659  00934A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19660  00934C  6EDA               	movwf	fsr2h,c
 19661  00934E  006F FF78  F10C    	movff	postinc2,AdcGetData@data
 19662  009354  006F FF74  F10D    	movff	postdec2,AdcGetData@data+1
 19663                           
 19664                           ;monitor.c: 91:     adcChannels[id].dataValid=0;
 19665  00935A  0060  F428  F104   	movff	AdcGetData@id,___wmul@multiplier
 19666  009360  0060  F42C  F105   	movff	AdcGetData@id+1,___wmul@multiplier+1
 19667  009366  0E00               	movlw	0
 19668  009368  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19669  00936A  0E05               	movlw	5
 19670  00936C  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19671  00936E  EC5E  F051         	call	___wmul	;wreg free
 19672  009372  0EBD               	movlw	low (_adcChannels+1)
 19673  009374  2504               	addwf	?___wmul& (0+255),w,b
 19674  009376  6ED9               	movwf	fsr2l,c
 19675  009378  0E02               	movlw	high (_adcChannels+1)
 19676  00937A  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19677  00937C  6EDA               	movwf	fsr2h,c
 19678  00937E  0E00               	movlw	0
 19679  009380  6EDF               	movwf	indf2,c
 19680                           
 19681                           ; BSR set to: 1
 19682                           ;monitor.c: 92:     return data;
 19683  009382  0060  F430  F10A   	movff	AdcGetData@data,?_AdcGetData
 19684  009388  0060  F434  F10B   	movff	AdcGetData@data+1,?_AdcGetData+1
 19685                           
 19686                           ; BSR set to: 1
 19687  00938E  0012               	return		;funcret
 19688  009390                     __end_of_AdcGetData:
 19689                           	opt callstack 0
 19690                           
 19691 ;; *************** function _ClearNoPowerSupplyAlarm *****************
 19692 ;; Defined at:
 19693 ;;		line 290 in file "alarm.c"
 19694 ;; Parameters:    Size  Location     Type
 19695 ;;		None
 19696 ;; Auto vars:     Size  Location     Type
 19697 ;;		None
 19698 ;; Return value:  Size  Location     Type
 19699 ;;                  1    wreg      void 
 19700 ;; Registers used:
 19701 ;;		wreg, status,2
 19702 ;; Tracked objects:
 19703 ;;		On entry : 3F/2
 19704 ;;		On exit  : 3F/2
 19705 ;;		Unchanged: 0/0
 19706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19711 ;;Total ram usage:        0 bytes
 19712 ;; Hardware stack levels used:    1
 19713 ;; Hardware stack levels required when called:   16
 19714 ;; This function calls:
 19715 ;;		Nothing
 19716 ;; This function is called by:
 19717 ;;		_BatteryFailAlarm
 19718 ;; This function uses a non-reentrant model
 19719 ;;
 19720                           
 19721                           	psect	text153
 19722  00AF5A                     __ptext153:
 19723                           	opt callstack 0
 19724  00AF5A                     _ClearNoPowerSupplyAlarm:
 19725                           	opt callstack 12
 19726                           
 19727                           ; BSR set to: 2
 19728                           
 19729                           ; BSR set to: 1
 19730                           ;incstack = 0
 19731  00AF5A  0E00               	movlw	0
 19732  00AF5C  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 19733                           
 19734                           ; BSR set to: 2
 19735  00AF5E  0012               	return		;funcret
 19736  00AF60                     __end_of_ClearNoPowerSupplyAlarm:
 19737                           	opt callstack 0
 19738                           
 19739 ;; *************** function _ClearBatteryFailAlarm *****************
 19740 ;; Defined at:
 19741 ;;		line 269 in file "alarm.c"
 19742 ;; Parameters:    Size  Location     Type
 19743 ;;		None
 19744 ;; Auto vars:     Size  Location     Type
 19745 ;;		None
 19746 ;; Return value:  Size  Location     Type
 19747 ;;                  1    wreg      void 
 19748 ;; Registers used:
 19749 ;;		wreg, status,2
 19750 ;; Tracked objects:
 19751 ;;		On entry : 3F/0
 19752 ;;		On exit  : 3F/0
 19753 ;;		Unchanged: 0/0
 19754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19759 ;;Total ram usage:        0 bytes
 19760 ;; Hardware stack levels used:    1
 19761 ;; Hardware stack levels required when called:   16
 19762 ;; This function calls:
 19763 ;;		Nothing
 19764 ;; This function is called by:
 19765 ;;		_BatteryFailAlarm
 19766 ;; This function uses a non-reentrant model
 19767 ;;
 19768                           
 19769                           	psect	text154
 19770  00AF60                     __ptext154:
 19771                           	opt callstack 0
 19772  00AF60                     _ClearBatteryFailAlarm:
 19773                           	opt callstack 12
 19774                           
 19775                           ; BSR set to: 0
 19776                           
 19777                           ; BSR set to: 2
 19778                           ;incstack = 0
 19779  00AF60  0E00               	movlw	0
 19780  00AF62  6FF3               	movwf	_batteryFailAlarm& (0+255),b
 19781                           
 19782                           ; BSR set to: 0
 19783  00AF64  0012               	return		;funcret
 19784  00AF66                     __end_of_ClearBatteryFailAlarm:
 19785                           	opt callstack 0
 19786                           
 19787 ;; *************** function _ClearBaterryLowAlarmMed *****************
 19788 ;; Defined at:
 19789 ;;		line 280 in file "alarm.c"
 19790 ;; Parameters:    Size  Location     Type
 19791 ;;		None
 19792 ;; Auto vars:     Size  Location     Type
 19793 ;;		None
 19794 ;; Return value:  Size  Location     Type
 19795 ;;                  1    wreg      void 
 19796 ;; Registers used:
 19797 ;;		wreg, status,2
 19798 ;; Tracked objects:
 19799 ;;		On entry : 3F/2
 19800 ;;		On exit  : 3F/2
 19801 ;;		Unchanged: 0/0
 19802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;Total ram usage:        0 bytes
 19808 ;; Hardware stack levels used:    1
 19809 ;; Hardware stack levels required when called:   16
 19810 ;; This function calls:
 19811 ;;		Nothing
 19812 ;; This function is called by:
 19813 ;;		_BatteryFailAlarm
 19814 ;; This function uses a non-reentrant model
 19815 ;;
 19816                           
 19817                           	psect	text155
 19818  00AF66                     __ptext155:
 19819                           	opt callstack 0
 19820  00AF66                     _ClearBaterryLowAlarmMed:
 19821                           	opt callstack 12
 19822                           
 19823                           ; BSR set to: 2
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;incstack = 0
 19827  00AF66  0E00               	movlw	0
 19828  00AF68  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 19829                           
 19830                           ; BSR set to: 2
 19831  00AF6A  0012               	return		;funcret
 19832  00AF6C                     __end_of_ClearBaterryLowAlarmMed:
 19833                           	opt callstack 0
 19834                           
 19835 ;; *************** function _ClearBaterryLowAlarmHigh *****************
 19836 ;; Defined at:
 19837 ;;		line 281 in file "alarm.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;		None
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;		None
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  1    wreg      void 
 19844 ;; Registers used:
 19845 ;;		wreg, status,2
 19846 ;; Tracked objects:
 19847 ;;		On entry : 3F/2
 19848 ;;		On exit  : 3F/2
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;Total ram usage:        0 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:   16
 19858 ;; This function calls:
 19859 ;;		Nothing
 19860 ;; This function is called by:
 19861 ;;		_BatteryFailAlarm
 19862 ;; This function uses a non-reentrant model
 19863 ;;
 19864                           
 19865                           	psect	text156
 19866  00AF6C                     __ptext156:
 19867                           	opt callstack 0
 19868  00AF6C                     _ClearBaterryLowAlarmHigh:
 19869                           	opt callstack 12
 19870                           
 19871                           ; BSR set to: 2
 19872                           
 19873                           ; BSR set to: 2
 19874                           ;incstack = 0
 19875  00AF6C  0E00               	movlw	0
 19876  00AF6E  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 19877                           
 19878                           ; BSR set to: 2
 19879  00AF70  0012               	return		;funcret
 19880  00AF72                     __end_of_ClearBaterryLowAlarmHigh:
 19881                           	opt callstack 0
 19882                           
 19883 ;; *************** function _AdcDataReady *****************
 19884 ;; Defined at:
 19885 ;;		line 77 in file "monitor.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;  id              2   10[BANK1 ] int 
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;		None
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      _Bool 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19894 ;; Tracked objects:
 19895 ;;		On entry : 3F/1
 19896 ;;		On exit  : 3F/1
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19899 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19902 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19903 ;;Total ram usage:        2 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:   17
 19906 ;; This function calls:
 19907 ;;		___wmul
 19908 ;; This function is called by:
 19909 ;;		_BatteryFailAlarm
 19910 ;;		_MonitorFailAlarm
 19911 ;; This function uses a non-reentrant model
 19912 ;;
 19913                           
 19914                           	psect	text157
 19915  00A3F6                     __ptext157:
 19916                           	opt callstack 0
 19917  00A3F6                     _AdcDataReady:
 19918                           	opt callstack 11
 19919                           
 19920                           ; BSR set to: 1
 19921                           ;monitor.c: 78:     return adcChannels[id].dataValid;
 19922                           
 19923                           ; BSR set to: 2
 19924                           ;incstack = 0
 19925  00A3F6  0060  F428  F104   	movff	AdcDataReady@id,___wmul@multiplier
 19926  00A3FC  0060  F42C  F105   	movff	AdcDataReady@id+1,___wmul@multiplier+1
 19927  00A402  0E00               	movlw	0
 19928  00A404  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19929  00A406  0E05               	movlw	5
 19930  00A408  6F06               	movwf	___wmul@multiplicand& (0+255),b
 19931  00A40A  EC5E  F051         	call	___wmul	;wreg free
 19932  00A40E  0EBD               	movlw	low (_adcChannels+1)
 19933  00A410  2504               	addwf	?___wmul& (0+255),w,b
 19934  00A412  6ED9               	movwf	fsr2l,c
 19935  00A414  0E02               	movlw	high (_adcChannels+1)
 19936  00A416  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 19937  00A418  6EDA               	movwf	fsr2h,c
 19938  00A41A  50DF               	movf	indf2,w,c
 19939                           
 19940                           ; BSR set to: 1
 19941  00A41C  0012               	return		;funcret
 19942  00A41E                     __end_of_AdcDataReady:
 19943                           	opt callstack 0
 19944                           
 19945 ;; *************** function _AlarmUpdateLCD *****************
 19946 ;; Defined at:
 19947 ;;		line 440 in file "alarm.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;		None
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  id              2  192[BANK1 ] int 
 19952 ;; Return value:  Size  Location     Type
 19953 ;;                  1    wreg      void 
 19954 ;; Registers used:
 19955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19956 ;; Tracked objects:
 19957 ;;		On entry : 3D/0
 19958 ;;		On exit  : 3C/0
 19959 ;;		Unchanged: 0/0
 19960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19962 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19964 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19965 ;;Total ram usage:        6 bytes
 19966 ;; Hardware stack levels used:    1
 19967 ;; Hardware stack levels required when called:   27
 19968 ;; This function calls:
 19969 ;;		_AlarmDisplay
 19970 ;;		_AnyAlarm
 19971 ;;		_HigherAlarm
 19972 ;;		_ValueDisplay
 19973 ;;		___wmul
 19974 ;; This function is called by:
 19975 ;;		_HistAlarm
 19976 ;;		_AlarmCheckTask
 19977 ;; This function uses a non-reentrant model
 19978 ;;
 19979                           
 19980                           	psect	text158
 19981  0062C0                     __ptext158:
 19982                           	opt callstack 0
 19983  0062C0                     _AlarmUpdateLCD:
 19984                           	opt callstack 2
 19985                           
 19986                           ;alarm.c: 442:     if (histSec) {
 19987                           
 19988                           ; BSR set to: 1
 19989                           ;incstack = 0
 19990  0062C0  0100               	movlb	0	; () banked
 19991  0062C2  51DE               	movf	_histSec& (0+255),w,b
 19992  0062C4  11DF               	iorwf	(_histSec+1)& (0+255),w,b
 19993  0062C6  B4D8               	btfsc	status,2,c
 19994  0062C8  D03F               	goto	l21010
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;alarm.c: 443:         displayStatus = 2;
 19998  0062CA  0E00               	movlw	0
 19999  0062CC  0102               	movlb	2	; () banked
 20000  0062CE  6F73               	movwf	(_displayStatus+1)& (0+255),b
 20001  0062D0  0E02               	movlw	2
 20002  0062D2  6F72               	movwf	_displayStatus& (0+255),b
 20003                           
 20004                           ; BSR set to: 2
 20005                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 20006  0062D4  0060  F7B4  F104   	movff	_hist,___wmul@multiplier
 20007  0062DA  0060  F7B8  F105   	movff	_hist+1,___wmul@multiplier+1
 20008  0062E0  0E00               	movlw	0
 20009  0062E2  0101               	movlb	1	; () banked
 20010  0062E4  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20011  0062E6  0E15               	movlw	21
 20012  0062E8  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20013  0062EA  EC5E  F051         	call	___wmul	;wreg free
 20014  0062EE  0E25               	movlw	low (_alarmData+17)
 20015  0062F0  2504               	addwf	?___wmul& (0+255),w,b
 20016  0062F2  6ED9               	movwf	fsr2l,c
 20017  0062F4  0E09               	movlw	high (_alarmData+17)
 20018  0062F6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20019  0062F8  6EDA               	movwf	fsr2h,c
 20020  0062FA  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6534
 20021  006300  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6534+1
 20022                           
 20023                           ; BSR set to: 1
 20024                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 20025  006306  0060  F7B4  F104   	movff	_hist,___wmul@multiplier
 20026  00630C  0060  F7B8  F105   	movff	_hist+1,___wmul@multiplier+1
 20027  006312  0E00               	movlw	0
 20028  006314  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20029  006316  0E15               	movlw	21
 20030  006318  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20031  00631A  EC5E  F051         	call	___wmul	;wreg free
 20032  00631E  0E14               	movlw	low _alarmData
 20033  006320  2504               	addwf	?___wmul& (0+255),w,b
 20034  006322  6FC4               	movwf	_AlarmUpdateLCD$6535& (0+255),b
 20035  006324  0E09               	movlw	high _alarmData
 20036  006326  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20037  006328  6FC5               	movwf	(_AlarmUpdateLCD$6535+1)& (0+255),b
 20038                           
 20039                           ; BSR set to: 1
 20040                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 20041  00632A  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6534,AlarmDisplay@type
 20042  006330  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6534+1,AlarmDisplay@type+1
 20043  006336  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6535,AlarmDisplay@alarm
 20044  00633C  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6535+1,AlarmDisplay@alarm+1
 20045  006342  EC30  F043         	call	_AlarmDisplay	;wreg free
 20046                           
 20047                           ;alarm.c: 446:     } else {
 20048  006346  0012               	return	
 20049  006348                     l21010:
 20050                           
 20051                           ; BSR set to: 0
 20052                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 20053  006348  0102               	movlb	2	; () banked
 20054  00634A  0572               	decf	_displayStatus& (0+255),w,b
 20055  00634C  1173               	iorwf	(_displayStatus+1)& (0+255),w,b
 20056  00634E  A4D8               	btfss	status,2,c
 20057  006350  D04B               	goto	l21024
 20058                           
 20059                           ; BSR set to: 2
 20060  006352  EC6E  F04F         	call	_AnyAlarm	;wreg free
 20061  006356  0900               	iorlw	0
 20062  006358  B4D8               	btfsc	status,2,c
 20063  00635A  D046               	goto	l21024
 20064                           
 20065                           ; BSR set to: 1
 20066                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 20067  00635C  EC2F  F040         	call	_HigherAlarm	;wreg free
 20068  006360  0060  F428  F1C0   	movff	?_HigherAlarm,AlarmUpdateLCD@id
 20069  006366  0060  F42C  F1C1   	movff	?_HigherAlarm+1,AlarmUpdateLCD@id+1
 20070                           
 20071                           ; BSR set to: 1
 20072                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 20073  00636C  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 20074  006372  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 20075  006378  0E00               	movlw	0
 20076  00637A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20077  00637C  0E15               	movlw	21
 20078  00637E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20079  006380  EC5E  F051         	call	___wmul	;wreg free
 20080  006384  0E25               	movlw	low (_alarmData+17)
 20081  006386  2504               	addwf	?___wmul& (0+255),w,b
 20082  006388  6ED9               	movwf	fsr2l,c
 20083  00638A  0E09               	movlw	high (_alarmData+17)
 20084  00638C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20085  00638E  6EDA               	movwf	fsr2h,c
 20086  006390  006F FF78  F1C2    	movff	postinc2,_AlarmUpdateLCD$6534
 20087  006396  006F FF74  F1C3    	movff	postdec2,_AlarmUpdateLCD$6534+1
 20088                           
 20089                           ; BSR set to: 1
 20090                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 20091  00639C  0060  F700  F104   	movff	AlarmUpdateLCD@id,___wmul@multiplier
 20092  0063A2  0060  F704  F105   	movff	AlarmUpdateLCD@id+1,___wmul@multiplier+1
 20093  0063A8  0E00               	movlw	0
 20094  0063AA  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20095  0063AC  0E15               	movlw	21
 20096  0063AE  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20097  0063B0  EC5E  F051         	call	___wmul	;wreg free
 20098  0063B4  0E14               	movlw	low _alarmData
 20099  0063B6  2504               	addwf	?___wmul& (0+255),w,b
 20100  0063B8  6FC4               	movwf	_AlarmUpdateLCD$6535& (0+255),b
 20101  0063BA  0E09               	movlw	high _alarmData
 20102  0063BC  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20103  0063BE  6FC5               	movwf	(_AlarmUpdateLCD$6535+1)& (0+255),b
 20104                           
 20105                           ; BSR set to: 1
 20106                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 20107  0063C0  0060  F708  F1B7   	movff	_AlarmUpdateLCD$6534,AlarmDisplay@type
 20108  0063C6  0060  F70C  F1B8   	movff	_AlarmUpdateLCD$6534+1,AlarmDisplay@type+1
 20109  0063CC  0060  F710  F1B9   	movff	_AlarmUpdateLCD$6535,AlarmDisplay@alarm
 20110  0063D2  0060  F714  F1BA   	movff	_AlarmUpdateLCD$6535+1,AlarmDisplay@alarm+1
 20111  0063D8  EC30  F043         	call	_AlarmDisplay	;wreg free
 20112                           
 20113                           ; BSR set to: 1
 20114                           ;alarm.c: 454:             displayStatus = 0;
 20115  0063DC  0E00               	movlw	0
 20116  0063DE  0102               	movlb	2	; () banked
 20117  0063E0  6F73               	movwf	(_displayStatus+1)& (0+255),b
 20118  0063E2  0E00               	movlw	0
 20119  0063E4  6F72               	movwf	_displayStatus& (0+255),b
 20120                           
 20121                           ;alarm.c: 455:         } else {
 20122  0063E6  0012               	return	
 20123  0063E8                     l21024:
 20124                           
 20125                           ;alarm.c: 458:             ValueDisplay();
 20126  0063E8  EC46  F011         	call	_ValueDisplay	;wreg free
 20127                           
 20128                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 20129  0063EC  EC6E  F04F         	call	_AnyAlarm	;wreg free
 20130  0063F0  0900               	iorlw	0
 20131  0063F2  B4D8               	btfsc	status,2,c
 20132  0063F4  0012               	return	
 20133                           
 20134                           ; BSR set to: 1
 20135  0063F6  0E00               	movlw	0
 20136  0063F8  0102               	movlb	2	; () banked
 20137  0063FA  6F73               	movwf	(_displayStatus+1)& (0+255),b
 20138  0063FC  0E01               	movlw	1
 20139  0063FE  6F72               	movwf	_displayStatus& (0+255),b
 20140  006400  0012               	return		;funcret
 20141  006402                     __end_of_AlarmUpdateLCD:
 20142                           	opt callstack 0
 20143                           
 20144 ;; *************** function _HigherAlarm *****************
 20145 ;; Defined at:
 20146 ;;		line 359 in file "alarm.c"
 20147 ;; Parameters:    Size  Location     Type
 20148 ;;		None
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  i               2   19[BANK1 ] int 
 20151 ;;  max             2   17[BANK1 ] int 
 20152 ;; Return value:  Size  Location     Type
 20153 ;;                  2   10[BANK1 ] int 
 20154 ;; Registers used:
 20155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20156 ;; Tracked objects:
 20157 ;;		On entry : 3F/1
 20158 ;;		On exit  : 3F/1
 20159 ;;		Unchanged: 0/0
 20160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20161 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20162 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20163 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20164 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20165 ;;Total ram usage:       11 bytes
 20166 ;; Hardware stack levels used:    1
 20167 ;; Hardware stack levels required when called:   17
 20168 ;; This function calls:
 20169 ;;		___wmul
 20170 ;; This function is called by:
 20171 ;;		_MuteAlarm
 20172 ;;		_AlarmUpdateLCD
 20173 ;;		_AlarmCheckTask
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text159
 20178  00805E                     __ptext159:
 20179                           	opt callstack 0
 20180  00805E                     _HigherAlarm:
 20181                           	opt callstack 12
 20182                           
 20183                           ; BSR set to: 1
 20184                           ;alarm.c: 360:     int max=-1;
 20185                           
 20186                           ;incstack = 0
 20187  00805E  6911               	setf	HigherAlarm@max& (0+255),b
 20188  008060  6912               	setf	(HigherAlarm@max+1)& (0+255),b
 20189                           
 20190                           ; BSR set to: 1
 20191                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 20192  008062  0E00               	movlw	0
 20193  008064  6F14               	movwf	(HigherAlarm@i+1)& (0+255),b
 20194  008066  0E00               	movlw	0
 20195  008068  6F13               	movwf	HigherAlarm@i& (0+255),b
 20196  00806A                     l19850:
 20197                           
 20198                           ; BSR set to: 1
 20199                           ;alarm.c: 362:         if (alarms[i]) {
 20200  00806A  90D8               	bcf	status,0,c
 20201  00806C  3513               	rlcf	HigherAlarm@i& (0+255),w,b
 20202  00806E  6ED9               	movwf	fsr2l,c
 20203  008070  3514               	rlcf	(HigherAlarm@i+1)& (0+255),w,b
 20204  008072  6EDA               	movwf	fsr2h,c
 20205  008074  0E00               	movlw	low _alarms
 20206  008076  26D9               	addwf	fsr2l,f,c
 20207  008078  0E03               	movlw	high _alarms
 20208  00807A  22DA               	addwfc	fsr2h,f,c
 20209  00807C  50DE               	movf	postinc2,w,c
 20210  00807E  10DE               	iorwf	postinc2,w,c
 20211  008080  B4D8               	btfsc	status,2,c
 20212  008082  D037               	goto	l19860
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;alarm.c: 363:             if (max<0) max = i;
 20216  008084  AF12               	btfss	(HigherAlarm@max+1)& (0+255),7,b
 20217  008086  D007               	goto	l19856
 20218  008088                     u19350:
 20219                           
 20220                           ; BSR set to: 1
 20221  008088  0060  F44C  F111   	movff	HigherAlarm@i,HigherAlarm@max
 20222  00808E  0060  F450  F112   	movff	HigherAlarm@i+1,HigherAlarm@max+1
 20223  008094  D02E               	goto	l19860
 20224  008096                     l19856:
 20225                           
 20226                           ; BSR set to: 1
 20227  008096  0060  F44C  F104   	movff	HigherAlarm@i,___wmul@multiplier
 20228  00809C  0060  F450  F105   	movff	HigherAlarm@i+1,___wmul@multiplier+1
 20229  0080A2  0E00               	movlw	0
 20230  0080A4  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20231  0080A6  0E15               	movlw	21
 20232  0080A8  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20233  0080AA  EC5E  F051         	call	___wmul	;wreg free
 20234  0080AE  0E25               	movlw	low (_alarmData+17)
 20235  0080B0  2504               	addwf	?___wmul& (0+255),w,b
 20236  0080B2  6ED9               	movwf	fsr2l,c
 20237  0080B4  0E09               	movlw	high (_alarmData+17)
 20238  0080B6  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20239  0080B8  6EDA               	movwf	fsr2h,c
 20240  0080BA  0060  F444  F104   	movff	HigherAlarm@max,___wmul@multiplier
 20241  0080C0  0060  F448  F105   	movff	HigherAlarm@max+1,___wmul@multiplier+1
 20242  0080C6  0E00               	movlw	0
 20243  0080C8  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20244  0080CA  0E15               	movlw	21
 20245  0080CC  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20246  0080CE  EC5E  F051         	call	___wmul	;wreg free
 20247  0080D2  0E25               	movlw	low (_alarmData+17)
 20248  0080D4  2504               	addwf	?___wmul& (0+255),w,b
 20249  0080D6  6EE1               	movwf	fsr1l,c
 20250  0080D8  0E09               	movlw	high (_alarmData+17)
 20251  0080DA  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20252  0080DC  6EE2               	movwf	fsr1h,c
 20253  0080DE  50DE               	movf	postinc2,w,c
 20254  0080E0  5CE6               	subwf	postinc1,w,c
 20255  0080E2  50E6               	movf	postinc1,w,c
 20256  0080E4  0A80               	xorlw	128
 20257  0080E6  6F10               	movwf	(??_HigherAlarm+4)& (0+255),b
 20258  0080E8  50DE               	movf	postinc2,w,c
 20259  0080EA  0A80               	xorlw	128
 20260  0080EC  5910               	subwfb	(??_HigherAlarm+4)& (0+255),w,b
 20261  0080EE  A0D8               	btfss	status,0,c
 20262  0080F0  D7CB               	goto	u19350
 20263  0080F2                     l19860:
 20264                           
 20265                           ; BSR set to: 1
 20266                           ;alarm.c: 366:     }
 20267  0080F2  4B13               	infsnz	HigherAlarm@i& (0+255),f,b
 20268  0080F4  2B14               	incf	(HigherAlarm@i+1)& (0+255),f,b
 20269                           
 20270                           ; BSR set to: 1
 20271  0080F6  5114               	movf	(HigherAlarm@i+1)& (0+255),w,b
 20272  0080F8  E104               	bnz	u19370
 20273  0080FA  0E13               	movlw	19
 20274  0080FC  5D13               	subwf	HigherAlarm@i& (0+255),w,b
 20275  0080FE  A0D8               	btfss	status,0,c
 20276  008100  D7B4               	goto	l19850
 20277  008102                     u19370:
 20278                           
 20279                           ; BSR set to: 1
 20280                           ;alarm.c: 367:     return max;
 20281  008102  0060  F444  F10A   	movff	HigherAlarm@max,?_HigherAlarm
 20282  008108  0060  F448  F10B   	movff	HigherAlarm@max+1,?_HigherAlarm+1
 20283                           
 20284                           ; BSR set to: 1
 20285  00810E  0012               	return		;funcret
 20286  008110                     __end_of_HigherAlarm:
 20287                           	opt callstack 0
 20288                           
 20289 ;; *************** function _AlarmDisplay *****************
 20290 ;; Defined at:
 20291 ;;		line 110 in file "display.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;  type            2  183[BANK1 ] int 
 20294 ;;  alarm           2  185[BANK1 ] PTR unsigned char 
 20295 ;;		 -> alarmData(399), 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  t               1  187[BANK1 ] unsigned char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  1    wreg      void 
 20300 ;; Registers used:
 20301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20302 ;; Tracked objects:
 20303 ;;		On entry : 3F/1
 20304 ;;		On exit  : 3F/1
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20307 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20308 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20310 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;Total ram usage:        9 bytes
 20312 ;; Hardware stack levels used:    1
 20313 ;; Hardware stack levels required when called:   26
 20314 ;; This function calls:
 20315 ;;		_ValueDisplay
 20316 ;;		___awmod
 20317 ;;		_sprintf
 20318 ;; This function is called by:
 20319 ;;		_AlarmUpdateLCD
 20320 ;; This function uses a non-reentrant model
 20321 ;;
 20322                           
 20323                           	psect	text160
 20324  008660                     __ptext160:
 20325                           	opt callstack 0
 20326  008660                     _AlarmDisplay:
 20327                           	opt callstack 2
 20328                           
 20329                           ; BSR set to: 1
 20330                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 20331                           
 20332                           ; BSR set to: 1
 20333                           ;incstack = 0
 20334  008660  0E04               	movlw	4
 20335  008662  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20336  008664  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20337  008666  B4D8               	btfsc	status,2,c
 20338  008668  D014               	goto	l19436
 20339                           
 20340                           ; BSR set to: 1
 20341  00866A  0E02               	movlw	2
 20342  00866C  19B7               	xorwf	AlarmDisplay@type& (0+255),w,b
 20343  00866E  11B8               	iorwf	(AlarmDisplay@type+1)& (0+255),w,b
 20344  008670  B4D8               	btfsc	status,2,c
 20345  008672  D004               	goto	l19432
 20346                           
 20347                           ; BSR set to: 1
 20348  008674  0E00               	movlw	0
 20349  008676  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20350  008678  0E4C               	movlw	76
 20351  00867A  D003               	goto	L2
 20352  00867C                     l19432:
 20353                           
 20354                           ; BSR set to: 1
 20355  00867C  0E00               	movlw	0
 20356  00867E  6FBF               	movwf	(_AlarmDisplay$4016+1)& (0+255),b
 20357  008680  0E4D               	movlw	77
 20358  008682                     L2:
 20359  008682  6FBE               	movwf	_AlarmDisplay$4016& (0+255),b
 20360                           
 20361                           ; BSR set to: 1
 20362  008684  0060  F6F8  F1BC   	movff	_AlarmDisplay$4016,_AlarmDisplay$4015
 20363  00868A  0060  F6FC  F1BD   	movff	_AlarmDisplay$4016+1,_AlarmDisplay$4015+1
 20364  008690  D004               	goto	l19438
 20365  008692                     l19436:
 20366                           
 20367                           ; BSR set to: 1
 20368  008692  0E00               	movlw	0
 20369  008694  6FBD               	movwf	(_AlarmDisplay$4015+1)& (0+255),b
 20370  008696  0E48               	movlw	72
 20371  008698  6FBC               	movwf	_AlarmDisplay$4015& (0+255),b
 20372  00869A                     l19438:
 20373                           
 20374                           ; BSR set to: 1
 20375  00869A  0060  F6F0  F1BB   	movff	_AlarmDisplay$4015,AlarmDisplay@t
 20376                           
 20377                           ; BSR set to: 1
 20378                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 20379  0086A0  0ED1               	movlw	low _msg2
 20380  0086A2  6F71               	movwf	sprintf@s& (0+255),b
 20381  0086A4  0E03               	movlw	high _msg2
 20382  0086A6  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20383  0086A8  0EB2               	movlw	low STR_13
 20384  0086AA  6F73               	movwf	sprintf@fmt& (0+255),b
 20385  0086AC  0EFF               	movlw	high STR_13
 20386  0086AE  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20387  0086B0  0060  F6EC  F175   	movff	AlarmDisplay@t,?_sprintf+4
 20388  0086B6  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20389  0086B8  0060  F6E4  F177   	movff	AlarmDisplay@alarm,?_sprintf+6
 20390  0086BE  0060  F6E8  F178   	movff	AlarmDisplay@alarm+1,?_sprintf+7
 20391  0086C4  ECED  F04A         	call	_sprintf	;wreg free
 20392                           
 20393                           ; BSR set to: 1
 20394                           ;display.c: 117:     ValueDisplay();
 20395  0086C8  EC46  F011         	call	_ValueDisplay	;wreg free
 20396                           
 20397                           ;display.c: 118:     cnt++;
 20398  0086CC  0102               	movlb	2	; () banked
 20399  0086CE  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 20400  0086D0  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 20401                           
 20402                           ; BSR set to: 2
 20403                           ;display.c: 119:     cnt = cnt%10;
 20404  0086D2  0060  FA18  F104   	movff	AlarmDisplay@cnt,___awmod@dividend
 20405  0086D8  0060  FA1C  F105   	movff	AlarmDisplay@cnt+1,___awmod@dividend+1
 20406  0086DE  0E00               	movlw	0
 20407  0086E0  0101               	movlb	1	; () banked
 20408  0086E2  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20409  0086E4  0E0A               	movlw	10
 20410  0086E6  6F06               	movwf	___awmod@divisor& (0+255),b
 20411  0086E8  EC01  F047         	call	___awmod	;wreg free
 20412  0086EC  0060  F410  F286   	movff	?___awmod,AlarmDisplay@cnt
 20413  0086F2  0060  F414  F287   	movff	?___awmod+1,AlarmDisplay@cnt+1
 20414                           
 20415                           ; BSR set to: 1
 20416  0086F8  0012               	return		;funcret
 20417  0086FA                     __end_of_AlarmDisplay:
 20418                           	opt callstack 0
 20419                           
 20420 ;; *************** function _ValueDisplay *****************
 20421 ;; Defined at:
 20422 ;;		line 66 in file "display.c"
 20423 ;; Parameters:    Size  Location     Type
 20424 ;;		None
 20425 ;; Auto vars:     Size  Location     Type
 20426 ;;  ti              2  181[BANK1 ] short 
 20427 ;;  te              2  179[BANK1 ] short 
 20428 ;;  r               2  177[BANK1 ] short 
 20429 ;;  tde             2  172[BANK1 ] short 
 20430 ;;  tdi             2  170[BANK1 ] short 
 20431 ;;  spr             2  157[BANK1 ] short 
 20432 ;;  pmax            2  155[BANK1 ] short 
 20433 ;;  vol             2  153[BANK1 ] short 
 20434 ;;  pe              2  151[BANK1 ] short 
 20435 ;;  pi              2  149[BANK1 ] short 
 20436 ;;  tep             2    0        short 
 20437 ;;  tip             2    0        short 
 20438 ;;  bpm             2    0        short 
 20439 ;;  er              1  176[BANK1 ] char 
 20440 ;;  etde            1  175[BANK1 ] char 
 20441 ;;  etdi            1  174[BANK1 ] char 
 20442 ;;  dr              1  165[BANK1 ] char 
 20443 ;;  dtde            1  164[BANK1 ] char 
 20444 ;;  dtdi            1  163[BANK1 ] char 
 20445 ;;  ete             1  162[BANK1 ] char 
 20446 ;;  eti             1  161[BANK1 ] char 
 20447 ;;  dte             1    0        char 
 20448 ;;  dti             1    0        char 
 20449 ;; Return value:  Size  Location     Type
 20450 ;;                  1    wreg      void 
 20451 ;; Registers used:
 20452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20453 ;; Tracked objects:
 20454 ;;		On entry : 3C/2
 20455 ;;		On exit  : 3D/1
 20456 ;;		Unchanged: 0/0
 20457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20459 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20461 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20462 ;;Total ram usage:       42 bytes
 20463 ;; Hardware stack levels used:    1
 20464 ;; Hardware stack levels required when called:   25
 20465 ;; This function calls:
 20466 ;;		_GetAlarmState
 20467 ;;		_GetBpm
 20468 ;;		_GetDisableAlarmSV1
 20469 ;;		_GetEp
 20470 ;;		_GetIp
 20471 ;;		_GetPmax
 20472 ;;		_GetSpr
 20473 ;;		_GetTargetEp
 20474 ;;		_GetTargetIp
 20475 ;;		_GetTde
 20476 ;;		_GetTdi
 20477 ;;		_GetTe
 20478 ;;		_GetTi
 20479 ;;		_GetVolume
 20480 ;;		___awdiv
 20481 ;;		___awmod
 20482 ;;		___wmul
 20483 ;;		_sprintf
 20484 ;; This function is called by:
 20485 ;;		_AlarmDisplay
 20486 ;;		_AlarmUpdateLCD
 20487 ;; This function uses a non-reentrant model
 20488 ;;
 20489                           
 20490                           	psect	text161
 20491  00228C                     __ptext161:
 20492                           	opt callstack 0
 20493  00228C                     _ValueDisplay:
 20494                           	opt callstack 3
 20495                           
 20496                           ;display.c: 67:     if (!enable) {
 20497                           
 20498                           ; BSR set to: 1
 20499                           ;incstack = 0
 20500  00228C  0100               	movlb	0	; () banked
 20501  00228E  51FA               	movf	_enable& (0+255),w,b
 20502  002290  A4D8               	btfss	status,2,c
 20503  002292  D01F               	goto	l18984
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 20507  002294  0103               	movlb	3	; () banked
 20508  002296  51E5               	movf	_msg1& (0+255),w,b
 20509  002298  A4D8               	btfss	status,2,c
 20510  00229A  D00B               	goto	l18978
 20511                           
 20512                           ; BSR set to: 3
 20513  00229C  0EE5               	movlw	low _msg1
 20514  00229E  0101               	movlb	1	; () banked
 20515  0022A0  6F71               	movwf	sprintf@s& (0+255),b
 20516  0022A2  0E03               	movlw	high _msg1
 20517  0022A4  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20518  0022A6  0ECE               	movlw	low STR_8
 20519  0022A8  6F73               	movwf	sprintf@fmt& (0+255),b
 20520  0022AA  0EFE               	movlw	high STR_8
 20521  0022AC  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20522  0022AE  ECED  F04A         	call	_sprintf	;wreg free
 20523  0022B2                     l18978:
 20524                           
 20525                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 20526  0022B2  0103               	movlb	3	; () banked
 20527  0022B4  51D1               	movf	_msg2& (0+255),w,b
 20528  0022B6  A4D8               	btfss	status,2,c
 20529  0022B8  0012               	return	
 20530                           
 20531                           ; BSR set to: 3
 20532  0022BA  0ED1               	movlw	low _msg2
 20533  0022BC  0101               	movlb	1	; () banked
 20534  0022BE  6F71               	movwf	sprintf@s& (0+255),b
 20535  0022C0  0E03               	movlw	high _msg2
 20536  0022C2  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20537  0022C4  0EBD               	movlw	low STR_9
 20538  0022C6  6F73               	movwf	sprintf@fmt& (0+255),b
 20539  0022C8  0EFE               	movlw	high STR_9
 20540  0022CA  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20541  0022CC  ECED  F04A         	call	_sprintf	;wreg free
 20542  0022D0  0012               	return	
 20543  0022D2                     l18984:
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 20547  0022D2  EC42  F056         	call	_GetTdi	;wreg free
 20548  0022D6  0060  F410  F1AA   	movff	?_GetTdi,ValueDisplay@tdi
 20549  0022DC  0060  F414  F1AB   	movff	?_GetTdi+1,ValueDisplay@tdi+1
 20550                           
 20551                           ;display.c: 75:     int16_t tde = GetTde();
 20552  0022E2  ECBC  F056         	call	_GetTde	;wreg free
 20553  0022E6  0060  F410  F1AC   	movff	?_GetTde,ValueDisplay@tde
 20554  0022EC  0060  F414  F1AD   	movff	?_GetTde+1,ValueDisplay@tde+1
 20555                           
 20556                           ;display.c: 76:     int16_t ti = GetTi();
 20557  0022F2  EC2A  F055         	call	_GetTi	;wreg free
 20558  0022F6  0060  F410  F1B5   	movff	?_GetTi,ValueDisplay@ti
 20559  0022FC  0060  F414  F1B6   	movff	?_GetTi+1,ValueDisplay@ti+1
 20560                           
 20561                           ;display.c: 77:     int16_t te = GetTe();
 20562  002302  EC34  F055         	call	_GetTe	;wreg free
 20563  002306  0060  F410  F1B3   	movff	?_GetTe,ValueDisplay@te
 20564  00230C  0060  F414  F1B4   	movff	?_GetTe+1,ValueDisplay@te+1
 20565                           
 20566                           ;display.c: 78:     int8_t eti = ti/1000;
 20567  002312  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20568  002318  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20569  00231E  0E03               	movlw	3
 20570  002320  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20571  002322  0EE8               	movlw	232
 20572  002324  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20573  002326  EC7D  F045         	call	___awdiv	;wreg free
 20574  00232A  510A               	movf	?___awdiv& (0+255),w,b
 20575  00232C  6FA1               	movwf	ValueDisplay@eti& (0+255),b
 20576                           
 20577                           ; BSR set to: 1
 20578  00232E  51A1               	movf	ValueDisplay@eti& (0+255),w,b
 20579  002330  6F04               	movwf	___wmul@multiplier& (0+255),b
 20580  002332  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20581  002334  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20582  002336  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20583  002338  0EFC               	movlw	252
 20584  00233A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20585  00233C  0E18               	movlw	24
 20586  00233E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20587  002340  EC5E  F051         	call	___wmul	;wreg free
 20588  002344  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20589  002346  2504               	addwf	?___wmul& (0+255),w,b
 20590  002348  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20591  00234A  51B6               	movf	(ValueDisplay@ti+1)& (0+255),w,b
 20592  00234C  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20593  00234E  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20594  002350  0E00               	movlw	0
 20595  002352  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20596  002354  0E0A               	movlw	10
 20597  002356  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20598  002358  EC7D  F045         	call	___awdiv	;wreg free
 20599                           
 20600                           ; BSR set to: 1
 20601                           ;display.c: 80:     int8_t ete = te/1000;
 20602  00235C  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20603  002362  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20604  002368  0E03               	movlw	3
 20605  00236A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20606  00236C  0EE8               	movlw	232
 20607  00236E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20608  002370  EC7D  F045         	call	___awdiv	;wreg free
 20609  002374  510A               	movf	?___awdiv& (0+255),w,b
 20610  002376  6FA2               	movwf	ValueDisplay@ete& (0+255),b
 20611  002378  51A2               	movf	ValueDisplay@ete& (0+255),w,b
 20612  00237A  6F04               	movwf	___wmul@multiplier& (0+255),b
 20613  00237C  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20614  00237E  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20615  002380  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20616  002382  0EFC               	movlw	252
 20617  002384  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20618  002386  0E18               	movlw	24
 20619  002388  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20620  00238A  EC5E  F051         	call	___wmul	;wreg free
 20621  00238E  51B3               	movf	ValueDisplay@te& (0+255),w,b
 20622  002390  2504               	addwf	?___wmul& (0+255),w,b
 20623  002392  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20624  002394  51B4               	movf	(ValueDisplay@te+1)& (0+255),w,b
 20625  002396  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20626  002398  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20627  00239A  0E00               	movlw	0
 20628  00239C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20629  00239E  0E0A               	movlw	10
 20630  0023A0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20631  0023A2  EC7D  F045         	call	___awdiv	;wreg free
 20632                           
 20633                           ; BSR set to: 1
 20634  0023A6  EC50  F056         	call	_GetBpm	;wreg free
 20635                           
 20636                           ; BSR set to: 1
 20637                           ;display.c: 83:     int16_t pi = GetIp();
 20638  0023AA  EC0A  F028         	call	_GetIp	;wreg free
 20639  0023AE  0060  F448  F195   	movff	?_GetIp,ValueDisplay@pi
 20640  0023B4  0060  F44C  F196   	movff	?_GetIp+1,ValueDisplay@pi+1
 20641                           
 20642                           ; BSR set to: 1
 20643                           ;display.c: 84:     int16_t pe = GetEp();
 20644  0023BA  ECC8  F028         	call	_GetEp	;wreg free
 20645  0023BE  0060  F448  F197   	movff	?_GetEp,ValueDisplay@pe
 20646  0023C4  0060  F44C  F198   	movff	?_GetEp+1,ValueDisplay@pe+1
 20647                           
 20648                           ; BSR set to: 1
 20649                           ;display.c: 85:     int8_t etdi = tdi/1000;
 20650  0023CA  0060  F6A8  F10A   	movff	ValueDisplay@tdi,___awdiv@dividend
 20651  0023D0  0060  F6AC  F10B   	movff	ValueDisplay@tdi+1,___awdiv@dividend+1
 20652  0023D6  0E03               	movlw	3
 20653  0023D8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20654  0023DA  0EE8               	movlw	232
 20655  0023DC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20656  0023DE  EC7D  F045         	call	___awdiv	;wreg free
 20657  0023E2  510A               	movf	?___awdiv& (0+255),w,b
 20658  0023E4  6FAE               	movwf	ValueDisplay@etdi& (0+255),b
 20659                           
 20660                           ; BSR set to: 1
 20661                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 20662  0023E6  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20663  0023E8  6F04               	movwf	___wmul@multiplier& (0+255),b
 20664  0023EA  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20665  0023EC  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20666  0023EE  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20667  0023F0  0EFC               	movlw	252
 20668  0023F2  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20669  0023F4  0E18               	movlw	24
 20670  0023F6  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20671  0023F8  EC5E  F051         	call	___wmul	;wreg free
 20672  0023FC  51AA               	movf	ValueDisplay@tdi& (0+255),w,b
 20673  0023FE  2504               	addwf	?___wmul& (0+255),w,b
 20674  002400  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20675  002402  51AB               	movf	(ValueDisplay@tdi+1)& (0+255),w,b
 20676  002404  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20677  002406  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20678  002408  0E00               	movlw	0
 20679  00240A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20680  00240C  0E0A               	movlw	10
 20681  00240E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20682  002410  EC7D  F045         	call	___awdiv	;wreg free
 20683  002414  510A               	movf	?___awdiv& (0+255),w,b
 20684  002416  6FA3               	movwf	ValueDisplay@dtdi& (0+255),b
 20685                           
 20686                           ; BSR set to: 1
 20687                           ;display.c: 87:     int8_t etde = tde/1000;
 20688  002418  0060  F6B0  F10A   	movff	ValueDisplay@tde,___awdiv@dividend
 20689  00241E  0060  F6B4  F10B   	movff	ValueDisplay@tde+1,___awdiv@dividend+1
 20690  002424  0E03               	movlw	3
 20691  002426  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20692  002428  0EE8               	movlw	232
 20693  00242A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20694  00242C  EC7D  F045         	call	___awdiv	;wreg free
 20695  002430  510A               	movf	?___awdiv& (0+255),w,b
 20696  002432  6FAF               	movwf	ValueDisplay@etde& (0+255),b
 20697                           
 20698                           ; BSR set to: 1
 20699                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 20700  002434  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20701  002436  6F04               	movwf	___wmul@multiplier& (0+255),b
 20702  002438  6B05               	clrf	(___wmul@multiplier+1)& (0+255),b
 20703  00243A  BF04               	btfsc	___wmul@multiplier& (0+255),7,b
 20704  00243C  0705               	decf	(___wmul@multiplier+1)& (0+255),f,b
 20705  00243E  0EFC               	movlw	252
 20706  002440  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20707  002442  0E18               	movlw	24
 20708  002444  6F06               	movwf	___wmul@multiplicand& (0+255),b
 20709  002446  EC5E  F051         	call	___wmul	;wreg free
 20710  00244A  51AC               	movf	ValueDisplay@tde& (0+255),w,b
 20711  00244C  2504               	addwf	?___wmul& (0+255),w,b
 20712  00244E  6F0A               	movwf	___awdiv@dividend& (0+255),b
 20713  002450  51AD               	movf	(ValueDisplay@tde+1)& (0+255),w,b
 20714  002452  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 20715  002454  6F0B               	movwf	(___awdiv@dividend+1)& (0+255),b
 20716  002456  0E00               	movlw	0
 20717  002458  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20718  00245A  0E0A               	movlw	10
 20719  00245C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20720  00245E  EC7D  F045         	call	___awdiv	;wreg free
 20721  002462  510A               	movf	?___awdiv& (0+255),w,b
 20722  002464  6FA4               	movwf	ValueDisplay@dtde& (0+255),b
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 20726  002466  51B5               	movf	ValueDisplay@ti& (0+255),w,b
 20727  002468  11B6               	iorwf	(ValueDisplay@ti+1)& (0+255),w,b
 20728  00246A  B4D8               	btfsc	status,2,c
 20729  00246C  D027               	goto	l19008
 20730                           
 20731                           ; BSR set to: 1
 20732  00246E  0E00               	movlw	0
 20733  002470  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20734  002472  0E0A               	movlw	10
 20735  002474  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20736  002476  0060  F6D4  F10A   	movff	ValueDisplay@ti,___awdiv@dividend
 20737  00247C  0060  F6D8  F10B   	movff	ValueDisplay@ti+1,___awdiv@dividend+1
 20738  002482  EC7D  F045         	call	___awdiv	;wreg free
 20739  002486  0060  F428  F19F   	movff	?___awdiv,_ValueDisplay$6533
 20740  00248C  0060  F42C  F1A0   	movff	?___awdiv+1,_ValueDisplay$6533+1
 20741  002492  0060  F6CC  F10A   	movff	ValueDisplay@te,___awdiv@dividend
 20742  002498  0060  F6D0  F10B   	movff	ValueDisplay@te+1,___awdiv@dividend+1
 20743  00249E  0060  F67C  F10C   	movff	_ValueDisplay$6533,___awdiv@divisor
 20744  0024A4  0060  F680  F10D   	movff	_ValueDisplay$6533+1,___awdiv@divisor+1
 20745  0024AA  EC7D  F045         	call	___awdiv	;wreg free
 20746  0024AE  0060  F428  F1B1   	movff	?___awdiv,ValueDisplay@r
 20747  0024B4  0060  F42C  F1B2   	movff	?___awdiv+1,ValueDisplay@r+1
 20748  0024BA  D004               	goto	l19010
 20749  0024BC                     l19008:
 20750                           
 20751                           ; BSR set to: 1
 20752  0024BC  0E00               	movlw	0
 20753  0024BE  6FB2               	movwf	(ValueDisplay@r+1)& (0+255),b
 20754  0024C0  0E00               	movlw	0
 20755  0024C2  6FB1               	movwf	ValueDisplay@r& (0+255),b
 20756  0024C4                     l19010:
 20757                           
 20758                           ; BSR set to: 1
 20759                           ;display.c: 92:     int8_t er = r/10;
 20760  0024C4  0060  F6C4  F10A   	movff	ValueDisplay@r,___awdiv@dividend
 20761  0024CA  0060  F6C8  F10B   	movff	ValueDisplay@r+1,___awdiv@dividend+1
 20762  0024D0  0E00               	movlw	0
 20763  0024D2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 20764  0024D4  0E0A               	movlw	10
 20765  0024D6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 20766  0024D8  EC7D  F045         	call	___awdiv	;wreg free
 20767  0024DC  510A               	movf	?___awdiv& (0+255),w,b
 20768  0024DE  6FB0               	movwf	ValueDisplay@er& (0+255),b
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 20772  0024E0  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20773  0024E2  0DF6               	mullw	-10
 20774  0024E4  50F3               	movf	243,w,c
 20775  0024E6  25B1               	addwf	ValueDisplay@r& (0+255),w,b
 20776  0024E8  6FA5               	movwf	ValueDisplay@dr& (0+255),b
 20777                           
 20778                           ; BSR set to: 1
 20779  0024EA  EC36  F052         	call	_GetTargetIp	;wreg free
 20780                           
 20781                           ; BSR set to: 1
 20782  0024EE  EC49  F052         	call	_GetTargetEp	;wreg free
 20783                           
 20784                           ; BSR set to: 1
 20785                           ;display.c: 96:     int16_t vol = GetVolume();
 20786  0024F2  EC3B  F056         	call	_GetVolume	;wreg free
 20787  0024F6  0060  F410  F199   	movff	?_GetVolume,ValueDisplay@vol
 20788  0024FC  0060  F414  F19A   	movff	?_GetVolume+1,ValueDisplay@vol+1
 20789                           
 20790                           ; BSR set to: 1
 20791                           ;display.c: 97:     int16_t pmax = GetPmax();
 20792  002502  EC5C  F052         	call	_GetPmax	;wreg free
 20793  002506  0060  F448  F19B   	movff	?_GetPmax,ValueDisplay@pmax
 20794  00250C  0060  F44C  F19C   	movff	?_GetPmax+1,ValueDisplay@pmax+1
 20795                           
 20796                           ; BSR set to: 1
 20797                           ;display.c: 98:     int16_t spr = GetSpr();
 20798  002512  EC49  F056         	call	_GetSpr	;wreg free
 20799  002516  0060  F410  F19D   	movff	?_GetSpr,ValueDisplay@spr
 20800  00251C  0060  F414  F19E   	movff	?_GetSpr+1,ValueDisplay@spr+1
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 20804  002522  0100               	movlb	0	; () banked
 20805  002524  51FB               	movf	_calibrate& (0+255),w,b
 20806  002526  A4D8               	btfss	status,2,c
 20807  002528  D009               	goto	l19028
 20808                           
 20809                           ; BSR set to: 0
 20810  00252A  EC41  F04C         	call	_GetAlarmState	;wreg free
 20811  00252E  0060  F420  F1A6   	movff	?_GetAlarmState,_ValueDisplay$4007
 20812  002534  0060  F424  F1A7   	movff	?_GetAlarmState+1,_ValueDisplay$4007+1
 20813  00253A  D005               	goto	l19030
 20814  00253C                     l19028:
 20815                           
 20816                           ; BSR set to: 0
 20817  00253C  0EF9               	movlw	low STR_11
 20818  00253E  0101               	movlb	1	; () banked
 20819  002540  6FA6               	movwf	_ValueDisplay$4007& (0+255),b
 20820  002542  0EFF               	movlw	high STR_11
 20821  002544  6FA7               	movwf	(_ValueDisplay$4007+1)& (0+255),b
 20822  002546                     l19030:
 20823                           
 20824                           ; BSR set to: 1
 20825  002546  ECB9  F057         	call	_GetDisableAlarmSV1	;wreg free
 20826  00254A  0900               	iorlw	0
 20827  00254C  A4D8               	btfss	status,2,c
 20828  00254E  D005               	goto	l19034
 20829                           
 20830                           ; BSR set to: 0
 20831  002550  0E00               	movlw	0
 20832  002552  0101               	movlb	1	; () banked
 20833  002554  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20834  002556  0E20               	movlw	32
 20835  002558  D004               	goto	L3
 20836  00255A                     l19034:
 20837                           
 20838                           ; BSR set to: 0
 20839  00255A  0E00               	movlw	0
 20840  00255C  0101               	movlb	1	; () banked
 20841  00255E  6FA9               	movwf	(_ValueDisplay$4008+1)& (0+255),b
 20842  002560  0E64               	movlw	100
 20843  002562                     L3:
 20844  002562  6FA8               	movwf	_ValueDisplay$4008& (0+255),b
 20845                           
 20846                           ; BSR set to: 1
 20847  002564  0EE5               	movlw	low _msg1
 20848  002566  6F71               	movwf	sprintf@s& (0+255),b
 20849  002568  0E03               	movlw	high _msg1
 20850  00256A  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20851  00256C  0E67               	movlw	low STR_10
 20852  00256E  6F73               	movwf	sprintf@fmt& (0+255),b
 20853  002570  0EFE               	movlw	high STR_10
 20854  002572  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20855  002574  0060  F674  F175   	movff	ValueDisplay@spr,?_sprintf+4
 20856  00257A  0060  F678  F176   	movff	ValueDisplay@spr+1,?_sprintf+5
 20857  002580  51AF               	movf	ValueDisplay@etde& (0+255),w,b
 20858  002582  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20859  002584  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20860  002586  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20861  002588  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20862  00258A  51A4               	movf	ValueDisplay@dtde& (0+255),w,b
 20863  00258C  6F79               	movwf	(?_sprintf+8)& (0+255),b
 20864  00258E  6B7A               	clrf	(?_sprintf+9)& (0+255),b
 20865  002590  BF79               	btfsc	(?_sprintf+8)& (0+255),7,b
 20866  002592  077A               	decf	(?_sprintf+9)& (0+255),f,b
 20867  002594  51AE               	movf	ValueDisplay@etdi& (0+255),w,b
 20868  002596  6F7B               	movwf	(?_sprintf+10)& (0+255),b
 20869  002598  6B7C               	clrf	(?_sprintf+11)& (0+255),b
 20870  00259A  BF7B               	btfsc	(?_sprintf+10)& (0+255),7,b
 20871  00259C  077C               	decf	(?_sprintf+11)& (0+255),f,b
 20872  00259E  51A3               	movf	ValueDisplay@dtdi& (0+255),w,b
 20873  0025A0  6F7D               	movwf	(?_sprintf+12)& (0+255),b
 20874  0025A2  6B7E               	clrf	(?_sprintf+13)& (0+255),b
 20875  0025A4  BF7D               	btfsc	(?_sprintf+12)& (0+255),7,b
 20876  0025A6  077E               	decf	(?_sprintf+13)& (0+255),f,b
 20877  0025A8  0060  F6A0  F17F   	movff	_ValueDisplay$4008,?_sprintf+14
 20878  0025AE  0060  F6A4  F180   	movff	_ValueDisplay$4008+1,?_sprintf+15
 20879  0025B4  0060  F698  F181   	movff	_ValueDisplay$4007,?_sprintf+16
 20880  0025BA  0060  F69C  F182   	movff	_ValueDisplay$4007+1,?_sprintf+17
 20881  0025C0  ECED  F04A         	call	_sprintf	;wreg free
 20882                           
 20883                           ; BSR set to: 1
 20884                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 20885  0025C4  0EBD               	movlw	low _msg3
 20886  0025C6  6F71               	movwf	sprintf@s& (0+255),b
 20887  0025C8  0E03               	movlw	high _msg3
 20888  0025CA  6F72               	movwf	(sprintf@s+1)& (0+255),b
 20889  0025CC  0E81               	movlw	low STR_12
 20890  0025CE  6F73               	movwf	sprintf@fmt& (0+255),b
 20891  0025D0  0EFE               	movlw	high STR_12
 20892  0025D2  6F74               	movwf	(sprintf@fmt+1)& (0+255),b
 20893  0025D4  51B0               	movf	ValueDisplay@er& (0+255),w,b
 20894  0025D6  6F75               	movwf	(?_sprintf+4)& (0+255),b
 20895  0025D8  6B76               	clrf	(?_sprintf+5)& (0+255),b
 20896  0025DA  BF75               	btfsc	(?_sprintf+4)& (0+255),7,b
 20897  0025DC  0776               	decf	(?_sprintf+5)& (0+255),f,b
 20898  0025DE  51A5               	movf	ValueDisplay@dr& (0+255),w,b
 20899  0025E0  6F77               	movwf	(?_sprintf+6)& (0+255),b
 20900  0025E2  6B78               	clrf	(?_sprintf+7)& (0+255),b
 20901  0025E4  BF77               	btfsc	(?_sprintf+6)& (0+255),7,b
 20902  0025E6  0778               	decf	(?_sprintf+7)& (0+255),f,b
 20903  0025E8  0060  F65C  F179   	movff	ValueDisplay@pe,?_sprintf+8
 20904  0025EE  0060  F660  F17A   	movff	ValueDisplay@pe+1,?_sprintf+9
 20905  0025F4  0060  F654  F17B   	movff	ValueDisplay@pi,?_sprintf+10
 20906  0025FA  0060  F658  F17C   	movff	ValueDisplay@pi+1,?_sprintf+11
 20907  002600  0060  F66C  F17D   	movff	ValueDisplay@pmax,?_sprintf+12
 20908  002606  0060  F670  F17E   	movff	ValueDisplay@pmax+1,?_sprintf+13
 20909  00260C  0060  F664  F17F   	movff	ValueDisplay@vol,?_sprintf+14
 20910  002612  0060  F668  F180   	movff	ValueDisplay@vol+1,?_sprintf+15
 20911  002618  ECED  F04A         	call	_sprintf	;wreg free
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;display.c: 106:     cnt++;
 20915  00261C  0102               	movlb	2	; () banked
 20916  00261E  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 20917  002620  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 20918                           
 20919                           ; BSR set to: 2
 20920                           ;display.c: 107:     cnt=cnt%10;
 20921  002622  0060  FA20  F104   	movff	ValueDisplay@cnt,___awmod@dividend
 20922  002628  0060  FA24  F105   	movff	ValueDisplay@cnt+1,___awmod@dividend+1
 20923  00262E  0E00               	movlw	0
 20924  002630  0101               	movlb	1	; () banked
 20925  002632  6F07               	movwf	(___awmod@divisor+1)& (0+255),b
 20926  002634  0E0A               	movlw	10
 20927  002636  6F06               	movwf	___awmod@divisor& (0+255),b
 20928  002638  EC01  F047         	call	___awmod	;wreg free
 20929  00263C  0060  F410  F288   	movff	?___awmod,ValueDisplay@cnt
 20930  002642  0060  F414  F289   	movff	?___awmod+1,ValueDisplay@cnt+1
 20931  002648  0012               	return		;funcret
 20932  00264A                     __end_of_ValueDisplay:
 20933                           	opt callstack 0
 20934                           
 20935 ;; *************** function _sprintf *****************
 20936 ;; Defined at:
 20937 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 20938 ;; Parameters:    Size  Location     Type
 20939 ;;  s               2  113[BANK1 ] PTR unsigned char 
 20940 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 20941 ;;  fmt             2  115[BANK1 ] PTR const unsigned char 
 20942 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 20943 ;;		 -> STR_8(17), STR_7(15), 
 20944 ;; Auto vars:     Size  Location     Type
 20945 ;;  f               6  135[BANK1 ] struct _IO_FILE
 20946 ;;  ap              2  133[BANK1 ] PTR void [1]
 20947 ;;		 -> ?_printf(2), ?_sprintf(2), 
 20948 ;;  ret             2    0        int 
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  2  113[BANK1 ] int 
 20951 ;; Registers used:
 20952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20953 ;; Tracked objects:
 20954 ;;		On entry : 3F/1
 20955 ;;		On exit  : 3F/1
 20956 ;;		Unchanged: 0/0
 20957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20958 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20959 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20961 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20962 ;;Total ram usage:       28 bytes
 20963 ;; Hardware stack levels used:    1
 20964 ;; Hardware stack levels required when called:   24
 20965 ;; This function calls:
 20966 ;;		_vfprintf
 20967 ;; This function is called by:
 20968 ;;		_ValueDisplay
 20969 ;;		_AlarmDisplay
 20970 ;; This function uses a non-reentrant model
 20971 ;;
 20972                           
 20973                           	psect	text162
 20974  0095DA                     __ptext162:
 20975                           	opt callstack 0
 20976  0095DA                     _sprintf:
 20977                           	opt callstack 3
 20978                           
 20979                           ; BSR set to: 1
 20980                           
 20981                           ;incstack = 0
 20982  0095DA  0E75               	movlw	low (?_sprintf+4)
 20983  0095DC  6F85               	movwf	sprintf@ap& (0+255),b
 20984  0095DE  0E01               	movlw	high (?_sprintf+4)
 20985  0095E0  6F86               	movwf	(sprintf@ap+1)& (0+255),b
 20986  0095E2  0060  F5C4  F187   	movff	sprintf@s,sprintf@f
 20987  0095E8  0060  F5C8  F188   	movff	sprintf@s+1,sprintf@f+1
 20988                           
 20989                           ; BSR set to: 1
 20990  0095EE  0E00               	movlw	0
 20991  0095F0  6F8A               	movwf	(sprintf@f+3)& (0+255),b
 20992  0095F2  0E00               	movlw	0
 20993  0095F4  6F89               	movwf	(sprintf@f+2)& (0+255),b
 20994                           
 20995                           ; BSR set to: 1
 20996  0095F6  0E00               	movlw	0
 20997  0095F8  6F8C               	movwf	(sprintf@f+5)& (0+255),b
 20998  0095FA  0E00               	movlw	0
 20999  0095FC  6F8B               	movwf	(sprintf@f+4)& (0+255),b
 21000                           
 21001                           ; BSR set to: 1
 21002  0095FE  0E87               	movlw	low sprintf@f
 21003  009600  6F69               	movwf	vfprintf@fp& (0+255),b
 21004  009602  0E01               	movlw	high sprintf@f
 21005  009604  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
 21006  009606  0060  F5CC  F16B   	movff	sprintf@fmt,vfprintf@fmt
 21007  00960C  0060  F5D0  F16C   	movff	sprintf@fmt+1,vfprintf@fmt+1
 21008  009612  0E85               	movlw	low sprintf@ap
 21009  009614  6F6D               	movwf	vfprintf@ap& (0+255),b
 21010  009616  0E01               	movlw	high sprintf@ap
 21011  009618  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
 21012  00961A  ECAE  F047         	call	_vfprintf	;wreg free
 21013                           
 21014                           ; BSR set to: 2
 21015  00961E  0101               	movlb	1	; () banked
 21016  009620  5189               	movf	(sprintf@f+2)& (0+255),w,b
 21017  009622  2571               	addwf	sprintf@s& (0+255),w,b
 21018  009624  6ED9               	movwf	fsr2l,c
 21019  009626  518A               	movf	(sprintf@f+3)& (0+255),w,b
 21020  009628  2172               	addwfc	(sprintf@s+1)& (0+255),w,b
 21021  00962A  6EDA               	movwf	fsr2h,c
 21022  00962C  0E00               	movlw	0
 21023  00962E  6EDF               	movwf	indf2,c
 21024                           
 21025                           ; BSR set to: 1
 21026  009630  0012               	return		;funcret
 21027  009632                     __end_of_sprintf:
 21028                           	opt callstack 0
 21029                           
 21030 ;; *************** function _vfprintf *****************
 21031 ;; Defined at:
 21032 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21033 ;; Parameters:    Size  Location     Type
 21034 ;;  fp              2  105[BANK1 ] PTR struct _IO_FILE
 21035 ;;		 -> sprintf@f(6), NULL(0), 
 21036 ;;  fmt             2  107[BANK1 ] PTR const unsigned char 
 21037 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 21038 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 21039 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 21040 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 21041 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 21042 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 21043 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 21044 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 21045 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 21046 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 21047 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 21048 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 21049 ;;  ap              2  109[BANK1 ] PTR PTR void 
 21050 ;;		 -> printf@ap(2), sprintf@ap(2), 
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;  cfmt            2  111[BANK1 ] PTR unsigned char 
 21053 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 21054 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 21055 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 21056 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 21057 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 21058 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 21059 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 21060 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 21061 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 21062 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 21063 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 21064 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  2  105[BANK1 ] int 
 21067 ;; Registers used:
 21068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21069 ;; Tracked objects:
 21070 ;;		On entry : 3F/1
 21071 ;;		On exit  : 3F/2
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21074 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21075 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21077 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21078 ;;Total ram usage:        8 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:   23
 21081 ;; This function calls:
 21082 ;;		_vfpfcnvrt
 21083 ;; This function is called by:
 21084 ;;		_sprintf
 21085 ;;		_printf
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           	psect	text163
 21090  008F5C                     __ptext163:
 21091                           	opt callstack 0
 21092  008F5C                     _vfprintf:
 21093                           	opt callstack 6
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;incstack = 0
 21100  008F5C  0060  F5AC  F16F   	movff	vfprintf@fmt,vfprintf@cfmt
 21101  008F62  0060  F5B0  F170   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 21102                           
 21103                           ; BSR set to: 1
 21104                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 21105  008F68  0E00               	movlw	0
 21106  008F6A  0102               	movlb	2	; () banked
 21107  008F6C  6F2B               	movwf	(_nout+1)& (0+255),b
 21108  008F6E  0E00               	movlw	0
 21109  008F70  6F2A               	movwf	_nout& (0+255),b
 21110                           
 21111                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 21112  008F72  D01A               	goto	l18374
 21113  008F74                     l18372:
 21114                           
 21115                           ; BSR set to: 2
 21116                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 21117  008F74  0060  F5A4  F148   	movff	vfprintf@fp,vfpfcnvrt@fp
 21118  008F7A  0060  F5A8  F149   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 21119  008F80  0E6F               	movlw	low vfprintf@cfmt
 21120  008F82  0101               	movlb	1	; () banked
 21121  008F84  6F4A               	movwf	vfpfcnvrt@fmt& (0+255),b
 21122  008F86  0E01               	movlw	high vfprintf@cfmt
 21123  008F88  6F4B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 21124  008F8A  0060  F5B4  F14C   	movff	vfprintf@ap,vfpfcnvrt@ap
 21125  008F90  0060  F5B8  F14D   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 21126  008F96  EC77  F00C         	call	_vfpfcnvrt	;wreg free
 21127  008F9A  5148               	movf	?_vfpfcnvrt& (0+255),w,b
 21128  008F9C  0102               	movlb	2	; () banked
 21129  008F9E  272A               	addwf	_nout& (0+255),f,b
 21130  008FA0  0101               	movlb	1	; () banked
 21131  008FA2  5149               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 21132  008FA4  0102               	movlb	2	; () banked
 21133  008FA6  232B               	addwfc	(_nout+1)& (0+255),f,b
 21134  008FA8                     l18374:
 21135                           
 21136                           ; BSR set to: 2
 21137                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 21138  008FA8  0060  F5BF  FFF6   	movff	vfprintf@cfmt,tblptrl
 21139  008FAE  0060  F5C3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 21140  008FB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21141  008FB4  6AF8               	clrf	tblptru,c
 21142  008FB6                     	endif
 21143  008FB6                     	if	0	;tblptru may be non-zero
 21144  008FB6                     	endif
 21145  008FB6  0008               	tblrd		*
 21146  008FB8  50F5               	movf	tablat,w,c
 21147  008FBA  0900               	iorlw	0
 21148  008FBC  A4D8               	btfss	status,2,c
 21149  008FBE  D7DA               	goto	l18372
 21150                           
 21151                           ; BSR set to: 2
 21152                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 21153  008FC0  0060  F8A8  F169   	movff	_nout,?_vfprintf
 21154  008FC6  0060  F8AC  F16A   	movff	_nout+1,?_vfprintf+1
 21155                           
 21156                           ; BSR set to: 2
 21157  008FCC  0012               	return		;funcret
 21158  008FCE                     __end_of_vfprintf:
 21159                           	opt callstack 0
 21160                           
 21161 ;; *************** function _vfpfcnvrt *****************
 21162 ;; Defined at:
 21163 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;  fp              2   72[BANK1 ] PTR struct _IO_FILE
 21166 ;;		 -> sprintf@f(6), NULL(0), 
 21167 ;;  fmt             2   74[BANK1 ] PTR PTR unsigned char 
 21168 ;;		 -> vfprintf@cfmt(2), 
 21169 ;;  ap              2   76[BANK1 ] PTR PTR void 
 21170 ;;		 -> printf@ap(2), sprintf@ap(2), 
 21171 ;; Auto vars:     Size  Location     Type
 21172 ;;  llu             8   90[BANK1 ] unsigned long long 
 21173 ;;  ll              8   82[BANK1 ] long long 
 21174 ;;  f               4    0        long long 
 21175 ;;  vp              3    0        PTR void 
 21176 ;;  ct              3    0        unsigned char [3]
 21177 ;;  done            2  100[BANK1 ] int 
 21178 ;;  cp              2   98[BANK1 ] PTR unsigned char 
 21179 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 21180 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 21181 ;;		 -> alarmData(399), STR_11(3), 
 21182 ;;  i               2    0        int 
 21183 ;;  c               1  104[BANK1 ] unsigned char 
 21184 ;; Return value:  Size  Location     Type
 21185 ;;                  2   72[BANK1 ] int 
 21186 ;; Registers used:
 21187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21188 ;; Tracked objects:
 21189 ;;		On entry : 3F/1
 21190 ;;		On exit  : 3F/1
 21191 ;;		Unchanged: 0/0
 21192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21193 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21194 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21195 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21196 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21197 ;;Total ram usage:       33 bytes
 21198 ;; Hardware stack levels used:    1
 21199 ;; Hardware stack levels required when called:   22
 21200 ;; This function calls:
 21201 ;;		_atoi
 21202 ;;		_ctoa
 21203 ;;		_dtoa
 21204 ;;		_fputc
 21205 ;;		_isdigit
 21206 ;;		_stoa
 21207 ;;		_xtoa
 21208 ;; This function is called by:
 21209 ;;		_vfprintf
 21210 ;; This function uses a non-reentrant model
 21211 ;;
 21212                           
 21213                           	psect	text164
 21214  0018EE                     __ptext164:
 21215                           	opt callstack 0
 21216  0018EE                     _vfpfcnvrt:
 21217                           	opt callstack 6
 21218                           
 21219                           ; BSR set to: 1
 21220                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 21221                           
 21222                           ; BSR set to: 2
 21223                           ;incstack = 0
 21224  0018EE  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21225  0018F4  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21226  0018FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21227  001900  006F FF77 FFF7     	movff	postdec2,tblptrh
 21228  001906                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21229  001906  6AF8               	clrf	tblptru,c
 21230  001908                     	endif
 21231  001908                     	if	0	;tblptru may be non-zero
 21232  001908                     	endif
 21233  001908  0008               	tblrd		*
 21234  00190A  50F5               	movf	tablat,w,c
 21235  00190C  0A25               	xorlw	37
 21236  00190E  A4D8               	btfss	status,2,c
 21237  001910  D2B4               	goto	l18058
 21238                           
 21239                           ; BSR set to: 1
 21240                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 21241  001912  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21242  001918  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21243  00191E  2ADE               	incf	postinc2,f,c
 21244  001920  0E00               	movlw	0
 21245  001922  22DD               	addwfc	postdec2,f,c
 21246                           
 21247                           ; BSR set to: 1
 21248                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 21249  001924  0E00               	movlw	0
 21250  001926  6FC8               	movwf	(_width+1)& (0+255),b
 21251  001928  0E00               	movlw	0
 21252  00192A  6FC7               	movwf	_width& (0+255),b
 21253  00192C  C1C7  F1CB         	movff	_width,_flags
 21254  001930  C1C8  F1CC         	movff	_width+1,_flags+1
 21255                           
 21256                           ; BSR set to: 1
 21257                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 21258  001934  69C9               	setf	_prec& (0+255),b
 21259  001936  69CA               	setf	(_prec+1)& (0+255),b
 21260                           
 21261                           ; BSR set to: 1
 21262                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 21263  001938  0E00               	movlw	0
 21264  00193A  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21265  00193C  0E00               	movlw	0
 21266  00193E  D016               	goto	L4
 21267  001940                     l17954:
 21268                           
 21269                           ; BSR set to: 1
 21270                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 21271  001940  81CB               	bsf	_flags& (0+255),0,b
 21272  001942  D007               	goto	l17972
 21273  001944                     l17958:
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 21277  001944  83CB               	bsf	_flags& (0+255),1,b
 21278  001946  D005               	goto	l17972
 21279  001948                     l17962:
 21280                           
 21281                           ; BSR set to: 1
 21282                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 21283  001948  85CB               	bsf	_flags& (0+255),2,b
 21284  00194A  D003               	goto	l17972
 21285  00194C                     l17966:
 21286                           
 21287                           ; BSR set to: 1
 21288                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 21289  00194C  87CB               	bsf	_flags& (0+255),3,b
 21290  00194E  D001               	goto	l17972
 21291  001950                     l17970:
 21292                           
 21293                           ; BSR set to: 1
 21294                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 21295  001950  89CB               	bsf	_flags& (0+255),4,b
 21296  001952                     l17972:
 21297                           
 21298                           ; BSR set to: 1
 21299                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 21300  001952  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21301  001958  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21302  00195E  2ADE               	incf	postinc2,f,c
 21303  001960  0E00               	movlw	0
 21304  001962  22DD               	addwfc	postdec2,f,c
 21305                           
 21306                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 21307  001964  D02B               	goto	l17980
 21308  001966                     l17974:
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 21312  001966  0E00               	movlw	0
 21313  001968  6F65               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 21314  00196A  0E01               	movlw	1
 21315  00196C                     L4:
 21316  00196C  6F64               	movwf	vfpfcnvrt@done& (0+255),b
 21317                           
 21318                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 21319  00196E  D026               	goto	l17980
 21320  001970                     l17978:
 21321                           
 21322                           ; BSR set to: 1
 21323  001970  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21324  001976  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21325  00197C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21326  001982  006F FF77 FFF7     	movff	postdec2,tblptrh
 21327  001988                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21328  001988  6AF8               	clrf	tblptru,c
 21329  00198A                     	endif
 21330  00198A                     	if	0	;tblptru may be non-zero
 21331  00198A                     	endif
 21332  00198A  0008               	tblrd		*
 21333  00198C  50F5               	movf	tablat,w,c
 21334  00198E  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21335  001990  6B4F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 21336                           
 21337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21338                           ; Switch size 1, requested type "simple"
 21339                           ; Number of cases is 1, Range of values is 0 to 0
 21340                           ; switch strategies available:
 21341                           ; Name         Instructions Cycles
 21342                           ; simple_byte            4     3 (average)
 21343                           ;	Chosen strategy is simple_byte
 21344  001992  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21345  001994  0A00               	xorlw	0	; case 0
 21346  001996  A4D8               	btfss	status,2,c
 21347  001998  D7E6               	goto	l17974
 21348                           
 21349                           ; BSR set to: 1
 21350                           ; Switch size 1, requested type "simple"
 21351                           ; Number of cases is 5, Range of values is 32 to 48
 21352                           ; switch strategies available:
 21353                           ; Name         Instructions Cycles
 21354                           ; simple_byte           16     9 (average)
 21355                           ;	Chosen strategy is simple_byte
 21356  00199A  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21357  00199C  0A20               	xorlw	32	; case 32
 21358  00199E  B4D8               	btfsc	status,2,c
 21359  0019A0  D7D5               	goto	l17966
 21360  0019A2  0A03               	xorlw	3	; case 35
 21361  0019A4  B4D8               	btfsc	status,2,c
 21362  0019A6  D7D4               	goto	l17970
 21363  0019A8  0A08               	xorlw	8	; case 43
 21364  0019AA  B4D8               	btfsc	status,2,c
 21365  0019AC  D7CD               	goto	l17962
 21366  0019AE  0A06               	xorlw	6	; case 45
 21367  0019B0  B4D8               	btfsc	status,2,c
 21368  0019B2  D7C6               	goto	l17954
 21369  0019B4  0A1D               	xorlw	29	; case 48
 21370  0019B6  B4D8               	btfsc	status,2,c
 21371  0019B8  D7C5               	goto	l17958
 21372  0019BA  D7D5               	goto	l17974
 21373  0019BC                     l17980:
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 21377  0019BC  5164               	movf	vfpfcnvrt@done& (0+255),w,b
 21378  0019BE  1165               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 21379  0019C0  B4D8               	btfsc	status,2,c
 21380  0019C2  D7D6               	goto	l17978
 21381                           
 21382                           ; BSR set to: 1
 21383                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 21384  0019C4  B1CB               	btfsc	_flags& (0+255),0,b
 21385                           
 21386                           ; BSR set to: 1
 21387                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 21388  0019C6  93CB               	bcf	_flags& (0+255),1,b
 21389                           
 21390                           ; BSR set to: 1
 21391                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 21392  0019C8  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21393  0019CE  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21394  0019D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21395  0019DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21396  0019E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21397  0019E0  6AF8               	clrf	tblptru,c
 21398  0019E2                     	endif
 21399  0019E2                     	if	0	;tblptru may be non-zero
 21400  0019E2                     	endif
 21401  0019E2  0008               	tblrd		*
 21402  0019E4  50F5               	movf	tablat,w,c
 21403  0019E6  0A2A               	xorlw	42
 21404  0019E8  A4D8               	btfss	status,2,c
 21405  0019EA  D02D               	goto	l17992
 21406                           
 21407                           ; BSR set to: 1
 21408                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 21409  0019EC  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21410  0019F2  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21411  0019F8  2ADE               	incf	postinc2,f,c
 21412  0019FA  0E00               	movlw	0
 21413  0019FC  22DD               	addwfc	postdec2,f,c
 21414                           
 21415                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 21416  0019FE  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21417  001A04  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21418  001A0A  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21419  001A10  0E02               	movlw	2
 21420  001A12  26DE               	addwf	postinc2,f,c
 21421  001A14  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21422  001A1A  0E00               	movlw	0
 21423  001A1C  22DD               	addwfc	postdec2,f,c
 21424  001A1E  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21425  001A24  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21426  001A2A  006F FF78  F1C7    	movff	postinc2,_width
 21427  001A30  006F FF74  F1C8    	movff	postdec2,_width+1
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 21431  001A36  AFC8               	btfss	(_width+1)& (0+255),7,b
 21432  001A38  D04C               	goto	u17600
 21433                           
 21434                           ; BSR set to: 1
 21435                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 21436  001A3A  81CB               	bsf	_flags& (0+255),0,b
 21437                           
 21438                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 21439  001A3C  6DC7               	negf	_width& (0+255),b
 21440  001A3E  1FC8               	comf	(_width+1)& (0+255),f,b
 21441  001A40  B0D8               	btfsc	status,0,c
 21442  001A42  2BC8               	incf	(_width+1)& (0+255),f,b
 21443  001A44  D046               	goto	u17600
 21444  001A46                     l17992:
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 21448  001A46  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21449  001A4C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21450  001A52  006F FF78  F10B    	movff	postinc2,atoi@s
 21451  001A58  006F FF74  F10C    	movff	postdec2,atoi@s+1
 21452  001A5E  ECEB  F02D         	call	_atoi	;wreg free
 21453  001A62  0060  F42C  F1C7   	movff	?_atoi,_width
 21454  001A68  0060  F430  F1C8   	movff	?_atoi+1,_width+1
 21455                           
 21456                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 21457  001A6E  D009               	goto	l17996
 21458  001A70                     l17994:
 21459                           
 21460                           ; BSR set to: 1
 21461                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 21462  001A70  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21463  001A76  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21464  001A7C  2ADE               	incf	postinc2,f,c
 21465  001A7E  0E00               	movlw	0
 21466  001A80  22DD               	addwfc	postdec2,f,c
 21467  001A82                     l17996:
 21468                           
 21469                           ; BSR set to: 1
 21470  001A82  0ED0               	movlw	208
 21471  001A84  6F4E               	movwf	??_vfpfcnvrt& (0+255),b
 21472  001A86  0EFF               	movlw	255
 21473  001A88  6F4F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 21474  001A8A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21475  001A90  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21476  001A96  006F FF7B FFF6     	movff	postinc2,tblptrl
 21477  001A9C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21478  001AA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21479  001AA2  6AF8               	clrf	tblptru,c
 21480  001AA4                     	endif
 21481  001AA4                     	if	0	;tblptru may be non-zero
 21482  001AA4                     	endif
 21483  001AA4  0008               	tblrd		*
 21484  001AA6  50F5               	movf	tablat,w,c
 21485  001AA8  6F50               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 21486  001AAA  6B51               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 21487  001AAC  514E               	movf	??_vfpfcnvrt& (0+255),w,b
 21488  001AAE  2750               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 21489  001AB0  514F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 21490  001AB2  2351               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 21491  001AB4  5151               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 21492  001AB6  E106               	bnz	u17580
 21493  001AB8  0E0A               	movlw	10
 21494  001ABA  5D50               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 21495  001ABC  B0D8               	btfsc	status,0,c
 21496  001ABE  D002               	goto	u17580
 21497  001AC0  0E01               	movlw	1
 21498  001AC2  D001               	goto	u17590
 21499  001AC4                     u17580:
 21500  001AC4  0E00               	movlw	0
 21501  001AC6                     u17590:
 21502  001AC6  6F66               	movwf	_vfpfcnvrt$5217& (0+255),b
 21503  001AC8  6B67               	clrf	(_vfpfcnvrt$5217+1)& (0+255),b
 21504                           
 21505                           ; BSR set to: 1
 21506  001ACA  5166               	movf	_vfpfcnvrt$5217& (0+255),w,b
 21507  001ACC  1167               	iorwf	(_vfpfcnvrt$5217+1)& (0+255),w,b
 21508  001ACE  A4D8               	btfss	status,2,c
 21509  001AD0  D7CF               	goto	l17994
 21510  001AD2                     u17600:
 21511                           
 21512                           ; BSR set to: 1
 21513                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 21514  001AD2  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21515  001AD8  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21516  001ADE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21517  001AE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 21518  001AEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21519  001AEA  6AF8               	clrf	tblptru,c
 21520  001AEC                     	endif
 21521  001AEC                     	if	0	;tblptru may be non-zero
 21522  001AEC                     	endif
 21523  001AEC  0008               	tblrd		*
 21524  001AEE  50F5               	movf	tablat,w,c
 21525  001AF0  0A63               	xorlw	99
 21526  001AF2  A4D8               	btfss	status,2,c
 21527  001AF4  D033               	goto	l18010
 21528                           
 21529                           ; BSR set to: 1
 21530                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 21531  001AF6  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21532  001AFC  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21533  001B02  2ADE               	incf	postinc2,f,c
 21534  001B04  0E00               	movlw	0
 21535  001B06  22DD               	addwfc	postdec2,f,c
 21536                           
 21537                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21538  001B08  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21539  001B0E  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21540  001B14  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21541  001B1A  0E02               	movlw	2
 21542  001B1C  26DE               	addwf	postinc2,f,c
 21543  001B1E  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21544  001B24  0E00               	movlw	0
 21545  001B26  22DD               	addwfc	postdec2,f,c
 21546  001B28  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21547  001B2E  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21548  001B34  50DF               	movf	indf2,w,c
 21549  001B36  6F68               	movwf	vfpfcnvrt@c& (0+255),b
 21550                           
 21551                           ; BSR set to: 1
 21552                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 21553  001B38  0060  F520  F121   	movff	vfpfcnvrt@fp,ctoa@fp
 21554  001B3E  0060  F524  F122   	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 21555  001B44  0060  F5A0  F123   	movff	vfpfcnvrt@c,ctoa@c
 21556  001B4A  EC2D  F04A         	call	_ctoa	;wreg free
 21557  001B4E  0060  F484  F148   	movff	?_ctoa,?_vfpfcnvrt
 21558  001B54  0060  F488  F149   	movff	?_ctoa+1,?_vfpfcnvrt+1
 21559  001B5A  0012               	return	
 21560  001B5C                     l18010:
 21561                           
 21562                           ; BSR set to: 1
 21563                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 21564  001B5C  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21565  001B62  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21566  001B68  006F FF7B FFF6     	movff	postinc2,tblptrl
 21567  001B6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21568  001B74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21569  001B74  6AF8               	clrf	tblptru,c
 21570  001B76                     	endif
 21571  001B76                     	if	0	;tblptru may be non-zero
 21572  001B76                     	endif
 21573  001B76  0008               	tblrd		*
 21574  001B78  50F5               	movf	tablat,w,c
 21575  001B7A  0A64               	xorlw	100
 21576  001B7C  B4D8               	btfsc	status,2,c
 21577  001B7E  D012               	goto	u17630
 21578                           
 21579                           ; BSR set to: 1
 21580  001B80  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21581  001B86  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21582  001B8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21583  001B92  006F FF77 FFF7     	movff	postdec2,tblptrh
 21584  001B98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21585  001B98  6AF8               	clrf	tblptru,c
 21586  001B9A                     	endif
 21587  001B9A                     	if	0	;tblptru may be non-zero
 21588  001B9A                     	endif
 21589  001B9A  0008               	tblrd		*
 21590  001B9C  50F5               	movf	tablat,w,c
 21591  001B9E  0A69               	xorlw	105
 21592  001BA0  A4D8               	btfss	status,2,c
 21593  001BA2  D055               	goto	l18020
 21594  001BA4                     u17630:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 21598  001BA4  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21599  001BAA  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21600  001BB0  2ADE               	incf	postinc2,f,c
 21601  001BB2  0E00               	movlw	0
 21602  001BB4  22DD               	addwfc	postdec2,f,c
 21603                           
 21604                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21605  001BB6  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21606  001BBC  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21607  001BC2  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21608  001BC8  0E02               	movlw	2
 21609  001BCA  26DE               	addwf	postinc2,f,c
 21610  001BCC  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21611  001BD2  0E00               	movlw	0
 21612  001BD4  22DD               	addwfc	postdec2,f,c
 21613  001BD6  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21614  001BDC  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21615  001BE2  006F FF78  F152    	movff	postinc2,vfpfcnvrt@ll
 21616  001BE8  006F FF74  F153    	movff	postdec2,vfpfcnvrt@ll+1
 21617  001BEE  0E00               	movlw	0
 21618  001BF0  BF53               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 21619  001BF2  0EFF               	movlw	-1
 21620  001BF4  6F54               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 21621  001BF6  6F55               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 21622  001BF8  6F56               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 21623  001BFA  6F57               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 21624  001BFC  6F58               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 21625  001BFE  6F59               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 21626                           
 21627                           ; BSR set to: 1
 21628                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 21629  001C00  0060  F520  F121   	movff	vfpfcnvrt@fp,dtoa@fp
 21630  001C06  0060  F524  F122   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 21631  001C0C  0060  F548  F123   	movff	vfpfcnvrt@ll,dtoa@d
 21632  001C12  0060  F54C  F124   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 21633  001C18  0060  F550  F125   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 21634  001C1E  0060  F554  F126   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 21635  001C24  0060  F558  F127   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 21636  001C2A  0060  F55C  F128   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 21637  001C30  0060  F560  F129   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 21638  001C36  0060  F564  F12A   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 21639  001C3C  EC47  F01D         	call	_dtoa	;wreg free
 21640  001C40  0060  F484  F148   	movff	?_dtoa,?_vfpfcnvrt
 21641  001C46  0060  F488  F149   	movff	?_dtoa+1,?_vfpfcnvrt+1
 21642  001C4C  0012               	return	
 21643  001C4E                     l18020:
 21644                           
 21645                           ; BSR set to: 1
 21646                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 21647  001C4E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21648  001C54  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21649  001C5A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21650  001C60  006F FF77 FFF7     	movff	postdec2,tblptrh
 21651  001C66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21652  001C66  6AF8               	clrf	tblptru,c
 21653  001C68                     	endif
 21654  001C68                     	if	0	;tblptru may be non-zero
 21655  001C68                     	endif
 21656  001C68  0008               	tblrd		*
 21657  001C6A  50F5               	movf	tablat,w,c
 21658  001C6C  0A73               	xorlw	115
 21659  001C6E  A4D8               	btfss	status,2,c
 21660  001C70  D03A               	goto	l18028
 21661                           
 21662                           ; BSR set to: 1
 21663                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 21664  001C72  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21665  001C78  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21666  001C7E  2ADE               	incf	postinc2,f,c
 21667  001C80  0E00               	movlw	0
 21668  001C82  22DD               	addwfc	postdec2,f,c
 21669                           
 21670                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21671  001C84  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21672  001C8A  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21673  001C90  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21674  001C96  0E02               	movlw	2
 21675  001C98  26DE               	addwf	postinc2,f,c
 21676  001C9A  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21677  001CA0  0E00               	movlw	0
 21678  001CA2  22DD               	addwfc	postdec2,f,c
 21679  001CA4  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21680  001CAA  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21681  001CB0  006F FF78  F162    	movff	postinc2,vfpfcnvrt@cp
 21682  001CB6  006F FF74  F163    	movff	postdec2,vfpfcnvrt@cp+1
 21683                           
 21684                           ; BSR set to: 1
 21685                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 21686  001CBC  0060  F520  F10F   	movff	vfpfcnvrt@fp,stoa@fp
 21687  001CC2  0060  F524  F110   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 21688  001CC8  0060  F588  F111   	movff	vfpfcnvrt@cp,stoa@s
 21689  001CCE  0060  F58C  F112   	movff	vfpfcnvrt@cp+1,stoa@s+1
 21690  001CD4  EC02  F02B         	call	_stoa	;wreg free
 21691  001CD8  0060  F43C  F148   	movff	?_stoa,?_vfpfcnvrt
 21692  001CDE  0060  F440  F149   	movff	?_stoa+1,?_vfpfcnvrt+1
 21693  001CE4  0012               	return	
 21694  001CE6                     l18028:
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21698  001CE6  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21699  001CEC  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21700  001CF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21701  001CF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21702  001CFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21703  001CFE  6AF8               	clrf	tblptru,c
 21704  001D00                     	endif
 21705  001D00                     	if	0	;tblptru may be non-zero
 21706  001D00                     	endif
 21707  001D00  0008               	tblrd		*
 21708  001D02  50F5               	movf	tablat,w,c
 21709  001D04  0A78               	xorlw	120
 21710  001D06  B4D8               	btfsc	status,2,c
 21711  001D08  D012               	goto	u17660
 21712                           
 21713                           ; BSR set to: 1
 21714  001D0A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21715  001D10  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21716  001D16  006F FF7B FFF6     	movff	postinc2,tblptrl
 21717  001D1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21718  001D22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21719  001D22  6AF8               	clrf	tblptru,c
 21720  001D24                     	endif
 21721  001D24                     	if	0	;tblptru may be non-zero
 21722  001D24                     	endif
 21723  001D24  0008               	tblrd		*
 21724  001D26  50F5               	movf	tablat,w,c
 21725  001D28  0A58               	xorlw	88
 21726  001D2A  A4D8               	btfss	status,2,c
 21727  001D2C  D06C               	goto	l18042
 21728  001D2E                     u17660:
 21729                           
 21730                           ; BSR set to: 1
 21731                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 21732  001D2E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21733  001D34  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21734  001D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21735  001D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 21736  001D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21737  001D46  6AF8               	clrf	tblptru,c
 21738  001D48                     	endif
 21739  001D48                     	if	0	;tblptru may be non-zero
 21740  001D48                     	endif
 21741  001D48  0008               	tblrd		*
 21742  001D4A  006F FFD4  F168    	movff	tablat,vfpfcnvrt@c
 21743                           
 21744                           ; BSR set to: 1
 21745                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 21746  001D50  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21747  001D56  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21748  001D5C  2ADE               	incf	postinc2,f,c
 21749  001D5E  0E00               	movlw	0
 21750  001D60  22DD               	addwfc	postdec2,f,c
 21751                           
 21752                           ; BSR set to: 1
 21753                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 21754  001D62  0060  F533  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 21755  001D68  0060  F537  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 21756  001D6E  006F FF7C  F14E    	movff	indf2,??_vfpfcnvrt
 21757  001D74  0E02               	movlw	2
 21758  001D76  26DE               	addwf	postinc2,f,c
 21759  001D78  006F FF7C  F14F    	movff	indf2,??_vfpfcnvrt+1
 21760  001D7E  0E00               	movlw	0
 21761  001D80  22DD               	addwfc	postdec2,f,c
 21762  001D82  0060  F53B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 21763  001D88  0060  F53F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 21764  001D8E  006F FF78  F150    	movff	postinc2,??_vfpfcnvrt+2
 21765  001D94  006F FF74  F151    	movff	postdec2,??_vfpfcnvrt+3
 21766  001D9A  0060  F540  F15A   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 21767  001DA0  0060  F544  F15B   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 21768  001DA6  6B5C               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 21769  001DA8  6B5D               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 21770  001DAA  6B5E               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 21771  001DAC  6B5F               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 21772  001DAE  6B60               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 21773  001DB0  6B61               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 21774                           
 21775                           ; BSR set to: 1
 21776                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 21777  001DB2  0060  F520  F121   	movff	vfpfcnvrt@fp,xtoa@fp
 21778  001DB8  0060  F524  F122   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 21779  001DBE  0060  F568  F123   	movff	vfpfcnvrt@llu,xtoa@d
 21780  001DC4  0060  F56C  F124   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 21781  001DCA  0060  F570  F125   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 21782  001DD0  0060  F574  F126   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 21783  001DD6  0060  F578  F127   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 21784  001DDC  0060  F57C  F128   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 21785  001DE2  0060  F580  F129   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 21786  001DE8  0060  F584  F12A   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 21787  001DEE  0060  F5A0  F12B   	movff	vfpfcnvrt@c,xtoa@x
 21788  001DF4  ECDF  F01F         	call	_xtoa	;wreg free
 21789  001DF8  0060  F484  F148   	movff	?_xtoa,?_vfpfcnvrt
 21790  001DFE  0060  F488  F149   	movff	?_xtoa+1,?_vfpfcnvrt+1
 21791  001E04  0012               	return	
 21792  001E06                     l18042:
 21793                           
 21794                           ; BSR set to: 1
 21795                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 21796  001E06  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21797  001E0C  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21798  001E12  006F FF7B FFF6     	movff	postinc2,tblptrl
 21799  001E18  006F FF77 FFF7     	movff	postdec2,tblptrh
 21800  001E1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21801  001E1E  6AF8               	clrf	tblptru,c
 21802  001E20                     	endif
 21803  001E20                     	if	0	;tblptru may be non-zero
 21804  001E20                     	endif
 21805  001E20  0008               	tblrd		*
 21806  001E22  50F5               	movf	tablat,w,c
 21807  001E24  0A25               	xorlw	37
 21808  001E26  A4D8               	btfss	status,2,c
 21809  001E28  D01A               	goto	l18052
 21810                           
 21811                           ; BSR set to: 1
 21812                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 21813  001E2A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21814  001E30  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21815  001E36  2ADE               	incf	postinc2,f,c
 21816  001E38  0E00               	movlw	0
 21817  001E3A  22DD               	addwfc	postdec2,f,c
 21818                           
 21819                           ; BSR set to: 1
 21820                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 21821  001E3C  0E00               	movlw	0
 21822  001E3E  6F07               	movwf	(fputc@c+1)& (0+255),b
 21823  001E40  0E25               	movlw	37
 21824  001E42  6F06               	movwf	fputc@c& (0+255),b
 21825  001E44  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21826  001E4A  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21827  001E50  EC1F  F03F         	call	_fputc	;wreg free
 21828  001E54                     l18048:
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 21832  001E54  0E00               	movlw	0
 21833  001E56  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21834  001E58  0E01               	movlw	1
 21835  001E5A  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21836  001E5C  0012               	return	
 21837  001E5E                     l18052:
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 21841  001E5E  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21842  001E64  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21843  001E6A  2ADE               	incf	postinc2,f,c
 21844  001E6C  0E00               	movlw	0
 21845  001E6E  22DD               	addwfc	postdec2,f,c
 21846                           
 21847                           ; BSR set to: 1
 21848                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 21849  001E70  0E00               	movlw	0
 21850  001E72  6F49               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 21851  001E74  0E00               	movlw	0
 21852  001E76  6F48               	movwf	?_vfpfcnvrt& (0+255),b
 21853  001E78  0012               	return	
 21854  001E7A                     l18058:
 21855                           
 21856                           ; BSR set to: 1
 21857                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 21858  001E7A  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21859  001E80  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21860  001E86  006F FF7B FFF6     	movff	postinc2,tblptrl
 21861  001E8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21862  001E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21863  001E92  6AF8               	clrf	tblptru,c
 21864  001E94                     	endif
 21865  001E94                     	if	0	;tblptru may be non-zero
 21866  001E94                     	endif
 21867  001E94  0008               	tblrd		*
 21868  001E96  50F5               	movf	tablat,w,c
 21869  001E98  6F06               	movwf	fputc@c& (0+255),b
 21870  001E9A  6B07               	clrf	(fputc@c+1)& (0+255),b
 21871  001E9C  0060  F520  F108   	movff	vfpfcnvrt@fp,fputc@fp
 21872  001EA2  0060  F524  F109   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21873  001EA8  EC1F  F03F         	call	_fputc	;wreg free
 21874                           
 21875                           ; BSR set to: 1
 21876                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 21877  001EAC  0060  F52B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 21878  001EB2  0060  F52F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 21879  001EB8  2ADE               	incf	postinc2,f,c
 21880  001EBA  0E00               	movlw	0
 21881  001EBC  22DD               	addwfc	postdec2,f,c
 21882  001EBE  D7CA               	goto	l18048
 21883  001EC0                     __end_of_vfpfcnvrt:
 21884                           	opt callstack 0
 21885                           
 21886 ;; *************** function _xtoa *****************
 21887 ;; Defined at:
 21888 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21889 ;; Parameters:    Size  Location     Type
 21890 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 21891 ;;		 -> sprintf@f(6), NULL(0), 
 21892 ;;  d               8   35[BANK1 ] unsigned long long 
 21893 ;;  x               1   43[BANK1 ] unsigned char 
 21894 ;; Auto vars:     Size  Location     Type
 21895 ;;  n               8   60[BANK1 ] unsigned long long 
 21896 ;;  c               2   70[BANK1 ] int 
 21897 ;;  i               2   68[BANK1 ] int 
 21898 ;;  w               2   58[BANK1 ] int 
 21899 ;;  p               2   56[BANK1 ] int 
 21900 ;; Return value:  Size  Location     Type
 21901 ;;                  2   33[BANK1 ] int 
 21902 ;; Registers used:
 21903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21904 ;; Tracked objects:
 21905 ;;		On entry : 3F/1
 21906 ;;		On exit  : 3F/1
 21907 ;;		Unchanged: 0/0
 21908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21909 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21910 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21911 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21912 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21913 ;;Total ram usage:       39 bytes
 21914 ;; Hardware stack levels used:    1
 21915 ;; Hardware stack levels required when called:   21
 21916 ;; This function calls:
 21917 ;;		_isalpha
 21918 ;;		_isupper
 21919 ;;		_pad
 21920 ;;		_toupper
 21921 ;; This function is called by:
 21922 ;;		_vfpfcnvrt
 21923 ;; This function uses a non-reentrant model
 21924 ;;
 21925                           
 21926                           	psect	text165
 21927  003FBE                     __ptext165:
 21928                           	opt callstack 0
 21929  003FBE                     _xtoa:
 21930                           	opt callstack 6
 21931                           
 21932                           ; BSR set to: 1
 21933                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 21934                           
 21935                           ; BSR set to: 1
 21936                           ;incstack = 0
 21937  003FBE  AFCA               	btfss	(_prec+1)& (0+255),7,b
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 21941  003FC0  93CB               	bcf	_flags& (0+255),1,b
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 21945  003FC2  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 21946  003FC4  D005               	goto	u17210
 21947  003FC6  51CA               	movf	(_prec+1)& (0+255),w,b
 21948  003FC8  E108               	bnz	l3538
 21949  003FCA  05C9               	decf	_prec& (0+255),w,b
 21950  003FCC  B0D8               	btfsc	status,0,c
 21951  003FCE  D005               	goto	l3538
 21952  003FD0                     u17210:
 21953                           
 21954                           ; BSR set to: 1
 21955  003FD0  0E00               	movlw	0
 21956  003FD2  6F39               	movwf	(xtoa@p+1)& (0+255),b
 21957  003FD4  0E01               	movlw	1
 21958  003FD6  6F38               	movwf	xtoa@p& (0+255),b
 21959  003FD8  D006               	goto	l3540
 21960  003FDA                     l3538:
 21961                           
 21962                           ; BSR set to: 1
 21963  003FDA  0060  F724  F138   	movff	_prec,xtoa@p
 21964  003FE0  0060  F728  F139   	movff	_prec+1,xtoa@p+1
 21965  003FE6                     l3540:
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 21969  003FE6  0060  F71C  F13A   	movff	_width,xtoa@w
 21970  003FEC  0060  F720  F13B   	movff	_width+1,xtoa@w+1
 21971                           
 21972                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 21973  003FF2  A9CB               	btfss	_flags& (0+255),4,b
 21974  003FF4  D004               	goto	l17774
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 21978  003FF6  0EFE               	movlw	254
 21979  003FF8  273A               	addwf	xtoa@w& (0+255),f,b
 21980  003FFA  0EFF               	movlw	255
 21981  003FFC  233B               	addwfc	(xtoa@w+1)& (0+255),f,b
 21982  003FFE                     l17774:
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 21986  003FFE  0060  F48C  F13C   	movff	xtoa@d,xtoa@n
 21987  004004  0060  F490  F13D   	movff	xtoa@d+1,xtoa@n+1
 21988  00400A  0060  F494  F13E   	movff	xtoa@d+2,xtoa@n+2
 21989  004010  0060  F498  F13F   	movff	xtoa@d+3,xtoa@n+3
 21990  004016  0060  F49C  F140   	movff	xtoa@d+4,xtoa@n+4
 21991  00401C  0060  F4A0  F141   	movff	xtoa@d+5,xtoa@n+5
 21992  004022  0060  F4A4  F142   	movff	xtoa@d+6,xtoa@n+6
 21993  004028  0060  F4A8  F143   	movff	xtoa@d+7,xtoa@n+7
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 21997  00402E  0E00               	movlw	0
 21998  004030  6F45               	movwf	(xtoa@i+1)& (0+255),b
 21999  004032  0E1F               	movlw	31
 22000  004034  6F44               	movwf	xtoa@i& (0+255),b
 22001                           
 22002                           ; BSR set to: 1
 22003                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 22004  004036  0E00               	movlw	0
 22005  004038  0103               	movlb	3	; () banked
 22006  00403A  6FA8               	movwf	(_dbuf+31)& (0+255),b
 22007                           
 22008                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22009  00403C  D0A8               	goto	l17810
 22010  00403E                     l17780:
 22011                           
 22012                           ; BSR set to: 1
 22013                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 22014  00403E  0744               	decf	xtoa@i& (0+255),f,b
 22015  004040  A0D8               	btfss	status,0,c
 22016  004042  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22017                           
 22018                           ; BSR set to: 1
 22019                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 22020  004044  0E0F               	movlw	15
 22021  004046  153C               	andwf	xtoa@n& (0+255),w,b
 22022  004048  6F46               	movwf	xtoa@c& (0+255),b
 22023  00404A  6B47               	clrf	(xtoa@c+1)& (0+255),b
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 22027  00404C  BF47               	btfsc	(xtoa@c+1)& (0+255),7,b
 22028  00404E  D008               	goto	l17788
 22029  004050  5147               	movf	(xtoa@c+1)& (0+255),w,b
 22030  004052  E104               	bnz	u17230
 22031  004054  0E0A               	movlw	10
 22032  004056  5D46               	subwf	xtoa@c& (0+255),w,b
 22033  004058  A0D8               	btfss	status,0,c
 22034  00405A  D002               	goto	l17788
 22035  00405C                     u17230:
 22036                           
 22037                           ; BSR set to: 1
 22038  00405C  0E57               	movlw	87
 22039  00405E  D001               	goto	L5
 22040  004060                     l17788:
 22041                           
 22042                           ; BSR set to: 1
 22043  004060  0E30               	movlw	48
 22044  004062                     L5:
 22045  004062  2546               	addwf	xtoa@c& (0+255),w,b
 22046  004064  6F46               	movwf	xtoa@c& (0+255),b
 22047  004066  0E00               	movlw	0
 22048  004068  2147               	addwfc	(xtoa@c+1)& (0+255),w,b
 22049  00406A  6F47               	movwf	(xtoa@c+1)& (0+255),b
 22050                           
 22051                           ; BSR set to: 1
 22052                           
 22053                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 22054  00406C  0EBF               	movlw	191
 22055  00406E  6F2C               	movwf	??_xtoa& (0+255),b
 22056  004070  0EFF               	movlw	255
 22057  004072  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 22058  004074  512B               	movf	xtoa@x& (0+255),w,b
 22059  004076  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 22060  004078  6B2F               	clrf	(??_xtoa+3)& (0+255),b
 22061  00407A  512C               	movf	??_xtoa& (0+255),w,b
 22062  00407C  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 22063  00407E  512D               	movf	(??_xtoa+1)& (0+255),w,b
 22064  004080  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 22065  004082  512F               	movf	(??_xtoa+3)& (0+255),w,b
 22066  004084  E106               	bnz	u17240
 22067  004086  0E1A               	movlw	26
 22068  004088  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 22069  00408A  B0D8               	btfsc	status,0,c
 22070  00408C  D002               	goto	u17240
 22071  00408E  0E01               	movlw	1
 22072  004090  D001               	goto	u17250
 22073  004092                     u17240:
 22074  004092  0E00               	movlw	0
 22075  004094                     u17250:
 22076  004094  6F34               	movwf	_xtoa$5202& (0+255),b
 22077  004096  6B35               	clrf	(_xtoa$5202+1)& (0+255),b
 22078                           
 22079                           ; BSR set to: 1
 22080  004098  5134               	movf	_xtoa$5202& (0+255),w,b
 22081  00409A  1135               	iorwf	(_xtoa$5202+1)& (0+255),w,b
 22082  00409C  B4D8               	btfsc	status,2,c
 22083  00409E  D02B               	goto	l17802
 22084                           
 22085                           ; BSR set to: 1
 22086  0040A0  0E9F               	movlw	159
 22087  0040A2  6F2C               	movwf	??_xtoa& (0+255),b
 22088  0040A4  0EFF               	movlw	255
 22089  0040A6  6F2D               	movwf	(??_xtoa+1)& (0+255),b
 22090  0040A8  0E20               	movlw	32
 22091  0040AA  1146               	iorwf	xtoa@c& (0+255),w,b
 22092  0040AC  6F2E               	movwf	(??_xtoa+2)& (0+255),b
 22093  0040AE  0E00               	movlw	0
 22094  0040B0  1147               	iorwf	(xtoa@c+1)& (0+255),w,b
 22095  0040B2  6F2F               	movwf	(??_xtoa+3)& (0+255),b
 22096  0040B4  512C               	movf	??_xtoa& (0+255),w,b
 22097  0040B6  272E               	addwf	(??_xtoa+2)& (0+255),f,b
 22098  0040B8  512D               	movf	(??_xtoa+1)& (0+255),w,b
 22099  0040BA  232F               	addwfc	(??_xtoa+3)& (0+255),f,b
 22100  0040BC  512F               	movf	(??_xtoa+3)& (0+255),w,b
 22101  0040BE  E106               	bnz	u17270
 22102  0040C0  0E1A               	movlw	26
 22103  0040C2  5D2E               	subwf	(??_xtoa+2)& (0+255),w,b
 22104  0040C4  B0D8               	btfsc	status,0,c
 22105  0040C6  D002               	goto	u17270
 22106  0040C8  0E01               	movlw	1
 22107  0040CA  D001               	goto	u17280
 22108  0040CC                     u17270:
 22109  0040CC  0E00               	movlw	0
 22110  0040CE                     u17280:
 22111  0040CE  6F36               	movwf	_xtoa$5203& (0+255),b
 22112  0040D0  6B37               	clrf	(_xtoa$5203+1)& (0+255),b
 22113                           
 22114                           ; BSR set to: 1
 22115  0040D2  5136               	movf	_xtoa$5203& (0+255),w,b
 22116  0040D4  1137               	iorwf	(_xtoa$5203+1)& (0+255),w,b
 22117  0040D6  B4D8               	btfsc	status,2,c
 22118  0040D8  D00E               	goto	l17802
 22119                           
 22120                           ; BSR set to: 1
 22121                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 22122  0040DA  0060  F518  F10A   	movff	xtoa@c,toupper@c
 22123  0040E0  0060  F51C  F10B   	movff	xtoa@c+1,toupper@c+1
 22124  0040E6  EC18  F04C         	call	_toupper	;wreg free
 22125  0040EA  0060  F428  F146   	movff	?_toupper,xtoa@c
 22126  0040F0  0060  F42C  F147   	movff	?_toupper+1,xtoa@c+1
 22127  0040F6                     l17802:
 22128                           
 22129                           ; BSR set to: 1
 22130                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 22131  0040F6  0E89               	movlw	low _dbuf
 22132  0040F8  2544               	addwf	xtoa@i& (0+255),w,b
 22133  0040FA  6ED9               	movwf	fsr2l,c
 22134  0040FC  0E03               	movlw	high _dbuf
 22135  0040FE  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22136  004100  6EDA               	movwf	fsr2h,c
 22137  004102  0060  F51B  FFDF   	movff	xtoa@c,indf2
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 22141  004108  0738               	decf	xtoa@p& (0+255),f,b
 22142  00410A  A0D8               	btfss	status,0,c
 22143  00410C  0739               	decf	(xtoa@p+1)& (0+255),f,b
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 22147  00410E  073A               	decf	xtoa@w& (0+255),f,b
 22148  004110  A0D8               	btfss	status,0,c
 22149  004112  073B               	decf	(xtoa@w+1)& (0+255),f,b
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 22153  004114  0060  F4F0  F12C   	movff	xtoa@n,??_xtoa
 22154  00411A  0060  F4F4  F12D   	movff	xtoa@n+1,??_xtoa+1
 22155  004120  0060  F4F8  F12E   	movff	xtoa@n+2,??_xtoa+2
 22156  004126  0060  F4FC  F12F   	movff	xtoa@n+3,??_xtoa+3
 22157  00412C  0060  F500  F130   	movff	xtoa@n+4,??_xtoa+4
 22158  004132  0060  F504  F131   	movff	xtoa@n+5,??_xtoa+5
 22159  004138  0060  F508  F132   	movff	xtoa@n+6,??_xtoa+6
 22160  00413E  0060  F50C  F133   	movff	xtoa@n+7,??_xtoa+7
 22161  004144  0E05               	movlw	5
 22162  004146  D009               	goto	u17300
 22163  004148                     u17305:
 22164  004148  90D8               	bcf	status,0,c
 22165  00414A  3333               	rrcf	(??_xtoa+7)& (0+255),f,b
 22166  00414C  3332               	rrcf	(??_xtoa+6)& (0+255),f,b
 22167  00414E  3331               	rrcf	(??_xtoa+5)& (0+255),f,b
 22168  004150  3330               	rrcf	(??_xtoa+4)& (0+255),f,b
 22169  004152  332F               	rrcf	(??_xtoa+3)& (0+255),f,b
 22170  004154  332E               	rrcf	(??_xtoa+2)& (0+255),f,b
 22171  004156  332D               	rrcf	(??_xtoa+1)& (0+255),f,b
 22172  004158  332C               	rrcf	??_xtoa& (0+255),f,b
 22173  00415A                     u17300:
 22174  00415A  2EE8               	decfsz	wreg,f,c
 22175  00415C  D7F5               	goto	u17305
 22176  00415E  0060  F4B0  F13C   	movff	??_xtoa,xtoa@n
 22177  004164  0060  F4B4  F13D   	movff	??_xtoa+1,xtoa@n+1
 22178  00416A  0060  F4B8  F13E   	movff	??_xtoa+2,xtoa@n+2
 22179  004170  0060  F4BC  F13F   	movff	??_xtoa+3,xtoa@n+3
 22180  004176  0060  F4C0  F140   	movff	??_xtoa+4,xtoa@n+4
 22181  00417C  0060  F4C4  F141   	movff	??_xtoa+5,xtoa@n+5
 22182  004182  0060  F4C8  F142   	movff	??_xtoa+6,xtoa@n+6
 22183  004188  0060  F4CC  F143   	movff	??_xtoa+7,xtoa@n+7
 22184  00418E                     l17810:
 22185                           
 22186                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22187  00418E  0101               	movlb	1	; () banked
 22188  004190  BF45               	btfsc	(xtoa@i+1)& (0+255),7,b
 22189  004192  D020               	goto	u17350
 22190  004194  5145               	movf	(xtoa@i+1)& (0+255),w,b
 22191  004196  E104               	bnz	u17310
 22192  004198  0E02               	movlw	2
 22193  00419A  5D44               	subwf	xtoa@i& (0+255),w,b
 22194  00419C  A0D8               	btfss	status,0,c
 22195  00419E  D01A               	goto	u17350
 22196  0041A0                     u17310:
 22197                           
 22198                           ; BSR set to: 1
 22199  0041A0  513C               	movf	xtoa@n& (0+255),w,b
 22200  0041A2  113D               	iorwf	(xtoa@n+1)& (0+255),w,b
 22201  0041A4  113E               	iorwf	(xtoa@n+2)& (0+255),w,b
 22202  0041A6  113F               	iorwf	(xtoa@n+3)& (0+255),w,b
 22203  0041A8  1140               	iorwf	(xtoa@n+4)& (0+255),w,b
 22204  0041AA  1141               	iorwf	(xtoa@n+5)& (0+255),w,b
 22205  0041AC  1142               	iorwf	(xtoa@n+6)& (0+255),w,b
 22206  0041AE  1143               	iorwf	(xtoa@n+7)& (0+255),w,b
 22207  0041B0  A4D8               	btfss	status,2,c
 22208  0041B2  D745               	goto	l17780
 22209                           
 22210                           ; BSR set to: 1
 22211  0041B4  BF39               	btfsc	(xtoa@p+1)& (0+255),7,b
 22212  0041B6  D005               	goto	u17330
 22213  0041B8  5139               	movf	(xtoa@p+1)& (0+255),w,b
 22214  0041BA  E102               	bnz	u17331
 22215  0041BC  0538               	decf	xtoa@p& (0+255),w,b
 22216  0041BE  B0D8               	btfsc	status,0,c
 22217  0041C0                     u17331:
 22218  0041C0  D73E               	goto	l17780
 22219  0041C2                     u17330:
 22220                           
 22221                           ; BSR set to: 1
 22222  0041C2  BF3B               	btfsc	(xtoa@w+1)& (0+255),7,b
 22223  0041C4  D007               	goto	u17350
 22224  0041C6  513B               	movf	(xtoa@w+1)& (0+255),w,b
 22225  0041C8  E103               	bnz	u17340
 22226  0041CA  053A               	decf	xtoa@w& (0+255),w,b
 22227  0041CC  A0D8               	btfss	status,0,c
 22228  0041CE  D002               	goto	u17350
 22229  0041D0                     u17340:
 22230                           
 22231                           ; BSR set to: 1
 22232  0041D0  B3CB               	btfsc	_flags& (0+255),1,b
 22233  0041D2  D735               	goto	l17780
 22234  0041D4                     u17350:
 22235                           
 22236                           ; BSR set to: 1
 22237                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 22238  0041D4  A9CB               	btfss	_flags& (0+255),4,b
 22239  0041D6  D017               	goto	l17826
 22240                           
 22241                           ; BSR set to: 1
 22242                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 22243  0041D8  0744               	decf	xtoa@i& (0+255),f,b
 22244  0041DA  A0D8               	btfss	status,0,c
 22245  0041DC  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22246                           
 22247                           ; BSR set to: 1
 22248                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 22249  0041DE  0E89               	movlw	low _dbuf
 22250  0041E0  2544               	addwf	xtoa@i& (0+255),w,b
 22251  0041E2  6ED9               	movwf	fsr2l,c
 22252  0041E4  0E03               	movlw	high _dbuf
 22253  0041E6  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22254  0041E8  6EDA               	movwf	fsr2h,c
 22255  0041EA  0060  F4AF  FFDF   	movff	xtoa@x,indf2
 22256                           
 22257                           ; BSR set to: 1
 22258                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 22259  0041F0  0744               	decf	xtoa@i& (0+255),f,b
 22260  0041F2  A0D8               	btfss	status,0,c
 22261  0041F4  0745               	decf	(xtoa@i+1)& (0+255),f,b
 22262                           
 22263                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 22264  0041F6  0E89               	movlw	low _dbuf
 22265  0041F8  2544               	addwf	xtoa@i& (0+255),w,b
 22266  0041FA  6ED9               	movwf	fsr2l,c
 22267  0041FC  0E03               	movlw	high _dbuf
 22268  0041FE  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22269  004200  6EDA               	movwf	fsr2h,c
 22270  004202  0E30               	movlw	48
 22271  004204  6EDF               	movwf	indf2,c
 22272  004206                     l17826:
 22273                           
 22274                           ; BSR set to: 1
 22275                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 22276  004206  0060  F484  F116   	movff	xtoa@fp,pad@fp
 22277  00420C  0060  F488  F117   	movff	xtoa@fp+1,pad@fp+1
 22278  004212  0E89               	movlw	low _dbuf
 22279  004214  2544               	addwf	xtoa@i& (0+255),w,b
 22280  004216  6F18               	movwf	pad@buf& (0+255),b
 22281  004218  0E03               	movlw	high _dbuf
 22282  00421A  2145               	addwfc	(xtoa@i+1)& (0+255),w,b
 22283  00421C  6F19               	movwf	(pad@buf+1)& (0+255),b
 22284  00421E  0060  F4E8  F11A   	movff	xtoa@w,pad@p
 22285  004224  0060  F4EC  F11B   	movff	xtoa@w+1,pad@p+1
 22286  00422A  EC88  F040         	call	_pad	;wreg free
 22287  00422E  0060  F458  F121   	movff	?_pad,?_xtoa
 22288  004234  0060  F45C  F122   	movff	?_pad+1,?_xtoa+1
 22289                           
 22290                           ; BSR set to: 1
 22291  00423A  0012               	return		;funcret
 22292  00423C                     __end_of_xtoa:
 22293                           	opt callstack 0
 22294                           
 22295 ;; *************** function _toupper *****************
 22296 ;; Defined at:
 22297 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 22298 ;; Parameters:    Size  Location     Type
 22299 ;;  c               2   10[BANK1 ] int 
 22300 ;; Auto vars:     Size  Location     Type
 22301 ;;		None
 22302 ;; Return value:  Size  Location     Type
 22303 ;;                  2   10[BANK1 ] int 
 22304 ;; Registers used:
 22305 ;;		wreg, status,2, status,0
 22306 ;; Tracked objects:
 22307 ;;		On entry : 3F/1
 22308 ;;		On exit  : 3F/1
 22309 ;;		Unchanged: 0/0
 22310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22311 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22312 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22313 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22314 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22315 ;;Total ram usage:        8 bytes
 22316 ;; Hardware stack levels used:    1
 22317 ;; Hardware stack levels required when called:   17
 22318 ;; This function calls:
 22319 ;;		_islower
 22320 ;; This function is called by:
 22321 ;;		_xtoa
 22322 ;; This function uses a non-reentrant model
 22323 ;;
 22324                           
 22325                           	psect	text166
 22326  009830                     __ptext166:
 22327                           	opt callstack 0
 22328  009830                     _toupper:
 22329                           	opt callstack 9
 22330                           
 22331                           ; BSR set to: 1
 22332                           
 22333                           ; BSR set to: 1
 22334                           ;incstack = 0
 22335  009830  0E9F               	movlw	159
 22336  009832  6F0C               	movwf	??_toupper& (0+255),b
 22337  009834  0EFF               	movlw	255
 22338  009836  6F0D               	movwf	(??_toupper+1)& (0+255),b
 22339  009838  0060  F428  F10E   	movff	toupper@c,??_toupper+2
 22340  00983E  0060  F42C  F10F   	movff	toupper@c+1,??_toupper+3
 22341  009844  510C               	movf	??_toupper& (0+255),w,b
 22342  009846  270E               	addwf	(??_toupper+2)& (0+255),f,b
 22343  009848  510D               	movf	(??_toupper+1)& (0+255),w,b
 22344  00984A  230F               	addwfc	(??_toupper+3)& (0+255),f,b
 22345  00984C  510F               	movf	(??_toupper+3)& (0+255),w,b
 22346  00984E  E106               	bnz	u16590
 22347  009850  0E1A               	movlw	26
 22348  009852  5D0E               	subwf	(??_toupper+2)& (0+255),w,b
 22349  009854  B0D8               	btfsc	status,0,c
 22350  009856  D002               	goto	u16590
 22351  009858  0E01               	movlw	1
 22352  00985A  D001               	goto	u16600
 22353  00985C                     u16590:
 22354  00985C  0E00               	movlw	0
 22355  00985E                     u16600:
 22356  00985E  6F10               	movwf	_toupper$5792& (0+255),b
 22357  009860  6B11               	clrf	(_toupper$5792+1)& (0+255),b
 22358                           
 22359                           ; BSR set to: 1
 22360  009862  5110               	movf	_toupper$5792& (0+255),w,b
 22361  009864  1111               	iorwf	(_toupper$5792+1)& (0+255),w,b
 22362  009866  B4D8               	btfsc	status,2,c
 22363  009868  D005               	goto	l4392
 22364                           
 22365                           ; BSR set to: 1
 22366  00986A  0E5F               	movlw	95
 22367  00986C  150A               	andwf	toupper@c& (0+255),w,b
 22368  00986E  6F0A               	movwf	?_toupper& (0+255),b
 22369  009870  6B0B               	clrf	(?_toupper+1)& (0+255),b
 22370  009872  0012               	return	
 22371  009874                     l4392:
 22372                           
 22373                           ; BSR set to: 1
 22374  009874  0060  F428  F10A   	movff	toupper@c,?_toupper
 22375  00987A  0060  F42C  F10B   	movff	toupper@c+1,?_toupper+1
 22376                           
 22377                           ; BSR set to: 1
 22378  009880  0012               	return		;funcret
 22379  009882                     __end_of_toupper:
 22380                           	opt callstack 0
 22381                           
 22382 ;; *************** function _islower *****************
 22383 ;; Defined at:
 22384 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 22385 ;; Parameters:    Size  Location     Type
 22386 ;;  c               2    4[BANK1 ] int 
 22387 ;; Auto vars:     Size  Location     Type
 22388 ;;		None
 22389 ;; Return value:  Size  Location     Type
 22390 ;;                  2    4[BANK1 ] int 
 22391 ;; Registers used:
 22392 ;;		wreg, status,2, status,0
 22393 ;; Tracked objects:
 22394 ;;		On entry : 0/0
 22395 ;;		On exit  : 3F/1
 22396 ;;		Unchanged: 0/0
 22397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22398 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22400 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22401 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22402 ;;Total ram usage:        6 bytes
 22403 ;; Hardware stack levels used:    1
 22404 ;; Hardware stack levels required when called:   16
 22405 ;; This function calls:
 22406 ;;		Nothing
 22407 ;; This function is called by:
 22408 ;;		_toupper
 22409 ;; This function uses a non-reentrant model
 22410 ;;
 22411                           
 22412                           	psect	text167
 22413  009F52                     __ptext167:
 22414                           	opt callstack 0
 22415  009F52                     _islower:
 22416                           	opt callstack 9
 22417                           
 22418                           ; BSR set to: 1
 22419                           ;incstack = 0
 22420  009F52  0E9F               	movlw	159
 22421  009F54  0101               	movlb	1	; () banked
 22422  009F56  6F06               	movwf	??_islower& (0+255),b
 22423  009F58  0EFF               	movlw	255
 22424  009F5A  6F07               	movwf	(??_islower+1)& (0+255),b
 22425  009F5C  0060  F410  F108   	movff	islower@c,??_islower+2
 22426  009F62  0060  F414  F109   	movff	islower@c+1,??_islower+3
 22427  009F68  5106               	movf	??_islower& (0+255),w,b
 22428  009F6A  2708               	addwf	(??_islower+2)& (0+255),f,b
 22429  009F6C  5107               	movf	(??_islower+1)& (0+255),w,b
 22430  009F6E  2309               	addwfc	(??_islower+3)& (0+255),f,b
 22431  009F70  5109               	movf	(??_islower+3)& (0+255),w,b
 22432  009F72  E106               	bnz	u15980
 22433  009F74  0E1A               	movlw	26
 22434  009F76  5D08               	subwf	(??_islower+2)& (0+255),w,b
 22435  009F78  B0D8               	btfsc	status,0,c
 22436  009F7A  D002               	goto	u15980
 22437  009F7C  0E01               	movlw	1
 22438  009F7E  D001               	goto	u15990
 22439  009F80                     u15980:
 22440  009F80  0E00               	movlw	0
 22441  009F82                     u15990:
 22442  009F82  6F04               	movwf	?_islower& (0+255),b
 22443  009F84  6B05               	clrf	(?_islower+1)& (0+255),b
 22444                           
 22445                           ; BSR set to: 1
 22446  009F86  0012               	return		;funcret
 22447  009F88                     __end_of_islower:
 22448                           	opt callstack 0
 22449                           
 22450 ;; *************** function _isupper *****************
 22451 ;; Defined at:
 22452 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22453 ;; Parameters:    Size  Location     Type
 22454 ;;  c               2    4[BANK1 ] int 
 22455 ;; Auto vars:     Size  Location     Type
 22456 ;;		None
 22457 ;; Return value:  Size  Location     Type
 22458 ;;                  2    4[BANK1 ] int 
 22459 ;; Registers used:
 22460 ;;		wreg, status,2, status,0
 22461 ;; Tracked objects:
 22462 ;;		On entry : 0/0
 22463 ;;		On exit  : 3F/1
 22464 ;;		Unchanged: 0/0
 22465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22466 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22468 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22469 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22470 ;;Total ram usage:        6 bytes
 22471 ;; Hardware stack levels used:    1
 22472 ;; Hardware stack levels required when called:   16
 22473 ;; This function calls:
 22474 ;;		Nothing
 22475 ;; This function is called by:
 22476 ;;		_xtoa
 22477 ;; This function uses a non-reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text168
 22481  009F88                     __ptext168:
 22482                           	opt callstack 0
 22483  009F88                     _isupper:
 22484                           	opt callstack 10
 22485                           
 22486                           ; BSR set to: 1
 22487                           ;incstack = 0
 22488  009F88  0EBF               	movlw	191
 22489  009F8A  0101               	movlb	1	; () banked
 22490  009F8C  6F06               	movwf	??_isupper& (0+255),b
 22491  009F8E  0EFF               	movlw	255
 22492  009F90  6F07               	movwf	(??_isupper+1)& (0+255),b
 22493  009F92  0060  F410  F108   	movff	isupper@c,??_isupper+2
 22494  009F98  0060  F414  F109   	movff	isupper@c+1,??_isupper+3
 22495  009F9E  5106               	movf	??_isupper& (0+255),w,b
 22496  009FA0  2708               	addwf	(??_isupper+2)& (0+255),f,b
 22497  009FA2  5107               	movf	(??_isupper+1)& (0+255),w,b
 22498  009FA4  2309               	addwfc	(??_isupper+3)& (0+255),f,b
 22499  009FA6  5109               	movf	(??_isupper+3)& (0+255),w,b
 22500  009FA8  E106               	bnz	u16550
 22501  009FAA  0E1A               	movlw	26
 22502  009FAC  5D08               	subwf	(??_isupper+2)& (0+255),w,b
 22503  009FAE  B0D8               	btfsc	status,0,c
 22504  009FB0  D002               	goto	u16550
 22505  009FB2  0E01               	movlw	1
 22506  009FB4  D001               	goto	u16560
 22507  009FB6                     u16550:
 22508  009FB6  0E00               	movlw	0
 22509  009FB8                     u16560:
 22510  009FB8  6F04               	movwf	?_isupper& (0+255),b
 22511  009FBA  6B05               	clrf	(?_isupper+1)& (0+255),b
 22512                           
 22513                           ; BSR set to: 1
 22514  009FBC  0012               	return		;funcret
 22515  009FBE                     __end_of_isupper:
 22516                           	opt callstack 0
 22517                           
 22518 ;; *************** function _isalpha *****************
 22519 ;; Defined at:
 22520 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 22521 ;; Parameters:    Size  Location     Type
 22522 ;;  c               2    4[BANK1 ] int 
 22523 ;; Auto vars:     Size  Location     Type
 22524 ;;		None
 22525 ;; Return value:  Size  Location     Type
 22526 ;;                  2    4[BANK1 ] int 
 22527 ;; Registers used:
 22528 ;;		wreg, status,2, status,0
 22529 ;; Tracked objects:
 22530 ;;		On entry : 0/0
 22531 ;;		On exit  : 3F/1
 22532 ;;		Unchanged: 0/0
 22533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22534 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22536 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22537 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22538 ;;Total ram usage:        6 bytes
 22539 ;; Hardware stack levels used:    1
 22540 ;; Hardware stack levels required when called:   16
 22541 ;; This function calls:
 22542 ;;		Nothing
 22543 ;; This function is called by:
 22544 ;;		_xtoa
 22545 ;; This function uses a non-reentrant model
 22546 ;;
 22547                           
 22548                           	psect	text169
 22549  009FBE                     __ptext169:
 22550                           	opt callstack 0
 22551  009FBE                     _isalpha:
 22552                           	opt callstack 10
 22553                           
 22554                           ; BSR set to: 1
 22555                           ;incstack = 0
 22556  009FBE  0E9F               	movlw	159
 22557  009FC0  0101               	movlb	1	; () banked
 22558  009FC2  6F06               	movwf	??_isalpha& (0+255),b
 22559  009FC4  0EFF               	movlw	255
 22560  009FC6  6F07               	movwf	(??_isalpha+1)& (0+255),b
 22561  009FC8  0E20               	movlw	32
 22562  009FCA  1104               	iorwf	isalpha@c& (0+255),w,b
 22563  009FCC  6F08               	movwf	(??_isalpha+2)& (0+255),b
 22564  009FCE  0E00               	movlw	0
 22565  009FD0  1105               	iorwf	(isalpha@c+1)& (0+255),w,b
 22566  009FD2  6F09               	movwf	(??_isalpha+3)& (0+255),b
 22567  009FD4  5106               	movf	??_isalpha& (0+255),w,b
 22568  009FD6  2708               	addwf	(??_isalpha+2)& (0+255),f,b
 22569  009FD8  5107               	movf	(??_isalpha+1)& (0+255),w,b
 22570  009FDA  2309               	addwfc	(??_isalpha+3)& (0+255),f,b
 22571  009FDC  5109               	movf	(??_isalpha+3)& (0+255),w,b
 22572  009FDE  E106               	bnz	u16570
 22573  009FE0  0E1A               	movlw	26
 22574  009FE2  5D08               	subwf	(??_isalpha+2)& (0+255),w,b
 22575  009FE4  B0D8               	btfsc	status,0,c
 22576  009FE6  D002               	goto	u16570
 22577  009FE8  0E01               	movlw	1
 22578  009FEA  D001               	goto	u16580
 22579  009FEC                     u16570:
 22580  009FEC  0E00               	movlw	0
 22581  009FEE                     u16580:
 22582  009FEE  6F04               	movwf	?_isalpha& (0+255),b
 22583  009FF0  6B05               	clrf	(?_isalpha+1)& (0+255),b
 22584                           
 22585                           ; BSR set to: 1
 22586  009FF2  0012               	return		;funcret
 22587  009FF4                     __end_of_isalpha:
 22588                           	opt callstack 0
 22589                           
 22590 ;; *************** function _stoa *****************
 22591 ;; Defined at:
 22592 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;  fp              2   15[BANK1 ] PTR struct _IO_FILE
 22595 ;;		 -> sprintf@f(6), NULL(0), 
 22596 ;;  s               2   17[BANK1 ] PTR unsigned char 
 22597 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 22598 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 22599 ;;		 -> alarmData(399), STR_11(3), 
 22600 ;; Auto vars:     Size  Location     Type
 22601 ;;  nuls            7   20[BANK1 ] unsigned char [7]
 22602 ;;  l               2   35[BANK1 ] int 
 22603 ;;  p               2   33[BANK1 ] int 
 22604 ;;  cp              2   31[BANK1 ] PTR unsigned char 
 22605 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), adcVOffset(2), 
 22606 ;;		 -> adcOffset(2), STR_29(3), STR_28(3), STR_27(3), 
 22607 ;;		 -> STR_26(3), alarmData(399), STR_11(3), 
 22608 ;;  w               2   29[BANK1 ] int 
 22609 ;;  i               2   27[BANK1 ] int 
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  2   15[BANK1 ] int 
 22612 ;; Registers used:
 22613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22614 ;; Tracked objects:
 22615 ;;		On entry : 3F/1
 22616 ;;		On exit  : 3F/1
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22619 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22620 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22621 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22622 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22623 ;;Total ram usage:       22 bytes
 22624 ;; Hardware stack levels used:    1
 22625 ;; Hardware stack levels required when called:   19
 22626 ;; This function calls:
 22627 ;;		_fputc
 22628 ;;		_strlen
 22629 ;; This function is called by:
 22630 ;;		_vfpfcnvrt
 22631 ;; This function uses a non-reentrant model
 22632 ;;
 22633                           
 22634                           	psect	text170
 22635  005604                     __ptext170:
 22636                           	opt callstack 0
 22637  005604                     _stoa:
 22638                           	opt callstack 8
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 22642                           
 22643                           ; BSR set to: 1
 22644                           ;incstack = 0
 22645  005604  EE20  F2D0         	lfsr	2,stoa@F1144
 22646  005608  EE10  F114         	lfsr	1,stoa@nuls
 22647  00560C  0E06               	movlw	6
 22648  00560E                     u17101:
 22649  00560E  006F FF6F FFE3     	movff	plusw2,plusw1
 22650  005614  06E8               	decf	wreg,f,c
 22651  005616  E2FB               	bc	u17101
 22652                           
 22653                           ; BSR set to: 1
 22654                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 22655  005618  0060  F444  F11F   	movff	stoa@s,stoa@cp
 22656  00561E  0060  F448  F120   	movff	stoa@s+1,stoa@cp+1
 22657                           
 22658                           ; BSR set to: 1
 22659                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 22660  005624  511F               	movf	stoa@cp& (0+255),w,b
 22661  005626  1120               	iorwf	(stoa@cp+1)& (0+255),w,b
 22662  005628  A4D8               	btfss	status,2,c
 22663  00562A  D004               	goto	l17730
 22664                           
 22665                           ; BSR set to: 1
 22666                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 22667  00562C  0E14               	movlw	low stoa@nuls
 22668  00562E  6F1F               	movwf	stoa@cp& (0+255),b
 22669  005630  0E01               	movlw	high stoa@nuls
 22670  005632  6F20               	movwf	(stoa@cp+1)& (0+255),b
 22671  005634                     l17730:
 22672                           
 22673                           ; BSR set to: 1
 22674                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 22675  005634  0060  F47C  F104   	movff	stoa@cp,strlen@s
 22676  00563A  0060  F480  F105   	movff	stoa@cp+1,strlen@s+1
 22677  005640  ECC5  F04B         	call	_strlen	;wreg free
 22678  005644  0060  F410  F123   	movff	?_strlen,stoa@l
 22679  00564A  0060  F414  F124   	movff	?_strlen+1,stoa@l+1
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 22683  005650  0060  F724  F121   	movff	_prec,stoa@p
 22684  005656  0060  F728  F122   	movff	_prec+1,stoa@p+1
 22685                           
 22686                           ; BSR set to: 1
 22687                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 22688  00565C  BF22               	btfsc	(stoa@p+1)& (0+255),7,b
 22689  00565E  D010               	goto	l3519
 22690                           
 22691                           ; BSR set to: 1
 22692  005660  5123               	movf	stoa@l& (0+255),w,b
 22693  005662  5D21               	subwf	stoa@p& (0+255),w,b
 22694  005664  5122               	movf	(stoa@p+1)& (0+255),w,b
 22695  005666  0A80               	xorlw	128
 22696  005668  6F13               	movwf	??_stoa& (0+255),b
 22697  00566A  5124               	movf	(stoa@l+1)& (0+255),w,b
 22698  00566C  0A80               	xorlw	128
 22699  00566E  5913               	subwfb	??_stoa& (0+255),w,b
 22700  005670  B0D8               	btfsc	status,0,c
 22701  005672  D006               	goto	l3519
 22702                           
 22703                           ; BSR set to: 1
 22704  005674  0060  F484  F123   	movff	stoa@p,stoa@l
 22705  00567A  0060  F488  F124   	movff	stoa@p+1,stoa@l+1
 22706  005680                     l3519:
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 22710  005680  0060  F48C  F121   	movff	stoa@l,stoa@p
 22711  005686  0060  F490  F122   	movff	stoa@l+1,stoa@p+1
 22712                           
 22713                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 22714  00568C  0060  F71C  F11D   	movff	_width,stoa@w
 22715  005692  0060  F720  F11E   	movff	_width+1,stoa@w+1
 22716                           
 22717                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 22718  005698  A1CB               	btfss	_flags& (0+255),0,b
 22719  00569A  D00F               	goto	l17744
 22720  00569C  D018               	goto	u17150
 22721  00569E                     l17740:
 22722                           
 22723                           ; BSR set to: 1
 22724                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 22725  00569E  0E00               	movlw	0
 22726  0056A0  6F07               	movwf	(fputc@c+1)& (0+255),b
 22727  0056A2  0E20               	movlw	32
 22728  0056A4  6F06               	movwf	fputc@c& (0+255),b
 22729  0056A6  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22730  0056AC  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22731  0056B2  EC1F  F03F         	call	_fputc	;wreg free
 22732                           
 22733                           ; BSR set to: 1
 22734                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 22735  0056B6  4B23               	infsnz	stoa@l& (0+255),f,b
 22736  0056B8  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22737  0056BA                     l17744:
 22738                           
 22739                           ; BSR set to: 1
 22740                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 22741  0056BA  511D               	movf	stoa@w& (0+255),w,b
 22742  0056BC  5D23               	subwf	stoa@l& (0+255),w,b
 22743  0056BE  5124               	movf	(stoa@l+1)& (0+255),w,b
 22744  0056C0  0A80               	xorlw	128
 22745  0056C2  6F13               	movwf	??_stoa& (0+255),b
 22746  0056C4  511E               	movf	(stoa@w+1)& (0+255),w,b
 22747  0056C6  0A80               	xorlw	128
 22748  0056C8  5913               	subwfb	??_stoa& (0+255),w,b
 22749  0056CA  A0D8               	btfss	status,0,c
 22750  0056CC  D7E8               	goto	l17740
 22751  0056CE                     u17150:
 22752                           
 22753                           ; BSR set to: 1
 22754                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 22755  0056CE  0E00               	movlw	0
 22756  0056D0  6F1C               	movwf	(stoa@i+1)& (0+255),b
 22757  0056D2  0E00               	movlw	0
 22758  0056D4  6F1B               	movwf	stoa@i& (0+255),b
 22759                           
 22760                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22761  0056D6  D026               	goto	l17754
 22762  0056D8                     l17748:
 22763                           
 22764                           ; BSR set to: 1
 22765                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 22766  0056D8  0060  F47F  FFF6   	movff	stoa@cp,tblptrl
 22767  0056DE  0060  F483  FFF7   	movff	stoa@cp+1,tblptrh
 22768  0056E4  0E00               	movlw	low (__mediumconst shr (0+16))
 22769  0056E6  6EF8               	movwf	tblptru,c
 22770  0056E8  0E0F               	movlw	(high __ramtop+-1)
 22771  0056EA  64F7               	cpfsgt	tblptrh,c
 22772  0056EC  D003               	bra	u17167
 22773  0056EE  0008               	tblrd		*
 22774  0056F0  50F5               	movf	tablat,w,c
 22775  0056F2  D007               	bra	u17160
 22776  0056F4                     u17167:
 22777  0056F4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 22778  0056FA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 22779  005700  50E7               	movf	indf1,w,c
 22780  005702                     u17160:
 22781  005702  0101               	movlb	1	; () banked
 22782  005704  6F13               	movwf	??_stoa& (0+255),b
 22783  005706  5113               	movf	??_stoa& (0+255),w,b
 22784  005708  6F06               	movwf	fputc@c& (0+255),b
 22785  00570A  6B07               	clrf	(fputc@c+1)& (0+255),b
 22786  00570C  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22787  005712  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22788  005718  EC1F  F03F         	call	_fputc	;wreg free
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 22792  00571C  4B1F               	infsnz	stoa@cp& (0+255),f,b
 22793  00571E  2B20               	incf	(stoa@cp+1)& (0+255),f,b
 22794                           
 22795                           ; BSR set to: 1
 22796                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 22797  005720  4B1B               	infsnz	stoa@i& (0+255),f,b
 22798  005722  2B1C               	incf	(stoa@i+1)& (0+255),f,b
 22799  005724                     l17754:
 22800                           
 22801                           ; BSR set to: 1
 22802                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 22803  005724  5121               	movf	stoa@p& (0+255),w,b
 22804  005726  5D1B               	subwf	stoa@i& (0+255),w,b
 22805  005728  511C               	movf	(stoa@i+1)& (0+255),w,b
 22806  00572A  0A80               	xorlw	128
 22807  00572C  6F13               	movwf	??_stoa& (0+255),b
 22808  00572E  5122               	movf	(stoa@p+1)& (0+255),w,b
 22809  005730  0A80               	xorlw	128
 22810  005732  5913               	subwfb	??_stoa& (0+255),w,b
 22811  005734  A0D8               	btfss	status,0,c
 22812  005736  D7D0               	goto	l17748
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 22816  005738  B1CB               	btfsc	_flags& (0+255),0,b
 22817  00573A  D00F               	goto	l17762
 22818  00573C  D018               	goto	u17190
 22819  00573E                     l17758:
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 22823  00573E  0E00               	movlw	0
 22824  005740  6F07               	movwf	(fputc@c+1)& (0+255),b
 22825  005742  0E20               	movlw	32
 22826  005744  6F06               	movwf	fputc@c& (0+255),b
 22827  005746  0060  F43C  F108   	movff	stoa@fp,fputc@fp
 22828  00574C  0060  F440  F109   	movff	stoa@fp+1,fputc@fp+1
 22829  005752  EC1F  F03F         	call	_fputc	;wreg free
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 22833  005756  4B23               	infsnz	stoa@l& (0+255),f,b
 22834  005758  2B24               	incf	(stoa@l+1)& (0+255),f,b
 22835  00575A                     l17762:
 22836                           
 22837                           ; BSR set to: 1
 22838                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 22839  00575A  511D               	movf	stoa@w& (0+255),w,b
 22840  00575C  5D23               	subwf	stoa@l& (0+255),w,b
 22841  00575E  5124               	movf	(stoa@l+1)& (0+255),w,b
 22842  005760  0A80               	xorlw	128
 22843  005762  6F13               	movwf	??_stoa& (0+255),b
 22844  005764  511E               	movf	(stoa@w+1)& (0+255),w,b
 22845  005766  0A80               	xorlw	128
 22846  005768  5913               	subwfb	??_stoa& (0+255),w,b
 22847  00576A  A0D8               	btfss	status,0,c
 22848  00576C  D7E8               	goto	l17758
 22849  00576E                     u17190:
 22850                           
 22851                           ; BSR set to: 1
 22852                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 22853                           
 22854                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 22855  00576E  0060  F48C  F10F   	movff	stoa@l,?_stoa
 22856  005774  0060  F490  F110   	movff	stoa@l+1,?_stoa+1
 22857                           
 22858                           ; BSR set to: 1
 22859  00577A  0012               	return		;funcret
 22860  00577C                     __end_of_stoa:
 22861                           	opt callstack 0
 22862                           
 22863 ;; *************** function _dtoa *****************
 22864 ;; Defined at:
 22865 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22866 ;; Parameters:    Size  Location     Type
 22867 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 22868 ;;		 -> sprintf@f(6), NULL(0), 
 22869 ;;  d               8   35[BANK1 ] long long 
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;  n               8   59[BANK1 ] long long 
 22872 ;;  i               2   67[BANK1 ] int 
 22873 ;;  s               2   57[BANK1 ] int 
 22874 ;;  w               2   55[BANK1 ] int 
 22875 ;;  p               2   53[BANK1 ] int 
 22876 ;; Return value:  Size  Location     Type
 22877 ;;                  2   33[BANK1 ] int 
 22878 ;; Registers used:
 22879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22880 ;; Tracked objects:
 22881 ;;		On entry : 3F/1
 22882 ;;		On exit  : 3F/1
 22883 ;;		Unchanged: 0/0
 22884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22885 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22886 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22887 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22888 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22889 ;;Total ram usage:       36 bytes
 22890 ;; Hardware stack levels used:    1
 22891 ;; Hardware stack levels required when called:   21
 22892 ;; This function calls:
 22893 ;;		___aodiv
 22894 ;;		___aomod
 22895 ;;		_abs
 22896 ;;		_pad
 22897 ;; This function is called by:
 22898 ;;		_vfpfcnvrt
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           	psect	text171
 22903  003A8E                     __ptext171:
 22904                           	opt callstack 0
 22905  003A8E                     _dtoa:
 22906                           	opt callstack 6
 22907                           
 22908                           ; BSR set to: 1
 22909                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 22910                           
 22911                           ; BSR set to: 1
 22912                           ;incstack = 0
 22913  003A8E  0060  F48C  F13B   	movff	dtoa@d,dtoa@n
 22914  003A94  0060  F490  F13C   	movff	dtoa@d+1,dtoa@n+1
 22915  003A9A  0060  F494  F13D   	movff	dtoa@d+2,dtoa@n+2
 22916  003AA0  0060  F498  F13E   	movff	dtoa@d+3,dtoa@n+3
 22917  003AA6  0060  F49C  F13F   	movff	dtoa@d+4,dtoa@n+4
 22918  003AAC  0060  F4A0  F140   	movff	dtoa@d+5,dtoa@n+5
 22919  003AB2  0060  F4A4  F141   	movff	dtoa@d+6,dtoa@n+6
 22920  003AB8  0060  F4A8  F142   	movff	dtoa@d+7,dtoa@n+7
 22921                           
 22922                           ; BSR set to: 1
 22923                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 22924  003ABE  AF42               	btfss	(dtoa@n+7)& (0+255),7,b
 22925  003AC0  D002               	goto	u16950
 22926  003AC2  0E01               	movlw	1
 22927  003AC4  D001               	goto	u16960
 22928  003AC6                     u16950:
 22929  003AC6  0E00               	movlw	0
 22930  003AC8                     u16960:
 22931  003AC8  6F39               	movwf	dtoa@s& (0+255),b
 22932  003ACA  6B3A               	clrf	(dtoa@s+1)& (0+255),b
 22933                           
 22934                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22935  003ACC  5139               	movf	dtoa@s& (0+255),w,b
 22936  003ACE  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 22937  003AD0  B4D8               	btfsc	status,2,c
 22938  003AD2  D010               	goto	l17666
 22939                           
 22940                           ; BSR set to: 1
 22941                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22942  003AD4  1F42               	comf	(dtoa@n+7)& (0+255),f,b
 22943  003AD6  1F41               	comf	(dtoa@n+6)& (0+255),f,b
 22944  003AD8  1F40               	comf	(dtoa@n+5)& (0+255),f,b
 22945  003ADA  1F3F               	comf	(dtoa@n+4)& (0+255),f,b
 22946  003ADC  1F3E               	comf	(dtoa@n+3)& (0+255),f,b
 22947  003ADE  1F3D               	comf	(dtoa@n+2)& (0+255),f,b
 22948  003AE0  1F3C               	comf	(dtoa@n+1)& (0+255),f,b
 22949  003AE2  6D3B               	negf	dtoa@n& (0+255),b
 22950  003AE4  0E00               	movlw	0
 22951  003AE6  233C               	addwfc	(dtoa@n+1)& (0+255),f,b
 22952  003AE8  233D               	addwfc	(dtoa@n+2)& (0+255),f,b
 22953  003AEA  233E               	addwfc	(dtoa@n+3)& (0+255),f,b
 22954  003AEC  233F               	addwfc	(dtoa@n+4)& (0+255),f,b
 22955  003AEE  2340               	addwfc	(dtoa@n+5)& (0+255),f,b
 22956  003AF0  2341               	addwfc	(dtoa@n+6)& (0+255),f,b
 22957  003AF2  2342               	addwfc	(dtoa@n+7)& (0+255),f,b
 22958  003AF4                     l17666:
 22959                           
 22960                           ; BSR set to: 1
 22961                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 22962  003AF4  AFCA               	btfss	(_prec+1)& (0+255),7,b
 22963                           
 22964                           ; BSR set to: 1
 22965                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 22966  003AF6  93CB               	bcf	_flags& (0+255),1,b
 22967                           
 22968                           ; BSR set to: 1
 22969                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 22970  003AF8  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 22971  003AFA  D005               	goto	u16990
 22972  003AFC  51CA               	movf	(_prec+1)& (0+255),w,b
 22973  003AFE  E108               	bnz	l3490
 22974  003B00  05C9               	decf	_prec& (0+255),w,b
 22975  003B02  B0D8               	btfsc	status,0,c
 22976  003B04  D005               	goto	l3490
 22977  003B06                     u16990:
 22978                           
 22979                           ; BSR set to: 1
 22980  003B06  0E00               	movlw	0
 22981  003B08  6F36               	movwf	(dtoa@p+1)& (0+255),b
 22982  003B0A  0E01               	movlw	1
 22983  003B0C  6F35               	movwf	dtoa@p& (0+255),b
 22984  003B0E  D006               	goto	l3492
 22985  003B10                     l3490:
 22986                           
 22987                           ; BSR set to: 1
 22988  003B10  0060  F724  F135   	movff	_prec,dtoa@p
 22989  003B16  0060  F728  F136   	movff	_prec+1,dtoa@p+1
 22990  003B1C                     l3492:
 22991                           
 22992                           ; BSR set to: 1
 22993                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22994  003B1C  0060  F71C  F137   	movff	_width,dtoa@w
 22995  003B22  0060  F720  F138   	movff	_width+1,dtoa@w+1
 22996                           
 22997                           ; BSR set to: 1
 22998                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 22999  003B28  5139               	movf	dtoa@s& (0+255),w,b
 23000  003B2A  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23001  003B2C  A4D8               	btfss	status,2,c
 23002  003B2E  D002               	goto	u17010
 23003                           
 23004                           ; BSR set to: 1
 23005  003B30  A5CB               	btfss	_flags& (0+255),2,b
 23006  003B32  D003               	goto	l17680
 23007  003B34                     u17010:
 23008                           
 23009                           ; BSR set to: 1
 23010                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 23011  003B34  0737               	decf	dtoa@w& (0+255),f,b
 23012  003B36  A0D8               	btfss	status,0,c
 23013  003B38  0738               	decf	(dtoa@w+1)& (0+255),f,b
 23014  003B3A                     l17680:
 23015                           
 23016                           ; BSR set to: 1
 23017                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 23018  003B3A  0E00               	movlw	0
 23019  003B3C  6F44               	movwf	(dtoa@i+1)& (0+255),b
 23020  003B3E  0E1F               	movlw	31
 23021  003B40  6F43               	movwf	dtoa@i& (0+255),b
 23022                           
 23023                           ; BSR set to: 1
 23024                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 23025  003B42  0E00               	movlw	0
 23026  003B44  0103               	movlb	3	; () banked
 23027  003B46  6FA8               	movwf	(_dbuf+31)& (0+255),b
 23028                           
 23029                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23030  003B48  D09E               	goto	l17694
 23031  003B4A                     l17684:
 23032                           
 23033                           ; BSR set to: 1
 23034                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 23035  003B4A  0743               	decf	dtoa@i& (0+255),f,b
 23036  003B4C  A0D8               	btfss	status,0,c
 23037  003B4E  0744               	decf	(dtoa@i+1)& (0+255),f,b
 23038                           
 23039                           ; BSR set to: 1
 23040                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 23041  003B50  0E89               	movlw	low _dbuf
 23042  003B52  2543               	addwf	dtoa@i& (0+255),w,b
 23043  003B54  6ED9               	movwf	fsr2l,c
 23044  003B56  0E03               	movlw	high _dbuf
 23045  003B58  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23046  003B5A  6EDA               	movwf	fsr2h,c
 23047  003B5C  0060  F4EC  F104   	movff	dtoa@n,___aomod@dividend
 23048  003B62  0060  F4F0  F105   	movff	dtoa@n+1,___aomod@dividend+1
 23049  003B68  0060  F4F4  F106   	movff	dtoa@n+2,___aomod@dividend+2
 23050  003B6E  0060  F4F8  F107   	movff	dtoa@n+3,___aomod@dividend+3
 23051  003B74  0060  F4FC  F108   	movff	dtoa@n+4,___aomod@dividend+4
 23052  003B7A  0060  F500  F109   	movff	dtoa@n+5,___aomod@dividend+5
 23053  003B80  0060  F504  F10A   	movff	dtoa@n+6,___aomod@dividend+6
 23054  003B86  0060  F508  F10B   	movff	dtoa@n+7,___aomod@dividend+7
 23055  003B8C  0E0A               	movlw	10
 23056  003B8E  6F0C               	movwf	___aomod@divisor& (0+255),b
 23057  003B90  0E00               	movlw	0
 23058  003B92  6F0D               	movwf	(___aomod@divisor+1)& (0+255),b
 23059  003B94  0E00               	movlw	0
 23060  003B96  6F0E               	movwf	(___aomod@divisor+2)& (0+255),b
 23061  003B98  0E00               	movlw	0
 23062  003B9A  6F0F               	movwf	(___aomod@divisor+3)& (0+255),b
 23063  003B9C  0E00               	movlw	0
 23064  003B9E  6F10               	movwf	(___aomod@divisor+4)& (0+255),b
 23065  003BA0  0E00               	movlw	0
 23066  003BA2  6F11               	movwf	(___aomod@divisor+5)& (0+255),b
 23067  003BA4  0E00               	movlw	0
 23068  003BA6  6F12               	movwf	(___aomod@divisor+6)& (0+255),b
 23069  003BA8  0E00               	movlw	0
 23070  003BAA  6F13               	movwf	(___aomod@divisor+7)& (0+255),b
 23071  003BAC  ECA2  F032         	call	___aomod	;wreg free
 23072  003BB0  0060  F410  F12B   	movff	?___aomod,??_dtoa
 23073  003BB6  0060  F414  F12C   	movff	?___aomod+1,??_dtoa+1
 23074  003BBC  0060  F418  F12D   	movff	?___aomod+2,??_dtoa+2
 23075  003BC2  0060  F41C  F12E   	movff	?___aomod+3,??_dtoa+3
 23076  003BC8  0060  F420  F12F   	movff	?___aomod+4,??_dtoa+4
 23077  003BCE  0060  F424  F130   	movff	?___aomod+5,??_dtoa+5
 23078  003BD4  0060  F428  F131   	movff	?___aomod+6,??_dtoa+6
 23079  003BDA  0060  F42C  F132   	movff	?___aomod+7,??_dtoa+7
 23080  003BE0  0060  F4AC  F116   	movff	??_dtoa,abs@a
 23081  003BE6  0060  F4B4  F117   	movff	??_dtoa+2,abs@a+1
 23082  003BEC  ECD3  F04E         	call	_abs	;wreg free
 23083  003BF0  5116               	movf	?_abs& (0+255),w,b
 23084  003BF2  0F30               	addlw	48
 23085  003BF4  6EDF               	movwf	indf2,c
 23086                           
 23087                           ; BSR set to: 1
 23088                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 23089  003BF6  0735               	decf	dtoa@p& (0+255),f,b
 23090  003BF8  A0D8               	btfss	status,0,c
 23091  003BFA  0736               	decf	(dtoa@p+1)& (0+255),f,b
 23092                           
 23093                           ; BSR set to: 1
 23094                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 23095  003BFC  0737               	decf	dtoa@w& (0+255),f,b
 23096  003BFE  A0D8               	btfss	status,0,c
 23097  003C00  0738               	decf	(dtoa@w+1)& (0+255),f,b
 23098                           
 23099                           ; BSR set to: 1
 23100                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 23101  003C02  0060  F4EC  F104   	movff	dtoa@n,___aodiv@dividend
 23102  003C08  0060  F4F0  F105   	movff	dtoa@n+1,___aodiv@dividend+1
 23103  003C0E  0060  F4F4  F106   	movff	dtoa@n+2,___aodiv@dividend+2
 23104  003C14  0060  F4F8  F107   	movff	dtoa@n+3,___aodiv@dividend+3
 23105  003C1A  0060  F4FC  F108   	movff	dtoa@n+4,___aodiv@dividend+4
 23106  003C20  0060  F500  F109   	movff	dtoa@n+5,___aodiv@dividend+5
 23107  003C26  0060  F504  F10A   	movff	dtoa@n+6,___aodiv@dividend+6
 23108  003C2C  0060  F508  F10B   	movff	dtoa@n+7,___aodiv@dividend+7
 23109  003C32  0E0A               	movlw	10
 23110  003C34  6F0C               	movwf	___aodiv@divisor& (0+255),b
 23111  003C36  0E00               	movlw	0
 23112  003C38  6F0D               	movwf	(___aodiv@divisor+1)& (0+255),b
 23113  003C3A  0E00               	movlw	0
 23114  003C3C  6F0E               	movwf	(___aodiv@divisor+2)& (0+255),b
 23115  003C3E  0E00               	movlw	0
 23116  003C40  6F0F               	movwf	(___aodiv@divisor+3)& (0+255),b
 23117  003C42  0E00               	movlw	0
 23118  003C44  6F10               	movwf	(___aodiv@divisor+4)& (0+255),b
 23119  003C46  0E00               	movlw	0
 23120  003C48  6F11               	movwf	(___aodiv@divisor+5)& (0+255),b
 23121  003C4A  0E00               	movlw	0
 23122  003C4C  6F12               	movwf	(___aodiv@divisor+6)& (0+255),b
 23123  003C4E  0E00               	movlw	0
 23124  003C50  6F13               	movwf	(___aodiv@divisor+7)& (0+255),b
 23125  003C52  EC08  F030         	call	___aodiv	;wreg free
 23126  003C56  0060  F410  F13B   	movff	?___aodiv,dtoa@n
 23127  003C5C  0060  F414  F13C   	movff	?___aodiv+1,dtoa@n+1
 23128  003C62  0060  F418  F13D   	movff	?___aodiv+2,dtoa@n+2
 23129  003C68  0060  F41C  F13E   	movff	?___aodiv+3,dtoa@n+3
 23130  003C6E  0060  F420  F13F   	movff	?___aodiv+4,dtoa@n+4
 23131  003C74  0060  F424  F140   	movff	?___aodiv+5,dtoa@n+5
 23132  003C7A  0060  F428  F141   	movff	?___aodiv+6,dtoa@n+6
 23133  003C80  0060  F42C  F142   	movff	?___aodiv+7,dtoa@n+7
 23134  003C86                     l17694:
 23135                           
 23136                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23137  003C86  0101               	movlb	1	; () banked
 23138  003C88  BF44               	btfsc	(dtoa@i+1)& (0+255),7,b
 23139  003C8A  D01F               	goto	u17060
 23140  003C8C  5144               	movf	(dtoa@i+1)& (0+255),w,b
 23141  003C8E  E103               	bnz	u17020
 23142  003C90  0543               	decf	dtoa@i& (0+255),w,b
 23143  003C92  A0D8               	btfss	status,0,c
 23144  003C94  D01A               	goto	u17060
 23145  003C96                     u17020:
 23146                           
 23147                           ; BSR set to: 1
 23148  003C96  513B               	movf	dtoa@n& (0+255),w,b
 23149  003C98  113C               	iorwf	(dtoa@n+1)& (0+255),w,b
 23150  003C9A  113D               	iorwf	(dtoa@n+2)& (0+255),w,b
 23151  003C9C  113E               	iorwf	(dtoa@n+3)& (0+255),w,b
 23152  003C9E  113F               	iorwf	(dtoa@n+4)& (0+255),w,b
 23153  003CA0  1140               	iorwf	(dtoa@n+5)& (0+255),w,b
 23154  003CA2  1141               	iorwf	(dtoa@n+6)& (0+255),w,b
 23155  003CA4  1142               	iorwf	(dtoa@n+7)& (0+255),w,b
 23156  003CA6  A4D8               	btfss	status,2,c
 23157  003CA8  D750               	goto	l17684
 23158                           
 23159                           ; BSR set to: 1
 23160  003CAA  BF36               	btfsc	(dtoa@p+1)& (0+255),7,b
 23161  003CAC  D005               	goto	u17040
 23162  003CAE  5136               	movf	(dtoa@p+1)& (0+255),w,b
 23163  003CB0  E102               	bnz	u17041
 23164  003CB2  0535               	decf	dtoa@p& (0+255),w,b
 23165  003CB4  B0D8               	btfsc	status,0,c
 23166  003CB6                     u17041:
 23167  003CB6  D749               	goto	l17684
 23168  003CB8                     u17040:
 23169                           
 23170                           ; BSR set to: 1
 23171  003CB8  BF38               	btfsc	(dtoa@w+1)& (0+255),7,b
 23172  003CBA  D007               	goto	u17060
 23173  003CBC  5138               	movf	(dtoa@w+1)& (0+255),w,b
 23174  003CBE  E103               	bnz	u17050
 23175  003CC0  0537               	decf	dtoa@w& (0+255),w,b
 23176  003CC2  A0D8               	btfss	status,0,c
 23177  003CC4  D002               	goto	u17060
 23178  003CC6                     u17050:
 23179                           
 23180                           ; BSR set to: 1
 23181  003CC6  B3CB               	btfsc	_flags& (0+255),1,b
 23182  003CC8  D740               	goto	l17684
 23183  003CCA                     u17060:
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 23187  003CCA  5139               	movf	dtoa@s& (0+255),w,b
 23188  003CCC  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23189  003CCE  A4D8               	btfss	status,2,c
 23190  003CD0  D002               	goto	u17080
 23191                           
 23192                           ; BSR set to: 1
 23193  003CD2  A5CB               	btfss	_flags& (0+255),2,b
 23194  003CD4  D018               	goto	l17718
 23195  003CD6                     u17080:
 23196                           
 23197                           ; BSR set to: 1
 23198                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23199  003CD6  0743               	decf	dtoa@i& (0+255),f,b
 23200  003CD8  A0D8               	btfss	status,0,c
 23201  003CDA  0744               	decf	(dtoa@i+1)& (0+255),f,b
 23202                           
 23203                           ; BSR set to: 1
 23204                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 23205  003CDC  5139               	movf	dtoa@s& (0+255),w,b
 23206  003CDE  113A               	iorwf	(dtoa@s+1)& (0+255),w,b
 23207  003CE0  A4D8               	btfss	status,2,c
 23208  003CE2  D004               	goto	l17714
 23209                           
 23210                           ; BSR set to: 1
 23211  003CE4  0E00               	movlw	0
 23212  003CE6  6F34               	movwf	(_dtoa$5181+1)& (0+255),b
 23213  003CE8  0E2B               	movlw	43
 23214  003CEA  D003               	goto	L6
 23215  003CEC                     l17714:
 23216                           
 23217                           ; BSR set to: 1
 23218  003CEC  0E00               	movlw	0
 23219  003CEE  6F34               	movwf	(_dtoa$5181+1)& (0+255),b
 23220  003CF0  0E2D               	movlw	45
 23221  003CF2                     L6:
 23222  003CF2  6F33               	movwf	_dtoa$5181& (0+255),b
 23223                           
 23224                           ; BSR set to: 1
 23225  003CF4  0E89               	movlw	low _dbuf
 23226  003CF6  2543               	addwf	dtoa@i& (0+255),w,b
 23227  003CF8  6ED9               	movwf	fsr2l,c
 23228  003CFA  0E03               	movlw	high _dbuf
 23229  003CFC  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23230  003CFE  6EDA               	movwf	fsr2h,c
 23231  003D00  0060  F4CF  FFDF   	movff	_dtoa$5181,indf2
 23232  003D06                     l17718:
 23233                           
 23234                           ; BSR set to: 1
 23235                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 23236  003D06  0060  F484  F116   	movff	dtoa@fp,pad@fp
 23237  003D0C  0060  F488  F117   	movff	dtoa@fp+1,pad@fp+1
 23238  003D12  0E89               	movlw	low _dbuf
 23239  003D14  2543               	addwf	dtoa@i& (0+255),w,b
 23240  003D16  6F18               	movwf	pad@buf& (0+255),b
 23241  003D18  0E03               	movlw	high _dbuf
 23242  003D1A  2144               	addwfc	(dtoa@i+1)& (0+255),w,b
 23243  003D1C  6F19               	movwf	(pad@buf+1)& (0+255),b
 23244  003D1E  0060  F4DC  F11A   	movff	dtoa@w,pad@p
 23245  003D24  0060  F4E0  F11B   	movff	dtoa@w+1,pad@p+1
 23246  003D2A  EC88  F040         	call	_pad	;wreg free
 23247  003D2E  0060  F458  F121   	movff	?_pad,?_dtoa
 23248  003D34  0060  F45C  F122   	movff	?_pad+1,?_dtoa+1
 23249                           
 23250                           ; BSR set to: 1
 23251  003D3A  0012               	return		;funcret
 23252  003D3C                     __end_of_dtoa:
 23253                           	opt callstack 0
 23254                           
 23255 ;; *************** function _abs *****************
 23256 ;; Defined at:
 23257 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23258 ;; Parameters:    Size  Location     Type
 23259 ;;  a               2   22[BANK1 ] int 
 23260 ;; Auto vars:     Size  Location     Type
 23261 ;;		None
 23262 ;; Return value:  Size  Location     Type
 23263 ;;                  2   22[BANK1 ] int 
 23264 ;; Registers used:
 23265 ;;		wreg, status,2, status,0
 23266 ;; Tracked objects:
 23267 ;;		On entry : 3F/1
 23268 ;;		On exit  : 3F/1
 23269 ;;		Unchanged: 0/0
 23270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23271 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23273 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23274 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23275 ;;Total ram usage:        4 bytes
 23276 ;; Hardware stack levels used:    1
 23277 ;; Hardware stack levels required when called:   16
 23278 ;; This function calls:
 23279 ;;		Nothing
 23280 ;; This function is called by:
 23281 ;;		_dtoa
 23282 ;; This function uses a non-reentrant model
 23283 ;;
 23284                           
 23285                           	psect	text172
 23286  009DA6                     __ptext172:
 23287                           	opt callstack 0
 23288  009DA6                     _abs:
 23289                           	opt callstack 10
 23290                           
 23291                           ; BSR set to: 1
 23292                           
 23293                           ; BSR set to: 1
 23294                           ;incstack = 0
 23295  009DA6  BF17               	btfsc	(abs@a+1)& (0+255),7,b
 23296  009DA8  D005               	goto	u16540
 23297  009DAA  5117               	movf	(abs@a+1)& (0+255),w,b
 23298  009DAC  E114               	bnz	l4282
 23299  009DAE  0516               	decf	abs@a& (0+255),w,b
 23300  009DB0  B0D8               	btfsc	status,0,c
 23301  009DB2  D011               	goto	l4282
 23302  009DB4                     u16540:
 23303                           
 23304                           ; BSR set to: 1
 23305  009DB4  0060  F458  F118   	movff	abs@a,??_abs
 23306  009DBA  0060  F45C  F119   	movff	abs@a+1,??_abs+1
 23307  009DC0  1F18               	comf	??_abs& (0+255),f,b
 23308  009DC2  1F19               	comf	(??_abs+1)& (0+255),f,b
 23309  009DC4  4B18               	infsnz	??_abs& (0+255),f,b
 23310  009DC6  2B19               	incf	(??_abs+1)& (0+255),f,b
 23311  009DC8  0060  F460  F116   	movff	??_abs,?_abs
 23312  009DCE  0060  F464  F117   	movff	??_abs+1,?_abs+1
 23313  009DD4  0012               	return	
 23314  009DD6                     l4282:
 23315                           
 23316                           ; BSR set to: 1
 23317  009DD6  0060  F458  F116   	movff	abs@a,?_abs
 23318  009DDC  0060  F45C  F117   	movff	abs@a+1,?_abs+1
 23319                           
 23320                           ; BSR set to: 1
 23321  009DE2  0012               	return		;funcret
 23322  009DE4                     __end_of_abs:
 23323                           	opt callstack 0
 23324                           
 23325 ;; *************** function ___aomod *****************
 23326 ;; Defined at:
 23327 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23328 ;; Parameters:    Size  Location     Type
 23329 ;;  dividend        8    4[BANK1 ] long long 
 23330 ;;  divisor         8   12[BANK1 ] long long 
 23331 ;; Auto vars:     Size  Location     Type
 23332 ;;  sign            1   21[BANK1 ] unsigned char 
 23333 ;;  counter         1   20[BANK1 ] unsigned char 
 23334 ;; Return value:  Size  Location     Type
 23335 ;;                  8    4[BANK1 ] long long 
 23336 ;; Registers used:
 23337 ;;		wreg, status,2, status,0
 23338 ;; Tracked objects:
 23339 ;;		On entry : 3F/1
 23340 ;;		On exit  : 3F/1
 23341 ;;		Unchanged: 0/0
 23342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23343 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23344 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23346 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23347 ;;Total ram usage:       18 bytes
 23348 ;; Hardware stack levels used:    1
 23349 ;; Hardware stack levels required when called:   16
 23350 ;; This function calls:
 23351 ;;		Nothing
 23352 ;; This function is called by:
 23353 ;;		_dtoa
 23354 ;; This function uses a non-reentrant model
 23355 ;;
 23356                           
 23357                           	psect	text173
 23358  006544                     __ptext173:
 23359                           	opt callstack 0
 23360  006544                     ___aomod:
 23361                           	opt callstack 10
 23362                           
 23363                           ; BSR set to: 1
 23364                           
 23365                           ; BSR set to: 1
 23366                           ;incstack = 0
 23367  006544  0E00               	movlw	0
 23368  006546  6F15               	movwf	___aomod@sign& (0+255),b
 23369                           
 23370                           ; BSR set to: 1
 23371  006548  AF0B               	btfss	(___aomod@dividend+7)& (0+255),7,b
 23372  00654A  D012               	goto	l17478
 23373                           
 23374                           ; BSR set to: 1
 23375  00654C  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23376  00654E  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23377  006550  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23378  006552  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23379  006554  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23380  006556  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23381  006558  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23382  00655A  6D04               	negf	___aomod@dividend& (0+255),b
 23383  00655C  0E00               	movlw	0
 23384  00655E  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23385  006560  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23386  006562  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23387  006564  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23388  006566  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23389  006568  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23390  00656A  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23391                           
 23392                           ; BSR set to: 1
 23393  00656C  0E01               	movlw	1
 23394  00656E  6F15               	movwf	___aomod@sign& (0+255),b
 23395  006570                     l17478:
 23396                           
 23397                           ; BSR set to: 1
 23398  006570  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23399  006572  D010               	goto	l17482
 23400                           
 23401                           ; BSR set to: 1
 23402  006574  1F13               	comf	(___aomod@divisor+7)& (0+255),f,b
 23403  006576  1F12               	comf	(___aomod@divisor+6)& (0+255),f,b
 23404  006578  1F11               	comf	(___aomod@divisor+5)& (0+255),f,b
 23405  00657A  1F10               	comf	(___aomod@divisor+4)& (0+255),f,b
 23406  00657C  1F0F               	comf	(___aomod@divisor+3)& (0+255),f,b
 23407  00657E  1F0E               	comf	(___aomod@divisor+2)& (0+255),f,b
 23408  006580  1F0D               	comf	(___aomod@divisor+1)& (0+255),f,b
 23409  006582  6D0C               	negf	___aomod@divisor& (0+255),b
 23410  006584  0E00               	movlw	0
 23411  006586  230D               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 23412  006588  230E               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 23413  00658A  230F               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 23414  00658C  2310               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 23415  00658E  2311               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 23416  006590  2312               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 23417  006592  2313               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 23418  006594                     l17482:
 23419                           
 23420                           ; BSR set to: 1
 23421  006594  510C               	movf	___aomod@divisor& (0+255),w,b
 23422  006596  110D               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 23423  006598  110E               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 23424  00659A  110F               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 23425  00659C  1110               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 23426  00659E  1111               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 23427  0065A0  1112               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 23428  0065A2  1113               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 23429  0065A4  B4D8               	btfsc	status,2,c
 23430  0065A6  D03C               	goto	l17498
 23431                           
 23432                           ; BSR set to: 1
 23433  0065A8  0E01               	movlw	1
 23434  0065AA  6F14               	movwf	___aomod@counter& (0+255),b
 23435  0065AC  D00A               	goto	l17488
 23436  0065AE                     l17486:
 23437                           
 23438                           ; BSR set to: 1
 23439  0065AE  90D8               	bcf	status,0,c
 23440  0065B0  370C               	rlcf	___aomod@divisor& (0+255),f,b
 23441  0065B2  370D               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 23442  0065B4  370E               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 23443  0065B6  370F               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 23444  0065B8  3710               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 23445  0065BA  3711               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 23446  0065BC  3712               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 23447  0065BE  3713               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 23448  0065C0  2B14               	incf	___aomod@counter& (0+255),f,b
 23449  0065C2                     l17488:
 23450                           
 23451                           ; BSR set to: 1
 23452  0065C2  AF13               	btfss	(___aomod@divisor+7)& (0+255),7,b
 23453  0065C4  D7F4               	goto	l17486
 23454  0065C6                     u16740:
 23455                           
 23456                           ; BSR set to: 1
 23457  0065C6  510C               	movf	___aomod@divisor& (0+255),w,b
 23458  0065C8  5D04               	subwf	___aomod@dividend& (0+255),w,b
 23459  0065CA  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23460  0065CC  5905               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 23461  0065CE  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23462  0065D0  5906               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 23463  0065D2  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23464  0065D4  5907               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 23465  0065D6  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23466  0065D8  5908               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 23467  0065DA  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23468  0065DC  5909               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 23469  0065DE  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23470  0065E0  590A               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 23471  0065E2  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23472  0065E4  590B               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 23473  0065E6  A0D8               	btfss	status,0,c
 23474  0065E8  D010               	goto	l17494
 23475                           
 23476                           ; BSR set to: 1
 23477  0065EA  510C               	movf	___aomod@divisor& (0+255),w,b
 23478  0065EC  5F04               	subwf	___aomod@dividend& (0+255),f,b
 23479  0065EE  510D               	movf	(___aomod@divisor+1)& (0+255),w,b
 23480  0065F0  5B05               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 23481  0065F2  510E               	movf	(___aomod@divisor+2)& (0+255),w,b
 23482  0065F4  5B06               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 23483  0065F6  510F               	movf	(___aomod@divisor+3)& (0+255),w,b
 23484  0065F8  5B07               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 23485  0065FA  5110               	movf	(___aomod@divisor+4)& (0+255),w,b
 23486  0065FC  5B08               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 23487  0065FE  5111               	movf	(___aomod@divisor+5)& (0+255),w,b
 23488  006600  5B09               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 23489  006602  5112               	movf	(___aomod@divisor+6)& (0+255),w,b
 23490  006604  5B0A               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 23491  006606  5113               	movf	(___aomod@divisor+7)& (0+255),w,b
 23492  006608  5B0B               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 23493  00660A                     l17494:
 23494                           
 23495                           ; BSR set to: 1
 23496  00660A  90D8               	bcf	status,0,c
 23497  00660C  3313               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 23498  00660E  3312               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 23499  006610  3311               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 23500  006612  3310               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 23501  006614  330F               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 23502  006616  330E               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 23503  006618  330D               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 23504  00661A  330C               	rrcf	___aomod@divisor& (0+255),f,b
 23505                           
 23506                           ; BSR set to: 1
 23507  00661C  2F14               	decfsz	___aomod@counter& (0+255),f,b
 23508  00661E  D7D3               	goto	u16740
 23509  006620                     l17498:
 23510                           
 23511                           ; BSR set to: 1
 23512  006620  5115               	movf	___aomod@sign& (0+255),w,b
 23513  006622  B4D8               	btfsc	status,2,c
 23514  006624  D010               	goto	l17502
 23515                           
 23516                           ; BSR set to: 1
 23517  006626  1F0B               	comf	(___aomod@dividend+7)& (0+255),f,b
 23518  006628  1F0A               	comf	(___aomod@dividend+6)& (0+255),f,b
 23519  00662A  1F09               	comf	(___aomod@dividend+5)& (0+255),f,b
 23520  00662C  1F08               	comf	(___aomod@dividend+4)& (0+255),f,b
 23521  00662E  1F07               	comf	(___aomod@dividend+3)& (0+255),f,b
 23522  006630  1F06               	comf	(___aomod@dividend+2)& (0+255),f,b
 23523  006632  1F05               	comf	(___aomod@dividend+1)& (0+255),f,b
 23524  006634  6D04               	negf	___aomod@dividend& (0+255),b
 23525  006636  0E00               	movlw	0
 23526  006638  2305               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 23527  00663A  2306               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 23528  00663C  2307               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 23529  00663E  2308               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 23530  006640  2309               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 23531  006642  230A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 23532  006644  230B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 23533  006646                     l17502:
 23534                           
 23535                           ; BSR set to: 1
 23536  006646  0060  F410  F104   	movff	___aomod@dividend,?___aomod
 23537  00664C  0060  F414  F105   	movff	___aomod@dividend+1,?___aomod+1
 23538  006652  0060  F418  F106   	movff	___aomod@dividend+2,?___aomod+2
 23539  006658  0060  F41C  F107   	movff	___aomod@dividend+3,?___aomod+3
 23540  00665E  0060  F420  F108   	movff	___aomod@dividend+4,?___aomod+4
 23541  006664  0060  F424  F109   	movff	___aomod@dividend+5,?___aomod+5
 23542  00666A  0060  F428  F10A   	movff	___aomod@dividend+6,?___aomod+6
 23543  006670  0060  F42C  F10B   	movff	___aomod@dividend+7,?___aomod+7
 23544                           
 23545                           ; BSR set to: 1
 23546  006676  0012               	return		;funcret
 23547  006678                     __end_of___aomod:
 23548                           	opt callstack 0
 23549                           
 23550 ;; *************** function ___aodiv *****************
 23551 ;; Defined at:
 23552 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;  dividend        8    4[BANK1 ] long long 
 23555 ;;  divisor         8   12[BANK1 ] long long 
 23556 ;; Auto vars:     Size  Location     Type
 23557 ;;  quotient        8   22[BANK1 ] long long 
 23558 ;;  sign            1   21[BANK1 ] unsigned char 
 23559 ;;  counter         1   20[BANK1 ] unsigned char 
 23560 ;; Return value:  Size  Location     Type
 23561 ;;                  8    4[BANK1 ] long long 
 23562 ;; Registers used:
 23563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23564 ;; Tracked objects:
 23565 ;;		On entry : 3F/1
 23566 ;;		On exit  : 3F/1
 23567 ;;		Unchanged: 0/0
 23568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23569 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23570 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23572 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23573 ;;Total ram usage:       26 bytes
 23574 ;; Hardware stack levels used:    1
 23575 ;; Hardware stack levels required when called:   16
 23576 ;; This function calls:
 23577 ;;		Nothing
 23578 ;; This function is called by:
 23579 ;;		_dtoa
 23580 ;; This function uses a non-reentrant model
 23581 ;;
 23582                           
 23583                           	psect	text174
 23584  006010                     __ptext174:
 23585                           	opt callstack 0
 23586  006010                     ___aodiv:
 23587                           	opt callstack 10
 23588                           
 23589                           ; BSR set to: 1
 23590                           
 23591                           ; BSR set to: 1
 23592                           ;incstack = 0
 23593  006010  0E00               	movlw	0
 23594  006012  6F15               	movwf	___aodiv@sign& (0+255),b
 23595                           
 23596                           ; BSR set to: 1
 23597  006014  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23598  006016  D012               	goto	l17434
 23599                           
 23600                           ; BSR set to: 1
 23601  006018  1F13               	comf	(___aodiv@divisor+7)& (0+255),f,b
 23602  00601A  1F12               	comf	(___aodiv@divisor+6)& (0+255),f,b
 23603  00601C  1F11               	comf	(___aodiv@divisor+5)& (0+255),f,b
 23604  00601E  1F10               	comf	(___aodiv@divisor+4)& (0+255),f,b
 23605  006020  1F0F               	comf	(___aodiv@divisor+3)& (0+255),f,b
 23606  006022  1F0E               	comf	(___aodiv@divisor+2)& (0+255),f,b
 23607  006024  1F0D               	comf	(___aodiv@divisor+1)& (0+255),f,b
 23608  006026  6D0C               	negf	___aodiv@divisor& (0+255),b
 23609  006028  0E00               	movlw	0
 23610  00602A  230D               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 23611  00602C  230E               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 23612  00602E  230F               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 23613  006030  2310               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 23614  006032  2311               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 23615  006034  2312               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 23616  006036  2313               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 23617                           
 23618                           ; BSR set to: 1
 23619  006038  0E01               	movlw	1
 23620  00603A  6F15               	movwf	___aodiv@sign& (0+255),b
 23621  00603C                     l17434:
 23622                           
 23623                           ; BSR set to: 1
 23624  00603C  AF0B               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 23625  00603E  D012               	goto	l17440
 23626                           
 23627                           ; BSR set to: 1
 23628  006040  1F0B               	comf	(___aodiv@dividend+7)& (0+255),f,b
 23629  006042  1F0A               	comf	(___aodiv@dividend+6)& (0+255),f,b
 23630  006044  1F09               	comf	(___aodiv@dividend+5)& (0+255),f,b
 23631  006046  1F08               	comf	(___aodiv@dividend+4)& (0+255),f,b
 23632  006048  1F07               	comf	(___aodiv@dividend+3)& (0+255),f,b
 23633  00604A  1F06               	comf	(___aodiv@dividend+2)& (0+255),f,b
 23634  00604C  1F05               	comf	(___aodiv@dividend+1)& (0+255),f,b
 23635  00604E  6D04               	negf	___aodiv@dividend& (0+255),b
 23636  006050  0E00               	movlw	0
 23637  006052  2305               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 23638  006054  2306               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 23639  006056  2307               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 23640  006058  2308               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 23641  00605A  2309               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 23642  00605C  230A               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 23643  00605E  230B               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 23644                           
 23645                           ; BSR set to: 1
 23646  006060  0E01               	movlw	1
 23647  006062  1B15               	xorwf	___aodiv@sign& (0+255),f,b
 23648  006064                     l17440:
 23649                           
 23650                           ; BSR set to: 1
 23651  006064  EE20  F116         	lfsr	2,___aodiv@quotient
 23652  006068  0E07               	movlw	7
 23653  00606A                     u16661:
 23654  00606A  6ADE               	clrf	postinc2,c
 23655  00606C  06E8               	decf	wreg,f,c
 23656  00606E  E2FD               	bc	u16661
 23657                           
 23658                           ; BSR set to: 1
 23659  006070  510C               	movf	___aodiv@divisor& (0+255),w,b
 23660  006072  110D               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 23661  006074  110E               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 23662  006076  110F               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 23663  006078  1110               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 23664  00607A  1111               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 23665  00607C  1112               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 23666  00607E  1113               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 23667  006080  B4D8               	btfsc	status,2,c
 23668  006082  D046               	goto	l17462
 23669                           
 23670                           ; BSR set to: 1
 23671  006084  0E01               	movlw	1
 23672  006086  6F14               	movwf	___aodiv@counter& (0+255),b
 23673  006088  D00A               	goto	l17448
 23674  00608A                     l17446:
 23675                           
 23676                           ; BSR set to: 1
 23677  00608A  90D8               	bcf	status,0,c
 23678  00608C  370C               	rlcf	___aodiv@divisor& (0+255),f,b
 23679  00608E  370D               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 23680  006090  370E               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 23681  006092  370F               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 23682  006094  3710               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 23683  006096  3711               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 23684  006098  3712               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 23685  00609A  3713               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 23686  00609C  2B14               	incf	___aodiv@counter& (0+255),f,b
 23687  00609E                     l17448:
 23688                           
 23689                           ; BSR set to: 1
 23690  00609E  AF13               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 23691  0060A0  D7F4               	goto	l17446
 23692  0060A2                     u16680:
 23693                           
 23694                           ; BSR set to: 1
 23695  0060A2  90D8               	bcf	status,0,c
 23696  0060A4  3716               	rlcf	___aodiv@quotient& (0+255),f,b
 23697  0060A6  3717               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 23698  0060A8  3718               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 23699  0060AA  3719               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 23700  0060AC  371A               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 23701  0060AE  371B               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 23702  0060B0  371C               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 23703  0060B2  371D               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 23704                           
 23705                           ; BSR set to: 1
 23706  0060B4  510C               	movf	___aodiv@divisor& (0+255),w,b
 23707  0060B6  5D04               	subwf	___aodiv@dividend& (0+255),w,b
 23708  0060B8  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23709  0060BA  5905               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 23710  0060BC  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23711  0060BE  5906               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 23712  0060C0  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23713  0060C2  5907               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 23714  0060C4  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23715  0060C6  5908               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 23716  0060C8  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23717  0060CA  5909               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 23718  0060CC  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23719  0060CE  590A               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 23720  0060D0  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23721  0060D2  590B               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 23722  0060D4  A0D8               	btfss	status,0,c
 23723  0060D6  D011               	goto	l17458
 23724                           
 23725                           ; BSR set to: 1
 23726  0060D8  510C               	movf	___aodiv@divisor& (0+255),w,b
 23727  0060DA  5F04               	subwf	___aodiv@dividend& (0+255),f,b
 23728  0060DC  510D               	movf	(___aodiv@divisor+1)& (0+255),w,b
 23729  0060DE  5B05               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 23730  0060E0  510E               	movf	(___aodiv@divisor+2)& (0+255),w,b
 23731  0060E2  5B06               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 23732  0060E4  510F               	movf	(___aodiv@divisor+3)& (0+255),w,b
 23733  0060E6  5B07               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 23734  0060E8  5110               	movf	(___aodiv@divisor+4)& (0+255),w,b
 23735  0060EA  5B08               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 23736  0060EC  5111               	movf	(___aodiv@divisor+5)& (0+255),w,b
 23737  0060EE  5B09               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 23738  0060F0  5112               	movf	(___aodiv@divisor+6)& (0+255),w,b
 23739  0060F2  5B0A               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 23740  0060F4  5113               	movf	(___aodiv@divisor+7)& (0+255),w,b
 23741  0060F6  5B0B               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 23742                           
 23743                           ; BSR set to: 1
 23744  0060F8  8116               	bsf	___aodiv@quotient& (0+255),0,b
 23745  0060FA                     l17458:
 23746                           
 23747                           ; BSR set to: 1
 23748  0060FA  90D8               	bcf	status,0,c
 23749  0060FC  3313               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 23750  0060FE  3312               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 23751  006100  3311               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 23752  006102  3310               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 23753  006104  330F               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 23754  006106  330E               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 23755  006108  330D               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 23756  00610A  330C               	rrcf	___aodiv@divisor& (0+255),f,b
 23757                           
 23758                           ; BSR set to: 1
 23759  00610C  2F14               	decfsz	___aodiv@counter& (0+255),f,b
 23760  00610E  D7C9               	goto	u16680
 23761  006110                     l17462:
 23762                           
 23763                           ; BSR set to: 1
 23764  006110  5115               	movf	___aodiv@sign& (0+255),w,b
 23765  006112  B4D8               	btfsc	status,2,c
 23766  006114  D010               	goto	l17466
 23767                           
 23768                           ; BSR set to: 1
 23769  006116  1F1D               	comf	(___aodiv@quotient+7)& (0+255),f,b
 23770  006118  1F1C               	comf	(___aodiv@quotient+6)& (0+255),f,b
 23771  00611A  1F1B               	comf	(___aodiv@quotient+5)& (0+255),f,b
 23772  00611C  1F1A               	comf	(___aodiv@quotient+4)& (0+255),f,b
 23773  00611E  1F19               	comf	(___aodiv@quotient+3)& (0+255),f,b
 23774  006120  1F18               	comf	(___aodiv@quotient+2)& (0+255),f,b
 23775  006122  1F17               	comf	(___aodiv@quotient+1)& (0+255),f,b
 23776  006124  6D16               	negf	___aodiv@quotient& (0+255),b
 23777  006126  0E00               	movlw	0
 23778  006128  2317               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 23779  00612A  2318               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 23780  00612C  2319               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 23781  00612E  231A               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 23782  006130  231B               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 23783  006132  231C               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 23784  006134  231D               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 23785  006136                     l17466:
 23786                           
 23787                           ; BSR set to: 1
 23788  006136  0060  F458  F104   	movff	___aodiv@quotient,?___aodiv
 23789  00613C  0060  F45C  F105   	movff	___aodiv@quotient+1,?___aodiv+1
 23790  006142  0060  F460  F106   	movff	___aodiv@quotient+2,?___aodiv+2
 23791  006148  0060  F464  F107   	movff	___aodiv@quotient+3,?___aodiv+3
 23792  00614E  0060  F468  F108   	movff	___aodiv@quotient+4,?___aodiv+4
 23793  006154  0060  F46C  F109   	movff	___aodiv@quotient+5,?___aodiv+5
 23794  00615A  0060  F470  F10A   	movff	___aodiv@quotient+6,?___aodiv+6
 23795  006160  0060  F474  F10B   	movff	___aodiv@quotient+7,?___aodiv+7
 23796                           
 23797                           ; BSR set to: 1
 23798  006166  0012               	return		;funcret
 23799  006168                     __end_of___aodiv:
 23800                           	opt callstack 0
 23801                           
 23802 ;; *************** function _ctoa *****************
 23803 ;; Defined at:
 23804 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;  fp              2   33[BANK1 ] PTR struct _IO_FILE
 23807 ;;		 -> sprintf@f(6), NULL(0), 
 23808 ;;  c               1   35[BANK1 ] unsigned char 
 23809 ;; Auto vars:     Size  Location     Type
 23810 ;;  w               2   36[BANK1 ] int 
 23811 ;;  l               2    0        int 
 23812 ;; Return value:  Size  Location     Type
 23813 ;;                  2   33[BANK1 ] int 
 23814 ;; Registers used:
 23815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23816 ;; Tracked objects:
 23817 ;;		On entry : 3F/1
 23818 ;;		On exit  : 3F/1
 23819 ;;		Unchanged: 0/0
 23820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23821 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23822 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23824 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23825 ;;Total ram usage:        5 bytes
 23826 ;; Hardware stack levels used:    1
 23827 ;; Hardware stack levels required when called:   21
 23828 ;; This function calls:
 23829 ;;		_pad
 23830 ;; This function is called by:
 23831 ;;		_vfpfcnvrt
 23832 ;; This function uses a non-reentrant model
 23833 ;;
 23834                           
 23835                           	psect	text175
 23836  00945A                     __ptext175:
 23837                           	opt callstack 0
 23838  00945A                     _ctoa:
 23839                           	opt callstack 6
 23840                           
 23841                           ; BSR set to: 1
 23842                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 23843                           
 23844                           ; BSR set to: 1
 23845                           ;incstack = 0
 23846  00945A  51C7               	movf	_width& (0+255),w,b
 23847  00945C  11C8               	iorwf	(_width+1)& (0+255),w,b
 23848  00945E  A4D8               	btfss	status,2,c
 23849  009460  D007               	goto	l17650
 23850                           
 23851                           ; BSR set to: 1
 23852  009462  0060  F71C  F124   	movff	_width,ctoa@w
 23853  009468  0060  F720  F125   	movff	_width+1,ctoa@w+1
 23854  00946E  D006               	goto	l17652
 23855  009470                     l17650:
 23856                           
 23857                           ; BSR set to: 1
 23858  009470  0EFF               	movlw	255
 23859  009472  25C7               	addwf	_width& (0+255),w,b
 23860  009474  6F24               	movwf	ctoa@w& (0+255),b
 23861  009476  0EFF               	movlw	255
 23862  009478  21C8               	addwfc	(_width+1)& (0+255),w,b
 23863  00947A  6F25               	movwf	(ctoa@w+1)& (0+255),b
 23864  00947C                     l17652:
 23865                           
 23866                           ; BSR set to: 1
 23867                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 23868  00947C  0060  F48C  F389   	movff	ctoa@c,_dbuf
 23869                           
 23870                           ; BSR set to: 1
 23871                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 23872  009482  0E00               	movlw	0
 23873  009484  0103               	movlb	3	; () banked
 23874  009486  6F8A               	movwf	(_dbuf+1)& (0+255),b
 23875                           
 23876                           ; BSR set to: 3
 23877                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 23878  009488  0060  F484  F116   	movff	ctoa@fp,pad@fp
 23879  00948E  0060  F488  F117   	movff	ctoa@fp+1,pad@fp+1
 23880  009494  0E89               	movlw	low _dbuf
 23881  009496  0101               	movlb	1	; () banked
 23882  009498  6F18               	movwf	pad@buf& (0+255),b
 23883  00949A  0E03               	movlw	high _dbuf
 23884  00949C  6F19               	movwf	(pad@buf+1)& (0+255),b
 23885  00949E  0060  F490  F11A   	movff	ctoa@w,pad@p
 23886  0094A4  0060  F494  F11B   	movff	ctoa@w+1,pad@p+1
 23887  0094AA  EC88  F040         	call	_pad	;wreg free
 23888  0094AE  0060  F458  F121   	movff	?_pad,?_ctoa
 23889  0094B4  0060  F45C  F122   	movff	?_pad+1,?_ctoa+1
 23890                           
 23891                           ; BSR set to: 1
 23892  0094BA  0012               	return		;funcret
 23893  0094BC                     __end_of_ctoa:
 23894                           	opt callstack 0
 23895                           
 23896 ;; *************** function _pad *****************
 23897 ;; Defined at:
 23898 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  fp              2   22[BANK1 ] PTR struct _IO_FILE
 23901 ;;		 -> sprintf@f(6), NULL(0), 
 23902 ;;  buf             2   24[BANK1 ] PTR unsigned char 
 23903 ;;		 -> dbuf(32), 
 23904 ;;  p               2   26[BANK1 ] int 
 23905 ;; Auto vars:     Size  Location     Type
 23906 ;;  w               2   31[BANK1 ] int 
 23907 ;;  i               2   29[BANK1 ] int 
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  2   22[BANK1 ] int 
 23910 ;; Registers used:
 23911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23912 ;; Tracked objects:
 23913 ;;		On entry : 3F/1
 23914 ;;		On exit  : 3F/1
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23917 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23918 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23919 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23920 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23921 ;;Total ram usage:       11 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:   20
 23924 ;; This function calls:
 23925 ;;		_fputc
 23926 ;;		_fputs
 23927 ;;		_strlen
 23928 ;; This function is called by:
 23929 ;;		_ctoa
 23930 ;;		_dtoa
 23931 ;;		_xtoa
 23932 ;; This function uses a non-reentrant model
 23933 ;;
 23934                           
 23935                           	psect	text176
 23936  008110                     __ptext176:
 23937                           	opt callstack 0
 23938  008110                     _pad:
 23939                           	opt callstack 6
 23940                           
 23941                           ; BSR set to: 1
 23942                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 23943                           
 23944                           ; BSR set to: 1
 23945                           ;incstack = 0
 23946  008110  A1CB               	btfss	_flags& (0+255),0,b
 23947  008112  D00E               	goto	l17376
 23948                           
 23949                           ; BSR set to: 1
 23950                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 23951  008114  0060  F460  F10F   	movff	pad@buf,fputs@s
 23952  00811A  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 23953  008120  0060  F458  F111   	movff	pad@fp,fputs@fp
 23954  008126  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 23955  00812C  ECF2  F04E         	call	_fputs	;wreg free
 23956  008130                     l17376:
 23957                           
 23958                           ; BSR set to: 1
 23959                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 23960  008130  BF1B               	btfsc	(pad@p+1)& (0+255),7,b
 23961  008132  D007               	goto	l17380
 23962                           
 23963                           ; BSR set to: 1
 23964  008134  0060  F468  F11F   	movff	pad@p,pad@w
 23965  00813A  0060  F46C  F120   	movff	pad@p+1,pad@w+1
 23966  008140  D004               	goto	l3472
 23967  008142                     l17380:
 23968                           
 23969                           ; BSR set to: 1
 23970  008142  0E00               	movlw	0
 23971  008144  6F20               	movwf	(pad@w+1)& (0+255),b
 23972  008146  0E00               	movlw	0
 23973  008148  6F1F               	movwf	pad@w& (0+255),b
 23974  00814A                     l3472:
 23975                           
 23976                           ; BSR set to: 1
 23977                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23978  00814A  0E00               	movlw	0
 23979  00814C  6F1E               	movwf	(pad@i+1)& (0+255),b
 23980  00814E  0E00               	movlw	0
 23981  008150  6F1D               	movwf	pad@i& (0+255),b
 23982                           
 23983                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 23984  008152  D00E               	goto	l17386
 23985  008154                     l17382:
 23986                           
 23987                           ; BSR set to: 1
 23988                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 23989  008154  0E00               	movlw	0
 23990  008156  6F07               	movwf	(fputc@c+1)& (0+255),b
 23991  008158  0E20               	movlw	32
 23992  00815A  6F06               	movwf	fputc@c& (0+255),b
 23993  00815C  0060  F458  F108   	movff	pad@fp,fputc@fp
 23994  008162  0060  F45C  F109   	movff	pad@fp+1,fputc@fp+1
 23995  008168  EC1F  F03F         	call	_fputc	;wreg free
 23996                           
 23997                           ; BSR set to: 1
 23998                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23999  00816C  4B1D               	infsnz	pad@i& (0+255),f,b
 24000  00816E  2B1E               	incf	(pad@i+1)& (0+255),f,b
 24001  008170                     l17386:
 24002                           
 24003                           ; BSR set to: 1
 24004                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 24005  008170  511F               	movf	pad@w& (0+255),w,b
 24006  008172  5D1D               	subwf	pad@i& (0+255),w,b
 24007  008174  511E               	movf	(pad@i+1)& (0+255),w,b
 24008  008176  0A80               	xorlw	128
 24009  008178  6F1C               	movwf	??_pad& (0+255),b
 24010  00817A  5120               	movf	(pad@w+1)& (0+255),w,b
 24011  00817C  0A80               	xorlw	128
 24012  00817E  591C               	subwfb	??_pad& (0+255),w,b
 24013  008180  A0D8               	btfss	status,0,c
 24014  008182  D7E8               	goto	l17382
 24015                           
 24016                           ; BSR set to: 1
 24017                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 24018  008184  B1CB               	btfsc	_flags& (0+255),0,b
 24019  008186  D00E               	goto	l17390
 24020                           
 24021                           ; BSR set to: 1
 24022                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 24023  008188  0060  F460  F10F   	movff	pad@buf,fputs@s
 24024  00818E  0060  F464  F110   	movff	pad@buf+1,fputs@s+1
 24025  008194  0060  F458  F111   	movff	pad@fp,fputs@fp
 24026  00819A  0060  F45C  F112   	movff	pad@fp+1,fputs@fp+1
 24027  0081A0  ECF2  F04E         	call	_fputs	;wreg free
 24028  0081A4                     l17390:
 24029                           
 24030                           ; BSR set to: 1
 24031                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 24032  0081A4  0060  F460  F104   	movff	pad@buf,strlen@s
 24033  0081AA  0060  F464  F105   	movff	pad@buf+1,strlen@s+1
 24034  0081B0  ECC5  F04B         	call	_strlen	;wreg free
 24035  0081B4  511F               	movf	pad@w& (0+255),w,b
 24036  0081B6  2504               	addwf	?_strlen& (0+255),w,b
 24037  0081B8  6F16               	movwf	?_pad& (0+255),b
 24038  0081BA  5120               	movf	(pad@w+1)& (0+255),w,b
 24039  0081BC  2105               	addwfc	(?_strlen+1)& (0+255),w,b
 24040  0081BE  6F17               	movwf	(?_pad+1)& (0+255),b
 24041                           
 24042                           ; BSR set to: 1
 24043  0081C0  0012               	return		;funcret
 24044  0081C2                     __end_of_pad:
 24045                           	opt callstack 0
 24046                           
 24047 ;; *************** function _strlen *****************
 24048 ;; Defined at:
 24049 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 24050 ;; Parameters:    Size  Location     Type
 24051 ;;  s               2    4[BANK1 ] PTR const unsigned char 
 24052 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 24053 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 24054 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 24055 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 24056 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 24057 ;; Auto vars:     Size  Location     Type
 24058 ;;  a               2    6[BANK1 ] PTR const unsigned char 
 24059 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 24060 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 24061 ;;		 -> STR_27(3), STR_26(3), alarmData(399), msg3(20), 
 24062 ;;		 -> STR_11(3), msg2(20), msg1(20), msg4(20), 
 24063 ;;		 -> LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), STR_5(17), 
 24064 ;; Return value:  Size  Location     Type
 24065 ;;                  2    4[BANK1 ] unsigned int 
 24066 ;; Registers used:
 24067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 24068 ;; Tracked objects:
 24069 ;;		On entry : 3F/1
 24070 ;;		On exit  : 3F/1
 24071 ;;		Unchanged: 0/0
 24072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24073 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24074 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24076 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24077 ;;Total ram usage:        4 bytes
 24078 ;; Hardware stack levels used:    1
 24079 ;; Hardware stack levels required when called:   16
 24080 ;; This function calls:
 24081 ;;		Nothing
 24082 ;; This function is called by:
 24083 ;;		_LCDMessage
 24084 ;;		_pad
 24085 ;;		_stoa
 24086 ;; This function uses a non-reentrant model
 24087 ;;
 24088                           
 24089                           	psect	text177
 24090  00978A                     __ptext177:
 24091                           	opt callstack 0
 24092  00978A                     _strlen:
 24093                           	opt callstack 9
 24094                           
 24095                           ; BSR set to: 1
 24096                           
 24097                           ; BSR set to: 1
 24098                           ;incstack = 0
 24099  00978A  0060  F410  F106   	movff	strlen@s,strlen@a
 24100  009790  0060  F414  F107   	movff	strlen@s+1,strlen@a+1
 24101  009796  D003               	goto	l17126
 24102  009798                     l17124:
 24103  009798  0101               	movlb	1	; () banked
 24104  00979A  4B04               	infsnz	strlen@s& (0+255),f,b
 24105  00979C  2B05               	incf	(strlen@s+1)& (0+255),f,b
 24106  00979E                     l17126:
 24107                           
 24108                           ; BSR set to: 1
 24109  00979E  0060  F413  FFF6   	movff	strlen@s,tblptrl
 24110  0097A4  0060  F417  FFF7   	movff	strlen@s+1,tblptrh
 24111  0097AA  0E00               	movlw	low (__mediumconst shr (0+16))
 24112  0097AC  6EF8               	movwf	tblptru,c
 24113  0097AE  0E0F               	movlw	(high __ramtop+-1)
 24114  0097B0  64F7               	cpfsgt	tblptrh,c
 24115  0097B2  D003               	bra	u15957
 24116  0097B4  0008               	tblrd		*
 24117  0097B6  50F5               	movf	tablat,w,c
 24118  0097B8  D007               	bra	u15950
 24119  0097BA                     u15957:
 24120  0097BA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 24121  0097C0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 24122  0097C6  50E7               	movf	indf1,w,c
 24123  0097C8                     u15950:
 24124  0097C8  0900               	iorlw	0
 24125  0097CA  A4D8               	btfss	status,2,c
 24126  0097CC  D7E5               	goto	l17124
 24127  0097CE  0101               	movlb	1	; () banked
 24128  0097D0  5106               	movf	strlen@a& (0+255),w,b
 24129  0097D2  5D04               	subwf	strlen@s& (0+255),w,b
 24130  0097D4  6F04               	movwf	?_strlen& (0+255),b
 24131  0097D6  5107               	movf	(strlen@a+1)& (0+255),w,b
 24132  0097D8  5905               	subwfb	(strlen@s+1)& (0+255),w,b
 24133  0097DA  6F05               	movwf	(?_strlen+1)& (0+255),b
 24134                           
 24135                           ; BSR set to: 1
 24136  0097DC  0012               	return		;funcret
 24137  0097DE                     __end_of_strlen:
 24138                           	opt callstack 0
 24139                           
 24140 ;; *************** function _fputs *****************
 24141 ;; Defined at:
 24142 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 24143 ;; Parameters:    Size  Location     Type
 24144 ;;  s               2   15[BANK1 ] PTR const unsigned char 
 24145 ;;		 -> dbuf(32), 
 24146 ;;  fp              2   17[BANK1 ] PTR struct _IO_FILE
 24147 ;;		 -> sprintf@f(6), NULL(0), 
 24148 ;; Auto vars:     Size  Location     Type
 24149 ;;  i               2   20[BANK1 ] int 
 24150 ;;  c               1   19[BANK1 ] unsigned char 
 24151 ;; Return value:  Size  Location     Type
 24152 ;;                  2   15[BANK1 ] int 
 24153 ;; Registers used:
 24154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24155 ;; Tracked objects:
 24156 ;;		On entry : 3F/1
 24157 ;;		On exit  : 3F/1
 24158 ;;		Unchanged: 0/0
 24159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24160 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24161 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24163 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24164 ;;Total ram usage:        7 bytes
 24165 ;; Hardware stack levels used:    1
 24166 ;; Hardware stack levels required when called:   19
 24167 ;; This function calls:
 24168 ;;		_fputc
 24169 ;; This function is called by:
 24170 ;;		_pad
 24171 ;; This function uses a non-reentrant model
 24172 ;;
 24173                           
 24174                           	psect	text178
 24175  009DE4                     __ptext178:
 24176                           	opt callstack 0
 24177  009DE4                     _fputs:
 24178                           	opt callstack 6
 24179                           
 24180                           ; BSR set to: 1
 24181                           
 24182                           ; BSR set to: 1
 24183                           ;incstack = 0
 24184  009DE4  0E00               	movlw	0
 24185  009DE6  6F15               	movwf	(fputs@i+1)& (0+255),b
 24186  009DE8  0E00               	movlw	0
 24187  009DEA  6F14               	movwf	fputs@i& (0+255),b
 24188  009DEC  D00E               	goto	l17138
 24189  009DEE                     l17134:
 24190                           
 24191                           ; BSR set to: 1
 24192  009DEE  0060  F44C  F106   	movff	fputs@c,fputc@c
 24193  009DF4  6B07               	clrf	(fputc@c+1)& (0+255),b
 24194  009DF6  0060  F444  F108   	movff	fputs@fp,fputc@fp
 24195  009DFC  0060  F448  F109   	movff	fputs@fp+1,fputc@fp+1
 24196  009E02  EC1F  F03F         	call	_fputc	;wreg free
 24197                           
 24198                           ; BSR set to: 1
 24199  009E06  4B14               	infsnz	fputs@i& (0+255),f,b
 24200  009E08  2B15               	incf	(fputs@i+1)& (0+255),f,b
 24201  009E0A                     l17138:
 24202                           
 24203                           ; BSR set to: 1
 24204  009E0A  5114               	movf	fputs@i& (0+255),w,b
 24205  009E0C  250F               	addwf	fputs@s& (0+255),w,b
 24206  009E0E  6ED9               	movwf	fsr2l,c
 24207  009E10  5115               	movf	(fputs@i+1)& (0+255),w,b
 24208  009E12  2110               	addwfc	(fputs@s+1)& (0+255),w,b
 24209  009E14  6EDA               	movwf	fsr2h,c
 24210  009E16  50DF               	movf	indf2,w,c
 24211  009E18  6F13               	movwf	fputs@c& (0+255),b
 24212  009E1A  5113               	movf	fputs@c& (0+255),w,b
 24213  009E1C  B4D8               	btfsc	status,2,c
 24214  009E1E  0012               	return	
 24215  009E20  D7E6               	goto	l17134
 24216  009E22                     __end_of_fputs:
 24217                           	opt callstack 0
 24218                           
 24219 ;; *************** function _fputc *****************
 24220 ;; Defined at:
 24221 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 24222 ;; Parameters:    Size  Location     Type
 24223 ;;  c               2    6[BANK1 ] int 
 24224 ;;  fp              2    8[BANK1 ] PTR struct _IO_FILE
 24225 ;;		 -> sprintf@f(6), NULL(0), 
 24226 ;; Auto vars:     Size  Location     Type
 24227 ;;		None
 24228 ;; Return value:  Size  Location     Type
 24229 ;;                  2    6[BANK1 ] int 
 24230 ;; Registers used:
 24231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24232 ;; Tracked objects:
 24233 ;;		On entry : 3F/1
 24234 ;;		On exit  : 3F/1
 24235 ;;		Unchanged: 0/0
 24236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24237 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24239 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24240 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24241 ;;Total ram usage:        9 bytes
 24242 ;; Hardware stack levels used:    1
 24243 ;; Hardware stack levels required when called:   18
 24244 ;; This function calls:
 24245 ;;		_putch
 24246 ;; This function is called by:
 24247 ;;		_pad
 24248 ;;		_stoa
 24249 ;;		_vfpfcnvrt
 24250 ;;		_fputs
 24251 ;;		_putchar
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text179
 24256  007E3E                     __ptext179:
 24257                           	opt callstack 0
 24258  007E3E                     _fputc:
 24259                           	opt callstack 6
 24260                           
 24261                           ; BSR set to: 1
 24262                           
 24263                           ; BSR set to: 1
 24264                           ;incstack = 0
 24265  007E3E  5108               	movf	fputc@fp& (0+255),w,b
 24266  007E40  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24267  007E42  B4D8               	btfsc	status,2,c
 24268  007E44  D004               	goto	u15630
 24269                           
 24270                           ; BSR set to: 1
 24271  007E46  5108               	movf	fputc@fp& (0+255),w,b
 24272  007E48  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 24273  007E4A  A4D8               	btfss	status,2,c
 24274  007E4C  D004               	goto	l16966
 24275  007E4E                     u15630:
 24276                           
 24277                           ; BSR set to: 1
 24278  007E4E  5106               	movf	fputc@c& (0+255),w,b
 24279  007E50  ECB6  F056         	call	_putch
 24280  007E54  D04A               	goto	l16972
 24281  007E56                     l16966:
 24282                           
 24283                           ; BSR set to: 1
 24284  007E56  EE20 F004          	lfsr	2,4
 24285  007E5A  5108               	movf	fputc@fp& (0+255),w,b
 24286  007E5C  26D9               	addwf	fsr2l,f,c
 24287  007E5E  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24288  007E60  22DA               	addwfc	fsr2h,f,c
 24289  007E62  50DE               	movf	postinc2,w,c
 24290  007E64  10DE               	iorwf	postinc2,w,c
 24291  007E66  B4D8               	btfsc	status,2,c
 24292  007E68  D016               	goto	u15650
 24293                           
 24294                           ; BSR set to: 1
 24295  007E6A  EE20 F004          	lfsr	2,4
 24296  007E6E  5108               	movf	fputc@fp& (0+255),w,b
 24297  007E70  26D9               	addwf	fsr2l,f,c
 24298  007E72  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24299  007E74  22DA               	addwfc	fsr2h,f,c
 24300  007E76  EE10 F002          	lfsr	1,2
 24301  007E7A  5108               	movf	fputc@fp& (0+255),w,b
 24302  007E7C  26E1               	addwf	fsr1l,f,c
 24303  007E7E  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24304  007E80  22E2               	addwfc	fsr1h,f,c
 24305  007E82  50DE               	movf	postinc2,w,c
 24306  007E84  5CE6               	subwf	postinc1,w,c
 24307  007E86  50E6               	movf	postinc1,w,c
 24308  007E88  0A80               	xorlw	128
 24309  007E8A  6F0E               	movwf	(??_fputc+4)& (0+255),b
 24310  007E8C  50DE               	movf	postinc2,w,c
 24311  007E8E  0A80               	xorlw	128
 24312  007E90  590E               	subwfb	(??_fputc+4)& (0+255),w,b
 24313  007E92  B0D8               	btfsc	status,0,c
 24314  007E94  D02A               	goto	l16972
 24315  007E96                     u15650:
 24316                           
 24317                           ; BSR set to: 1
 24318  007E96  EE20 F002          	lfsr	2,2
 24319  007E9A  5108               	movf	fputc@fp& (0+255),w,b
 24320  007E9C  26D9               	addwf	fsr2l,f,c
 24321  007E9E  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24322  007EA0  22DA               	addwfc	fsr2h,f,c
 24323  007EA2  006F FF78  F10A    	movff	postinc2,??_fputc
 24324  007EA8  006F FF74  F10B    	movff	postdec2,??_fputc+1
 24325  007EAE  0060  F423  FFD9   	movff	fputc@fp,fsr2l
 24326  007EB4  0060  F427  FFDA   	movff	fputc@fp+1,fsr2h
 24327  007EBA  006F FF78  F10C    	movff	postinc2,??_fputc+2
 24328  007EC0  006F FF74  F10D    	movff	postdec2,??_fputc+3
 24329  007EC6  510A               	movf	??_fputc& (0+255),w,b
 24330  007EC8  250C               	addwf	(??_fputc+2)& (0+255),w,b
 24331  007ECA  6ED9               	movwf	fsr2l,c
 24332  007ECC  510B               	movf	(??_fputc+1)& (0+255),w,b
 24333  007ECE  210D               	addwfc	(??_fputc+3)& (0+255),w,b
 24334  007ED0  6EDA               	movwf	fsr2h,c
 24335  007ED2  0060  F41B  FFDF   	movff	fputc@c,indf2
 24336  007ED8  EE20 F002          	lfsr	2,2
 24337  007EDC  5108               	movf	fputc@fp& (0+255),w,b
 24338  007EDE  26D9               	addwf	fsr2l,f,c
 24339  007EE0  5109               	movf	(fputc@fp+1)& (0+255),w,b
 24340  007EE2  22DA               	addwfc	fsr2h,f,c
 24341  007EE4  2ADE               	incf	postinc2,f,c
 24342  007EE6  0E00               	movlw	0
 24343  007EE8  22DD               	addwfc	postdec2,f,c
 24344  007EEA                     l16972:
 24345  007EEA  0060  F418  F106   	movff	fputc@c,?_fputc
 24346  007EF0  0101               	movlb	1	; () banked
 24347  007EF2  6B07               	clrf	(?_fputc+1)& (0+255),b
 24348                           
 24349                           ; BSR set to: 1
 24350  007EF4  0012               	return		;funcret
 24351  007EF6                     __end_of_fputc:
 24352                           	opt callstack 0
 24353                           
 24354 ;; *************** function _putch *****************
 24355 ;; Defined at:
 24356 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24357 ;; Parameters:    Size  Location     Type
 24358 ;;  txData          1    wreg     unsigned char 
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;  txData          1    5[BANK1 ] unsigned char 
 24361 ;; Return value:  Size  Location     Type
 24362 ;;                  1    wreg      void 
 24363 ;; Registers used:
 24364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24365 ;; Tracked objects:
 24366 ;;		On entry : 3F/1
 24367 ;;		On exit  : 3F/39
 24368 ;;		Unchanged: 0/0
 24369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24371 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24373 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24374 ;;Total ram usage:        1 bytes
 24375 ;; Hardware stack levels used:    1
 24376 ;; Hardware stack levels required when called:   17
 24377 ;; This function calls:
 24378 ;;		_UART1_Write
 24379 ;; This function is called by:
 24380 ;;		_fputc
 24381 ;; This function uses a non-reentrant model
 24382 ;;
 24383                           
 24384                           	psect	text180
 24385  00AD6C                     __ptext180:
 24386                           	opt callstack 0
 24387  00AD6C                     _putch:
 24388                           	opt callstack 6
 24389                           
 24390                           ; BSR set to: 1
 24391                           ;incstack = 0
 24392                           ;putch@txData stored from wreg
 24393  00AD6C  6F05               	movwf	putch@txData& (0+255),b
 24394                           
 24395                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 24396  00AD6E  0101               	movlb	1	; () banked
 24397  00AD70  5105               	movf	putch@txData& (0+255),w,b
 24398  00AD72  EC19  F04B         	call	_UART1_Write
 24399                           
 24400                           ; BSR set to: 57
 24401  00AD76  0012               	return		;funcret
 24402  00AD78                     __end_of_putch:
 24403                           	opt callstack 0
 24404                           
 24405 ;; *************** function _UART1_Write *****************
 24406 ;; Defined at:
 24407 ;;		line 201 in file "mcc_generated_files/uart1.c"
 24408 ;; Parameters:    Size  Location     Type
 24409 ;;  txData          1    wreg     unsigned char 
 24410 ;; Auto vars:     Size  Location     Type
 24411 ;;  txData          1    4[BANK1 ] unsigned char 
 24412 ;; Return value:  Size  Location     Type
 24413 ;;                  1    wreg      void 
 24414 ;; Registers used:
 24415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24416 ;; Tracked objects:
 24417 ;;		On entry : 3F/1
 24418 ;;		On exit  : 3F/39
 24419 ;;		Unchanged: 0/0
 24420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24422 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24424 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24425 ;;Total ram usage:        1 bytes
 24426 ;; Hardware stack levels used:    1
 24427 ;; Hardware stack levels required when called:   16
 24428 ;; This function calls:
 24429 ;;		Nothing
 24430 ;; This function is called by:
 24431 ;;		_putch
 24432 ;; This function uses a non-reentrant model
 24433 ;;
 24434                           
 24435                           	psect	text181
 24436  009632                     __ptext181:
 24437                           	opt callstack 0
 24438  009632                     _UART1_Write:
 24439                           	opt callstack 6
 24440                           
 24441                           ; BSR set to: 57
 24442                           ;incstack = 0
 24443                           ;UART1_Write@txData stored from wreg
 24444  009632  6F04               	movwf	UART1_Write@txData& (0+255),b
 24445  009634                     
 24446                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24447                           
 24448                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 24449  009634  0102               	movlb	2	; () banked
 24450  009636  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 24451  009638  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 24452  00963A  B4D8               	btfsc	status,2,c
 24453  00963C  D7FB               	goto	l16904
 24454                           
 24455                           ; BSR set to: 2
 24456                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 24457  00963E  0139               	movlb	57	; () banked
 24458  009640  B993               	btfsc	147,4,b	;volatile
 24459  009642  D004               	goto	l655
 24460                           
 24461                           ; BSR set to: 57
 24462                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 24463  009644  0060  F413  FDEA   	movff	UART1_Write@txData,15850	;volatile
 24464                           
 24465                           ;mcc_generated_files/uart1.c: 210:     }
 24466  00964A  D01B               	goto	l16920
 24467  00964C                     l655:
 24468                           
 24469                           ; BSR set to: 57
 24470                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 24471  00964C  9993               	bcf	147,4,b	;volatile
 24472                           
 24473                           ; BSR set to: 57
 24474                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 24475  00964E  0E64               	movlw	low _uart1TxBuffer
 24476  009650  0101               	movlb	1	; () banked
 24477  009652  25F1               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 24478  009654  6ED9               	movwf	fsr2l,c
 24479  009656  0E04               	movlw	high _uart1TxBuffer
 24480  009658  21F2               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24481  00965A  6EDA               	movwf	fsr2h,c
 24482  00965C  0060  F413  FFDF   	movff	UART1_Write@txData,indf2
 24483                           
 24484                           ; BSR set to: 1
 24485  009662  4BF1               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 24486  009664  2BF2               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 24487                           
 24488                           ; BSR set to: 1
 24489                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 24490  009666  0EB0               	movlw	176
 24491  009668  5DF1               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 24492  00966A  0E04               	movlw	4
 24493  00966C  59F2               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 24494  00966E  A0D8               	btfss	status,0,c
 24495  009670  D004               	goto	l16918
 24496                           
 24497                           ; BSR set to: 1
 24498                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 24499  009672  0E00               	movlw	0
 24500  009674  6FF2               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 24501  009676  0E00               	movlw	0
 24502  009678  6FF1               	movwf	_uart1TxHead& (0+255),b	;volatile
 24503  00967A                     l16918:
 24504                           
 24505                           ; BSR set to: 1
 24506                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 24507  00967A  0102               	movlb	2	; () banked
 24508  00967C  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 24509  00967E  A0D8               	btfss	status,0,c
 24510  009680  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 24511  009682                     l16920:
 24512                           
 24513                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 24514  009682  0139               	movlb	57	; () banked
 24515  009684  8993               	bsf	147,4,b	;volatile
 24516                           
 24517                           ; BSR set to: 57
 24518  009686  0012               	return		;funcret
 24519  009688                     __end_of_UART1_Write:
 24520                           	opt callstack 0
 24521                           
 24522 ;; *************** function _atoi *****************
 24523 ;; Defined at:
 24524 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24525 ;; Parameters:    Size  Location     Type
 24526 ;;  s               2   11[BANK1 ] PTR const unsigned char 
 24527 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 24528 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 24529 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 24530 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 24531 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 24532 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 24533 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 24534 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 24535 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 24536 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 24537 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 24538 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 24539 ;; Auto vars:     Size  Location     Type
 24540 ;;  n               2   24[BANK1 ] int 
 24541 ;;  neg             2   17[BANK1 ] int 
 24542 ;; Return value:  Size  Location     Type
 24543 ;;                  2   11[BANK1 ] int 
 24544 ;; Registers used:
 24545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24546 ;; Tracked objects:
 24547 ;;		On entry : 3F/1
 24548 ;;		On exit  : 3F/1
 24549 ;;		Unchanged: 0/0
 24550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24551 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24552 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24553 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24554 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24555 ;;Total ram usage:       15 bytes
 24556 ;; Hardware stack levels used:    1
 24557 ;; Hardware stack levels required when called:   17
 24558 ;; This function calls:
 24559 ;;		___wmul
 24560 ;;		_isdigit
 24561 ;;		_isspace
 24562 ;; This function is called by:
 24563 ;;		_vfpfcnvrt
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text182
 24568  005BD6                     __ptext182:
 24569                           	opt callstack 0
 24570  005BD6                     _atoi:
 24571                           	opt callstack 10
 24572                           
 24573                           ; BSR set to: 1
 24574                           
 24575                           ; BSR set to: 57
 24576                           ;incstack = 0
 24577  005BD6  0E00               	movlw	0
 24578  005BD8  6F19               	movwf	(atoi@n+1)& (0+255),b
 24579  005BDA  0E00               	movlw	0
 24580  005BDC  6F18               	movwf	atoi@n& (0+255),b
 24581  005BDE  0E00               	movlw	0
 24582  005BE0  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24583  005BE2  0E00               	movlw	0
 24584  005BE4  6F11               	movwf	atoi@neg& (0+255),b
 24585  005BE6  D002               	goto	l17834
 24586  005BE8                     l17832:
 24587                           
 24588                           ; BSR set to: 1
 24589  005BE8  4B0B               	infsnz	atoi@s& (0+255),f,b
 24590  005BEA  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24591  005BEC                     l17834:
 24592                           
 24593                           ; BSR set to: 1
 24594  005BEC  0E01               	movlw	1
 24595  005BEE  6F17               	movwf	_atoi$5678& (0+255),b
 24596                           
 24597                           ; BSR set to: 1
 24598  005BF0  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24599  005BF6  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24600  005BFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24601  005BFC  6AF8               	clrf	tblptru,c
 24602  005BFE                     	endif
 24603  005BFE                     	if	0	;tblptru may be non-zero
 24604  005BFE                     	endif
 24605  005BFE  0008               	tblrd		*
 24606  005C00  50F5               	movf	tablat,w,c
 24607  005C02  0A20               	xorlw	32
 24608  005C04  B4D8               	btfsc	status,2,c
 24609  005C06  D01B               	goto	l17842
 24610                           
 24611                           ; BSR set to: 1
 24612  005C08  0EF7               	movlw	247
 24613  005C0A  6F0D               	movwf	??_atoi& (0+255),b
 24614  005C0C  0EFF               	movlw	255
 24615  005C0E  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24616  005C10  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24617  005C16  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24618  005C1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24619  005C1C  6AF8               	clrf	tblptru,c
 24620  005C1E                     	endif
 24621  005C1E                     	if	0	;tblptru may be non-zero
 24622  005C1E                     	endif
 24623  005C1E  0008               	tblrd		*
 24624  005C20  50F5               	movf	tablat,w,c
 24625  005C22  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24626  005C24  6B10               	clrf	(??_atoi+3)& (0+255),b
 24627  005C26  510D               	movf	??_atoi& (0+255),w,b
 24628  005C28  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24629  005C2A  510E               	movf	(??_atoi+1)& (0+255),w,b
 24630  005C2C  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24631  005C2E  5110               	movf	(??_atoi+3)& (0+255),w,b
 24632  005C30  E104               	bnz	u17380
 24633  005C32  0E05               	movlw	5
 24634  005C34  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24635  005C36  A0D8               	btfss	status,0,c
 24636  005C38  D002               	goto	l17842
 24637  005C3A                     u17380:
 24638                           
 24639                           ; BSR set to: 1
 24640  005C3A  0E00               	movlw	0
 24641  005C3C  6F17               	movwf	_atoi$5678& (0+255),b
 24642  005C3E                     l17842:
 24643                           
 24644                           ; BSR set to: 1
 24645  005C3E  0060  F45C  F113   	movff	_atoi$5678,_atoi$5677
 24646  005C44  6B14               	clrf	(_atoi$5677+1)& (0+255),b
 24647                           
 24648                           ; BSR set to: 1
 24649  005C46  5113               	movf	_atoi$5677& (0+255),w,b
 24650  005C48  1114               	iorwf	(_atoi$5677+1)& (0+255),w,b
 24651  005C4A  B4D8               	btfsc	status,2,c
 24652  005C4C  D008               	goto	l17852
 24653  005C4E  D7CC               	goto	l17832
 24654  005C50                     l17848:
 24655                           
 24656                           ; BSR set to: 1
 24657  005C50  0E00               	movlw	0
 24658  005C52  6F12               	movwf	(atoi@neg+1)& (0+255),b
 24659  005C54  0E01               	movlw	1
 24660  005C56  6F11               	movwf	atoi@neg& (0+255),b
 24661  005C58                     l17850:
 24662                           
 24663                           ; BSR set to: 1
 24664  005C58  4B0B               	infsnz	atoi@s& (0+255),f,b
 24665  005C5A  2B0C               	incf	(atoi@s+1)& (0+255),f,b
 24666  005C5C  D036               	goto	l17858
 24667  005C5E                     l17852:
 24668                           
 24669                           ; BSR set to: 1
 24670  005C5E  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24671  005C64  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24672  005C6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24673  005C6A  6AF8               	clrf	tblptru,c
 24674  005C6C                     	endif
 24675  005C6C                     	if	0	;tblptru may be non-zero
 24676  005C6C                     	endif
 24677  005C6C  0008               	tblrd		*
 24678  005C6E  50F5               	movf	tablat,w,c
 24679  005C70  6F0D               	movwf	??_atoi& (0+255),b
 24680  005C72  6B0E               	clrf	(??_atoi+1)& (0+255),b
 24681                           
 24682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24683                           ; Switch size 1, requested type "simple"
 24684                           ; Number of cases is 1, Range of values is 0 to 0
 24685                           ; switch strategies available:
 24686                           ; Name         Instructions Cycles
 24687                           ; simple_byte            4     3 (average)
 24688                           ;	Chosen strategy is simple_byte
 24689  005C74  510E               	movf	(??_atoi+1)& (0+255),w,b
 24690  005C76  0A00               	xorlw	0	; case 0
 24691  005C78  A4D8               	btfss	status,2,c
 24692  005C7A  D027               	goto	l17858
 24693                           
 24694                           ; BSR set to: 1
 24695                           ; Switch size 1, requested type "simple"
 24696                           ; Number of cases is 2, Range of values is 43 to 45
 24697                           ; switch strategies available:
 24698                           ; Name         Instructions Cycles
 24699                           ; simple_byte            7     4 (average)
 24700                           ;	Chosen strategy is simple_byte
 24701  005C7C  510D               	movf	??_atoi& (0+255),w,b
 24702  005C7E  0A2B               	xorlw	43	; case 43
 24703  005C80  B4D8               	btfsc	status,2,c
 24704  005C82  D7EA               	goto	l17850
 24705  005C84  0A06               	xorlw	6	; case 45
 24706  005C86  B4D8               	btfsc	status,2,c
 24707  005C88  D7E3               	goto	l17848
 24708  005C8A  D01F               	goto	l17858
 24709  005C8C                     l17854:
 24710                           
 24711                           ; BSR set to: 1
 24712  005C8C  0060  F460  F104   	movff	atoi@n,___wmul@multiplier
 24713  005C92  0060  F464  F105   	movff	atoi@n+1,___wmul@multiplier+1
 24714  005C98  0E00               	movlw	0
 24715  005C9A  6F07               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24716  005C9C  0E0A               	movlw	10
 24717  005C9E  6F06               	movwf	___wmul@multiplicand& (0+255),b
 24718  005CA0  EC5E  F051         	call	___wmul	;wreg free
 24719  005CA4  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24720  005CAA  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24721  005CB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24722  005CB0  6AF8               	clrf	tblptru,c
 24723  005CB2                     	endif
 24724  005CB2                     	if	0	;tblptru may be non-zero
 24725  005CB2                     	endif
 24726  005CB2  0008               	tblrd		*
 24727  005CB4  50F5               	movf	tablat,w,c
 24728  005CB6  5F04               	subwf	?___wmul& (0+255),f,b
 24729  005CB8  0E00               	movlw	0
 24730  005CBA  5B05               	subwfb	(?___wmul+1)& (0+255),f,b
 24731  005CBC  0E30               	movlw	48
 24732  005CBE  2504               	addwf	?___wmul& (0+255),w,b
 24733  005CC0  6F18               	movwf	atoi@n& (0+255),b
 24734  005CC2  0E00               	movlw	0
 24735  005CC4  2105               	addwfc	(?___wmul+1)& (0+255),w,b
 24736  005CC6  6F19               	movwf	(atoi@n+1)& (0+255),b
 24737  005CC8  D7C7               	goto	l17850
 24738  005CCA                     l17858:
 24739                           
 24740                           ; BSR set to: 1
 24741  005CCA  0ED0               	movlw	208
 24742  005CCC  6F0D               	movwf	??_atoi& (0+255),b
 24743  005CCE  0EFF               	movlw	255
 24744  005CD0  6F0E               	movwf	(??_atoi+1)& (0+255),b
 24745  005CD2  0060  F42F  FFF6   	movff	atoi@s,tblptrl
 24746  005CD8  0060  F433  FFF7   	movff	atoi@s+1,tblptrh
 24747  005CDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24748  005CDE  6AF8               	clrf	tblptru,c
 24749  005CE0                     	endif
 24750  005CE0                     	if	0	;tblptru may be non-zero
 24751  005CE0                     	endif
 24752  005CE0  0008               	tblrd		*
 24753  005CE2  50F5               	movf	tablat,w,c
 24754  005CE4  6F0F               	movwf	(??_atoi+2)& (0+255),b
 24755  005CE6  6B10               	clrf	(??_atoi+3)& (0+255),b
 24756  005CE8  510D               	movf	??_atoi& (0+255),w,b
 24757  005CEA  270F               	addwf	(??_atoi+2)& (0+255),f,b
 24758  005CEC  510E               	movf	(??_atoi+1)& (0+255),w,b
 24759  005CEE  2310               	addwfc	(??_atoi+3)& (0+255),f,b
 24760  005CF0  5110               	movf	(??_atoi+3)& (0+255),w,b
 24761  005CF2  E106               	bnz	u17400
 24762  005CF4  0E0A               	movlw	10
 24763  005CF6  5D0F               	subwf	(??_atoi+2)& (0+255),w,b
 24764  005CF8  B0D8               	btfsc	status,0,c
 24765  005CFA  D002               	goto	u17400
 24766  005CFC  0E01               	movlw	1
 24767  005CFE  D001               	goto	u17410
 24768  005D00                     u17400:
 24769  005D00  0E00               	movlw	0
 24770  005D02                     u17410:
 24771  005D02  6F15               	movwf	_atoi$5679& (0+255),b
 24772  005D04  6B16               	clrf	(_atoi$5679+1)& (0+255),b
 24773                           
 24774                           ; BSR set to: 1
 24775  005D06  5115               	movf	_atoi$5679& (0+255),w,b
 24776  005D08  1116               	iorwf	(_atoi$5679+1)& (0+255),w,b
 24777  005D0A  A4D8               	btfss	status,2,c
 24778  005D0C  D7BF               	goto	l17854
 24779                           
 24780                           ; BSR set to: 1
 24781  005D0E  5111               	movf	atoi@neg& (0+255),w,b
 24782  005D10  1112               	iorwf	(atoi@neg+1)& (0+255),w,b
 24783  005D12  A4D8               	btfss	status,2,c
 24784  005D14  D011               	goto	l4313
 24785                           
 24786                           ; BSR set to: 1
 24787  005D16  0060  F460  F10D   	movff	atoi@n,??_atoi
 24788  005D1C  0060  F464  F10E   	movff	atoi@n+1,??_atoi+1
 24789  005D22  1F0D               	comf	??_atoi& (0+255),f,b
 24790  005D24  1F0E               	comf	(??_atoi+1)& (0+255),f,b
 24791  005D26  4B0D               	infsnz	??_atoi& (0+255),f,b
 24792  005D28  2B0E               	incf	(??_atoi+1)& (0+255),f,b
 24793  005D2A  0060  F434  F10B   	movff	??_atoi,?_atoi
 24794  005D30  0060  F438  F10C   	movff	??_atoi+1,?_atoi+1
 24795  005D36  0012               	return	
 24796  005D38                     l4313:
 24797                           
 24798                           ; BSR set to: 1
 24799  005D38  0060  F460  F10B   	movff	atoi@n,?_atoi
 24800  005D3E  0060  F464  F10C   	movff	atoi@n+1,?_atoi+1
 24801                           
 24802                           ; BSR set to: 1
 24803  005D44  0012               	return		;funcret
 24804  005D46                     __end_of_atoi:
 24805                           	opt callstack 0
 24806                           
 24807 ;; *************** function _isspace *****************
 24808 ;; Defined at:
 24809 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24810 ;; Parameters:    Size  Location     Type
 24811 ;;  c               2    4[BANK1 ] int 
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;		None
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  2    4[BANK1 ] int 
 24816 ;; Registers used:
 24817 ;;		wreg, status,2, status,0
 24818 ;; Tracked objects:
 24819 ;;		On entry : 0/0
 24820 ;;		On exit  : 3F/1
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24823 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24824 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24825 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24826 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24827 ;;Total ram usage:        7 bytes
 24828 ;; Hardware stack levels used:    1
 24829 ;; Hardware stack levels required when called:   16
 24830 ;; This function calls:
 24831 ;;		Nothing
 24832 ;; This function is called by:
 24833 ;;		_atoi
 24834 ;; This function uses a non-reentrant model
 24835 ;;
 24836                           
 24837                           	psect	text183
 24838  009BE0                     __ptext183:
 24839                           	opt callstack 0
 24840  009BE0                     _isspace:
 24841                           	opt callstack 10
 24842                           
 24843                           ; BSR set to: 1
 24844                           ;incstack = 0
 24845  009BE0  0E01               	movlw	1
 24846  009BE2  0101               	movlb	1	; () banked
 24847  009BE4  6F0A               	movwf	_isspace$5704& (0+255),b
 24848                           
 24849                           ; BSR set to: 1
 24850  009BE6  0E20               	movlw	32
 24851  009BE8  1904               	xorwf	isspace@c& (0+255),w,b
 24852  009BEA  1105               	iorwf	(isspace@c+1)& (0+255),w,b
 24853  009BEC  B4D8               	btfsc	status,2,c
 24854  009BEE  D016               	goto	l17514
 24855                           
 24856                           ; BSR set to: 1
 24857  009BF0  0EF7               	movlw	247
 24858  009BF2  6F06               	movwf	??_isspace& (0+255),b
 24859  009BF4  0EFF               	movlw	255
 24860  009BF6  6F07               	movwf	(??_isspace+1)& (0+255),b
 24861  009BF8  0060  F410  F108   	movff	isspace@c,??_isspace+2
 24862  009BFE  0060  F414  F109   	movff	isspace@c+1,??_isspace+3
 24863  009C04  5106               	movf	??_isspace& (0+255),w,b
 24864  009C06  2708               	addwf	(??_isspace+2)& (0+255),f,b
 24865  009C08  5107               	movf	(??_isspace+1)& (0+255),w,b
 24866  009C0A  2309               	addwfc	(??_isspace+3)& (0+255),f,b
 24867  009C0C  5109               	movf	(??_isspace+3)& (0+255),w,b
 24868  009C0E  E104               	bnz	u16780
 24869  009C10  0E05               	movlw	5
 24870  009C12  5D08               	subwf	(??_isspace+2)& (0+255),w,b
 24871  009C14  A0D8               	btfss	status,0,c
 24872  009C16  D002               	goto	l17514
 24873  009C18                     u16780:
 24874                           
 24875                           ; BSR set to: 1
 24876  009C18  0E00               	movlw	0
 24877  009C1A  6F0A               	movwf	_isspace$5704& (0+255),b
 24878  009C1C                     l17514:
 24879                           
 24880                           ; BSR set to: 1
 24881  009C1C  0060  F428  F104   	movff	_isspace$5704,?_isspace
 24882  009C22  6B05               	clrf	(?_isspace+1)& (0+255),b
 24883                           
 24884                           ; BSR set to: 1
 24885  009C24  0012               	return		;funcret
 24886  009C26                     __end_of_isspace:
 24887                           	opt callstack 0
 24888                           
 24889 ;; *************** function _isdigit *****************
 24890 ;; Defined at:
 24891 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24892 ;; Parameters:    Size  Location     Type
 24893 ;;  c               2    4[BANK1 ] int 
 24894 ;; Auto vars:     Size  Location     Type
 24895 ;;		None
 24896 ;; Return value:  Size  Location     Type
 24897 ;;                  2    4[BANK1 ] int 
 24898 ;; Registers used:
 24899 ;;		wreg, status,2, status,0
 24900 ;; Tracked objects:
 24901 ;;		On entry : 0/0
 24902 ;;		On exit  : 3F/1
 24903 ;;		Unchanged: 0/0
 24904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24905 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24907 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24908 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24909 ;;Total ram usage:        6 bytes
 24910 ;; Hardware stack levels used:    1
 24911 ;; Hardware stack levels required when called:   16
 24912 ;; This function calls:
 24913 ;;		Nothing
 24914 ;; This function is called by:
 24915 ;;		_vfpfcnvrt
 24916 ;;		_atoi
 24917 ;; This function uses a non-reentrant model
 24918 ;;
 24919                           
 24920                           	psect	text184
 24921  009FF4                     __ptext184:
 24922                           	opt callstack 0
 24923  009FF4                     _isdigit:
 24924                           	opt callstack 11
 24925                           
 24926                           ; BSR set to: 1
 24927                           ;incstack = 0
 24928  009FF4  0ED0               	movlw	208
 24929  009FF6  0101               	movlb	1	; () banked
 24930  009FF8  6F06               	movwf	??_isdigit& (0+255),b
 24931  009FFA  0EFF               	movlw	255
 24932  009FFC  6F07               	movwf	(??_isdigit+1)& (0+255),b
 24933  009FFE  0060  F410  F108   	movff	isdigit@c,??_isdigit+2
 24934  00A004  0060  F414  F109   	movff	isdigit@c+1,??_isdigit+3
 24935  00A00A  5106               	movf	??_isdigit& (0+255),w,b
 24936  00A00C  2708               	addwf	(??_isdigit+2)& (0+255),f,b
 24937  00A00E  5107               	movf	(??_isdigit+1)& (0+255),w,b
 24938  00A010  2309               	addwfc	(??_isdigit+3)& (0+255),f,b
 24939  00A012  5109               	movf	(??_isdigit+3)& (0+255),w,b
 24940  00A014  E106               	bnz	u16620
 24941  00A016  0E0A               	movlw	10
 24942  00A018  5D08               	subwf	(??_isdigit+2)& (0+255),w,b
 24943  00A01A  B0D8               	btfsc	status,0,c
 24944  00A01C  D002               	goto	u16620
 24945  00A01E  0E01               	movlw	1
 24946  00A020  D001               	goto	u16630
 24947  00A022                     u16620:
 24948  00A022  0E00               	movlw	0
 24949  00A024                     u16630:
 24950  00A024  6F04               	movwf	?_isdigit& (0+255),b
 24951  00A026  6B05               	clrf	(?_isdigit+1)& (0+255),b
 24952                           
 24953                           ; BSR set to: 1
 24954  00A028  0012               	return		;funcret
 24955  00A02A                     __end_of_isdigit:
 24956                           	opt callstack 0
 24957                           
 24958 ;; *************** function ___wmul *****************
 24959 ;; Defined at:
 24960 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 24961 ;; Parameters:    Size  Location     Type
 24962 ;;  multiplier      2    4[BANK1 ] unsigned int 
 24963 ;;  multiplicand    2    6[BANK1 ] unsigned int 
 24964 ;; Auto vars:     Size  Location     Type
 24965 ;;  product         2    8[BANK1 ] unsigned int 
 24966 ;; Return value:  Size  Location     Type
 24967 ;;                  2    4[BANK1 ] unsigned int 
 24968 ;; Registers used:
 24969 ;;		wreg, status,2, status,0, prodl, prodh
 24970 ;; Tracked objects:
 24971 ;;		On entry : 3F/1
 24972 ;;		On exit  : 3F/1
 24973 ;;		Unchanged: 0/0
 24974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24975 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24978 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24979 ;;Total ram usage:        6 bytes
 24980 ;; Hardware stack levels used:    1
 24981 ;; Hardware stack levels required when called:   16
 24982 ;; This function calls:
 24983 ;;		Nothing
 24984 ;; This function is called by:
 24985 ;;		_ValueDisplay
 24986 ;;		_HigherAlarm
 24987 ;;		_MuteAlarm
 24988 ;;		_AlarmUpdateLCD
 24989 ;;		_AlarmCheckTask
 24990 ;;		_atoi
 24991 ;;		_AdcInit
 24992 ;;		_AdcSeeData
 24993 ;;		_AdcGetData
 24994 ;;		_AdcDataReady
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text185
 24999  00A2BC                     __ptext185:
 25000                           	opt callstack 0
 25001  00A2BC                     ___wmul:
 25002                           	opt callstack 10
 25003                           
 25004                           ; BSR set to: 1
 25005                           
 25006                           ; BSR set to: 1
 25007                           ;incstack = 0
 25008  00A2BC  5104               	movf	___wmul@multiplier& (0+255),w,b
 25009  00A2BE  0306               	mulwf	___wmul@multiplicand& (0+255),b
 25010  00A2C0  006F FFCC  F108    	movff	prodl,___wmul@product
 25011  00A2C6  006F FFD0  F109    	movff	prodh,___wmul@product+1
 25012  00A2CC  5104               	movf	___wmul@multiplier& (0+255),w,b
 25013  00A2CE  0307               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25014  00A2D0  50F3               	movf	243,w,c
 25015  00A2D2  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 25016  00A2D4  5105               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25017  00A2D6  0306               	mulwf	___wmul@multiplicand& (0+255),b
 25018  00A2D8  50F3               	movf	243,w,c
 25019  00A2DA  2709               	addwf	(___wmul@product+1)& (0+255),f,b
 25020                           
 25021                           ; BSR set to: 1
 25022  00A2DC  0060  F420  F104   	movff	___wmul@product,?___wmul
 25023  00A2E2  0060  F424  F105   	movff	___wmul@product+1,?___wmul+1
 25024                           
 25025                           ; BSR set to: 1
 25026  00A2E8  0012               	return		;funcret
 25027  00A2EA                     __end_of___wmul:
 25028                           	opt callstack 0
 25029                           
 25030 ;; *************** function ___awmod *****************
 25031 ;; Defined at:
 25032 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 25033 ;; Parameters:    Size  Location     Type
 25034 ;;  dividend        2    4[BANK1 ] int 
 25035 ;;  divisor         2    6[BANK1 ] int 
 25036 ;; Auto vars:     Size  Location     Type
 25037 ;;  sign            1    9[BANK1 ] unsigned char 
 25038 ;;  counter         1    8[BANK1 ] unsigned char 
 25039 ;; Return value:  Size  Location     Type
 25040 ;;                  2    4[BANK1 ] int 
 25041 ;; Registers used:
 25042 ;;		wreg, status,2, status,0
 25043 ;; Tracked objects:
 25044 ;;		On entry : 3F/1
 25045 ;;		On exit  : 3F/1
 25046 ;;		Unchanged: 0/0
 25047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25048 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25049 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25051 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25052 ;;Total ram usage:        6 bytes
 25053 ;; Hardware stack levels used:    1
 25054 ;; Hardware stack levels required when called:   16
 25055 ;; This function calls:
 25056 ;;		Nothing
 25057 ;; This function is called by:
 25058 ;;		_ValueDisplay
 25059 ;;		_AlarmDisplay
 25060 ;; This function uses a non-reentrant model
 25061 ;;
 25062                           
 25063                           	psect	text186
 25064  008E02                     __ptext186:
 25065                           	opt callstack 0
 25066  008E02                     ___awmod:
 25067                           	opt callstack 11
 25068                           
 25069                           ; BSR set to: 1
 25070                           
 25071                           ; BSR set to: 1
 25072                           ;incstack = 0
 25073  008E02  0E00               	movlw	0
 25074  008E04  6F09               	movwf	___awmod@sign& (0+255),b
 25075                           
 25076                           ; BSR set to: 1
 25077  008E06  AF05               	btfss	(___awmod@dividend+1)& (0+255),7,b
 25078  008E08  D006               	goto	l18820
 25079                           
 25080                           ; BSR set to: 1
 25081  008E0A  6D04               	negf	___awmod@dividend& (0+255),b
 25082  008E0C  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 25083  008E0E  B0D8               	btfsc	status,0,c
 25084  008E10  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 25085                           
 25086                           ; BSR set to: 1
 25087  008E12  0E01               	movlw	1
 25088  008E14  6F09               	movwf	___awmod@sign& (0+255),b
 25089  008E16                     l18820:
 25090                           
 25091                           ; BSR set to: 1
 25092  008E16  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 25093  008E18  D004               	goto	l18824
 25094                           
 25095                           ; BSR set to: 1
 25096  008E1A  6D06               	negf	___awmod@divisor& (0+255),b
 25097  008E1C  1F07               	comf	(___awmod@divisor+1)& (0+255),f,b
 25098  008E1E  B0D8               	btfsc	status,0,c
 25099  008E20  2B07               	incf	(___awmod@divisor+1)& (0+255),f,b
 25100  008E22                     l18824:
 25101                           
 25102                           ; BSR set to: 1
 25103  008E22  5106               	movf	___awmod@divisor& (0+255),w,b
 25104  008E24  1107               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 25105  008E26  B4D8               	btfsc	status,2,c
 25106  008E28  D018               	goto	l18840
 25107                           
 25108                           ; BSR set to: 1
 25109  008E2A  0E01               	movlw	1
 25110  008E2C  6F08               	movwf	___awmod@counter& (0+255),b
 25111  008E2E  D004               	goto	l18830
 25112  008E30                     l18828:
 25113                           
 25114                           ; BSR set to: 1
 25115  008E30  90D8               	bcf	status,0,c
 25116  008E32  3706               	rlcf	___awmod@divisor& (0+255),f,b
 25117  008E34  3707               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 25118  008E36  2B08               	incf	___awmod@counter& (0+255),f,b
 25119  008E38                     l18830:
 25120                           
 25121                           ; BSR set to: 1
 25122  008E38  AF07               	btfss	(___awmod@divisor+1)& (0+255),7,b
 25123  008E3A  D7FA               	goto	l18828
 25124  008E3C                     u18520:
 25125                           
 25126                           ; BSR set to: 1
 25127  008E3C  5106               	movf	___awmod@divisor& (0+255),w,b
 25128  008E3E  5D04               	subwf	___awmod@dividend& (0+255),w,b
 25129  008E40  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 25130  008E42  5905               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 25131  008E44  A0D8               	btfss	status,0,c
 25132  008E46  D004               	goto	l18836
 25133                           
 25134                           ; BSR set to: 1
 25135  008E48  5106               	movf	___awmod@divisor& (0+255),w,b
 25136  008E4A  5F04               	subwf	___awmod@dividend& (0+255),f,b
 25137  008E4C  5107               	movf	(___awmod@divisor+1)& (0+255),w,b
 25138  008E4E  5B05               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 25139  008E50                     l18836:
 25140                           
 25141                           ; BSR set to: 1
 25142  008E50  90D8               	bcf	status,0,c
 25143  008E52  3307               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 25144  008E54  3306               	rrcf	___awmod@divisor& (0+255),f,b
 25145                           
 25146                           ; BSR set to: 1
 25147  008E56  2F08               	decfsz	___awmod@counter& (0+255),f,b
 25148  008E58  D7F1               	goto	u18520
 25149  008E5A                     l18840:
 25150                           
 25151                           ; BSR set to: 1
 25152  008E5A  5109               	movf	___awmod@sign& (0+255),w,b
 25153  008E5C  B4D8               	btfsc	status,2,c
 25154  008E5E  D004               	goto	l18844
 25155                           
 25156                           ; BSR set to: 1
 25157  008E60  6D04               	negf	___awmod@dividend& (0+255),b
 25158  008E62  1F05               	comf	(___awmod@dividend+1)& (0+255),f,b
 25159  008E64  B0D8               	btfsc	status,0,c
 25160  008E66  2B05               	incf	(___awmod@dividend+1)& (0+255),f,b
 25161  008E68                     l18844:
 25162                           
 25163                           ; BSR set to: 1
 25164  008E68  0060  F410  F104   	movff	___awmod@dividend,?___awmod
 25165  008E6E  0060  F414  F105   	movff	___awmod@dividend+1,?___awmod+1
 25166                           
 25167                           ; BSR set to: 1
 25168  008E74  0012               	return		;funcret
 25169  008E76                     __end_of___awmod:
 25170                           	opt callstack 0
 25171                           
 25172 ;; *************** function _GetVolume *****************
 25173 ;; Defined at:
 25174 ;;		line 167 in file "monitor.c"
 25175 ;; Parameters:    Size  Location     Type
 25176 ;;		None
 25177 ;; Auto vars:     Size  Location     Type
 25178 ;;		None
 25179 ;; Return value:  Size  Location     Type
 25180 ;;                  2    4[BANK1 ] short 
 25181 ;; Registers used:
 25182 ;;		None
 25183 ;; Tracked objects:
 25184 ;;		On entry : 3F/1
 25185 ;;		On exit  : 3F/1
 25186 ;;		Unchanged: 3F/0
 25187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25188 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25191 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25192 ;;Total ram usage:        2 bytes
 25193 ;; Hardware stack levels used:    1
 25194 ;; Hardware stack levels required when called:   16
 25195 ;; This function calls:
 25196 ;;		Nothing
 25197 ;; This function is called by:
 25198 ;;		_ValueDisplay
 25199 ;; This function uses a non-reentrant model
 25200 ;;
 25201                           
 25202                           	psect	text187
 25203  00AC76                     __ptext187:
 25204                           	opt callstack 0
 25205  00AC76                     _GetVolume:
 25206                           	opt callstack 11
 25207                           
 25208                           ; BSR set to: 1
 25209                           
 25210                           ; BSR set to: 1
 25211                           ;incstack = 0
 25212  00AC76  0060  F78C  F104   	movff	_volume,?_GetVolume
 25213  00AC7C  0060  F790  F105   	movff	_volume+1,?_GetVolume+1
 25214                           
 25215                           ; BSR set to: 1
 25216  00AC82  0012               	return		;funcret
 25217  00AC84                     __end_of_GetVolume:
 25218                           	opt callstack 0
 25219                           
 25220 ;; *************** function _GetTi *****************
 25221 ;; Defined at:
 25222 ;;		line 161 in file "monitor.c"
 25223 ;; Parameters:    Size  Location     Type
 25224 ;;		None
 25225 ;; Auto vars:     Size  Location     Type
 25226 ;;		None
 25227 ;; Return value:  Size  Location     Type
 25228 ;;                  2    4[BANK1 ] short 
 25229 ;; Registers used:
 25230 ;;		wreg, status,2, status,0
 25231 ;; Tracked objects:
 25232 ;;		On entry : 3F/1
 25233 ;;		On exit  : 3F/1
 25234 ;;		Unchanged: 0/0
 25235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25236 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25239 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25240 ;;Total ram usage:        2 bytes
 25241 ;; Hardware stack levels used:    1
 25242 ;; Hardware stack levels required when called:   16
 25243 ;; This function calls:
 25244 ;;		Nothing
 25245 ;; This function is called by:
 25246 ;;		_ValueDisplay
 25247 ;; This function uses a non-reentrant model
 25248 ;;
 25249                           
 25250                           	psect	text188
 25251  00AA54                     __ptext188:
 25252                           	opt callstack 0
 25253  00AA54                     _GetTi:
 25254                           	opt callstack 11
 25255                           
 25256                           ; BSR set to: 1
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;incstack = 0
 25260  00AA54  90D8               	bcf	status,0,c
 25261  00AA56  0102               	movlb	2	; () banked
 25262  00AA58  3558               	rlcf	_ti& (0+255),w,b
 25263  00AA5A  0101               	movlb	1	; () banked
 25264  00AA5C  6F04               	movwf	?_GetTi& (0+255),b
 25265  00AA5E  0102               	movlb	2	; () banked
 25266  00AA60  3559               	rlcf	(_ti+1)& (0+255),w,b
 25267  00AA62  0101               	movlb	1	; () banked
 25268  00AA64  6F05               	movwf	(?_GetTi+1)& (0+255),b
 25269                           
 25270                           ; BSR set to: 1
 25271  00AA66  0012               	return		;funcret
 25272  00AA68                     __end_of_GetTi:
 25273                           	opt callstack 0
 25274                           
 25275 ;; *************** function _GetTe *****************
 25276 ;; Defined at:
 25277 ;;		line 162 in file "monitor.c"
 25278 ;; Parameters:    Size  Location     Type
 25279 ;;		None
 25280 ;; Auto vars:     Size  Location     Type
 25281 ;;		None
 25282 ;; Return value:  Size  Location     Type
 25283 ;;                  2    4[BANK1 ] short 
 25284 ;; Registers used:
 25285 ;;		wreg, status,2, status,0
 25286 ;; Tracked objects:
 25287 ;;		On entry : 3F/1
 25288 ;;		On exit  : 3F/1
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25291 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25294 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25295 ;;Total ram usage:        2 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; Hardware stack levels required when called:   16
 25298 ;; This function calls:
 25299 ;;		Nothing
 25300 ;; This function is called by:
 25301 ;;		_ValueDisplay
 25302 ;; This function uses a non-reentrant model
 25303 ;;
 25304                           
 25305                           	psect	text189
 25306  00AA68                     __ptext189:
 25307                           	opt callstack 0
 25308  00AA68                     _GetTe:
 25309                           	opt callstack 11
 25310                           
 25311                           ; BSR set to: 1
 25312                           
 25313                           ; BSR set to: 1
 25314                           ;incstack = 0
 25315  00AA68  90D8               	bcf	status,0,c
 25316  00AA6A  0102               	movlb	2	; () banked
 25317  00AA6C  3556               	rlcf	_te& (0+255),w,b
 25318  00AA6E  0101               	movlb	1	; () banked
 25319  00AA70  6F04               	movwf	?_GetTe& (0+255),b
 25320  00AA72  0102               	movlb	2	; () banked
 25321  00AA74  3557               	rlcf	(_te+1)& (0+255),w,b
 25322  00AA76  0101               	movlb	1	; () banked
 25323  00AA78  6F05               	movwf	(?_GetTe+1)& (0+255),b
 25324                           
 25325                           ; BSR set to: 1
 25326  00AA7A  0012               	return		;funcret
 25327  00AA7C                     __end_of_GetTe:
 25328                           	opt callstack 0
 25329                           
 25330 ;; *************** function _GetTdi *****************
 25331 ;; Defined at:
 25332 ;;		line 160 in file "monitor.c"
 25333 ;; Parameters:    Size  Location     Type
 25334 ;;		None
 25335 ;; Auto vars:     Size  Location     Type
 25336 ;;		None
 25337 ;; Return value:  Size  Location     Type
 25338 ;;                  2    4[BANK1 ] short 
 25339 ;; Registers used:
 25340 ;;		wreg, status,2, status,0
 25341 ;; Tracked objects:
 25342 ;;		On entry : 3F/0
 25343 ;;		On exit  : 3F/1
 25344 ;;		Unchanged: 0/0
 25345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25346 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25349 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25350 ;;Total ram usage:        2 bytes
 25351 ;; Hardware stack levels used:    1
 25352 ;; Hardware stack levels required when called:   16
 25353 ;; This function calls:
 25354 ;;		Nothing
 25355 ;; This function is called by:
 25356 ;;		_ValueDisplay
 25357 ;; This function uses a non-reentrant model
 25358 ;;
 25359                           
 25360                           	psect	text190
 25361  00AC84                     __ptext190:
 25362                           	opt callstack 0
 25363  00AC84                     _GetTdi:
 25364                           	opt callstack 11
 25365                           
 25366                           ; BSR set to: 0
 25367                           
 25368                           ; BSR set to: 1
 25369                           ;incstack = 0
 25370  00AC84  90D8               	bcf	status,0,c
 25371  00AC86  0101               	movlb	1	; () banked
 25372  00AC88  35DF               	rlcf	_tdi& (0+255),w,b
 25373  00AC8A  6F04               	movwf	?_GetTdi& (0+255),b
 25374  00AC8C  35E0               	rlcf	(_tdi+1)& (0+255),w,b
 25375  00AC8E  6F05               	movwf	(?_GetTdi+1)& (0+255),b
 25376                           
 25377                           ; BSR set to: 1
 25378  00AC90  0012               	return		;funcret
 25379  00AC92                     __end_of_GetTdi:
 25380                           	opt callstack 0
 25381                           
 25382 ;; *************** function _GetTde *****************
 25383 ;; Defined at:
 25384 ;;		line 159 in file "monitor.c"
 25385 ;; Parameters:    Size  Location     Type
 25386 ;;		None
 25387 ;; Auto vars:     Size  Location     Type
 25388 ;;		None
 25389 ;; Return value:  Size  Location     Type
 25390 ;;                  2    4[BANK1 ] short 
 25391 ;; Registers used:
 25392 ;;		wreg, status,2, status,0
 25393 ;; Tracked objects:
 25394 ;;		On entry : 3F/1
 25395 ;;		On exit  : 3F/1
 25396 ;;		Unchanged: 0/0
 25397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25398 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25401 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25402 ;;Total ram usage:        2 bytes
 25403 ;; Hardware stack levels used:    1
 25404 ;; Hardware stack levels required when called:   16
 25405 ;; This function calls:
 25406 ;;		Nothing
 25407 ;; This function is called by:
 25408 ;;		_ValueDisplay
 25409 ;; This function uses a non-reentrant model
 25410 ;;
 25411                           
 25412                           	psect	text191
 25413  00AD78                     __ptext191:
 25414                           	opt callstack 0
 25415  00AD78                     _GetTde:
 25416                           	opt callstack 11
 25417                           
 25418                           ; BSR set to: 1
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;incstack = 0
 25422  00AD78  90D8               	bcf	status,0,c
 25423  00AD7A  35DD               	rlcf	_tde& (0+255),w,b
 25424  00AD7C  6F04               	movwf	?_GetTde& (0+255),b
 25425  00AD7E  35DE               	rlcf	(_tde+1)& (0+255),w,b
 25426  00AD80  6F05               	movwf	(?_GetTde+1)& (0+255),b
 25427                           
 25428                           ; BSR set to: 1
 25429  00AD82  0012               	return		;funcret
 25430  00AD84                     __end_of_GetTde:
 25431                           	opt callstack 0
 25432                           
 25433 ;; *************** function _GetTargetIp *****************
 25434 ;; Defined at:
 25435 ;;		line 187 in file "monitor.c"
 25436 ;; Parameters:    Size  Location     Type
 25437 ;;		None
 25438 ;; Auto vars:     Size  Location     Type
 25439 ;;		None
 25440 ;; Return value:  Size  Location     Type
 25441 ;;                  2   18[BANK1 ] short 
 25442 ;; Registers used:
 25443 ;;		wreg, status,2, status,0, cstack
 25444 ;; Tracked objects:
 25445 ;;		On entry : 3F/1
 25446 ;;		On exit  : 3F/1
 25447 ;;		Unchanged: 0/0
 25448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25452 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25453 ;;Total ram usage:        2 bytes
 25454 ;; Hardware stack levels used:    1
 25455 ;; Hardware stack levels required when called:   17
 25456 ;; This function calls:
 25457 ;;		___awdiv
 25458 ;; This function is called by:
 25459 ;;		_ValueDisplay
 25460 ;; This function uses a non-reentrant model
 25461 ;;
 25462                           
 25463                           	psect	text192
 25464  00A46C                     __ptext192:
 25465                           	opt callstack 0
 25466  00A46C                     _GetTargetIp:
 25467                           	opt callstack 10
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;monitor.c: 188:     return targetHigh/5;
 25471                           
 25472                           ; BSR set to: 1
 25473                           ;incstack = 0
 25474  00A46C  0060  F7A4  F10A   	movff	_targetHigh,___awdiv@dividend
 25475  00A472  0060  F7A8  F10B   	movff	_targetHigh+1,___awdiv@dividend+1
 25476  00A478  0E00               	movlw	0
 25477  00A47A  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25478  00A47C  0E05               	movlw	5
 25479  00A47E  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25480  00A480  EC7D  F045         	call	___awdiv	;wreg free
 25481  00A484  0060  F428  F112   	movff	?___awdiv,?_GetTargetIp
 25482  00A48A  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetIp+1
 25483                           
 25484                           ; BSR set to: 1
 25485  00A490  0012               	return		;funcret
 25486  00A492                     __end_of_GetTargetIp:
 25487                           	opt callstack 0
 25488                           
 25489 ;; *************** function _GetTargetEp *****************
 25490 ;; Defined at:
 25491 ;;		line 191 in file "monitor.c"
 25492 ;; Parameters:    Size  Location     Type
 25493 ;;		None
 25494 ;; Auto vars:     Size  Location     Type
 25495 ;;		None
 25496 ;; Return value:  Size  Location     Type
 25497 ;;                  2   18[BANK1 ] short 
 25498 ;; Registers used:
 25499 ;;		wreg, status,2, status,0, cstack
 25500 ;; Tracked objects:
 25501 ;;		On entry : 3F/1
 25502 ;;		On exit  : 3F/1
 25503 ;;		Unchanged: 0/0
 25504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25505 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25509 ;;Total ram usage:        2 bytes
 25510 ;; Hardware stack levels used:    1
 25511 ;; Hardware stack levels required when called:   17
 25512 ;; This function calls:
 25513 ;;		___awdiv
 25514 ;; This function is called by:
 25515 ;;		_ValueDisplay
 25516 ;; This function uses a non-reentrant model
 25517 ;;
 25518                           
 25519                           	psect	text193
 25520  00A492                     __ptext193:
 25521                           	opt callstack 0
 25522  00A492                     _GetTargetEp:
 25523                           	opt callstack 10
 25524                           
 25525                           ; BSR set to: 1
 25526                           ;monitor.c: 192:     return targetLow/5;
 25527                           
 25528                           ; BSR set to: 1
 25529                           ;incstack = 0
 25530  00A492  0060  F79C  F10A   	movff	_targetLow,___awdiv@dividend
 25531  00A498  0060  F7A0  F10B   	movff	_targetLow+1,___awdiv@dividend+1
 25532  00A49E  0E00               	movlw	0
 25533  00A4A0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25534  00A4A2  0E05               	movlw	5
 25535  00A4A4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25536  00A4A6  EC7D  F045         	call	___awdiv	;wreg free
 25537  00A4AA  0060  F428  F112   	movff	?___awdiv,?_GetTargetEp
 25538  00A4B0  0060  F42C  F113   	movff	?___awdiv+1,?_GetTargetEp+1
 25539                           
 25540                           ; BSR set to: 1
 25541  00A4B6  0012               	return		;funcret
 25542  00A4B8                     __end_of_GetTargetEp:
 25543                           	opt callstack 0
 25544                           
 25545 ;; *************** function _GetSpr *****************
 25546 ;; Defined at:
 25547 ;;		line 60 in file "controller.c"
 25548 ;; Parameters:    Size  Location     Type
 25549 ;;		None
 25550 ;; Auto vars:     Size  Location     Type
 25551 ;;		None
 25552 ;; Return value:  Size  Location     Type
 25553 ;;                  2    4[BANK1 ] short 
 25554 ;; Registers used:
 25555 ;;		None
 25556 ;; Tracked objects:
 25557 ;;		On entry : 3F/1
 25558 ;;		On exit  : 3F/1
 25559 ;;		Unchanged: 3F/0
 25560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25561 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25564 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25565 ;;Total ram usage:        2 bytes
 25566 ;; Hardware stack levels used:    1
 25567 ;; Hardware stack levels required when called:   16
 25568 ;; This function calls:
 25569 ;;		Nothing
 25570 ;; This function is called by:
 25571 ;;		_ValueDisplay
 25572 ;; This function uses a non-reentrant model
 25573 ;;
 25574                           
 25575                           	psect	text194
 25576  00AC92                     __ptext194:
 25577                           	opt callstack 0
 25578  00AC92                     _GetSpr:
 25579                           	opt callstack 11
 25580                           
 25581                           ; BSR set to: 1
 25582                           
 25583                           ; BSR set to: 1
 25584                           ;incstack = 0
 25585  00AC92  0060  F8C8  F104   	movff	_spr,?_GetSpr
 25586  00AC98  0060  F8CC  F105   	movff	_spr+1,?_GetSpr+1
 25587                           
 25588                           ; BSR set to: 1
 25589  00AC9E  0012               	return		;funcret
 25590  00ACA0                     __end_of_GetSpr:
 25591                           	opt callstack 0
 25592                           
 25593 ;; *************** function _GetPmax *****************
 25594 ;; Defined at:
 25595 ;;		line 168 in file "monitor.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;		None
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  2   18[BANK1 ] short 
 25602 ;; Registers used:
 25603 ;;		wreg, status,2, status,0, cstack
 25604 ;; Tracked objects:
 25605 ;;		On entry : 3F/1
 25606 ;;		On exit  : 3F/1
 25607 ;;		Unchanged: 0/0
 25608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25609 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25612 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25613 ;;Total ram usage:        2 bytes
 25614 ;; Hardware stack levels used:    1
 25615 ;; Hardware stack levels required when called:   17
 25616 ;; This function calls:
 25617 ;;		___awdiv
 25618 ;; This function is called by:
 25619 ;;		_ValueDisplay
 25620 ;; This function uses a non-reentrant model
 25621 ;;
 25622                           
 25623                           	psect	text195
 25624  00A4B8                     __ptext195:
 25625                           	opt callstack 0
 25626  00A4B8                     _GetPmax:
 25627                           	opt callstack 10
 25628                           
 25629                           ; BSR set to: 1
 25630                           
 25631                           ; BSR set to: 1
 25632                           ;incstack = 0
 25633  00A4B8  0060  F358  F10A   	movff	_pmax,___awdiv@dividend
 25634  00A4BE  0060  F35C  F10B   	movff	_pmax+1,___awdiv@dividend+1
 25635  00A4C4  0E00               	movlw	0
 25636  00A4C6  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25637  00A4C8  0E05               	movlw	5
 25638  00A4CA  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25639  00A4CC  EC7D  F045         	call	___awdiv	;wreg free
 25640  00A4D0  0060  F428  F112   	movff	?___awdiv,?_GetPmax
 25641  00A4D6  0060  F42C  F113   	movff	?___awdiv+1,?_GetPmax+1
 25642                           
 25643                           ; BSR set to: 1
 25644  00A4DC  0012               	return		;funcret
 25645  00A4DE                     __end_of_GetPmax:
 25646                           	opt callstack 0
 25647                           
 25648 ;; *************** function _GetIp *****************
 25649 ;; Defined at:
 25650 ;;		line 166 in file "monitor.c"
 25651 ;; Parameters:    Size  Location     Type
 25652 ;;		None
 25653 ;; Auto vars:     Size  Location     Type
 25654 ;;		None
 25655 ;; Return value:  Size  Location     Type
 25656 ;;                  2   18[BANK1 ] short 
 25657 ;; Registers used:
 25658 ;;		wreg, status,2, status,0, cstack
 25659 ;; Tracked objects:
 25660 ;;		On entry : 3F/1
 25661 ;;		On exit  : 3F/1
 25662 ;;		Unchanged: 0/0
 25663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25664 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25665 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25666 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25668 ;;Total ram usage:        9 bytes
 25669 ;; Hardware stack levels used:    1
 25670 ;; Hardware stack levels required when called:   17
 25671 ;; This function calls:
 25672 ;;		___awdiv
 25673 ;; This function is called by:
 25674 ;;		_ValueDisplay
 25675 ;; This function uses a non-reentrant model
 25676 ;;
 25677                           
 25678                           	psect	text196
 25679  005014                     __ptext196:
 25680                           	opt callstack 0
 25681  005014                     _GetIp:
 25682                           	opt callstack 10
 25683                           
 25684                           ; BSR set to: 1
 25685                           
 25686                           ; BSR set to: 1
 25687                           ;incstack = 0
 25688  005014  0060  F75C  F10A   	movff	_pHigh,___awdiv@dividend
 25689  00501A  0060  F760  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25690  005020  0E00               	movlw	0
 25691  005022  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25692  005024  0E05               	movlw	5
 25693  005026  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25694  005028  EC7D  F045         	call	___awdiv	;wreg free
 25695  00502C  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25696  005032  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25697  005038  0060  F74C  F10A   	movff	_lrpi,___awdiv@dividend
 25698  00503E  0060  F750  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25699  005044  0E00               	movlw	0
 25700  005046  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25701  005048  0E05               	movlw	5
 25702  00504A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25703  00504C  EC7D  F045         	call	___awdiv	;wreg free
 25704  005050  510A               	movf	?___awdiv& (0+255),w,b
 25705  005052  5D14               	subwf	??_GetIp& (0+255),w,b
 25706  005054  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25707  005056  0A80               	xorlw	128
 25708  005058  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25709  00505A  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25710  00505C  0A80               	xorlw	128
 25711  00505E  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25712  005060  A0D8               	btfss	status,0,c
 25713  005062  D00D               	goto	l18692
 25714                           
 25715                           ; BSR set to: 1
 25716  005064  0060  F75C  F10A   	movff	_pHigh,___awdiv@dividend
 25717  00506A  0060  F760  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25718  005070  0E00               	movlw	0
 25719  005072  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25720  005074  0E05               	movlw	5
 25721  005076  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25722  005078  EC7D  F045         	call	___awdiv	;wreg free
 25723  00507C  D00C               	goto	L7
 25724  00507E                     l18692:
 25725                           
 25726                           ; BSR set to: 1
 25727  00507E  0060  F74C  F10A   	movff	_lrpi,___awdiv@dividend
 25728  005084  0060  F750  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25729  00508A  0E00               	movlw	0
 25730  00508C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25731  00508E  0E05               	movlw	5
 25732  005090  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25733  005092  EC7D  F045         	call	___awdiv	;wreg free
 25734  005096                     L7:
 25735  005096  0060  F428  F117   	movff	?___awdiv,_GetIp$4811
 25736  00509C  0060  F42C  F118   	movff	?___awdiv+1,_GetIp$4811+1
 25737                           
 25738                           ; BSR set to: 1
 25739  0050A2  0060  F76C  F10A   	movff	_pi,___awdiv@dividend
 25740  0050A8  0060  F770  F10B   	movff	_pi+1,___awdiv@dividend+1
 25741  0050AE  0E00               	movlw	0
 25742  0050B0  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25743  0050B2  0E05               	movlw	5
 25744  0050B4  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25745  0050B6  EC7D  F045         	call	___awdiv	;wreg free
 25746  0050BA  5117               	movf	_GetIp$4811& (0+255),w,b
 25747  0050BC  5D0A               	subwf	?___awdiv& (0+255),w,b
 25748  0050BE  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25749  0050C0  0A80               	xorlw	128
 25750  0050C2  6F14               	movwf	??_GetIp& (0+255),b
 25751  0050C4  5118               	movf	(_GetIp$4811+1)& (0+255),w,b
 25752  0050C6  0A80               	xorlw	128
 25753  0050C8  5914               	subwfb	??_GetIp& (0+255),w,b
 25754  0050CA  A0D8               	btfss	status,0,c
 25755  0050CC  D013               	goto	l18696
 25756                           
 25757                           ; BSR set to: 1
 25758  0050CE  0060  F76C  F10A   	movff	_pi,___awdiv@dividend
 25759  0050D4  0060  F770  F10B   	movff	_pi+1,___awdiv@dividend+1
 25760  0050DA  0E00               	movlw	0
 25761  0050DC  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25762  0050DE  0E05               	movlw	5
 25763  0050E0  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25764  0050E2  EC7D  F045         	call	___awdiv	;wreg free
 25765  0050E6  0060  F428  F112   	movff	?___awdiv,?_GetIp
 25766  0050EC  0060  F42C  F113   	movff	?___awdiv+1,?_GetIp+1
 25767  0050F2  0012               	return	
 25768  0050F4                     l18696:
 25769                           
 25770                           ; BSR set to: 1
 25771  0050F4  0060  F75C  F10A   	movff	_pHigh,___awdiv@dividend
 25772  0050FA  0060  F760  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25773  005100  0E00               	movlw	0
 25774  005102  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25775  005104  0E05               	movlw	5
 25776  005106  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25777  005108  EC7D  F045         	call	___awdiv	;wreg free
 25778  00510C  0060  F428  F114   	movff	?___awdiv,??_GetIp
 25779  005112  0060  F42C  F115   	movff	?___awdiv+1,??_GetIp+1
 25780  005118  0060  F74C  F10A   	movff	_lrpi,___awdiv@dividend
 25781  00511E  0060  F750  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25782  005124  0E00               	movlw	0
 25783  005126  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25784  005128  0E05               	movlw	5
 25785  00512A  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25786  00512C  EC7D  F045         	call	___awdiv	;wreg free
 25787  005130  510A               	movf	?___awdiv& (0+255),w,b
 25788  005132  5D14               	subwf	??_GetIp& (0+255),w,b
 25789  005134  5115               	movf	(??_GetIp+1)& (0+255),w,b
 25790  005136  0A80               	xorlw	128
 25791  005138  6F16               	movwf	(??_GetIp+2)& (0+255),b
 25792  00513A  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25793  00513C  0A80               	xorlw	128
 25794  00513E  5916               	subwfb	(??_GetIp+2)& (0+255),w,b
 25795  005140  A0D8               	btfss	status,0,c
 25796  005142  D00D               	goto	l18700
 25797                           
 25798                           ; BSR set to: 1
 25799  005144  0060  F75C  F10A   	movff	_pHigh,___awdiv@dividend
 25800  00514A  0060  F760  F10B   	movff	_pHigh+1,___awdiv@dividend+1
 25801  005150  0E00               	movlw	0
 25802  005152  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25803  005154  0E05               	movlw	5
 25804  005156  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25805  005158  EC7D  F045         	call	___awdiv	;wreg free
 25806  00515C  D00C               	goto	L8
 25807  00515E                     l18700:
 25808                           
 25809                           ; BSR set to: 1
 25810  00515E  0060  F74C  F10A   	movff	_lrpi,___awdiv@dividend
 25811  005164  0060  F750  F10B   	movff	_lrpi+1,___awdiv@dividend+1
 25812  00516A  0E00               	movlw	0
 25813  00516C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25814  00516E  0E05               	movlw	5
 25815  005170  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25816  005172  EC7D  F045         	call	___awdiv	;wreg free
 25817  005176                     L8:
 25818  005176  0060  F428  F119   	movff	?___awdiv,_GetIp$4812
 25819  00517C  0060  F42C  F11A   	movff	?___awdiv+1,_GetIp$4812+1
 25820                           
 25821                           ; BSR set to: 1
 25822  005182  0060  F464  F112   	movff	_GetIp$4812,?_GetIp
 25823  005188  0060  F468  F113   	movff	_GetIp$4812+1,?_GetIp+1
 25824                           
 25825                           ; BSR set to: 1
 25826  00518E  0012               	return		;funcret
 25827  005190                     __end_of_GetIp:
 25828                           	opt callstack 0
 25829                           
 25830 ;; *************** function _GetEp *****************
 25831 ;; Defined at:
 25832 ;;		line 165 in file "monitor.c"
 25833 ;; Parameters:    Size  Location     Type
 25834 ;;		None
 25835 ;; Auto vars:     Size  Location     Type
 25836 ;;		None
 25837 ;; Return value:  Size  Location     Type
 25838 ;;                  2   18[BANK1 ] short 
 25839 ;; Registers used:
 25840 ;;		wreg, status,2, status,0, cstack
 25841 ;; Tracked objects:
 25842 ;;		On entry : 3F/1
 25843 ;;		On exit  : 3F/1
 25844 ;;		Unchanged: 0/0
 25845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25846 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25847 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25848 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25849 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25850 ;;Total ram usage:        9 bytes
 25851 ;; Hardware stack levels used:    1
 25852 ;; Hardware stack levels required when called:   17
 25853 ;; This function calls:
 25854 ;;		___awdiv
 25855 ;; This function is called by:
 25856 ;;		_ValueDisplay
 25857 ;; This function uses a non-reentrant model
 25858 ;;
 25859                           
 25860                           	psect	text197
 25861  005190                     __ptext197:
 25862                           	opt callstack 0
 25863  005190                     _GetEp:
 25864                           	opt callstack 10
 25865                           
 25866                           ; BSR set to: 1
 25867                           
 25868                           ; BSR set to: 1
 25869                           ;incstack = 0
 25870  005190  0060  F754  F10A   	movff	_pLow,___awdiv@dividend
 25871  005196  0060  F758  F10B   	movff	_pLow+1,___awdiv@dividend+1
 25872  00519C  0E00               	movlw	0
 25873  00519E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25874  0051A0  0E05               	movlw	5
 25875  0051A2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25876  0051A4  EC7D  F045         	call	___awdiv	;wreg free
 25877  0051A8  0060  F428  F114   	movff	?___awdiv,??_GetEp
 25878  0051AE  0060  F42C  F115   	movff	?___awdiv+1,??_GetEp+1
 25879  0051B4  0060  F744  F10A   	movff	_lrpe,___awdiv@dividend
 25880  0051BA  0060  F748  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 25881  0051C0  0E00               	movlw	0
 25882  0051C2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25883  0051C4  0E05               	movlw	5
 25884  0051C6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25885  0051C8  EC7D  F045         	call	___awdiv	;wreg free
 25886  0051CC  510A               	movf	?___awdiv& (0+255),w,b
 25887  0051CE  5D14               	subwf	??_GetEp& (0+255),w,b
 25888  0051D0  5115               	movf	(??_GetEp+1)& (0+255),w,b
 25889  0051D2  0A80               	xorlw	128
 25890  0051D4  6F16               	movwf	(??_GetEp+2)& (0+255),b
 25891  0051D6  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25892  0051D8  0A80               	xorlw	128
 25893  0051DA  5916               	subwfb	(??_GetEp+2)& (0+255),w,b
 25894  0051DC  A0D8               	btfss	status,0,c
 25895  0051DE  D00D               	goto	l18710
 25896                           
 25897                           ; BSR set to: 1
 25898  0051E0  0060  F754  F10A   	movff	_pLow,___awdiv@dividend
 25899  0051E6  0060  F758  F10B   	movff	_pLow+1,___awdiv@dividend+1
 25900  0051EC  0E00               	movlw	0
 25901  0051EE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25902  0051F0  0E05               	movlw	5
 25903  0051F2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25904  0051F4  EC7D  F045         	call	___awdiv	;wreg free
 25905  0051F8  D00C               	goto	L9
 25906  0051FA                     l18710:
 25907                           
 25908                           ; BSR set to: 1
 25909  0051FA  0060  F744  F10A   	movff	_lrpe,___awdiv@dividend
 25910  005200  0060  F748  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 25911  005206  0E00               	movlw	0
 25912  005208  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25913  00520A  0E05               	movlw	5
 25914  00520C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25915  00520E  EC7D  F045         	call	___awdiv	;wreg free
 25916  005212                     L9:
 25917  005212  0060  F428  F117   	movff	?___awdiv,_GetEp$4808
 25918  005218  0060  F42C  F118   	movff	?___awdiv+1,_GetEp$4808+1
 25919                           
 25920                           ; BSR set to: 1
 25921  00521E  0060  F764  F10A   	movff	_pe,___awdiv@dividend
 25922  005224  0060  F768  F10B   	movff	_pe+1,___awdiv@dividend+1
 25923  00522A  0E00               	movlw	0
 25924  00522C  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25925  00522E  0E05               	movlw	5
 25926  005230  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25927  005232  EC7D  F045         	call	___awdiv	;wreg free
 25928  005236  5117               	movf	_GetEp$4808& (0+255),w,b
 25929  005238  5D0A               	subwf	?___awdiv& (0+255),w,b
 25930  00523A  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25931  00523C  0A80               	xorlw	128
 25932  00523E  6F14               	movwf	??_GetEp& (0+255),b
 25933  005240  5118               	movf	(_GetEp$4808+1)& (0+255),w,b
 25934  005242  0A80               	xorlw	128
 25935  005244  5914               	subwfb	??_GetEp& (0+255),w,b
 25936  005246  A0D8               	btfss	status,0,c
 25937  005248  D013               	goto	l18714
 25938                           
 25939                           ; BSR set to: 1
 25940  00524A  0060  F764  F10A   	movff	_pe,___awdiv@dividend
 25941  005250  0060  F768  F10B   	movff	_pe+1,___awdiv@dividend+1
 25942  005256  0E00               	movlw	0
 25943  005258  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25944  00525A  0E05               	movlw	5
 25945  00525C  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25946  00525E  EC7D  F045         	call	___awdiv	;wreg free
 25947  005262  0060  F428  F112   	movff	?___awdiv,?_GetEp
 25948  005268  0060  F42C  F113   	movff	?___awdiv+1,?_GetEp+1
 25949  00526E  0012               	return	
 25950  005270                     l18714:
 25951                           
 25952                           ; BSR set to: 1
 25953  005270  0060  F754  F10A   	movff	_pLow,___awdiv@dividend
 25954  005276  0060  F758  F10B   	movff	_pLow+1,___awdiv@dividend+1
 25955  00527C  0E00               	movlw	0
 25956  00527E  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25957  005280  0E05               	movlw	5
 25958  005282  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25959  005284  EC7D  F045         	call	___awdiv	;wreg free
 25960  005288  0060  F428  F114   	movff	?___awdiv,??_GetEp
 25961  00528E  0060  F42C  F115   	movff	?___awdiv+1,??_GetEp+1
 25962  005294  0060  F744  F10A   	movff	_lrpe,___awdiv@dividend
 25963  00529A  0060  F748  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 25964  0052A0  0E00               	movlw	0
 25965  0052A2  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25966  0052A4  0E05               	movlw	5
 25967  0052A6  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25968  0052A8  EC7D  F045         	call	___awdiv	;wreg free
 25969  0052AC  510A               	movf	?___awdiv& (0+255),w,b
 25970  0052AE  5D14               	subwf	??_GetEp& (0+255),w,b
 25971  0052B0  5115               	movf	(??_GetEp+1)& (0+255),w,b
 25972  0052B2  0A80               	xorlw	128
 25973  0052B4  6F16               	movwf	(??_GetEp+2)& (0+255),b
 25974  0052B6  510B               	movf	(?___awdiv+1)& (0+255),w,b
 25975  0052B8  0A80               	xorlw	128
 25976  0052BA  5916               	subwfb	(??_GetEp+2)& (0+255),w,b
 25977  0052BC  A0D8               	btfss	status,0,c
 25978  0052BE  D00D               	goto	l18718
 25979                           
 25980                           ; BSR set to: 1
 25981  0052C0  0060  F754  F10A   	movff	_pLow,___awdiv@dividend
 25982  0052C6  0060  F758  F10B   	movff	_pLow+1,___awdiv@dividend+1
 25983  0052CC  0E00               	movlw	0
 25984  0052CE  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25985  0052D0  0E05               	movlw	5
 25986  0052D2  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25987  0052D4  EC7D  F045         	call	___awdiv	;wreg free
 25988  0052D8  D00C               	goto	L10
 25989  0052DA                     l18718:
 25990                           
 25991                           ; BSR set to: 1
 25992  0052DA  0060  F744  F10A   	movff	_lrpe,___awdiv@dividend
 25993  0052E0  0060  F748  F10B   	movff	_lrpe+1,___awdiv@dividend+1
 25994  0052E6  0E00               	movlw	0
 25995  0052E8  6F0D               	movwf	(___awdiv@divisor+1)& (0+255),b
 25996  0052EA  0E05               	movlw	5
 25997  0052EC  6F0C               	movwf	___awdiv@divisor& (0+255),b
 25998  0052EE  EC7D  F045         	call	___awdiv	;wreg free
 25999  0052F2                     L10:
 26000  0052F2  0060  F428  F119   	movff	?___awdiv,_GetEp$4809
 26001  0052F8  0060  F42C  F11A   	movff	?___awdiv+1,_GetEp$4809+1
 26002                           
 26003                           ; BSR set to: 1
 26004  0052FE  0060  F464  F112   	movff	_GetEp$4809,?_GetEp
 26005  005304  0060  F468  F113   	movff	_GetEp$4809+1,?_GetEp+1
 26006                           
 26007                           ; BSR set to: 1
 26008  00530A  0012               	return		;funcret
 26009  00530C                     __end_of_GetEp:
 26010                           	opt callstack 0
 26011                           
 26012 ;; *************** function ___awdiv *****************
 26013 ;; Defined at:
 26014 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 26015 ;; Parameters:    Size  Location     Type
 26016 ;;  dividend        2   10[BANK1 ] int 
 26017 ;;  divisor         2   12[BANK1 ] int 
 26018 ;; Auto vars:     Size  Location     Type
 26019 ;;  quotient        2   16[BANK1 ] int 
 26020 ;;  sign            1   15[BANK1 ] unsigned char 
 26021 ;;  counter         1   14[BANK1 ] unsigned char 
 26022 ;; Return value:  Size  Location     Type
 26023 ;;                  2   10[BANK1 ] int 
 26024 ;; Registers used:
 26025 ;;		wreg, status,2, status,0
 26026 ;; Tracked objects:
 26027 ;;		On entry : 3F/1
 26028 ;;		On exit  : 3F/1
 26029 ;;		Unchanged: 0/0
 26030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26031 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26032 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26034 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26035 ;;Total ram usage:        8 bytes
 26036 ;; Hardware stack levels used:    1
 26037 ;; Hardware stack levels required when called:   16
 26038 ;; This function calls:
 26039 ;;		Nothing
 26040 ;; This function is called by:
 26041 ;;		_ValueDisplay
 26042 ;;		_GetEp
 26043 ;;		_GetIp
 26044 ;;		_GetPmax
 26045 ;;		_GetMaxPressure
 26046 ;;		_GetTargetIp
 26047 ;;		_GetTargetEp
 26048 ;;		_MonitorDump
 26049 ;;		_SetCalibrateState
 26050 ;;		_GetPressure_pa
 26051 ;;		_SeePressure_pa
 26052 ;;		_GetPressureV_pa
 26053 ;;		_SeePressureV_pa
 26054 ;; This function uses a non-reentrant model
 26055 ;;
 26056                           
 26057                           	psect	text198
 26058  008AFA                     __ptext198:
 26059                           	opt callstack 0
 26060  008AFA                     ___awdiv:
 26061                           	opt callstack 13
 26062                           
 26063                           ; BSR set to: 1
 26064                           
 26065                           ; BSR set to: 1
 26066                           ;incstack = 0
 26067  008AFA  0E00               	movlw	0
 26068  008AFC  6F0F               	movwf	___awdiv@sign& (0+255),b
 26069                           
 26070                           ; BSR set to: 1
 26071  008AFE  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26072  008B00  D006               	goto	l18384
 26073                           
 26074                           ; BSR set to: 1
 26075  008B02  6D0C               	negf	___awdiv@divisor& (0+255),b
 26076  008B04  1F0D               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26077  008B06  B0D8               	btfsc	status,0,c
 26078  008B08  2B0D               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26079                           
 26080                           ; BSR set to: 1
 26081  008B0A  0E01               	movlw	1
 26082  008B0C  6F0F               	movwf	___awdiv@sign& (0+255),b
 26083  008B0E                     l18384:
 26084                           
 26085                           ; BSR set to: 1
 26086  008B0E  AF0B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26087  008B10  D006               	goto	l18390
 26088                           
 26089                           ; BSR set to: 1
 26090  008B12  6D0A               	negf	___awdiv@dividend& (0+255),b
 26091  008B14  1F0B               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26092  008B16  B0D8               	btfsc	status,0,c
 26093  008B18  2B0B               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26094                           
 26095                           ; BSR set to: 1
 26096  008B1A  0E01               	movlw	1
 26097  008B1C  1B0F               	xorwf	___awdiv@sign& (0+255),f,b
 26098  008B1E                     l18390:
 26099                           
 26100                           ; BSR set to: 1
 26101  008B1E  0E00               	movlw	0
 26102  008B20  6F11               	movwf	(___awdiv@quotient+1)& (0+255),b
 26103  008B22  0E00               	movlw	0
 26104  008B24  6F10               	movwf	___awdiv@quotient& (0+255),b
 26105                           
 26106                           ; BSR set to: 1
 26107  008B26  510C               	movf	___awdiv@divisor& (0+255),w,b
 26108  008B28  110D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26109  008B2A  B4D8               	btfsc	status,2,c
 26110  008B2C  D01C               	goto	l18412
 26111                           
 26112                           ; BSR set to: 1
 26113  008B2E  0E01               	movlw	1
 26114  008B30  6F0E               	movwf	___awdiv@counter& (0+255),b
 26115  008B32  D004               	goto	l18398
 26116  008B34                     l18396:
 26117                           
 26118                           ; BSR set to: 1
 26119  008B34  90D8               	bcf	status,0,c
 26120  008B36  370C               	rlcf	___awdiv@divisor& (0+255),f,b
 26121  008B38  370D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26122  008B3A  2B0E               	incf	___awdiv@counter& (0+255),f,b
 26123  008B3C                     l18398:
 26124                           
 26125                           ; BSR set to: 1
 26126  008B3C  AF0D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26127  008B3E  D7FA               	goto	l18396
 26128  008B40                     u18100:
 26129                           
 26130                           ; BSR set to: 1
 26131  008B40  90D8               	bcf	status,0,c
 26132  008B42  3710               	rlcf	___awdiv@quotient& (0+255),f,b
 26133  008B44  3711               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26134                           
 26135                           ; BSR set to: 1
 26136  008B46  510C               	movf	___awdiv@divisor& (0+255),w,b
 26137  008B48  5D0A               	subwf	___awdiv@dividend& (0+255),w,b
 26138  008B4A  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26139  008B4C  590B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26140  008B4E  A0D8               	btfss	status,0,c
 26141  008B50  D005               	goto	l18408
 26142                           
 26143                           ; BSR set to: 1
 26144  008B52  510C               	movf	___awdiv@divisor& (0+255),w,b
 26145  008B54  5F0A               	subwf	___awdiv@dividend& (0+255),f,b
 26146  008B56  510D               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26147  008B58  5B0B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26148                           
 26149                           ; BSR set to: 1
 26150  008B5A  8110               	bsf	___awdiv@quotient& (0+255),0,b
 26151  008B5C                     l18408:
 26152                           
 26153                           ; BSR set to: 1
 26154  008B5C  90D8               	bcf	status,0,c
 26155  008B5E  330D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26156  008B60  330C               	rrcf	___awdiv@divisor& (0+255),f,b
 26157                           
 26158                           ; BSR set to: 1
 26159  008B62  2F0E               	decfsz	___awdiv@counter& (0+255),f,b
 26160  008B64  D7ED               	goto	u18100
 26161  008B66                     l18412:
 26162                           
 26163                           ; BSR set to: 1
 26164  008B66  510F               	movf	___awdiv@sign& (0+255),w,b
 26165  008B68  B4D8               	btfsc	status,2,c
 26166  008B6A  D004               	goto	l18416
 26167                           
 26168                           ; BSR set to: 1
 26169  008B6C  6D10               	negf	___awdiv@quotient& (0+255),b
 26170  008B6E  1F11               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26171  008B70  B0D8               	btfsc	status,0,c
 26172  008B72  2B11               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26173  008B74                     l18416:
 26174                           
 26175                           ; BSR set to: 1
 26176  008B74  0060  F440  F10A   	movff	___awdiv@quotient,?___awdiv
 26177  008B7A  0060  F444  F10B   	movff	___awdiv@quotient+1,?___awdiv+1
 26178                           
 26179                           ; BSR set to: 1
 26180  008B80  0012               	return		;funcret
 26181  008B82                     __end_of___awdiv:
 26182                           	opt callstack 0
 26183                           
 26184 ;; *************** function _GetDisableAlarmSV1 *****************
 26185 ;; Defined at:
 26186 ;;		line 862 in file "monitor.c"
 26187 ;; Parameters:    Size  Location     Type
 26188 ;;		None
 26189 ;; Auto vars:     Size  Location     Type
 26190 ;;		None
 26191 ;; Return value:  Size  Location     Type
 26192 ;;                  1    wreg      _Bool 
 26193 ;; Registers used:
 26194 ;;		wreg, status,2
 26195 ;; Tracked objects:
 26196 ;;		On entry : 3F/1
 26197 ;;		On exit  : 3F/0
 26198 ;;		Unchanged: 0/0
 26199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26204 ;;Total ram usage:        0 bytes
 26205 ;; Hardware stack levels used:    1
 26206 ;; Hardware stack levels required when called:   16
 26207 ;; This function calls:
 26208 ;;		Nothing
 26209 ;; This function is called by:
 26210 ;;		_ValueDisplay
 26211 ;; This function uses a non-reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text199
 26215  00AF72                     __ptext199:
 26216                           	opt callstack 0
 26217  00AF72                     _GetDisableAlarmSV1:
 26218                           	opt callstack 11
 26219                           
 26220                           ; BSR set to: 1
 26221                           
 26222                           ; BSR set to: 1
 26223                           ;incstack = 0
 26224  00AF72  0100               	movlb	0	; () banked
 26225  00AF74  51EF               	movf	_disableAlarmSV1& (0+255),w,b
 26226                           
 26227                           ; BSR set to: 0
 26228  00AF76  0012               	return		;funcret
 26229  00AF78                     __end_of_GetDisableAlarmSV1:
 26230                           	opt callstack 0
 26231                           
 26232 ;; *************** function _GetBpm *****************
 26233 ;; Defined at:
 26234 ;;		line 164 in file "monitor.c"
 26235 ;; Parameters:    Size  Location     Type
 26236 ;;		None
 26237 ;; Auto vars:     Size  Location     Type
 26238 ;;		None
 26239 ;; Return value:  Size  Location     Type
 26240 ;;                  2    4[BANK1 ] short 
 26241 ;; Registers used:
 26242 ;;		None
 26243 ;; Tracked objects:
 26244 ;;		On entry : 3F/1
 26245 ;;		On exit  : 3F/1
 26246 ;;		Unchanged: 3F/0
 26247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;Total ram usage:        2 bytes
 26253 ;; Hardware stack levels used:    1
 26254 ;; Hardware stack levels required when called:   16
 26255 ;; This function calls:
 26256 ;;		Nothing
 26257 ;; This function is called by:
 26258 ;;		_ValueDisplay
 26259 ;; This function uses a non-reentrant model
 26260 ;;
 26261                           
 26262                           	psect	text200
 26263  00ACA0                     __ptext200:
 26264                           	opt callstack 0
 26265  00ACA0                     _GetBpm:
 26266                           	opt callstack 11
 26267                           
 26268                           ; BSR set to: 1
 26269                           
 26270                           ; BSR set to: 0
 26271                           ;incstack = 0
 26272  00ACA0  0060  F950  F104   	movff	_bpm,?_GetBpm
 26273  00ACA6  0060  F954  F105   	movff	_bpm+1,?_GetBpm+1
 26274                           
 26275                           ; BSR set to: 1
 26276  00ACAC  0012               	return		;funcret
 26277  00ACAE                     __end_of_GetBpm:
 26278                           	opt callstack 0
 26279                           
 26280 ;; *************** function _GetAlarmState *****************
 26281 ;; Defined at:
 26282 ;;		line 431 in file "alarm.c"
 26283 ;; Parameters:    Size  Location     Type
 26284 ;;		None
 26285 ;; Auto vars:     Size  Location     Type
 26286 ;;		None
 26287 ;; Return value:  Size  Location     Type
 26288 ;;                  2    8[BANK1 ] PTR unsigned char 
 26289 ;; Registers used:
 26290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26291 ;; Tracked objects:
 26292 ;;		On entry : 3F/0
 26293 ;;		On exit  : 3F/1
 26294 ;;		Unchanged: 0/0
 26295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26296 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26299 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26300 ;;Total ram usage:        2 bytes
 26301 ;; Hardware stack levels used:    1
 26302 ;; Hardware stack levels required when called:   17
 26303 ;; This function calls:
 26304 ;;		_AnyAlarm
 26305 ;; This function is called by:
 26306 ;;		_ValueDisplay
 26307 ;; This function uses a non-reentrant model
 26308 ;;
 26309                           
 26310                           	psect	text201
 26311  009882                     __ptext201:
 26312                           	opt callstack 0
 26313  009882                     _GetAlarmState:
 26314                           	opt callstack 10
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 26318                           
 26319                           ; BSR set to: 1
 26320                           ;incstack = 0
 26321  009882  0E02               	movlw	2
 26322  009884  0102               	movlb	2	; () banked
 26323  009886  1972               	xorwf	_displayStatus& (0+255),w,b
 26324  009888  1173               	iorwf	(_displayStatus+1)& (0+255),w,b
 26325  00988A  A4D8               	btfss	status,2,c
 26326  00988C  D006               	goto	l18752
 26327                           
 26328                           ; BSR set to: 2
 26329  00988E  0EF0               	movlw	low STR_26
 26330  009890  0101               	movlb	1	; () banked
 26331  009892  6F08               	movwf	?_GetAlarmState& (0+255),b
 26332  009894  0EFF               	movlw	high STR_26
 26333  009896  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26334  009898  0012               	return	
 26335  00989A                     l18752:
 26336                           
 26337                           ; BSR set to: 2
 26338                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 26339  00989A  EC6E  F04F         	call	_AnyAlarm	;wreg free
 26340  00989E  0900               	iorlw	0
 26341  0098A0  B4D8               	btfsc	status,2,c
 26342  0098A2  D009               	goto	l18762
 26343                           
 26344                           ; BSR set to: 1
 26345  0098A4  51EF               	movf	_muteSec& (0+255),w,b
 26346  0098A6  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
 26347  0098A8  B4D8               	btfsc	status,2,c
 26348  0098AA  D005               	goto	l18762
 26349                           
 26350                           ; BSR set to: 1
 26351  0098AC  0EF6               	movlw	low STR_27
 26352  0098AE  6F08               	movwf	?_GetAlarmState& (0+255),b
 26353  0098B0  0EFF               	movlw	high STR_27
 26354  0098B2  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26355  0098B4  0012               	return	
 26356  0098B6                     l18762:
 26357                           
 26358                           ; BSR set to: 1
 26359  0098B6  EC6E  F04F         	call	_AnyAlarm	;wreg free
 26360  0098BA  0900               	iorlw	0
 26361  0098BC  B4D8               	btfsc	status,2,c
 26362  0098BE  D005               	goto	l18768
 26363                           
 26364                           ; BSR set to: 1
 26365  0098C0  0EF3               	movlw	low STR_28
 26366  0098C2  6F08               	movwf	?_GetAlarmState& (0+255),b
 26367  0098C4  0EFF               	movlw	high STR_28
 26368  0098C6  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26369  0098C8  0012               	return	
 26370  0098CA                     l18768:
 26371                           
 26372                           ; BSR set to: 1
 26373                           ;alarm.c: 437:     return "  ";
 26374  0098CA  0EED               	movlw	low (STR_6+14)
 26375  0098CC  6F08               	movwf	?_GetAlarmState& (0+255),b
 26376  0098CE  0EFE               	movlw	high (STR_6+14)
 26377  0098D0  6F09               	movwf	(?_GetAlarmState+1)& (0+255),b
 26378                           
 26379                           ; BSR set to: 1
 26380  0098D2  0012               	return		;funcret
 26381  0098D4                     __end_of_GetAlarmState:
 26382                           	opt callstack 0
 26383                           
 26384 ;; *************** function _AnyAlarm *****************
 26385 ;; Defined at:
 26386 ;;		line 370 in file "alarm.c"
 26387 ;; Parameters:    Size  Location     Type
 26388 ;;		None
 26389 ;; Auto vars:     Size  Location     Type
 26390 ;;  i               2    6[BANK1 ] int 
 26391 ;; Return value:  Size  Location     Type
 26392 ;;                  1    wreg      _Bool 
 26393 ;; Registers used:
 26394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26395 ;; Tracked objects:
 26396 ;;		On entry : 3C/1
 26397 ;;		On exit  : 3F/1
 26398 ;;		Unchanged: 0/0
 26399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26401 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26402 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26403 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26404 ;;Total ram usage:        4 bytes
 26405 ;; Hardware stack levels used:    1
 26406 ;; Hardware stack levels required when called:   16
 26407 ;; This function calls:
 26408 ;;		Nothing
 26409 ;; This function is called by:
 26410 ;;		_MuteAlarm
 26411 ;;		_GetAlarmState
 26412 ;;		_AlarmUpdateLCD
 26413 ;;		_AlarmCheckTask
 26414 ;; This function uses a non-reentrant model
 26415 ;;
 26416                           
 26417                           	psect	text202
 26418  009EDC                     __ptext202:
 26419                           	opt callstack 0
 26420  009EDC                     _AnyAlarm:
 26421                           	opt callstack 13
 26422                           
 26423                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 26424                           
 26425                           ; BSR set to: 1
 26426                           ;incstack = 0
 26427  009EDC  0E00               	movlw	0
 26428  009EDE  0101               	movlb	1	; () banked
 26429  009EE0  6F07               	movwf	(AnyAlarm@i+1)& (0+255),b
 26430  009EE2  0E00               	movlw	0
 26431  009EE4  6F06               	movwf	AnyAlarm@i& (0+255),b
 26432  009EE6                     l18354:
 26433                           
 26434                           ; BSR set to: 1
 26435                           ;alarm.c: 372:         if (alarms[i]) return 1;
 26436  009EE6  90D8               	bcf	status,0,c
 26437  009EE8  3506               	rlcf	AnyAlarm@i& (0+255),w,b
 26438  009EEA  6ED9               	movwf	fsr2l,c
 26439  009EEC  3507               	rlcf	(AnyAlarm@i+1)& (0+255),w,b
 26440  009EEE  6EDA               	movwf	fsr2h,c
 26441  009EF0  0E00               	movlw	low _alarms
 26442  009EF2  26D9               	addwf	fsr2l,f,c
 26443  009EF4  0E03               	movlw	high _alarms
 26444  009EF6  22DA               	addwfc	fsr2h,f,c
 26445  009EF8  50DE               	movf	postinc2,w,c
 26446  009EFA  10DE               	iorwf	postinc2,w,c
 26447  009EFC  B4D8               	btfsc	status,2,c
 26448  009EFE  D002               	goto	l18360
 26449                           
 26450                           ; BSR set to: 1
 26451  009F00  0E01               	movlw	1
 26452  009F02  0012               	return	
 26453  009F04                     l18360:
 26454                           
 26455                           ; BSR set to: 1
 26456                           ;alarm.c: 373:     }
 26457  009F04  4B06               	infsnz	AnyAlarm@i& (0+255),f,b
 26458  009F06  2B07               	incf	(AnyAlarm@i+1)& (0+255),f,b
 26459                           
 26460                           ; BSR set to: 1
 26461  009F08  5107               	movf	(AnyAlarm@i+1)& (0+255),w,b
 26462  009F0A  E104               	bnz	u18050
 26463  009F0C  0E13               	movlw	19
 26464  009F0E  5D06               	subwf	AnyAlarm@i& (0+255),w,b
 26465  009F10  A0D8               	btfss	status,0,c
 26466  009F12  D7E9               	goto	l18354
 26467  009F14                     u18050:
 26468                           
 26469                           ; BSR set to: 1
 26470                           ;alarm.c: 374:     return 0;
 26471  009F14  0E00               	movlw	0
 26472                           
 26473                           ; BSR set to: 1
 26474  009F16  0012               	return		;funcret
 26475  009F18                     __end_of_AnyAlarm:
 26476                           	opt callstack 0
 26477                           
 26478 ;; *************** function _AlarmSet *****************
 26479 ;; Defined at:
 26480 ;;		line 351 in file "alarm.c"
 26481 ;; Parameters:    Size  Location     Type
 26482 ;;  id              1    wreg     unsigned char 
 26483 ;; Auto vars:     Size  Location     Type
 26484 ;;  id              1    4[BANK1 ] unsigned char 
 26485 ;; Return value:  Size  Location     Type
 26486 ;;                  1    wreg      void 
 26487 ;; Registers used:
 26488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26489 ;; Tracked objects:
 26490 ;;		On entry : 3F/2
 26491 ;;		On exit  : 3F/1
 26492 ;;		Unchanged: 0/0
 26493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26495 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26497 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26498 ;;Total ram usage:        1 bytes
 26499 ;; Hardware stack levels used:    1
 26500 ;; Hardware stack levels required when called:   16
 26501 ;; This function calls:
 26502 ;;		Nothing
 26503 ;; This function is called by:
 26504 ;;		_AlarmCheckTask
 26505 ;; This function uses a non-reentrant model
 26506 ;;
 26507                           
 26508                           	psect	text203
 26509  00A73A                     __ptext203:
 26510                           	opt callstack 0
 26511  00A73A                     _AlarmSet:
 26512                           	opt callstack 13
 26513                           
 26514                           ; BSR set to: 1
 26515                           ;incstack = 0
 26516                           ;AlarmSet@id stored from wreg
 26517  00A73A  0101               	movlb	1	; () banked
 26518  00A73C  6F04               	movwf	AlarmSet@id& (0+255),b
 26519                           
 26520                           ;alarm.c: 352:     alarms[id] = 1;
 26521  00A73E  0101               	movlb	1	; () banked
 26522  00A740  5104               	movf	AlarmSet@id& (0+255),w,b
 26523  00A742  0D02               	mullw	2
 26524  00A744  0E00               	movlw	low _alarms
 26525  00A746  24F3               	addwf	243,w,c
 26526  00A748  6ED9               	movwf	fsr2l,c
 26527  00A74A  0E03               	movlw	high _alarms
 26528  00A74C  20F4               	addwfc	prodh,w,c
 26529  00A74E  6EDA               	movwf	fsr2h,c
 26530  00A750  0E01               	movlw	1
 26531  00A752  6EDE               	movwf	postinc2,c
 26532  00A754  0E00               	movlw	0
 26533  00A756  6EDD               	movwf	postdec2,c
 26534                           
 26535                           ; BSR set to: 1
 26536  00A758  0012               	return		;funcret
 26537  00A75A                     __end_of_AlarmSet:
 26538                           	opt callstack 0
 26539                           
 26540 ;; *************** function _AlarmClear *****************
 26541 ;; Defined at:
 26542 ;;		line 355 in file "alarm.c"
 26543 ;; Parameters:    Size  Location     Type
 26544 ;;  id              1    wreg     unsigned char 
 26545 ;; Auto vars:     Size  Location     Type
 26546 ;;  id              1    4[BANK1 ] unsigned char 
 26547 ;; Return value:  Size  Location     Type
 26548 ;;                  1    wreg      void 
 26549 ;; Registers used:
 26550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26551 ;; Tracked objects:
 26552 ;;		On entry : 3F/2
 26553 ;;		On exit  : 3F/1
 26554 ;;		Unchanged: 0/0
 26555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26557 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26559 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26560 ;;Total ram usage:        1 bytes
 26561 ;; Hardware stack levels used:    1
 26562 ;; Hardware stack levels required when called:   16
 26563 ;; This function calls:
 26564 ;;		Nothing
 26565 ;; This function is called by:
 26566 ;;		_AlarmCheckTask
 26567 ;; This function uses a non-reentrant model
 26568 ;;
 26569                           
 26570                           	psect	text204
 26571  00A75A                     __ptext204:
 26572                           	opt callstack 0
 26573  00A75A                     _AlarmClear:
 26574                           	opt callstack 13
 26575                           
 26576                           ; BSR set to: 1
 26577                           ;incstack = 0
 26578                           ;AlarmClear@id stored from wreg
 26579  00A75A  0101               	movlb	1	; () banked
 26580  00A75C  6F04               	movwf	AlarmClear@id& (0+255),b
 26581                           
 26582                           ;alarm.c: 356:     alarms[id] = 0;
 26583  00A75E  0101               	movlb	1	; () banked
 26584  00A760  5104               	movf	AlarmClear@id& (0+255),w,b
 26585  00A762  0D02               	mullw	2
 26586  00A764  0E00               	movlw	low _alarms
 26587  00A766  24F3               	addwf	243,w,c
 26588  00A768  6ED9               	movwf	fsr2l,c
 26589  00A76A  0E03               	movlw	high _alarms
 26590  00A76C  20F4               	addwfc	prodh,w,c
 26591  00A76E  6EDA               	movwf	fsr2h,c
 26592  00A770  0E00               	movlw	0
 26593  00A772  6EDE               	movwf	postinc2,c
 26594  00A774  0E00               	movlw	0
 26595  00A776  6EDD               	movwf	postdec2,c
 26596                           
 26597                           ; BSR set to: 1
 26598  00A778  0012               	return		;funcret
 26599  00A77A                     __end_of_AlarmClear:
 26600                           	opt callstack 0
 26601                           
 26602 ;; *************** function _INTERRUPT_InterruptManager *****************
 26603 ;; Defined at:
 26604 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 26605 ;; Parameters:    Size  Location     Type
 26606 ;;		None
 26607 ;; Auto vars:     Size  Location     Type
 26608 ;;		None
 26609 ;; Return value:  Size  Location     Type
 26610 ;;                  1    wreg      void 
 26611 ;; Registers used:
 26612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26613 ;; Tracked objects:
 26614 ;;		On entry : 0/0
 26615 ;;		On exit  : 0/0
 26616 ;;		Unchanged: 0/0
 26617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26620 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26621 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26622 ;;Total ram usage:        4 bytes
 26623 ;; Hardware stack levels used:    1
 26624 ;; Hardware stack levels required when called:   15
 26625 ;; This function calls:
 26626 ;;		Absolute function
 26627 ;;		_ADCC_ISR
 26628 ;;		_CMP1_ISR
 26629 ;;		_I2C2_Isr
 26630 ;;		_TMR0_ISR
 26631 ;;		_TMR1_ISR
 26632 ;;		_TMR4_ISR
 26633 ;;		_TMR5_ISR
 26634 ;;		_TMR6_ISR
 26635 ;;		_UART1_Receive_ISR
 26636 ;;		_UART1_Transmit_ISR
 26637 ;; This function is called by:
 26638 ;;		Interrupt level 2
 26639 ;; This function uses a non-reentrant model
 26640 ;;
 26641                           
 26642                           	psect	text205
 26643  00734A                     __ptext205:
 26644                           	opt callstack 0
 26645  00734A                     _INTERRUPT_InterruptManager:
 26646                           	opt callstack 2
 26647                           
 26648                           ; BSR set to: 1
 26649                           ;incstack = 0
 26650  00734A  006F FFD8  F100    	movff	tblptrl,??_INTERRUPT_InterruptManager
 26651  007350  006F FFDC  F101    	movff	tblptrh,??_INTERRUPT_InterruptManager+1
 26652  007356  006F FFE0  F102    	movff	tblptru,??_INTERRUPT_InterruptManager+2
 26653  00735C  006F FFD4  F103    	movff	tablat,??_INTERRUPT_InterruptManager+3
 26654                           
 26655                           ;mcc_generated_files/interrupt_manager.c: 61:    if(PIE1bits.ADIE == 1 && PIR1bits.ADIF 
      +                          == 1)
 26656  007362  0139               	movlb	57	; () banked
 26657  007364  B591               	btfsc	145,2,b	;volatile
 26658                           
 26659                           ; BSR set to: 57
 26660  007366  A5A1               	btfss	161,2,b	;volatile
 26661  007368  D003               	goto	i2l264
 26662                           
 26663                           ; BSR set to: 57
 26664                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         ADCC_ISR();
 26665  00736A  EC6C  F053         	call	_ADCC_ISR	;wreg free
 26666                           
 26667                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 26668  00736E  D056               	goto	i2l285
 26669  007370                     i2l264:
 26670                           
 26671                           ; BSR set to: 57
 26672  007370  B993               	btfsc	147,4,b	;volatile
 26673                           
 26674                           ; BSR set to: 57
 26675  007372  A9A3               	btfss	163,4,b	;volatile
 26676  007374  D009               	goto	i2l266
 26677                           
 26678                           ; BSR set to: 57
 26679                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_TxInterruptHandler();
 26680  007376  D801               	call	i2u2230_48
 26681  007378  D051               	goto	i2l285
 26682  00737A                     i2u2230_48:
 26683  00737A  0005               	push	
 26684  00737C  6EFA               	movwf	pclath,c
 26685  00737E  0102               	movlb	2	; () banked
 26686  007380  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 26687  007382  6EFD               	movwf	tosl,c
 26688  007384  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 26689  007386  D01D               	goto	L12
 26690  007388                     i2l266:
 26691                           
 26692                           ; BSR set to: 57
 26693  007388  B793               	btfsc	147,3,b	;volatile
 26694                           
 26695                           ; BSR set to: 57
 26696  00738A  A7A3               	btfss	163,3,b	;volatile
 26697  00738C  D009               	goto	i2l268
 26698                           
 26699                           ; BSR set to: 57
 26700                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         UART1_RxInterruptHandler();
 26701  00738E  D801               	call	i2u2233_48
 26702  007390  D045               	goto	i2l285
 26703  007392                     i2u2233_48:
 26704  007392  0005               	push	
 26705  007394  6EFA               	movwf	pclath,c
 26706  007396  0102               	movlb	2	; () banked
 26707  007398  51F1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 26708  00739A  6EFD               	movwf	tosl,c
 26709  00739C  51F2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 26710  00739E  D011               	goto	L12
 26711  0073A0                     i2l268:
 26712                           
 26713                           ; BSR set to: 57
 26714  0073A0  BF93               	btfsc	147,7,b	;volatile
 26715                           
 26716                           ; BSR set to: 57
 26717  0073A2  AFA3               	btfss	163,7,b	;volatile
 26718  0073A4  D003               	goto	i2l270
 26719                           
 26720                           ; BSR set to: 57
 26721                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         TMR0_ISR();
 26722  0073A6  EC4A  F053         	call	_TMR0_ISR	;wreg free
 26723                           
 26724                           ;mcc_generated_files/interrupt_manager.c: 76:     }
 26725  0073AA  D038               	goto	i2l285
 26726  0073AC                     i2l270:
 26727                           
 26728                           ; BSR set to: 57
 26729  0073AC  B396               	btfsc	150,1,b	;volatile
 26730                           
 26731                           ; BSR set to: 57
 26732  0073AE  A3A6               	btfss	166,1,b	;volatile
 26733  0073B0  D00C               	goto	i2l272
 26734  0073B2                     i2u2237_40:
 26735                           
 26736                           ; BSR set to: 57
 26737                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         I2C2_InterruptHandler();
 26738  0073B2  D801               	call	i2u2238_48
 26739  0073B4  D033               	goto	i2l285
 26740  0073B6                     i2u2238_48:
 26741  0073B6  0005               	push	
 26742  0073B8  6EFA               	movwf	pclath,c
 26743  0073BA  0100               	movlb	0	; () banked
 26744  0073BC  51EA               	movf	_I2C2_InterruptHandler& (0+255),w,b
 26745  0073BE  6EFD               	movwf	tosl,c
 26746  0073C0  51EB               	movf	(_I2C2_InterruptHandler+1)& (0+255),w,b
 26747  0073C2                     L12:
 26748  0073C2  6EFE               	movwf	tosh,c
 26749  0073C4  6AFF               	clrf	tosu,c
 26750  0073C6  50FA               	movf	pclath,w,c
 26751  0073C8  0012               	return		;indir
 26752  0073CA                     i2l272:
 26753                           
 26754                           ; BSR set to: 57
 26755  0073CA  AD95               	btfss	149,6,b	;volatile
 26756  0073CC  D002               	goto	i2l274
 26757                           
 26758                           ; BSR set to: 57
 26759  0073CE  BDA5               	btfsc	165,6,b	;volatile
 26760  0073D0  D7F0               	goto	i2u2237_40
 26761  0073D2                     i2l274:
 26762                           
 26763                           ; BSR set to: 57
 26764  0073D2  A196               	btfss	150,0,b	;volatile
 26765  0073D4  D002               	goto	i2l276
 26766                           
 26767                           ; BSR set to: 57
 26768  0073D6  B1A6               	btfsc	166,0,b	;volatile
 26769  0073D8  D7EC               	goto	i2u2237_40
 26770  0073DA                     i2l276:
 26771                           
 26772                           ; BSR set to: 57
 26773  0073DA  AF95               	btfss	149,7,b	;volatile
 26774  0073DC  D002               	goto	i2l278
 26775                           
 26776                           ; BSR set to: 57
 26777  0073DE  BFA5               	btfsc	165,7,b	;volatile
 26778  0073E0  D7E8               	goto	i2u2237_40
 26779  0073E2                     i2l278:
 26780                           
 26781                           ; BSR set to: 57
 26782  0073E2  B199               	btfsc	153,0,b	;volatile
 26783                           
 26784                           ; BSR set to: 57
 26785  0073E4  A1A9               	btfss	169,0,b	;volatile
 26786  0073E6  D003               	goto	i2l280
 26787                           
 26788                           ; BSR set to: 57
 26789                           ;mcc_generated_files/interrupt_manager.c: 94:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 95:         TMR6_ISR();
 26790  0073E8  EC28  F053         	call	_TMR6_ISR	;wreg free
 26791                           
 26792                           ;mcc_generated_files/interrupt_manager.c: 96:     }
 26793  0073EC  D017               	goto	i2l285
 26794  0073EE                     i2l280:
 26795                           
 26796                           ; BSR set to: 57
 26797  0073EE  BD98               	btfsc	152,6,b	;volatile
 26798                           
 26799                           ; BSR set to: 57
 26800  0073F0  ADA8               	btfss	168,6,b	;volatile
 26801  0073F2  D003               	goto	i2l282
 26802                           
 26803                           ; BSR set to: 57
 26804                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         TMR5_ISR();
 26805  0073F4  ECE6  F050         	call	_TMR5_ISR	;wreg free
 26806                           
 26807                           ;mcc_generated_files/interrupt_manager.c: 100:     }
 26808  0073F8  D011               	goto	i2l285
 26809  0073FA                     i2l282:
 26810                           
 26811                           ; BSR set to: 57
 26812  0073FA  B197               	btfsc	151,0,b	;volatile
 26813                           
 26814                           ; BSR set to: 57
 26815  0073FC  A1A7               	btfss	167,0,b	;volatile
 26816  0073FE  D003               	goto	i2l284
 26817                           
 26818                           ; BSR set to: 57
 26819                           ;mcc_generated_files/interrupt_manager.c: 102:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 103:         TMR4_ISR();
 26820  007400  EC39  F053         	call	_TMR4_ISR	;wreg free
 26821                           
 26822                           ;mcc_generated_files/interrupt_manager.c: 104:     }
 26823  007404  D00B               	goto	i2l285
 26824  007406                     i2l284:
 26825                           
 26826                           ; BSR set to: 57
 26827  007406  B194               	btfsc	148,0,b	;volatile
 26828                           
 26829                           ; BSR set to: 57
 26830  007408  A1A4               	btfss	164,0,b	;volatile
 26831  00740A  D003               	goto	i2l286
 26832                           
 26833                           ; BSR set to: 57
 26834                           ;mcc_generated_files/interrupt_manager.c: 106:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 107:         TMR1_ISR();
 26835  00740C  ECFF  F050         	call	_TMR1_ISR	;wreg free
 26836                           
 26837                           ;mcc_generated_files/interrupt_manager.c: 108:     }
 26838  007410  D005               	goto	i2l285
 26839  007412                     i2l286:
 26840                           
 26841                           ; BSR set to: 57
 26842  007412  B991               	btfsc	145,4,b	;volatile
 26843                           
 26844                           ; BSR set to: 57
 26845  007414  A9A1               	btfss	161,4,b	;volatile
 26846  007416  D002               	goto	i2l285
 26847                           
 26848                           ; BSR set to: 57
 26849                           ;mcc_generated_files/interrupt_manager.c: 110:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 111:         CMP1_ISR();
 26850  007418  EC5B  F053         	call	_CMP1_ISR	;wreg free
 26851  00741C                     i2l285:
 26852                           
 26853                           ; BSR set to: 57
 26854  00741C  0060  F40F  FFF5   	movff	??_INTERRUPT_InterruptManager+3,tablat
 26855  007422  0060  F40B  FFF8   	movff	??_INTERRUPT_InterruptManager+2,tblptru
 26856  007428  0060  F407  FFF7   	movff	??_INTERRUPT_InterruptManager+1,tblptrh
 26857  00742E  0060  F403  FFF6   	movff	??_INTERRUPT_InterruptManager,tblptrl
 26858  007434  0011               	retfie		f
 26859  007436                     __end_of_INTERRUPT_InterruptManager:
 26860                           	opt callstack 0
 26861                           
 26862 ;; *************** function _UART1_Transmit_ISR *****************
 26863 ;; Defined at:
 26864 ;;		line 238 in file "mcc_generated_files/uart1.c"
 26865 ;; Parameters:    Size  Location     Type
 26866 ;;		None
 26867 ;; Auto vars:     Size  Location     Type
 26868 ;;		None
 26869 ;; Return value:  Size  Location     Type
 26870 ;;                  1    wreg      void 
 26871 ;; Registers used:
 26872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26873 ;; Tracked objects:
 26874 ;;		On entry : 3F/2
 26875 ;;		On exit  : 4/0
 26876 ;;		Unchanged: 0/0
 26877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26882 ;;Total ram usage:        0 bytes
 26883 ;; Hardware stack levels used:    1
 26884 ;; This function calls:
 26885 ;;		Nothing
 26886 ;; This function is called by:
 26887 ;;		_UART1_Initialize
 26888 ;;		_INTERRUPT_InterruptManager
 26889 ;; This function uses a non-reentrant model
 26890 ;;
 26891                           
 26892                           	psect	text206
 26893  009B98                     __ptext206:
 26894                           	opt callstack 0
 26895  009B98                     _UART1_Transmit_ISR:
 26896                           	opt callstack 16
 26897                           
 26898                           ; BSR set to: 2
 26899                           ;mcc_generated_files/uart1.c: 241:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 26900                           
 26901                           ;incstack = 0
 26902  009B98  0EB0               	movlw	176
 26903  009B9A  5DEB               	subwf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 26904  009B9C  0E04               	movlw	4
 26905  009B9E  59EC               	subwfb	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 26906  009BA0  B0D8               	btfsc	status,0,c
 26907  009BA2  D01B               	goto	i2l667
 26908                           
 26909                           ; BSR set to: 2
 26910                           ;mcc_generated_files/uart1.c: 242:     {;mcc_generated_files/uart1.c: 243:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 26911  009BA4  0E64               	movlw	low _uart1TxBuffer
 26912  009BA6  0100               	movlb	0	; () banked
 26913  009BA8  25E8               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 26914  009BAA  6ED9               	movwf	fsr2l,c
 26915  009BAC  0E04               	movlw	high _uart1TxBuffer
 26916  009BAE  21E9               	addwfc	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26917  009BB0  6EDA               	movwf	fsr2h,c
 26918  009BB2  50DF               	movf	indf2,w,c
 26919  009BB4  013D               	movlb	61	; () banked
 26920  009BB6  6FEA               	movwf	234,b	;volatile
 26921                           
 26922                           ; BSR set to: 61
 26923  009BB8  0100               	movlb	0	; () banked
 26924  009BBA  4BE8               	infsnz	_uart1TxTail& (0+255),f,b	;volatile
 26925  009BBC  2BE9               	incf	(_uart1TxTail+1)& (0+255),f,b	;volatile
 26926                           
 26927                           ; BSR set to: 0
 26928                           ;mcc_generated_files/uart1.c: 244:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 26929  009BBE  0EB0               	movlw	176
 26930  009BC0  5DE8               	subwf	_uart1TxTail& (0+255),w,b	;volatile
 26931  009BC2  0E04               	movlw	4
 26932  009BC4  59E9               	subwfb	(_uart1TxTail+1)& (0+255),w,b	;volatile
 26933  009BC6  A0D8               	btfss	status,0,c
 26934  009BC8  D004               	goto	i2l15740
 26935                           
 26936                           ; BSR set to: 0
 26937                           ;mcc_generated_files/uart1.c: 245:         {;mcc_generated_files/uart1.c: 246:          
      +                             uart1TxTail = 0;
 26938  009BCA  0E00               	movlw	0
 26939  009BCC  6FE9               	movwf	(_uart1TxTail+1)& (0+255),b	;volatile
 26940  009BCE  0E00               	movlw	0
 26941  009BD0  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 26942  009BD2                     i2l15740:
 26943                           
 26944                           ; BSR set to: 0
 26945                           ;mcc_generated_files/uart1.c: 248:         uart1TxBufferRemaining++;
 26946  009BD2  0102               	movlb	2	; () banked
 26947  009BD4  4BEB               	infsnz	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 26948  009BD6  2BEC               	incf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 26949                           
 26950                           ;mcc_generated_files/uart1.c: 249:     }
 26951  009BD8  0012               	return	
 26952  009BDA                     i2l667:
 26953                           
 26954                           ; BSR set to: 2
 26955                           ;mcc_generated_files/uart1.c: 251:     {;mcc_generated_files/uart1.c: 252:         PIE3b
      +                          its.U1TXIE = 0;
 26956  009BDA  0139               	movlb	57	; () banked
 26957  009BDC  9993               	bcf	147,4,b	;volatile
 26958  009BDE  0012               	return		;funcret
 26959  009BE0                     __end_of_UART1_Transmit_ISR:
 26960                           	opt callstack 0
 26961                           
 26962 ;; *************** function _UART1_Receive_ISR *****************
 26963 ;; Defined at:
 26964 ;;		line 258 in file "mcc_generated_files/uart1.c"
 26965 ;; Parameters:    Size  Location     Type
 26966 ;;		None
 26967 ;; Auto vars:     Size  Location     Type
 26968 ;;		None
 26969 ;; Return value:  Size  Location     Type
 26970 ;;                  1    wreg      void 
 26971 ;; Registers used:
 26972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 26973 ;; Tracked objects:
 26974 ;;		On entry : 3F/2
 26975 ;;		On exit  : 0/0
 26976 ;;		Unchanged: 0/0
 26977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26982 ;;Total ram usage:        0 bytes
 26983 ;; Hardware stack levels used:    1
 26984 ;; Hardware stack levels required when called:    2
 26985 ;; This function calls:
 26986 ;;		Absolute function
 26987 ;;		_UART1_DefaultErrorHandler
 26988 ;;		_UART1_DefaultFramingErrorHandler
 26989 ;;		_UART1_DefaultOverrunErrorHandler
 26990 ;;		_UART1_RxDataHandler
 26991 ;; This function is called by:
 26992 ;;		_UART1_Initialize
 26993 ;;		_INTERRUPT_InterruptManager
 26994 ;; This function uses a non-reentrant model
 26995 ;;
 26996                           
 26997                           	psect	text207
 26998  0085C0                     __ptext207:
 26999                           	opt callstack 0
 27000  0085C0                     _UART1_Receive_ISR:
 27001                           	opt callstack 14
 27002                           
 27003                           ; BSR set to: 2
 27004                           ;mcc_generated_files/uart1.c: 261:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 27005                           
 27006                           ;incstack = 0
 27007  0085C0  0E0A               	movlw	low _uart1RxStatusBuffer
 27008  0085C2  0101               	movlb	1	; () banked
 27009  0085C4  25F7               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27010  0085C6  6ED9               	movwf	fsr2l,c
 27011  0085C8  6ADA               	clrf	fsr2h,c
 27012  0085CA  0E02               	movlw	high _uart1RxStatusBuffer
 27013  0085CC  22DA               	addwfc	fsr2h,f,c
 27014  0085CE  0E00               	movlw	0
 27015  0085D0  6EDF               	movwf	indf2,c
 27016                           
 27017                           ; BSR set to: 1
 27018                           ;mcc_generated_files/uart1.c: 263:     if(U1ERRIRbits.FERIF){
 27019  0085D2  013D               	movlb	61	; () banked
 27020  0085D4  A7F9               	btfss	249,3,b	;volatile
 27021  0085D6  D014               	goto	i2u1404_49
 27022                           
 27023                           ; BSR set to: 61
 27024                           ;mcc_generated_files/uart1.c: 264:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 27025  0085D8  0E0A               	movlw	low _uart1RxStatusBuffer
 27026  0085DA  0101               	movlb	1	; () banked
 27027  0085DC  25F7               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27028  0085DE  6ED9               	movwf	fsr2l,c
 27029  0085E0  6ADA               	clrf	fsr2h,c
 27030  0085E2  0E02               	movlw	high _uart1RxStatusBuffer
 27031  0085E4  22DA               	addwfc	fsr2h,f,c
 27032  0085E6  0102               	movlb	2	; () banked
 27033  0085E8  82DF               	bsf	indf2,1,c
 27034                           
 27035                           ; BSR set to: 2
 27036                           ;mcc_generated_files/uart1.c: 265:         UART1_FramingErrorHandler();
 27037  0085EA  D801               	call	i2u1404_48
 27038  0085EC  D009               	goto	i2u1404_49
 27039  0085EE                     i2u1404_48:
 27040  0085EE  0005               	push	
 27041  0085F0  6EFA               	movwf	pclath,c
 27042  0085F2  51E9               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 27043  0085F4  6EFD               	movwf	tosl,c
 27044  0085F6  51EA               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 27045  0085F8  6EFE               	movwf	tosh,c
 27046  0085FA  6AFF               	clrf	tosu,c
 27047  0085FC  50FA               	movf	pclath,w,c
 27048  0085FE  0012               	return		;indir
 27049  008600                     i2u1404_49:
 27050                           
 27051                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.RXFOIF){
 27052  008600  013D               	movlb	61	; () banked
 27053  008602  A3F9               	btfss	249,1,b	;volatile
 27054  008604  D014               	goto	i2u1406_49
 27055                           
 27056                           ; BSR set to: 61
 27057                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 27058  008606  0E0A               	movlw	low _uart1RxStatusBuffer
 27059  008608  0101               	movlb	1	; () banked
 27060  00860A  25F7               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27061  00860C  6ED9               	movwf	fsr2l,c
 27062  00860E  6ADA               	clrf	fsr2h,c
 27063  008610  0E02               	movlw	high _uart1RxStatusBuffer
 27064  008612  22DA               	addwfc	fsr2h,f,c
 27065  008614  0102               	movlb	2	; () banked
 27066  008616  84DF               	bsf	indf2,2,c
 27067                           
 27068                           ; BSR set to: 2
 27069                           ;mcc_generated_files/uart1.c: 270:         UART1_OverrunErrorHandler();
 27070  008618  D801               	call	i2u1406_48
 27071  00861A  D009               	goto	i2u1406_49
 27072  00861C                     i2u1406_48:
 27073  00861C  0005               	push	
 27074  00861E  6EFA               	movwf	pclath,c
 27075  008620  51E7               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 27076  008622  6EFD               	movwf	tosl,c
 27077  008624  51E8               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 27078  008626  6EFE               	movwf	tosh,c
 27079  008628  6AFF               	clrf	tosu,c
 27080  00862A  50FA               	movf	pclath,w,c
 27081  00862C  0012               	return		;indir
 27082  00862E                     i2u1406_49:
 27083                           
 27084                           ;mcc_generated_files/uart1.c: 273:     if(uart1RxStatusBuffer[uart1RxHead].status){
 27085  00862E  0E0A               	movlw	low _uart1RxStatusBuffer
 27086  008630  0101               	movlb	1	; () banked
 27087  008632  25F7               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27088  008634  6ED9               	movwf	fsr2l,c
 27089  008636  6ADA               	clrf	fsr2h,c
 27090  008638  0E02               	movlw	high _uart1RxStatusBuffer
 27091  00863A  22DA               	addwfc	fsr2h,f,c
 27092  00863C  50DF               	movf	indf2,w,c
 27093  00863E  B4D8               	btfsc	status,2,c
 27094  008640  D00C               	goto	i2l15760
 27095                           
 27096                           ; BSR set to: 1
 27097                           ;mcc_generated_files/uart1.c: 274:         UART1_ErrorHandler();
 27098  008642  D801               	call	i2u1408_48
 27099  008644  0012               	return	
 27100  008646                     i2u1408_48:
 27101  008646  0005               	push	
 27102  008648  6EFA               	movwf	pclath,c
 27103  00864A  0102               	movlb	2	; () banked
 27104  00864C  51E5               	movf	_UART1_ErrorHandler& (0+255),w,b
 27105  00864E  6EFD               	movwf	tosl,c
 27106  008650  51E6               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 27107  008652  6EFE               	movwf	tosh,c
 27108  008654  6AFF               	clrf	tosu,c
 27109  008656  50FA               	movf	pclath,w,c
 27110  008658  0012               	return		;indir
 27111  00865A                     i2l15760:
 27112                           
 27113                           ; BSR set to: 1
 27114                           ;mcc_generated_files/uart1.c: 276:         UART1_RxDataHandler();
 27115  00865A  ECF2  F052         	call	_UART1_RxDataHandler	;wreg free
 27116  00865E  0012               	return		;funcret
 27117  008660                     __end_of_UART1_Receive_ISR:
 27118                           	opt callstack 0
 27119                           
 27120 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 27121 ;; Defined at:
 27122 ;;		line 294 in file "mcc_generated_files/uart1.c"
 27123 ;; Parameters:    Size  Location     Type
 27124 ;;		None
 27125 ;; Auto vars:     Size  Location     Type
 27126 ;;		None
 27127 ;; Return value:  Size  Location     Type
 27128 ;;                  1    wreg      void 
 27129 ;; Registers used:
 27130 ;;		None
 27131 ;; Tracked objects:
 27132 ;;		On entry : 3F/2
 27133 ;;		On exit  : 3F/2
 27134 ;;		Unchanged: 3F/0
 27135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27140 ;;Total ram usage:        0 bytes
 27141 ;; Hardware stack levels used:    1
 27142 ;; This function calls:
 27143 ;;		Nothing
 27144 ;; This function is called by:
 27145 ;;		_UART1_Initialize
 27146 ;;		_UART1_Receive_ISR
 27147 ;; This function uses a non-reentrant model
 27148 ;;
 27149                           
 27150                           	psect	text208
 27151  00B04E                     __ptext208:
 27152                           	opt callstack 0
 27153  00B04E                     _UART1_DefaultOverrunErrorHandler:
 27154                           	opt callstack 15
 27155                           
 27156                           ; BSR set to: 2
 27157                           
 27158                           ;incstack = 0
 27159  00B04E  0012               	return		;funcret
 27160  00B050                     __end_of_UART1_DefaultOverrunErrorHandler:
 27161                           	opt callstack 0
 27162                           
 27163 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 27164 ;; Defined at:
 27165 ;;		line 292 in file "mcc_generated_files/uart1.c"
 27166 ;; Parameters:    Size  Location     Type
 27167 ;;		None
 27168 ;; Auto vars:     Size  Location     Type
 27169 ;;		None
 27170 ;; Return value:  Size  Location     Type
 27171 ;;                  1    wreg      void 
 27172 ;; Registers used:
 27173 ;;		None
 27174 ;; Tracked objects:
 27175 ;;		On entry : 3F/2
 27176 ;;		On exit  : 3F/2
 27177 ;;		Unchanged: 3F/0
 27178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27183 ;;Total ram usage:        0 bytes
 27184 ;; Hardware stack levels used:    1
 27185 ;; This function calls:
 27186 ;;		Nothing
 27187 ;; This function is called by:
 27188 ;;		_UART1_Initialize
 27189 ;;		_UART1_Receive_ISR
 27190 ;; This function uses a non-reentrant model
 27191 ;;
 27192                           
 27193                           	psect	text209
 27194  00B050                     __ptext209:
 27195                           	opt callstack 0
 27196  00B050                     _UART1_DefaultFramingErrorHandler:
 27197                           	opt callstack 15
 27198                           
 27199                           ; BSR set to: 2
 27200                           
 27201                           ; BSR set to: 2
 27202                           ;incstack = 0
 27203  00B050  0012               	return		;funcret
 27204  00B052                     __end_of_UART1_DefaultFramingErrorHandler:
 27205                           	opt callstack 0
 27206                           
 27207 ;; *************** function _UART1_DefaultErrorHandler *****************
 27208 ;; Defined at:
 27209 ;;		line 296 in file "mcc_generated_files/uart1.c"
 27210 ;; Parameters:    Size  Location     Type
 27211 ;;		None
 27212 ;; Auto vars:     Size  Location     Type
 27213 ;;		None
 27214 ;; Return value:  Size  Location     Type
 27215 ;;                  1    wreg      void 
 27216 ;; Registers used:
 27217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27218 ;; Tracked objects:
 27219 ;;		On entry : 3F/2
 27220 ;;		On exit  : 3F/1
 27221 ;;		Unchanged: 0/0
 27222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27227 ;;Total ram usage:        0 bytes
 27228 ;; Hardware stack levels used:    1
 27229 ;; Hardware stack levels required when called:    1
 27230 ;; This function calls:
 27231 ;;		_UART1_RxDataHandler
 27232 ;; This function is called by:
 27233 ;;		_UART1_Initialize
 27234 ;;		_UART1_Receive_ISR
 27235 ;; This function uses a non-reentrant model
 27236 ;;
 27237                           
 27238                           	psect	text210
 27239  00AF78                     __ptext210:
 27240                           	opt callstack 0
 27241  00AF78                     _UART1_DefaultErrorHandler:
 27242                           	opt callstack 14
 27243                           
 27244                           ; BSR set to: 2
 27245                           ;mcc_generated_files/uart1.c: 297:     UART1_RxDataHandler();
 27246                           
 27247                           ; BSR set to: 2
 27248                           ;incstack = 0
 27249  00AF78  ECF2  F052         	call	_UART1_RxDataHandler	;wreg free
 27250                           
 27251                           ; BSR set to: 1
 27252  00AF7C  0012               	return		;funcret
 27253  00AF7E                     __end_of_UART1_DefaultErrorHandler:
 27254                           	opt callstack 0
 27255                           
 27256 ;; *************** function _UART1_RxDataHandler *****************
 27257 ;; Defined at:
 27258 ;;		line 282 in file "mcc_generated_files/uart1.c"
 27259 ;; Parameters:    Size  Location     Type
 27260 ;;		None
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;		None
 27263 ;; Return value:  Size  Location     Type
 27264 ;;                  1    wreg      void 
 27265 ;; Registers used:
 27266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27267 ;; Tracked objects:
 27268 ;;		On entry : 3C/1
 27269 ;;		On exit  : 3F/1
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27276 ;;Total ram usage:        0 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; This function calls:
 27279 ;;		Nothing
 27280 ;; This function is called by:
 27281 ;;		_UART1_Receive_ISR
 27282 ;;		_UART1_DefaultErrorHandler
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text211
 27287  00A5E4                     __ptext211:
 27288                           	opt callstack 0
 27289  00A5E4                     _UART1_RxDataHandler:
 27290                           	opt callstack 15
 27291                           
 27292                           ;mcc_generated_files/uart1.c: 284:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 27293                           
 27294                           ; BSR set to: 1
 27295                           ;incstack = 0
 27296  00A5E4  0E12               	movlw	low _uart1RxBuffer
 27297  00A5E6  0101               	movlb	1	; () banked
 27298  00A5E8  25F7               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 27299  00A5EA  6ED9               	movwf	fsr2l,c
 27300  00A5EC  6ADA               	clrf	fsr2h,c
 27301  00A5EE  0E02               	movlw	high _uart1RxBuffer
 27302  00A5F0  22DA               	addwfc	fsr2h,f,c
 27303  00A5F2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27304                           
 27305                           ; BSR set to: 1
 27306  00A5F8  2BF7               	incf	_uart1RxHead& (0+255),f,b	;volatile
 27307                           
 27308                           ; BSR set to: 1
 27309                           ;mcc_generated_files/uart1.c: 285:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 27310  00A5FA  0E07               	movlw	7
 27311  00A5FC  65F7               	cpfsgt	_uart1RxHead& (0+255),b
 27312  00A5FE  D002               	goto	i2l13156
 27313                           
 27314                           ; BSR set to: 1
 27315                           ;mcc_generated_files/uart1.c: 286:     {;mcc_generated_files/uart1.c: 287:         uart1
      +                          RxHead = 0;
 27316  00A600  0E00               	movlw	0
 27317  00A602  6FF7               	movwf	_uart1RxHead& (0+255),b	;volatile
 27318  00A604                     i2l13156:
 27319                           
 27320                           ; BSR set to: 1
 27321                           ;mcc_generated_files/uart1.c: 289:     uart1RxCount++;
 27322  00A604  2BF5               	incf	_uart1RxCount& (0+255),f,b	;volatile
 27323                           
 27324                           ; BSR set to: 1
 27325  00A606  0012               	return		;funcret
 27326  00A608                     __end_of_UART1_RxDataHandler:
 27327                           	opt callstack 0
 27328                           
 27329 ;; *************** function _TMR6_ISR *****************
 27330 ;; Defined at:
 27331 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;		None
 27334 ;; Auto vars:     Size  Location     Type
 27335 ;;		None
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  1    wreg      void 
 27338 ;; Registers used:
 27339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27340 ;; Tracked objects:
 27341 ;;		On entry : 3F/39
 27342 ;;		On exit  : 0/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27349 ;;Total ram usage:        0 bytes
 27350 ;; Hardware stack levels used:    1
 27351 ;; Hardware stack levels required when called:   10
 27352 ;; This function calls:
 27353 ;;		Absolute function
 27354 ;;		_ControllerTimerHandler
 27355 ;;		_TMR6_DefaultInterruptHandler
 27356 ;; This function is called by:
 27357 ;;		_INTERRUPT_InterruptManager
 27358 ;; This function uses a non-reentrant model
 27359 ;;
 27360                           
 27361                           	psect	text212
 27362  00A650                     __ptext212:
 27363                           	opt callstack 0
 27364  00A650                     _TMR6_ISR:
 27365                           	opt callstack 6
 27366                           
 27367                           ; BSR set to: 57
 27368                           ;mcc_generated_files/tmr6.c: 169:     PIR9bits.TMR6IF = 0;
 27369                           
 27370                           ; BSR set to: 1
 27371                           ;incstack = 0
 27372  00A650  91A9               	bcf	169,0,b	;volatile
 27373                           
 27374                           ; BSR set to: 57
 27375                           ;mcc_generated_files/tmr6.c: 171:     if(TMR6_InterruptHandler)
 27376  00A652  0102               	movlb	2	; () banked
 27377  00A654  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27378  00A656  11DA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27379  00A658  B4D8               	btfsc	status,2,c
 27380  00A65A  0012               	return	
 27381                           
 27382                           ; BSR set to: 2
 27383                           ;mcc_generated_files/tmr6.c: 172:     {;mcc_generated_files/tmr6.c: 173:         TMR6_In
      +                          terruptHandler();
 27384  00A65C  D801               	call	i2u2144_48
 27385  00A65E  0012               	return	
 27386  00A660                     i2u2144_48:
 27387  00A660  0005               	push	
 27388  00A662  6EFA               	movwf	pclath,c
 27389  00A664  51D9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27390  00A666  6EFD               	movwf	tosl,c
 27391  00A668  51DA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27392  00A66A  6EFE               	movwf	tosh,c
 27393  00A66C  6AFF               	clrf	tosu,c
 27394  00A66E  50FA               	movf	pclath,w,c
 27395  00A670  0012               	return		;indir
 27396  00A672                     __end_of_TMR6_ISR:
 27397                           	opt callstack 0
 27398                           
 27399 ;; *************** function _ControllerTimerHandler *****************
 27400 ;; Defined at:
 27401 ;;		line 193 in file "controller.c"
 27402 ;; Parameters:    Size  Location     Type
 27403 ;;		None
 27404 ;; Auto vars:     Size  Location     Type
 27405 ;;		None
 27406 ;; Return value:  Size  Location     Type
 27407 ;;                  1    wreg      void 
 27408 ;; Registers used:
 27409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27410 ;; Tracked objects:
 27411 ;;		On entry : 3F/2
 27412 ;;		On exit  : 3F/2
 27413 ;;		Unchanged: 0/0
 27414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27419 ;;Total ram usage:        0 bytes
 27420 ;; Hardware stack levels used:    1
 27421 ;; Hardware stack levels required when called:    9
 27422 ;; This function calls:
 27423 ;;		_SetControlFailAlarm
 27424 ;;		i2_ClearControlFailAlarm
 27425 ;;		i2___awmod
 27426 ;;		i2_printf
 27427 ;; This function is called by:
 27428 ;;		_ControllerInit
 27429 ;;		_TMR6_ISR
 27430 ;; This function uses a non-reentrant model
 27431 ;;
 27432                           
 27433                           	psect	text213
 27434  008C0A                     __ptext213:
 27435                           	opt callstack 0
 27436  008C0A                     _ControllerTimerHandler:
 27437                           	opt callstack 6
 27438                           
 27439                           ; BSR set to: 2
 27440                           ;controller.c: 194:     static int errors=0;;controller.c: 195:     if (!commandReceived
      +                          ) {
 27441                           
 27442                           ;incstack = 0
 27443  008C0A  519B               	movf	_commandReceived& (0+255),w,b
 27444  008C0C  A4D8               	btfss	status,2,c
 27445  008C0E  D01A               	goto	i2l21706
 27446                           
 27447                           ; BSR set to: 2
 27448                           ;controller.c: 197:         if (run) {
 27449  008C10  0100               	movlb	0	; () banked
 27450  008C12  51EC               	movf	_run& (0+255),w,b
 27451  008C14  B4D8               	btfsc	status,2,c
 27452  008C16  D013               	goto	i2l21704
 27453                           
 27454                           ; BSR set to: 0
 27455                           ;controller.c: 198:             printf("EC ");
 27456  008C18  0ED4               	movlw	low STR_54
 27457  008C1A  6F77               	movwf	i2printf@fmt& (0+255),b
 27458  008C1C  0EFF               	movlw	high STR_54
 27459  008C1E  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27460  008C20  ECBB  F052         	call	i2_printf	;wreg free
 27461                           
 27462                           ; BSR set to: 2
 27463                           ;controller.c: 199:             errors++;
 27464  008C24  4B2E               	infsnz	ControllerTimerHandler@errors& (0+255),f,b
 27465  008C26  2B2F               	incf	(ControllerTimerHandler@errors+1)& (0+255),f,b
 27466                           
 27467                           ; BSR set to: 2
 27468                           ;controller.c: 200:             if (errors>10) SetControlFailAlarm();
 27469  008C28  BF2F               	btfsc	(ControllerTimerHandler@errors+1)& (0+255),7,b
 27470  008C2A  D010               	goto	i2l21708
 27471  008C2C  512F               	movf	(ControllerTimerHandler@errors+1)& (0+255),w,b
 27472  008C2E  E104               	bnz	i2u2137_40
 27473  008C30  0E0B               	movlw	11
 27474  008C32  5D2E               	subwf	ControllerTimerHandler@errors& (0+255),w,b
 27475  008C34  A0D8               	btfss	status,0,c
 27476  008C36  D00A               	goto	i2l21708
 27477  008C38                     i2u2137_40:
 27478                           
 27479                           ; BSR set to: 2
 27480  008C38  EC67  F057         	call	_SetControlFailAlarm	;wreg free
 27481  008C3C  D007               	goto	i2l21708
 27482  008C3E                     i2l21704:
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;controller.c: 202:             ClearControlFailAlarm();
 27486  008C3E  EC7F  F057         	call	i2_ClearControlFailAlarm	;wreg free
 27487  008C42  D004               	goto	i2l21708
 27488  008C44                     i2l21706:
 27489                           
 27490                           ; BSR set to: 2
 27491                           ;controller.c: 206:         errors = 0;
 27492  008C44  0E00               	movlw	0
 27493  008C46  6F2F               	movwf	(ControllerTimerHandler@errors+1)& (0+255),b
 27494  008C48  0E00               	movlw	0
 27495  008C4A  6F2E               	movwf	ControllerTimerHandler@errors& (0+255),b
 27496  008C4C                     i2l21708:
 27497                           
 27498                           ;controller.c: 208:     static int16_t cnt=0;;controller.c: 209:     cnt = (cnt+1)%100;
 27499  008C4C  0E01               	movlw	1
 27500  008C4E  0102               	movlb	2	; () banked
 27501  008C50  252C               	addwf	ControllerTimerHandler@cnt& (0+255),w,b
 27502  008C52  6E01               	movwf	i2___awmod@dividend^0,c
 27503  008C54  0E00               	movlw	0
 27504  008C56  212D               	addwfc	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27505  008C58  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 27506  008C5A  0E00               	movlw	0
 27507  008C5C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 27508  008C5E  0E64               	movlw	100
 27509  008C60  6E03               	movwf	i2___awmod@divisor^0,c
 27510  008C62  EC3B  F047         	call	i2___awmod	;wreg free
 27511  008C66  0060  F004  F22C   	movff	?i2___awmod,ControllerTimerHandler@cnt
 27512  008C6C  0060  F008  F22D   	movff	?i2___awmod+1,ControllerTimerHandler@cnt+1
 27513                           
 27514                           ;controller.c: 210:     if (cnt==0) printf("&\r\n");
 27515  008C72  0102               	movlb	2	; () banked
 27516  008C74  512C               	movf	ControllerTimerHandler@cnt& (0+255),w,b
 27517  008C76  112D               	iorwf	(ControllerTimerHandler@cnt+1)& (0+255),w,b
 27518  008C78  A4D8               	btfss	status,2,c
 27519  008C7A  D007               	goto	i2l21714
 27520                           
 27521                           ; BSR set to: 2
 27522  008C7C  0ED0               	movlw	low STR_55
 27523  008C7E  0100               	movlb	0	; () banked
 27524  008C80  6F77               	movwf	i2printf@fmt& (0+255),b
 27525  008C82  0EFF               	movlw	high STR_55
 27526  008C84  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27527  008C86  ECBB  F052         	call	i2_printf	;wreg free
 27528  008C8A                     i2l21714:
 27529                           
 27530                           ; BSR set to: 2
 27531                           ;controller.c: 211:     commandReceived = 0;
 27532  008C8A  0E00               	movlw	0
 27533  008C8C  6F9B               	movwf	_commandReceived& (0+255),b
 27534                           
 27535                           ; BSR set to: 2
 27536  008C8E  0012               	return		;funcret
 27537  008C90                     __end_of_ControllerTimerHandler:
 27538                           	opt callstack 0
 27539                           
 27540 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27541 ;; Defined at:
 27542 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27543 ;; Parameters:    Size  Location     Type
 27544 ;;		None
 27545 ;; Auto vars:     Size  Location     Type
 27546 ;;		None
 27547 ;; Return value:  Size  Location     Type
 27548 ;;                  1    wreg      void 
 27549 ;; Registers used:
 27550 ;;		None
 27551 ;; Tracked objects:
 27552 ;;		On entry : 3F/2
 27553 ;;		On exit  : 3F/2
 27554 ;;		Unchanged: 3F/0
 27555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27560 ;;Total ram usage:        0 bytes
 27561 ;; Hardware stack levels used:    1
 27562 ;; This function calls:
 27563 ;;		Nothing
 27564 ;; This function is called by:
 27565 ;;		_TMR6_Initialize
 27566 ;;		_TMR6_ISR
 27567 ;; This function uses a non-reentrant model
 27568 ;;
 27569                           
 27570                           	psect	text214
 27571  00B052                     __ptext214:
 27572                           	opt callstack 0
 27573  00B052                     _TMR6_DefaultInterruptHandler:
 27574                           	opt callstack 15
 27575                           
 27576                           ; BSR set to: 2
 27577                           
 27578                           ; BSR set to: 2
 27579                           ;incstack = 0
 27580  00B052  0012               	return		;funcret
 27581  00B054                     __end_of_TMR6_DefaultInterruptHandler:
 27582                           	opt callstack 0
 27583                           
 27584 ;; *************** function _TMR5_ISR *****************
 27585 ;; Defined at:
 27586 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27587 ;; Parameters:    Size  Location     Type
 27588 ;;		None
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;		None
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  1    wreg      void 
 27593 ;; Registers used:
 27594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27595 ;; Tracked objects:
 27596 ;;		On entry : 3F/39
 27597 ;;		On exit  : 0/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27604 ;;Total ram usage:        0 bytes
 27605 ;; Hardware stack levels used:    1
 27606 ;; Hardware stack levels required when called:   10
 27607 ;; This function calls:
 27608 ;;		Absolute function
 27609 ;;		_AlarmHandler
 27610 ;;		_TMR5_DefaultInterruptHandler
 27611 ;;		_TMR5_WriteTimer
 27612 ;; This function is called by:
 27613 ;;		_INTERRUPT_InterruptManager
 27614 ;; This function uses a non-reentrant model
 27615 ;;
 27616                           
 27617                           	psect	text215
 27618  00A1CC                     __ptext215:
 27619                           	opt callstack 0
 27620  00A1CC                     _TMR5_ISR:
 27621                           	opt callstack 6
 27622                           
 27623                           ; BSR set to: 57
 27624                           ;mcc_generated_files/tmr5.c: 168:     PIR8bits.TMR5IF = 0;
 27625                           
 27626                           ; BSR set to: 2
 27627                           ;incstack = 0
 27628  00A1CC  9DA8               	bcf	168,6,b	;volatile
 27629                           
 27630                           ; BSR set to: 57
 27631                           ;mcc_generated_files/tmr5.c: 169:     TMR5_WriteTimer(timer5ReloadVal);
 27632  00A1CE  0060  FB8C  F001   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 27633  00A1D4  0060  FB90  F002   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 27634  00A1DA  EC04  F053         	call	_TMR5_WriteTimer	;wreg free
 27635                           
 27636                           ; BSR set to: 57
 27637                           ;mcc_generated_files/tmr5.c: 171:     if(TMR5_InterruptHandler)
 27638  00A1DE  0102               	movlb	2	; () banked
 27639  00A1E0  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27640  00A1E2  11E2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27641  00A1E4  B4D8               	btfsc	status,2,c
 27642  00A1E6  0012               	return	
 27643                           
 27644                           ; BSR set to: 2
 27645                           ;mcc_generated_files/tmr5.c: 172:     {;mcc_generated_files/tmr5.c: 173:         TMR5_In
      +                          terruptHandler();
 27646  00A1E8  D801               	call	i2u2146_48
 27647  00A1EA  0012               	return	
 27648  00A1EC                     i2u2146_48:
 27649  00A1EC  0005               	push	
 27650  00A1EE  6EFA               	movwf	pclath,c
 27651  00A1F0  51E1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27652  00A1F2  6EFD               	movwf	tosl,c
 27653  00A1F4  51E2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27654  00A1F6  6EFE               	movwf	tosh,c
 27655  00A1F8  6AFF               	clrf	tosu,c
 27656  00A1FA  50FA               	movf	pclath,w,c
 27657  00A1FC  0012               	return		;indir
 27658  00A1FE                     __end_of_TMR5_ISR:
 27659                           	opt callstack 0
 27660                           
 27661 ;; *************** function _TMR5_WriteTimer *****************
 27662 ;; Defined at:
 27663 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 27664 ;; Parameters:    Size  Location     Type
 27665 ;;  timerVal        2    0[COMRAM] unsigned short 
 27666 ;; Auto vars:     Size  Location     Type
 27667 ;;		None
 27668 ;; Return value:  Size  Location     Type
 27669 ;;                  1    wreg      void 
 27670 ;; Registers used:
 27671 ;;		None
 27672 ;; Tracked objects:
 27673 ;;		On entry : 3F/39
 27674 ;;		On exit  : 3F/39
 27675 ;;		Unchanged: 3E/0
 27676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27681 ;;Total ram usage:        2 bytes
 27682 ;; Hardware stack levels used:    1
 27683 ;; This function calls:
 27684 ;;		Nothing
 27685 ;; This function is called by:
 27686 ;;		_TMR5_ISR
 27687 ;; This function uses a non-reentrant model
 27688 ;;
 27689                           
 27690                           	psect	text216
 27691  00A608                     __ptext216:
 27692                           	opt callstack 0
 27693  00A608                     _TMR5_WriteTimer:
 27694                           	opt callstack 15
 27695                           
 27696                           ; BSR set to: 57
 27697                           ;mcc_generated_files/tmr5.c: 127: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 128: {;mcc_generated_files/tmr5.c: 129:     if (T5CONbits.NOT_SYNC == 1)
 27698                           
 27699                           ;incstack = 0
 27700  00A608  A49A               	btfss	154,2,c	;volatile
 27701  00A60A  D009               	goto	i2l748
 27702                           
 27703                           ; BSR set to: 57
 27704                           ;mcc_generated_files/tmr5.c: 130:     {;mcc_generated_files/tmr5.c: 132:         T5CONbi
      +                          ts.TMR5ON = 0;
 27705  00A60C  909A               	bcf	154,0,c	;volatile
 27706                           
 27707                           ;mcc_generated_files/tmr5.c: 135:         TMR5H = (timerVal >> 8);
 27708  00A60E  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27709                           
 27710                           ;mcc_generated_files/tmr5.c: 136:         TMR5L = timerVal;
 27711  00A614  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27712                           
 27713                           ;mcc_generated_files/tmr5.c: 139:         T5CONbits.TMR5ON =1;
 27714  00A61A  809A               	bsf	154,0,c	;volatile
 27715                           
 27716                           ;mcc_generated_files/tmr5.c: 140:     }
 27717  00A61C  0012               	return	
 27718  00A61E                     i2l748:
 27719                           
 27720                           ; BSR set to: 57
 27721                           ;mcc_generated_files/tmr5.c: 142:     {;mcc_generated_files/tmr5.c: 144:         TMR5H =
      +                           (timerVal >> 8);
 27722  00A61E  0060  F00B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 27723                           
 27724                           ;mcc_generated_files/tmr5.c: 145:         TMR5L = timerVal;
 27725  00A624  0060  F007  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 27726                           
 27727                           ; BSR set to: 57
 27728  00A62A  0012               	return		;funcret
 27729  00A62C                     __end_of_TMR5_WriteTimer:
 27730                           	opt callstack 0
 27731                           
 27732 ;; *************** function _AlarmHandler *****************
 27733 ;; Defined at:
 27734 ;;		line 557 in file "alarm.c"
 27735 ;; Parameters:    Size  Location     Type
 27736 ;;		None
 27737 ;; Auto vars:     Size  Location     Type
 27738 ;;		None
 27739 ;; Return value:  Size  Location     Type
 27740 ;;                  1    wreg      void 
 27741 ;; Registers used:
 27742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27743 ;; Tracked objects:
 27744 ;;		On entry : 3F/2
 27745 ;;		On exit  : 3F/2
 27746 ;;		Unchanged: 0/0
 27747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27752 ;;Total ram usage:        2 bytes
 27753 ;; Hardware stack levels used:    1
 27754 ;; Hardware stack levels required when called:    9
 27755 ;; This function calls:
 27756 ;;		i2_AnyAlarm
 27757 ;;		i2_printf
 27758 ;; This function is called by:
 27759 ;;		_AlarmInit
 27760 ;;		_TMR5_ISR
 27761 ;; This function uses a non-reentrant model
 27762 ;;
 27763                           
 27764                           	psect	text217
 27765  009188                     __ptext217:
 27766                           	opt callstack 0
 27767  009188                     _AlarmHandler:
 27768                           	opt callstack 6
 27769                           
 27770                           ; BSR set to: 2
 27771                           ;alarm.c: 560:     if (muteSec && AnyAlarm()) muteSec--;
 27772                           
 27773                           ; BSR set to: 57
 27774                           ;incstack = 0
 27775  009188  0101               	movlb	1	; () banked
 27776  00918A  51EF               	movf	_muteSec& (0+255),w,b
 27777  00918C  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
 27778  00918E  B4D8               	btfsc	status,2,c
 27779  009190  D00A               	goto	i2l21036
 27780                           
 27781                           ; BSR set to: 1
 27782  009192  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 27783  009196  0900               	iorlw	0
 27784  009198  B4D8               	btfsc	status,2,c
 27785  00919A  D005               	goto	i2l21036
 27786  00919C  0101               	movlb	1	; () banked
 27787  00919E  07EF               	decf	_muteSec& (0+255),f,b
 27788  0091A0  A0D8               	btfss	status,0,c
 27789  0091A2  07F0               	decf	(_muteSec+1)& (0+255),f,b
 27790  0091A4  D005               	goto	i2l21038
 27791  0091A6                     i2l21036:
 27792  0091A6  0E00               	movlw	0
 27793  0091A8  0101               	movlb	1	; () banked
 27794  0091AA  6FF0               	movwf	(_muteSec+1)& (0+255),b
 27795  0091AC  0E00               	movlw	0
 27796  0091AE  6FEF               	movwf	_muteSec& (0+255),b
 27797  0091B0                     i2l21038:
 27798                           
 27799                           ; BSR set to: 1
 27800                           ;alarm.c: 562:     if (histSec) histSec--;
 27801  0091B0  0100               	movlb	0	; () banked
 27802  0091B2  51DE               	movf	_histSec& (0+255),w,b
 27803  0091B4  11DF               	iorwf	(_histSec+1)& (0+255),w,b
 27804  0091B6  B4D8               	btfsc	status,2,c
 27805  0091B8  D003               	goto	i2l21042
 27806                           
 27807                           ; BSR set to: 0
 27808  0091BA  07DE               	decf	_histSec& (0+255),f,b
 27809  0091BC  A0D8               	btfss	status,0,c
 27810  0091BE  07DF               	decf	(_histSec+1)& (0+255),f,b
 27811  0091C0                     i2l21042:
 27812                           
 27813                           ; BSR set to: 0
 27814                           ;alarm.c: 564:     alarmCheck = 1;
 27815  0091C0  0E01               	movlw	1
 27816  0091C2  0102               	movlb	2	; () banked
 27817  0091C4  6FA3               	movwf	_alarmCheck& (0+255),b
 27818                           
 27819                           ; BSR set to: 2
 27820                           ;alarm.c: 566:     static int16_t cnt = 0;;alarm.c: 567:     if (cnt==0) printf("A\r\n")
      +                          ;
 27821  0091C6  516E               	movf	AlarmHandler@cnt& (0+255),w,b
 27822  0091C8  116F               	iorwf	(AlarmHandler@cnt+1)& (0+255),w,b
 27823  0091CA  A4D8               	btfss	status,2,c
 27824  0091CC  D007               	goto	i2l21048
 27825                           
 27826                           ; BSR set to: 2
 27827  0091CE  0EE8               	movlw	low STR_30
 27828  0091D0  0100               	movlb	0	; () banked
 27829  0091D2  6F77               	movwf	i2printf@fmt& (0+255),b
 27830  0091D4  0EFF               	movlw	high STR_30
 27831  0091D6  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 27832  0091D8  ECBB  F052         	call	i2_printf	;wreg free
 27833  0091DC                     i2l21048:
 27834                           
 27835                           ; BSR set to: 2
 27836                           ;alarm.c: 568:     cnt = (cnt+1)%2;
 27837  0091DC  0E01               	movlw	1
 27838  0091DE  256E               	addwf	AlarmHandler@cnt& (0+255),w,b
 27839  0091E0  6E5B               	movwf	??_AlarmHandler^0,c
 27840  0091E2  0E00               	movlw	0
 27841  0091E4  216F               	addwfc	(AlarmHandler@cnt+1)& (0+255),w,b
 27842  0091E6  6E5C               	movwf	(??_AlarmHandler+1)^0,c
 27843  0091E8  0E01               	movlw	1
 27844  0091EA  145B               	andwf	??_AlarmHandler^0,w,c
 27845  0091EC  6F6E               	movwf	AlarmHandler@cnt& (0+255),b
 27846  0091EE  6B6F               	clrf	(AlarmHandler@cnt+1)& (0+255),b
 27847                           
 27848                           ; BSR set to: 2
 27849  0091F0  0012               	return		;funcret
 27850  0091F2                     __end_of_AlarmHandler:
 27851                           	opt callstack 0
 27852                           
 27853 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27854 ;; Defined at:
 27855 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27856 ;; Parameters:    Size  Location     Type
 27857 ;;		None
 27858 ;; Auto vars:     Size  Location     Type
 27859 ;;		None
 27860 ;; Return value:  Size  Location     Type
 27861 ;;                  1    wreg      void 
 27862 ;; Registers used:
 27863 ;;		None
 27864 ;; Tracked objects:
 27865 ;;		On entry : 3F/2
 27866 ;;		On exit  : 3F/2
 27867 ;;		Unchanged: 3F/0
 27868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27873 ;;Total ram usage:        0 bytes
 27874 ;; Hardware stack levels used:    1
 27875 ;; This function calls:
 27876 ;;		Nothing
 27877 ;; This function is called by:
 27878 ;;		_TMR5_Initialize
 27879 ;;		_TMR5_ISR
 27880 ;; This function uses a non-reentrant model
 27881 ;;
 27882                           
 27883                           	psect	text218
 27884  00B054                     __ptext218:
 27885                           	opt callstack 0
 27886  00B054                     _TMR5_DefaultInterruptHandler:
 27887                           	opt callstack 15
 27888                           
 27889                           ; BSR set to: 2
 27890                           
 27891                           ; BSR set to: 2
 27892                           ;incstack = 0
 27893  00B054  0012               	return		;funcret
 27894  00B056                     __end_of_TMR5_DefaultInterruptHandler:
 27895                           	opt callstack 0
 27896                           
 27897 ;; *************** function _TMR4_ISR *****************
 27898 ;; Defined at:
 27899 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 27900 ;; Parameters:    Size  Location     Type
 27901 ;;		None
 27902 ;; Auto vars:     Size  Location     Type
 27903 ;;		None
 27904 ;; Return value:  Size  Location     Type
 27905 ;;                  1    wreg      void 
 27906 ;; Registers used:
 27907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27908 ;; Tracked objects:
 27909 ;;		On entry : 3F/39
 27910 ;;		On exit  : 0/0
 27911 ;;		Unchanged: 0/0
 27912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27917 ;;Total ram usage:        0 bytes
 27918 ;; Hardware stack levels used:    1
 27919 ;; Hardware stack levels required when called:   11
 27920 ;; This function calls:
 27921 ;;		Absolute function
 27922 ;;		_BuzzerHandler
 27923 ;;		_BuzzerTestHandler
 27924 ;;		_TMR4_DefaultInterruptHandler
 27925 ;; This function is called by:
 27926 ;;		_INTERRUPT_InterruptManager
 27927 ;; This function uses a non-reentrant model
 27928 ;;
 27929                           
 27930                           	psect	text219
 27931  00A672                     __ptext219:
 27932                           	opt callstack 0
 27933  00A672                     _TMR4_ISR:
 27934                           	opt callstack 5
 27935                           
 27936                           ; BSR set to: 57
 27937                           ;mcc_generated_files/tmr4.c: 169:     PIR7bits.TMR4IF = 0;
 27938                           
 27939                           ; BSR set to: 2
 27940                           ;incstack = 0
 27941  00A672  91A7               	bcf	167,0,b	;volatile
 27942                           
 27943                           ; BSR set to: 57
 27944                           ;mcc_generated_files/tmr4.c: 171:     if(TMR4_InterruptHandler)
 27945  00A674  0102               	movlb	2	; () banked
 27946  00A676  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27947  00A678  11EE               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27948  00A67A  B4D8               	btfsc	status,2,c
 27949  00A67C  0012               	return	
 27950                           
 27951                           ; BSR set to: 2
 27952                           ;mcc_generated_files/tmr4.c: 172:     {;mcc_generated_files/tmr4.c: 173:         TMR4_In
      +                          terruptHandler();
 27953  00A67E  D801               	call	i2u2148_48
 27954  00A680  0012               	return	
 27955  00A682                     i2u2148_48:
 27956  00A682  0005               	push	
 27957  00A684  6EFA               	movwf	pclath,c
 27958  00A686  51ED               	movf	_TMR4_InterruptHandler& (0+255),w,b
 27959  00A688  6EFD               	movwf	tosl,c
 27960  00A68A  51EE               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 27961  00A68C  6EFE               	movwf	tosh,c
 27962  00A68E  6AFF               	clrf	tosu,c
 27963  00A690  50FA               	movf	pclath,w,c
 27964  00A692  0012               	return		;indir
 27965  00A694                     __end_of_TMR4_ISR:
 27966                           	opt callstack 0
 27967                           
 27968 ;; *************** function _BuzzerTestHandler *****************
 27969 ;; Defined at:
 27970 ;;		line 82 in file "buzzer.c"
 27971 ;; Parameters:    Size  Location     Type
 27972 ;;		None
 27973 ;; Auto vars:     Size  Location     Type
 27974 ;;		None
 27975 ;; Return value:  Size  Location     Type
 27976 ;;                  1    wreg      void 
 27977 ;; Registers used:
 27978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27979 ;; Tracked objects:
 27980 ;;		On entry : 3F/2
 27981 ;;		On exit  : 3F/39
 27982 ;;		Unchanged: 0/0
 27983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27988 ;;Total ram usage:        0 bytes
 27989 ;; Hardware stack levels used:    1
 27990 ;; Hardware stack levels required when called:    9
 27991 ;; This function calls:
 27992 ;;		i2_BuzzerOff
 27993 ;;		i2_printf
 27994 ;; This function is called by:
 27995 ;;		_BuzzerTest
 27996 ;;		_TMR4_ISR
 27997 ;; This function uses a non-reentrant model
 27998 ;;
 27999                           
 28000                           	psect	text220
 28001  00A2EA                     __ptext220:
 28002                           	opt callstack 0
 28003  00A2EA                     _BuzzerTestHandler:
 28004                           	opt callstack 6
 28005                           
 28006                           ; BSR set to: 2
 28007                           ;buzzer.c: 84:     if (on) {
 28008                           
 28009                           ;incstack = 0
 28010  00A2EA  0100               	movlb	0	; () banked
 28011  00A2EC  51F5               	movf	_on& (0+255),w,b
 28012  00A2EE  B4D8               	btfsc	status,2,c
 28013  00A2F0  D010               	goto	i2l20760
 28014                           
 28015                           ; BSR set to: 0
 28016                           ;buzzer.c: 86:         if (detected) {
 28017  00A2F2  51F4               	movf	_detected& (0+255),w,b
 28018  00A2F4  B4D8               	btfsc	status,2,c
 28019  00A2F6  D007               	goto	i2l20758
 28020                           
 28021                           ; BSR set to: 0
 28022                           ;buzzer.c: 88:             printf("_DB_");
 28023  00A2F8  0EC6               	movlw	low STR_15
 28024  00A2FA  6F77               	movwf	i2printf@fmt& (0+255),b
 28025  00A2FC  0EFF               	movlw	high STR_15
 28026  00A2FE  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 28027  00A300  ECBB  F052         	call	i2_printf	;wreg free
 28028                           
 28029                           ;buzzer.c: 89:         } else {
 28030  00A304  D006               	goto	i2l20760
 28031  00A306                     i2l20758:
 28032                           
 28033                           ; BSR set to: 0
 28034                           ;buzzer.c: 91:             printf("_EB_");
 28035  00A306  0ECB               	movlw	low STR_16
 28036  00A308  6F77               	movwf	i2printf@fmt& (0+255),b
 28037  00A30A  0EFF               	movlw	high STR_16
 28038  00A30C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 28039  00A30E  ECBB  F052         	call	i2_printf	;wreg free
 28040  00A312                     i2l20760:
 28041                           
 28042                           ;buzzer.c: 94:     BuzzerOff();
 28043  00A312  EC89  F055         	call	i2_BuzzerOff	;wreg free
 28044                           
 28045                           ; BSR set to: 57
 28046  00A316  0012               	return		;funcret
 28047  00A318                     __end_of_BuzzerTestHandler:
 28048                           	opt callstack 0
 28049                           
 28050 ;; *************** function _BuzzerHandler *****************
 28051 ;; Defined at:
 28052 ;;		line 77 in file "buzzer.c"
 28053 ;; Parameters:    Size  Location     Type
 28054 ;;		None
 28055 ;; Auto vars:     Size  Location     Type
 28056 ;;		None
 28057 ;; Return value:  Size  Location     Type
 28058 ;;                  1    wreg      void 
 28059 ;; Registers used:
 28060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28061 ;; Tracked objects:
 28062 ;;		On entry : 3F/2
 28063 ;;		On exit  : 4/0
 28064 ;;		Unchanged: 0/0
 28065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28070 ;;Total ram usage:        0 bytes
 28071 ;; Hardware stack levels used:    1
 28072 ;; Hardware stack levels required when called:   10
 28073 ;; This function calls:
 28074 ;;		i2_BuzzerTask
 28075 ;; This function is called by:
 28076 ;;		_BuzzerTask
 28077 ;;		_BuzzerInit
 28078 ;;		i2_BuzzerTask
 28079 ;;		_TMR4_ISR
 28080 ;; This function uses a non-reentrant model
 28081 ;;
 28082                           
 28083                           	psect	text221
 28084  00AF7E                     __ptext221:
 28085                           	opt callstack 0
 28086  00AF7E                     _BuzzerHandler:
 28087                           	opt callstack 5
 28088                           
 28089                           ; BSR set to: 2
 28090                           ;buzzer.c: 79:     BuzzerTask();
 28091                           
 28092                           ; BSR set to: 57
 28093                           ;incstack = 0
 28094  00AF7E  EC25  F013         	call	i2_BuzzerTask	;wreg free
 28095  00AF82  0012               	return		;funcret
 28096  00AF84                     __end_of_BuzzerHandler:
 28097                           	opt callstack 0
 28098                           
 28099 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 28100 ;; Defined at:
 28101 ;;		line 182 in file "mcc_generated_files/tmr4.c"
 28102 ;; Parameters:    Size  Location     Type
 28103 ;;		None
 28104 ;; Auto vars:     Size  Location     Type
 28105 ;;		None
 28106 ;; Return value:  Size  Location     Type
 28107 ;;                  1    wreg      void 
 28108 ;; Registers used:
 28109 ;;		None
 28110 ;; Tracked objects:
 28111 ;;		On entry : 3F/2
 28112 ;;		On exit  : 3F/2
 28113 ;;		Unchanged: 3F/0
 28114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28119 ;;Total ram usage:        0 bytes
 28120 ;; Hardware stack levels used:    1
 28121 ;; This function calls:
 28122 ;;		Nothing
 28123 ;; This function is called by:
 28124 ;;		_TMR4_Initialize
 28125 ;;		_TMR4_ISR
 28126 ;; This function uses a non-reentrant model
 28127 ;;
 28128                           
 28129                           	psect	text222
 28130  00B056                     __ptext222:
 28131                           	opt callstack 0
 28132  00B056                     _TMR4_DefaultInterruptHandler:
 28133                           	opt callstack 15
 28134                           
 28135                           ; BSR set to: 2
 28136                           
 28137                           ;incstack = 0
 28138  00B056  0012               	return		;funcret
 28139  00B058                     __end_of_TMR4_DefaultInterruptHandler:
 28140                           	opt callstack 0
 28141                           
 28142 ;; *************** function i2_BuzzerTask *****************
 28143 ;; Defined at:
 28144 ;;		line 132 in file "buzzer.c"
 28145 ;; Parameters:    Size  Location     Type
 28146 ;;		None
 28147 ;; Auto vars:     Size  Location     Type
 28148 ;;		None
 28149 ;; Return value:  Size  Location     Type
 28150 ;;                  1    wreg      void 
 28151 ;; Registers used:
 28152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28153 ;; Tracked objects:
 28154 ;;		On entry : 3F/2
 28155 ;;		On exit  : 4/0
 28156 ;;		Unchanged: 0/0
 28157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28162 ;;Total ram usage:        2 bytes
 28163 ;; Hardware stack levels used:    1
 28164 ;; Hardware stack levels required when called:    9
 28165 ;; This function calls:
 28166 ;;		i2_BuzzerOff
 28167 ;;		i2_BuzzerOn
 28168 ;;		i2_ClearMonitorFailAlarm
 28169 ;;		i2_SetMonitorFailAlarm
 28170 ;;		i2_TMR4_Period8BitSet
 28171 ;;		i2_TMR4_SetInterruptHandler
 28172 ;;		i2_TMR4_Start
 28173 ;;		i2_TMR4_Stop
 28174 ;;		i2_printf
 28175 ;; This function is called by:
 28176 ;;		_BuzzerHandler
 28177 ;; This function uses a non-reentrant model
 28178 ;;
 28179                           
 28180                           	psect	text223
 28181  00264A                     __ptext223:
 28182                           	opt callstack 0
 28183  00264A                     i2_BuzzerTask:
 28184                           	opt callstack 5
 28185                           
 28186                           ; BSR set to: 2
 28187                           ;buzzer.c: 133:     static int noDetections = 0;;buzzer.c: 134:     if (on) {
 28188                           
 28189                           ; BSR set to: 2
 28190                           ;incstack = 0
 28191  00264A  0100               	movlb	0	; () banked
 28192  00264C  51F5               	movf	_on& (0+255),w,b
 28193  00264E  B4D8               	btfsc	status,2,c
 28194  002650  D026               	goto	i2l19920
 28195                           
 28196                           ; BSR set to: 0
 28197                           ;buzzer.c: 136:         if (detected) {
 28198  002652  51F4               	movf	_detected& (0+255),w,b
 28199  002654  B4D8               	btfsc	status,2,c
 28200  002656  D00E               	goto	i2l19912
 28201                           
 28202                           ; BSR set to: 0
 28203                           ;buzzer.c: 138:             ClearMonitorFailAlarm();
 28204  002658  EC73  F057         	call	i2_ClearMonitorFailAlarm	;wreg free
 28205                           
 28206                           ; BSR set to: 2
 28207                           ;buzzer.c: 139:             noDetections = 0;
 28208  00265C  0E00               	movlw	0
 28209  00265E  6F83               	movwf	(BuzzerTask@noDetections+1)& (0+255),b
 28210  002660  0E00               	movlw	0
 28211  002662  6F82               	movwf	BuzzerTask@noDetections& (0+255),b
 28212                           
 28213                           ; BSR set to: 2
 28214                           ;buzzer.c: 140:             printf("_DB_");
 28215  002664  0EC6               	movlw	low STR_15
 28216  002666  0100               	movlb	0	; () banked
 28217  002668  6F77               	movwf	i2printf@fmt& (0+255),b
 28218  00266A  0EFF               	movlw	high STR_15
 28219  00266C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 28220  00266E  ECBB  F052         	call	i2_printf	;wreg free
 28221                           
 28222                           ;buzzer.c: 141:         } else {
 28223  002672  D015               	goto	i2l19920
 28224  002674                     i2l19912:
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;buzzer.c: 144:             if (noDetections>=3) {
 28228  002674  0102               	movlb	2	; () banked
 28229  002676  BF83               	btfsc	(BuzzerTask@noDetections+1)& (0+255),7,b
 28230  002678  D009               	goto	i2l19916
 28231  00267A  5183               	movf	(BuzzerTask@noDetections+1)& (0+255),w,b
 28232  00267C  E104               	bnz	i2u1943_40
 28233  00267E  0E03               	movlw	3
 28234  002680  5D82               	subwf	BuzzerTask@noDetections& (0+255),w,b
 28235  002682  A0D8               	btfss	status,0,c
 28236  002684  D003               	goto	i2l19916
 28237  002686                     i2u1943_40:
 28238                           
 28239                           ; BSR set to: 2
 28240                           ;buzzer.c: 145:                 SetMonitorFailAlarm();
 28241  002686  ECC2  F057         	call	i2_SetMonitorFailAlarm	;wreg free
 28242                           
 28243                           ;buzzer.c: 146:             } else {
 28244  00268A  D002               	goto	i2l19918
 28245  00268C                     i2l19916:
 28246                           
 28247                           ; BSR set to: 2
 28248                           ;buzzer.c: 147:                 noDetections ++;
 28249  00268C  4B82               	infsnz	BuzzerTask@noDetections& (0+255),f,b
 28250  00268E  2B83               	incf	(BuzzerTask@noDetections+1)& (0+255),f,b
 28251  002690                     i2l19918:
 28252                           
 28253                           ; BSR set to: 2
 28254                           ;buzzer.c: 149:             printf("_EB_");
 28255  002690  0ECB               	movlw	low STR_16
 28256  002692  0100               	movlb	0	; () banked
 28257  002694  6F77               	movwf	i2printf@fmt& (0+255),b
 28258  002696  0EFF               	movlw	high STR_16
 28259  002698  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 28260  00269A  ECBB  F052         	call	i2_printf	;wreg free
 28261  00269E                     i2l19920:
 28262                           
 28263                           ;buzzer.c: 152:     BuzzerOff();
 28264  00269E  EC89  F055         	call	i2_BuzzerOff	;wreg free
 28265                           
 28266                           ; BSR set to: 57
 28267                           ;buzzer.c: 153:     TMR4_Stop();
 28268  0026A2  EC18  F058         	call	i2_TMR4_Stop	;wreg free
 28269                           
 28270                           ; BSR set to: 57
 28271                           ;buzzer.c: 154:     TMR4_SetInterruptHandler(BuzzerHandler);
 28272  0026A6  0E7E               	movlw	low _BuzzerHandler
 28273  0026A8  6E01               	movwf	i2TMR4_SetInterruptHandler@InterruptHandler^0,c
 28274  0026AA  0EAF               	movlw	high _BuzzerHandler
 28275  0026AC  6E02               	movwf	(i2TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 28276  0026AE  EC57  F056         	call	i2_TMR4_SetInterruptHandler	;wreg free
 28277                           
 28278                           ;buzzer.c: 155:     switch(alarmState) {
 28279  0026B2  D18A               	goto	i2l20188
 28280  0026B4                     i2l19926:
 28281                           
 28282                           ; BSR set to: 1
 28283                           ;buzzer.c: 159:                     BuzzerOn(0xBD);
 28284  0026B4  0EBD               	movlw	189
 28285  0026B6  EC4A  F054         	call	i2_BuzzerOn
 28286                           
 28287                           ; BSR set to: 57
 28288                           ;buzzer.c: 160:                     TMR4_Period8BitSet(51);
 28289  0026BA  0E33               	movlw	51
 28290  0026BC  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28291  0026C0                     i2l19930:
 28292                           
 28293                           ;buzzer.c: 161:                     alarmStep++;
 28294  0026C0  0101               	movlb	1	; () banked
 28295  0026C2  2BF3               	incf	_alarmStep& (0+255),f,b
 28296  0026C4                     i2l19932:
 28297                           
 28298                           ; BSR set to: 1
 28299                           ;buzzer.c: 162:                     TMR4_Start();
 28300  0026C4  EC16  F058         	call	i2_TMR4_Start	;wreg free
 28301                           
 28302                           ;buzzer.c: 163:                     break;
 28303  0026C8  0012               	return	
 28304  0026CA                     i2l19934:
 28305                           
 28306                           ; BSR set to: 1
 28307                           ;buzzer.c: 165:                     TMR4_Period8BitSet(51);
 28308  0026CA  0E33               	movlw	51
 28309  0026CC  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28310  0026D0  D7F7               	goto	i2l19930
 28311  0026D2                     i2l19940:
 28312                           
 28313                           ; BSR set to: 1
 28314                           ;buzzer.c: 170:                     BuzzerOn(0xEE);
 28315  0026D2  0EEE               	movlw	238
 28316  0026D4  EC4A  F054         	call	i2_BuzzerOn
 28317                           
 28318                           ; BSR set to: 57
 28319                           ;buzzer.c: 171:                     TMR4_Period8BitSet(51);
 28320  0026D8  0E33               	movlw	51
 28321  0026DA  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28322  0026DE  D7F0               	goto	i2l19930
 28323  0026E0                     i2l2114:
 28324                           
 28325                           ; BSR set to: 1
 28326                           ;buzzer.c: 190:                     TMR4_Period8BitSet(255);
 28327                           
 28328                           ; BSR set to: 1
 28329  0026E0  0EFF               	movlw	255
 28330  0026E2  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28331  0026E6  D7EC               	goto	i2l19930
 28332  0026E8                     i2l19954:
 28333                           
 28334                           ; BSR set to: 1
 28335                           ;buzzer.c: 195:                     TMR4_Period8BitSet(255);
 28336  0026E8  0EFF               	movlw	255
 28337  0026EA  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28338  0026EE                     i2l19956:
 28339                           
 28340                           ;buzzer.c: 196:                     alarmStep=0;
 28341  0026EE  0E00               	movlw	0
 28342  0026F0  0101               	movlb	1	; () banked
 28343  0026F2  6FF3               	movwf	_alarmStep& (0+255),b
 28344  0026F4  D7E7               	goto	i2l19932
 28345  0026F6                     i2l19960:
 28346                           
 28347                           ; BSR set to: 1
 28348                           ;buzzer.c: 200:                     TMR4_Period8BitSet(51);
 28349  0026F6  0E33               	movlw	51
 28350  0026F8  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28351  0026FC  D7F8               	goto	i2l19956
 28352  0026FE                     i2l19968:
 28353                           
 28354                           ; BSR set to: 0
 28355  0026FE  0101               	movlb	1	; () banked
 28356  002700  51F3               	movf	_alarmStep& (0+255),w,b
 28357  002702  6E5B               	movwf	??i2_BuzzerTask^0,c
 28358  002704  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28359                           
 28360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28361                           ; Switch size 1, requested type "simple"
 28362                           ; Number of cases is 1, Range of values is 0 to 0
 28363                           ; switch strategies available:
 28364                           ; Name         Instructions Cycles
 28365                           ; simple_byte            4     3 (average)
 28366                           ;	Chosen strategy is simple_byte
 28367  002706  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28368  002708  0A00               	xorlw	0	; case 0
 28369  00270A  A4D8               	btfss	status,2,c
 28370  00270C  D7F4               	goto	i2l19960
 28371                           
 28372                           ; BSR set to: 1
 28373                           ; Switch size 1, requested type "simple"
 28374                           ; Number of cases is 19, Range of values is 0 to 18
 28375                           ; switch strategies available:
 28376                           ; Name         Instructions Cycles
 28377                           ; simple_byte           58    30 (average)
 28378                           ;	Chosen strategy is simple_byte
 28379  00270E  505B               	movf	??i2_BuzzerTask^0,w,c
 28380  002710  0A00               	xorlw	0	; case 0
 28381  002712  B4D8               	btfsc	status,2,c
 28382  002714  D7CF               	goto	i2l19926
 28383  002716  0A01               	xorlw	1	; case 1
 28384  002718  B4D8               	btfsc	status,2,c
 28385  00271A  D7D7               	goto	i2l19934
 28386  00271C  0A03               	xorlw	3	; case 2
 28387  00271E  B4D8               	btfsc	status,2,c
 28388  002720  D7D8               	goto	i2l19940
 28389  002722  0A01               	xorlw	1	; case 3
 28390  002724  B4D8               	btfsc	status,2,c
 28391  002726  D7DC               	goto	i2l2114
 28392  002728  0A07               	xorlw	7	; case 4
 28393  00272A  B4D8               	btfsc	status,2,c
 28394  00272C  D7D9               	goto	i2l2114
 28395  00272E  0A01               	xorlw	1	; case 5
 28396  002730  B4D8               	btfsc	status,2,c
 28397  002732  D7D6               	goto	i2l2114
 28398  002734  0A03               	xorlw	3	; case 6
 28399  002736  B4D8               	btfsc	status,2,c
 28400  002738  D7D3               	goto	i2l2114
 28401  00273A  0A01               	xorlw	1	; case 7
 28402  00273C  B4D8               	btfsc	status,2,c
 28403  00273E  D7D0               	goto	i2l2114
 28404  002740  0A0F               	xorlw	15	; case 8
 28405  002742  B4D8               	btfsc	status,2,c
 28406  002744  D7CD               	goto	i2l2114
 28407  002746  0A01               	xorlw	1	; case 9
 28408  002748  B4D8               	btfsc	status,2,c
 28409  00274A  D7CA               	goto	i2l2114
 28410  00274C  0A03               	xorlw	3	; case 10
 28411  00274E  B4D8               	btfsc	status,2,c
 28412  002750  D7C7               	goto	i2l2114
 28413  002752  0A01               	xorlw	1	; case 11
 28414  002754  B4D8               	btfsc	status,2,c
 28415  002756  D7C4               	goto	i2l2114
 28416  002758  0A07               	xorlw	7	; case 12
 28417  00275A  B4D8               	btfsc	status,2,c
 28418  00275C  D7C1               	goto	i2l2114
 28419  00275E  0A01               	xorlw	1	; case 13
 28420  002760  B4D8               	btfsc	status,2,c
 28421  002762  D7BE               	goto	i2l2114
 28422  002764  0A03               	xorlw	3	; case 14
 28423  002766  B4D8               	btfsc	status,2,c
 28424  002768  D7BB               	goto	i2l2114
 28425  00276A  0A01               	xorlw	1	; case 15
 28426  00276C  B4D8               	btfsc	status,2,c
 28427  00276E  D7B8               	goto	i2l2114
 28428  002770  0A1F               	xorlw	31	; case 16
 28429  002772  B4D8               	btfsc	status,2,c
 28430  002774  D7B5               	goto	i2l2114
 28431  002776  0A01               	xorlw	1	; case 17
 28432  002778  B4D8               	btfsc	status,2,c
 28433  00277A  D7B2               	goto	i2l2114
 28434  00277C  0A03               	xorlw	3	; case 18
 28435  00277E  B4D8               	btfsc	status,2,c
 28436  002780  D7B3               	goto	i2l19954
 28437  002782  D7B9               	goto	i2l19960
 28438  002784                     i2l19970:
 28439                           
 28440                           ; BSR set to: 1
 28441                           ;buzzer.c: 209:                     BuzzerOn(0xEE);
 28442  002784  0EEE               	movlw	238
 28443  002786  EC4A  F054         	call	i2_BuzzerOn
 28444                           
 28445                           ; BSR set to: 57
 28446                           ;buzzer.c: 210:                     TMR4_Period8BitSet(51);
 28447  00278A  0E33               	movlw	51
 28448  00278C  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28449  002790  D797               	goto	i2l19930
 28450  002792                     i2l19978:
 28451                           
 28452                           ; BSR set to: 1
 28453                           ;buzzer.c: 215:                     TMR4_Period8BitSet(51);
 28454  002792  0E33               	movlw	51
 28455  002794  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28456  002798  D793               	goto	i2l19930
 28457  00279A                     i2l19984:
 28458                           
 28459                           ; BSR set to: 1
 28460                           ;buzzer.c: 220:                     BuzzerOn(0x8D);
 28461  00279A  0E8D               	movlw	141
 28462  00279C  EC4A  F054         	call	i2_BuzzerOn
 28463                           
 28464                           ; BSR set to: 57
 28465                           ;buzzer.c: 221:                     TMR4_Period8BitSet(51);
 28466  0027A0  0E33               	movlw	51
 28467  0027A2  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28468  0027A6  D78C               	goto	i2l19930
 28469  0027A8                     i2l19992:
 28470                           
 28471                           ; BSR set to: 1
 28472                           ;buzzer.c: 226:                     TMR4_Period8BitSet(51);
 28473  0027A8  0E33               	movlw	51
 28474  0027AA  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28475  0027AE  D788               	goto	i2l19930
 28476  0027B0                     i2l19998:
 28477                           
 28478                           ; BSR set to: 1
 28479                           ;buzzer.c: 231:                     BuzzerOn(0xB2);
 28480  0027B0  0EB2               	movlw	178
 28481  0027B2  EC4A  F054         	call	i2_BuzzerOn
 28482                           
 28483                           ; BSR set to: 57
 28484                           ;buzzer.c: 232:                     TMR4_Period8BitSet(51);
 28485  0027B6  0E33               	movlw	51
 28486  0027B8  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28487  0027BC  D781               	goto	i2l19930
 28488  0027BE                     i2l2140:
 28489                           
 28490                           ; BSR set to: 1
 28491                           ;buzzer.c: 243:                     TMR4_Period8BitSet(255);
 28492                           
 28493                           ; BSR set to: 1
 28494  0027BE  0EFF               	movlw	255
 28495  0027C0  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28496  0027C4  D77D               	goto	i2l19930
 28497  0027C6                     i2l20012:
 28498                           
 28499                           ; BSR set to: 1
 28500                           ;buzzer.c: 248:                     TMR4_Period8BitSet(255);
 28501  0027C6  0EFF               	movlw	255
 28502  0027C8  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28503  0027CC  D790               	goto	i2l19956
 28504  0027CE                     i2l20018:
 28505                           
 28506                           ; BSR set to: 1
 28507                           ;buzzer.c: 253:                     TMR4_Period8BitSet(51);
 28508  0027CE  0E33               	movlw	51
 28509  0027D0  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28510  0027D4  D78C               	goto	i2l19956
 28511  0027D6                     i2l20026:
 28512                           
 28513                           ; BSR set to: 0
 28514  0027D6  0101               	movlb	1	; () banked
 28515  0027D8  51F3               	movf	_alarmStep& (0+255),w,b
 28516  0027DA  6E5B               	movwf	??i2_BuzzerTask^0,c
 28517  0027DC  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28518                           
 28519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28520                           ; Switch size 1, requested type "simple"
 28521                           ; Number of cases is 1, Range of values is 0 to 0
 28522                           ; switch strategies available:
 28523                           ; Name         Instructions Cycles
 28524                           ; simple_byte            4     3 (average)
 28525                           ;	Chosen strategy is simple_byte
 28526  0027DE  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28527  0027E0  0A00               	xorlw	0	; case 0
 28528  0027E2  A4D8               	btfss	status,2,c
 28529  0027E4  D7F4               	goto	i2l20018
 28530                           
 28531                           ; BSR set to: 1
 28532                           ; Switch size 1, requested type "simple"
 28533                           ; Number of cases is 13, Range of values is 0 to 12
 28534                           ; switch strategies available:
 28535                           ; Name         Instructions Cycles
 28536                           ; simple_byte           40    21 (average)
 28537                           ;	Chosen strategy is simple_byte
 28538  0027E6  505B               	movf	??i2_BuzzerTask^0,w,c
 28539  0027E8  0A00               	xorlw	0	; case 0
 28540  0027EA  B4D8               	btfsc	status,2,c
 28541  0027EC  D7CB               	goto	i2l19970
 28542  0027EE  0A01               	xorlw	1	; case 1
 28543  0027F0  B4D8               	btfsc	status,2,c
 28544  0027F2  D7CF               	goto	i2l19978
 28545  0027F4  0A03               	xorlw	3	; case 2
 28546  0027F6  B4D8               	btfsc	status,2,c
 28547  0027F8  D7D0               	goto	i2l19984
 28548  0027FA  0A01               	xorlw	1	; case 3
 28549  0027FC  B4D8               	btfsc	status,2,c
 28550  0027FE  D7D4               	goto	i2l19992
 28551  002800  0A07               	xorlw	7	; case 4
 28552  002802  B4D8               	btfsc	status,2,c
 28553  002804  D7D5               	goto	i2l19998
 28554  002806  0A01               	xorlw	1	; case 5
 28555  002808  B4D8               	btfsc	status,2,c
 28556  00280A  D7D9               	goto	i2l2140
 28557  00280C  0A03               	xorlw	3	; case 6
 28558  00280E  B4D8               	btfsc	status,2,c
 28559  002810  D7D6               	goto	i2l2140
 28560  002812  0A01               	xorlw	1	; case 7
 28561  002814  B4D8               	btfsc	status,2,c
 28562  002816  D7D3               	goto	i2l2140
 28563  002818  0A0F               	xorlw	15	; case 8
 28564  00281A  B4D8               	btfsc	status,2,c
 28565  00281C  D7D0               	goto	i2l2140
 28566  00281E  0A01               	xorlw	1	; case 9
 28567  002820  B4D8               	btfsc	status,2,c
 28568  002822  D7CD               	goto	i2l2140
 28569  002824  0A03               	xorlw	3	; case 10
 28570  002826  B4D8               	btfsc	status,2,c
 28571  002828  D7CA               	goto	i2l2140
 28572  00282A  0A01               	xorlw	1	; case 11
 28573  00282C  B4D8               	btfsc	status,2,c
 28574  00282E  D7C7               	goto	i2l2140
 28575  002830  0A07               	xorlw	7	; case 12
 28576  002832  B4D8               	btfsc	status,2,c
 28577  002834  D7C8               	goto	i2l20012
 28578  002836  D7CB               	goto	i2l20018
 28579  002838                     i2l20028:
 28580                           
 28581                           ; BSR set to: 1
 28582                           ;buzzer.c: 262:                     BuzzerOn(0xEE);
 28583  002838  0EEE               	movlw	238
 28584  00283A  EC4A  F054         	call	i2_BuzzerOn
 28585                           
 28586                           ; BSR set to: 57
 28587                           ;buzzer.c: 263:                     TMR4_Period8BitSet(46);
 28588  00283E  0E2E               	movlw	46
 28589  002840  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28590  002844  D73D               	goto	i2l19930
 28591  002846                     i2l20036:
 28592                           
 28593                           ; BSR set to: 1
 28594                           ;buzzer.c: 268:                     TMR4_Period8BitSet(26);
 28595  002846  0E1A               	movlw	26
 28596  002848  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28597  00284C  D739               	goto	i2l19930
 28598  00284E                     i2l20042:
 28599                           
 28600                           ; BSR set to: 1
 28601                           ;buzzer.c: 273:                     BuzzerOn(0x8D);
 28602  00284E  0E8D               	movlw	141
 28603  002850  EC4A  F054         	call	i2_BuzzerOn
 28604                           
 28605                           ; BSR set to: 57
 28606                           ;buzzer.c: 274:                     TMR4_Period8BitSet(46);
 28607  002854  0E2E               	movlw	46
 28608  002856  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28609  00285A  D732               	goto	i2l19930
 28610  00285C                     i2l20050:
 28611                           
 28612                           ; BSR set to: 1
 28613                           ;buzzer.c: 279:                     TMR4_Period8BitSet(26);
 28614  00285C  0E1A               	movlw	26
 28615  00285E  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28616  002862  D72E               	goto	i2l19930
 28617  002864                     i2l20056:
 28618                           
 28619                           ; BSR set to: 1
 28620                           ;buzzer.c: 284:                     BuzzerOn(0xB2);
 28621  002864  0EB2               	movlw	178
 28622  002866  EC4A  F054         	call	i2_BuzzerOn
 28623                           
 28624                           ; BSR set to: 57
 28625                           ;buzzer.c: 285:                     TMR4_Period8BitSet(46);
 28626  00286A  0E2E               	movlw	46
 28627  00286C  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28628  002870  D727               	goto	i2l19930
 28629  002872                     i2l20064:
 28630                           
 28631                           ; BSR set to: 1
 28632                           ;buzzer.c: 290:                     TMR4_Period8BitSet(102);
 28633  002872  0E66               	movlw	102
 28634  002874  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28635  002878  D723               	goto	i2l19930
 28636  00287A                     i2l20070:
 28637                           
 28638                           ; BSR set to: 1
 28639                           ;buzzer.c: 295:                     BuzzerOn(0x8D);
 28640  00287A  0E8D               	movlw	141
 28641  00287C  EC4A  F054         	call	i2_BuzzerOn
 28642                           
 28643                           ; BSR set to: 57
 28644                           ;buzzer.c: 296:                     TMR4_Period8BitSet(46);
 28645  002880  0E2E               	movlw	46
 28646  002882  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28647  002886  D71C               	goto	i2l19930
 28648  002888                     i2l20078:
 28649                           
 28650                           ; BSR set to: 1
 28651                           ;buzzer.c: 301:                     TMR4_Period8BitSet(26);
 28652  002888  0E1A               	movlw	26
 28653  00288A  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28654  00288E  D718               	goto	i2l19930
 28655  002890                     i2l20084:
 28656                           
 28657                           ; BSR set to: 1
 28658                           ;buzzer.c: 306:                     BuzzerOn(0xB2);
 28659  002890  0EB2               	movlw	178
 28660  002892  EC4A  F054         	call	i2_BuzzerOn
 28661                           
 28662                           ; BSR set to: 57
 28663                           ;buzzer.c: 307:                     TMR4_Period8BitSet(46);
 28664  002896  0E2E               	movlw	46
 28665  002898  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28666  00289C  D711               	goto	i2l19930
 28667  00289E                     i2l20092:
 28668                           
 28669                           ; BSR set to: 1
 28670                           ;buzzer.c: 312:                     TMR4_Period8BitSet(255);
 28671  00289E  0EFF               	movlw	255
 28672  0028A0  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28673  0028A4  D70D               	goto	i2l19930
 28674  0028A6                     i2l20098:
 28675                           
 28676                           ; BSR set to: 1
 28677                           ;buzzer.c: 317:                     BuzzerOn(0xEE);
 28678  0028A6  0EEE               	movlw	238
 28679  0028A8  EC4A  F054         	call	i2_BuzzerOn
 28680                           
 28681                           ; BSR set to: 57
 28682                           ;buzzer.c: 318:                     TMR4_Period8BitSet(46);
 28683  0028AC  0E2E               	movlw	46
 28684  0028AE  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28685  0028B2  D706               	goto	i2l19930
 28686  0028B4                     i2l20106:
 28687                           
 28688                           ; BSR set to: 1
 28689                           ;buzzer.c: 323:                     TMR4_Period8BitSet(26);
 28690  0028B4  0E1A               	movlw	26
 28691  0028B6  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28692  0028BA  D702               	goto	i2l19930
 28693  0028BC                     i2l20112:
 28694                           
 28695                           ; BSR set to: 1
 28696                           ;buzzer.c: 328:                     BuzzerOn(0x8D);
 28697  0028BC  0E8D               	movlw	141
 28698  0028BE  EC4A  F054         	call	i2_BuzzerOn
 28699                           
 28700                           ; BSR set to: 57
 28701                           ;buzzer.c: 329:                     TMR4_Period8BitSet(46);
 28702  0028C2  0E2E               	movlw	46
 28703  0028C4  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28704  0028C8  D6FB               	goto	i2l19930
 28705  0028CA                     i2l20120:
 28706                           
 28707                           ; BSR set to: 1
 28708                           ;buzzer.c: 334:                     TMR4_Period8BitSet(26);
 28709  0028CA  0E1A               	movlw	26
 28710  0028CC  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28711  0028D0  D6F7               	goto	i2l19930
 28712  0028D2                     i2l20126:
 28713                           
 28714                           ; BSR set to: 1
 28715                           ;buzzer.c: 339:                     BuzzerOn(0xB2);
 28716  0028D2  0EB2               	movlw	178
 28717  0028D4  EC4A  F054         	call	i2_BuzzerOn
 28718                           
 28719                           ; BSR set to: 57
 28720                           ;buzzer.c: 340:                     TMR4_Period8BitSet(46);
 28721  0028D8  0E2E               	movlw	46
 28722  0028DA  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28723  0028DE  D6F0               	goto	i2l19930
 28724  0028E0                     i2l20134:
 28725                           
 28726                           ; BSR set to: 1
 28727                           ;buzzer.c: 345:                     TMR4_Period8BitSet(102);
 28728  0028E0  0E66               	movlw	102
 28729  0028E2  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28730  0028E6  D6EC               	goto	i2l19930
 28731  0028E8                     i2l20140:
 28732                           
 28733                           ; BSR set to: 1
 28734                           ;buzzer.c: 350:                     BuzzerOn(0x8D);
 28735  0028E8  0E8D               	movlw	141
 28736  0028EA  EC4A  F054         	call	i2_BuzzerOn
 28737                           
 28738                           ; BSR set to: 57
 28739                           ;buzzer.c: 351:                     TMR4_Period8BitSet(46);
 28740  0028EE  0E2E               	movlw	46
 28741  0028F0  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28742  0028F4  D6E5               	goto	i2l19930
 28743  0028F6                     i2l20148:
 28744                           
 28745                           ; BSR set to: 1
 28746                           ;buzzer.c: 356:                     TMR4_Period8BitSet(26);
 28747  0028F6  0E1A               	movlw	26
 28748  0028F8  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28749  0028FC  D6E1               	goto	i2l19930
 28750  0028FE                     i2l20154:
 28751                           
 28752                           ; BSR set to: 1
 28753                           ;buzzer.c: 361:                     BuzzerOn(0xB2);
 28754  0028FE  0EB2               	movlw	178
 28755  002900  EC4A  F054         	call	i2_BuzzerOn
 28756                           
 28757                           ; BSR set to: 57
 28758                           ;buzzer.c: 362:                     TMR4_Period8BitSet(46);
 28759  002904  0E2E               	movlw	46
 28760  002906  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28761  00290A  D6DA               	goto	i2l19930
 28762  00290C                     i2l20162:
 28763                           
 28764                           ; BSR set to: 1
 28765                           ;buzzer.c: 369:                     TMR4_Period8BitSet(255);
 28766  00290C  0EFF               	movlw	255
 28767  00290E  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28768  002912  D6D6               	goto	i2l19930
 28769  002914                     i2l20168:
 28770                           
 28771                           ; BSR set to: 1
 28772                           ;buzzer.c: 374:                     TMR4_Period8BitSet(255);
 28773  002914  0EFF               	movlw	255
 28774  002916  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28775  00291A  D6E9               	goto	i2l19956
 28776  00291C                     i2l20174:
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;buzzer.c: 379:                     TMR4_Period8BitSet(51);
 28780  00291C  0E33               	movlw	51
 28781  00291E  ECE8  F056         	call	i2_TMR4_Period8BitSet
 28782  002922  D6E5               	goto	i2l19956
 28783  002924                     i2l20182:
 28784                           
 28785                           ; BSR set to: 0
 28786  002924  0101               	movlb	1	; () banked
 28787  002926  51F3               	movf	_alarmStep& (0+255),w,b
 28788  002928  6E5B               	movwf	??i2_BuzzerTask^0,c
 28789  00292A  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28790                           
 28791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28792                           ; Switch size 1, requested type "simple"
 28793                           ; Number of cases is 1, Range of values is 0 to 0
 28794                           ; switch strategies available:
 28795                           ; Name         Instructions Cycles
 28796                           ; simple_byte            4     3 (average)
 28797                           ;	Chosen strategy is simple_byte
 28798  00292C  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28799  00292E  0A00               	xorlw	0	; case 0
 28800  002930  A4D8               	btfss	status,2,c
 28801  002932  D7F4               	goto	i2l20174
 28802                           
 28803                           ; BSR set to: 1
 28804                           ; Switch size 1, requested type "simple"
 28805                           ; Number of cases is 23, Range of values is 0 to 22
 28806                           ; switch strategies available:
 28807                           ; Name         Instructions Cycles
 28808                           ; simple_byte           70    36 (average)
 28809                           ;	Chosen strategy is simple_byte
 28810  002934  505B               	movf	??i2_BuzzerTask^0,w,c
 28811  002936  0A00               	xorlw	0	; case 0
 28812  002938  B4D8               	btfsc	status,2,c
 28813  00293A  D77E               	goto	i2l20028
 28814  00293C  0A01               	xorlw	1	; case 1
 28815  00293E  B4D8               	btfsc	status,2,c
 28816  002940  D782               	goto	i2l20036
 28817  002942  0A03               	xorlw	3	; case 2
 28818  002944  B4D8               	btfsc	status,2,c
 28819  002946  D783               	goto	i2l20042
 28820  002948  0A01               	xorlw	1	; case 3
 28821  00294A  B4D8               	btfsc	status,2,c
 28822  00294C  D787               	goto	i2l20050
 28823  00294E  0A07               	xorlw	7	; case 4
 28824  002950  B4D8               	btfsc	status,2,c
 28825  002952  D788               	goto	i2l20056
 28826  002954  0A01               	xorlw	1	; case 5
 28827  002956  B4D8               	btfsc	status,2,c
 28828  002958  D78C               	goto	i2l20064
 28829  00295A  0A03               	xorlw	3	; case 6
 28830  00295C  B4D8               	btfsc	status,2,c
 28831  00295E  D78D               	goto	i2l20070
 28832  002960  0A01               	xorlw	1	; case 7
 28833  002962  B4D8               	btfsc	status,2,c
 28834  002964  D791               	goto	i2l20078
 28835  002966  0A0F               	xorlw	15	; case 8
 28836  002968  B4D8               	btfsc	status,2,c
 28837  00296A  D792               	goto	i2l20084
 28838  00296C  0A01               	xorlw	1	; case 9
 28839  00296E  B4D8               	btfsc	status,2,c
 28840  002970  D796               	goto	i2l20092
 28841  002972  0A03               	xorlw	3	; case 10
 28842  002974  B4D8               	btfsc	status,2,c
 28843  002976  D797               	goto	i2l20098
 28844  002978  0A01               	xorlw	1	; case 11
 28845  00297A  B4D8               	btfsc	status,2,c
 28846  00297C  D79B               	goto	i2l20106
 28847  00297E  0A07               	xorlw	7	; case 12
 28848  002980  B4D8               	btfsc	status,2,c
 28849  002982  D79C               	goto	i2l20112
 28850  002984  0A01               	xorlw	1	; case 13
 28851  002986  B4D8               	btfsc	status,2,c
 28852  002988  D7A0               	goto	i2l20120
 28853  00298A  0A03               	xorlw	3	; case 14
 28854  00298C  B4D8               	btfsc	status,2,c
 28855  00298E  D7A1               	goto	i2l20126
 28856  002990  0A01               	xorlw	1	; case 15
 28857  002992  B4D8               	btfsc	status,2,c
 28858  002994  D7A5               	goto	i2l20134
 28859  002996  0A1F               	xorlw	31	; case 16
 28860  002998  B4D8               	btfsc	status,2,c
 28861  00299A  D7A6               	goto	i2l20140
 28862  00299C  0A01               	xorlw	1	; case 17
 28863  00299E  B4D8               	btfsc	status,2,c
 28864  0029A0  D7AA               	goto	i2l20148
 28865  0029A2  0A03               	xorlw	3	; case 18
 28866  0029A4  B4D8               	btfsc	status,2,c
 28867  0029A6  D7AB               	goto	i2l20154
 28868  0029A8  0A01               	xorlw	1	; case 19
 28869  0029AA  B4D8               	btfsc	status,2,c
 28870  0029AC  D7AF               	goto	i2l20162
 28871  0029AE  0A07               	xorlw	7	; case 20
 28872  0029B0  B4D8               	btfsc	status,2,c
 28873  0029B2  D7AC               	goto	i2l20162
 28874  0029B4  0A01               	xorlw	1	; case 21
 28875  0029B6  B4D8               	btfsc	status,2,c
 28876  0029B8  D7A9               	goto	i2l20162
 28877  0029BA  0A03               	xorlw	3	; case 22
 28878  0029BC  B4D8               	btfsc	status,2,c
 28879  0029BE  D7AA               	goto	i2l20168
 28880  0029C0  D7AD               	goto	i2l20174
 28881  0029C2                     i2l20184:
 28882                           
 28883                           ; BSR set to: 0
 28884                           ;buzzer.c: 387:             BuzzerOff();
 28885  0029C2  EC89  F055         	call	i2_BuzzerOff	;wreg free
 28886                           
 28887                           ;buzzer.c: 388:             break;
 28888  0029C6  0012               	return	
 28889  0029C8                     i2l20188:
 28890                           
 28891                           ; BSR set to: 57
 28892  0029C8  0100               	movlb	0	; () banked
 28893  0029CA  51F6               	movf	_alarmState& (0+255),w,b
 28894  0029CC  6E5B               	movwf	??i2_BuzzerTask^0,c
 28895  0029CE  6A5C               	clrf	(??i2_BuzzerTask+1)^0,c
 28896                           
 28897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28898                           ; Switch size 1, requested type "simple"
 28899                           ; Number of cases is 1, Range of values is 0 to 0
 28900                           ; switch strategies available:
 28901                           ; Name         Instructions Cycles
 28902                           ; simple_byte            4     3 (average)
 28903                           ;	Chosen strategy is simple_byte
 28904  0029D0  505C               	movf	(??i2_BuzzerTask+1)^0,w,c
 28905  0029D2  0A00               	xorlw	0	; case 0
 28906  0029D4  A4D8               	btfss	status,2,c
 28907  0029D6  D7F5               	goto	i2l20184
 28908                           
 28909                           ; BSR set to: 0
 28910                           ; Switch size 1, requested type "simple"
 28911                           ; Number of cases is 4, Range of values is 0 to 4
 28912                           ; switch strategies available:
 28913                           ; Name         Instructions Cycles
 28914                           ; simple_byte           13     7 (average)
 28915                           ;	Chosen strategy is simple_byte
 28916  0029D8  505B               	movf	??i2_BuzzerTask^0,w,c
 28917  0029DA  0A00               	xorlw	0	; case 0
 28918  0029DC  B4D8               	btfsc	status,2,c
 28919  0029DE  D7F1               	goto	i2l20184
 28920  0029E0  0A01               	xorlw	1	; case 1
 28921  0029E2  B4D8               	btfsc	status,2,c
 28922  0029E4  D68C               	goto	i2l19968
 28923  0029E6  0A03               	xorlw	3	; case 2
 28924  0029E8  B4D8               	btfsc	status,2,c
 28925  0029EA  D6F5               	goto	i2l20026
 28926  0029EC  0A06               	xorlw	6	; case 4
 28927  0029EE  B4D8               	btfsc	status,2,c
 28928  0029F0  D799               	goto	i2l20182
 28929  0029F2  D7E7               	goto	i2l20184
 28930  0029F4                     __end_ofi2_BuzzerTask:
 28931                           	opt callstack 0
 28932                           
 28933 ;; *************** function i2_TMR4_Start *****************
 28934 ;; Defined at:
 28935 ;;		line 108 in file "mcc_generated_files/tmr4.c"
 28936 ;; Parameters:    Size  Location     Type
 28937 ;;		None
 28938 ;; Auto vars:     Size  Location     Type
 28939 ;;		None
 28940 ;; Return value:  Size  Location     Type
 28941 ;;                  1    wreg      void 
 28942 ;; Registers used:
 28943 ;;		None
 28944 ;; Tracked objects:
 28945 ;;		On entry : 3C/1
 28946 ;;		On exit  : 3C/0
 28947 ;;		Unchanged: 3C/0
 28948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28953 ;;Total ram usage:        0 bytes
 28954 ;; Hardware stack levels used:    1
 28955 ;; This function calls:
 28956 ;;		Nothing
 28957 ;; This function is called by:
 28958 ;;		i2_BuzzerTask
 28959 ;; This function uses a non-reentrant model
 28960 ;;
 28961                           
 28962                           	psect	text224
 28963  00B02C                     __ptext224:
 28964                           	opt callstack 0
 28965  00B02C                     i2_TMR4_Start:
 28966                           	opt callstack 13
 28967                           
 28968                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
 28969                           
 28970                           ;incstack = 0
 28971  00B02C  8EA0               	bsf	160,7,c	;volatile
 28972  00B02E  0012               	return		;funcret
 28973  00B030                     __end_ofi2_TMR4_Start:
 28974                           	opt callstack 0
 28975                           
 28976 ;; *************** function i2_TMR4_SetInterruptHandler *****************
 28977 ;; Defined at:
 28978 ;;		line 178 in file "mcc_generated_files/tmr4.c"
 28979 ;; Parameters:    Size  Location     Type
 28980 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 28981 ;;		 -> BuzzerTestHandler(1), BuzzerHandler(1), TMR4_DefaultInterruptHandler(1), 
 28982 ;; Auto vars:     Size  Location     Type
 28983 ;;		None
 28984 ;; Return value:  Size  Location     Type
 28985 ;;                  1    wreg      void 
 28986 ;; Registers used:
 28987 ;;		wreg, status,2, status,0
 28988 ;; Tracked objects:
 28989 ;;		On entry : 3F/39
 28990 ;;		On exit  : 3F/39
 28991 ;;		Unchanged: 3E/0
 28992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28997 ;;Total ram usage:        2 bytes
 28998 ;; Hardware stack levels used:    1
 28999 ;; This function calls:
 29000 ;;		Nothing
 29001 ;; This function is called by:
 29002 ;;		i2_BuzzerTask
 29003 ;; This function uses a non-reentrant model
 29004 ;;
 29005                           
 29006                           	psect	text225
 29007  00ACAE                     __ptext225:
 29008                           	opt callstack 0
 29009  00ACAE                     i2_TMR4_SetInterruptHandler:
 29010                           	opt callstack 13
 29011                           
 29012                           ; BSR set to: 57
 29013                           ;mcc_generated_files/tmr4.c: 179:     TMR4_InterruptHandler = InterruptHandler;
 29014                           
 29015                           ;incstack = 0
 29016  00ACAE  0060  F004  F2ED   	movff	i2TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 29017  00ACB4  0060  F008  F2EE   	movff	i2TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 29018                           
 29019                           ; BSR set to: 57
 29020  00ACBA  0012               	return		;funcret
 29021  00ACBC                     __end_ofi2_TMR4_SetInterruptHandler:
 29022                           	opt callstack 0
 29023                           
 29024 ;; *************** function i2_TMR4_Period8BitSet *****************
 29025 ;; Defined at:
 29026 ;;		line 155 in file "mcc_generated_files/tmr4.c"
 29027 ;; Parameters:    Size  Location     Type
 29028 ;;  periodVal       1    wreg     unsigned char 
 29029 ;; Auto vars:     Size  Location     Type
 29030 ;;  periodVal       1    0[COMRAM] unsigned char 
 29031 ;; Return value:  Size  Location     Type
 29032 ;;                  1    wreg      void 
 29033 ;; Registers used:
 29034 ;;		wreg
 29035 ;; Tracked objects:
 29036 ;;		On entry : 4/39
 29037 ;;		On exit  : 0/0
 29038 ;;		Unchanged: 0/0
 29039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29044 ;;Total ram usage:        1 bytes
 29045 ;; Hardware stack levels used:    1
 29046 ;; This function calls:
 29047 ;;		Nothing
 29048 ;; This function is called by:
 29049 ;;		i2_BuzzerTask
 29050 ;; This function uses a non-reentrant model
 29051 ;;
 29052                           
 29053                           	psect	text226
 29054  00ADD0                     __ptext226:
 29055                           	opt callstack 0
 29056  00ADD0                     i2_TMR4_Period8BitSet:
 29057                           	opt callstack 13
 29058                           
 29059                           ; BSR set to: 57
 29060                           ;incstack = 0
 29061                           ;i2TMR4_Period8BitSet@periodVal stored from wreg
 29062  00ADD0  6E01               	movwf	i2TMR4_Period8BitSet@periodVal^0,c
 29063                           
 29064                           ;mcc_generated_files/tmr4.c: 155: void TMR4_Period8BitSet(uint8_t periodVal);mcc_generat
      +                          ed_files/tmr4.c: 156: {;mcc_generated_files/tmr4.c: 157:    PR4 = periodVal;
 29065  00ADD2  0060  F007  FF9F   	movff	i2TMR4_Period8BitSet@periodVal,16287	;volatile
 29066  00ADD8  0012               	return		;funcret
 29067  00ADDA                     __end_ofi2_TMR4_Period8BitSet:
 29068                           	opt callstack 0
 29069                           
 29070 ;; *************** function i2_SetMonitorFailAlarm *****************
 29071 ;; Defined at:
 29072 ;;		line 225 in file "alarm.c"
 29073 ;; Parameters:    Size  Location     Type
 29074 ;;		None
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;		None
 29077 ;; Return value:  Size  Location     Type
 29078 ;;                  1    wreg      void 
 29079 ;; Registers used:
 29080 ;;		wreg, status,2
 29081 ;; Tracked objects:
 29082 ;;		On entry : 3F/2
 29083 ;;		On exit  : 3F/2
 29084 ;;		Unchanged: 0/0
 29085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29090 ;;Total ram usage:        0 bytes
 29091 ;; Hardware stack levels used:    1
 29092 ;; This function calls:
 29093 ;;		Nothing
 29094 ;; This function is called by:
 29095 ;;		i2_BuzzerTask
 29096 ;; This function uses a non-reentrant model
 29097 ;;
 29098                           
 29099                           	psect	text227
 29100  00AF84                     __ptext227:
 29101                           	opt callstack 0
 29102  00AF84                     i2_SetMonitorFailAlarm:
 29103                           	opt callstack 13
 29104                           
 29105                           ; BSR set to: 2
 29106                           ;alarm.c: 226:     monitorFailAlarm = 1;
 29107                           
 29108                           ;incstack = 0
 29109  00AF84  0E01               	movlw	1
 29110  00AF86  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 29111                           
 29112                           ; BSR set to: 2
 29113  00AF88  0012               	return		;funcret
 29114  00AF8A                     __end_ofi2_SetMonitorFailAlarm:
 29115                           	opt callstack 0
 29116                           
 29117 ;; *************** function i2_BuzzerOn *****************
 29118 ;; Defined at:
 29119 ;;		line 446 in file "buzzer.c"
 29120 ;; Parameters:    Size  Location     Type
 29121 ;;  period          1    wreg     unsigned char 
 29122 ;; Auto vars:     Size  Location     Type
 29123 ;;  period          1    0[COMRAM] unsigned char 
 29124 ;; Return value:  Size  Location     Type
 29125 ;;                  1    wreg      void 
 29126 ;; Registers used:
 29127 ;;		wreg, status,2, cstack
 29128 ;; Tracked objects:
 29129 ;;		On entry : 3C/1
 29130 ;;		On exit  : 3F/39
 29131 ;;		Unchanged: 0/0
 29132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29137 ;;Total ram usage:        1 bytes
 29138 ;; Hardware stack levels used:    1
 29139 ;; Hardware stack levels required when called:    1
 29140 ;; This function calls:
 29141 ;;		i2_CMP1_Enable
 29142 ;; This function is called by:
 29143 ;;		i2_BuzzerTask
 29144 ;; This function uses a non-reentrant model
 29145 ;;
 29146                           
 29147                           	psect	text228
 29148  00A894                     __ptext228:
 29149                           	opt callstack 0
 29150  00A894                     i2_BuzzerOn:
 29151                           	opt callstack 12
 29152                           
 29153                           ; BSR set to: 2
 29154                           ;incstack = 0
 29155                           ;i2BuzzerOn@period stored from wreg
 29156  00A894  6E01               	movwf	i2BuzzerOn@period^0,c
 29157                           
 29158                           ;buzzer.c: 448:     T2PR = period;
 29159  00A896  0060  F007  FFAB   	movff	i2BuzzerOn@period,16299	;volatile
 29160                           
 29161                           ;buzzer.c: 449:     PWM6CON = 0x80;
 29162  00A89C  0E80               	movlw	128
 29163  00A89E  6E6A               	movwf	106,c	;volatile
 29164                           
 29165                           ;buzzer.c: 451:     on = 1;
 29166  00A8A0  0E01               	movlw	1
 29167  00A8A2  0100               	movlb	0	; () banked
 29168  00A8A4  6FF5               	movwf	_on& (0+255),b
 29169                           
 29170                           ; BSR set to: 0
 29171                           ;buzzer.c: 452:     detected = 0;
 29172  00A8A6  0E00               	movlw	0
 29173  00A8A8  6FF4               	movwf	_detected& (0+255),b
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;buzzer.c: 454:     CMP1_Enable();
 29177  00A8AA  EC6B  F057         	call	i2_CMP1_Enable	;wreg free
 29178                           
 29179                           ; BSR set to: 57
 29180  00A8AE  0012               	return		;funcret
 29181  00A8B0                     __end_ofi2_BuzzerOn:
 29182                           	opt callstack 0
 29183                           
 29184 ;; *************** function _TMR1_ISR *****************
 29185 ;; Defined at:
 29186 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 29187 ;; Parameters:    Size  Location     Type
 29188 ;;		None
 29189 ;; Auto vars:     Size  Location     Type
 29190 ;;		None
 29191 ;; Return value:  Size  Location     Type
 29192 ;;                  1    wreg      void 
 29193 ;; Registers used:
 29194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29195 ;; Tracked objects:
 29196 ;;		On entry : 3F/39
 29197 ;;		On exit  : 0/0
 29198 ;;		Unchanged: 0/0
 29199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29204 ;;Total ram usage:        0 bytes
 29205 ;; Hardware stack levels used:    1
 29206 ;; Hardware stack levels required when called:   14
 29207 ;; This function calls:
 29208 ;;		Absolute function
 29209 ;;		_ButtonTask
 29210 ;;		_TMR1_DefaultInterruptHandler
 29211 ;;		_TMR1_WriteTimer
 29212 ;; This function is called by:
 29213 ;;		_INTERRUPT_InterruptManager
 29214 ;; This function uses a non-reentrant model
 29215 ;;
 29216                           
 29217                           	psect	text229
 29218  00A1FE                     __ptext229:
 29219                           	opt callstack 0
 29220  00A1FE                     _TMR1_ISR:
 29221                           	opt callstack 2
 29222                           
 29223                           ; BSR set to: 57
 29224                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 29225                           
 29226                           ; BSR set to: 57
 29227                           ;incstack = 0
 29228  00A1FE  91A4               	bcf	164,0,b	;volatile
 29229                           
 29230                           ; BSR set to: 57
 29231                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 29232  00A200  0060  FB74  F001   	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 29233  00A206  0060  FB78  F002   	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 29234  00A20C  EC16  F053         	call	_TMR1_WriteTimer	;wreg free
 29235                           
 29236                           ; BSR set to: 57
 29237                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 29238  00A210  0102               	movlb	2	; () banked
 29239  00A212  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 29240  00A214  11DC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 29241  00A216  B4D8               	btfsc	status,2,c
 29242  00A218  0012               	return	
 29243                           
 29244                           ; BSR set to: 2
 29245                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 29246  00A21A  D801               	call	i2u2150_48
 29247  00A21C  0012               	return	
 29248  00A21E                     i2u2150_48:
 29249  00A21E  0005               	push	
 29250  00A220  6EFA               	movwf	pclath,c
 29251  00A222  51DB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 29252  00A224  6EFD               	movwf	tosl,c
 29253  00A226  51DC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 29254  00A228  6EFE               	movwf	tosh,c
 29255  00A22A  6AFF               	clrf	tosu,c
 29256  00A22C  50FA               	movf	pclath,w,c
 29257  00A22E  0012               	return		;indir
 29258  00A230                     __end_of_TMR1_ISR:
 29259                           	opt callstack 0
 29260                           
 29261 ;; *************** function _TMR1_WriteTimer *****************
 29262 ;; Defined at:
 29263 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 29264 ;; Parameters:    Size  Location     Type
 29265 ;;  timerVal        2    0[COMRAM] unsigned short 
 29266 ;; Auto vars:     Size  Location     Type
 29267 ;;		None
 29268 ;; Return value:  Size  Location     Type
 29269 ;;                  1    wreg      void 
 29270 ;; Registers used:
 29271 ;;		None
 29272 ;; Tracked objects:
 29273 ;;		On entry : 3F/39
 29274 ;;		On exit  : 3F/39
 29275 ;;		Unchanged: 3E/0
 29276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29281 ;;Total ram usage:        2 bytes
 29282 ;; Hardware stack levels used:    1
 29283 ;; This function calls:
 29284 ;;		Nothing
 29285 ;; This function is called by:
 29286 ;;		_TMR1_ISR
 29287 ;; This function uses a non-reentrant model
 29288 ;;
 29289                           
 29290                           	psect	text230
 29291  00A62C                     __ptext230:
 29292                           	opt callstack 0
 29293  00A62C                     _TMR1_WriteTimer:
 29294                           	opt callstack 15
 29295                           
 29296                           ; BSR set to: 57
 29297                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
 29298                           
 29299                           ;incstack = 0
 29300  00A62C  A4B2               	btfss	178,2,c	;volatile
 29301  00A62E  D009               	goto	i2l860
 29302                           
 29303                           ; BSR set to: 57
 29304                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 29305  00A630  90B2               	bcf	178,0,c	;volatile
 29306                           
 29307                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 29308  00A632  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29309                           
 29310                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 29311  00A638  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29312                           
 29313                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 29314  00A63E  80B2               	bsf	178,0,c	;volatile
 29315                           
 29316                           ;mcc_generated_files/tmr1.c: 140:     }
 29317  00A640  0012               	return	
 29318  00A642                     i2l860:
 29319                           
 29320                           ; BSR set to: 57
 29321                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 29322  00A642  0060  F00B  FFB1   	movff	TMR1_WriteTimer@timerVal+1,16305	;volatile
 29323                           
 29324                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 29325  00A648  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
 29326                           
 29327                           ; BSR set to: 57
 29328  00A64E  0012               	return		;funcret
 29329  00A650                     __end_of_TMR1_WriteTimer:
 29330                           	opt callstack 0
 29331                           
 29332 ;; *************** function _ButtonTask *****************
 29333 ;; Defined at:
 29334 ;;		line 43 in file "buttons.c"
 29335 ;; Parameters:    Size  Location     Type
 29336 ;;		None
 29337 ;; Auto vars:     Size  Location     Type
 29338 ;;		None
 29339 ;; Return value:  Size  Location     Type
 29340 ;;                  1    wreg      void 
 29341 ;; Registers used:
 29342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29343 ;; Tracked objects:
 29344 ;;		On entry : 3F/2
 29345 ;;		On exit  : 3F/0
 29346 ;;		Unchanged: 0/0
 29347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29352 ;;Total ram usage:        1 bytes
 29353 ;; Hardware stack levels used:    1
 29354 ;; Hardware stack levels required when called:   13
 29355 ;; This function calls:
 29356 ;;		i2_DisableAlarmSV1
 29357 ;;		i2_HistAlarm
 29358 ;;		i2_MuteAlarm
 29359 ;;		i2_printf
 29360 ;; This function is called by:
 29361 ;;		_ButtonInit
 29362 ;;		_TMR1_ISR
 29363 ;; This function uses a non-reentrant model
 29364 ;;
 29365                           
 29366                           	psect	text231
 29367  006F44                     __ptext231:
 29368                           	opt callstack 0
 29369  006F44                     _ButtonTask:
 29370                           	opt callstack 2
 29371                           
 29372                           ; BSR set to: 2
 29373                           ;buttons.c: 44:     static int cnt = 0;;buttons.c: 45:     cnt++;
 29374                           
 29375                           ; BSR set to: 57
 29376                           ;incstack = 0
 29377  006F44  4B84               	infsnz	ButtonTask@cnt& (0+255),f,b
 29378  006F46  2B85               	incf	(ButtonTask@cnt+1)& (0+255),f,b
 29379                           
 29380                           ; BSR set to: 2
 29381                           ;buttons.c: 47:     muteButton = !PORTDbits.RD2 | (muteButton << 1);
 29382  006F48  0100               	movlb	0	; () banked
 29383  006F4A  90D8               	bcf	status,0,c
 29384  006F4C  35F9               	rlcf	_muteButton& (0+255),w,b
 29385  006F4E  6FC7               	movwf	??_ButtonTask& (0+255),b
 29386  006F50  B4CD               	btfsc	205,2,c	;volatile
 29387  006F52  D002               	goto	i2u1981_40
 29388  006F54  0E01               	movlw	1
 29389  006F56  D001               	goto	i2u1982_40
 29390  006F58                     i2u1981_40:
 29391  006F58  0E00               	movlw	0
 29392  006F5A                     i2u1982_40:
 29393  006F5A  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29394  006F5C  6FF9               	movwf	_muteButton& (0+255),b
 29395                           
 29396                           ; BSR set to: 0
 29397                           ;buttons.c: 48:     histButton = !PORTDbits.RD1 | (histButton << 1);
 29398  006F5E  90D8               	bcf	status,0,c
 29399  006F60  35F8               	rlcf	_histButton& (0+255),w,b
 29400  006F62  6FC7               	movwf	??_ButtonTask& (0+255),b
 29401  006F64  B2CD               	btfsc	205,1,c	;volatile
 29402  006F66  D002               	goto	i2u1983_40
 29403  006F68  0E01               	movlw	1
 29404  006F6A  D001               	goto	i2u1984_40
 29405  006F6C                     i2u1983_40:
 29406  006F6C  0E00               	movlw	0
 29407  006F6E                     i2u1984_40:
 29408  006F6E  11C7               	iorwf	??_ButtonTask& (0+255),w,b
 29409  006F70  6FF8               	movwf	_histButton& (0+255),b
 29410                           
 29411                           ; BSR set to: 0
 29412                           ;buttons.c: 49:     if ((muteButton) == 0xF0) {
 29413  006F72  0EF0               	movlw	240
 29414  006F74  19F9               	xorwf	_muteButton& (0+255),w,b
 29415  006F76  A4D8               	btfss	status,2,c
 29416  006F78  D005               	goto	i2l20678
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;buttons.c: 50:         MuteAlarm();
 29420  006F7A  EC8D  F025         	call	i2_MuteAlarm	;wreg free
 29421                           
 29422                           ;buttons.c: 52:         muteButton = 0;
 29423  006F7E  0E00               	movlw	0
 29424  006F80  0100               	movlb	0	; () banked
 29425  006F82  6FF9               	movwf	_muteButton& (0+255),b
 29426  006F84                     i2l20678:
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;buttons.c: 54:     if ((histButton) == 0xF0) {
 29430  006F84  0EF0               	movlw	240
 29431  006F86  19F8               	xorwf	_histButton& (0+255),w,b
 29432  006F88  A4D8               	btfss	status,2,c
 29433  006F8A  D005               	goto	i2l20684
 29434                           
 29435                           ; BSR set to: 0
 29436                           ;buttons.c: 55:         HistAlarm();
 29437  006F8C  EC25  F039         	call	i2_HistAlarm	;wreg free
 29438                           
 29439                           ;buttons.c: 57:         histButton = 0;
 29440  006F90  0E00               	movlw	0
 29441  006F92  0100               	movlb	0	; () banked
 29442  006F94  6FF8               	movwf	_histButton& (0+255),b
 29443  006F96                     i2l20684:
 29444                           
 29445                           ; BSR set to: 0
 29446                           ;buttons.c: 59:     if (muteButton == 0xFF && histButton == 0xFF) {
 29447  006F96  29F9               	incf	_muteButton& (0+255),w,b
 29448  006F98  A4D8               	btfss	status,2,c
 29449  006F9A  D00C               	goto	i2l20694
 29450                           
 29451                           ; BSR set to: 0
 29452  006F9C  29F8               	incf	_histButton& (0+255),w,b
 29453  006F9E  A4D8               	btfss	status,2,c
 29454  006FA0  D009               	goto	i2l20694
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;buttons.c: 60:         DisableAlarmSV1();
 29458  006FA2  ECC5  F057         	call	i2_DisableAlarmSV1	;wreg free
 29459                           
 29460                           ; BSR set to: 0
 29461  006FA6  82BA               	bsf	186,1,c	;volatile
 29462                           
 29463                           ; BSR set to: 0
 29464                           ;buttons.c: 62:         printf("\r\nDIS SV1 ALARM!\r\n");
 29465  006FA8  0E98               	movlw	low STR_14
 29466  006FAA  6F77               	movwf	i2printf@fmt& (0+255),b
 29467  006FAC  0EFE               	movlw	high STR_14
 29468  006FAE  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29469  006FB0  ECBB  F052         	call	i2_printf	;wreg free
 29470  006FB4                     i2l20694:
 29471                           
 29472                           ;buttons.c: 64:     if (ledType!=0) {
 29473  006FB4  0100               	movlb	0	; () banked
 29474  006FB6  51F7               	movf	_ledType& (0+255),w,b
 29475  006FB8  B4D8               	btfsc	status,2,c
 29476  006FBA  D040               	goto	i2l20726
 29477                           
 29478                           ; BSR set to: 0
 29479                           ;buttons.c: 65:         if (ledCnt == 0) do { LATDbits.LATD3 = 1; } while(0);
 29480  006FBC  51E6               	movf	_ledCnt& (0+255),w,b
 29481  006FBE  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29482  006FC0  B4D8               	btfsc	status,2,c
 29483                           
 29484                           ; BSR set to: 0
 29485  006FC2  86BD               	bsf	189,3,c	;volatile
 29486                           
 29487                           ; BSR set to: 0
 29488                           ;buttons.c: 67:         if ((ledCnt == 2 && ledType==1) ||
 29489  006FC4  0E02               	movlw	2
 29490  006FC6  19E6               	xorwf	_ledCnt& (0+255),w,b
 29491  006FC8  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29492  006FCA  A4D8               	btfss	status,2,c
 29493  006FCC  D003               	goto	i2u1992_40
 29494                           
 29495                           ; BSR set to: 0
 29496  006FCE  05F7               	decf	_ledType& (0+255),w,b
 29497  006FD0  B4D8               	btfsc	status,2,c
 29498  006FD2  D011               	goto	i2u1996_40
 29499  006FD4                     i2u1992_40:
 29500                           
 29501                           ; BSR set to: 0
 29502  006FD4  0E0F               	movlw	15
 29503  006FD6  19E6               	xorwf	_ledCnt& (0+255),w,b
 29504  006FD8  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29505  006FDA  A4D8               	btfss	status,2,c
 29506  006FDC  D004               	goto	i2u1994_40
 29507                           
 29508                           ; BSR set to: 0
 29509  006FDE  0E02               	movlw	2
 29510  006FE0  19F7               	xorwf	_ledType& (0+255),w,b
 29511  006FE2  B4D8               	btfsc	status,2,c
 29512  006FE4  D008               	goto	i2u1996_40
 29513  006FE6                     i2u1994_40:
 29514                           
 29515                           ; BSR set to: 0
 29516  006FE6  0E0F               	movlw	15
 29517  006FE8  19E6               	xorwf	_ledCnt& (0+255),w,b
 29518  006FEA  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29519  006FEC  A4D8               	btfss	status,2,c
 29520  006FEE  D004               	goto	i2l20710
 29521                           
 29522                           ; BSR set to: 0
 29523  006FF0  0E04               	movlw	4
 29524  006FF2  19F7               	xorwf	_ledType& (0+255),w,b
 29525  006FF4  B4D8               	btfsc	status,2,c
 29526  006FF6                     i2u1996_40:
 29527                           
 29528                           ; BSR set to: 0
 29529                           
 29530                           ;buttons.c: 70:         {;buttons.c: 71:             do { LATDbits.LATD3 = 0; } while(0)
      +                          ;
 29531  006FF6  96BD               	bcf	189,3,c	;volatile
 29532  006FF8                     i2l20710:
 29533                           
 29534                           ; BSR set to: 0
 29535                           ;buttons.c: 73:         if ((ledCnt == 75 && ledType==1) ||
 29536  006FF8  0E4B               	movlw	75
 29537  006FFA  19E6               	xorwf	_ledCnt& (0+255),w,b
 29538  006FFC  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29539  006FFE  A4D8               	btfss	status,2,c
 29540  007000  D003               	goto	i2u1998_40
 29541                           
 29542                           ; BSR set to: 0
 29543  007002  05F7               	decf	_ledType& (0+255),w,b
 29544  007004  B4D8               	btfsc	status,2,c
 29545  007006  D012               	goto	i2u2002_40
 29546  007008                     i2u1998_40:
 29547                           
 29548                           ; BSR set to: 0
 29549  007008  0E4B               	movlw	75
 29550  00700A  19E6               	xorwf	_ledCnt& (0+255),w,b
 29551  00700C  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29552  00700E  A4D8               	btfss	status,2,c
 29553  007010  D004               	goto	i2u2000_40
 29554                           
 29555                           ; BSR set to: 0
 29556  007012  0E02               	movlw	2
 29557  007014  19F7               	xorwf	_ledType& (0+255),w,b
 29558  007016  B4D8               	btfsc	status,2,c
 29559  007018  D009               	goto	i2u2002_40
 29560  00701A                     i2u2000_40:
 29561                           
 29562                           ; BSR set to: 0
 29563  00701A  0E1E               	movlw	30
 29564  00701C  19E6               	xorwf	_ledCnt& (0+255),w,b
 29565  00701E  11E7               	iorwf	(_ledCnt+1)& (0+255),w,b
 29566  007020  A4D8               	btfss	status,2,c
 29567  007022  D009               	goto	i2l20724
 29568                           
 29569                           ; BSR set to: 0
 29570  007024  0E04               	movlw	4
 29571  007026  19F7               	xorwf	_ledType& (0+255),w,b
 29572  007028  A4D8               	btfss	status,2,c
 29573  00702A  D005               	goto	i2l20724
 29574  00702C                     i2u2002_40:
 29575                           
 29576                           ; BSR set to: 0
 29577                           ;buttons.c: 76:         {;buttons.c: 77:             ledCnt = 0;
 29578  00702C  0E00               	movlw	0
 29579  00702E  6FE7               	movwf	(_ledCnt+1)& (0+255),b
 29580  007030  0E00               	movlw	0
 29581  007032  6FE6               	movwf	_ledCnt& (0+255),b
 29582                           
 29583                           ;buttons.c: 78:         } else {
 29584  007034  0012               	return	
 29585  007036                     i2l20724:
 29586                           
 29587                           ; BSR set to: 0
 29588                           ;buttons.c: 79:             ledCnt++;
 29589  007036  4BE6               	infsnz	_ledCnt& (0+255),f,b
 29590  007038  2BE7               	incf	(_ledCnt+1)& (0+255),f,b
 29591  00703A  0012               	return	
 29592  00703C                     i2l20726:
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;buttons.c: 82:         ledCnt=0;
 29596  00703C  0E00               	movlw	0
 29597  00703E  6FE7               	movwf	(_ledCnt+1)& (0+255),b
 29598  007040  0E00               	movlw	0
 29599  007042  6FE6               	movwf	_ledCnt& (0+255),b
 29600                           
 29601                           ; BSR set to: 0
 29602  007044  96BD               	bcf	189,3,c	;volatile
 29603                           
 29604                           ; BSR set to: 0
 29605  007046  0012               	return		;funcret
 29606  007048                     __end_of_ButtonTask:
 29607                           	opt callstack 0
 29608                           
 29609 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 29610 ;; Defined at:
 29611 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 29612 ;; Parameters:    Size  Location     Type
 29613 ;;		None
 29614 ;; Auto vars:     Size  Location     Type
 29615 ;;		None
 29616 ;; Return value:  Size  Location     Type
 29617 ;;                  1    wreg      void 
 29618 ;; Registers used:
 29619 ;;		None
 29620 ;; Tracked objects:
 29621 ;;		On entry : 3F/2
 29622 ;;		On exit  : 3F/2
 29623 ;;		Unchanged: 3F/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29629 ;;Total ram usage:        0 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; This function calls:
 29632 ;;		Nothing
 29633 ;; This function is called by:
 29634 ;;		_TMR1_Initialize
 29635 ;;		_TMR1_ISR
 29636 ;; This function uses a non-reentrant model
 29637 ;;
 29638                           
 29639                           	psect	text232
 29640  00B058                     __ptext232:
 29641                           	opt callstack 0
 29642  00B058                     _TMR1_DefaultInterruptHandler:
 29643                           	opt callstack 15
 29644                           
 29645                           ; BSR set to: 2
 29646                           
 29647                           ; BSR set to: 0
 29648                           ;incstack = 0
 29649  00B058  0012               	return		;funcret
 29650  00B05A                     __end_of_TMR1_DefaultInterruptHandler:
 29651                           	opt callstack 0
 29652                           
 29653 ;; *************** function i2_MuteAlarm *****************
 29654 ;; Defined at:
 29655 ;;		line 377 in file "alarm.c"
 29656 ;; Parameters:    Size  Location     Type
 29657 ;;		None
 29658 ;; Auto vars:     Size  Location     Type
 29659 ;;  MuteAlarm       2   38[BANK0 ] int 
 29660 ;; Return value:  Size  Location     Type
 29661 ;;                  1    wreg      void 
 29662 ;; Registers used:
 29663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29664 ;; Tracked objects:
 29665 ;;		On entry : 3F/0
 29666 ;;		On exit  : 3D/0
 29667 ;;		Unchanged: 0/0
 29668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29672 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29673 ;;Total ram usage:        5 bytes
 29674 ;; Hardware stack levels used:    1
 29675 ;; Hardware stack levels required when called:   10
 29676 ;; This function calls:
 29677 ;;		i2_AnyAlarm
 29678 ;;		i2_BuzzerClear
 29679 ;;		i2_ClearCircuitFailureAlarm
 29680 ;;		i2_ClearControlFailAlarm
 29681 ;;		i2_ClearGasFailureAlarm
 29682 ;;		i2_ClearHighPressureAlarmHigh
 29683 ;;		i2_ClearMonitorFailAlarm
 29684 ;;		i2_ClearVeryHighPressureAlarmHigh
 29685 ;;		i2_HigherAlarm
 29686 ;;		i2_SetAlarmSV1
 29687 ;;		i2___wmul
 29688 ;;		i2_printf
 29689 ;; This function is called by:
 29690 ;;		_ButtonTask
 29691 ;; This function uses a non-reentrant model
 29692 ;;
 29693                           
 29694                           	psect	text233
 29695  004B1A                     __ptext233:
 29696                           	opt callstack 0
 29697  004B1A                     i2_MuteAlarm:
 29698                           	opt callstack 4
 29699                           
 29700                           ; BSR set to: 0
 29701                           ;alarm.c: 378:     printf("MUTE");
 29702                           
 29703                           ; BSR set to: 2
 29704                           ;incstack = 0
 29705  004B1A  0EC1               	movlw	low STR_25
 29706  004B1C  6F77               	movwf	i2printf@fmt& (0+255),b
 29707  004B1E  0EFF               	movlw	high STR_25
 29708  004B20  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 29709  004B22  ECBB  F052         	call	i2_printf	;wreg free
 29710                           
 29711                           ; BSR set to: 2
 29712                           ;alarm.c: 380:     if (muteSec && muteSec<115) {
 29713  004B26  0101               	movlb	1	; () banked
 29714  004B28  51EF               	movf	_muteSec& (0+255),w,b
 29715  004B2A  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
 29716  004B2C  B4D8               	btfsc	status,2,c
 29717  004B2E  D00C               	goto	i2l20222
 29718                           
 29719                           ; BSR set to: 1
 29720  004B30  BFF0               	btfsc	(_muteSec+1)& (0+255),7,b
 29721  004B32  D006               	goto	i2u1945_40
 29722  004B34  51F0               	movf	(_muteSec+1)& (0+255),w,b
 29723  004B36  E108               	bnz	i2l20222
 29724  004B38  0E73               	movlw	115
 29725  004B3A  5DEF               	subwf	_muteSec& (0+255),w,b
 29726  004B3C  B0D8               	btfsc	status,0,c
 29727  004B3E  D004               	goto	i2l20222
 29728  004B40                     i2u1945_40:
 29729                           
 29730                           ; BSR set to: 1
 29731                           ;alarm.c: 381:         muteSec = 0;
 29732  004B40  0E00               	movlw	0
 29733  004B42  6FF0               	movwf	(_muteSec+1)& (0+255),b
 29734  004B44  0E00               	movlw	0
 29735  004B46  6FEF               	movwf	_muteSec& (0+255),b
 29736  004B48                     i2l20222:
 29737                           
 29738                           ; BSR set to: 1
 29739                           ;alarm.c: 384:     if (AnyAlarm()) {
 29740  004B48  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 29741  004B4C  0900               	iorlw	0
 29742  004B4E  B4D8               	btfsc	status,2,c
 29743  004B50  D0AB               	goto	i2l2630
 29744                           
 29745                           ;alarm.c: 386:         BuzzerClear();
 29746  004B52  EC81  F055         	call	i2_BuzzerClear	;wreg free
 29747                           
 29748                           ; BSR set to: 57
 29749                           ;alarm.c: 387:         muteSec = 120;
 29750  004B56  0E00               	movlw	0
 29751  004B58  0101               	movlb	1	; () banked
 29752  004B5A  6FF0               	movwf	(_muteSec+1)& (0+255),b
 29753  004B5C  0E78               	movlw	120
 29754  004B5E  6FEF               	movwf	_muteSec& (0+255),b
 29755                           
 29756                           ; BSR set to: 1
 29757                           ;alarm.c: 389:         int high = HigherAlarm();
 29758  004B60  ECE1  F040         	call	i2_HigherAlarm	;wreg free
 29759  004B64  0060  F01C  F086   	movff	?i2_HigherAlarm,i2MuteAlarm@high
 29760  004B6A  0060  F020  F087   	movff	?i2_HigherAlarm+1,i2MuteAlarm@high+1
 29761                           
 29762                           ;alarm.c: 390:         if (alarmData[high].func==HighPressureAlarmHigh) {
 29763  004B70  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29764  004B76  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29765  004B7C  0E00               	movlw	0
 29766  004B7E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29767  004B80  0E15               	movlw	21
 29768  004B82  6E03               	movwf	i2___wmul@multiplicand^0,c
 29769  004B84  ECBA  F051         	call	i2___wmul	;wreg free
 29770  004B88  0E27               	movlw	low (_alarmData+19)
 29771  004B8A  2401               	addwf	?i2___wmul^0,w,c
 29772  004B8C  6ED9               	movwf	fsr2l,c
 29773  004B8E  0E09               	movlw	high (_alarmData+19)
 29774  004B90  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29775  004B92  6EDA               	movwf	fsr2h,c
 29776  004B94  0E18               	movlw	low _HighPressureAlarmHigh
 29777  004B96  18DE               	xorwf	postinc2,w,c
 29778  004B98  E105               	bnz	i2l20234
 29779  004B9A  0EB0               	movlw	high _HighPressureAlarmHigh
 29780  004B9C  18DE               	xorwf	postinc2,w,c
 29781  004B9E  B4D8               	btfsc	status,2,c
 29782                           
 29783                           ;alarm.c: 392:             ClearHighPressureAlarmHigh();
 29784  004BA0  EC77  F057         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29785  004BA4                     i2l20234:
 29786                           
 29787                           ;alarm.c: 394:         if (alarmData[high].func==VeryHighPressureAlarmHigh) {
 29788  004BA4  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29789  004BAA  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29790  004BB0  0E00               	movlw	0
 29791  004BB2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29792  004BB4  0E15               	movlw	21
 29793  004BB6  6E03               	movwf	i2___wmul@multiplicand^0,c
 29794  004BB8  ECBA  F051         	call	i2___wmul	;wreg free
 29795  004BBC  0E27               	movlw	low (_alarmData+19)
 29796  004BBE  2401               	addwf	?i2___wmul^0,w,c
 29797  004BC0  6ED9               	movwf	fsr2l,c
 29798  004BC2  0E09               	movlw	high (_alarmData+19)
 29799  004BC4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29800  004BC6  6EDA               	movwf	fsr2h,c
 29801  004BC8  0E20               	movlw	low _VeryHighPressureAlarmHigh
 29802  004BCA  18DE               	xorwf	postinc2,w,c
 29803  004BCC  E105               	bnz	i2l20238
 29804  004BCE  0EB0               	movlw	high _VeryHighPressureAlarmHigh
 29805  004BD0  18DE               	xorwf	postinc2,w,c
 29806  004BD2  B4D8               	btfsc	status,2,c
 29807                           
 29808                           ;alarm.c: 396:             ClearVeryHighPressureAlarmHigh();
 29809  004BD4  EC6F  F057         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29810  004BD8                     i2l20238:
 29811                           
 29812                           ;alarm.c: 398:         if (alarmData[high].func==MonitorFailAlarm) {
 29813  004BD8  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29814  004BDE  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29815  004BE4  0E00               	movlw	0
 29816  004BE6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29817  004BE8  0E15               	movlw	21
 29818  004BEA  6E03               	movwf	i2___wmul@multiplicand^0,c
 29819  004BEC  ECBA  F051         	call	i2___wmul	;wreg free
 29820  004BF0  0E27               	movlw	low (_alarmData+19)
 29821  004BF2  2401               	addwf	?i2___wmul^0,w,c
 29822  004BF4  6ED9               	movwf	fsr2l,c
 29823  004BF6  0E09               	movlw	high (_alarmData+19)
 29824  004BF8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29825  004BFA  6EDA               	movwf	fsr2h,c
 29826  004BFC  0E68               	movlw	low _MonitorFailAlarm
 29827  004BFE  18DE               	xorwf	postinc2,w,c
 29828  004C00  E105               	bnz	i2l20242
 29829  004C02  0E79               	movlw	high _MonitorFailAlarm
 29830  004C04  18DE               	xorwf	postinc2,w,c
 29831  004C06  B4D8               	btfsc	status,2,c
 29832                           
 29833                           ;alarm.c: 400:             ClearMonitorFailAlarm();
 29834  004C08  EC73  F057         	call	i2_ClearMonitorFailAlarm	;wreg free
 29835  004C0C                     i2l20242:
 29836                           
 29837                           ;alarm.c: 402:         if (alarmData[high].func==ControlFailAlarm) {
 29838  004C0C  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29839  004C12  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29840  004C18  0E00               	movlw	0
 29841  004C1A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29842  004C1C  0E15               	movlw	21
 29843  004C1E  6E03               	movwf	i2___wmul@multiplicand^0,c
 29844  004C20  ECBA  F051         	call	i2___wmul	;wreg free
 29845  004C24  0E27               	movlw	low (_alarmData+19)
 29846  004C26  2401               	addwf	?i2___wmul^0,w,c
 29847  004C28  6ED9               	movwf	fsr2l,c
 29848  004C2A  0E09               	movlw	high (_alarmData+19)
 29849  004C2C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29850  004C2E  6EDA               	movwf	fsr2h,c
 29851  004C30  0ED2               	movlw	low _ControlFailAlarm
 29852  004C32  18DE               	xorwf	postinc2,w,c
 29853  004C34  E105               	bnz	i2l20246
 29854  004C36  0EAA               	movlw	high _ControlFailAlarm
 29855  004C38  18DE               	xorwf	postinc2,w,c
 29856  004C3A  B4D8               	btfsc	status,2,c
 29857                           
 29858                           ;alarm.c: 404:             ClearControlFailAlarm();
 29859  004C3C  EC7F  F057         	call	i2_ClearControlFailAlarm	;wreg free
 29860  004C40                     i2l20246:
 29861                           
 29862                           ;alarm.c: 406:         if (alarmData[high].func==GasFailureAlarm) {
 29863  004C40  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29864  004C46  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29865  004C4C  0E00               	movlw	0
 29866  004C4E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29867  004C50  0E15               	movlw	21
 29868  004C52  6E03               	movwf	i2___wmul@multiplicand^0,c
 29869  004C54  ECBA  F051         	call	i2___wmul	;wreg free
 29870  004C58  0E27               	movlw	low (_alarmData+19)
 29871  004C5A  2401               	addwf	?i2___wmul^0,w,c
 29872  004C5C  6ED9               	movwf	fsr2l,c
 29873  004C5E  0E09               	movlw	high (_alarmData+19)
 29874  004C60  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29875  004C62  6EDA               	movwf	fsr2h,c
 29876  004C64  0E1C               	movlw	low _GasFailureAlarm
 29877  004C66  18DE               	xorwf	postinc2,w,c
 29878  004C68  E105               	bnz	i2l20250
 29879  004C6A  0EB0               	movlw	high _GasFailureAlarm
 29880  004C6C  18DE               	xorwf	postinc2,w,c
 29881  004C6E  B4D8               	btfsc	status,2,c
 29882                           
 29883                           ;alarm.c: 408:             ClearGasFailureAlarm();
 29884  004C70  EC7B  F057         	call	i2_ClearGasFailureAlarm	;wreg free
 29885  004C74                     i2l20250:
 29886                           
 29887                           ;alarm.c: 410:         if (alarmData[high].func==CircuitFailureAlarm) {
 29888  004C74  0060  F218  F001   	movff	i2MuteAlarm@high,i2___wmul@multiplier
 29889  004C7A  0060  F21C  F002   	movff	i2MuteAlarm@high+1,i2___wmul@multiplier+1
 29890  004C80  0E00               	movlw	0
 29891  004C82  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 29892  004C84  0E15               	movlw	21
 29893  004C86  6E03               	movwf	i2___wmul@multiplicand^0,c
 29894  004C88  ECBA  F051         	call	i2___wmul	;wreg free
 29895  004C8C  0E27               	movlw	low (_alarmData+19)
 29896  004C8E  2401               	addwf	?i2___wmul^0,w,c
 29897  004C90  6ED9               	movwf	fsr2l,c
 29898  004C92  0E09               	movlw	high (_alarmData+19)
 29899  004C94  2002               	addwfc	(?i2___wmul+1)^0,w,c
 29900  004C96  6EDA               	movwf	fsr2h,c
 29901  004C98  0E14               	movlw	low _CircuitFailureAlarm
 29902  004C9A  18DE               	xorwf	postinc2,w,c
 29903  004C9C  E105               	bnz	i2l2630
 29904  004C9E  0EB0               	movlw	high _CircuitFailureAlarm
 29905  004CA0  18DE               	xorwf	postinc2,w,c
 29906  004CA2  B4D8               	btfsc	status,2,c
 29907                           
 29908                           ;alarm.c: 412:             ClearCircuitFailureAlarm();
 29909  004CA4  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29910  004CA8                     i2l2630:
 29911                           
 29912                           ;alarm.c: 417:     ClearVeryHighPressureAlarmHigh();
 29913  004CA8  EC6F  F057         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 29914                           
 29915                           ;alarm.c: 418:     ClearHighPressureAlarmHigh();
 29916  004CAC  EC77  F057         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 29917                           
 29918                           ;alarm.c: 419:     ClearCircuitFailureAlarm();
 29919  004CB0  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 29920                           
 29921                           ;alarm.c: 420:     ClearGasFailureAlarm();
 29922  004CB4  EC7B  F057         	call	i2_ClearGasFailureAlarm	;wreg free
 29923                           
 29924                           ;alarm.c: 421:     ClearControlFailAlarm();
 29925  004CB8  EC7F  F057         	call	i2_ClearControlFailAlarm	;wreg free
 29926                           
 29927                           ;alarm.c: 422:     ClearMonitorFailAlarm();
 29928  004CBC  EC73  F057         	call	i2_ClearMonitorFailAlarm	;wreg free
 29929                           
 29930                           ; BSR set to: 2
 29931                           ;alarm.c: 424:     controlSV1 = 1;
 29932  004CC0  0E01               	movlw	1
 29933  004CC2  0100               	movlb	0	; () banked
 29934  004CC4  6FFD               	movwf	_controlSV1& (0+255),b
 29935                           
 29936                           ; BSR set to: 0
 29937                           ;alarm.c: 425:     monitorSV1 = 1;
 29938  004CC6  0E01               	movlw	1
 29939  004CC8  6FFC               	movwf	_monitorSV1& (0+255),b
 29940                           
 29941                           ; BSR set to: 0
 29942                           ;alarm.c: 426:     veryHighSV1 = 1;
 29943  004CCA  0E01               	movlw	1
 29944  004CCC  6FFF               	movwf	_veryHighSV1& (0+255),b
 29945                           
 29946                           ; BSR set to: 0
 29947                           ;alarm.c: 428:     SetAlarmSV1(controlSV1 && monitorSV1 && veryHighSV1 && batterySV1);
 29948  004CCE  0E00               	movlw	0
 29949  004CD0  6F85               	movwf	i2_MuteAlarm$4543& (0+255),b
 29950                           
 29951                           ; BSR set to: 0
 29952  004CD2  51FD               	movf	_controlSV1& (0+255),w,b
 29953  004CD4  B4D8               	btfsc	status,2,c
 29954  004CD6  D00B               	goto	i2l20272
 29955                           
 29956                           ; BSR set to: 0
 29957  004CD8  51FC               	movf	_monitorSV1& (0+255),w,b
 29958  004CDA  B4D8               	btfsc	status,2,c
 29959  004CDC  D008               	goto	i2l20272
 29960                           
 29961                           ; BSR set to: 0
 29962  004CDE  51FF               	movf	_veryHighSV1& (0+255),w,b
 29963  004CE0  B4D8               	btfsc	status,2,c
 29964  004CE2  D005               	goto	i2l20272
 29965                           
 29966                           ; BSR set to: 0
 29967  004CE4  51FE               	movf	_batterySV1& (0+255),w,b
 29968  004CE6  B4D8               	btfsc	status,2,c
 29969  004CE8  D002               	goto	i2l20272
 29970                           
 29971                           ; BSR set to: 0
 29972  004CEA  0E01               	movlw	1
 29973  004CEC  6F85               	movwf	i2_MuteAlarm$4543& (0+255),b
 29974  004CEE                     i2l20272:
 29975                           
 29976                           ; BSR set to: 0
 29977  004CEE  5185               	movf	i2_MuteAlarm$4543& (0+255),w,b
 29978  004CF0  B4D8               	btfsc	status,2,c
 29979  004CF2  D002               	goto	i2u1957_40
 29980  004CF4  0E01               	movlw	1
 29981  004CF6  D001               	goto	i2u1958_40
 29982  004CF8                     i2u1957_40:
 29983  004CF8  0E00               	movlw	0
 29984  004CFA                     i2u1958_40:
 29985  004CFA  EC8C  F051         	call	i2_SetAlarmSV1
 29986  004CFE  0012               	return		;funcret
 29987  004D00                     __end_ofi2_MuteAlarm:
 29988                           	opt callstack 0
 29989                           
 29990 ;; *************** function i2_SetAlarmSV1 *****************
 29991 ;; Defined at:
 29992 ;;		line 864 in file "monitor.c"
 29993 ;; Parameters:    Size  Location     Type
 29994 ;;  value           1    wreg     _Bool 
 29995 ;; Auto vars:     Size  Location     Type
 29996 ;;  value           1   90[COMRAM] _Bool 
 29997 ;; Return value:  Size  Location     Type
 29998 ;;                  1    wreg      void 
 29999 ;; Registers used:
 30000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30001 ;; Tracked objects:
 30002 ;;		On entry : 3F/0
 30003 ;;		On exit  : 3D/0
 30004 ;;		Unchanged: 0/0
 30005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30010 ;;Total ram usage:        1 bytes
 30011 ;; Hardware stack levels used:    1
 30012 ;; Hardware stack levels required when called:    9
 30013 ;; This function calls:
 30014 ;;		i2_printf
 30015 ;; This function is called by:
 30016 ;;		i2_MuteAlarm
 30017 ;; This function uses a non-reentrant model
 30018 ;;
 30019                           
 30020                           	psect	text234
 30021  00A318                     __ptext234:
 30022                           	opt callstack 0
 30023  00A318                     i2_SetAlarmSV1:
 30024                           	opt callstack 4
 30025                           
 30026                           ;incstack = 0
 30027                           ;i2SetAlarmSV1@value stored from wreg
 30028  00A318  6E5B               	movwf	i2SetAlarmSV1@value^0,c
 30029                           
 30030                           ;monitor.c: 865:     static _Bool last= 0;;monitor.c: 866:     if (last!=value) printf("
      +                          \r\nAlSV1: %d\r\n", value);
 30031  00A31A  505B               	movf	i2SetAlarmSV1@value^0,w,c
 30032  00A31C  0100               	movlb	0	; () banked
 30033  00A31E  19EE               	xorwf	SetAlarmSV1@last& (0+255),w,b
 30034  00A320  B4D8               	btfsc	status,2,c
 30035  00A322  D00A               	goto	i2l19324
 30036                           
 30037                           ; BSR set to: 0
 30038  00A324  0E5C               	movlw	low STR_47
 30039  00A326  6F77               	movwf	i2printf@fmt& (0+255),b
 30040  00A328  0EFF               	movlw	high STR_47
 30041  00A32A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 30042  00A32C  0060  F16C  F079   	movff	i2SetAlarmSV1@value,?i2_printf+2
 30043  00A332  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 30044  00A334  ECBB  F052         	call	i2_printf	;wreg free
 30045  00A338                     i2l19324:
 30046                           
 30047                           ;monitor.c: 867:     alarmSV1 = value;
 30048  00A338  0060  F16C  F2A0   	movff	i2SetAlarmSV1@value,_alarmSV1
 30049                           
 30050                           ;monitor.c: 868:     last = value;
 30051  00A33E  0060  F16C  F0EE   	movff	i2SetAlarmSV1@value,SetAlarmSV1@last
 30052  00A344  0012               	return		;funcret
 30053  00A346                     __end_ofi2_SetAlarmSV1:
 30054                           	opt callstack 0
 30055                           
 30056 ;; *************** function i2_BuzzerClear *****************
 30057 ;; Defined at:
 30058 ;;		line 71 in file "buzzer.c"
 30059 ;; Parameters:    Size  Location     Type
 30060 ;;		None
 30061 ;; Auto vars:     Size  Location     Type
 30062 ;;		None
 30063 ;; Return value:  Size  Location     Type
 30064 ;;                  1    wreg      void 
 30065 ;; Registers used:
 30066 ;;		wreg, status,2, cstack
 30067 ;; Tracked objects:
 30068 ;;		On entry : 0/1
 30069 ;;		On exit  : 3F/39
 30070 ;;		Unchanged: 0/0
 30071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30076 ;;Total ram usage:        0 bytes
 30077 ;; Hardware stack levels used:    1
 30078 ;; Hardware stack levels required when called:    2
 30079 ;; This function calls:
 30080 ;;		i2_BuzzerOff
 30081 ;;		i2_TMR4_Stop
 30082 ;; This function is called by:
 30083 ;;		i2_MuteAlarm
 30084 ;; This function uses a non-reentrant model
 30085 ;;
 30086                           
 30087                           	psect	text235
 30088  00AB02                     __ptext235:
 30089                           	opt callstack 0
 30090  00AB02                     i2_BuzzerClear:
 30091                           	opt callstack 11
 30092                           
 30093                           ;buzzer.c: 72:     alarmState = 0;
 30094                           
 30095                           ;incstack = 0
 30096  00AB02  0E00               	movlw	0
 30097  00AB04  0100               	movlb	0	; () banked
 30098  00AB06  6FF6               	movwf	_alarmState& (0+255),b
 30099                           
 30100                           ; BSR set to: 0
 30101                           ;buzzer.c: 73:     BuzzerOff();
 30102  00AB08  EC89  F055         	call	i2_BuzzerOff	;wreg free
 30103                           
 30104                           ;buzzer.c: 74:     TMR4_Stop();
 30105  00AB0C  EC18  F058         	call	i2_TMR4_Stop	;wreg free
 30106                           
 30107                           ; BSR set to: 57
 30108  00AB10  0012               	return		;funcret
 30109  00AB12                     __end_ofi2_BuzzerClear:
 30110                           	opt callstack 0
 30111                           
 30112 ;; *************** function i2_TMR4_Stop *****************
 30113 ;; Defined at:
 30114 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 30115 ;; Parameters:    Size  Location     Type
 30116 ;;		None
 30117 ;; Auto vars:     Size  Location     Type
 30118 ;;		None
 30119 ;; Return value:  Size  Location     Type
 30120 ;;                  1    wreg      void 
 30121 ;; Registers used:
 30122 ;;		None
 30123 ;; Tracked objects:
 30124 ;;		On entry : 3F/39
 30125 ;;		On exit  : 3F/39
 30126 ;;		Unchanged: 3E/0
 30127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30132 ;;Total ram usage:        0 bytes
 30133 ;; Hardware stack levels used:    1
 30134 ;; This function calls:
 30135 ;;		Nothing
 30136 ;; This function is called by:
 30137 ;;		i2_BuzzerClear
 30138 ;;		i2_BuzzerTask
 30139 ;; This function uses a non-reentrant model
 30140 ;;
 30141                           
 30142                           	psect	text236
 30143  00B030                     __ptext236:
 30144                           	opt callstack 0
 30145  00B030                     i2_TMR4_Stop:
 30146                           	opt callstack 13
 30147                           
 30148                           ; BSR set to: 57
 30149                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
 30150                           
 30151                           ; BSR set to: 57
 30152                           ;incstack = 0
 30153  00B030  9EA0               	bcf	160,7,c	;volatile
 30154                           
 30155                           ; BSR set to: 57
 30156  00B032  0012               	return		;funcret
 30157  00B034                     __end_ofi2_TMR4_Stop:
 30158                           	opt callstack 0
 30159                           
 30160 ;; *************** function i2_BuzzerOff *****************
 30161 ;; Defined at:
 30162 ;;		line 458 in file "buzzer.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;		None
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1    wreg      void 
 30169 ;; Registers used:
 30170 ;;		wreg, status,2, cstack
 30171 ;; Tracked objects:
 30172 ;;		On entry : 3D/0
 30173 ;;		On exit  : 3F/39
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30180 ;;Total ram usage:        0 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:    1
 30183 ;; This function calls:
 30184 ;;		i2_CMP1_Disable
 30185 ;; This function is called by:
 30186 ;;		_BuzzerTestHandler
 30187 ;;		i2_BuzzerClear
 30188 ;;		i2_BuzzerTask
 30189 ;; This function uses a non-reentrant model
 30190 ;;
 30191                           
 30192                           	psect	text237
 30193  00AB12                     __ptext237:
 30194                           	opt callstack 0
 30195  00AB12                     i2_BuzzerOff:
 30196                           	opt callstack 13
 30197                           
 30198                           ;buzzer.c: 459:     PWM6CON = 0x00;
 30199                           
 30200                           ; BSR set to: 57
 30201                           ;incstack = 0
 30202  00AB12  0E00               	movlw	0
 30203  00AB14  6E6A               	movwf	106,c	;volatile
 30204                           
 30205                           ;buzzer.c: 460:     on = 0;
 30206  00AB16  0E00               	movlw	0
 30207  00AB18  0100               	movlb	0	; () banked
 30208  00AB1A  6FF5               	movwf	_on& (0+255),b
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;buzzer.c: 461:     CMP1_Disable();
 30212  00AB1C  EC97  F057         	call	i2_CMP1_Disable	;wreg free
 30213                           
 30214                           ; BSR set to: 57
 30215  00AB20  0012               	return		;funcret
 30216  00AB22                     __end_ofi2_BuzzerOff:
 30217                           	opt callstack 0
 30218                           
 30219 ;; *************** function i2_HistAlarm *****************
 30220 ;; Defined at:
 30221 ;;		line 465 in file "alarm.c"
 30222 ;; Parameters:    Size  Location     Type
 30223 ;;		None
 30224 ;; Auto vars:     Size  Location     Type
 30225 ;;  HistAlarm       2   93[COMRAM] int 
 30226 ;; Return value:  Size  Location     Type
 30227 ;;                  1    wreg      void 
 30228 ;; Registers used:
 30229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30230 ;; Tracked objects:
 30231 ;;		On entry : 3F/0
 30232 ;;		On exit  : 0/0
 30233 ;;		Unchanged: 0/0
 30234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30239 ;;Total ram usage:        4 bytes
 30240 ;; Hardware stack levels used:    1
 30241 ;; Hardware stack levels required when called:   12
 30242 ;; This function calls:
 30243 ;;		i2_AlarmUpdateLCD
 30244 ;;		i2_TMR5_StartTimer
 30245 ;;		i2_TMR5_StopTimer
 30246 ;; This function is called by:
 30247 ;;		_ButtonTask
 30248 ;; This function uses a non-reentrant model
 30249 ;;
 30250                           
 30251                           	psect	text238
 30252  00724A                     __ptext238:
 30253                           	opt callstack 0
 30254  00724A                     i2_HistAlarm:
 30255                           	opt callstack 2
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;alarm.c: 466:     TMR5_StopTimer();
 30259                           
 30260                           ; BSR set to: 57
 30261                           ;incstack = 0
 30262  00724A  EC1A  F058         	call	i2_TMR5_StopTimer	;wreg free
 30263                           
 30264                           ; BSR set to: 0
 30265                           ;alarm.c: 467:     int i;;alarm.c: 469:     if (histSec == 0 ) {
 30266  00724E  51DE               	movf	_histSec& (0+255),w,b
 30267  007250  11DF               	iorwf	(_histSec+1)& (0+255),w,b
 30268  007252  A4D8               	btfss	status,2,c
 30269  007254  D02D               	goto	i2l20302
 30270                           
 30271                           ; BSR set to: 0
 30272                           ;alarm.c: 471:         for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30273  007256  0E00               	movlw	0
 30274  007258  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30275  00725A  0E00               	movlw	0
 30276  00725C  6E5E               	movwf	i2HistAlarm@i^0,c
 30277  00725E                     i2l20284:
 30278                           
 30279                           ; BSR set to: 0
 30280                           ;alarm.c: 472:             if (alarms[i]) break;
 30281  00725E  90D8               	bcf	status,0,c
 30282  007260  345E               	rlcf	i2HistAlarm@i^0,w,c
 30283  007262  6ED9               	movwf	fsr2l,c
 30284  007264  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30285  007266  6EDA               	movwf	fsr2h,c
 30286  007268  0E00               	movlw	low _alarms
 30287  00726A  26D9               	addwf	fsr2l,f,c
 30288  00726C  0E03               	movlw	high _alarms
 30289  00726E  22DA               	addwfc	fsr2h,f,c
 30290  007270  50DE               	movf	postinc2,w,c
 30291  007272  10DE               	iorwf	postinc2,w,c
 30292  007274  A4D8               	btfss	status,2,c
 30293  007276  D008               	goto	i2u1961_40
 30294                           
 30295                           ; BSR set to: 0
 30296                           ;alarm.c: 473:         }
 30297  007278  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30298  00727A  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30299                           
 30300                           ; BSR set to: 0
 30301  00727C  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30302  00727E  E104               	bnz	i2u1961_40
 30303  007280  0E13               	movlw	19
 30304  007282  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30305  007284  A0D8               	btfss	status,0,c
 30306  007286  D7EB               	goto	i2l20284
 30307  007288                     i2u1961_40:
 30308                           
 30309                           ; BSR set to: 0
 30310                           ;alarm.c: 475:         if (i == sizeof(alarmData)/sizeof(a)) {
 30311  007288  0E13               	movlw	19
 30312  00728A  185E               	xorwf	i2HistAlarm@i^0,w,c
 30313  00728C  105F               	iorwf	(i2HistAlarm@i+1)^0,w,c
 30314  00728E  A4D8               	btfss	status,2,c
 30315  007290  D003               	goto	i2l20298
 30316  007292                     i2u1962_40:
 30317                           
 30318                           ;alarm.c: 476:             TMR5_StartTimer();
 30319  007292  EC1C  F058         	call	i2_TMR5_StartTimer	;wreg free
 30320  007296  0012               	return	
 30321  007298                     i2l20298:
 30322                           
 30323                           ;alarm.c: 479:         histSec = 5;
 30324  007298  0E00               	movlw	0
 30325  00729A  0100               	movlb	0	; () banked
 30326  00729C  6FDF               	movwf	(_histSec+1)& (0+255),b
 30327  00729E  0E05               	movlw	5
 30328  0072A0  6FDE               	movwf	_histSec& (0+255),b
 30329                           
 30330                           ; BSR set to: 0
 30331                           ;alarm.c: 480:         hist=i;
 30332  0072A2  0060  F178  F1ED   	movff	i2HistAlarm@i,_hist
 30333  0072A8  0060  F17C  F1EE   	movff	i2HistAlarm@i+1,_hist+1
 30334                           
 30335                           ;alarm.c: 481:     } else {
 30336  0072AE  D04A               	goto	i2l20342
 30337  0072B0                     i2l20302:
 30338                           
 30339                           ; BSR set to: 0
 30340                           ;alarm.c: 484:         for (i=hist+1; i<sizeof(alarmData)/sizeof(a); i++) {
 30341  0072B0  0E01               	movlw	1
 30342  0072B2  0101               	movlb	1	; () banked
 30343  0072B4  25ED               	addwf	_hist& (0+255),w,b
 30344  0072B6  6E5E               	movwf	i2HistAlarm@i^0,c
 30345  0072B8  0E00               	movlw	0
 30346  0072BA  21EE               	addwfc	(_hist+1)& (0+255),w,b
 30347  0072BC  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30348  0072BE  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30349  0072C0  E116               	bnz	i2l20314
 30350  0072C2  D011               	goto	L13
 30351  0072C4                     i2l20306:
 30352                           
 30353                           ;alarm.c: 485:             if (alarms[i]) break;
 30354  0072C4  90D8               	bcf	status,0,c
 30355  0072C6  345E               	rlcf	i2HistAlarm@i^0,w,c
 30356  0072C8  6ED9               	movwf	fsr2l,c
 30357  0072CA  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30358  0072CC  6EDA               	movwf	fsr2h,c
 30359  0072CE  0E00               	movlw	low _alarms
 30360  0072D0  26D9               	addwf	fsr2l,f,c
 30361  0072D2  0E03               	movlw	high _alarms
 30362  0072D4  22DA               	addwfc	fsr2h,f,c
 30363  0072D6  50DE               	movf	postinc2,w,c
 30364  0072D8  10DE               	iorwf	postinc2,w,c
 30365  0072DA  A4D8               	btfss	status,2,c
 30366  0072DC  D008               	goto	i2u1965_40
 30367                           
 30368                           ;alarm.c: 486:         }
 30369  0072DE  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30370  0072E0  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30371  0072E2  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30372  0072E4  E104               	bnz	i2u1965_40
 30373  0072E6                     L13:
 30374  0072E6  0E13               	movlw	19
 30375  0072E8  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30376  0072EA  A0D8               	btfss	status,0,c
 30377  0072EC  D7EB               	goto	i2l20306
 30378  0072EE                     i2u1965_40:
 30379  0072EE                     i2l20314:
 30380                           
 30381                           ;alarm.c: 488:         if (i>=sizeof(alarmData)/sizeof(a)) {
 30382  0072EE  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30383  0072F0  E104               	bnz	i2u1966_40
 30384  0072F2  0E13               	movlw	19
 30385  0072F4  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30386  0072F6  A0D8               	btfss	status,0,c
 30387  0072F8  D7CF               	goto	i2l20298
 30388  0072FA                     i2u1966_40:
 30389                           
 30390                           ;alarm.c: 490:             for (i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30391  0072FA  0E00               	movlw	0
 30392  0072FC  6E5F               	movwf	(i2HistAlarm@i+1)^0,c
 30393  0072FE  0E00               	movlw	0
 30394  007300  6E5E               	movwf	i2HistAlarm@i^0,c
 30395  007302                     i2l20322:
 30396                           
 30397                           ;alarm.c: 491:                 if (alarms[i]) break;
 30398  007302  90D8               	bcf	status,0,c
 30399  007304  345E               	rlcf	i2HistAlarm@i^0,w,c
 30400  007306  6ED9               	movwf	fsr2l,c
 30401  007308  345F               	rlcf	(i2HistAlarm@i+1)^0,w,c
 30402  00730A  6EDA               	movwf	fsr2h,c
 30403  00730C  0E00               	movlw	low _alarms
 30404  00730E  26D9               	addwf	fsr2l,f,c
 30405  007310  0E03               	movlw	high _alarms
 30406  007312  22DA               	addwfc	fsr2h,f,c
 30407  007314  50DE               	movf	postinc2,w,c
 30408  007316  10DE               	iorwf	postinc2,w,c
 30409  007318  A4D8               	btfss	status,2,c
 30410  00731A  D008               	goto	i2u1968_40
 30411                           
 30412                           ;alarm.c: 492:             }
 30413  00731C  4A5E               	infsnz	i2HistAlarm@i^0,f,c
 30414  00731E  2A5F               	incf	(i2HistAlarm@i+1)^0,f,c
 30415  007320  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30416  007322  E104               	bnz	i2u1968_40
 30417  007324  0E13               	movlw	19
 30418  007326  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30419  007328  A0D8               	btfss	status,0,c
 30420  00732A  D7EB               	goto	i2l20322
 30421  00732C                     i2u1968_40:
 30422                           
 30423                           ;alarm.c: 494:             if (i >= sizeof(alarmData)/sizeof(a)) {
 30424  00732C  505F               	movf	(i2HistAlarm@i+1)^0,w,c
 30425  00732E  E104               	bnz	i2u1969_40
 30426  007330  0E13               	movlw	19
 30427  007332  5C5E               	subwf	i2HistAlarm@i^0,w,c
 30428  007334  A0D8               	btfss	status,0,c
 30429  007336  D7B0               	goto	i2l20298
 30430  007338                     i2u1969_40:
 30431                           
 30432                           ;alarm.c: 495:                 histSec = 0;
 30433  007338  0E00               	movlw	0
 30434  00733A  0100               	movlb	0	; () banked
 30435  00733C  6FDF               	movwf	(_histSec+1)& (0+255),b
 30436  00733E  0E00               	movlw	0
 30437  007340  6FDE               	movwf	_histSec& (0+255),b
 30438  007342  D7A7               	goto	i2u1962_40
 30439  007344                     i2l20342:
 30440                           
 30441                           ; BSR set to: 0
 30442                           ;alarm.c: 505:     AlarmUpdateLCD();
 30443  007344  EC01  F032         	call	i2_AlarmUpdateLCD	;wreg free
 30444  007348  D7A4               	goto	i2u1962_40
 30445  00734A                     __end_ofi2_HistAlarm:
 30446                           	opt callstack 0
 30447                           
 30448 ;; *************** function i2_TMR5_StopTimer *****************
 30449 ;; Defined at:
 30450 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 30451 ;; Parameters:    Size  Location     Type
 30452 ;;		None
 30453 ;; Auto vars:     Size  Location     Type
 30454 ;;		None
 30455 ;; Return value:  Size  Location     Type
 30456 ;;                  1    wreg      void 
 30457 ;; Registers used:
 30458 ;;		None
 30459 ;; Tracked objects:
 30460 ;;		On entry : 3F/0
 30461 ;;		On exit  : 3F/0
 30462 ;;		Unchanged: 3F/0
 30463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30468 ;;Total ram usage:        0 bytes
 30469 ;; Hardware stack levels used:    1
 30470 ;; This function calls:
 30471 ;;		Nothing
 30472 ;; This function is called by:
 30473 ;;		i2_HistAlarm
 30474 ;; This function uses a non-reentrant model
 30475 ;;
 30476                           
 30477                           	psect	text239
 30478  00B034                     __ptext239:
 30479                           	opt callstack 0
 30480  00B034                     i2_TMR5_StopTimer:
 30481                           	opt callstack 13
 30482                           
 30483                           ; BSR set to: 0
 30484                           ;mcc_generated_files/tmr5.c: 108:     T5CONbits.TMR5ON = 0;
 30485                           
 30486                           ;incstack = 0
 30487  00B034  909A               	bcf	154,0,c	;volatile
 30488                           
 30489                           ; BSR set to: 0
 30490  00B036  0012               	return		;funcret
 30491  00B038                     __end_ofi2_TMR5_StopTimer:
 30492                           	opt callstack 0
 30493                           
 30494 ;; *************** function i2_TMR5_StartTimer *****************
 30495 ;; Defined at:
 30496 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 30497 ;; Parameters:    Size  Location     Type
 30498 ;;		None
 30499 ;; Auto vars:     Size  Location     Type
 30500 ;;		None
 30501 ;; Return value:  Size  Location     Type
 30502 ;;                  1    wreg      void 
 30503 ;; Registers used:
 30504 ;;		None
 30505 ;; Tracked objects:
 30506 ;;		On entry : 0/0
 30507 ;;		On exit  : 0/0
 30508 ;;		Unchanged: 0/0
 30509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30514 ;;Total ram usage:        0 bytes
 30515 ;; Hardware stack levels used:    1
 30516 ;; This function calls:
 30517 ;;		Nothing
 30518 ;; This function is called by:
 30519 ;;		i2_HistAlarm
 30520 ;; This function uses a non-reentrant model
 30521 ;;
 30522                           
 30523                           	psect	text240
 30524  00B038                     __ptext240:
 30525                           	opt callstack 0
 30526  00B038                     i2_TMR5_StartTimer:
 30527                           	opt callstack 13
 30528                           
 30529                           ;mcc_generated_files/tmr5.c: 102:     T5CONbits.TMR5ON = 1;
 30530                           
 30531                           ; BSR set to: 0
 30532                           ;incstack = 0
 30533  00B038  809A               	bsf	154,0,c	;volatile
 30534  00B03A  0012               	return		;funcret
 30535  00B03C                     __end_ofi2_TMR5_StartTimer:
 30536                           	opt callstack 0
 30537                           
 30538 ;; *************** function i2_AlarmUpdateLCD *****************
 30539 ;; Defined at:
 30540 ;;		line 440 in file "alarm.c"
 30541 ;; Parameters:    Size  Location     Type
 30542 ;;		None
 30543 ;; Auto vars:     Size  Location     Type
 30544 ;;  AlarmUpdateL    2   97[BANK0 ] int 
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  1    wreg      void 
 30547 ;; Registers used:
 30548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30549 ;; Tracked objects:
 30550 ;;		On entry : 3F/0
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30557 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30558 ;;Total ram usage:        6 bytes
 30559 ;; Hardware stack levels used:    1
 30560 ;; Hardware stack levels required when called:   11
 30561 ;; This function calls:
 30562 ;;		i2_AlarmDisplay
 30563 ;;		i2_AnyAlarm
 30564 ;;		i2_HigherAlarm
 30565 ;;		i2_ValueDisplay
 30566 ;;		i2___wmul
 30567 ;; This function is called by:
 30568 ;;		i2_HistAlarm
 30569 ;; This function uses a non-reentrant model
 30570 ;;
 30571                           
 30572                           	psect	text241
 30573  006402                     __ptext241:
 30574                           	opt callstack 0
 30575  006402                     i2_AlarmUpdateLCD:
 30576                           	opt callstack 2
 30577                           
 30578                           ; BSR set to: 0
 30579                           ;alarm.c: 442:     if (histSec) {
 30580                           
 30581                           ;incstack = 0
 30582  006402  51DE               	movf	_histSec& (0+255),w,b
 30583  006404  11DF               	iorwf	(_histSec+1)& (0+255),w,b
 30584  006406  B4D8               	btfsc	status,2,c
 30585  006408  D03F               	goto	i2l19276
 30586                           
 30587                           ; BSR set to: 0
 30588                           ;alarm.c: 443:         displayStatus = 2;
 30589  00640A  0E00               	movlw	0
 30590  00640C  0102               	movlb	2	; () banked
 30591  00640E  6F73               	movwf	(_displayStatus+1)& (0+255),b
 30592  006410  0E02               	movlw	2
 30593  006412  6F72               	movwf	_displayStatus& (0+255),b
 30594                           
 30595                           ; BSR set to: 2
 30596                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30597  006414  0060  F7B4  F001   	movff	_hist,i2___wmul@multiplier
 30598  00641A  0060  F7B8  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30599  006420  0E00               	movlw	0
 30600  006422  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30601  006424  0E15               	movlw	21
 30602  006426  6E03               	movwf	i2___wmul@multiplicand^0,c
 30603  006428  ECBA  F051         	call	i2___wmul	;wreg free
 30604  00642C  0E25               	movlw	low (_alarmData+17)
 30605  00642E  2401               	addwf	?i2___wmul^0,w,c
 30606  006430  6ED9               	movwf	fsr2l,c
 30607  006432  0E09               	movlw	high (_alarmData+17)
 30608  006434  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30609  006436  6EDA               	movwf	fsr2h,c
 30610  006438  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7140
 30611  00643E  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7140+1
 30612                           
 30613                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30614  006444  0060  F7B4  F001   	movff	_hist,i2___wmul@multiplier
 30615  00644A  0060  F7B8  F002   	movff	_hist+1,i2___wmul@multiplier+1
 30616  006450  0E00               	movlw	0
 30617  006452  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30618  006454  0E15               	movlw	21
 30619  006456  6E03               	movwf	i2___wmul@multiplicand^0,c
 30620  006458  ECBA  F051         	call	i2___wmul	;wreg free
 30621  00645C  0E14               	movlw	low _alarmData
 30622  00645E  2401               	addwf	?i2___wmul^0,w,c
 30623  006460  0100               	movlb	0	; () banked
 30624  006462  6FC5               	movwf	i2_AlarmUpdateLCD$7141& (0+255),b
 30625  006464  0E09               	movlw	high _alarmData
 30626  006466  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30627  006468  6FC6               	movwf	(i2_AlarmUpdateLCD$7141+1)& (0+255),b
 30628                           
 30629                           ; BSR set to: 0
 30630                           ;alarm.c: 444:         AlarmDisplay(alarmData[hist].type, alarmData[hist].name);
 30631  00646A  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7140,i2AlarmDisplay@type
 30632  006470  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7140+1,i2AlarmDisplay@type+1
 30633  006476  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7141,i2AlarmDisplay@alarm
 30634  00647C  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7141+1,i2AlarmDisplay@alarm+1
 30635  006482  EC7D  F043         	call	i2_AlarmDisplay	;wreg free
 30636                           
 30637                           ;alarm.c: 446:     } else {
 30638  006486  0012               	return	
 30639  006488                     i2l19276:
 30640                           
 30641                           ; BSR set to: 0
 30642                           ;alarm.c: 447:         if (displayStatus==1 && AnyAlarm())
 30643  006488  0102               	movlb	2	; () banked
 30644  00648A  0572               	decf	_displayStatus& (0+255),w,b
 30645  00648C  1173               	iorwf	(_displayStatus+1)& (0+255),w,b
 30646  00648E  A4D8               	btfss	status,2,c
 30647  006490  D04C               	goto	i2l19290
 30648                           
 30649                           ; BSR set to: 2
 30650  006492  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 30651  006496  0900               	iorlw	0
 30652  006498  B4D8               	btfsc	status,2,c
 30653  00649A  D047               	goto	i2l19290
 30654                           
 30655                           ;alarm.c: 448:         {;alarm.c: 449:             int id;;alarm.c: 451:             id 
      +                          = HigherAlarm();
 30656  00649C  ECE1  F040         	call	i2_HigherAlarm	;wreg free
 30657  0064A0  0060  F01C  F0C1   	movff	?i2_HigherAlarm,i2AlarmUpdateLCD@id
 30658  0064A6  0060  F020  F0C2   	movff	?i2_HigherAlarm+1,i2AlarmUpdateLCD@id+1
 30659                           
 30660                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30661  0064AC  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30662  0064B2  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30663  0064B8  0E00               	movlw	0
 30664  0064BA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30665  0064BC  0E15               	movlw	21
 30666  0064BE  6E03               	movwf	i2___wmul@multiplicand^0,c
 30667  0064C0  ECBA  F051         	call	i2___wmul	;wreg free
 30668  0064C4  0E25               	movlw	low (_alarmData+17)
 30669  0064C6  2401               	addwf	?i2___wmul^0,w,c
 30670  0064C8  6ED9               	movwf	fsr2l,c
 30671  0064CA  0E09               	movlw	high (_alarmData+17)
 30672  0064CC  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30673  0064CE  6EDA               	movwf	fsr2h,c
 30674  0064D0  006F FF78  F0C3    	movff	postinc2,i2_AlarmUpdateLCD$7140
 30675  0064D6  006F FF74  F0C4    	movff	postdec2,i2_AlarmUpdateLCD$7140+1
 30676                           
 30677                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30678  0064DC  0060  F304  F001   	movff	i2AlarmUpdateLCD@id,i2___wmul@multiplier
 30679  0064E2  0060  F308  F002   	movff	i2AlarmUpdateLCD@id+1,i2___wmul@multiplier+1
 30680  0064E8  0E00               	movlw	0
 30681  0064EA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30682  0064EC  0E15               	movlw	21
 30683  0064EE  6E03               	movwf	i2___wmul@multiplicand^0,c
 30684  0064F0  ECBA  F051         	call	i2___wmul	;wreg free
 30685  0064F4  0E14               	movlw	low _alarmData
 30686  0064F6  2401               	addwf	?i2___wmul^0,w,c
 30687  0064F8  0100               	movlb	0	; () banked
 30688  0064FA  6FC5               	movwf	i2_AlarmUpdateLCD$7141& (0+255),b
 30689  0064FC  0E09               	movlw	high _alarmData
 30690  0064FE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30691  006500  6FC6               	movwf	(i2_AlarmUpdateLCD$7141+1)& (0+255),b
 30692                           
 30693                           ; BSR set to: 0
 30694                           ;alarm.c: 453:             AlarmDisplay(alarmData[id].type,alarmData[id].name);
 30695  006502  0060  F30C  F0BD   	movff	i2_AlarmUpdateLCD$7140,i2AlarmDisplay@type
 30696  006508  0060  F310  F0BE   	movff	i2_AlarmUpdateLCD$7140+1,i2AlarmDisplay@type+1
 30697  00650E  0060  F314  F0BF   	movff	i2_AlarmUpdateLCD$7141,i2AlarmDisplay@alarm
 30698  006514  0060  F318  F0C0   	movff	i2_AlarmUpdateLCD$7141+1,i2AlarmDisplay@alarm+1
 30699  00651A  EC7D  F043         	call	i2_AlarmDisplay	;wreg free
 30700                           
 30701                           ;alarm.c: 454:             displayStatus = 0;
 30702  00651E  0E00               	movlw	0
 30703  006520  0102               	movlb	2	; () banked
 30704  006522  6F73               	movwf	(_displayStatus+1)& (0+255),b
 30705  006524  0E00               	movlw	0
 30706  006526  6F72               	movwf	_displayStatus& (0+255),b
 30707                           
 30708                           ;alarm.c: 455:         } else {
 30709  006528  0012               	return	
 30710  00652A                     i2l19290:
 30711                           
 30712                           ;alarm.c: 458:             ValueDisplay();
 30713  00652A  EC60  F00F         	call	i2_ValueDisplay	;wreg free
 30714                           
 30715                           ;alarm.c: 460:             if (AnyAlarm()) displayStatus = 1;
 30716  00652E  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 30717  006532  0900               	iorlw	0
 30718  006534  B4D8               	btfsc	status,2,c
 30719  006536  0012               	return	
 30720  006538  0E00               	movlw	0
 30721  00653A  0102               	movlb	2	; () banked
 30722  00653C  6F73               	movwf	(_displayStatus+1)& (0+255),b
 30723  00653E  0E01               	movlw	1
 30724  006540  6F72               	movwf	_displayStatus& (0+255),b
 30725  006542  0012               	return		;funcret
 30726  006544                     __end_ofi2_AlarmUpdateLCD:
 30727                           	opt callstack 0
 30728                           
 30729 ;; *************** function i2_HigherAlarm *****************
 30730 ;; Defined at:
 30731 ;;		line 359 in file "alarm.c"
 30732 ;; Parameters:    Size  Location     Type
 30733 ;;		None
 30734 ;; Auto vars:     Size  Location     Type
 30735 ;;  HigherAlarm     2   15[COMRAM] int 
 30736 ;;  HigherAlarm     2   13[COMRAM] int 
 30737 ;; Return value:  Size  Location     Type
 30738 ;;                  2    6[COMRAM] int 
 30739 ;; Registers used:
 30740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30741 ;; Tracked objects:
 30742 ;;		On entry : 0/1
 30743 ;;		On exit  : 0/0
 30744 ;;		Unchanged: 0/0
 30745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30747 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30749 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30750 ;;Total ram usage:       11 bytes
 30751 ;; Hardware stack levels used:    1
 30752 ;; Hardware stack levels required when called:    1
 30753 ;; This function calls:
 30754 ;;		i2___wmul
 30755 ;; This function is called by:
 30756 ;;		i2_MuteAlarm
 30757 ;;		i2_AlarmUpdateLCD
 30758 ;; This function uses a non-reentrant model
 30759 ;;
 30760                           
 30761                           	psect	text242
 30762  0081C2                     __ptext242:
 30763                           	opt callstack 0
 30764  0081C2                     i2_HigherAlarm:
 30765                           	opt callstack 12
 30766                           
 30767                           ;alarm.c: 360:     int max=-1;
 30768                           
 30769                           ;incstack = 0
 30770  0081C2  680E               	setf	i2HigherAlarm@max^0,c
 30771  0081C4  680F               	setf	(i2HigherAlarm@max+1)^0,c
 30772                           
 30773                           ;alarm.c: 361:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 30774  0081C6  0E00               	movlw	0
 30775  0081C8  6E11               	movwf	(i2HigherAlarm@i+1)^0,c
 30776  0081CA  0E00               	movlw	0
 30777  0081CC  6E10               	movwf	i2HigherAlarm@i^0,c
 30778  0081CE                     i2l18892:
 30779                           
 30780                           ;alarm.c: 362:         if (alarms[i]) {
 30781  0081CE  90D8               	bcf	status,0,c
 30782  0081D0  3410               	rlcf	i2HigherAlarm@i^0,w,c
 30783  0081D2  6ED9               	movwf	fsr2l,c
 30784  0081D4  3411               	rlcf	(i2HigherAlarm@i+1)^0,w,c
 30785  0081D6  6EDA               	movwf	fsr2h,c
 30786  0081D8  0E00               	movlw	low _alarms
 30787  0081DA  26D9               	addwf	fsr2l,f,c
 30788  0081DC  0E03               	movlw	high _alarms
 30789  0081DE  22DA               	addwfc	fsr2h,f,c
 30790  0081E0  50DE               	movf	postinc2,w,c
 30791  0081E2  10DE               	iorwf	postinc2,w,c
 30792  0081E4  B4D8               	btfsc	status,2,c
 30793  0081E6  D037               	goto	i2l18902
 30794                           
 30795                           ;alarm.c: 363:             if (max<0) max = i;
 30796  0081E8  AE0F               	btfss	(i2HigherAlarm@max+1)^0,7,c
 30797  0081EA  D007               	goto	i2l18898
 30798  0081EC                     i2u1858_40:
 30799  0081EC  0060  F040  F00E   	movff	i2HigherAlarm@i,i2HigherAlarm@max
 30800  0081F2  0060  F044  F00F   	movff	i2HigherAlarm@i+1,i2HigherAlarm@max+1
 30801  0081F8  D02E               	goto	i2l18902
 30802  0081FA                     i2l18898:
 30803  0081FA  0060  F040  F001   	movff	i2HigherAlarm@i,i2___wmul@multiplier
 30804  008200  0060  F044  F002   	movff	i2HigherAlarm@i+1,i2___wmul@multiplier+1
 30805  008206  0E00               	movlw	0
 30806  008208  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30807  00820A  0E15               	movlw	21
 30808  00820C  6E03               	movwf	i2___wmul@multiplicand^0,c
 30809  00820E  ECBA  F051         	call	i2___wmul	;wreg free
 30810  008212  0E25               	movlw	low (_alarmData+17)
 30811  008214  2401               	addwf	?i2___wmul^0,w,c
 30812  008216  6ED9               	movwf	fsr2l,c
 30813  008218  0E09               	movlw	high (_alarmData+17)
 30814  00821A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30815  00821C  6EDA               	movwf	fsr2h,c
 30816  00821E  0060  F038  F001   	movff	i2HigherAlarm@max,i2___wmul@multiplier
 30817  008224  0060  F03C  F002   	movff	i2HigherAlarm@max+1,i2___wmul@multiplier+1
 30818  00822A  0E00               	movlw	0
 30819  00822C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 30820  00822E  0E15               	movlw	21
 30821  008230  6E03               	movwf	i2___wmul@multiplicand^0,c
 30822  008232  ECBA  F051         	call	i2___wmul	;wreg free
 30823  008236  0E25               	movlw	low (_alarmData+17)
 30824  008238  2401               	addwf	?i2___wmul^0,w,c
 30825  00823A  6EE1               	movwf	fsr1l,c
 30826  00823C  0E09               	movlw	high (_alarmData+17)
 30827  00823E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 30828  008240  6EE2               	movwf	fsr1h,c
 30829  008242  50DE               	movf	postinc2,w,c
 30830  008244  5CE6               	subwf	postinc1,w,c
 30831  008246  50E6               	movf	postinc1,w,c
 30832  008248  0A80               	xorlw	128
 30833  00824A  6E0D               	movwf	(??i2_HigherAlarm+4)^0,c
 30834  00824C  50DE               	movf	postinc2,w,c
 30835  00824E  0A80               	xorlw	128
 30836  008250  580D               	subwfb	(??i2_HigherAlarm+4)^0,w,c
 30837  008252  A0D8               	btfss	status,0,c
 30838  008254  D7CB               	goto	i2u1858_40
 30839  008256                     i2l18902:
 30840                           
 30841                           ;alarm.c: 366:     }
 30842  008256  4A10               	infsnz	i2HigherAlarm@i^0,f,c
 30843  008258  2A11               	incf	(i2HigherAlarm@i+1)^0,f,c
 30844  00825A  5011               	movf	(i2HigherAlarm@i+1)^0,w,c
 30845  00825C  E104               	bnz	i2u1860_40
 30846  00825E  0E13               	movlw	19
 30847  008260  5C10               	subwf	i2HigherAlarm@i^0,w,c
 30848  008262  A0D8               	btfss	status,0,c
 30849  008264  D7B4               	goto	i2l18892
 30850  008266                     i2u1860_40:
 30851                           
 30852                           ;alarm.c: 367:     return max;
 30853  008266  0060  F038  F007   	movff	i2HigherAlarm@max,?i2_HigherAlarm
 30854  00826C  0060  F03C  F008   	movff	i2HigherAlarm@max+1,?i2_HigherAlarm+1
 30855  008272  0012               	return		;funcret
 30856  008274                     __end_ofi2_HigherAlarm:
 30857                           	opt callstack 0
 30858                           
 30859 ;; *************** function i2_AlarmDisplay *****************
 30860 ;; Defined at:
 30861 ;;		line 110 in file "display.c"
 30862 ;; Parameters:    Size  Location     Type
 30863 ;;  type            2   93[BANK0 ] int 
 30864 ;;  alarm           2   95[BANK0 ] PTR unsigned char 
 30865 ;;		 -> alarmData(399), 
 30866 ;; Auto vars:     Size  Location     Type
 30867 ;;  AlarmDisplay    1   86[COMRAM] unsigned char 
 30868 ;; Return value:  Size  Location     Type
 30869 ;;                  1    wreg      void 
 30870 ;; Registers used:
 30871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30872 ;; Tracked objects:
 30873 ;;		On entry : 3F/0
 30874 ;;		On exit  : 3D/0
 30875 ;;		Unchanged: 0/0
 30876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30878 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30880 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30881 ;;Total ram usage:        9 bytes
 30882 ;; Hardware stack levels used:    1
 30883 ;; Hardware stack levels required when called:   10
 30884 ;; This function calls:
 30885 ;;		i2_ValueDisplay
 30886 ;;		i2___awmod
 30887 ;;		i2_sprintf
 30888 ;; This function is called by:
 30889 ;;		i2_AlarmUpdateLCD
 30890 ;; This function uses a non-reentrant model
 30891 ;;
 30892                           
 30893                           	psect	text243
 30894  0086FA                     __ptext243:
 30895                           	opt callstack 0
 30896  0086FA                     i2_AlarmDisplay:
 30897                           	opt callstack 2
 30898                           
 30899                           ; BSR set to: 0
 30900                           ;display.c: 111:     static int cnt = 0;;display.c: 112:     char t = (type==4) ? 'H' : 
      +                          ((type==2) ? 'M' : 'L');
 30901                           
 30902                           ;incstack = 0
 30903  0086FA  0E04               	movlw	4
 30904  0086FC  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30905  0086FE  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30906  008700  B4D8               	btfsc	status,2,c
 30907  008702  D014               	goto	i2l18868
 30908                           
 30909                           ; BSR set to: 0
 30910  008704  0E02               	movlw	2
 30911  008706  19BD               	xorwf	i2AlarmDisplay@type& (0+255),w,b
 30912  008708  11BE               	iorwf	(i2AlarmDisplay@type+1)& (0+255),w,b
 30913  00870A  B4D8               	btfsc	status,2,c
 30914  00870C  D004               	goto	i2l18864
 30915                           
 30916                           ; BSR set to: 0
 30917  00870E  0E00               	movlw	0
 30918  008710  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30919  008712  0E4C               	movlw	76
 30920  008714  D003               	goto	L14
 30921  008716                     i2l18864:
 30922                           
 30923                           ; BSR set to: 0
 30924  008716  0E00               	movlw	0
 30925  008718  6E5B               	movwf	(i2_AlarmDisplay$4016+1)^0,c
 30926  00871A  0E4D               	movlw	77
 30927  00871C                     L14:
 30928  00871C  6E5A               	movwf	i2_AlarmDisplay$4016^0,c
 30929                           
 30930                           ; BSR set to: 0
 30931  00871E  0060  F168  F058   	movff	i2_AlarmDisplay$4016,i2_AlarmDisplay$4015
 30932  008724  0060  F16C  F059   	movff	i2_AlarmDisplay$4016+1,i2_AlarmDisplay$4015+1
 30933  00872A  D004               	goto	i2l18870
 30934  00872C                     i2l18868:
 30935                           
 30936                           ; BSR set to: 0
 30937  00872C  0E00               	movlw	0
 30938  00872E  6E59               	movwf	(i2_AlarmDisplay$4015+1)^0,c
 30939  008730  0E48               	movlw	72
 30940  008732  6E58               	movwf	i2_AlarmDisplay$4015^0,c
 30941  008734                     i2l18870:
 30942                           
 30943                           ; BSR set to: 0
 30944  008734  0060  F160  F057   	movff	i2_AlarmDisplay$4015,i2AlarmDisplay@t
 30945                           
 30946                           ; BSR set to: 0
 30947                           ;display.c: 114:         sprintf(msg2, "%c %14s", t, alarm);
 30948  00873A  0ED1               	movlw	low _msg2
 30949  00873C  6F77               	movwf	i2sprintf@s& (0+255),b
 30950  00873E  0E03               	movlw	high _msg2
 30951  008740  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 30952  008742  0EB2               	movlw	low STR_13
 30953  008744  6F79               	movwf	i2sprintf@fmt& (0+255),b
 30954  008746  0EFF               	movlw	high STR_13
 30955  008748  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 30956  00874A  0060  F15C  F07B   	movff	i2AlarmDisplay@t,?i2_sprintf+4
 30957  008750  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 30958  008752  0060  F2FC  F07D   	movff	i2AlarmDisplay@alarm,?i2_sprintf+6
 30959  008758  0060  F300  F07E   	movff	i2AlarmDisplay@alarm+1,?i2_sprintf+7
 30960  00875E  EC6A  F04C         	call	i2_sprintf	;wreg free
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;display.c: 117:     ValueDisplay();
 30964  008762  EC60  F00F         	call	i2_ValueDisplay	;wreg free
 30965                           
 30966                           ;display.c: 118:     cnt++;
 30967  008766  0102               	movlb	2	; () banked
 30968  008768  4B86               	infsnz	AlarmDisplay@cnt& (0+255),f,b
 30969  00876A  2B87               	incf	(AlarmDisplay@cnt+1)& (0+255),f,b
 30970                           
 30971                           ; BSR set to: 2
 30972                           ;display.c: 119:     cnt = cnt%10;
 30973  00876C  0060  FA18  F001   	movff	AlarmDisplay@cnt,i2___awmod@dividend
 30974  008772  0060  FA1C  F002   	movff	AlarmDisplay@cnt+1,i2___awmod@dividend+1
 30975  008778  0E00               	movlw	0
 30976  00877A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 30977  00877C  0E0A               	movlw	10
 30978  00877E  6E03               	movwf	i2___awmod@divisor^0,c
 30979  008780  EC3B  F047         	call	i2___awmod	;wreg free
 30980  008784  0060  F004  F286   	movff	?i2___awmod,AlarmDisplay@cnt
 30981  00878A  0060  F008  F287   	movff	?i2___awmod+1,AlarmDisplay@cnt+1
 30982  008790  0012               	return		;funcret
 30983  008792                     __end_ofi2_AlarmDisplay:
 30984                           	opt callstack 0
 30985                           
 30986 ;; *************** function i2_DisableAlarmSV1 *****************
 30987 ;; Defined at:
 30988 ;;		line 854 in file "monitor.c"
 30989 ;; Parameters:    Size  Location     Type
 30990 ;;		None
 30991 ;; Auto vars:     Size  Location     Type
 30992 ;;		None
 30993 ;; Return value:  Size  Location     Type
 30994 ;;                  1    wreg      void 
 30995 ;; Registers used:
 30996 ;;		wreg, status,2
 30997 ;; Tracked objects:
 30998 ;;		On entry : 3F/0
 30999 ;;		On exit  : 3F/0
 31000 ;;		Unchanged: 0/0
 31001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31006 ;;Total ram usage:        0 bytes
 31007 ;; Hardware stack levels used:    1
 31008 ;; This function calls:
 31009 ;;		Nothing
 31010 ;; This function is called by:
 31011 ;;		_ButtonTask
 31012 ;; This function uses a non-reentrant model
 31013 ;;
 31014                           
 31015                           	psect	text244
 31016  00AF8A                     __ptext244:
 31017                           	opt callstack 0
 31018  00AF8A                     i2_DisableAlarmSV1:
 31019                           	opt callstack 14
 31020                           
 31021                           ; BSR set to: 0
 31022                           ;monitor.c: 855:     disableAlarmSV1=1;
 31023                           
 31024                           ;incstack = 0
 31025  00AF8A  0E01               	movlw	1
 31026  00AF8C  6FEF               	movwf	_disableAlarmSV1& (0+255),b
 31027                           
 31028                           ; BSR set to: 0
 31029  00AF8E  0012               	return		;funcret
 31030  00AF90                     __end_ofi2_DisableAlarmSV1:
 31031                           	opt callstack 0
 31032                           
 31033 ;; *************** function _TMR0_ISR *****************
 31034 ;; Defined at:
 31035 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 31036 ;; Parameters:    Size  Location     Type
 31037 ;;		None
 31038 ;; Auto vars:     Size  Location     Type
 31039 ;;		None
 31040 ;; Return value:  Size  Location     Type
 31041 ;;                  1    wreg      void 
 31042 ;; Registers used:
 31043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31044 ;; Tracked objects:
 31045 ;;		On entry : 3F/39
 31046 ;;		On exit  : 0/0
 31047 ;;		Unchanged: 0/0
 31048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31053 ;;Total ram usage:        0 bytes
 31054 ;; Hardware stack levels used:    1
 31055 ;; Hardware stack levels required when called:   11
 31056 ;; This function calls:
 31057 ;;		Absolute function
 31058 ;;		_MonitorPressureTask
 31059 ;;		_TMR0_DefaultInterruptHandler
 31060 ;; This function is called by:
 31061 ;;		_INTERRUPT_InterruptManager
 31062 ;; This function uses a non-reentrant model
 31063 ;;
 31064                           
 31065                           	psect	text245
 31066  00A694                     __ptext245:
 31067                           	opt callstack 0
 31068  00A694                     _TMR0_ISR:
 31069                           	opt callstack 5
 31070                           
 31071                           ; BSR set to: 57
 31072                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
 31073                           
 31074                           ; BSR set to: 0
 31075                           ;incstack = 0
 31076  00A694  9FA3               	bcf	163,7,b	;volatile
 31077                           
 31078                           ; BSR set to: 57
 31079                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 31080  00A696  0102               	movlb	2	; () banked
 31081  00A698  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 31082  00A69A  11E0               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 31083  00A69C  B4D8               	btfsc	status,2,c
 31084  00A69E  0012               	return	
 31085                           
 31086                           ; BSR set to: 2
 31087                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 31088  00A6A0  D801               	call	i2u2142_48
 31089  00A6A2  0012               	return	
 31090  00A6A4                     i2u2142_48:
 31091  00A6A4  0005               	push	
 31092  00A6A6  6EFA               	movwf	pclath,c
 31093  00A6A8  51DF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 31094  00A6AA  6EFD               	movwf	tosl,c
 31095  00A6AC  51E0               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 31096  00A6AE  6EFE               	movwf	tosh,c
 31097  00A6B0  6AFF               	clrf	tosu,c
 31098  00A6B2  50FA               	movf	pclath,w,c
 31099  00A6B4  0012               	return		;indir
 31100  00A6B6                     __end_of_TMR0_ISR:
 31101                           	opt callstack 0
 31102                           
 31103 ;; *************** function _MonitorPressureTask *****************
 31104 ;; Defined at:
 31105 ;;		line 273 in file "monitor.c"
 31106 ;; Parameters:    Size  Location     Type
 31107 ;;		None
 31108 ;; Auto vars:     Size  Location     Type
 31109 ;;  i               2   89[BANK0 ] int 
 31110 ;;  i               2   87[BANK0 ] int 
 31111 ;;  i               2   95[BANK0 ] int 
 31112 ;;  i               2   93[BANK0 ] int 
 31113 ;;  tmp2            2   83[BANK0 ] unsigned short 
 31114 ;;  tmp             2   81[BANK0 ] unsigned short 
 31115 ;;  sqpr            4    0        unsigned long 
 31116 ;;  pr              2   99[BANK0 ] short 
 31117 ;;  v2              2   97[BANK0 ] unsigned short 
 31118 ;;  temp            2   91[BANK0 ] unsigned short 
 31119 ;;  next            2   85[BANK0 ] int 
 31120 ;;  adcv            2   79[BANK0 ] short 
 31121 ;;  v1              2   65[BANK0 ] unsigned short 
 31122 ;;  halfLimit       2   63[BANK0 ] short 
 31123 ;;  v5              2   61[BANK0 ] short 
 31124 ;;  v12             2   59[BANK0 ] short 
 31125 ;; Return value:  Size  Location     Type
 31126 ;;                  1    wreg      void 
 31127 ;; Registers used:
 31128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31129 ;; Tracked objects:
 31130 ;;		On entry : 3F/2
 31131 ;;		On exit  : 1/0
 31132 ;;		Unchanged: 0/0
 31133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31135 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31136 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31137 ;;      Totals:         5      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31138 ;;Total ram usage:       47 bytes
 31139 ;; Hardware stack levels used:    1
 31140 ;; Hardware stack levels required when called:   10
 31141 ;; This function calls:
 31142 ;;		_AdcReStartCycle
 31143 ;;		_AdcReady
 31144 ;;		_ClearTdeTooLongAlarm
 31145 ;;		_ClearTdiTooLongAlarm
 31146 ;;		_ClearVAboveMaxAlarm
 31147 ;;		_ClearVBelowMinAlarm
 31148 ;;		_DisplayCalibrate
 31149 ;;		_GetPressure_mbar02
 31150 ;;		_SetCircuitFailureAlarm
 31151 ;;		_SetEPAboveSetAlarm
 31152 ;;		_SetEPBelowSetAlarm
 31153 ;;		_SetGasFailureAlarm
 31154 ;;		_SetIPAboveSetAlarm
 31155 ;;		_SetIPBelowSetAlarm
 31156 ;;		_SetTdeTooLongAlarm
 31157 ;;		_SetTdiTooLongAlarm
 31158 ;;		_SetVAboveMaxAlarm
 31159 ;;		_SetVBelowMinAlarm
 31160 ;;		___lldiv
 31161 ;;		___lwdiv
 31162 ;;		_isqrt
 31163 ;;		i2_AdcDataReady
 31164 ;;		i2_ClearCircuitFailureAlarm
 31165 ;;		i2_ClearEPAboveSetAlarm
 31166 ;;		i2_ClearEPBelowSetAlarm
 31167 ;;		i2_ClearGasFailureAlarm
 31168 ;;		i2_ClearIPAboveSetAlarm
 31169 ;;		i2_ClearIPBelowSetAlarm
 31170 ;;		i2_ClearVars
 31171 ;;		i2_GetPressureV_pa
 31172 ;;		i2_GetPressure_pa
 31173 ;;		i2_MonitorDump
 31174 ;;		i2_See12V
 31175 ;;		i2_See5V
 31176 ;;		i2___aldiv
 31177 ;;		i2___awdiv
 31178 ;;		i2___awmod
 31179 ;;		i2___wmul
 31180 ;;		i2_printf
 31181 ;; This function is called by:
 31182 ;;		_MonitorInit
 31183 ;;		_TMR0_ISR
 31184 ;; This function uses a non-reentrant model
 31185 ;;
 31186                           
 31187                           	psect	text246
 31188  00001E                     __ptext246:
 31189                           	opt callstack 0
 31190  00001E                     _MonitorPressureTask:
 31191                           	opt callstack 5
 31192                           
 31193                           ; BSR set to: 2
 31194                           ;monitor.c: 274:     int16_t pr, v12, adcv, v5;;monitor.c: 275:     uint32_t sqpr;;monit
      +                          or.c: 277:     int next;;monitor.c: 278:     static _Bool measPi=0;;monitor.c: 279:     
      +                          static _Bool measPe=0;;monitor.c: 281:     next = state;
 31195                           
 31196                           ;incstack = 0
 31197  00001E  0060  F794  F0B5   	movff	_state,MonitorPressureTask@next
 31198  000024  0060  F798  F0B6   	movff	_state+1,MonitorPressureTask@next+1
 31199                           
 31200                           ; BSR set to: 2
 31201                           ;monitor.c: 283:     uint16_t temp;;monitor.c: 286:     if (normalSV1 && (alarmSV1 || di
      +                          sableAlarmSV1)) do { LATAbits.LATA1 = 1; } while(0);
 31202  00002A  519F               	movf	_normalSV1& (0+255),w,b
 31203  00002C  B4D8               	btfsc	status,2,c
 31204  00002E  D009               	goto	i2l3072
 31205                           
 31206                           ; BSR set to: 2
 31207  000030  51A0               	movf	_alarmSV1& (0+255),w,b
 31208  000032  A4D8               	btfss	status,2,c
 31209  000034  D004               	goto	i2u2049_40
 31210                           
 31211                           ; BSR set to: 2
 31212  000036  0100               	movlb	0	; () banked
 31213  000038  51EF               	movf	_disableAlarmSV1& (0+255),w,b
 31214  00003A  B4D8               	btfsc	status,2,c
 31215  00003C  D002               	goto	i2l3072
 31216  00003E                     i2u2049_40:
 31217  00003E  82BA               	bsf	186,1,c	;volatile
 31218  000040  D001               	goto	i2l21174
 31219  000042                     i2l3072:
 31220  000042  92BA               	bcf	186,1,c	;volatile
 31221  000044                     i2l21174:
 31222                           
 31223                           ;monitor.c: 290:     static int16_t cnt=0;;monitor.c: 291:     if (cnt==0) printf("0\r\n
      +                          ");
 31224  000044  0102               	movlb	2	; () banked
 31225  000046  513A               	movf	MonitorPressureTask@cnt& (0+255),w,b
 31226  000048  113B               	iorwf	(MonitorPressureTask@cnt+1)& (0+255),w,b
 31227  00004A  A4D8               	btfss	status,2,c
 31228  00004C  D007               	goto	i2l21178
 31229                           
 31230                           ; BSR set to: 2
 31231  00004E  0ED8               	movlw	low STR_42
 31232  000050  0100               	movlb	0	; () banked
 31233  000052  6F77               	movwf	i2printf@fmt& (0+255),b
 31234  000054  0EFF               	movlw	high STR_42
 31235  000056  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31236  000058  ECBB  F052         	call	i2_printf	;wreg free
 31237  00005C                     i2l21178:
 31238                           
 31239                           ; BSR set to: 2
 31240                           ;monitor.c: 292:     cnt = (cnt+1)%1000;
 31241  00005C  0E01               	movlw	1
 31242  00005E  253A               	addwf	MonitorPressureTask@cnt& (0+255),w,b
 31243  000060  6E01               	movwf	i2___awmod@dividend^0,c
 31244  000062  0E00               	movlw	0
 31245  000064  213B               	addwfc	(MonitorPressureTask@cnt+1)& (0+255),w,b
 31246  000066  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31247  000068  0E03               	movlw	3
 31248  00006A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31249  00006C  0EE8               	movlw	232
 31250  00006E  6E03               	movwf	i2___awmod@divisor^0,c
 31251  000070  EC3B  F047         	call	i2___awmod	;wreg free
 31252  000074  0060  F004  F23A   	movff	?i2___awmod,MonitorPressureTask@cnt
 31253  00007A  0060  F008  F23B   	movff	?i2___awmod+1,MonitorPressureTask@cnt+1
 31254                           
 31255                           ;monitor.c: 294:     if (!AdcDataReady(0)) {
 31256  000080  0E00               	movlw	0
 31257  000082  6E08               	movwf	(i2AdcDataReady@id+1)^0,c
 31258  000084  0E00               	movlw	0
 31259  000086  6E07               	movwf	i2AdcDataReady@id^0,c
 31260  000088  EC0F  F052         	call	i2_AdcDataReady	;wreg free
 31261  00008C  0900               	iorlw	0
 31262  00008E  A4D8               	btfss	status,2,c
 31263  000090  D00A               	goto	i2l21188
 31264                           
 31265                           ;monitor.c: 295:         printf(" (ErrDR) ");
 31266  000092  0EA8               	movlw	low STR_43
 31267  000094  0100               	movlb	0	; () banked
 31268  000096  6F77               	movwf	i2printf@fmt& (0+255),b
 31269  000098  0EFF               	movlw	high STR_43
 31270  00009A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31271  00009C  ECBB  F052         	call	i2_printf	;wreg free
 31272                           
 31273                           ; BSR set to: 2
 31274                           ;monitor.c: 297:         AdcReStartCycle();
 31275  0000A0  ECFB  F049         	call	_AdcReStartCycle	;wreg free
 31276  0000A4  0012               	return	
 31277  0000A6                     i2l21188:
 31278                           
 31279                           ;monitor.c: 304:     if (!AdcReady()) {
 31280  0000A6  ECE9  F057         	call	_AdcReady	;wreg free
 31281  0000AA  0900               	iorlw	0
 31282  0000AC  A4D8               	btfss	status,2,c
 31283  0000AE  D008               	goto	i2l21194
 31284                           
 31285                           ; BSR set to: 62
 31286                           ;monitor.c: 305:             printf("=");
 31287  0000B0  0EFC               	movlw	low STR_44
 31288  0000B2  0100               	movlb	0	; () banked
 31289  0000B4  6F77               	movwf	i2printf@fmt& (0+255),b
 31290  0000B6  0EFF               	movlw	high STR_44
 31291  0000B8  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31292  0000BA  ECBB  F052         	call	i2_printf	;wreg free
 31293  0000BE  0012               	return	
 31294  0000C0                     i2l21194:
 31295                           
 31296                           ; BSR set to: 62
 31297                           ;monitor.c: 311:     if (state == 1) {
 31298  0000C0  0101               	movlb	1	; () banked
 31299  0000C2  05E5               	decf	_state& (0+255),w,b
 31300  0000C4  11E6               	iorwf	(_state+1)& (0+255),w,b
 31301  0000C6  A4D8               	btfss	status,2,c
 31302  0000C8  D0AD               	goto	i2l21216
 31303                           
 31304                           ; BSR set to: 1
 31305                           ;monitor.c: 312:         static int cnt=0;;monitor.c: 313:         adc_result_t tmp, tmp
      +                          2;;monitor.c: 314:         tmp = GetPressure_pa();
 31306  0000CA  EC7A  F02C         	call	i2_GetPressure_pa	;wreg free
 31307  0000CE  0060  F06C  F0B1   	movff	?i2_GetPressure_pa,MonitorPressureTask@tmp
 31308  0000D4  0060  F070  F0B2   	movff	?i2_GetPressure_pa+1,MonitorPressureTask@tmp+1
 31309                           
 31310                           ;monitor.c: 315:         adcOffset = (7*adcOffset + 8*tmp)/8;
 31311  0000DA  0060  F2C4  F05B   	movff	MonitorPressureTask@tmp,??_MonitorPressureTask
 31312  0000E0  0060  F2C8  F05C   	movff	MonitorPressureTask@tmp+1,??_MonitorPressureTask+1
 31313  0000E6  90D8               	bcf	status,0,c
 31314  0000E8  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31315  0000EA  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31316  0000EC  90D8               	bcf	status,0,c
 31317  0000EE  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31318  0000F0  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31319  0000F2  90D8               	bcf	status,0,c
 31320  0000F4  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31321  0000F6  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31322  0000F8  0060  F7E8  F001   	movff	_adcOffset,i2___wmul@multiplier
 31323  0000FE  0060  F7EC  F002   	movff	_adcOffset+1,i2___wmul@multiplier+1
 31324  000104  0E00               	movlw	0
 31325  000106  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31326  000108  0E07               	movlw	7
 31327  00010A  6E03               	movwf	i2___wmul@multiplicand^0,c
 31328  00010C  ECBA  F051         	call	i2___wmul	;wreg free
 31329  000110  505B               	movf	??_MonitorPressureTask^0,w,c
 31330  000112  2601               	addwf	?i2___wmul^0,f,c
 31331  000114  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31332  000116  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31333  000118  90D8               	bcf	status,0,c
 31334  00011A  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31335  00011C  3201               	rrcf	?i2___wmul^0,f,c
 31336  00011E  90D8               	bcf	status,0,c
 31337  000120  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31338  000122  3201               	rrcf	?i2___wmul^0,f,c
 31339  000124  90D8               	bcf	status,0,c
 31340  000126  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31341  000128  3201               	rrcf	?i2___wmul^0,f,c
 31342  00012A  0060  F004  F1FA   	movff	?i2___wmul,_adcOffset
 31343  000130  0060  F008  F1FB   	movff	?i2___wmul+1,_adcOffset+1
 31344                           
 31345                           ;monitor.c: 316:         tmp2 = GetPressureV_pa();
 31346  000136  EC24  F038         	call	i2_GetPressureV_pa	;wreg free
 31347  00013A  0060  F06C  F0B3   	movff	?i2_GetPressureV_pa,MonitorPressureTask@tmp2
 31348  000140  0060  F070  F0B4   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@tmp2+1
 31349                           
 31350                           ;monitor.c: 317:         adcVOffset = (7*adcVOffset + 8*tmp2)/8;
 31351  000146  0060  F2CC  F05B   	movff	MonitorPressureTask@tmp2,??_MonitorPressureTask
 31352  00014C  0060  F2D0  F05C   	movff	MonitorPressureTask@tmp2+1,??_MonitorPressureTask+1
 31353  000152  90D8               	bcf	status,0,c
 31354  000154  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31355  000156  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31356  000158  90D8               	bcf	status,0,c
 31357  00015A  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31358  00015C  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31359  00015E  90D8               	bcf	status,0,c
 31360  000160  365B               	rlcf	??_MonitorPressureTask^0,f,c
 31361  000162  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 31362  000164  0060  F7E0  F001   	movff	_adcVOffset,i2___wmul@multiplier
 31363  00016A  0060  F7E4  F002   	movff	_adcVOffset+1,i2___wmul@multiplier+1
 31364  000170  0E00               	movlw	0
 31365  000172  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 31366  000174  0E07               	movlw	7
 31367  000176  6E03               	movwf	i2___wmul@multiplicand^0,c
 31368  000178  ECBA  F051         	call	i2___wmul	;wreg free
 31369  00017C  505B               	movf	??_MonitorPressureTask^0,w,c
 31370  00017E  2601               	addwf	?i2___wmul^0,f,c
 31371  000180  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 31372  000182  2202               	addwfc	(?i2___wmul+1)^0,f,c
 31373  000184  90D8               	bcf	status,0,c
 31374  000186  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31375  000188  3201               	rrcf	?i2___wmul^0,f,c
 31376  00018A  90D8               	bcf	status,0,c
 31377  00018C  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31378  00018E  3201               	rrcf	?i2___wmul^0,f,c
 31379  000190  90D8               	bcf	status,0,c
 31380  000192  3202               	rrcf	(?i2___wmul+1)^0,f,c
 31381  000194  3201               	rrcf	?i2___wmul^0,f,c
 31382  000196  0060  F004  F1F8   	movff	?i2___wmul,_adcVOffset
 31383  00019C  0060  F008  F1F9   	movff	?i2___wmul+1,_adcVOffset+1
 31384                           
 31385                           ;monitor.c: 318:         AdcReStartCycle();
 31386  0001A2  ECFB  F049         	call	_AdcReStartCycle	;wreg free
 31387                           
 31388                           ; BSR set to: 62
 31389                           ;monitor.c: 319:         cnt++;
 31390  0001A6  0102               	movlb	2	; () banked
 31391  0001A8  4B38               	infsnz	MonitorPressureTask@nt_4874& (0+255),f,b
 31392  0001AA  2B39               	incf	(MonitorPressureTask@nt_4874+1)& (0+255),f,b
 31393                           
 31394                           ; BSR set to: 2
 31395                           ;monitor.c: 320:         if (cnt==250) {
 31396  0001AC  0EFA               	movlw	250
 31397  0001AE  1938               	xorwf	MonitorPressureTask@nt_4874& (0+255),w,b
 31398  0001B0  1139               	iorwf	(MonitorPressureTask@nt_4874+1)& (0+255),w,b
 31399  0001B2  A4D8               	btfss	status,2,c
 31400  0001B4  D004               	goto	i2l21210
 31401                           
 31402                           ; BSR set to: 2
 31403                           ;monitor.c: 322:             cnt = 0;
 31404  0001B6  0E00               	movlw	0
 31405  0001B8  6F39               	movwf	(MonitorPressureTask@nt_4874+1)& (0+255),b
 31406  0001BA  0E00               	movlw	0
 31407  0001BC  6F38               	movwf	MonitorPressureTask@nt_4874& (0+255),b
 31408  0001BE                     i2l21210:
 31409                           
 31410                           ; BSR set to: 2
 31411                           ;monitor.c: 325:         DisplayCalibrate(tmp, adcOffset/8, tmp2, adcVOffset/8);
 31412  0001BE  0060  F2C4  F093   	movff	MonitorPressureTask@tmp,DisplayCalibrate@pr
 31413  0001C4  0060  F2C8  F094   	movff	MonitorPressureTask@tmp+1,DisplayCalibrate@pr+1
 31414  0001CA  0060  F7E8  F007   	movff	_adcOffset,i2___awdiv@dividend
 31415  0001D0  0060  F7EC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 31416  0001D6  0E00               	movlw	0
 31417  0001D8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31418  0001DA  0E08               	movlw	8
 31419  0001DC  6E09               	movwf	i2___awdiv@divisor^0,c
 31420  0001DE  ECC1  F045         	call	i2___awdiv	;wreg free
 31421  0001E2  0060  F01C  F095   	movff	?i2___awdiv,DisplayCalibrate@off
 31422  0001E8  0060  F020  F096   	movff	?i2___awdiv+1,DisplayCalibrate@off+1
 31423  0001EE  0060  F2CC  F097   	movff	MonitorPressureTask@tmp2,DisplayCalibrate@prv
 31424  0001F4  0060  F2D0  F098   	movff	MonitorPressureTask@tmp2+1,DisplayCalibrate@prv+1
 31425  0001FA  0060  F7E0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 31426  000200  0060  F7E4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 31427  000206  0E00               	movlw	0
 31428  000208  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31429  00020A  0E08               	movlw	8
 31430  00020C  6E09               	movwf	i2___awdiv@divisor^0,c
 31431  00020E  ECC1  F045         	call	i2___awdiv	;wreg free
 31432  000212  0060  F01C  F099   	movff	?i2___awdiv,DisplayCalibrate@offv
 31433  000218  0060  F020  F09A   	movff	?i2___awdiv+1,DisplayCalibrate@offv+1
 31434  00021E  EC64  F050         	call	_DisplayCalibrate	;wreg free
 31435  000222  0012               	return	
 31436  000224                     i2l21216:
 31437                           
 31438                           ; BSR set to: 1
 31439                           ;monitor.c: 332:         pr = GetPressure_mbar02();
 31440  000224  EC15  F050         	call	_GetPressure_mbar02	;wreg free
 31441  000228  0060  F0AC  F0C3   	movff	?_GetPressure_mbar02,MonitorPressureTask@pr
 31442  00022E  0060  F0B0  F0C4   	movff	?_GetPressure_mbar02+1,MonitorPressureTask@pr+1
 31443                           
 31444                           ;monitor.c: 333:         if (pr<0) pr = 0;
 31445  000234  0100               	movlb	0	; () banked
 31446  000236  AFC4               	btfss	(MonitorPressureTask@pr+1)& (0+255),7,b
 31447  000238  D004               	goto	i2l21222
 31448                           
 31449                           ; BSR set to: 0
 31450  00023A  0E00               	movlw	0
 31451  00023C  6FC4               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31452  00023E  0E00               	movlw	0
 31453  000240  6FC3               	movwf	MonitorPressureTask@pr& (0+255),b
 31454  000242                     i2l21222:
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;monitor.c: 334:         if (pr>100*5) pr = 0;
 31458  000242  BFC4               	btfsc	(MonitorPressureTask@pr+1)& (0+255),7,b
 31459  000244  D00A               	goto	i2l21226
 31460  000246  0EF5               	movlw	245
 31461  000248  5DC3               	subwf	MonitorPressureTask@pr& (0+255),w,b
 31462  00024A  0E01               	movlw	1
 31463  00024C  59C4               	subwfb	(MonitorPressureTask@pr+1)& (0+255),w,b
 31464  00024E  A0D8               	btfss	status,0,c
 31465  000250  D004               	goto	i2l21226
 31466                           
 31467                           ; BSR set to: 0
 31468  000252  0E00               	movlw	0
 31469  000254  6FC4               	movwf	(MonitorPressureTask@pr+1)& (0+255),b
 31470  000256  0E00               	movlw	0
 31471  000258  6FC3               	movwf	MonitorPressureTask@pr& (0+255),b
 31472  00025A                     i2l21226:
 31473                           
 31474                           ; BSR set to: 0
 31475                           ;monitor.c: 336:         v12 = See12V();
 31476  00025A  EC1F  F037         	call	i2_See12V	;wreg free
 31477  00025E  0060  F06C  F09B   	movff	?i2_See12V,MonitorPressureTask@v12
 31478  000264  0060  F070  F09C   	movff	?i2_See12V+1,MonitorPressureTask@v12+1
 31479                           
 31480                           ;monitor.c: 337:         v5 = See5V();
 31481  00026A  EC47  F03C         	call	i2_See5V	;wreg free
 31482  00026E  0060  F06C  F09D   	movff	?i2_See5V,MonitorPressureTask@v5
 31483  000274  0060  F070  F09E   	movff	?i2_See5V+1,MonitorPressureTask@v5+1
 31484                           
 31485                           ;monitor.c: 339:         AdcReStartCycle();
 31486  00027A  ECFB  F049         	call	_AdcReStartCycle	;wreg free
 31487                           
 31488                           ; BSR set to: 62
 31489                           ;monitor.c: 343:     if (!enable) {
 31490  00027E  0102               	movlb	2	; () banked
 31491  000280  51A2               	movf	monitor@enable& (0+255),w,b
 31492  000282  A4D8               	btfss	status,2,c
 31493  000284  D020               	goto	i2l21268
 31494                           
 31495                           ; BSR set to: 2
 31496                           ;monitor.c: 344:         ClearVars();
 31497  000286  EC6E  F023         	call	i2_ClearVars	;wreg free
 31498                           
 31499                           ; BSR set to: 2
 31500                           ;monitor.c: 345:         ClearVAboveMaxAlarm();
 31501  00028A  EC8B  F057         	call	_ClearVAboveMaxAlarm	;wreg free
 31502                           
 31503                           ; BSR set to: 2
 31504                           ;monitor.c: 346:         ClearVBelowMinAlarm();
 31505  00028E  ECDA  F057         	call	_ClearVBelowMinAlarm	;wreg free
 31506                           
 31507                           ; BSR set to: 2
 31508                           ;monitor.c: 347:         ClearTdiTooLongAlarm();
 31509  000292  EC8F  F057         	call	_ClearTdiTooLongAlarm	;wreg free
 31510                           
 31511                           ; BSR set to: 2
 31512                           ;monitor.c: 348:         ClearTdeTooLongAlarm();
 31513  000296  EC93  F057         	call	_ClearTdeTooLongAlarm	;wreg free
 31514                           
 31515                           ; BSR set to: 2
 31516                           ;monitor.c: 349:         ClearEPBelowSetAlarm();
 31517  00029A  ECFF  F054         	call	i2_ClearEPBelowSetAlarm	;wreg free
 31518                           
 31519                           ; BSR set to: 0
 31520                           ;monitor.c: 350:         ClearEPAboveSetAlarm();
 31521  00029E  EC0A  F055         	call	i2_ClearEPAboveSetAlarm	;wreg free
 31522                           
 31523                           ; BSR set to: 0
 31524                           ;monitor.c: 351:         ClearIPBelowSetAlarm();
 31525  0002A2  ECE9  F054         	call	i2_ClearIPBelowSetAlarm	;wreg free
 31526                           
 31527                           ; BSR set to: 0
 31528                           ;monitor.c: 352:         ClearIPAboveSetAlarm();
 31529  0002A6  ECF4  F054         	call	i2_ClearIPAboveSetAlarm	;wreg free
 31530                           
 31531                           ; BSR set to: 2
 31532                           ;monitor.c: 353:         ClearVAboveMaxAlarm();
 31533  0002AA  EC8B  F057         	call	_ClearVAboveMaxAlarm	;wreg free
 31534                           
 31535                           ; BSR set to: 2
 31536                           ;monitor.c: 354:         ClearVBelowMinAlarm();
 31537  0002AE  ECDA  F057         	call	_ClearVBelowMinAlarm	;wreg free
 31538                           
 31539                           ; BSR set to: 2
 31540                           ;monitor.c: 355:         ClearCircuitFailureAlarm();
 31541  0002B2  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31542                           
 31543                           ; BSR set to: 2
 31544                           ;monitor.c: 356:         ClearGasFailureAlarm();
 31545  0002B6  EC7B  F057         	call	i2_ClearGasFailureAlarm	;wreg free
 31546                           
 31547                           ; BSR set to: 2
 31548                           ;monitor.c: 357:         alarmSV1=1;
 31549  0002BA  0E01               	movlw	1
 31550  0002BC  6FA0               	movwf	_alarmSV1& (0+255),b
 31551                           
 31552                           ; BSR set to: 2
 31553                           ;monitor.c: 358:         enableAlarms=0;
 31554  0002BE  0E00               	movlw	0
 31555  0002C0  0100               	movlb	0	; () banked
 31556  0002C2  6FF0               	movwf	_enableAlarms& (0+255),b
 31557  0002C4  0012               	return	
 31558  0002C6                     i2l21268:
 31559                           
 31560                           ; BSR set to: 2
 31561                           ;monitor.c: 361:         static int ecnt = 0;;monitor.c: 362:         ecnt++;
 31562  0002C6  4B36               	infsnz	MonitorPressureTask@ecnt& (0+255),f,b
 31563  0002C8  2B37               	incf	(MonitorPressureTask@ecnt+1)& (0+255),f,b
 31564                           
 31565                           ; BSR set to: 2
 31566                           ;monitor.c: 363:         if (ecnt==0) printf("e\r\n");
 31567  0002CA  5136               	movf	MonitorPressureTask@ecnt& (0+255),w,b
 31568  0002CC  1137               	iorwf	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31569  0002CE  A4D8               	btfss	status,2,c
 31570  0002D0  D007               	goto	i2l21274
 31571                           
 31572                           ; BSR set to: 2
 31573  0002D2  0EE0               	movlw	low STR_45
 31574  0002D4  0100               	movlb	0	; () banked
 31575  0002D6  6F77               	movwf	i2printf@fmt& (0+255),b
 31576  0002D8  0EFF               	movlw	high STR_45
 31577  0002DA  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31578  0002DC  ECBB  F052         	call	i2_printf	;wreg free
 31579  0002E0                     i2l21274:
 31580                           
 31581                           ; BSR set to: 2
 31582                           ;monitor.c: 364:         ecnt= (ecnt+1)%1000;
 31583  0002E0  0E01               	movlw	1
 31584  0002E2  2536               	addwf	MonitorPressureTask@ecnt& (0+255),w,b
 31585  0002E4  6E01               	movwf	i2___awmod@dividend^0,c
 31586  0002E6  0E00               	movlw	0
 31587  0002E8  2137               	addwfc	(MonitorPressureTask@ecnt+1)& (0+255),w,b
 31588  0002EA  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31589  0002EC  0E03               	movlw	3
 31590  0002EE  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31591  0002F0  0EE8               	movlw	232
 31592  0002F2  6E03               	movwf	i2___awmod@divisor^0,c
 31593  0002F4  EC3B  F047         	call	i2___awmod	;wreg free
 31594  0002F8  0060  F004  F236   	movff	?i2___awmod,MonitorPressureTask@ecnt
 31595  0002FE  0060  F008  F237   	movff	?i2___awmod+1,MonitorPressureTask@ecnt+1
 31596                           
 31597                           ;monitor.c: 368:     static int16_t cnt2=0;;monitor.c: 369:     if (cnt2==0) printf("P\r
      +                          \n");
 31598  000304  0102               	movlb	2	; () banked
 31599  000306  5134               	movf	MonitorPressureTask@cnt2& (0+255),w,b
 31600  000308  1135               	iorwf	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31601  00030A  A4D8               	btfss	status,2,c
 31602  00030C  D007               	goto	i2l21280
 31603                           
 31604                           ; BSR set to: 2
 31605  00030E  0EDC               	movlw	low STR_46
 31606  000310  0100               	movlb	0	; () banked
 31607  000312  6F77               	movwf	i2printf@fmt& (0+255),b
 31608  000314  0EFF               	movlw	high STR_46
 31609  000316  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 31610  000318  ECBB  F052         	call	i2_printf	;wreg free
 31611  00031C                     i2l21280:
 31612                           
 31613                           ; BSR set to: 2
 31614                           ;monitor.c: 370:     cnt2 = (cnt2+1)%1000;
 31615  00031C  0E01               	movlw	1
 31616  00031E  2534               	addwf	MonitorPressureTask@cnt2& (0+255),w,b
 31617  000320  6E01               	movwf	i2___awmod@dividend^0,c
 31618  000322  0E00               	movlw	0
 31619  000324  2135               	addwfc	(MonitorPressureTask@cnt2+1)& (0+255),w,b
 31620  000326  6E02               	movwf	(i2___awmod@dividend+1)^0,c
 31621  000328  0E03               	movlw	3
 31622  00032A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31623  00032C  0EE8               	movlw	232
 31624  00032E  6E03               	movwf	i2___awmod@divisor^0,c
 31625  000330  EC3B  F047         	call	i2___awmod	;wreg free
 31626  000334  0060  F004  F234   	movff	?i2___awmod,MonitorPressureTask@cnt2
 31627  00033A  0060  F008  F235   	movff	?i2___awmod+1,MonitorPressureTask@cnt2+1
 31628                           
 31629                           ;monitor.c: 373:     tt++;
 31630  000340  0E01               	movlw	1
 31631  000342  0100               	movlb	0	; () banked
 31632  000344  27C8               	addwf	_tt& (0+255),f,b
 31633  000346  0E00               	movlw	0
 31634  000348  23C9               	addwfc	(_tt+1)& (0+255),f,b
 31635  00034A  23CA               	addwfc	(_tt+2)& (0+255),f,b
 31636  00034C  23CB               	addwfc	(_tt+3)& (0+255),f,b
 31637                           
 31638                           ; BSR set to: 0
 31639                           ;monitor.c: 374:     ttExt++;
 31640  00034E  0102               	movlb	2	; () banked
 31641  000350  4B62               	infsnz	_ttExt& (0+255),f,b
 31642  000352  2B63               	incf	(_ttExt+1)& (0+255),f,b
 31643                           
 31644                           ; BSR set to: 2
 31645                           ;monitor.c: 375:     ttNoAlarm++;
 31646  000354  4B5C               	infsnz	_ttNoAlarm& (0+255),f,b
 31647  000356  2B5D               	incf	(_ttNoAlarm+1)& (0+255),f,b
 31648                           
 31649                           ; BSR set to: 2
 31650                           ;monitor.c: 376:     ttAlarm++;
 31651  000358  4B5A               	infsnz	_ttAlarm& (0+255),f,b
 31652  00035A  2B5B               	incf	(_ttAlarm+1)& (0+255),f,b
 31653                           
 31654                           ; BSR set to: 2
 31655                           ;monitor.c: 379:     prFastBuffer[count%25]=pr;
 31656  00035C  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31657  000362  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31658  000368  0E00               	movlw	0
 31659  00036A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31660  00036C  0E19               	movlw	25
 31661  00036E  6E03               	movwf	i2___awmod@divisor^0,c
 31662  000370  EC3B  F047         	call	i2___awmod	;wreg free
 31663  000374  90D8               	bcf	status,0,c
 31664  000376  3601               	rlcf	?i2___awmod^0,f,c
 31665  000378  3602               	rlcf	(?i2___awmod+1)^0,f,c
 31666  00037A  0E00               	movlw	low _prFastBuffer
 31667  00037C  2401               	addwf	?i2___awmod^0,w,c
 31668  00037E  6ED9               	movwf	fsr2l,c
 31669  000380  0E04               	movlw	high _prFastBuffer
 31670  000382  2002               	addwfc	(?i2___awmod+1)^0,w,c
 31671  000384  6EDA               	movwf	fsr2h,c
 31672  000386  0060  F30F  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31673  00038C  0060  F313  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31674                           
 31675                           ;monitor.c: 380:     temp = 0;
 31676  000392  0E00               	movlw	0
 31677  000394  0100               	movlb	0	; () banked
 31678  000396  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31679  000398  0E00               	movlw	0
 31680  00039A  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;monitor.c: 381:     for (int i=0; i<25; i++) temp +=prFastBuffer[i];
 31684  00039C  0E00               	movlw	0
 31685  00039E  6FBE               	movwf	(MonitorPressureTask@i+1)& (0+255),b
 31686  0003A0  0E00               	movlw	0
 31687  0003A2  6FBD               	movwf	MonitorPressureTask@i& (0+255),b
 31688  0003A4                     i2l21296:
 31689                           
 31690                           ; BSR set to: 0
 31691  0003A4  BFBE               	btfsc	(MonitorPressureTask@i+1)& (0+255),7,b
 31692  0003A6  D006               	goto	i2l21300
 31693  0003A8  51BE               	movf	(MonitorPressureTask@i+1)& (0+255),w,b
 31694  0003AA  E114               	bnz	i2l21306
 31695  0003AC  0E19               	movlw	25
 31696  0003AE  5DBD               	subwf	MonitorPressureTask@i& (0+255),w,b
 31697  0003B0  B0D8               	btfsc	status,0,c
 31698  0003B2  D010               	goto	i2l21306
 31699  0003B4                     i2l21300:
 31700                           
 31701                           ; BSR set to: 0
 31702  0003B4  90D8               	bcf	status,0,c
 31703  0003B6  35BD               	rlcf	MonitorPressureTask@i& (0+255),w,b
 31704  0003B8  6ED9               	movwf	fsr2l,c
 31705  0003BA  35BE               	rlcf	(MonitorPressureTask@i+1)& (0+255),w,b
 31706  0003BC  6EDA               	movwf	fsr2h,c
 31707  0003BE  0E00               	movlw	low _prFastBuffer
 31708  0003C0  26D9               	addwf	fsr2l,f,c
 31709  0003C2  0E04               	movlw	high _prFastBuffer
 31710  0003C4  22DA               	addwfc	fsr2h,f,c
 31711  0003C6  50DE               	movf	postinc2,w,c
 31712  0003C8  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31713  0003CA  50DD               	movf	postdec2,w,c
 31714  0003CC  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31715                           
 31716                           ; BSR set to: 0
 31717  0003CE  4BBD               	infsnz	MonitorPressureTask@i& (0+255),f,b
 31718  0003D0  2BBE               	incf	(MonitorPressureTask@i+1)& (0+255),f,b
 31719  0003D2  D7E8               	goto	i2l21296
 31720  0003D4                     i2l21306:
 31721                           
 31722                           ; BSR set to: 0
 31723                           ;monitor.c: 382:     prFast = temp/25;
 31724  0003D4  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31725  0003DA  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31726  0003E0  0E00               	movlw	0
 31727  0003E2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31728  0003E4  0E19               	movlw	25
 31729  0003E6  6E03               	movwf	___lwdiv@divisor^0,c
 31730  0003E8  EC44  F04B         	call	___lwdiv	;wreg free
 31731  0003EC  0060  F004  F23E   	movff	?___lwdiv,_prFast
 31732  0003F2  0060  F008  F23F   	movff	?___lwdiv+1,_prFast+1
 31733                           
 31734                           ;monitor.c: 383:     if (count%6==0) {
 31735  0003F8  0060  F910  F001   	movff	_count,i2___awmod@dividend
 31736  0003FE  0060  F914  F002   	movff	_count+1,i2___awmod@dividend+1
 31737  000404  0E00               	movlw	0
 31738  000406  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 31739  000408  0E06               	movlw	6
 31740  00040A  6E03               	movwf	i2___awmod@divisor^0,c
 31741  00040C  EC3B  F047         	call	i2___awmod	;wreg free
 31742  000410  5001               	movf	?i2___awmod^0,w,c
 31743  000412  1002               	iorwf	(?i2___awmod+1)^0,w,c
 31744  000414  A4D8               	btfss	status,2,c
 31745  000416  D04E               	goto	i2l21326
 31746                           
 31747                           ;monitor.c: 384:         prSlowBuffer[count/6]=pr;
 31748  000418  0060  F910  F007   	movff	_count,i2___awdiv@dividend
 31749  00041E  0060  F914  F008   	movff	_count+1,i2___awdiv@dividend+1
 31750  000424  0E00               	movlw	0
 31751  000426  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 31752  000428  0E06               	movlw	6
 31753  00042A  6E09               	movwf	i2___awdiv@divisor^0,c
 31754  00042C  ECC1  F045         	call	i2___awdiv	;wreg free
 31755  000430  90D8               	bcf	status,0,c
 31756  000432  3607               	rlcf	?i2___awdiv^0,f,c
 31757  000434  3608               	rlcf	(?i2___awdiv+1)^0,f,c
 31758  000436  0E32               	movlw	low _prSlowBuffer
 31759  000438  2407               	addwf	?i2___awdiv^0,w,c
 31760  00043A  6ED9               	movwf	fsr2l,c
 31761  00043C  0E04               	movlw	high _prSlowBuffer
 31762  00043E  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 31763  000440  6EDA               	movwf	fsr2h,c
 31764  000442  0060  F30F  FFDE   	movff	MonitorPressureTask@pr,postinc2
 31765  000448  0060  F313  FFDD   	movff	MonitorPressureTask@pr+1,postdec2
 31766                           
 31767                           ;monitor.c: 385:         temp = 0;
 31768  00044E  0E00               	movlw	0
 31769  000450  0100               	movlb	0	; () banked
 31770  000452  6FBC               	movwf	(MonitorPressureTask@temp+1)& (0+255),b
 31771  000454  0E00               	movlw	0
 31772  000456  6FBB               	movwf	MonitorPressureTask@temp& (0+255),b
 31773                           
 31774                           ; BSR set to: 0
 31775                           ;monitor.c: 386:         for (int i=0; i<25; i++) temp +=prSlowBuffer[i];
 31776  000458  0E00               	movlw	0
 31777  00045A  6FC0               	movwf	(MonitorPressureTask@i_4883+1)& (0+255),b
 31778  00045C  0E00               	movlw	0
 31779  00045E  6FBF               	movwf	MonitorPressureTask@i_4883& (0+255),b
 31780  000460                     i2l21314:
 31781                           
 31782                           ; BSR set to: 0
 31783  000460  BFC0               	btfsc	(MonitorPressureTask@i_4883+1)& (0+255),7,b
 31784  000462  D006               	goto	i2l21318
 31785  000464  51C0               	movf	(MonitorPressureTask@i_4883+1)& (0+255),w,b
 31786  000466  E114               	bnz	i2l21324
 31787  000468  0E19               	movlw	25
 31788  00046A  5DBF               	subwf	MonitorPressureTask@i_4883& (0+255),w,b
 31789  00046C  B0D8               	btfsc	status,0,c
 31790  00046E  D010               	goto	i2l21324
 31791  000470                     i2l21318:
 31792                           
 31793                           ; BSR set to: 0
 31794  000470  90D8               	bcf	status,0,c
 31795  000472  35BF               	rlcf	MonitorPressureTask@i_4883& (0+255),w,b
 31796  000474  6ED9               	movwf	fsr2l,c
 31797  000476  35C0               	rlcf	(MonitorPressureTask@i_4883+1)& (0+255),w,b
 31798  000478  6EDA               	movwf	fsr2h,c
 31799  00047A  0E32               	movlw	low _prSlowBuffer
 31800  00047C  26D9               	addwf	fsr2l,f,c
 31801  00047E  0E04               	movlw	high _prSlowBuffer
 31802  000480  22DA               	addwfc	fsr2h,f,c
 31803  000482  50DE               	movf	postinc2,w,c
 31804  000484  27BB               	addwf	MonitorPressureTask@temp& (0+255),f,b
 31805  000486  50DD               	movf	postdec2,w,c
 31806  000488  23BC               	addwfc	(MonitorPressureTask@temp+1)& (0+255),f,b
 31807                           
 31808                           ; BSR set to: 0
 31809  00048A  4BBF               	infsnz	MonitorPressureTask@i_4883& (0+255),f,b
 31810  00048C  2BC0               	incf	(MonitorPressureTask@i_4883+1)& (0+255),f,b
 31811  00048E  D7E8               	goto	i2l21314
 31812  000490                     i2l21324:
 31813                           
 31814                           ; BSR set to: 0
 31815                           ;monitor.c: 387:         prSlow = temp/25;
 31816  000490  0060  F2EC  F001   	movff	MonitorPressureTask@temp,___lwdiv@dividend
 31817  000496  0060  F2F0  F002   	movff	MonitorPressureTask@temp+1,___lwdiv@dividend+1
 31818  00049C  0E00               	movlw	0
 31819  00049E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 31820  0004A0  0E19               	movlw	25
 31821  0004A2  6E03               	movwf	___lwdiv@divisor^0,c
 31822  0004A4  EC44  F04B         	call	___lwdiv	;wreg free
 31823  0004A8  0060  F004  F0CE   	movff	?___lwdiv,_prSlow
 31824  0004AE  0060  F008  F0CF   	movff	?___lwdiv+1,_prSlow+1
 31825  0004B4                     i2l21326:
 31826                           
 31827                           ;monitor.c: 391:     if (enableAlarms) {
 31828  0004B4  0100               	movlb	0	; () banked
 31829  0004B6  51F0               	movf	_enableAlarms& (0+255),w,b
 31830  0004B8  B4D8               	btfsc	status,2,c
 31831  0004BA  D00F               	goto	i2l21334
 31832                           
 31833                           ; BSR set to: 0
 31834                           ;monitor.c: 392:         if (ttAlarm>6*500) {
 31835  0004BC  0102               	movlb	2	; () banked
 31836  0004BE  BF5B               	btfsc	(_ttAlarm+1)& (0+255),7,b
 31837  0004C0  D009               	goto	i2l21332
 31838  0004C2  0EB9               	movlw	185
 31839  0004C4  5D5A               	subwf	_ttAlarm& (0+255),w,b
 31840  0004C6  0E0B               	movlw	11
 31841  0004C8  595B               	subwfb	(_ttAlarm+1)& (0+255),w,b
 31842  0004CA  A0D8               	btfss	status,0,c
 31843  0004CC  D003               	goto	i2l21332
 31844                           
 31845                           ; BSR set to: 2
 31846                           ;monitor.c: 393:             SetCircuitFailureAlarm();
 31847  0004CE  ECCB  F057         	call	_SetCircuitFailureAlarm	;wreg free
 31848                           
 31849                           ;monitor.c: 394:         } else {
 31850  0004D2  D008               	goto	i2l21336
 31851  0004D4                     i2l21332:
 31852                           
 31853                           ; BSR set to: 2
 31854                           ;monitor.c: 395:             ClearCircuitFailureAlarm();
 31855  0004D4  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 31856  0004D8  D005               	goto	i2l21336
 31857  0004DA                     i2l21334:
 31858                           
 31859                           ; BSR set to: 0
 31860                           ;monitor.c: 398:         ttAlarm = 0;
 31861  0004DA  0E00               	movlw	0
 31862  0004DC  0102               	movlb	2	; () banked
 31863  0004DE  6F5B               	movwf	(_ttAlarm+1)& (0+255),b
 31864  0004E0  0E00               	movlw	0
 31865  0004E2  6F5A               	movwf	_ttAlarm& (0+255),b
 31866  0004E4                     i2l21336:
 31867                           
 31868                           ; BSR set to: 2
 31869                           ;monitor.c: 401:     if (ttNoAlarm>15*500) {
 31870  0004E4  BF5D               	btfsc	(_ttNoAlarm+1)& (0+255),7,b
 31871  0004E6  D00E               	goto	i2l21340
 31872  0004E8  0E4D               	movlw	77
 31873  0004EA  5D5C               	subwf	_ttNoAlarm& (0+255),w,b
 31874  0004EC  0E1D               	movlw	29
 31875  0004EE  595D               	subwfb	(_ttNoAlarm+1)& (0+255),w,b
 31876  0004F0  A0D8               	btfss	status,0,c
 31877  0004F2  D008               	goto	i2l21340
 31878                           
 31879                           ; BSR set to: 2
 31880                           ;monitor.c: 402:         enableAlarms = 1;
 31881  0004F4  0E01               	movlw	1
 31882  0004F6  0100               	movlb	0	; () banked
 31883  0004F8  6FF0               	movwf	_enableAlarms& (0+255),b
 31884                           
 31885                           ;monitor.c: 403:         ttNoAlarm=15*500+1;
 31886  0004FA  0E1D               	movlw	29
 31887  0004FC  0102               	movlb	2	; () banked
 31888  0004FE  6F5D               	movwf	(_ttNoAlarm+1)& (0+255),b
 31889  000500  0E4D               	movlw	77
 31890  000502  6F5C               	movwf	_ttNoAlarm& (0+255),b
 31891  000504                     i2l21340:
 31892                           
 31893                           ; BSR set to: 2
 31894                           ;monitor.c: 408:     adcv = GetPressureV_pa();
 31895  000504  EC24  F038         	call	i2_GetPressureV_pa	;wreg free
 31896  000508  0060  F06C  F0AF   	movff	?i2_GetPressureV_pa,MonitorPressureTask@adcv
 31897  00050E  0060  F070  F0B0   	movff	?i2_GetPressureV_pa+1,MonitorPressureTask@adcv+1
 31898                           
 31899                           ;monitor.c: 410:     uint16_t v1 = adcv > 0 ? adcv<<4 : 0;
 31900  000514  0100               	movlb	0	; () banked
 31901  000516  BFB0               	btfsc	(MonitorPressureTask@adcv+1)& (0+255),7,b
 31902  000518  D005               	goto	i2u2066_40
 31903  00051A  51B0               	movf	(MonitorPressureTask@adcv+1)& (0+255),w,b
 31904  00051C  E108               	bnz	i2l21346
 31905  00051E  05AF               	decf	MonitorPressureTask@adcv& (0+255),w,b
 31906  000520  B0D8               	btfsc	status,0,c
 31907  000522  D005               	goto	i2l21346
 31908  000524                     i2u2066_40:
 31909                           
 31910                           ; BSR set to: 0
 31911  000524  0E00               	movlw	0
 31912  000526  6FA2               	movwf	(MonitorPressureTask@v1+1)& (0+255),b
 31913  000528  0E00               	movlw	0
 31914  00052A  6FA1               	movwf	MonitorPressureTask@v1& (0+255),b
 31915  00052C  D015               	goto	i2l21348
 31916  00052E                     i2l21346:
 31917                           
 31918                           ; BSR set to: 0
 31919  00052E  0060  F2BC  F05B   	movff	MonitorPressureTask@adcv,??_MonitorPressureTask
 31920  000534  0060  F2C0  F05C   	movff	MonitorPressureTask@adcv+1,??_MonitorPressureTask+1
 31921  00053A  3A5B               	swapf	??_MonitorPressureTask^0,f,c
 31922  00053C  3A5C               	swapf	(??_MonitorPressureTask+1)^0,f,c
 31923  00053E  0EF0               	movlw	240
 31924  000540  165C               	andwf	(??_MonitorPressureTask+1)^0,f,c
 31925  000542  505B               	movf	??_MonitorPressureTask^0,w,c
 31926  000544  0B0F               	andlw	15
 31927  000546  125C               	iorwf	(??_MonitorPressureTask+1)^0,f,c
 31928  000548  0EF0               	movlw	240
 31929  00054A  165B               	andwf	??_MonitorPressureTask^0,f,c
 31930  00054C  0060  F16C  F0A1   	movff	??_MonitorPressureTask,MonitorPressureTask@v1
 31931  000552  0060  F170  F0A2   	movff	??_MonitorPressureTask+1,MonitorPressureTask@v1+1
 31932  000558                     i2l21348:
 31933                           
 31934                           ; BSR set to: 0
 31935                           ;monitor.c: 411:     uint16_t v2 = isqrt(v1);
 31936  000558  0060  F284  F001   	movff	MonitorPressureTask@v1,isqrt@x
 31937  00055E  0060  F288  F002   	movff	MonitorPressureTask@v1+1,isqrt@x+1
 31938  000564  EC3C  F042         	call	_isqrt	;wreg free
 31939  000568  0060  F004  F0C1   	movff	?_isqrt,MonitorPressureTask@v2
 31940  00056E  0060  F008  F0C2   	movff	?_isqrt+1,MonitorPressureTask@v2+1
 31941                           
 31942                           ; BSR set to: 0
 31943                           ;monitor.c: 412:     volumeAcc += v2 > 20 ? v2 : 0;
 31944  000574  51C2               	movf	(MonitorPressureTask@v2+1)& (0+255),w,b
 31945  000576  E109               	bnz	i2l3110
 31946  000578  0E15               	movlw	21
 31947  00057A  5DC1               	subwf	MonitorPressureTask@v2& (0+255),w,b
 31948  00057C  B0D8               	btfsc	status,0,c
 31949  00057E  D005               	goto	i2l3110
 31950                           
 31951                           ; BSR set to: 0
 31952  000580  0E00               	movlw	0
 31953  000582  6FA4               	movwf	(_MonitorPressureTask$4888+1)& (0+255),b
 31954  000584  0E00               	movlw	0
 31955  000586  6FA3               	movwf	_MonitorPressureTask$4888& (0+255),b
 31956  000588  D006               	goto	i2l21354
 31957  00058A                     i2l3110:
 31958                           
 31959                           ; BSR set to: 0
 31960  00058A  0060  F304  F0A3   	movff	MonitorPressureTask@v2,_MonitorPressureTask$4888
 31961  000590  0060  F308  F0A4   	movff	MonitorPressureTask@v2+1,_MonitorPressureTask$4888+1
 31962  000596                     i2l21354:
 31963                           
 31964                           ; BSR set to: 0
 31965  000596  51A3               	movf	_MonitorPressureTask$4888& (0+255),w,b
 31966  000598  0102               	movlb	2	; () banked
 31967  00059A  2722               	addwf	_volumeAcc& (0+255),f,b
 31968  00059C  0100               	movlb	0	; () banked
 31969  00059E  51A4               	movf	(_MonitorPressureTask$4888+1)& (0+255),w,b
 31970  0005A0  0102               	movlb	2	; () banked
 31971  0005A2  2323               	addwfc	(_volumeAcc+1)& (0+255),f,b
 31972  0005A4  0E00               	movlw	0
 31973  0005A6  2324               	addwfc	(_volumeAcc+2)& (0+255),f,b
 31974  0005A8  0E00               	movlw	0
 31975  0005AA  2325               	addwfc	(_volumeAcc+3)& (0+255),f,b
 31976                           
 31977                           ; BSR set to: 2
 31978                           ;monitor.c: 415:     if (ttExt>6*500) {
 31979  0005AC  BF63               	btfsc	(_ttExt+1)& (0+255),7,b
 31980  0005AE  D093               	goto	i2l21378
 31981  0005B0  0EB9               	movlw	185
 31982  0005B2  5D62               	subwf	_ttExt& (0+255),w,b
 31983  0005B4  0E0B               	movlw	11
 31984  0005B6  5963               	subwfb	(_ttExt+1)& (0+255),w,b
 31985  0005B8  A0D8               	btfss	status,0,c
 31986  0005BA  D08D               	goto	i2l21378
 31987                           
 31988                           ; BSR set to: 2
 31989                           ;monitor.c: 419:         hiLimit = minPressure + 2*(maxPressure-minPressure)/5;
 31990  0005BC  0100               	movlb	0	; () banked
 31991  0005BE  51D4               	movf	_minPressure& (0+255),w,b
 31992  0005C0  0102               	movlb	2	; () banked
 31993  0005C2  5D50               	subwf	_maxPressure& (0+255),w,b
 31994  0005C4  6E5B               	movwf	??_MonitorPressureTask^0,c
 31995  0005C6  0100               	movlb	0	; () banked
 31996  0005C8  51D5               	movf	(_minPressure+1)& (0+255),w,b
 31997  0005CA  0102               	movlb	2	; () banked
 31998  0005CC  5951               	subwfb	(_maxPressure+1)& (0+255),w,b
 31999  0005CE  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32000  0005D0  90D8               	bcf	status,0,c
 32001  0005D2  345B               	rlcf	??_MonitorPressureTask^0,w,c
 32002  0005D4  6E07               	movwf	i2___awdiv@dividend^0,c
 32003  0005D6  345C               	rlcf	(??_MonitorPressureTask+1)^0,w,c
 32004  0005D8  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32005  0005DA  0E00               	movlw	0
 32006  0005DC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32007  0005DE  0E05               	movlw	5
 32008  0005E0  6E09               	movwf	i2___awdiv@divisor^0,c
 32009  0005E2  ECC1  F045         	call	i2___awdiv	;wreg free
 32010  0005E6  0100               	movlb	0	; () banked
 32011  0005E8  51D4               	movf	_minPressure& (0+255),w,b
 32012  0005EA  2407               	addwf	?i2___awdiv^0,w,c
 32013  0005EC  0101               	movlb	1	; () banked
 32014  0005EE  6FCF               	movwf	_hiLimit& (0+255),b
 32015  0005F0  0100               	movlb	0	; () banked
 32016  0005F2  51D5               	movf	(_minPressure+1)& (0+255),w,b
 32017  0005F4  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 32018  0005F6  0101               	movlb	1	; () banked
 32019  0005F8  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 32020                           
 32021                           ;monitor.c: 420:         loLimit = minPressure + (maxPressure-minPressure)/3;
 32022  0005FA  0100               	movlb	0	; () banked
 32023  0005FC  51D4               	movf	_minPressure& (0+255),w,b
 32024  0005FE  0102               	movlb	2	; () banked
 32025  000600  5D50               	subwf	_maxPressure& (0+255),w,b
 32026  000602  6E07               	movwf	i2___awdiv@dividend^0,c
 32027  000604  0100               	movlb	0	; () banked
 32028  000606  51D5               	movf	(_minPressure+1)& (0+255),w,b
 32029  000608  0102               	movlb	2	; () banked
 32030  00060A  5951               	subwfb	(_maxPressure+1)& (0+255),w,b
 32031  00060C  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32032  00060E  0E00               	movlw	0
 32033  000610  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32034  000612  0E03               	movlw	3
 32035  000614  6E09               	movwf	i2___awdiv@divisor^0,c
 32036  000616  ECC1  F045         	call	i2___awdiv	;wreg free
 32037  00061A  0100               	movlb	0	; () banked
 32038  00061C  51D4               	movf	_minPressure& (0+255),w,b
 32039  00061E  2407               	addwf	?i2___awdiv^0,w,c
 32040  000620  0101               	movlb	1	; () banked
 32041  000622  6FCD               	movwf	_loLimit& (0+255),b
 32042  000624  0100               	movlb	0	; () banked
 32043  000626  51D5               	movf	(_minPressure+1)& (0+255),w,b
 32044  000628  2008               	addwfc	(?i2___awdiv+1)^0,w,c
 32045  00062A  0101               	movlb	1	; () banked
 32046  00062C  6FCE               	movwf	(_loLimit+1)& (0+255),b
 32047                           
 32048                           ; BSR set to: 1
 32049                           ;monitor.c: 423:         if (loLimit<(targetLow+5*5)) {
 32050  00062E  0E19               	movlw	25
 32051  000630  25E7               	addwf	_targetLow& (0+255),w,b
 32052  000632  6E5B               	movwf	??_MonitorPressureTask^0,c
 32053  000634  0E00               	movlw	0
 32054  000636  21E8               	addwfc	(_targetLow+1)& (0+255),w,b
 32055  000638  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32056  00063A  505B               	movf	??_MonitorPressureTask^0,w,c
 32057  00063C  5DCD               	subwf	_loLimit& (0+255),w,b
 32058  00063E  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32059  000640  0A80               	xorlw	128
 32060  000642  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32061  000644  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32062  000646  0A80               	xorlw	128
 32063  000648  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32064  00064A  B0D8               	btfsc	status,0,c
 32065  00064C  D006               	goto	i2l3114
 32066                           
 32067                           ; BSR set to: 1
 32068                           ;monitor.c: 425:             loLimit = targetLow+5*5;
 32069  00064E  0E19               	movlw	25
 32070  000650  25E7               	addwf	_targetLow& (0+255),w,b
 32071  000652  6FCD               	movwf	_loLimit& (0+255),b
 32072  000654  0E00               	movlw	0
 32073  000656  21E8               	addwfc	(_targetLow+1)& (0+255),w,b
 32074  000658  6FCE               	movwf	(_loLimit+1)& (0+255),b
 32075  00065A                     i2l3114:
 32076                           
 32077                           ; BSR set to: 1
 32078                           ;monitor.c: 428:         if (hiLimit<loLimit) hiLimit = loLimit;
 32079  00065A  51CD               	movf	_loLimit& (0+255),w,b
 32080  00065C  5DCF               	subwf	_hiLimit& (0+255),w,b
 32081  00065E  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32082  000660  0A80               	xorlw	128
 32083  000662  6E5B               	movwf	??_MonitorPressureTask^0,c
 32084  000664  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32085  000666  0A80               	xorlw	128
 32086  000668  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32087  00066A  B0D8               	btfsc	status,0,c
 32088  00066C  D004               	goto	i2l3115
 32089                           
 32090                           ; BSR set to: 1
 32091  00066E  C1CD  F1CF         	movff	_loLimit,_hiLimit
 32092  000672  C1CE  F1D0         	movff	_loLimit+1,_hiLimit+1
 32093  000676                     i2l3115:
 32094                           
 32095                           ; BSR set to: 1
 32096                           ;monitor.c: 431:         pe = pLow;
 32097  000676  C1D5  F1D9         	movff	_pLow,_pe
 32098  00067A  C1D6  F1DA         	movff	_pLow+1,_pe+1
 32099                           
 32100                           ;monitor.c: 432:         pi = pHigh;
 32101  00067E  C1D7  F1DB         	movff	_pHigh,_pi
 32102  000682  C1D8  F1DC         	movff	_pHigh+1,_pi+1
 32103                           
 32104                           ;monitor.c: 433:         pmax = maxPressure;
 32105  000686  C250  F0D6         	movff	_maxPressure,_pmax
 32106  00068A  C251  F0D7         	movff	_maxPressure+1,_pmax+1
 32107                           
 32108                           ;monitor.c: 434:         pmin = minPressure;
 32109  00068E  C0D4  F252         	movff	_minPressure,_pmin
 32110  000692  C0D5  F253         	movff	_minPressure+1,_pmin+1
 32111                           
 32112                           ; BSR set to: 1
 32113                           ;monitor.c: 436:         if (pmax< targetLow && enableAlarms) SetGasFailureAlarm();
 32114  000696  51E7               	movf	_targetLow& (0+255),w,b
 32115  000698  0100               	movlb	0	; () banked
 32116  00069A  5DD6               	subwf	_pmax& (0+255),w,b
 32117  00069C  51D7               	movf	(_pmax+1)& (0+255),w,b
 32118  00069E  0A80               	xorlw	128
 32119  0006A0  6E5B               	movwf	??_MonitorPressureTask^0,c
 32120  0006A2  0101               	movlb	1	; () banked
 32121  0006A4  51E8               	movf	(_targetLow+1)& (0+255),w,b
 32122  0006A6  0A80               	xorlw	128
 32123  0006A8  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32124  0006AA  B0D8               	btfsc	status,0,c
 32125  0006AC  D005               	goto	i2l21372
 32126                           
 32127                           ; BSR set to: 1
 32128  0006AE  0100               	movlb	0	; () banked
 32129  0006B0  51F0               	movf	_enableAlarms& (0+255),w,b
 32130  0006B2  A4D8               	btfss	status,2,c
 32131                           
 32132                           ; BSR set to: 0
 32133  0006B4  EC57  F057         	call	_SetGasFailureAlarm	;wreg free
 32134  0006B8                     i2l21372:
 32135                           
 32136                           ;monitor.c: 442:         maxPressure = 0;
 32137  0006B8  0E00               	movlw	0
 32138  0006BA  0102               	movlb	2	; () banked
 32139  0006BC  6F51               	movwf	(_maxPressure+1)& (0+255),b
 32140  0006BE  0E00               	movlw	0
 32141  0006C0  6F50               	movwf	_maxPressure& (0+255),b
 32142                           
 32143                           ; BSR set to: 2
 32144                           ;monitor.c: 443:         minPressure = 40*5;
 32145  0006C2  0E00               	movlw	0
 32146  0006C4  0100               	movlb	0	; () banked
 32147  0006C6  6FD5               	movwf	(_minPressure+1)& (0+255),b
 32148  0006C8  0EC8               	movlw	200
 32149  0006CA  6FD4               	movwf	_minPressure& (0+255),b
 32150                           
 32151                           ; BSR set to: 0
 32152                           ;monitor.c: 444:         ttExt=0;
 32153  0006CC  0E00               	movlw	0
 32154  0006CE  0102               	movlb	2	; () banked
 32155  0006D0  6F63               	movwf	(_ttExt+1)& (0+255),b
 32156  0006D2  0E00               	movlw	0
 32157  0006D4  6F62               	movwf	_ttExt& (0+255),b
 32158  0006D6                     i2l21378:
 32159                           
 32160                           ; BSR set to: 2
 32161                           ;monitor.c: 447:     count ++;
 32162  0006D6  4B44               	infsnz	_count& (0+255),f,b
 32163  0006D8  2B45               	incf	(_count+1)& (0+255),f,b
 32164                           
 32165                           ; BSR set to: 2
 32166                           ;monitor.c: 448:     if (count>=6*25) count =0;
 32167  0006DA  BF45               	btfsc	(_count+1)& (0+255),7,b
 32168  0006DC  D00A               	goto	i2l21384
 32169  0006DE  5145               	movf	(_count+1)& (0+255),w,b
 32170  0006E0  E104               	bnz	i2u2073_40
 32171  0006E2  0E96               	movlw	150
 32172  0006E4  5D44               	subwf	_count& (0+255),w,b
 32173  0006E6  A0D8               	btfss	status,0,c
 32174  0006E8  D004               	goto	i2l21384
 32175  0006EA                     i2u2073_40:
 32176                           
 32177                           ; BSR set to: 2
 32178  0006EA  0E00               	movlw	0
 32179  0006EC  6F45               	movwf	(_count+1)& (0+255),b
 32180  0006EE  0E00               	movlw	0
 32181  0006F0  6F44               	movwf	_count& (0+255),b
 32182  0006F2                     i2l21384:
 32183                           
 32184                           ; BSR set to: 2
 32185                           ;monitor.c: 450:     if (tt>30000) {
 32186  0006F2  0100               	movlb	0	; () banked
 32187  0006F4  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 32188  0006F6  D00F               	goto	i2l21392
 32189  0006F8  51CB               	movf	(_tt+3)& (0+255),w,b
 32190  0006FA  11CA               	iorwf	(_tt+2)& (0+255),w,b
 32191  0006FC  E106               	bnz	i2u2074_40
 32192  0006FE  0E31               	movlw	49
 32193  000700  5DC8               	subwf	_tt& (0+255),w,b
 32194  000702  0E75               	movlw	117
 32195  000704  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32196  000706  A0D8               	btfss	status,0,c
 32197  000708  D006               	goto	i2l21392
 32198  00070A                     i2u2074_40:
 32199                           
 32200                           ; BSR set to: 0
 32201                           ;monitor.c: 452:         ClearVars() ;
 32202  00070A  EC6E  F023         	call	i2_ClearVars	;wreg free
 32203                           
 32204                           ; BSR set to: 2
 32205                           ;monitor.c: 453:         measPe = 0;
 32206  00070E  0E00               	movlw	0
 32207  000710  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32208                           
 32209                           ; BSR set to: 2
 32210                           ;monitor.c: 454:         measPi = 0;
 32211  000712  0E00               	movlw	0
 32212  000714  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32213  000716                     i2l21392:
 32214                           
 32215                           ;monitor.c: 458:     if (prFast>alarmMaxPressure) {
 32216  000716  0102               	movlb	2	; () banked
 32217  000718  513E               	movf	_prFast& (0+255),w,b
 32218  00071A  5D4E               	subwf	_alarmMaxPressure& (0+255),w,b
 32219  00071C  514F               	movf	(_alarmMaxPressure+1)& (0+255),w,b
 32220  00071E  0A80               	xorlw	128
 32221  000720  6E5B               	movwf	??_MonitorPressureTask^0,c
 32222  000722  513F               	movf	(_prFast+1)& (0+255),w,b
 32223  000724  0A80               	xorlw	128
 32224  000726  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32225  000728  B0D8               	btfsc	status,0,c
 32226  00072A  D004               	goto	i2l21396
 32227                           
 32228                           ; BSR set to: 2
 32229                           ;monitor.c: 459:         alarmMaxPressure = prFast;
 32230  00072C  C23E  F24E         	movff	_prFast,_alarmMaxPressure
 32231  000730  C23F  F24F         	movff	_prFast+1,_alarmMaxPressure+1
 32232  000734                     i2l21396:
 32233                           
 32234                           ; BSR set to: 2
 32235                           ;monitor.c: 464:     if (pr>maxPressure) {
 32236  000734  0100               	movlb	0	; () banked
 32237  000736  51C3               	movf	MonitorPressureTask@pr& (0+255),w,b
 32238  000738  0102               	movlb	2	; () banked
 32239  00073A  5D50               	subwf	_maxPressure& (0+255),w,b
 32240  00073C  5151               	movf	(_maxPressure+1)& (0+255),w,b
 32241  00073E  0A80               	xorlw	128
 32242  000740  6E5B               	movwf	??_MonitorPressureTask^0,c
 32243  000742  0100               	movlb	0	; () banked
 32244  000744  51C4               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 32245  000746  0A80               	xorlw	128
 32246  000748  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32247  00074A  B0D8               	btfsc	status,0,c
 32248  00074C  D006               	goto	i2l21400
 32249                           
 32250                           ; BSR set to: 0
 32251                           ;monitor.c: 465:         maxPressure = pr;
 32252  00074E  0060  F30C  F250   	movff	MonitorPressureTask@pr,_maxPressure
 32253  000754  0060  F310  F251   	movff	MonitorPressureTask@pr+1,_maxPressure+1
 32254  00075A                     i2l21400:
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;monitor.c: 468:     if (pr<minPressure) {
 32258  00075A  51D4               	movf	_minPressure& (0+255),w,b
 32259  00075C  5DC3               	subwf	MonitorPressureTask@pr& (0+255),w,b
 32260  00075E  51C4               	movf	(MonitorPressureTask@pr+1)& (0+255),w,b
 32261  000760  0A80               	xorlw	128
 32262  000762  6E5B               	movwf	??_MonitorPressureTask^0,c
 32263  000764  51D5               	movf	(_minPressure+1)& (0+255),w,b
 32264  000766  0A80               	xorlw	128
 32265  000768  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32266  00076A  B0D8               	btfsc	status,0,c
 32267  00076C  D006               	goto	i2l21404
 32268                           
 32269                           ; BSR set to: 0
 32270                           ;monitor.c: 469:         minPressure = pr;
 32271  00076E  0060  F30C  F0D4   	movff	MonitorPressureTask@pr,_minPressure
 32272  000774  0060  F310  F0D5   	movff	MonitorPressureTask@pr+1,_minPressure+1
 32273  00077A                     i2l21404:
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;monitor.c: 474:     if (prSlow>hiLimit) {
 32277  00077A  51CE               	movf	_prSlow& (0+255),w,b
 32278  00077C  0101               	movlb	1	; () banked
 32279  00077E  5DCF               	subwf	_hiLimit& (0+255),w,b
 32280  000780  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32281  000782  0A80               	xorlw	128
 32282  000784  6E5B               	movwf	??_MonitorPressureTask^0,c
 32283  000786  0100               	movlb	0	; () banked
 32284  000788  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32285  00078A  0A80               	xorlw	128
 32286  00078C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32287  00078E  B0D8               	btfsc	status,0,c
 32288  000790  D016               	goto	i2l21410
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;monitor.c: 477:         pHighAcc += prSlow;
 32292  000792  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32293  000798  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32294  00079E  0E00               	movlw	0
 32295  0007A0  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32296  0007A2  0EFF               	movlw	255
 32297  0007A4  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32298  0007A6  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32299  0007A8  505B               	movf	??_MonitorPressureTask^0,w,c
 32300  0007AA  0102               	movlb	2	; () banked
 32301  0007AC  271E               	addwf	_pHighAcc& (0+255),f,b
 32302  0007AE  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32303  0007B0  231F               	addwfc	(_pHighAcc+1)& (0+255),f,b
 32304  0007B2  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32305  0007B4  2320               	addwfc	(_pHighAcc+2)& (0+255),f,b
 32306  0007B6  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32307  0007B8  2321               	addwfc	(_pHighAcc+3)& (0+255),f,b
 32308                           
 32309                           ; BSR set to: 2
 32310                           ;monitor.c: 478:         numHigh++;
 32311  0007BA  4B4C               	infsnz	_numHigh& (0+255),f,b
 32312  0007BC  2B4D               	incf	(_numHigh+1)& (0+255),f,b
 32313  0007BE                     i2l21410:
 32314                           
 32315                           ;monitor.c: 480:     if (prSlow<loLimit) {
 32316  0007BE  0101               	movlb	1	; () banked
 32317  0007C0  51CD               	movf	_loLimit& (0+255),w,b
 32318  0007C2  0100               	movlb	0	; () banked
 32319  0007C4  5DCE               	subwf	_prSlow& (0+255),w,b
 32320  0007C6  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32321  0007C8  0A80               	xorlw	128
 32322  0007CA  6E5B               	movwf	??_MonitorPressureTask^0,c
 32323  0007CC  0101               	movlb	1	; () banked
 32324  0007CE  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32325  0007D0  0A80               	xorlw	128
 32326  0007D2  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32327  0007D4  B0D8               	btfsc	status,0,c
 32328  0007D6  D016               	goto	i2l21416
 32329                           
 32330                           ; BSR set to: 1
 32331                           ;monitor.c: 483:         pLowAcc += prSlow;
 32332  0007D8  0060  F338  F05B   	movff	_prSlow,??_MonitorPressureTask
 32333  0007DE  0060  F33C  F05C   	movff	_prSlow+1,??_MonitorPressureTask+1
 32334  0007E4  0E00               	movlw	0
 32335  0007E6  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32336  0007E8  0EFF               	movlw	255
 32337  0007EA  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32338  0007EC  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32339  0007EE  505B               	movf	??_MonitorPressureTask^0,w,c
 32340  0007F0  0102               	movlb	2	; () banked
 32341  0007F2  271A               	addwf	_pLowAcc& (0+255),f,b
 32342  0007F4  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32343  0007F6  231B               	addwfc	(_pLowAcc+1)& (0+255),f,b
 32344  0007F8  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32345  0007FA  231C               	addwfc	(_pLowAcc+2)& (0+255),f,b
 32346  0007FC  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32347  0007FE  231D               	addwfc	(_pLowAcc+3)& (0+255),f,b
 32348                           
 32349                           ; BSR set to: 2
 32350                           ;monitor.c: 484:         numLow++;
 32351  000800  4B4A               	infsnz	_numLow& (0+255),f,b
 32352  000802  2B4B               	incf	(_numLow+1)& (0+255),f,b
 32353  000804                     i2l21416:
 32354                           
 32355                           ;monitor.c: 488:     int16_t halfLimit;;monitor.c: 489:     halfLimit = (hiLimit+loLimit
      +                          )/2;
 32356  000804  0101               	movlb	1	; () banked
 32357  000806  51CD               	movf	_loLimit& (0+255),w,b
 32358  000808  25CF               	addwf	_hiLimit& (0+255),w,b
 32359  00080A  6E07               	movwf	i2___awdiv@dividend^0,c
 32360  00080C  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32361  00080E  21D0               	addwfc	(_hiLimit+1)& (0+255),w,b
 32362  000810  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32363  000812  0E00               	movlw	0
 32364  000814  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32365  000816  0E02               	movlw	2
 32366  000818  6E09               	movwf	i2___awdiv@divisor^0,c
 32367  00081A  ECC1  F045         	call	i2___awdiv	;wreg free
 32368  00081E  0060  F01C  F09F   	movff	?i2___awdiv,MonitorPressureTask@halfLimit
 32369  000824  0060  F020  F0A0   	movff	?i2___awdiv+1,MonitorPressureTask@halfLimit+1
 32370                           
 32371                           ;monitor.c: 492:     if ( state == 0) {
 32372  00082A  0101               	movlb	1	; () banked
 32373  00082C  51E5               	movf	_state& (0+255),w,b
 32374  00082E  11E6               	iorwf	(_state+1)& (0+255),w,b
 32375  000830  A4D8               	btfss	status,2,c
 32376  000832  D02D               	goto	i2l21428
 32377                           
 32378                           ; BSR set to: 1
 32379                           ;monitor.c: 493:         if (pi> (targetHigh+targetLow)/2) {
 32380  000834  51E7               	movf	_targetLow& (0+255),w,b
 32381  000836  25E9               	addwf	_targetHigh& (0+255),w,b
 32382  000838  6E07               	movwf	i2___awdiv@dividend^0,c
 32383  00083A  51E8               	movf	(_targetLow+1)& (0+255),w,b
 32384  00083C  21EA               	addwfc	(_targetHigh+1)& (0+255),w,b
 32385  00083E  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 32386  000840  0E00               	movlw	0
 32387  000842  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32388  000844  0E02               	movlw	2
 32389  000846  6E09               	movwf	i2___awdiv@divisor^0,c
 32390  000848  ECC1  F045         	call	i2___awdiv	;wreg free
 32391  00084C  0101               	movlb	1	; () banked
 32392  00084E  51DB               	movf	_pi& (0+255),w,b
 32393  000850  5C07               	subwf	?i2___awdiv^0,w,c
 32394  000852  5008               	movf	(?i2___awdiv+1)^0,w,c
 32395  000854  0A80               	xorlw	128
 32396  000856  6E5B               	movwf	??_MonitorPressureTask^0,c
 32397  000858  51DC               	movf	(_pi+1)& (0+255),w,b
 32398  00085A  0A80               	xorlw	128
 32399  00085C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32400  00085E  B0D8               	btfsc	status,0,c
 32401  000860  D016               	goto	i2l21428
 32402                           
 32403                           ; BSR set to: 1
 32404                           ;monitor.c: 494:             if (prSlow < targetLow) next = 2; else next = 4;
 32405  000862  51E7               	movf	_targetLow& (0+255),w,b
 32406  000864  0100               	movlb	0	; () banked
 32407  000866  5DCE               	subwf	_prSlow& (0+255),w,b
 32408  000868  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32409  00086A  0A80               	xorlw	128
 32410  00086C  6E5B               	movwf	??_MonitorPressureTask^0,c
 32411  00086E  0101               	movlb	1	; () banked
 32412  000870  51E8               	movf	(_targetLow+1)& (0+255),w,b
 32413  000872  0A80               	xorlw	128
 32414  000874  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32415  000876  B0D8               	btfsc	status,0,c
 32416  000878  D005               	goto	i2l21426
 32417                           
 32418                           ; BSR set to: 1
 32419  00087A  0E00               	movlw	0
 32420  00087C  0100               	movlb	0	; () banked
 32421  00087E  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32422  000880  0E02               	movlw	2
 32423  000882  D004               	goto	L15
 32424  000884                     i2l21426:
 32425                           
 32426                           ; BSR set to: 1
 32427  000884  0E00               	movlw	0
 32428  000886  0100               	movlb	0	; () banked
 32429  000888  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 32430  00088A  0E04               	movlw	4
 32431  00088C                     L15:
 32432  00088C  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 32433  00088E                     i2l21428:
 32434                           
 32435                           ;monitor.c: 501:     if (prSlow<loLimit && prFast>= loLimit) {
 32436  00088E  0101               	movlb	1	; () banked
 32437  000890  51CD               	movf	_loLimit& (0+255),w,b
 32438  000892  0100               	movlb	0	; () banked
 32439  000894  5DCE               	subwf	_prSlow& (0+255),w,b
 32440  000896  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32441  000898  0A80               	xorlw	128
 32442  00089A  6E5B               	movwf	??_MonitorPressureTask^0,c
 32443  00089C  0101               	movlb	1	; () banked
 32444  00089E  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32445  0008A0  0A80               	xorlw	128
 32446  0008A2  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32447  0008A4  B0D8               	btfsc	status,0,c
 32448  0008A6  D174               	goto	i2l21508
 32449                           
 32450                           ; BSR set to: 1
 32451  0008A8  51CD               	movf	_loLimit& (0+255),w,b
 32452  0008AA  0102               	movlb	2	; () banked
 32453  0008AC  5D3E               	subwf	_prFast& (0+255),w,b
 32454  0008AE  513F               	movf	(_prFast+1)& (0+255),w,b
 32455  0008B0  0A80               	xorlw	128
 32456  0008B2  6E5B               	movwf	??_MonitorPressureTask^0,c
 32457  0008B4  0101               	movlb	1	; () banked
 32458  0008B6  51CE               	movf	(_loLimit+1)& (0+255),w,b
 32459  0008B8  0A80               	xorlw	128
 32460  0008BA  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32461  0008BC  A0D8               	btfss	status,0,c
 32462  0008BE  D168               	goto	i2l21508
 32463                           
 32464                           ; BSR set to: 1
 32465                           ;monitor.c: 504:         if (tt>400) {
 32466  0008C0  0100               	movlb	0	; () banked
 32467  0008C2  BFCB               	btfsc	(_tt+3)& (0+255),7,b
 32468  0008C4  D11B               	goto	i2l21484
 32469  0008C6  51CB               	movf	(_tt+3)& (0+255),w,b
 32470  0008C8  11CA               	iorwf	(_tt+2)& (0+255),w,b
 32471  0008CA  E106               	bnz	i2u2085_40
 32472  0008CC  0E91               	movlw	145
 32473  0008CE  5DC8               	subwf	_tt& (0+255),w,b
 32474  0008D0  0E01               	movlw	1
 32475  0008D2  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32476  0008D4  A0D8               	btfss	status,0,c
 32477  0008D6  D112               	goto	i2l21484
 32478  0008D8                     i2u2085_40:
 32479                           
 32480                           ; BSR set to: 0
 32481                           ;monitor.c: 505:             bp = tt;
 32482  0008D8  C0C8  F2BA         	movff	_tt,_bp
 32483  0008DC  C0C9  F2BB         	movff	_tt+1,_bp+1
 32484                           
 32485                           ; BSR set to: 0
 32486                           ;monitor.c: 506:             if (tt3>tt2) ti = tt3-tt2;
 32487  0008E0  0101               	movlb	1	; () banked
 32488  0008E2  51E1               	movf	_tt3& (0+255),w,b
 32489  0008E4  0100               	movlb	0	; () banked
 32490  0008E6  5DDA               	subwf	_tt2& (0+255),w,b
 32491  0008E8  51DB               	movf	(_tt2+1)& (0+255),w,b
 32492  0008EA  0A80               	xorlw	128
 32493  0008EC  6E5B               	movwf	??_MonitorPressureTask^0,c
 32494  0008EE  0101               	movlb	1	; () banked
 32495  0008F0  51E2               	movf	(_tt3+1)& (0+255),w,b
 32496  0008F2  0A80               	xorlw	128
 32497  0008F4  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32498  0008F6  B0D8               	btfsc	status,0,c
 32499  0008F8  D00C               	goto	i2l3130
 32500                           
 32501                           ; BSR set to: 1
 32502  0008FA  0100               	movlb	0	; () banked
 32503  0008FC  51DA               	movf	_tt2& (0+255),w,b
 32504  0008FE  0101               	movlb	1	; () banked
 32505  000900  5DE1               	subwf	_tt3& (0+255),w,b
 32506  000902  0102               	movlb	2	; () banked
 32507  000904  6F58               	movwf	_ti& (0+255),b
 32508  000906  0100               	movlb	0	; () banked
 32509  000908  51DB               	movf	(_tt2+1)& (0+255),w,b
 32510  00090A  0101               	movlb	1	; () banked
 32511  00090C  59E2               	subwfb	(_tt3+1)& (0+255),w,b
 32512  00090E  0102               	movlb	2	; () banked
 32513  000910  6F59               	movwf	(_ti+1)& (0+255),b
 32514  000912                     i2l3130:
 32515                           
 32516                           ;monitor.c: 508:             if (tt>tt4) te = tt-tt4;
 32517  000912  0E00               	movlw	0
 32518  000914  0100               	movlb	0	; () banked
 32519  000916  BFD9               	btfsc	(_tt4+1)& (0+255),7,b
 32520  000918  0EFF               	movlw	255
 32521  00091A  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32522  00091C  0A80               	xorlw	128
 32523  00091E  6E5B               	movwf	??_MonitorPressureTask^0,c
 32524  000920  51C8               	movf	_tt& (0+255),w,b
 32525  000922  5DD8               	subwf	_tt4& (0+255),w,b
 32526  000924  51C9               	movf	(_tt+1)& (0+255),w,b
 32527  000926  59D9               	subwfb	(_tt4+1)& (0+255),w,b
 32528  000928  51CA               	movf	(_tt+2)& (0+255),w,b
 32529  00092A  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 32530  00092C  51CB               	movf	(_tt+3)& (0+255),w,b
 32531  00092E  0A80               	xorlw	128
 32532  000930  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32533  000932  B0D8               	btfsc	status,0,c
 32534  000934  D009               	goto	i2l3131
 32535                           
 32536                           ; BSR set to: 0
 32537  000936  51D8               	movf	_tt4& (0+255),w,b
 32538  000938  5DC8               	subwf	_tt& (0+255),w,b
 32539  00093A  0102               	movlb	2	; () banked
 32540  00093C  6F56               	movwf	_te& (0+255),b
 32541  00093E  0100               	movlb	0	; () banked
 32542  000940  51D9               	movf	(_tt4+1)& (0+255),w,b
 32543  000942  59C9               	subwfb	(_tt+1)& (0+255),w,b
 32544  000944  0102               	movlb	2	; () banked
 32545  000946  6F57               	movwf	(_te+1)& (0+255),b
 32546  000948                     i2l3131:
 32547                           
 32548                           ;monitor.c: 510:             if (bp!=0) bpm = 60000/(bp*2);
 32549  000948  0102               	movlb	2	; () banked
 32550  00094A  51BA               	movf	_bp& (0+255),w,b
 32551  00094C  11BB               	iorwf	(_bp+1)& (0+255),w,b
 32552  00094E  B4D8               	btfsc	status,2,c
 32553  000950  D024               	goto	i2l21444
 32554                           
 32555                           ; BSR set to: 2
 32556  000952  0E60               	movlw	96
 32557  000954  6E0D               	movwf	i2___aldiv@dividend^0,c
 32558  000956  0EEA               	movlw	234
 32559  000958  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 32560  00095A  0E00               	movlw	0
 32561  00095C  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 32562  00095E  0E00               	movlw	0
 32563  000960  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 32564  000962  0060  FAE8  F05B   	movff	_bp,??_MonitorPressureTask
 32565  000968  0060  FAEC  F05C   	movff	_bp+1,??_MonitorPressureTask+1
 32566  00096E  90D8               	bcf	status,0,c
 32567  000970  365B               	rlcf	??_MonitorPressureTask^0,f,c
 32568  000972  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 32569  000974  0060  F16C  F011   	movff	??_MonitorPressureTask,i2___aldiv@divisor
 32570  00097A  0060  F170  F012   	movff	??_MonitorPressureTask+1,i2___aldiv@divisor+1
 32571  000980  0E00               	movlw	0
 32572  000982  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32573  000984  0EFF               	movlw	-1
 32574  000986  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32575  000988  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32576  00098A  EC8A  F03D         	call	i2___aldiv	;wreg free
 32577  00098E  0060  F034  F254   	movff	?i2___aldiv,_bpm
 32578  000994  0060  F038  F255   	movff	?i2___aldiv+1,_bpm+1
 32579  00099A                     i2l21444:
 32580                           
 32581                           ;monitor.c: 511:             if (numHigh>0) {
 32582  00099A  0102               	movlb	2	; () banked
 32583  00099C  BF4D               	btfsc	(_numHigh+1)& (0+255),7,b
 32584  00099E  D031               	goto	i2l21452
 32585  0009A0  514D               	movf	(_numHigh+1)& (0+255),w,b
 32586  0009A2  E103               	bnz	i2u2089_40
 32587  0009A4  054C               	decf	_numHigh& (0+255),w,b
 32588  0009A6  A0D8               	btfss	status,0,c
 32589  0009A8  D02C               	goto	i2l21452
 32590  0009AA                     i2u2089_40:
 32591                           
 32592                           ; BSR set to: 2
 32593                           ;monitor.c: 512:                 pHigh = pHighAcc / numHigh;
 32594  0009AA  0060  F878  F00D   	movff	_pHighAcc,i2___aldiv@dividend
 32595  0009B0  0060  F87C  F00E   	movff	_pHighAcc+1,i2___aldiv@dividend+1
 32596  0009B6  0060  F880  F00F   	movff	_pHighAcc+2,i2___aldiv@dividend+2
 32597  0009BC  0060  F884  F010   	movff	_pHighAcc+3,i2___aldiv@dividend+3
 32598  0009C2  0060  F930  F011   	movff	_numHigh,i2___aldiv@divisor
 32599  0009C8  0060  F934  F012   	movff	_numHigh+1,i2___aldiv@divisor+1
 32600  0009CE  0E00               	movlw	0
 32601  0009D0  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32602  0009D2  0EFF               	movlw	-1
 32603  0009D4  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32604  0009D6  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32605  0009D8  EC8A  F03D         	call	i2___aldiv	;wreg free
 32606  0009DC  0060  F034  F1D7   	movff	?i2___aldiv,_pHigh
 32607  0009E2  0060  F038  F1D8   	movff	?i2___aldiv+1,_pHigh+1
 32608                           
 32609                           ;monitor.c: 513:                 pHighAcc = 0;
 32610  0009E8  0E00               	movlw	0
 32611  0009EA  0102               	movlb	2	; () banked
 32612  0009EC  6F1E               	movwf	_pHighAcc& (0+255),b
 32613  0009EE  0E00               	movlw	0
 32614  0009F0  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 32615  0009F2  0E00               	movlw	0
 32616  0009F4  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 32617  0009F6  0E00               	movlw	0
 32618  0009F8  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 32619                           
 32620                           ; BSR set to: 2
 32621                           ;monitor.c: 514:                 numHigh = 0;
 32622  0009FA  0E00               	movlw	0
 32623  0009FC  6F4D               	movwf	(_numHigh+1)& (0+255),b
 32624  0009FE  0E00               	movlw	0
 32625  000A00  6F4C               	movwf	_numHigh& (0+255),b
 32626  000A02                     i2l21452:
 32627                           
 32628                           ; BSR set to: 2
 32629                           ;monitor.c: 516:             if (numLow>0) {
 32630  000A02  BF4B               	btfsc	(_numLow+1)& (0+255),7,b
 32631  000A04  D031               	goto	i2l21460
 32632  000A06  514B               	movf	(_numLow+1)& (0+255),w,b
 32633  000A08  E103               	bnz	i2u2090_40
 32634  000A0A  054A               	decf	_numLow& (0+255),w,b
 32635  000A0C  A0D8               	btfss	status,0,c
 32636  000A0E  D02C               	goto	i2l21460
 32637  000A10                     i2u2090_40:
 32638                           
 32639                           ; BSR set to: 2
 32640                           ;monitor.c: 517:                 pLow = pLowAcc / numLow;
 32641  000A10  0060  F868  F00D   	movff	_pLowAcc,i2___aldiv@dividend
 32642  000A16  0060  F86C  F00E   	movff	_pLowAcc+1,i2___aldiv@dividend+1
 32643  000A1C  0060  F870  F00F   	movff	_pLowAcc+2,i2___aldiv@dividend+2
 32644  000A22  0060  F874  F010   	movff	_pLowAcc+3,i2___aldiv@dividend+3
 32645  000A28  0060  F928  F011   	movff	_numLow,i2___aldiv@divisor
 32646  000A2E  0060  F92C  F012   	movff	_numLow+1,i2___aldiv@divisor+1
 32647  000A34  0E00               	movlw	0
 32648  000A36  BE12               	btfsc	(i2___aldiv@divisor+1)^0,7,c
 32649  000A38  0EFF               	movlw	-1
 32650  000A3A  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 32651  000A3C  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 32652  000A3E  EC8A  F03D         	call	i2___aldiv	;wreg free
 32653  000A42  0060  F034  F1D5   	movff	?i2___aldiv,_pLow
 32654  000A48  0060  F038  F1D6   	movff	?i2___aldiv+1,_pLow+1
 32655                           
 32656                           ;monitor.c: 518:                 numLow = 0;
 32657  000A4E  0E00               	movlw	0
 32658  000A50  0102               	movlb	2	; () banked
 32659  000A52  6F4B               	movwf	(_numLow+1)& (0+255),b
 32660  000A54  0E00               	movlw	0
 32661  000A56  6F4A               	movwf	_numLow& (0+255),b
 32662                           
 32663                           ; BSR set to: 2
 32664                           ;monitor.c: 519:                 pLowAcc = 0;
 32665  000A58  0E00               	movlw	0
 32666  000A5A  6F1A               	movwf	_pLowAcc& (0+255),b
 32667  000A5C  0E00               	movlw	0
 32668  000A5E  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 32669  000A60  0E00               	movlw	0
 32670  000A62  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 32671  000A64  0E00               	movlw	0
 32672  000A66  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 32673  000A68                     i2l21460:
 32674                           
 32675                           ; BSR set to: 2
 32676                           ;monitor.c: 522:             tt1 = tt;
 32677  000A68  C0C8  F0DC         	movff	_tt,_tt1
 32678  000A6C  C0C9  F0DD         	movff	_tt+1,_tt1+1
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;monitor.c: 524:             MonitorDump();
 32682  000A70  EC3E  F01A         	call	i2_MonitorDump	;wreg free
 32683                           
 32684                           ; BSR set to: 2
 32685                           ;monitor.c: 535:             tt=0;
 32686  000A74  0E00               	movlw	0
 32687  000A76  0100               	movlb	0	; () banked
 32688  000A78  6FC8               	movwf	_tt& (0+255),b
 32689  000A7A  0E00               	movlw	0
 32690  000A7C  6FC9               	movwf	(_tt+1)& (0+255),b
 32691  000A7E  0E00               	movlw	0
 32692  000A80  6FCA               	movwf	(_tt+2)& (0+255),b
 32693  000A82  0E00               	movlw	0
 32694  000A84  6FCB               	movwf	(_tt+3)& (0+255),b
 32695                           
 32696                           ; BSR set to: 0
 32697                           ;monitor.c: 537:             tt2=0;
 32698  000A86  0E00               	movlw	0
 32699  000A88  6FDB               	movwf	(_tt2+1)& (0+255),b
 32700  000A8A  0E00               	movlw	0
 32701  000A8C  6FDA               	movwf	_tt2& (0+255),b
 32702                           
 32703                           ; BSR set to: 0
 32704                           ;monitor.c: 538:             tt3=0;
 32705  000A8E  0E00               	movlw	0
 32706  000A90  0101               	movlb	1	; () banked
 32707  000A92  6FE2               	movwf	(_tt3+1)& (0+255),b
 32708  000A94  0E00               	movlw	0
 32709  000A96  6FE1               	movwf	_tt3& (0+255),b
 32710                           
 32711                           ; BSR set to: 1
 32712                           ;monitor.c: 539:             tt4=0;
 32713  000A98  0E00               	movlw	0
 32714  000A9A  0100               	movlb	0	; () banked
 32715  000A9C  6FD9               	movwf	(_tt4+1)& (0+255),b
 32716  000A9E  0E00               	movlw	0
 32717  000AA0  6FD8               	movwf	_tt4& (0+255),b
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;monitor.c: 540:             tt34=0;
 32721  000AA2  0E00               	movlw	0
 32722  000AA4  0102               	movlb	2	; () banked
 32723  000AA6  6F5F               	movwf	(_tt34+1)& (0+255),b
 32724  000AA8  0E00               	movlw	0
 32725  000AAA  6F5E               	movwf	_tt34& (0+255),b
 32726                           
 32727                           ; BSR set to: 2
 32728                           ;monitor.c: 541:             if (tt1<=500) volumeAcc = v2 > 20 ? v2 : 0;;
 32729  000AAC  0100               	movlb	0	; () banked
 32730  000AAE  BFDD               	btfsc	(_tt1+1)& (0+255),7,b
 32731  000AB0  D006               	goto	i2u2091_40
 32732  000AB2  0EF5               	movlw	245
 32733  000AB4  5DDC               	subwf	_tt1& (0+255),w,b
 32734  000AB6  0E01               	movlw	1
 32735  000AB8  59DD               	subwfb	(_tt1+1)& (0+255),w,b
 32736  000ABA  B0D8               	btfsc	status,0,c
 32737  000ABC  D01A               	goto	i2l21482
 32738  000ABE                     i2u2091_40:
 32739                           
 32740                           ; BSR set to: 0
 32741  000ABE  51C2               	movf	(MonitorPressureTask@v2+1)& (0+255),w,b
 32742  000AC0  E109               	bnz	i2l3137
 32743  000AC2  0E15               	movlw	21
 32744  000AC4  5DC1               	subwf	MonitorPressureTask@v2& (0+255),w,b
 32745  000AC6  B0D8               	btfsc	status,0,c
 32746  000AC8  D005               	goto	i2l3137
 32747                           
 32748                           ; BSR set to: 0
 32749  000ACA  0E00               	movlw	0
 32750  000ACC  6FA6               	movwf	(_MonitorPressureTask$4891+1)& (0+255),b
 32751  000ACE  0E00               	movlw	0
 32752  000AD0  6FA5               	movwf	_MonitorPressureTask$4891& (0+255),b
 32753  000AD2  D006               	goto	i2l21480
 32754  000AD4                     i2l3137:
 32755                           
 32756                           ; BSR set to: 0
 32757  000AD4  0060  F304  F0A5   	movff	MonitorPressureTask@v2,_MonitorPressureTask$4891
 32758  000ADA  0060  F308  F0A6   	movff	MonitorPressureTask@v2+1,_MonitorPressureTask$4891+1
 32759  000AE0                     i2l21480:
 32760                           
 32761                           ; BSR set to: 0
 32762  000AE0  0060  F294  F222   	movff	_MonitorPressureTask$4891,_volumeAcc
 32763  000AE6  0060  F298  F223   	movff	_MonitorPressureTask$4891+1,_volumeAcc+1
 32764  000AEC  0102               	movlb	2	; () banked
 32765  000AEE  6B24               	clrf	(_volumeAcc+2)& (0+255),b
 32766  000AF0  6B25               	clrf	(_volumeAcc+3)& (0+255),b
 32767  000AF2                     i2l21482:
 32768                           
 32769                           ;monitor.c: 542:             ttAlarm = 0;
 32770  000AF2  0E00               	movlw	0
 32771  000AF4  0102               	movlb	2	; () banked
 32772  000AF6  6F5B               	movwf	(_ttAlarm+1)& (0+255),b
 32773  000AF8  0E00               	movlw	0
 32774  000AFA  6F5A               	movwf	_ttAlarm& (0+255),b
 32775  000AFC                     i2l21484:
 32776                           
 32777                           ;monitor.c: 544:         tt12 = tt;
 32778  000AFC  C0C8  F260         	movff	_tt,_tt12
 32779  000B00  C0C9  F261         	movff	_tt+1,_tt12+1
 32780                           
 32781                           ;monitor.c: 546:         measPe=0;
 32782  000B04  0E00               	movlw	0
 32783  000B06  0102               	movlb	2	; () banked
 32784  000B08  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32785                           
 32786                           ; BSR set to: 2
 32787                           ;monitor.c: 547:         measPi=0;
 32788  000B0A  0E00               	movlw	0
 32789  000B0C  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32790                           
 32791                           ; BSR set to: 2
 32792                           ;monitor.c: 548:         lrpe = rpe;
 32793  000B0E  C246  F1D1         	movff	_rpe,_lrpe
 32794  000B12  C247  F1D2         	movff	_rpe+1,_lrpe+1
 32795                           
 32796                           ; BSR set to: 2
 32797                           ;monitor.c: 550:         if (enableAlarms) {
 32798  000B16  0100               	movlb	0	; () banked
 32799  000B18  51F0               	movf	_enableAlarms& (0+255),w,b
 32800  000B1A  B4D8               	btfsc	status,2,c
 32801  000B1C  D035               	goto	i2l21506
 32802                           
 32803                           ; BSR set to: 0
 32804                           ;monitor.c: 551:             if (lrpe>(targetLow+15)) SetEPAboveSetAlarm(); else ClearEP
      +                          AboveSetAlarm();
 32805  000B1E  0E0F               	movlw	15
 32806  000B20  0101               	movlb	1	; () banked
 32807  000B22  25E7               	addwf	_targetLow& (0+255),w,b
 32808  000B24  6E5B               	movwf	??_MonitorPressureTask^0,c
 32809  000B26  0E00               	movlw	0
 32810  000B28  21E8               	addwfc	(_targetLow+1)& (0+255),w,b
 32811  000B2A  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32812  000B2C  51D1               	movf	_lrpe& (0+255),w,b
 32813  000B2E  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 32814  000B30  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32815  000B32  0A80               	xorlw	128
 32816  000B34  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32817  000B36  51D2               	movf	(_lrpe+1)& (0+255),w,b
 32818  000B38  0A80               	xorlw	128
 32819  000B3A  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 32820  000B3C  B0D8               	btfsc	status,0,c
 32821  000B3E  D003               	goto	i2l21498
 32822                           
 32823                           ; BSR set to: 1
 32824  000B40  ECED  F053         	call	_SetEPAboveSetAlarm	;wreg free
 32825  000B44  D002               	goto	i2l21500
 32826  000B46                     i2l21498:
 32827                           
 32828                           ; BSR set to: 1
 32829  000B46  EC0A  F055         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32830  000B4A                     i2l21500:
 32831                           
 32832                           ; BSR set to: 0
 32833                           ;monitor.c: 552:             if (lrpe<(targetLow-15)) SetEPBelowSetAlarm(); else ClearEP
      +                          BelowSetAlarm();
 32834  000B4A  0EF1               	movlw	241
 32835  000B4C  6E5B               	movwf	??_MonitorPressureTask^0,c
 32836  000B4E  0EFF               	movlw	255
 32837  000B50  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 32838  000B52  0060  F79C  F05D   	movff	_targetLow,??_MonitorPressureTask+2
 32839  000B58  0060  F7A0  F05E   	movff	_targetLow+1,??_MonitorPressureTask+3
 32840  000B5E  505B               	movf	??_MonitorPressureTask^0,w,c
 32841  000B60  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 32842  000B62  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 32843  000B64  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 32844  000B66  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 32845  000B68  0101               	movlb	1	; () banked
 32846  000B6A  5DD1               	subwf	_lrpe& (0+255),w,b
 32847  000B6C  51D2               	movf	(_lrpe+1)& (0+255),w,b
 32848  000B6E  0A80               	xorlw	128
 32849  000B70  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 32850  000B72  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 32851  000B74  0A80               	xorlw	128
 32852  000B76  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 32853  000B78  B0D8               	btfsc	status,0,c
 32854  000B7A  D003               	goto	i2l21504
 32855                           
 32856                           ; BSR set to: 1
 32857  000B7C  ECDD  F053         	call	_SetEPBelowSetAlarm	;wreg free
 32858  000B80  D007               	goto	i2l21508
 32859  000B82                     i2l21504:
 32860                           
 32861                           ; BSR set to: 1
 32862  000B82  ECFF  F054         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32863  000B86  D004               	goto	i2l21508
 32864  000B88                     i2l21506:
 32865                           
 32866                           ; BSR set to: 0
 32867                           ;monitor.c: 554:             ClearEPAboveSetAlarm();
 32868  000B88  EC0A  F055         	call	i2_ClearEPAboveSetAlarm	;wreg free
 32869                           
 32870                           ;monitor.c: 555:             ClearEPBelowSetAlarm();
 32871  000B8C  ECFF  F054         	call	i2_ClearEPBelowSetAlarm	;wreg free
 32872  000B90                     i2l21508:
 32873                           
 32874                           ;monitor.c: 561:     if (tt1>500 && tt==(tt1*9)/10) volumeAcc=0;
 32875  000B90  0100               	movlb	0	; () banked
 32876  000B92  BFDD               	btfsc	(_tt1+1)& (0+255),7,b
 32877  000B94  D040               	goto	i2l21514
 32878  000B96  0EF5               	movlw	245
 32879  000B98  5DDC               	subwf	_tt1& (0+255),w,b
 32880  000B9A  0E01               	movlw	1
 32881  000B9C  59DD               	subwfb	(_tt1+1)& (0+255),w,b
 32882  000B9E  A0D8               	btfss	status,0,c
 32883  000BA0  D03A               	goto	i2l21514
 32884                           
 32885                           ; BSR set to: 0
 32886  000BA2  0060  F370  F001   	movff	_tt1,i2___wmul@multiplier
 32887  000BA8  0060  F374  F002   	movff	_tt1+1,i2___wmul@multiplier+1
 32888  000BAE  0E00               	movlw	0
 32889  000BB0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 32890  000BB2  0E09               	movlw	9
 32891  000BB4  6E03               	movwf	i2___wmul@multiplicand^0,c
 32892  000BB6  ECBA  F051         	call	i2___wmul	;wreg free
 32893  000BBA  0060  F004  F007   	movff	?i2___wmul,i2___awdiv@dividend
 32894  000BC0  0060  F008  F008   	movff	?i2___wmul+1,i2___awdiv@dividend+1
 32895  000BC6  0E00               	movlw	0
 32896  000BC8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 32897  000BCA  0E0A               	movlw	10
 32898  000BCC  6E09               	movwf	i2___awdiv@divisor^0,c
 32899  000BCE  ECC1  F045         	call	i2___awdiv	;wreg free
 32900  000BD2  0060  F01C  F05B   	movff	?i2___awdiv,??_MonitorPressureTask
 32901  000BD8  0060  F020  F05C   	movff	?i2___awdiv+1,??_MonitorPressureTask+1
 32902  000BDE  0E00               	movlw	0
 32903  000BE0  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 32904  000BE2  0EFF               	movlw	255
 32905  000BE4  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 32906  000BE6  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 32907  000BE8  0100               	movlb	0	; () banked
 32908  000BEA  51C8               	movf	_tt& (0+255),w,b
 32909  000BEC  185B               	xorwf	??_MonitorPressureTask^0,w,c
 32910  000BEE  E113               	bnz	i2l21514
 32911  000BF0  51C9               	movf	(_tt+1)& (0+255),w,b
 32912  000BF2  185C               	xorwf	(??_MonitorPressureTask+1)^0,w,c
 32913  000BF4  E110               	bnz	i2l21514
 32914  000BF6  51CA               	movf	(_tt+2)& (0+255),w,b
 32915  000BF8  185D               	xorwf	(??_MonitorPressureTask+2)^0,w,c
 32916  000BFA  E10D               	bnz	i2l21514
 32917  000BFC  51CB               	movf	(_tt+3)& (0+255),w,b
 32918  000BFE  185E               	xorwf	(??_MonitorPressureTask+3)^0,w,c
 32919  000C00  A4D8               	btfss	status,2,c
 32920  000C02  D009               	goto	i2l21514
 32921                           
 32922                           ; BSR set to: 0
 32923  000C04  0E00               	movlw	0
 32924  000C06  0102               	movlb	2	; () banked
 32925  000C08  6F22               	movwf	_volumeAcc& (0+255),b
 32926  000C0A  0E00               	movlw	0
 32927  000C0C  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 32928  000C0E  0E00               	movlw	0
 32929  000C10  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 32930  000C12  0E00               	movlw	0
 32931  000C14  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 32932  000C16                     i2l21514:
 32933                           
 32934                           ;monitor.c: 564:     static _Bool down = 0;;monitor.c: 567:     if (prSlow>hiLimit && pr
      +                          Fast<= hiLimit) {
 32935  000C16  0100               	movlb	0	; () banked
 32936  000C18  51CE               	movf	_prSlow& (0+255),w,b
 32937  000C1A  0101               	movlb	1	; () banked
 32938  000C1C  5DCF               	subwf	_hiLimit& (0+255),w,b
 32939  000C1E  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32940  000C20  0A80               	xorlw	128
 32941  000C22  6E5B               	movwf	??_MonitorPressureTask^0,c
 32942  000C24  0100               	movlb	0	; () banked
 32943  000C26  51CF               	movf	(_prSlow+1)& (0+255),w,b
 32944  000C28  0A80               	xorlw	128
 32945  000C2A  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32946  000C2C  B0D8               	btfsc	status,0,c
 32947  000C2E  D0D9               	goto	i2l21556
 32948                           
 32949                           ; BSR set to: 0
 32950  000C30  0102               	movlb	2	; () banked
 32951  000C32  513E               	movf	_prFast& (0+255),w,b
 32952  000C34  0101               	movlb	1	; () banked
 32953  000C36  5DCF               	subwf	_hiLimit& (0+255),w,b
 32954  000C38  51D0               	movf	(_hiLimit+1)& (0+255),w,b
 32955  000C3A  0A80               	xorlw	128
 32956  000C3C  6E5B               	movwf	??_MonitorPressureTask^0,c
 32957  000C3E  0102               	movlb	2	; () banked
 32958  000C40  513F               	movf	(_prFast+1)& (0+255),w,b
 32959  000C42  0A80               	xorlw	128
 32960  000C44  585B               	subwfb	??_MonitorPressureTask^0,w,c
 32961  000C46  A0D8               	btfss	status,0,c
 32962  000C48  D0CC               	goto	i2l21556
 32963                           
 32964                           ; BSR set to: 2
 32965                           ;monitor.c: 569:         if (!down) {
 32966  000C4A  519C               	movf	MonitorPressureTask@down& (0+255),w,b
 32967  000C4C  A4D8               	btfss	status,2,c
 32968  000C4E  D006               	goto	i2l21524
 32969                           
 32970                           ; BSR set to: 2
 32971                           ;monitor.c: 571:             tt3 = tt;
 32972  000C50  C0C8  F1E1         	movff	_tt,_tt3
 32973  000C54  C0C9  F1E2         	movff	_tt+1,_tt3+1
 32974                           
 32975                           ; BSR set to: 2
 32976                           ;monitor.c: 572:             down = 1;
 32977  000C58  0E01               	movlw	1
 32978  000C5A  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 32979  000C5C                     i2l21524:
 32980                           
 32981                           ; BSR set to: 2
 32982                           ;monitor.c: 576:         tt34 = tt;
 32983  000C5C  C0C8  F25E         	movff	_tt,_tt34
 32984  000C60  C0C9  F25F         	movff	_tt+1,_tt34+1
 32985                           
 32986                           ;monitor.c: 578:         measPe=0;
 32987  000C64  0E00               	movlw	0
 32988  000C66  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 32989                           
 32990                           ;monitor.c: 579:         measPi=0;
 32991  000C68  0E00               	movlw	0
 32992  000C6A  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 32993                           
 32994                           ; BSR set to: 2
 32995                           ;monitor.c: 580:         lrpi = rpi;
 32996  000C6C  C248  F1D3         	movff	_rpi,_lrpi
 32997  000C70  C249  F1D4         	movff	_rpi+1,_lrpi+1
 32998                           
 32999                           ;monitor.c: 582:         if (enableAlarms && !volumeControl) {
 33000  000C74  0100               	movlb	0	; () banked
 33001  000C76  51F0               	movf	_enableAlarms& (0+255),w,b
 33002  000C78  B4D8               	btfsc	status,2,c
 33003  000C7A  D0AE               	goto	i2l21554
 33004                           
 33005                           ; BSR set to: 0
 33006  000C7C  0102               	movlb	2	; () banked
 33007  000C7E  51A1               	movf	_volumeControl& (0+255),w,b
 33008  000C80  A4D8               	btfss	status,2,c
 33009  000C82  D0AA               	goto	i2l21554
 33010                           
 33011                           ; BSR set to: 2
 33012                           ;monitor.c: 585:             if (pHigh>(targetHigh+20) && lrpi>(targetHigh+20) ) SetIPAb
      +                          oveSetAlarm();
 33013  000C84  0E14               	movlw	20
 33014  000C86  0101               	movlb	1	; () banked
 33015  000C88  25E9               	addwf	_targetHigh& (0+255),w,b
 33016  000C8A  6E5B               	movwf	??_MonitorPressureTask^0,c
 33017  000C8C  0E00               	movlw	0
 33018  000C8E  21EA               	addwfc	(_targetHigh+1)& (0+255),w,b
 33019  000C90  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33020  000C92  51D7               	movf	_pHigh& (0+255),w,b
 33021  000C94  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33022  000C96  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33023  000C98  0A80               	xorlw	128
 33024  000C9A  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33025  000C9C  51D8               	movf	(_pHigh+1)& (0+255),w,b
 33026  000C9E  0A80               	xorlw	128
 33027  000CA0  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33028  000CA2  B0D8               	btfsc	status,0,c
 33029  000CA4  D011               	goto	i2l21536
 33030                           
 33031                           ; BSR set to: 1
 33032  000CA6  0E14               	movlw	20
 33033  000CA8  25E9               	addwf	_targetHigh& (0+255),w,b
 33034  000CAA  6E5B               	movwf	??_MonitorPressureTask^0,c
 33035  000CAC  0E00               	movlw	0
 33036  000CAE  21EA               	addwfc	(_targetHigh+1)& (0+255),w,b
 33037  000CB0  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33038  000CB2  51D3               	movf	_lrpi& (0+255),w,b
 33039  000CB4  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33040  000CB6  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33041  000CB8  0A80               	xorlw	128
 33042  000CBA  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33043  000CBC  51D4               	movf	(_lrpi+1)& (0+255),w,b
 33044  000CBE  0A80               	xorlw	128
 33045  000CC0  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33046  000CC2  A0D8               	btfss	status,0,c
 33047                           
 33048                           ; BSR set to: 1
 33049  000CC4  ECCD  F053         	call	_SetIPAboveSetAlarm	;wreg free
 33050  000CC8                     i2l21536:
 33051                           
 33052                           ;monitor.c: 586:             if (pHigh<(targetHigh+20) || lrpi<(targetHigh+20) ) ClearIP
      +                          AboveSetAlarm();
 33053  000CC8  0E14               	movlw	20
 33054  000CCA  0101               	movlb	1	; () banked
 33055  000CCC  25E9               	addwf	_targetHigh& (0+255),w,b
 33056  000CCE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33057  000CD0  0E00               	movlw	0
 33058  000CD2  21EA               	addwfc	(_targetHigh+1)& (0+255),w,b
 33059  000CD4  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33060  000CD6  505B               	movf	??_MonitorPressureTask^0,w,c
 33061  000CD8  5DD7               	subwf	_pHigh& (0+255),w,b
 33062  000CDA  51D8               	movf	(_pHigh+1)& (0+255),w,b
 33063  000CDC  0A80               	xorlw	128
 33064  000CDE  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33065  000CE0  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33066  000CE2  0A80               	xorlw	128
 33067  000CE4  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33068  000CE6  A0D8               	btfss	status,0,c
 33069  000CE8  D00F               	goto	i2u2106_40
 33070                           
 33071                           ; BSR set to: 1
 33072  000CEA  0E14               	movlw	20
 33073  000CEC  25E9               	addwf	_targetHigh& (0+255),w,b
 33074  000CEE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33075  000CF0  0E00               	movlw	0
 33076  000CF2  21EA               	addwfc	(_targetHigh+1)& (0+255),w,b
 33077  000CF4  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33078  000CF6  505B               	movf	??_MonitorPressureTask^0,w,c
 33079  000CF8  5DD3               	subwf	_lrpi& (0+255),w,b
 33080  000CFA  51D4               	movf	(_lrpi+1)& (0+255),w,b
 33081  000CFC  0A80               	xorlw	128
 33082  000CFE  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33083  000D00  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33084  000D02  0A80               	xorlw	128
 33085  000D04  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33086  000D06  A0D8               	btfss	status,0,c
 33087  000D08                     i2u2106_40:
 33088                           
 33089                           ; BSR set to: 1
 33090  000D08  ECF4  F054         	call	i2_ClearIPAboveSetAlarm	;wreg free
 33091                           
 33092                           ;monitor.c: 587:             if (pHigh<(targetHigh-20) && lrpi<(targetHigh-20) ) SetIPBe
      +                          lowSetAlarm();
 33093  000D0C  0EEC               	movlw	236
 33094  000D0E  6E5B               	movwf	??_MonitorPressureTask^0,c
 33095  000D10  0EFF               	movlw	255
 33096  000D12  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33097  000D14  0060  F7A4  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 33098  000D1A  0060  F7A8  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 33099  000D20  505B               	movf	??_MonitorPressureTask^0,w,c
 33100  000D22  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 33101  000D24  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33102  000D26  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 33103  000D28  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 33104  000D2A  0101               	movlb	1	; () banked
 33105  000D2C  5DD7               	subwf	_pHigh& (0+255),w,b
 33106  000D2E  51D8               	movf	(_pHigh+1)& (0+255),w,b
 33107  000D30  0A80               	xorlw	128
 33108  000D32  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 33109  000D34  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 33110  000D36  0A80               	xorlw	128
 33111  000D38  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 33112  000D3A  B0D8               	btfsc	status,0,c
 33113  000D3C  D019               	goto	i2l21548
 33114                           
 33115                           ; BSR set to: 1
 33116  000D3E  0EEC               	movlw	236
 33117  000D40  6E5B               	movwf	??_MonitorPressureTask^0,c
 33118  000D42  0EFF               	movlw	255
 33119  000D44  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33120  000D46  0060  F7A4  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 33121  000D4C  0060  F7A8  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 33122  000D52  505B               	movf	??_MonitorPressureTask^0,w,c
 33123  000D54  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 33124  000D56  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33125  000D58  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 33126  000D5A  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 33127  000D5C  5DD3               	subwf	_lrpi& (0+255),w,b
 33128  000D5E  51D4               	movf	(_lrpi+1)& (0+255),w,b
 33129  000D60  0A80               	xorlw	128
 33130  000D62  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 33131  000D64  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 33132  000D66  0A80               	xorlw	128
 33133  000D68  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 33134  000D6A  A0D8               	btfss	status,0,c
 33135                           
 33136                           ; BSR set to: 1
 33137  000D6C  ECBD  F053         	call	_SetIPBelowSetAlarm	;wreg free
 33138  000D70                     i2l21548:
 33139                           
 33140                           ;monitor.c: 588:             if (pHigh>(targetHigh-20) || lrpi>(targetHigh-20) ) ClearIP
      +                          BelowSetAlarm();
 33141  000D70  0EEC               	movlw	236
 33142  000D72  6E5B               	movwf	??_MonitorPressureTask^0,c
 33143  000D74  0EFF               	movlw	255
 33144  000D76  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33145  000D78  0060  F7A4  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 33146  000D7E  0060  F7A8  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 33147  000D84  505B               	movf	??_MonitorPressureTask^0,w,c
 33148  000D86  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 33149  000D88  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33150  000D8A  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 33151  000D8C  0101               	movlb	1	; () banked
 33152  000D8E  51D7               	movf	_pHigh& (0+255),w,b
 33153  000D90  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 33154  000D92  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 33155  000D94  0A80               	xorlw	128
 33156  000D96  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 33157  000D98  51D8               	movf	(_pHigh+1)& (0+255),w,b
 33158  000D9A  0A80               	xorlw	128
 33159  000D9C  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 33160  000D9E  A0D8               	btfss	status,0,c
 33161  000DA0  D018               	goto	i2u2110_40
 33162                           
 33163                           ; BSR set to: 1
 33164  000DA2  0EEC               	movlw	236
 33165  000DA4  6E5B               	movwf	??_MonitorPressureTask^0,c
 33166  000DA6  0EFF               	movlw	255
 33167  000DA8  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33168  000DAA  0060  F7A4  F05D   	movff	_targetHigh,??_MonitorPressureTask+2
 33169  000DB0  0060  F7A8  F05E   	movff	_targetHigh+1,??_MonitorPressureTask+3
 33170  000DB6  505B               	movf	??_MonitorPressureTask^0,w,c
 33171  000DB8  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 33172  000DBA  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33173  000DBC  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 33174  000DBE  51D3               	movf	_lrpi& (0+255),w,b
 33175  000DC0  5C5D               	subwf	(??_MonitorPressureTask+2)^0,w,c
 33176  000DC2  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 33177  000DC4  0A80               	xorlw	128
 33178  000DC6  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 33179  000DC8  51D4               	movf	(_lrpi+1)& (0+255),w,b
 33180  000DCA  0A80               	xorlw	128
 33181  000DCC  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 33182  000DCE  B0D8               	btfsc	status,0,c
 33183  000DD0  D024               	goto	i2l21560
 33184  000DD2                     i2u2110_40:
 33185                           
 33186                           ; BSR set to: 1
 33187  000DD2  ECE9  F054         	call	i2_ClearIPBelowSetAlarm	;wreg free
 33188  000DD6  D021               	goto	i2l21560
 33189  000DD8                     i2l21554:
 33190                           
 33191                           ;monitor.c: 591:             ClearIPAboveSetAlarm();
 33192  000DD8  ECF4  F054         	call	i2_ClearIPAboveSetAlarm	;wreg free
 33193                           
 33194                           ;monitor.c: 592:             ClearIPBelowSetAlarm();
 33195  000DDC  ECE9  F054         	call	i2_ClearIPBelowSetAlarm	;wreg free
 33196  000DE0  D01C               	goto	i2l21560
 33197  000DE2                     i2l21556:
 33198  000DE2  0EC8               	movlw	200
 33199  000DE4  0101               	movlb	1	; () banked
 33200  000DE6  25E1               	addwf	_tt3& (0+255),w,b
 33201  000DE8  6E5B               	movwf	??_MonitorPressureTask^0,c
 33202  000DEA  0E00               	movlw	0
 33203  000DEC  21E2               	addwfc	(_tt3+1)& (0+255),w,b
 33204  000DEE  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33205  000DF0  0E00               	movlw	0
 33206  000DF2  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33207  000DF4  0EFF               	movlw	255
 33208  000DF6  6E5E               	movwf	(??_MonitorPressureTask+3)^0,c
 33209  000DF8  0A80               	xorlw	128
 33210  000DFA  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33211  000DFC  0100               	movlb	0	; () banked
 33212  000DFE  51C8               	movf	_tt& (0+255),w,b
 33213  000E00  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33214  000E02  51C9               	movf	(_tt+1)& (0+255),w,b
 33215  000E04  585C               	subwfb	(??_MonitorPressureTask+1)^0,w,c
 33216  000E06  51CA               	movf	(_tt+2)& (0+255),w,b
 33217  000E08  585E               	subwfb	(??_MonitorPressureTask+3)^0,w,c
 33218  000E0A  51CB               	movf	(_tt+3)& (0+255),w,b
 33219  000E0C  0A80               	xorlw	128
 33220  000E0E  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33221  000E10  B0D8               	btfsc	status,0,c
 33222  000E12  D003               	goto	i2l21560
 33223                           
 33224                           ; BSR set to: 0
 33225  000E14  0E00               	movlw	0
 33226  000E16  0102               	movlb	2	; () banked
 33227  000E18  6F9C               	movwf	MonitorPressureTask@down& (0+255),b
 33228  000E1A                     i2l21560:
 33229                           
 33230                           ;monitor.c: 597:     if (prSlow>=(pi-3*5) && state == 2) {
 33231  000E1A  0EF1               	movlw	241
 33232  000E1C  6E5B               	movwf	??_MonitorPressureTask^0,c
 33233  000E1E  0EFF               	movlw	255
 33234  000E20  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33235  000E22  0060  F76C  F05D   	movff	_pi,??_MonitorPressureTask+2
 33236  000E28  0060  F770  F05E   	movff	_pi+1,??_MonitorPressureTask+3
 33237  000E2E  505B               	movf	??_MonitorPressureTask^0,w,c
 33238  000E30  265D               	addwf	(??_MonitorPressureTask+2)^0,f,c
 33239  000E32  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33240  000E34  225E               	addwfc	(??_MonitorPressureTask+3)^0,f,c
 33241  000E36  505D               	movf	(??_MonitorPressureTask+2)^0,w,c
 33242  000E38  0100               	movlb	0	; () banked
 33243  000E3A  5DCE               	subwf	_prSlow& (0+255),w,b
 33244  000E3C  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33245  000E3E  0A80               	xorlw	128
 33246  000E40  6E5F               	movwf	(??_MonitorPressureTask+4)^0,c
 33247  000E42  505E               	movf	(??_MonitorPressureTask+3)^0,w,c
 33248  000E44  0A80               	xorlw	128
 33249  000E46  585F               	subwfb	(??_MonitorPressureTask+4)^0,w,c
 33250  000E48  A0D8               	btfss	status,0,c
 33251  000E4A  D0BE               	goto	i2l21604
 33252                           
 33253                           ; BSR set to: 0
 33254  000E4C  0E02               	movlw	2
 33255  000E4E  0101               	movlb	1	; () banked
 33256  000E50  19E5               	xorwf	_state& (0+255),w,b
 33257  000E52  11E6               	iorwf	(_state+1)& (0+255),w,b
 33258  000E54  A4D8               	btfss	status,2,c
 33259  000E56  D0B8               	goto	i2l21604
 33260                           
 33261                           ; BSR set to: 1
 33262                           ;monitor.c: 599:         next = 4;
 33263  000E58  0E00               	movlw	0
 33264  000E5A  0100               	movlb	0	; () banked
 33265  000E5C  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 33266  000E5E  0E04               	movlw	4
 33267  000E60  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;monitor.c: 600:         tt2 = tt;
 33271  000E62  C0C8  F0DA         	movff	_tt,_tt2
 33272  000E66  C0C9  F0DB         	movff	_tt+1,_tt2+1
 33273                           
 33274                           ; BSR set to: 0
 33275                           ;monitor.c: 602:         if (tt2>0) {
 33276  000E6A  BFDB               	btfsc	(_tt2+1)& (0+255),7,b
 33277  000E6C  D0AD               	goto	i2l21604
 33278  000E6E  51DB               	movf	(_tt2+1)& (0+255),w,b
 33279  000E70  E103               	bnz	i2u2114_40
 33280  000E72  05DA               	decf	_tt2& (0+255),w,b
 33281  000E74  A0D8               	btfss	status,0,c
 33282  000E76  D0A8               	goto	i2l21604
 33283  000E78                     i2u2114_40:
 33284                           
 33285                           ; BSR set to: 0
 33286                           ;monitor.c: 603:             tdiBuffer[numtdi%10] = ((tt2-0));
 33287  000E78  0060  F348  F001   	movff	_numtdi,i2___awmod@dividend
 33288  000E7E  0060  F34C  F002   	movff	_numtdi+1,i2___awmod@dividend+1
 33289  000E84  0E00               	movlw	0
 33290  000E86  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33291  000E88  0E0A               	movlw	10
 33292  000E8A  6E03               	movwf	i2___awmod@divisor^0,c
 33293  000E8C  EC3B  F047         	call	i2___awmod	;wreg free
 33294  000E90  90D8               	bcf	status,0,c
 33295  000E92  3601               	rlcf	?i2___awmod^0,f,c
 33296  000E94  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33297  000E96  0E61               	movlw	low _tdiBuffer
 33298  000E98  2401               	addwf	?i2___awmod^0,w,c
 33299  000E9A  6ED9               	movwf	fsr2l,c
 33300  000E9C  0E03               	movlw	high _tdiBuffer
 33301  000E9E  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33302  000EA0  6EDA               	movwf	fsr2h,c
 33303  000EA2  0060  F36B  FFDE   	movff	_tt2,postinc2
 33304  000EA8  0060  F36F  FFDD   	movff	_tt2+1,postdec2
 33305                           
 33306                           ;monitor.c: 604:             tdi = 0;
 33307  000EAE  0E00               	movlw	0
 33308  000EB0  0101               	movlb	1	; () banked
 33309  000EB2  6FE0               	movwf	(_tdi+1)& (0+255),b
 33310  000EB4  0E00               	movlw	0
 33311  000EB6  6FDF               	movwf	_tdi& (0+255),b
 33312                           
 33313                           ; BSR set to: 1
 33314                           ;monitor.c: 605:             for (int i=0; i<((10)>(numtdi+1)?(numtdi+1):(10)); i++) tdi
      +                           = tdi + tdiBuffer[i];
 33315  000EB8  0E00               	movlw	0
 33316  000EBA  0100               	movlb	0	; () banked
 33317  000EBC  6FB8               	movwf	(MonitorPressureTask@i_4897+1)& (0+255),b
 33318  000EBE  0E00               	movlw	0
 33319  000EC0  6FB7               	movwf	MonitorPressureTask@i_4897& (0+255),b
 33320  000EC2  D019               	goto	i2l21580
 33321  000EC4                     i2l21576:
 33322                           
 33323                           ; BSR set to: 0
 33324  000EC4  90D8               	bcf	status,0,c
 33325  000EC6  35B7               	rlcf	MonitorPressureTask@i_4897& (0+255),w,b
 33326  000EC8  6ED9               	movwf	fsr2l,c
 33327  000ECA  35B8               	rlcf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33328  000ECC  6EDA               	movwf	fsr2h,c
 33329  000ECE  0E61               	movlw	low _tdiBuffer
 33330  000ED0  26D9               	addwf	fsr2l,f,c
 33331  000ED2  0E03               	movlw	high _tdiBuffer
 33332  000ED4  22DA               	addwfc	fsr2h,f,c
 33333  000ED6  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33334  000EDC  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33335  000EE2  0101               	movlb	1	; () banked
 33336  000EE4  51DF               	movf	_tdi& (0+255),w,b
 33337  000EE6  245B               	addwf	??_MonitorPressureTask^0,w,c
 33338  000EE8  6FDF               	movwf	_tdi& (0+255),b
 33339  000EEA  51E0               	movf	(_tdi+1)& (0+255),w,b
 33340  000EEC  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33341  000EEE  6FE0               	movwf	(_tdi+1)& (0+255),b
 33342                           
 33343                           ; BSR set to: 1
 33344  000EF0  0100               	movlb	0	; () banked
 33345  000EF2  4BB7               	infsnz	MonitorPressureTask@i_4897& (0+255),f,b
 33346  000EF4  2BB8               	incf	(MonitorPressureTask@i_4897+1)& (0+255),f,b
 33347  000EF6                     i2l21580:
 33348                           
 33349                           ; BSR set to: 0
 33350  000EF6  0E01               	movlw	1
 33351  000EF8  25D2               	addwf	_numtdi& (0+255),w,b
 33352  000EFA  6E5B               	movwf	??_MonitorPressureTask^0,c
 33353  000EFC  0E00               	movlw	0
 33354  000EFE  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33355  000F00  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33356  000F02  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33357  000F04  D00B               	goto	i2l21584
 33358  000F06  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33359  000F08  E104               	bnz	i2u2115_40
 33360  000F0A  0E0A               	movlw	10
 33361  000F0C  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33362  000F0E  A0D8               	btfss	status,0,c
 33363  000F10  D005               	goto	i2l21584
 33364  000F12                     i2u2115_40:
 33365                           
 33366                           ; BSR set to: 0
 33367  000F12  0E00               	movlw	0
 33368  000F14  6FA8               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33369  000F16  0E0A               	movlw	10
 33370  000F18  6FA7               	movwf	_MonitorPressureTask$4898& (0+255),b
 33371  000F1A  D006               	goto	i2l3170
 33372  000F1C                     i2l21584:
 33373                           
 33374                           ; BSR set to: 0
 33375  000F1C  0E01               	movlw	1
 33376  000F1E  25D2               	addwf	_numtdi& (0+255),w,b
 33377  000F20  6FA7               	movwf	_MonitorPressureTask$4898& (0+255),b
 33378  000F22  0E00               	movlw	0
 33379  000F24  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33380  000F26  6FA8               	movwf	(_MonitorPressureTask$4898+1)& (0+255),b
 33381  000F28                     i2l3170:
 33382                           
 33383                           ; BSR set to: 0
 33384  000F28  51A7               	movf	_MonitorPressureTask$4898& (0+255),w,b
 33385  000F2A  5DB7               	subwf	MonitorPressureTask@i_4897& (0+255),w,b
 33386  000F2C  51B8               	movf	(MonitorPressureTask@i_4897+1)& (0+255),w,b
 33387  000F2E  0A80               	xorlw	128
 33388  000F30  6E5B               	movwf	??_MonitorPressureTask^0,c
 33389  000F32  51A8               	movf	(_MonitorPressureTask$4898+1)& (0+255),w,b
 33390  000F34  0A80               	xorlw	128
 33391  000F36  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33392  000F38  A0D8               	btfss	status,0,c
 33393  000F3A  D7C4               	goto	i2l21576
 33394                           
 33395                           ; BSR set to: 0
 33396                           ;monitor.c: 606:             tdi = tdi/((10)>(numtdi+1)?(numtdi+1):(10));
 33397  000F3C  0E01               	movlw	1
 33398  000F3E  25D2               	addwf	_numtdi& (0+255),w,b
 33399  000F40  6E5B               	movwf	??_MonitorPressureTask^0,c
 33400  000F42  0E00               	movlw	0
 33401  000F44  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33402  000F46  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33403  000F48  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33404  000F4A  D00B               	goto	i2l21590
 33405  000F4C  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33406  000F4E  E104               	bnz	i2u2117_40
 33407  000F50  0E0A               	movlw	10
 33408  000F52  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33409  000F54  A0D8               	btfss	status,0,c
 33410  000F56  D005               	goto	i2l21590
 33411  000F58                     i2u2117_40:
 33412                           
 33413                           ; BSR set to: 0
 33414  000F58  0E00               	movlw	0
 33415  000F5A  6FAA               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33416  000F5C  0E0A               	movlw	10
 33417  000F5E  6FA9               	movwf	_MonitorPressureTask$4899& (0+255),b
 33418  000F60  D006               	goto	i2l21592
 33419  000F62                     i2l21590:
 33420                           
 33421                           ; BSR set to: 0
 33422  000F62  0E01               	movlw	1
 33423  000F64  25D2               	addwf	_numtdi& (0+255),w,b
 33424  000F66  6FA9               	movwf	_MonitorPressureTask$4899& (0+255),b
 33425  000F68  0E00               	movlw	0
 33426  000F6A  21D3               	addwfc	(_numtdi+1)& (0+255),w,b
 33427  000F6C  6FAA               	movwf	(_MonitorPressureTask$4899+1)& (0+255),b
 33428  000F6E                     i2l21592:
 33429                           
 33430                           ; BSR set to: 0
 33431  000F6E  0060  F77C  F007   	movff	_tdi,i2___awdiv@dividend
 33432  000F74  0060  F780  F008   	movff	_tdi+1,i2___awdiv@dividend+1
 33433  000F7A  0060  F2A4  F009   	movff	_MonitorPressureTask$4899,i2___awdiv@divisor
 33434  000F80  0060  F2A8  F00A   	movff	_MonitorPressureTask$4899+1,i2___awdiv@divisor+1
 33435  000F86  ECC1  F045         	call	i2___awdiv	;wreg free
 33436  000F8A  0060  F01C  F1DF   	movff	?i2___awdiv,_tdi
 33437  000F90  0060  F020  F1E0   	movff	?i2___awdiv+1,_tdi+1
 33438                           
 33439                           ;monitor.c: 609:             if (enableAlarms) numtdi++;
 33440  000F96  0100               	movlb	0	; () banked
 33441  000F98  51F0               	movf	_enableAlarms& (0+255),w,b
 33442  000F9A  B4D8               	btfsc	status,2,c
 33443  000F9C  D002               	goto	i2l21598
 33444                           
 33445                           ; BSR set to: 0
 33446  000F9E  4BD2               	infsnz	_numtdi& (0+255),f,b
 33447  000FA0  2BD3               	incf	(_numtdi+1)& (0+255),f,b
 33448  000FA2                     i2l21598:
 33449                           
 33450                           ; BSR set to: 0
 33451                           ;monitor.c: 610:             if (numtdi>=100) numtdi=10;
 33452  000FA2  BFD3               	btfsc	(_numtdi+1)& (0+255),7,b
 33453  000FA4  D00A               	goto	i2l3177
 33454  000FA6  51D3               	movf	(_numtdi+1)& (0+255),w,b
 33455  000FA8  E104               	bnz	i2u2119_40
 33456  000FAA  0E64               	movlw	100
 33457  000FAC  5DD2               	subwf	_numtdi& (0+255),w,b
 33458  000FAE  A0D8               	btfss	status,0,c
 33459  000FB0  D004               	goto	i2l3177
 33460  000FB2                     i2u2119_40:
 33461                           
 33462                           ; BSR set to: 0
 33463  000FB2  0E00               	movlw	0
 33464  000FB4  6FD3               	movwf	(_numtdi+1)& (0+255),b
 33465  000FB6  0E0A               	movlw	10
 33466  000FB8  6FD2               	movwf	_numtdi& (0+255),b
 33467  000FBA                     i2l3177:
 33468                           
 33469                           ; BSR set to: 0
 33470                           ;monitor.c: 612:             measPi=1;
 33471  000FBA  0E01               	movlw	1
 33472  000FBC  0102               	movlb	2	; () banked
 33473  000FBE  6F9E               	movwf	MonitorPressureTask@measPi& (0+255),b
 33474                           
 33475                           ; BSR set to: 2
 33476                           ;monitor.c: 613:             rpi=pi;
 33477  000FC0  C1DB  F248         	movff	_pi,_rpi
 33478  000FC4  C1DC  F249         	movff	_pi+1,_rpi+1
 33479  000FC8                     i2l21604:
 33480                           
 33481                           ;monitor.c: 620:     if (prSlow<=(pe+2*5) && state == 4) {
 33482  000FC8  0E0A               	movlw	10
 33483  000FCA  0101               	movlb	1	; () banked
 33484  000FCC  25D9               	addwf	_pe& (0+255),w,b
 33485  000FCE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33486  000FD0  0E00               	movlw	0
 33487  000FD2  21DA               	addwfc	(_pe+1)& (0+255),w,b
 33488  000FD4  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33489  000FD6  0100               	movlb	0	; () banked
 33490  000FD8  51CE               	movf	_prSlow& (0+255),w,b
 33491  000FDA  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33492  000FDC  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33493  000FDE  0A80               	xorlw	128
 33494  000FE0  6E5D               	movwf	(??_MonitorPressureTask+2)^0,c
 33495  000FE2  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33496  000FE4  0A80               	xorlw	128
 33497  000FE6  585D               	subwfb	(??_MonitorPressureTask+2)^0,w,c
 33498  000FE8  A0D8               	btfss	status,0,c
 33499  000FEA  D0F2               	goto	i2l21654
 33500                           
 33501                           ; BSR set to: 0
 33502  000FEC  0E04               	movlw	4
 33503  000FEE  0101               	movlb	1	; () banked
 33504  000FF0  19E5               	xorwf	_state& (0+255),w,b
 33505  000FF2  11E6               	iorwf	(_state+1)& (0+255),w,b
 33506  000FF4  A4D8               	btfss	status,2,c
 33507  000FF6  D0EC               	goto	i2l21654
 33508                           
 33509                           ; BSR set to: 1
 33510                           ;monitor.c: 622:         next = 2;
 33511  000FF8  0E00               	movlw	0
 33512  000FFA  0100               	movlb	0	; () banked
 33513  000FFC  6FB6               	movwf	(MonitorPressureTask@next+1)& (0+255),b
 33514  000FFE  0E02               	movlw	2
 33515  001000  6FB5               	movwf	MonitorPressureTask@next& (0+255),b
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;monitor.c: 623:         tt4 = tt;
 33519  001002  C0C8  F0D8         	movff	_tt,_tt4
 33520  001006  C0C9  F0D9         	movff	_tt+1,_tt4+1
 33521                           
 33522                           ; BSR set to: 0
 33523                           ;monitor.c: 626:         if (tt4>tt3) {
 33524  00100A  51D8               	movf	_tt4& (0+255),w,b
 33525  00100C  0101               	movlb	1	; () banked
 33526  00100E  5DE1               	subwf	_tt3& (0+255),w,b
 33527  001010  51E2               	movf	(_tt3+1)& (0+255),w,b
 33528  001012  0A80               	xorlw	128
 33529  001014  6E5B               	movwf	??_MonitorPressureTask^0,c
 33530  001016  0100               	movlb	0	; () banked
 33531  001018  51D9               	movf	(_tt4+1)& (0+255),w,b
 33532  00101A  0A80               	xorlw	128
 33533  00101C  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33534  00101E  B0D8               	btfsc	status,0,c
 33535  001020  D0B2               	goto	i2l21650
 33536                           
 33537                           ; BSR set to: 0
 33538                           ;monitor.c: 627:             tdeBuffer[numtde%10] = ((tt4-tt3));
 33539  001022  0101               	movlb	1	; () banked
 33540  001024  51E1               	movf	_tt3& (0+255),w,b
 33541  001026  0100               	movlb	0	; () banked
 33542  001028  5DD8               	subwf	_tt4& (0+255),w,b
 33543  00102A  6E5B               	movwf	??_MonitorPressureTask^0,c
 33544  00102C  0101               	movlb	1	; () banked
 33545  00102E  51E2               	movf	(_tt3+1)& (0+255),w,b
 33546  001030  0100               	movlb	0	; () banked
 33547  001032  59D9               	subwfb	(_tt4+1)& (0+255),w,b
 33548  001034  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33549  001036  0060  F340  F001   	movff	_numtde,i2___awmod@dividend
 33550  00103C  0060  F344  F002   	movff	_numtde+1,i2___awmod@dividend+1
 33551  001042  0E00               	movlw	0
 33552  001044  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 33553  001046  0E0A               	movlw	10
 33554  001048  6E03               	movwf	i2___awmod@divisor^0,c
 33555  00104A  EC3B  F047         	call	i2___awmod	;wreg free
 33556  00104E  90D8               	bcf	status,0,c
 33557  001050  3601               	rlcf	?i2___awmod^0,f,c
 33558  001052  3602               	rlcf	(?i2___awmod+1)^0,f,c
 33559  001054  0E75               	movlw	low _tdeBuffer
 33560  001056  2401               	addwf	?i2___awmod^0,w,c
 33561  001058  6ED9               	movwf	fsr2l,c
 33562  00105A  0E03               	movlw	high _tdeBuffer
 33563  00105C  2002               	addwfc	(?i2___awmod+1)^0,w,c
 33564  00105E  6EDA               	movwf	fsr2h,c
 33565  001060  0060  F16F  FFDE   	movff	??_MonitorPressureTask,postinc2
 33566  001066  0060  F173  FFDD   	movff	??_MonitorPressureTask+1,postdec2
 33567                           
 33568                           ;monitor.c: 628:             tde = 0;
 33569  00106C  0E00               	movlw	0
 33570  00106E  0101               	movlb	1	; () banked
 33571  001070  6FDE               	movwf	(_tde+1)& (0+255),b
 33572  001072  0E00               	movlw	0
 33573  001074  6FDD               	movwf	_tde& (0+255),b
 33574                           
 33575                           ; BSR set to: 1
 33576                           ;monitor.c: 629:             for (int i=0; i<((numtde+1)>(10)?(10):(numtde+1)); i++) tde
      +                           = tde + tdeBuffer[i];
 33577  001076  0E00               	movlw	0
 33578  001078  0100               	movlb	0	; () banked
 33579  00107A  6FBA               	movwf	(MonitorPressureTask@i_4900+1)& (0+255),b
 33580  00107C  0E00               	movlw	0
 33581  00107E  6FB9               	movwf	MonitorPressureTask@i_4900& (0+255),b
 33582  001080  D019               	goto	i2l21624
 33583  001082                     i2l21620:
 33584                           
 33585                           ; BSR set to: 0
 33586  001082  90D8               	bcf	status,0,c
 33587  001084  35B9               	rlcf	MonitorPressureTask@i_4900& (0+255),w,b
 33588  001086  6ED9               	movwf	fsr2l,c
 33589  001088  35BA               	rlcf	(MonitorPressureTask@i_4900+1)& (0+255),w,b
 33590  00108A  6EDA               	movwf	fsr2h,c
 33591  00108C  0E75               	movlw	low _tdeBuffer
 33592  00108E  26D9               	addwf	fsr2l,f,c
 33593  001090  0E03               	movlw	high _tdeBuffer
 33594  001092  22DA               	addwfc	fsr2h,f,c
 33595  001094  006F FF78  F05B    	movff	postinc2,??_MonitorPressureTask
 33596  00109A  006F FF74  F05C    	movff	postdec2,??_MonitorPressureTask+1
 33597  0010A0  0101               	movlb	1	; () banked
 33598  0010A2  51DD               	movf	_tde& (0+255),w,b
 33599  0010A4  245B               	addwf	??_MonitorPressureTask^0,w,c
 33600  0010A6  6FDD               	movwf	_tde& (0+255),b
 33601  0010A8  51DE               	movf	(_tde+1)& (0+255),w,b
 33602  0010AA  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33603  0010AC  6FDE               	movwf	(_tde+1)& (0+255),b
 33604                           
 33605                           ; BSR set to: 1
 33606  0010AE  0100               	movlb	0	; () banked
 33607  0010B0  4BB9               	infsnz	MonitorPressureTask@i_4900& (0+255),f,b
 33608  0010B2  2BBA               	incf	(MonitorPressureTask@i_4900+1)& (0+255),f,b
 33609  0010B4                     i2l21624:
 33610                           
 33611                           ; BSR set to: 0
 33612  0010B4  0E01               	movlw	1
 33613  0010B6  25D0               	addwf	_numtde& (0+255),w,b
 33614  0010B8  6E5B               	movwf	??_MonitorPressureTask^0,c
 33615  0010BA  0E00               	movlw	0
 33616  0010BC  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33617  0010BE  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33618  0010C0  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33619  0010C2  D006               	goto	i2u2123_40
 33620  0010C4  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33621  0010C6  E10B               	bnz	i2l21628
 33622  0010C8  0E0B               	movlw	11
 33623  0010CA  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33624  0010CC  B0D8               	btfsc	status,0,c
 33625  0010CE  D007               	goto	i2l21628
 33626  0010D0                     i2u2123_40:
 33627                           
 33628                           ; BSR set to: 0
 33629  0010D0  0E01               	movlw	1
 33630  0010D2  25D0               	addwf	_numtde& (0+255),w,b
 33631  0010D4  6FAB               	movwf	_MonitorPressureTask$4901& (0+255),b
 33632  0010D6  0E00               	movlw	0
 33633  0010D8  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33634  0010DA  6FAC               	movwf	(_MonitorPressureTask$4901+1)& (0+255),b
 33635  0010DC  D004               	goto	i2l21630
 33636  0010DE                     i2l21628:
 33637                           
 33638                           ; BSR set to: 0
 33639  0010DE  0E00               	movlw	0
 33640  0010E0  6FAC               	movwf	(_MonitorPressureTask$4901+1)& (0+255),b
 33641  0010E2  0E0A               	movlw	10
 33642  0010E4  6FAB               	movwf	_MonitorPressureTask$4901& (0+255),b
 33643  0010E6                     i2l21630:
 33644                           
 33645                           ; BSR set to: 0
 33646  0010E6  51AB               	movf	_MonitorPressureTask$4901& (0+255),w,b
 33647  0010E8  5DB9               	subwf	MonitorPressureTask@i_4900& (0+255),w,b
 33648  0010EA  51BA               	movf	(MonitorPressureTask@i_4900+1)& (0+255),w,b
 33649  0010EC  0A80               	xorlw	128
 33650  0010EE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33651  0010F0  51AC               	movf	(_MonitorPressureTask$4901+1)& (0+255),w,b
 33652  0010F2  0A80               	xorlw	128
 33653  0010F4  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33654  0010F6  A0D8               	btfss	status,0,c
 33655  0010F8  D7C4               	goto	i2l21620
 33656                           
 33657                           ; BSR set to: 0
 33658                           ;monitor.c: 630:             tde = tde/((numtde+1)>(10)?(10):(numtde+1));
 33659  0010FA  0E01               	movlw	1
 33660  0010FC  25D0               	addwf	_numtde& (0+255),w,b
 33661  0010FE  6E5B               	movwf	??_MonitorPressureTask^0,c
 33662  001100  0E00               	movlw	0
 33663  001102  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33664  001104  6E5C               	movwf	(??_MonitorPressureTask+1)^0,c
 33665  001106  BE5C               	btfsc	(??_MonitorPressureTask+1)^0,7,c
 33666  001108  D006               	goto	i2u2125_40
 33667  00110A  505C               	movf	(??_MonitorPressureTask+1)^0,w,c
 33668  00110C  E10B               	bnz	i2l21636
 33669  00110E  0E0B               	movlw	11
 33670  001110  5C5B               	subwf	??_MonitorPressureTask^0,w,c
 33671  001112  B0D8               	btfsc	status,0,c
 33672  001114  D007               	goto	i2l21636
 33673  001116                     i2u2125_40:
 33674                           
 33675                           ; BSR set to: 0
 33676  001116  0E01               	movlw	1
 33677  001118  25D0               	addwf	_numtde& (0+255),w,b
 33678  00111A  6FAD               	movwf	_MonitorPressureTask$4902& (0+255),b
 33679  00111C  0E00               	movlw	0
 33680  00111E  21D1               	addwfc	(_numtde+1)& (0+255),w,b
 33681  001120  6FAE               	movwf	(_MonitorPressureTask$4902+1)& (0+255),b
 33682  001122  D004               	goto	i2l21638
 33683  001124                     i2l21636:
 33684                           
 33685                           ; BSR set to: 0
 33686  001124  0E00               	movlw	0
 33687  001126  6FAE               	movwf	(_MonitorPressureTask$4902+1)& (0+255),b
 33688  001128  0E0A               	movlw	10
 33689  00112A  6FAD               	movwf	_MonitorPressureTask$4902& (0+255),b
 33690  00112C                     i2l21638:
 33691                           
 33692                           ; BSR set to: 0
 33693  00112C  0060  F774  F007   	movff	_tde,i2___awdiv@dividend
 33694  001132  0060  F778  F008   	movff	_tde+1,i2___awdiv@dividend+1
 33695  001138  0060  F2B4  F009   	movff	_MonitorPressureTask$4902,i2___awdiv@divisor
 33696  00113E  0060  F2B8  F00A   	movff	_MonitorPressureTask$4902+1,i2___awdiv@divisor+1
 33697  001144  ECC1  F045         	call	i2___awdiv	;wreg free
 33698  001148  0060  F01C  F1DD   	movff	?i2___awdiv,_tde
 33699  00114E  0060  F020  F1DE   	movff	?i2___awdiv+1,_tde+1
 33700                           
 33701                           ;monitor.c: 633:             if (enableAlarms) numtde++;
 33702  001154  0100               	movlb	0	; () banked
 33703  001156  51F0               	movf	_enableAlarms& (0+255),w,b
 33704  001158  B4D8               	btfsc	status,2,c
 33705  00115A  D002               	goto	i2l21644
 33706                           
 33707                           ; BSR set to: 0
 33708  00115C  4BD0               	infsnz	_numtde& (0+255),f,b
 33709  00115E  2BD1               	incf	(_numtde+1)& (0+255),f,b
 33710  001160                     i2l21644:
 33711                           
 33712                           ; BSR set to: 0
 33713                           ;monitor.c: 634:             if (numtde>=100) numtde=10;
 33714  001160  BFD1               	btfsc	(_numtde+1)& (0+255),7,b
 33715  001162  D00A               	goto	i2l3192
 33716  001164  51D1               	movf	(_numtde+1)& (0+255),w,b
 33717  001166  E104               	bnz	i2u2127_40
 33718  001168  0E64               	movlw	100
 33719  00116A  5DD0               	subwf	_numtde& (0+255),w,b
 33720  00116C  A0D8               	btfss	status,0,c
 33721  00116E  D004               	goto	i2l3192
 33722  001170                     i2u2127_40:
 33723                           
 33724                           ; BSR set to: 0
 33725  001170  0E00               	movlw	0
 33726  001172  6FD1               	movwf	(_numtde+1)& (0+255),b
 33727  001174  0E0A               	movlw	10
 33728  001176  6FD0               	movwf	_numtde& (0+255),b
 33729  001178                     i2l3192:
 33730                           
 33731                           ; BSR set to: 0
 33732                           ;monitor.c: 636:             measPe = 1;
 33733  001178  0E01               	movlw	1
 33734  00117A  0102               	movlb	2	; () banked
 33735  00117C  6F9D               	movwf	MonitorPressureTask@measPe& (0+255),b
 33736                           
 33737                           ; BSR set to: 2
 33738                           ;monitor.c: 637:             rpe = pe;
 33739  00117E  C1D9  F246         	movff	_pe,_rpe
 33740  001182  C1DA  F247         	movff	_pe+1,_rpe+1
 33741  001186                     i2l21650:
 33742                           
 33743                           ;monitor.c: 639:         volume = (volumeAcc)/75;
 33744  001186  0060  F888  F001   	movff	_volumeAcc,___lldiv@dividend
 33745  00118C  0060  F88C  F002   	movff	_volumeAcc+1,___lldiv@dividend+1
 33746  001192  0060  F890  F003   	movff	_volumeAcc+2,___lldiv@dividend+2
 33747  001198  0060  F894  F004   	movff	_volumeAcc+3,___lldiv@dividend+3
 33748  00119E  0E4B               	movlw	75
 33749  0011A0  6E05               	movwf	___lldiv@divisor^0,c
 33750  0011A2  0E00               	movlw	0
 33751  0011A4  6E06               	movwf	(___lldiv@divisor+1)^0,c
 33752  0011A6  0E00               	movlw	0
 33753  0011A8  6E07               	movwf	(___lldiv@divisor+2)^0,c
 33754  0011AA  0E00               	movlw	0
 33755  0011AC  6E08               	movwf	(___lldiv@divisor+3)^0,c
 33756  0011AE  EC38  F045         	call	___lldiv	;wreg free
 33757  0011B2  0060  F004  F1E3   	movff	?___lldiv,_volume
 33758  0011B8  0060  F008  F1E4   	movff	?___lldiv+1,_volume+1
 33759                           
 33760                           ;monitor.c: 640:          volumeAcc = 0;
 33761  0011BE  0E00               	movlw	0
 33762  0011C0  0102               	movlb	2	; () banked
 33763  0011C2  6F22               	movwf	_volumeAcc& (0+255),b
 33764  0011C4  0E00               	movlw	0
 33765  0011C6  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 33766  0011C8  0E00               	movlw	0
 33767  0011CA  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 33768  0011CC  0E00               	movlw	0
 33769  0011CE  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 33770  0011D0                     i2l21654:
 33771                           
 33772                           ;monitor.c: 646:     if (measPi) rpi = (rpi*4+prSlow)/5;
 33773  0011D0  0102               	movlb	2	; () banked
 33774  0011D2  519E               	movf	MonitorPressureTask@measPi& (0+255),w,b
 33775  0011D4  B4D8               	btfsc	status,2,c
 33776  0011D6  D01F               	goto	i2l21658
 33777                           
 33778                           ; BSR set to: 2
 33779  0011D8  0060  F920  F05B   	movff	_rpi,??_MonitorPressureTask
 33780  0011DE  0060  F924  F05C   	movff	_rpi+1,??_MonitorPressureTask+1
 33781  0011E4  90D8               	bcf	status,0,c
 33782  0011E6  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33783  0011E8  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33784  0011EA  90D8               	bcf	status,0,c
 33785  0011EC  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33786  0011EE  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33787  0011F0  0100               	movlb	0	; () banked
 33788  0011F2  51CE               	movf	_prSlow& (0+255),w,b
 33789  0011F4  245B               	addwf	??_MonitorPressureTask^0,w,c
 33790  0011F6  6E07               	movwf	i2___awdiv@dividend^0,c
 33791  0011F8  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33792  0011FA  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33793  0011FC  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33794  0011FE  0E00               	movlw	0
 33795  001200  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33796  001202  0E05               	movlw	5
 33797  001204  6E09               	movwf	i2___awdiv@divisor^0,c
 33798  001206  ECC1  F045         	call	i2___awdiv	;wreg free
 33799  00120A  0060  F01C  F248   	movff	?i2___awdiv,_rpi
 33800  001210  0060  F020  F249   	movff	?i2___awdiv+1,_rpi+1
 33801  001216                     i2l21658:
 33802                           
 33803                           ;monitor.c: 647:     if (measPe) rpe = (rpe*4+prSlow)/5;
 33804  001216  0102               	movlb	2	; () banked
 33805  001218  519D               	movf	MonitorPressureTask@measPe& (0+255),w,b
 33806  00121A  B4D8               	btfsc	status,2,c
 33807  00121C  D01F               	goto	i2l21662
 33808                           
 33809                           ; BSR set to: 2
 33810  00121E  0060  F918  F05B   	movff	_rpe,??_MonitorPressureTask
 33811  001224  0060  F91C  F05C   	movff	_rpe+1,??_MonitorPressureTask+1
 33812  00122A  90D8               	bcf	status,0,c
 33813  00122C  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33814  00122E  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33815  001230  90D8               	bcf	status,0,c
 33816  001232  365B               	rlcf	??_MonitorPressureTask^0,f,c
 33817  001234  365C               	rlcf	(??_MonitorPressureTask+1)^0,f,c
 33818  001236  0100               	movlb	0	; () banked
 33819  001238  51CE               	movf	_prSlow& (0+255),w,b
 33820  00123A  245B               	addwf	??_MonitorPressureTask^0,w,c
 33821  00123C  6E07               	movwf	i2___awdiv@dividend^0,c
 33822  00123E  51CF               	movf	(_prSlow+1)& (0+255),w,b
 33823  001240  205C               	addwfc	(??_MonitorPressureTask+1)^0,w,c
 33824  001242  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 33825  001244  0E00               	movlw	0
 33826  001246  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 33827  001248  0E05               	movlw	5
 33828  00124A  6E09               	movwf	i2___awdiv@divisor^0,c
 33829  00124C  ECC1  F045         	call	i2___awdiv	;wreg free
 33830  001250  0060  F01C  F246   	movff	?i2___awdiv,_rpe
 33831  001256  0060  F020  F247   	movff	?i2___awdiv+1,_rpe+1
 33832  00125C                     i2l21662:
 33833                           
 33834                           ;monitor.c: 650:     if (enableAlarms) {
 33835  00125C  0100               	movlb	0	; () banked
 33836  00125E  51F0               	movf	_enableAlarms& (0+255),w,b
 33837  001260  B4D8               	btfsc	status,2,c
 33838  001262  D040               	goto	i2l21688
 33839                           
 33840                           ; BSR set to: 0
 33841                           ;monitor.c: 661:         if (tde>350) SetTdeTooLongAlarm(); else ClearTdeTooLongAlarm();
 33842  001264  0101               	movlb	1	; () banked
 33843  001266  BFDE               	btfsc	(_tde+1)& (0+255),7,b
 33844  001268  D009               	goto	i2l21668
 33845  00126A  0E5F               	movlw	95
 33846  00126C  5DDD               	subwf	_tde& (0+255),w,b
 33847  00126E  0E01               	movlw	1
 33848  001270  59DE               	subwfb	(_tde+1)& (0+255),w,b
 33849  001272  A0D8               	btfss	status,0,c
 33850  001274  D003               	goto	i2l21668
 33851                           
 33852                           ; BSR set to: 1
 33853  001276  EC53  F057         	call	_SetTdeTooLongAlarm	;wreg free
 33854  00127A  D002               	goto	i2l21670
 33855  00127C                     i2l21668:
 33856                           
 33857                           ; BSR set to: 1
 33858  00127C  EC93  F057         	call	_ClearTdeTooLongAlarm	;wreg free
 33859  001280                     i2l21670:
 33860                           
 33861                           ; BSR set to: 2
 33862                           ;monitor.c: 662:         if (tdi>350) SetTdiTooLongAlarm(); else ClearTdiTooLongAlarm();
 33863  001280  0101               	movlb	1	; () banked
 33864  001282  BFE0               	btfsc	(_tdi+1)& (0+255),7,b
 33865  001284  D009               	goto	i2l21674
 33866  001286  0E5F               	movlw	95
 33867  001288  5DDF               	subwf	_tdi& (0+255),w,b
 33868  00128A  0E01               	movlw	1
 33869  00128C  59E0               	subwfb	(_tdi+1)& (0+255),w,b
 33870  00128E  A0D8               	btfss	status,0,c
 33871  001290  D003               	goto	i2l21674
 33872                           
 33873                           ; BSR set to: 1
 33874  001292  EC4F  F057         	call	_SetTdiTooLongAlarm	;wreg free
 33875  001296  D002               	goto	i2l21676
 33876  001298                     i2l21674:
 33877                           
 33878                           ; BSR set to: 1
 33879  001298  EC8F  F057         	call	_ClearTdiTooLongAlarm	;wreg free
 33880  00129C                     i2l21676:
 33881                           
 33882                           ; BSR set to: 2
 33883                           ;monitor.c: 663:         if (volume>volumeMax) SetVAboveMaxAlarm(); else ClearVAboveMaxA
      +                          larm();
 33884  00129C  0101               	movlb	1	; () banked
 33885  00129E  51E3               	movf	_volume& (0+255),w,b
 33886  0012A0  0102               	movlb	2	; () banked
 33887  0012A2  5D66               	subwf	_volumeMax& (0+255),w,b
 33888  0012A4  5167               	movf	(_volumeMax+1)& (0+255),w,b
 33889  0012A6  0A80               	xorlw	128
 33890  0012A8  6E5B               	movwf	??_MonitorPressureTask^0,c
 33891  0012AA  0101               	movlb	1	; () banked
 33892  0012AC  51E4               	movf	(_volume+1)& (0+255),w,b
 33893  0012AE  0A80               	xorlw	128
 33894  0012B0  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33895  0012B2  B0D8               	btfsc	status,0,c
 33896  0012B4  D003               	goto	i2l21680
 33897                           
 33898                           ; BSR set to: 1
 33899  0012B6  EC4B  F057         	call	_SetVAboveMaxAlarm	;wreg free
 33900  0012BA  D002               	goto	i2l21682
 33901  0012BC                     i2l21680:
 33902                           
 33903                           ; BSR set to: 1
 33904  0012BC  EC8B  F057         	call	_ClearVAboveMaxAlarm	;wreg free
 33905  0012C0                     i2l21682:
 33906                           
 33907                           ; BSR set to: 2
 33908                           ;monitor.c: 664:         if (volume<volumeMin) SetVBelowMinAlarm(); else ClearVBelowMinA
      +                          larm();
 33909  0012C0  5164               	movf	_volumeMin& (0+255),w,b
 33910  0012C2  0101               	movlb	1	; () banked
 33911  0012C4  5DE3               	subwf	_volume& (0+255),w,b
 33912  0012C6  51E4               	movf	(_volume+1)& (0+255),w,b
 33913  0012C8  0A80               	xorlw	128
 33914  0012CA  6E5B               	movwf	??_MonitorPressureTask^0,c
 33915  0012CC  0102               	movlb	2	; () banked
 33916  0012CE  5165               	movf	(_volumeMin+1)& (0+255),w,b
 33917  0012D0  0A80               	xorlw	128
 33918  0012D2  585B               	subwfb	??_MonitorPressureTask^0,w,c
 33919  0012D4  B0D8               	btfsc	status,0,c
 33920  0012D6  D003               	goto	i2l21686
 33921                           
 33922                           ; BSR set to: 2
 33923  0012D8  ECC8  F057         	call	_SetVBelowMinAlarm	;wreg free
 33924  0012DC  D00B               	goto	i2l21690
 33925  0012DE                     i2l21686:
 33926                           
 33927                           ; BSR set to: 2
 33928  0012DE  ECDA  F057         	call	_ClearVBelowMinAlarm	;wreg free
 33929  0012E2  D008               	goto	i2l21690
 33930  0012E4                     i2l21688:
 33931                           
 33932                           ; BSR set to: 0
 33933                           ;monitor.c: 667:         ClearTdeTooLongAlarm();
 33934  0012E4  EC93  F057         	call	_ClearTdeTooLongAlarm	;wreg free
 33935                           
 33936                           ;monitor.c: 668:         ClearTdiTooLongAlarm();
 33937  0012E8  EC8F  F057         	call	_ClearTdiTooLongAlarm	;wreg free
 33938                           
 33939                           ;monitor.c: 669:         ClearVAboveMaxAlarm();
 33940  0012EC  EC8B  F057         	call	_ClearVAboveMaxAlarm	;wreg free
 33941                           
 33942                           ;monitor.c: 670:         ClearVBelowMinAlarm();
 33943  0012F0  ECDA  F057         	call	_ClearVBelowMinAlarm	;wreg free
 33944  0012F4                     i2l21690:
 33945                           
 33946                           ; BSR set to: 2
 33947                           ;monitor.c: 673:     state = next;
 33948  0012F4  0060  F2D4  F1E5   	movff	MonitorPressureTask@next,_state
 33949  0012FA  0060  F2D8  F1E6   	movff	MonitorPressureTask@next+1,_state+1
 33950  001300  0012               	return		;funcret
 33951  001302                     __end_of_MonitorPressureTask:
 33952                           	opt callstack 0
 33953                           
 33954 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 33955 ;; Defined at:
 33956 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 33957 ;; Parameters:    Size  Location     Type
 33958 ;;		None
 33959 ;; Auto vars:     Size  Location     Type
 33960 ;;		None
 33961 ;; Return value:  Size  Location     Type
 33962 ;;                  1    wreg      void 
 33963 ;; Registers used:
 33964 ;;		None
 33965 ;; Tracked objects:
 33966 ;;		On entry : 3F/2
 33967 ;;		On exit  : 3F/2
 33968 ;;		Unchanged: 3F/0
 33969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33974 ;;Total ram usage:        0 bytes
 33975 ;; Hardware stack levels used:    1
 33976 ;; This function calls:
 33977 ;;		Nothing
 33978 ;; This function is called by:
 33979 ;;		_TMR0_Initialize
 33980 ;;		_TMR0_ISR
 33981 ;; This function uses a non-reentrant model
 33982 ;;
 33983                           
 33984                           	psect	text247
 33985  00B05A                     __ptext247:
 33986                           	opt callstack 0
 33987  00B05A                     _TMR0_DefaultInterruptHandler:
 33988                           	opt callstack 15
 33989                           
 33990                           ; BSR set to: 2
 33991                           
 33992                           ;incstack = 0
 33993  00B05A  0012               	return		;funcret
 33994  00B05C                     __end_of_TMR0_DefaultInterruptHandler:
 33995                           	opt callstack 0
 33996                           
 33997 ;; *************** function i2_MonitorDump *****************
 33998 ;; Defined at:
 33999 ;;		line 212 in file "monitor.c"
 34000 ;; Parameters:    Size  Location     Type
 34001 ;;		None
 34002 ;; Auto vars:     Size  Location     Type
 34003 ;;		None
 34004 ;; Return value:  Size  Location     Type
 34005 ;;                  1    wreg      void 
 34006 ;; Registers used:
 34007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34008 ;; Tracked objects:
 34009 ;;		On entry : 3F/2
 34010 ;;		On exit  : 3F/2
 34011 ;;		Unchanged: 0/0
 34012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34017 ;;Total ram usage:        0 bytes
 34018 ;; Hardware stack levels used:    1
 34019 ;; Hardware stack levels required when called:    9
 34020 ;; This function calls:
 34021 ;;		i2_See12V
 34022 ;;		i2_See5V
 34023 ;;		i2___awdiv
 34024 ;;		i2_printf
 34025 ;; This function is called by:
 34026 ;;		_MonitorPressureTask
 34027 ;; This function uses a non-reentrant model
 34028 ;;
 34029                           
 34030                           	psect	text248
 34031  00347C                     __ptext248:
 34032                           	opt callstack 0
 34033  00347C                     i2_MonitorDump:
 34034                           	opt callstack 5
 34035                           
 34036                           ; BSR set to: 2
 34037                           ;monitor.c: 215:             printf("\r\nNew Breath: TT12: %d TT2: %d TT3: %d TT34: %d T
      +                          T4: %d TT1: %d ", tt12*2, tt2*2, tt3*2, tt34*2, tt4*2, tt1*2);
 34038                           
 34039                           ; BSR set to: 2
 34040                           ;incstack = 0
 34041  00347C  0E57               	movlw	low STR_33
 34042  00347E  0100               	movlb	0	; () banked
 34043  003480  6F77               	movwf	i2printf@fmt& (0+255),b
 34044  003482  0EFC               	movlw	high STR_33
 34045  003484  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34046  003486  90D8               	bcf	status,0,c
 34047  003488  0102               	movlb	2	; () banked
 34048  00348A  3560               	rlcf	_tt12& (0+255),w,b
 34049  00348C  0100               	movlb	0	; () banked
 34050  00348E  6F79               	movwf	(?i2_printf+2)& (0+255),b
 34051  003490  0102               	movlb	2	; () banked
 34052  003492  3561               	rlcf	(_tt12+1)& (0+255),w,b
 34053  003494  0100               	movlb	0	; () banked
 34054  003496  6F7A               	movwf	(?i2_printf+3)& (0+255),b
 34055  003498  90D8               	bcf	status,0,c
 34056  00349A  35DA               	rlcf	_tt2& (0+255),w,b
 34057  00349C  6F7B               	movwf	(?i2_printf+4)& (0+255),b
 34058  00349E  35DB               	rlcf	(_tt2+1)& (0+255),w,b
 34059  0034A0  6F7C               	movwf	(?i2_printf+5)& (0+255),b
 34060  0034A2  90D8               	bcf	status,0,c
 34061  0034A4  0101               	movlb	1	; () banked
 34062  0034A6  35E1               	rlcf	_tt3& (0+255),w,b
 34063  0034A8  0100               	movlb	0	; () banked
 34064  0034AA  6F7D               	movwf	(?i2_printf+6)& (0+255),b
 34065  0034AC  0101               	movlb	1	; () banked
 34066  0034AE  35E2               	rlcf	(_tt3+1)& (0+255),w,b
 34067  0034B0  0100               	movlb	0	; () banked
 34068  0034B2  6F7E               	movwf	(?i2_printf+7)& (0+255),b
 34069  0034B4  90D8               	bcf	status,0,c
 34070  0034B6  0102               	movlb	2	; () banked
 34071  0034B8  355E               	rlcf	_tt34& (0+255),w,b
 34072  0034BA  0100               	movlb	0	; () banked
 34073  0034BC  6F7F               	movwf	(?i2_printf+8)& (0+255),b
 34074  0034BE  0102               	movlb	2	; () banked
 34075  0034C0  355F               	rlcf	(_tt34+1)& (0+255),w,b
 34076  0034C2  0100               	movlb	0	; () banked
 34077  0034C4  6F80               	movwf	(?i2_printf+9)& (0+255),b
 34078  0034C6  90D8               	bcf	status,0,c
 34079  0034C8  35D8               	rlcf	_tt4& (0+255),w,b
 34080  0034CA  6F81               	movwf	(?i2_printf+10)& (0+255),b
 34081  0034CC  35D9               	rlcf	(_tt4+1)& (0+255),w,b
 34082  0034CE  6F82               	movwf	(?i2_printf+11)& (0+255),b
 34083  0034D0  90D8               	bcf	status,0,c
 34084  0034D2  35DC               	rlcf	_tt1& (0+255),w,b
 34085  0034D4  6F83               	movwf	(?i2_printf+12)& (0+255),b
 34086  0034D6  35DD               	rlcf	(_tt1+1)& (0+255),w,b
 34087  0034D8  6F84               	movwf	(?i2_printf+13)& (0+255),b
 34088  0034DA  ECBB  F052         	call	i2_printf	;wreg free
 34089                           
 34090                           ;monitor.c: 216:             printf("TI: %d TE: %d TDI: %d TDE: %d\r\n", ti*2, te*2, tdi
      +                          *2, tde*2);
 34091  0034DE  0E47               	movlw	low STR_34
 34092  0034E0  0100               	movlb	0	; () banked
 34093  0034E2  6F77               	movwf	i2printf@fmt& (0+255),b
 34094  0034E4  0EFE               	movlw	high STR_34
 34095  0034E6  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34096  0034E8  90D8               	bcf	status,0,c
 34097  0034EA  0102               	movlb	2	; () banked
 34098  0034EC  3558               	rlcf	_ti& (0+255),w,b
 34099  0034EE  0100               	movlb	0	; () banked
 34100  0034F0  6F79               	movwf	(?i2_printf+2)& (0+255),b
 34101  0034F2  0102               	movlb	2	; () banked
 34102  0034F4  3559               	rlcf	(_ti+1)& (0+255),w,b
 34103  0034F6  0100               	movlb	0	; () banked
 34104  0034F8  6F7A               	movwf	(?i2_printf+3)& (0+255),b
 34105  0034FA  90D8               	bcf	status,0,c
 34106  0034FC  0102               	movlb	2	; () banked
 34107  0034FE  3556               	rlcf	_te& (0+255),w,b
 34108  003500  0100               	movlb	0	; () banked
 34109  003502  6F7B               	movwf	(?i2_printf+4)& (0+255),b
 34110  003504  0102               	movlb	2	; () banked
 34111  003506  3557               	rlcf	(_te+1)& (0+255),w,b
 34112  003508  0100               	movlb	0	; () banked
 34113  00350A  6F7C               	movwf	(?i2_printf+5)& (0+255),b
 34114  00350C  90D8               	bcf	status,0,c
 34115  00350E  0101               	movlb	1	; () banked
 34116  003510  35DF               	rlcf	_tdi& (0+255),w,b
 34117  003512  0100               	movlb	0	; () banked
 34118  003514  6F7D               	movwf	(?i2_printf+6)& (0+255),b
 34119  003516  0101               	movlb	1	; () banked
 34120  003518  35E0               	rlcf	(_tdi+1)& (0+255),w,b
 34121  00351A  0100               	movlb	0	; () banked
 34122  00351C  6F7E               	movwf	(?i2_printf+7)& (0+255),b
 34123  00351E  90D8               	bcf	status,0,c
 34124  003520  0101               	movlb	1	; () banked
 34125  003522  35DD               	rlcf	_tde& (0+255),w,b
 34126  003524  0100               	movlb	0	; () banked
 34127  003526  6F7F               	movwf	(?i2_printf+8)& (0+255),b
 34128  003528  0101               	movlb	1	; () banked
 34129  00352A  35DE               	rlcf	(_tde+1)& (0+255),w,b
 34130  00352C  0100               	movlb	0	; () banked
 34131  00352E  6F80               	movwf	(?i2_printf+9)& (0+255),b
 34132  003530  ECBB  F052         	call	i2_printf	;wreg free
 34133                           
 34134                           ;monitor.c: 217:             printf("   Pmax: %d lIP: %d IP: %d Phigh: %d -- ", pmax/5, 
      +                          lrpi/5, pi/5, pHigh/5);
 34135  003534  0E92               	movlw	low STR_35
 34136  003536  0100               	movlb	0	; () banked
 34137  003538  6F77               	movwf	i2printf@fmt& (0+255),b
 34138  00353A  0EFD               	movlw	high STR_35
 34139  00353C  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34140  00353E  0060  F358  F007   	movff	_pmax,i2___awdiv@dividend
 34141  003544  0060  F35C  F008   	movff	_pmax+1,i2___awdiv@dividend+1
 34142  00354A  0E00               	movlw	0
 34143  00354C  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34144  00354E  0E05               	movlw	5
 34145  003550  6E09               	movwf	i2___awdiv@divisor^0,c
 34146  003552  ECC1  F045         	call	i2___awdiv	;wreg free
 34147  003556  0060  F01C  F079   	movff	?i2___awdiv,?i2_printf+2
 34148  00355C  0060  F020  F07A   	movff	?i2___awdiv+1,?i2_printf+3
 34149  003562  0060  F74C  F007   	movff	_lrpi,i2___awdiv@dividend
 34150  003568  0060  F750  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 34151  00356E  0E00               	movlw	0
 34152  003570  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34153  003572  0E05               	movlw	5
 34154  003574  6E09               	movwf	i2___awdiv@divisor^0,c
 34155  003576  ECC1  F045         	call	i2___awdiv	;wreg free
 34156  00357A  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 34157  003580  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 34158  003586  0060  F76C  F007   	movff	_pi,i2___awdiv@dividend
 34159  00358C  0060  F770  F008   	movff	_pi+1,i2___awdiv@dividend+1
 34160  003592  0E00               	movlw	0
 34161  003594  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34162  003596  0E05               	movlw	5
 34163  003598  6E09               	movwf	i2___awdiv@divisor^0,c
 34164  00359A  ECC1  F045         	call	i2___awdiv	;wreg free
 34165  00359E  0060  F01C  F07D   	movff	?i2___awdiv,?i2_printf+6
 34166  0035A4  0060  F020  F07E   	movff	?i2___awdiv+1,?i2_printf+7
 34167  0035AA  0060  F75C  F007   	movff	_pHigh,i2___awdiv@dividend
 34168  0035B0  0060  F760  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 34169  0035B6  0E00               	movlw	0
 34170  0035B8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34171  0035BA  0E05               	movlw	5
 34172  0035BC  6E09               	movwf	i2___awdiv@divisor^0,c
 34173  0035BE  ECC1  F045         	call	i2___awdiv	;wreg free
 34174  0035C2  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 34175  0035C8  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 34176  0035CE  ECBB  F052         	call	i2_printf	;wreg free
 34177                           
 34178                           ;monitor.c: 218:             printf("Pmin: %d lEP: %d EP: %d Plow:%d -- ", pmin/5, lrpe/
      +                          5, pe/5, pLow/5 );
 34179  0035D2  0EE3               	movlw	low STR_36
 34180  0035D4  0100               	movlb	0	; () banked
 34181  0035D6  6F77               	movwf	i2printf@fmt& (0+255),b
 34182  0035D8  0EFD               	movlw	high STR_36
 34183  0035DA  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34184  0035DC  0060  F948  F007   	movff	_pmin,i2___awdiv@dividend
 34185  0035E2  0060  F94C  F008   	movff	_pmin+1,i2___awdiv@dividend+1
 34186  0035E8  0E00               	movlw	0
 34187  0035EA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34188  0035EC  0E05               	movlw	5
 34189  0035EE  6E09               	movwf	i2___awdiv@divisor^0,c
 34190  0035F0  ECC1  F045         	call	i2___awdiv	;wreg free
 34191  0035F4  0060  F01C  F079   	movff	?i2___awdiv,?i2_printf+2
 34192  0035FA  0060  F020  F07A   	movff	?i2___awdiv+1,?i2_printf+3
 34193  003600  0060  F744  F007   	movff	_lrpe,i2___awdiv@dividend
 34194  003606  0060  F748  F008   	movff	_lrpe+1,i2___awdiv@dividend+1
 34195  00360C  0E00               	movlw	0
 34196  00360E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34197  003610  0E05               	movlw	5
 34198  003612  6E09               	movwf	i2___awdiv@divisor^0,c
 34199  003614  ECC1  F045         	call	i2___awdiv	;wreg free
 34200  003618  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 34201  00361E  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 34202  003624  0060  F764  F007   	movff	_pe,i2___awdiv@dividend
 34203  00362A  0060  F768  F008   	movff	_pe+1,i2___awdiv@dividend+1
 34204  003630  0E00               	movlw	0
 34205  003632  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34206  003634  0E05               	movlw	5
 34207  003636  6E09               	movwf	i2___awdiv@divisor^0,c
 34208  003638  ECC1  F045         	call	i2___awdiv	;wreg free
 34209  00363C  0060  F01C  F07D   	movff	?i2___awdiv,?i2_printf+6
 34210  003642  0060  F020  F07E   	movff	?i2___awdiv+1,?i2_printf+7
 34211  003648  0060  F754  F007   	movff	_pLow,i2___awdiv@dividend
 34212  00364E  0060  F758  F008   	movff	_pLow+1,i2___awdiv@dividend+1
 34213  003654  0E00               	movlw	0
 34214  003656  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34215  003658  0E05               	movlw	5
 34216  00365A  6E09               	movwf	i2___awdiv@divisor^0,c
 34217  00365C  ECC1  F045         	call	i2___awdiv	;wreg free
 34218  003660  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 34219  003666  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 34220  00366C  ECBB  F052         	call	i2_printf	;wreg free
 34221                           
 34222                           ;monitor.c: 219:             printf("HiLimit: %d LoLimit: %d -- Volume: %d\r\n", hiLimit
      +                          /5, loLimit/5, volume);
 34223  003670  0EBB               	movlw	low STR_37
 34224  003672  0100               	movlb	0	; () banked
 34225  003674  6F77               	movwf	i2printf@fmt& (0+255),b
 34226  003676  0EFD               	movlw	high STR_37
 34227  003678  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34228  00367A  0060  F73C  F007   	movff	_hiLimit,i2___awdiv@dividend
 34229  003680  0060  F740  F008   	movff	_hiLimit+1,i2___awdiv@dividend+1
 34230  003686  0E00               	movlw	0
 34231  003688  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34232  00368A  0E05               	movlw	5
 34233  00368C  6E09               	movwf	i2___awdiv@divisor^0,c
 34234  00368E  ECC1  F045         	call	i2___awdiv	;wreg free
 34235  003692  0060  F01C  F079   	movff	?i2___awdiv,?i2_printf+2
 34236  003698  0060  F020  F07A   	movff	?i2___awdiv+1,?i2_printf+3
 34237  00369E  0060  F734  F007   	movff	_loLimit,i2___awdiv@dividend
 34238  0036A4  0060  F738  F008   	movff	_loLimit+1,i2___awdiv@dividend+1
 34239  0036AA  0E00               	movlw	0
 34240  0036AC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34241  0036AE  0E05               	movlw	5
 34242  0036B0  6E09               	movwf	i2___awdiv@divisor^0,c
 34243  0036B2  ECC1  F045         	call	i2___awdiv	;wreg free
 34244  0036B6  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 34245  0036BC  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 34246  0036C2  0060  F78C  F07D   	movff	_volume,?i2_printf+6
 34247  0036C8  0060  F790  F07E   	movff	_volume+1,?i2_printf+7
 34248  0036CE  ECBB  F052         	call	i2_printf	;wreg free
 34249                           
 34250                           ;monitor.c: 220:             printf("ADCoffset: %d ADCVoffset: %d 12V: %d mV 5V: %d mV -
      +                          - ", adcOffset/8, adcVOffset/8, See12V(), See5V());
 34251  0036D2  0ECF               	movlw	low STR_38
 34252  0036D4  0100               	movlb	0	; () banked
 34253  0036D6  6F77               	movwf	i2printf@fmt& (0+255),b
 34254  0036D8  0EFC               	movlw	high STR_38
 34255  0036DA  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34256  0036DC  0060  F7E8  F007   	movff	_adcOffset,i2___awdiv@dividend
 34257  0036E2  0060  F7EC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 34258  0036E8  0E00               	movlw	0
 34259  0036EA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34260  0036EC  0E08               	movlw	8
 34261  0036EE  6E09               	movwf	i2___awdiv@divisor^0,c
 34262  0036F0  ECC1  F045         	call	i2___awdiv	;wreg free
 34263  0036F4  0060  F01C  F079   	movff	?i2___awdiv,?i2_printf+2
 34264  0036FA  0060  F020  F07A   	movff	?i2___awdiv+1,?i2_printf+3
 34265  003700  0060  F7E0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 34266  003706  0060  F7E4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 34267  00370C  0E00               	movlw	0
 34268  00370E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34269  003710  0E08               	movlw	8
 34270  003712  6E09               	movwf	i2___awdiv@divisor^0,c
 34271  003714  ECC1  F045         	call	i2___awdiv	;wreg free
 34272  003718  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 34273  00371E  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 34274  003724  EC1F  F037         	call	i2_See12V	;wreg free
 34275  003728  0060  F06C  F07D   	movff	?i2_See12V,?i2_printf+6
 34276  00372E  0060  F070  F07E   	movff	?i2_See12V+1,?i2_printf+7
 34277  003734  EC47  F03C         	call	i2_See5V	;wreg free
 34278  003738  0060  F06C  F07F   	movff	?i2_See5V,?i2_printf+8
 34279  00373E  0060  F070  F080   	movff	?i2_See5V+1,?i2_printf+9
 34280  003744  ECBB  F052         	call	i2_printf	;wreg free
 34281                           
 34282                           ;monitor.c: 221:             printf("Targets: Pmax: %d IP: %d EP: %d V: %d/%d\r\n", targ
      +                          etPmax/5, targetHigh/5, targetLow/5, volumeMax, volumeMin);
 34283  003748  0E67               	movlw	low STR_39
 34284  00374A  0100               	movlb	0	; () banked
 34285  00374C  6F77               	movwf	i2printf@fmt& (0+255),b
 34286  00374E  0EFD               	movlw	high STR_39
 34287  003750  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 34288  003752  0060  F9A8  F007   	movff	_targetPmax,i2___awdiv@dividend
 34289  003758  0060  F9AC  F008   	movff	_targetPmax+1,i2___awdiv@dividend+1
 34290  00375E  0E00               	movlw	0
 34291  003760  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34292  003762  0E05               	movlw	5
 34293  003764  6E09               	movwf	i2___awdiv@divisor^0,c
 34294  003766  ECC1  F045         	call	i2___awdiv	;wreg free
 34295  00376A  0060  F01C  F079   	movff	?i2___awdiv,?i2_printf+2
 34296  003770  0060  F020  F07A   	movff	?i2___awdiv+1,?i2_printf+3
 34297  003776  0060  F7A4  F007   	movff	_targetHigh,i2___awdiv@dividend
 34298  00377C  0060  F7A8  F008   	movff	_targetHigh+1,i2___awdiv@dividend+1
 34299  003782  0E00               	movlw	0
 34300  003784  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34301  003786  0E05               	movlw	5
 34302  003788  6E09               	movwf	i2___awdiv@divisor^0,c
 34303  00378A  ECC1  F045         	call	i2___awdiv	;wreg free
 34304  00378E  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 34305  003794  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 34306  00379A  0060  F79C  F007   	movff	_targetLow,i2___awdiv@dividend
 34307  0037A0  0060  F7A0  F008   	movff	_targetLow+1,i2___awdiv@dividend+1
 34308  0037A6  0E00               	movlw	0
 34309  0037A8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 34310  0037AA  0E05               	movlw	5
 34311  0037AC  6E09               	movwf	i2___awdiv@divisor^0,c
 34312  0037AE  ECC1  F045         	call	i2___awdiv	;wreg free
 34313  0037B2  0060  F01C  F07D   	movff	?i2___awdiv,?i2_printf+6
 34314  0037B8  0060  F020  F07E   	movff	?i2___awdiv+1,?i2_printf+7
 34315  0037BE  0060  F998  F07F   	movff	_volumeMax,?i2_printf+8
 34316  0037C4  0060  F99C  F080   	movff	_volumeMax+1,?i2_printf+9
 34317  0037CA  0060  F990  F081   	movff	_volumeMin,?i2_printf+10
 34318  0037D0  0060  F994  F082   	movff	_volumeMin+1,?i2_printf+11
 34319  0037D6  ECBB  F052         	call	i2_printf	;wreg free
 34320                           
 34321                           ; BSR set to: 2
 34322  0037DA  0012               	return		;funcret
 34323  0037DC                     __end_ofi2_MonitorDump:
 34324                           	opt callstack 0
 34325                           
 34326 ;; *************** function i2_See5V *****************
 34327 ;; Defined at:
 34328 ;;		line 822 in file "monitor.c"
 34329 ;; Parameters:    Size  Location     Type
 34330 ;;		None
 34331 ;; Auto vars:     Size  Location     Type
 34332 ;;  See5V           4   36[COMRAM] long 
 34333 ;;  See5V           2   34[COMRAM] short 
 34334 ;;  See5V           2   32[COMRAM] unsigned short 
 34335 ;; Return value:  Size  Location     Type
 34336 ;;                  2   26[COMRAM] short 
 34337 ;; Registers used:
 34338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34339 ;; Tracked objects:
 34340 ;;		On entry : 0/0
 34341 ;;		On exit  : 0/0
 34342 ;;		Unchanged: 0/0
 34343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34345 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34347 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34348 ;;Total ram usage:       14 bytes
 34349 ;; Hardware stack levels used:    1
 34350 ;; Hardware stack levels required when called:    2
 34351 ;; This function calls:
 34352 ;;		i2_AdcSeeData
 34353 ;;		i2___aldiv
 34354 ;; This function is called by:
 34355 ;;		_MonitorPressureTask
 34356 ;;		i2_MonitorDump
 34357 ;; This function uses a non-reentrant model
 34358 ;;
 34359                           
 34360                           	psect	text249
 34361  00788E                     __ptext249:
 34362                           	opt callstack 0
 34363  00788E                     i2_See5V:
 34364                           	opt callstack 12
 34365                           
 34366                           ;monitor.c: 823:     adc_result_t adc = AdcSeeData(1);
 34367                           
 34368                           ; BSR set to: 2
 34369                           ;incstack = 0
 34370  00788E  0E00               	movlw	0
 34371  007890  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 34372  007892  0E01               	movlw	1
 34373  007894  6E07               	movwf	i2AdcSeeData@id^0,c
 34374  007896  EC11  F04F         	call	i2_AdcSeeData	;wreg free
 34375  00789A  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See5V@adc
 34376  0078A0  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See5V@adc+1
 34377                           
 34378                           ;monitor.c: 824:     int32_t mv = adc;
 34379  0078A6  0060  F084  F025   	movff	i2See5V@adc,i2See5V@mv
 34380  0078AC  0060  F088  F026   	movff	i2See5V@adc+1,i2See5V@mv+1
 34381  0078B2  6A27               	clrf	(i2See5V@mv+2)^0,c
 34382  0078B4  6A28               	clrf	(i2See5V@mv+3)^0,c
 34383                           
 34384                           ;monitor.c: 825:     mv = ( mv*4096) / 4096;
 34385  0078B6  0060  F094  F01D   	movff	i2See5V@mv,??i2_See5V
 34386  0078BC  0060  F098  F01E   	movff	i2See5V@mv+1,??i2_See5V+1
 34387  0078C2  0060  F09C  F01F   	movff	i2See5V@mv+2,??i2_See5V+2
 34388  0078C8  0060  F0A0  F020   	movff	i2See5V@mv+3,??i2_See5V+3
 34389  0078CE  0E0C               	movlw	12
 34390  0078D0                     i2u1913_45:
 34391  0078D0  90D8               	bcf	status,0,c
 34392  0078D2  361D               	rlcf	??i2_See5V^0,f,c
 34393  0078D4  361E               	rlcf	(??i2_See5V+1)^0,f,c
 34394  0078D6  361F               	rlcf	(??i2_See5V+2)^0,f,c
 34395  0078D8  3620               	rlcf	(??i2_See5V+3)^0,f,c
 34396  0078DA  2EE8               	decfsz	wreg,f,c
 34397  0078DC  D7F9               	goto	i2u1913_45
 34398  0078DE  0060  F074  F00D   	movff	??i2_See5V,i2___aldiv@dividend
 34399  0078E4  0060  F078  F00E   	movff	??i2_See5V+1,i2___aldiv@dividend+1
 34400  0078EA  0060  F07C  F00F   	movff	??i2_See5V+2,i2___aldiv@dividend+2
 34401  0078F0  0060  F080  F010   	movff	??i2_See5V+3,i2___aldiv@dividend+3
 34402  0078F6  0E00               	movlw	0
 34403  0078F8  6E11               	movwf	i2___aldiv@divisor^0,c
 34404  0078FA  0E10               	movlw	16
 34405  0078FC  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 34406  0078FE  0E00               	movlw	0
 34407  007900  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 34408  007902  0E00               	movlw	0
 34409  007904  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 34410  007906  EC8A  F03D         	call	i2___aldiv	;wreg free
 34411  00790A  0060  F034  F025   	movff	?i2___aldiv,i2See5V@mv
 34412  007910  0060  F038  F026   	movff	?i2___aldiv+1,i2See5V@mv+1
 34413  007916  0060  F03C  F027   	movff	?i2___aldiv+2,i2See5V@mv+2
 34414  00791C  0060  F040  F028   	movff	?i2___aldiv+3,i2See5V@mv+3
 34415                           
 34416                           ;monitor.c: 826:     int16_t v12 = mv/2;
 34417  007922  0060  F094  F00D   	movff	i2See5V@mv,i2___aldiv@dividend
 34418  007928  0060  F098  F00E   	movff	i2See5V@mv+1,i2___aldiv@dividend+1
 34419  00792E  0060  F09C  F00F   	movff	i2See5V@mv+2,i2___aldiv@dividend+2
 34420  007934  0060  F0A0  F010   	movff	i2See5V@mv+3,i2___aldiv@dividend+3
 34421  00793A  0E02               	movlw	2
 34422  00793C  6E11               	movwf	i2___aldiv@divisor^0,c
 34423  00793E  0E00               	movlw	0
 34424  007940  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 34425  007942  0E00               	movlw	0
 34426  007944  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 34427  007946  0E00               	movlw	0
 34428  007948  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 34429  00794A  EC8A  F03D         	call	i2___aldiv	;wreg free
 34430  00794E  0060  F034  F023   	movff	?i2___aldiv,i2See5V@v12
 34431  007954  0060  F038  F024   	movff	?i2___aldiv+1,i2See5V@v12+1
 34432                           
 34433                           ;monitor.c: 827:     return v12;
 34434  00795A  0060  F08C  F01B   	movff	i2See5V@v12,?i2_See5V
 34435  007960  0060  F090  F01C   	movff	i2See5V@v12+1,?i2_See5V+1
 34436  007966  0012               	return		;funcret
 34437  007968                     __end_ofi2_See5V:
 34438                           	opt callstack 0
 34439                           
 34440 ;; *************** function i2_See12V *****************
 34441 ;; Defined at:
 34442 ;;		line 838 in file "monitor.c"
 34443 ;; Parameters:    Size  Location     Type
 34444 ;;		None
 34445 ;; Auto vars:     Size  Location     Type
 34446 ;;  See12V          4   36[COMRAM] long 
 34447 ;;  See12V          2   34[COMRAM] short 
 34448 ;;  See12V          2   32[COMRAM] unsigned short 
 34449 ;; Return value:  Size  Location     Type
 34450 ;;                  2   26[COMRAM] short 
 34451 ;; Registers used:
 34452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34453 ;; Tracked objects:
 34454 ;;		On entry : 0/0
 34455 ;;		On exit  : 0/0
 34456 ;;		Unchanged: 0/0
 34457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34459 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34461 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34462 ;;Total ram usage:       14 bytes
 34463 ;; Hardware stack levels used:    1
 34464 ;; Hardware stack levels required when called:    2
 34465 ;; This function calls:
 34466 ;;		i2_AdcSeeData
 34467 ;;		i2___aldiv
 34468 ;;		i2___lmul
 34469 ;; This function is called by:
 34470 ;;		_MonitorPressureTask
 34471 ;;		i2_MonitorDump
 34472 ;; This function uses a non-reentrant model
 34473 ;;
 34474                           
 34475                           	psect	text250
 34476  006E3E                     __ptext250:
 34477                           	opt callstack 0
 34478  006E3E                     i2_See12V:
 34479                           	opt callstack 12
 34480                           
 34481                           ;monitor.c: 839:     adc_result_t adc = AdcSeeData(3);
 34482                           
 34483                           ;incstack = 0
 34484  006E3E  0E00               	movlw	0
 34485  006E40  6E08               	movwf	(i2AdcSeeData@id+1)^0,c
 34486  006E42  0E03               	movlw	3
 34487  006E44  6E07               	movwf	i2AdcSeeData@id^0,c
 34488  006E46  EC11  F04F         	call	i2_AdcSeeData	;wreg free
 34489  006E4A  0060  F01C  F021   	movff	?i2_AdcSeeData,i2See12V@adc
 34490  006E50  0060  F020  F022   	movff	?i2_AdcSeeData+1,i2See12V@adc+1
 34491                           
 34492                           ;monitor.c: 840:     int32_t mv = adc;
 34493  006E56  0060  F084  F025   	movff	i2See12V@adc,i2See12V@mv
 34494  006E5C  0060  F088  F026   	movff	i2See12V@adc+1,i2See12V@mv+1
 34495  006E62  6A27               	clrf	(i2See12V@mv+2)^0,c
 34496  006E64  6A28               	clrf	(i2See12V@mv+3)^0,c
 34497                           
 34498                           ;monitor.c: 841:     mv = ( mv*4096) / 4096;
 34499  006E66  0060  F094  F01D   	movff	i2See12V@mv,??i2_See12V
 34500  006E6C  0060  F098  F01E   	movff	i2See12V@mv+1,??i2_See12V+1
 34501  006E72  0060  F09C  F01F   	movff	i2See12V@mv+2,??i2_See12V+2
 34502  006E78  0060  F0A0  F020   	movff	i2See12V@mv+3,??i2_See12V+3
 34503  006E7E  0E0C               	movlw	12
 34504  006E80                     i2u1914_45:
 34505  006E80  90D8               	bcf	status,0,c
 34506  006E82  361D               	rlcf	??i2_See12V^0,f,c
 34507  006E84  361E               	rlcf	(??i2_See12V+1)^0,f,c
 34508  006E86  361F               	rlcf	(??i2_See12V+2)^0,f,c
 34509  006E88  3620               	rlcf	(??i2_See12V+3)^0,f,c
 34510  006E8A  2EE8               	decfsz	wreg,f,c
 34511  006E8C  D7F9               	goto	i2u1914_45
 34512  006E8E  0060  F074  F00D   	movff	??i2_See12V,i2___aldiv@dividend
 34513  006E94  0060  F078  F00E   	movff	??i2_See12V+1,i2___aldiv@dividend+1
 34514  006E9A  0060  F07C  F00F   	movff	??i2_See12V+2,i2___aldiv@dividend+2
 34515  006EA0  0060  F080  F010   	movff	??i2_See12V+3,i2___aldiv@dividend+3
 34516  006EA6  0E00               	movlw	0
 34517  006EA8  6E11               	movwf	i2___aldiv@divisor^0,c
 34518  006EAA  0E10               	movlw	16
 34519  006EAC  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 34520  006EAE  0E00               	movlw	0
 34521  006EB0  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 34522  006EB2  0E00               	movlw	0
 34523  006EB4  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 34524  006EB6  EC8A  F03D         	call	i2___aldiv	;wreg free
 34525  006EBA  0060  F034  F025   	movff	?i2___aldiv,i2See12V@mv
 34526  006EC0  0060  F038  F026   	movff	?i2___aldiv+1,i2See12V@mv+1
 34527  006EC6  0060  F03C  F027   	movff	?i2___aldiv+2,i2See12V@mv+2
 34528  006ECC  0060  F040  F028   	movff	?i2___aldiv+3,i2See12V@mv+3
 34529                           
 34530                           ;monitor.c: 842:     int16_t v12 = (mv*33)/10;
 34531  006ED2  0060  F094  F001   	movff	i2See12V@mv,i2___lmul@multiplier
 34532  006ED8  0060  F098  F002   	movff	i2See12V@mv+1,i2___lmul@multiplier+1
 34533  006EDE  0060  F09C  F003   	movff	i2See12V@mv+2,i2___lmul@multiplier+2
 34534  006EE4  0060  F0A0  F004   	movff	i2See12V@mv+3,i2___lmul@multiplier+3
 34535  006EEA  0E21               	movlw	33
 34536  006EEC  6E05               	movwf	i2___lmul@multiplicand^0,c
 34537  006EEE  0E00               	movlw	0
 34538  006EF0  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 34539  006EF2  0E00               	movlw	0
 34540  006EF4  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 34541  006EF6  0E00               	movlw	0
 34542  006EF8  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 34543  006EFA  ECBE  F04A         	call	i2___lmul	;wreg free
 34544  006EFE  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 34545  006F04  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 34546  006F0A  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 34547  006F10  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 34548  006F16  0E0A               	movlw	10
 34549  006F18  6E11               	movwf	i2___aldiv@divisor^0,c
 34550  006F1A  0E00               	movlw	0
 34551  006F1C  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 34552  006F1E  0E00               	movlw	0
 34553  006F20  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 34554  006F22  0E00               	movlw	0
 34555  006F24  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 34556  006F26  EC8A  F03D         	call	i2___aldiv	;wreg free
 34557  006F2A  0060  F034  F023   	movff	?i2___aldiv,i2See12V@v12
 34558  006F30  0060  F038  F024   	movff	?i2___aldiv+1,i2See12V@v12+1
 34559                           
 34560                           ;monitor.c: 843:     return v12;
 34561  006F36  0060  F08C  F01B   	movff	i2See12V@v12,?i2_See12V
 34562  006F3C  0060  F090  F01C   	movff	i2See12V@v12+1,?i2_See12V+1
 34563  006F42  0012               	return		;funcret
 34564  006F44                     __end_ofi2_See12V:
 34565                           	opt callstack 0
 34566                           
 34567 ;; *************** function i2_AdcSeeData *****************
 34568 ;; Defined at:
 34569 ;;		line 81 in file "monitor.c"
 34570 ;; Parameters:    Size  Location     Type
 34571 ;;  id              2    6[COMRAM] int 
 34572 ;; Auto vars:     Size  Location     Type
 34573 ;;  AdcSeeData      2    8[COMRAM] unsigned short 
 34574 ;; Return value:  Size  Location     Type
 34575 ;;                  2    6[COMRAM] unsigned short 
 34576 ;; Registers used:
 34577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34578 ;; Tracked objects:
 34579 ;;		On entry : 0/0
 34580 ;;		On exit  : 0/0
 34581 ;;		Unchanged: 0/0
 34582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34587 ;;Total ram usage:        4 bytes
 34588 ;; Hardware stack levels used:    1
 34589 ;; Hardware stack levels required when called:    1
 34590 ;; This function calls:
 34591 ;;		i2___wmul
 34592 ;; This function is called by:
 34593 ;;		i2_See5V
 34594 ;;		i2_See12V
 34595 ;; This function uses a non-reentrant model
 34596 ;;
 34597                           
 34598                           	psect	text251
 34599  009E22                     __ptext251:
 34600                           	opt callstack 0
 34601  009E22                     i2_AdcSeeData:
 34602                           	opt callstack 12
 34603                           
 34604                           ;monitor.c: 82:     adc_result_t data;;monitor.c: 83:     data = adcChannels[id].data;
 34605                           
 34606                           ;incstack = 0
 34607  009E22  0060  F01C  F001   	movff	i2AdcSeeData@id,i2___wmul@multiplier
 34608  009E28  0060  F020  F002   	movff	i2AdcSeeData@id+1,i2___wmul@multiplier+1
 34609  009E2E  0E00               	movlw	0
 34610  009E30  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 34611  009E32  0E05               	movlw	5
 34612  009E34  6E03               	movwf	i2___wmul@multiplicand^0,c
 34613  009E36  ECBA  F051         	call	i2___wmul	;wreg free
 34614  009E3A  0EBE               	movlw	low (_adcChannels+2)
 34615  009E3C  2401               	addwf	?i2___wmul^0,w,c
 34616  009E3E  6ED9               	movwf	fsr2l,c
 34617  009E40  0E02               	movlw	high (_adcChannels+2)
 34618  009E42  2002               	addwfc	(?i2___wmul+1)^0,w,c
 34619  009E44  6EDA               	movwf	fsr2h,c
 34620  009E46  006F FF78  F009    	movff	postinc2,i2AdcSeeData@data
 34621  009E4C  006F FF74  F00A    	movff	postdec2,i2AdcSeeData@data+1
 34622                           
 34623                           ;monitor.c: 85:     return data;
 34624  009E52  0060  F024  F007   	movff	i2AdcSeeData@data,?i2_AdcSeeData
 34625  009E58  0060  F028  F008   	movff	i2AdcSeeData@data+1,?i2_AdcSeeData+1
 34626  009E5E  0012               	return		;funcret
 34627  009E60                     __end_ofi2_AdcSeeData:
 34628                           	opt callstack 0
 34629                           
 34630 ;; *************** function i2_AdcDataReady *****************
 34631 ;; Defined at:
 34632 ;;		line 77 in file "monitor.c"
 34633 ;; Parameters:    Size  Location     Type
 34634 ;;  id              2    6[COMRAM] int 
 34635 ;; Auto vars:     Size  Location     Type
 34636 ;;		None
 34637 ;; Return value:  Size  Location     Type
 34638 ;;                  1    wreg      _Bool 
 34639 ;; Registers used:
 34640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34641 ;; Tracked objects:
 34642 ;;		On entry : 3D/2
 34643 ;;		On exit  : 0/0
 34644 ;;		Unchanged: 0/0
 34645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34650 ;;Total ram usage:        2 bytes
 34651 ;; Hardware stack levels used:    1
 34652 ;; Hardware stack levels required when called:    1
 34653 ;; This function calls:
 34654 ;;		i2___wmul
 34655 ;; This function is called by:
 34656 ;;		_MonitorPressureTask
 34657 ;; This function uses a non-reentrant model
 34658 ;;
 34659                           
 34660                           	psect	text252
 34661  00A41E                     __ptext252:
 34662                           	opt callstack 0
 34663  00A41E                     i2_AdcDataReady:
 34664                           	opt callstack 13
 34665                           
 34666                           ;monitor.c: 78:     return adcChannels[id].dataValid;
 34667                           
 34668                           ;incstack = 0
 34669  00A41E  0060  F01C  F001   	movff	i2AdcDataReady@id,i2___wmul@multiplier
 34670  00A424  0060  F020  F002   	movff	i2AdcDataReady@id+1,i2___wmul@multiplier+1
 34671  00A42A  0E00               	movlw	0
 34672  00A42C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 34673  00A42E  0E05               	movlw	5
 34674  00A430  6E03               	movwf	i2___wmul@multiplicand^0,c
 34675  00A432  ECBA  F051         	call	i2___wmul	;wreg free
 34676  00A436  0EBD               	movlw	low (_adcChannels+1)
 34677  00A438  2401               	addwf	?i2___wmul^0,w,c
 34678  00A43A  6ED9               	movwf	fsr2l,c
 34679  00A43C  0E02               	movlw	high (_adcChannels+1)
 34680  00A43E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 34681  00A440  6EDA               	movwf	fsr2h,c
 34682  00A442  50DF               	movf	indf2,w,c
 34683  00A444  0012               	return		;funcret
 34684  00A446                     __end_ofi2_AdcDataReady:
 34685                           	opt callstack 0
 34686                           
 34687 ;; *************** function _isqrt *****************
 34688 ;; Defined at:
 34689 ;;		line 3 in file "../Controller.X/cmath.c"
 34690 ;; Parameters:    Size  Location     Type
 34691 ;;  x               2    0[COMRAM] unsigned short 
 34692 ;; Auto vars:     Size  Location     Type
 34693 ;;  one             2    8[COMRAM] unsigned short 
 34694 ;;  res             2    6[COMRAM] unsigned short 
 34695 ;;  op              2    4[COMRAM] unsigned short 
 34696 ;; Return value:  Size  Location     Type
 34697 ;;                  2    0[COMRAM] unsigned short 
 34698 ;; Registers used:
 34699 ;;		wreg, status,2, status,0
 34700 ;; Tracked objects:
 34701 ;;		On entry : 3F/0
 34702 ;;		On exit  : 3F/0
 34703 ;;		Unchanged: 3F/0
 34704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34706 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34708 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34709 ;;Total ram usage:       10 bytes
 34710 ;; Hardware stack levels used:    1
 34711 ;; This function calls:
 34712 ;;		Nothing
 34713 ;; This function is called by:
 34714 ;;		_MonitorPressureTask
 34715 ;; This function uses a non-reentrant model
 34716 ;;
 34717                           
 34718                           	psect	text253
 34719  008478                     __ptext253:
 34720                           	opt callstack 0
 34721  008478                     _isqrt:
 34722                           	opt callstack 14
 34723                           
 34724                           ; BSR set to: 0
 34725                           ;../Controller.X/cmath.c: 3: uint16_t isqrt(uint16_t x);../Controller.X/cmath.c: 4: {;..
      +                          /Controller.X/cmath.c: 5:     uint16_t op, res, one;;../Controller.X/cmath.c: 7:     op 
      +                          = x;
 34726                           
 34727                           ;incstack = 0
 34728  008478  0060  F004  F005   	movff	isqrt@x,isqrt@op
 34729  00847E  0060  F008  F006   	movff	isqrt@x+1,isqrt@op+1
 34730                           
 34731                           ; BSR set to: 0
 34732                           ;../Controller.X/cmath.c: 8:     res = 0;
 34733  008484  0E00               	movlw	0
 34734  008486  6E08               	movwf	(isqrt@res+1)^0,c
 34735  008488  0E00               	movlw	0
 34736  00848A  6E07               	movwf	isqrt@res^0,c
 34737                           
 34738                           ;../Controller.X/cmath.c: 11:     one = 1 << 14;
 34739  00848C  0E40               	movlw	64
 34740  00848E  6E0A               	movwf	(isqrt@one+1)^0,c
 34741  008490  0E00               	movlw	0
 34742  008492  6E09               	movwf	isqrt@one^0,c
 34743                           
 34744                           ;../Controller.X/cmath.c: 12:     while (one > op) one >>= 2;
 34745  008494  D006               	goto	i2l13116
 34746  008496                     i2l13114:
 34747                           
 34748                           ; BSR set to: 0
 34749  008496  90D8               	bcf	status,0,c
 34750  008498  320A               	rrcf	(isqrt@one+1)^0,f,c
 34751  00849A  3209               	rrcf	isqrt@one^0,f,c
 34752  00849C  90D8               	bcf	status,0,c
 34753  00849E  320A               	rrcf	(isqrt@one+1)^0,f,c
 34754  0084A0  3209               	rrcf	isqrt@one^0,f,c
 34755  0084A2                     i2l13116:
 34756                           
 34757                           ; BSR set to: 0
 34758  0084A2  5009               	movf	isqrt@one^0,w,c
 34759  0084A4  5C05               	subwf	isqrt@op^0,w,c
 34760  0084A6  500A               	movf	(isqrt@one+1)^0,w,c
 34761  0084A8  5806               	subwfb	(isqrt@op+1)^0,w,c
 34762  0084AA  B0D8               	btfsc	status,0,c
 34763  0084AC  D02D               	goto	i2l6
 34764  0084AE  D7F3               	goto	i2l13114
 34765  0084B0                     i2l13118:
 34766                           
 34767                           ; BSR set to: 0
 34768                           ;../Controller.X/cmath.c: 15:         if (op >= res + one) {
 34769  0084B0  5009               	movf	isqrt@one^0,w,c
 34770  0084B2  2407               	addwf	isqrt@res^0,w,c
 34771  0084B4  6E03               	movwf	??_isqrt^0,c
 34772  0084B6  500A               	movf	(isqrt@one+1)^0,w,c
 34773  0084B8  2008               	addwfc	(isqrt@res+1)^0,w,c
 34774  0084BA  6E04               	movwf	(??_isqrt+1)^0,c
 34775  0084BC  5003               	movf	??_isqrt^0,w,c
 34776  0084BE  5C05               	subwf	isqrt@op^0,w,c
 34777  0084C0  5004               	movf	(??_isqrt+1)^0,w,c
 34778  0084C2  5806               	subwfb	(isqrt@op+1)^0,w,c
 34779  0084C4  A0D8               	btfss	status,0,c
 34780  0084C6  D017               	goto	i2l13122
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;../Controller.X/cmath.c: 16:             op -= res + one;
 34784  0084C8  5009               	movf	isqrt@one^0,w,c
 34785  0084CA  2407               	addwf	isqrt@res^0,w,c
 34786  0084CC  6E03               	movwf	??_isqrt^0,c
 34787  0084CE  500A               	movf	(isqrt@one+1)^0,w,c
 34788  0084D0  2008               	addwfc	(isqrt@res+1)^0,w,c
 34789  0084D2  6E04               	movwf	(??_isqrt+1)^0,c
 34790  0084D4  5003               	movf	??_isqrt^0,w,c
 34791  0084D6  5E05               	subwf	isqrt@op^0,f,c
 34792  0084D8  5004               	movf	(??_isqrt+1)^0,w,c
 34793  0084DA  5A06               	subwfb	(isqrt@op+1)^0,f,c
 34794                           
 34795                           ;../Controller.X/cmath.c: 17:             res += one << 1;
 34796  0084DC  0060  F024  F003   	movff	isqrt@one,??_isqrt
 34797  0084E2  0060  F028  F004   	movff	isqrt@one+1,??_isqrt+1
 34798  0084E8  90D8               	bcf	status,0,c
 34799  0084EA  3603               	rlcf	??_isqrt^0,f,c
 34800  0084EC  3604               	rlcf	(??_isqrt+1)^0,f,c
 34801  0084EE  5003               	movf	??_isqrt^0,w,c
 34802  0084F0  2607               	addwf	isqrt@res^0,f,c
 34803  0084F2  5004               	movf	(??_isqrt+1)^0,w,c
 34804  0084F4  2208               	addwfc	(isqrt@res+1)^0,f,c
 34805  0084F6                     i2l13122:
 34806                           
 34807                           ; BSR set to: 0
 34808                           ;../Controller.X/cmath.c: 19:         res >>= 1;
 34809  0084F6  90D8               	bcf	status,0,c
 34810  0084F8  3208               	rrcf	(isqrt@res+1)^0,f,c
 34811  0084FA  3207               	rrcf	isqrt@res^0,f,c
 34812                           
 34813                           ; BSR set to: 0
 34814                           ;../Controller.X/cmath.c: 20:         one >>= 2;
 34815  0084FC  90D8               	bcf	status,0,c
 34816  0084FE  320A               	rrcf	(isqrt@one+1)^0,f,c
 34817  008500  3209               	rrcf	isqrt@one^0,f,c
 34818  008502  90D8               	bcf	status,0,c
 34819  008504  320A               	rrcf	(isqrt@one+1)^0,f,c
 34820  008506  3209               	rrcf	isqrt@one^0,f,c
 34821  008508                     i2l6:
 34822                           
 34823                           ; BSR set to: 0
 34824                           ;../Controller.X/cmath.c: 14:     while (one != 0) {
 34825  008508  5009               	movf	isqrt@one^0,w,c
 34826  00850A  100A               	iorwf	(isqrt@one+1)^0,w,c
 34827  00850C  A4D8               	btfss	status,2,c
 34828  00850E  D7D0               	goto	i2l13118
 34829                           
 34830                           ; BSR set to: 0
 34831                           ;../Controller.X/cmath.c: 22:     return res;
 34832  008510  0060  F01C  F001   	movff	isqrt@res,?_isqrt
 34833  008516  0060  F020  F002   	movff	isqrt@res+1,?_isqrt+1
 34834                           
 34835                           ; BSR set to: 0
 34836  00851C  0012               	return		;funcret
 34837  00851E                     __end_of_isqrt:
 34838                           	opt callstack 0
 34839                           
 34840 ;; *************** function ___lwdiv *****************
 34841 ;; Defined at:
 34842 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 34843 ;; Parameters:    Size  Location     Type
 34844 ;;  dividend        2    0[COMRAM] unsigned int 
 34845 ;;  divisor         2    2[COMRAM] unsigned int 
 34846 ;; Auto vars:     Size  Location     Type
 34847 ;;  quotient        2    4[COMRAM] unsigned int 
 34848 ;;  counter         1    6[COMRAM] unsigned char 
 34849 ;; Return value:  Size  Location     Type
 34850 ;;                  2    0[COMRAM] unsigned int 
 34851 ;; Registers used:
 34852 ;;		wreg, status,2, status,0
 34853 ;; Tracked objects:
 34854 ;;		On entry : 3F/0
 34855 ;;		On exit  : 3F/0
 34856 ;;		Unchanged: 3F/0
 34857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34861 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34862 ;;Total ram usage:        7 bytes
 34863 ;; Hardware stack levels used:    1
 34864 ;; This function calls:
 34865 ;;		Nothing
 34866 ;; This function is called by:
 34867 ;;		_MonitorPressureTask
 34868 ;; This function uses a non-reentrant model
 34869 ;;
 34870                           
 34871                           	psect	text254
 34872  009688                     __ptext254:
 34873                           	opt callstack 0
 34874  009688                     ___lwdiv:
 34875                           	opt callstack 14
 34876                           
 34877                           ; BSR set to: 0
 34878                           
 34879                           ; BSR set to: 0
 34880                           ;incstack = 0
 34881  009688  0E00               	movlw	0
 34882  00968A  6E06               	movwf	(___lwdiv@quotient+1)^0,c
 34883  00968C  0E00               	movlw	0
 34884  00968E  6E05               	movwf	___lwdiv@quotient^0,c
 34885                           
 34886                           ; BSR set to: 0
 34887  009690  5003               	movf	___lwdiv@divisor^0,w,c
 34888  009692  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 34889  009694  B4D8               	btfsc	status,2,c
 34890  009696  D01C               	goto	i2l4098
 34891                           
 34892                           ; BSR set to: 0
 34893  009698  0E01               	movlw	1
 34894  00969A  6E07               	movwf	___lwdiv@counter^0,c
 34895  00969C  D004               	goto	i2l13784
 34896  00969E                     i2l13782:
 34897                           
 34898                           ; BSR set to: 0
 34899  00969E  90D8               	bcf	status,0,c
 34900  0096A0  3603               	rlcf	___lwdiv@divisor^0,f,c
 34901  0096A2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 34902  0096A4  2A07               	incf	___lwdiv@counter^0,f,c
 34903  0096A6                     i2l13784:
 34904                           
 34905                           ; BSR set to: 0
 34906  0096A6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 34907  0096A8  D7FA               	goto	i2l13782
 34908  0096AA                     i2u1182_40:
 34909                           
 34910                           ; BSR set to: 0
 34911  0096AA  90D8               	bcf	status,0,c
 34912  0096AC  3605               	rlcf	___lwdiv@quotient^0,f,c
 34913  0096AE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
 34914                           
 34915                           ; BSR set to: 0
 34916  0096B0  5003               	movf	___lwdiv@divisor^0,w,c
 34917  0096B2  5C01               	subwf	___lwdiv@dividend^0,w,c
 34918  0096B4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34919  0096B6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 34920  0096B8  A0D8               	btfss	status,0,c
 34921  0096BA  D005               	goto	i2l13794
 34922                           
 34923                           ; BSR set to: 0
 34924  0096BC  5003               	movf	___lwdiv@divisor^0,w,c
 34925  0096BE  5E01               	subwf	___lwdiv@dividend^0,f,c
 34926  0096C0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 34927  0096C2  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 34928                           
 34929                           ; BSR set to: 0
 34930  0096C4  8005               	bsf	___lwdiv@quotient^0,0,c
 34931  0096C6                     i2l13794:
 34932                           
 34933                           ; BSR set to: 0
 34934  0096C6  90D8               	bcf	status,0,c
 34935  0096C8  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 34936  0096CA  3203               	rrcf	___lwdiv@divisor^0,f,c
 34937                           
 34938                           ; BSR set to: 0
 34939  0096CC  2E07               	decfsz	___lwdiv@counter^0,f,c
 34940  0096CE  D7ED               	goto	i2u1182_40
 34941  0096D0                     i2l4098:
 34942                           
 34943                           ; BSR set to: 0
 34944  0096D0  0060  F014  F001   	movff	___lwdiv@quotient,?___lwdiv
 34945  0096D6  0060  F018  F002   	movff	___lwdiv@quotient+1,?___lwdiv+1
 34946                           
 34947                           ; BSR set to: 0
 34948  0096DC  0012               	return		;funcret
 34949  0096DE                     __end_of___lwdiv:
 34950                           	opt callstack 0
 34951                           
 34952 ;; *************** function ___lldiv *****************
 34953 ;; Defined at:
 34954 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 34955 ;; Parameters:    Size  Location     Type
 34956 ;;  dividend        4    0[COMRAM] unsigned long 
 34957 ;;  divisor         4    4[COMRAM] unsigned long 
 34958 ;; Auto vars:     Size  Location     Type
 34959 ;;  quotient        4    8[COMRAM] unsigned long 
 34960 ;;  counter         1   12[COMRAM] unsigned char 
 34961 ;; Return value:  Size  Location     Type
 34962 ;;                  4    0[COMRAM] unsigned long 
 34963 ;; Registers used:
 34964 ;;		wreg, status,2, status,0
 34965 ;; Tracked objects:
 34966 ;;		On entry : 3D/0
 34967 ;;		On exit  : 3D/0
 34968 ;;		Unchanged: 3D/0
 34969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34970 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34973 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34974 ;;Total ram usage:       13 bytes
 34975 ;; Hardware stack levels used:    1
 34976 ;; This function calls:
 34977 ;;		Nothing
 34978 ;; This function is called by:
 34979 ;;		_MonitorPressureTask
 34980 ;; This function uses a non-reentrant model
 34981 ;;
 34982                           
 34983                           	psect	text255
 34984  008A70                     __ptext255:
 34985                           	opt callstack 0
 34986  008A70                     ___lldiv:
 34987                           	opt callstack 14
 34988                           
 34989                           ; BSR set to: 0
 34990                           ;incstack = 0
 34991  008A70  0E00               	movlw	0
 34992  008A72  6E09               	movwf	___lldiv@quotient^0,c
 34993  008A74  0E00               	movlw	0
 34994  008A76  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 34995  008A78  0E00               	movlw	0
 34996  008A7A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 34997  008A7C  0E00               	movlw	0
 34998  008A7E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 34999  008A80  5005               	movf	___lldiv@divisor^0,w,c
 35000  008A82  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 35001  008A84  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 35002  008A86  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 35003  008A88  B4D8               	btfsc	status,2,c
 35004  008A8A  D02A               	goto	i2l3634
 35005  008A8C  0E01               	movlw	1
 35006  008A8E  6E0D               	movwf	___lldiv@counter^0,c
 35007  008A90  D006               	goto	i2l13762
 35008  008A92                     i2l13760:
 35009  008A92  90D8               	bcf	status,0,c
 35010  008A94  3605               	rlcf	___lldiv@divisor^0,f,c
 35011  008A96  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 35012  008A98  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 35013  008A9A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 35014  008A9C  2A0D               	incf	___lldiv@counter^0,f,c
 35015  008A9E                     i2l13762:
 35016  008A9E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 35017  008AA0  D7F8               	goto	i2l13760
 35018  008AA2                     i2u1179_40:
 35019  008AA2  90D8               	bcf	status,0,c
 35020  008AA4  3609               	rlcf	___lldiv@quotient^0,f,c
 35021  008AA6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 35022  008AA8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 35023  008AAA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 35024  008AAC  5005               	movf	___lldiv@divisor^0,w,c
 35025  008AAE  5C01               	subwf	___lldiv@dividend^0,w,c
 35026  008AB0  5006               	movf	(___lldiv@divisor+1)^0,w,c
 35027  008AB2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 35028  008AB4  5007               	movf	(___lldiv@divisor+2)^0,w,c
 35029  008AB6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 35030  008AB8  5008               	movf	(___lldiv@divisor+3)^0,w,c
 35031  008ABA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 35032  008ABC  A0D8               	btfss	status,0,c
 35033  008ABE  D009               	goto	i2l13772
 35034  008AC0  5005               	movf	___lldiv@divisor^0,w,c
 35035  008AC2  5E01               	subwf	___lldiv@dividend^0,f,c
 35036  008AC4  5006               	movf	(___lldiv@divisor+1)^0,w,c
 35037  008AC6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 35038  008AC8  5007               	movf	(___lldiv@divisor+2)^0,w,c
 35039  008ACA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 35040  008ACC  5008               	movf	(___lldiv@divisor+3)^0,w,c
 35041  008ACE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 35042  008AD0  8009               	bsf	___lldiv@quotient^0,0,c
 35043  008AD2                     i2l13772:
 35044  008AD2  90D8               	bcf	status,0,c
 35045  008AD4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 35046  008AD6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 35047  008AD8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 35048  008ADA  3205               	rrcf	___lldiv@divisor^0,f,c
 35049  008ADC  2E0D               	decfsz	___lldiv@counter^0,f,c
 35050  008ADE  D7E1               	goto	i2u1179_40
 35051  008AE0                     i2l3634:
 35052  008AE0  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 35053  008AE6  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 35054  008AEC  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 35055  008AF2  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 35056  008AF8  0012               	return		;funcret
 35057  008AFA                     __end_of___lldiv:
 35058                           	opt callstack 0
 35059                           
 35060 ;; *************** function _SetVBelowMinAlarm *****************
 35061 ;; Defined at:
 35062 ;;		line 244 in file "alarm.c"
 35063 ;; Parameters:    Size  Location     Type
 35064 ;;		None
 35065 ;; Auto vars:     Size  Location     Type
 35066 ;;		None
 35067 ;; Return value:  Size  Location     Type
 35068 ;;                  1    wreg      void 
 35069 ;; Registers used:
 35070 ;;		wreg, status,2
 35071 ;; Tracked objects:
 35072 ;;		On entry : 3F/2
 35073 ;;		On exit  : 3F/2
 35074 ;;		Unchanged: 0/0
 35075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35080 ;;Total ram usage:        0 bytes
 35081 ;; Hardware stack levels used:    1
 35082 ;; This function calls:
 35083 ;;		Nothing
 35084 ;; This function is called by:
 35085 ;;		_MonitorPressureTask
 35086 ;; This function uses a non-reentrant model
 35087 ;;
 35088                           
 35089                           	psect	text256
 35090  00AF90                     __ptext256:
 35091                           	opt callstack 0
 35092  00AF90                     _SetVBelowMinAlarm:
 35093                           	opt callstack 14
 35094                           
 35095                           ; BSR set to: 2
 35096                           
 35097                           ;incstack = 0
 35098  00AF90  0E01               	movlw	1
 35099  00AF92  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 35100                           
 35101                           ; BSR set to: 2
 35102  00AF94  0012               	return		;funcret
 35103  00AF96                     __end_of_SetVBelowMinAlarm:
 35104                           	opt callstack 0
 35105                           
 35106 ;; *************** function _SetVAboveMaxAlarm *****************
 35107 ;; Defined at:
 35108 ;;		line 243 in file "alarm.c"
 35109 ;; Parameters:    Size  Location     Type
 35110 ;;		None
 35111 ;; Auto vars:     Size  Location     Type
 35112 ;;		None
 35113 ;; Return value:  Size  Location     Type
 35114 ;;                  1    wreg      void 
 35115 ;; Registers used:
 35116 ;;		wreg, status,2
 35117 ;; Tracked objects:
 35118 ;;		On entry : 3F/1
 35119 ;;		On exit  : 3F/2
 35120 ;;		Unchanged: 0/0
 35121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35126 ;;Total ram usage:        0 bytes
 35127 ;; Hardware stack levels used:    1
 35128 ;; This function calls:
 35129 ;;		Nothing
 35130 ;; This function is called by:
 35131 ;;		_MonitorPressureTask
 35132 ;; This function uses a non-reentrant model
 35133 ;;
 35134                           
 35135                           	psect	text257
 35136  00AE96                     __ptext257:
 35137                           	opt callstack 0
 35138  00AE96                     _SetVAboveMaxAlarm:
 35139                           	opt callstack 14
 35140                           
 35141                           ; BSR set to: 1
 35142                           
 35143                           ; BSR set to: 2
 35144                           ;incstack = 0
 35145  00AE96  0E01               	movlw	1
 35146  00AE98  0102               	movlb	2	; () banked
 35147  00AE9A  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 35148                           
 35149                           ; BSR set to: 2
 35150  00AE9C  0012               	return		;funcret
 35151  00AE9E                     __end_of_SetVAboveMaxAlarm:
 35152                           	opt callstack 0
 35153                           
 35154 ;; *************** function _SetTdiTooLongAlarm *****************
 35155 ;; Defined at:
 35156 ;;		line 241 in file "alarm.c"
 35157 ;; Parameters:    Size  Location     Type
 35158 ;;		None
 35159 ;; Auto vars:     Size  Location     Type
 35160 ;;		None
 35161 ;; Return value:  Size  Location     Type
 35162 ;;                  1    wreg      void 
 35163 ;; Registers used:
 35164 ;;		wreg, status,2
 35165 ;; Tracked objects:
 35166 ;;		On entry : 3F/1
 35167 ;;		On exit  : 3F/2
 35168 ;;		Unchanged: 0/0
 35169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35174 ;;Total ram usage:        0 bytes
 35175 ;; Hardware stack levels used:    1
 35176 ;; This function calls:
 35177 ;;		Nothing
 35178 ;; This function is called by:
 35179 ;;		_MonitorPressureTask
 35180 ;; This function uses a non-reentrant model
 35181 ;;
 35182                           
 35183                           	psect	text258
 35184  00AE9E                     __ptext258:
 35185                           	opt callstack 0
 35186  00AE9E                     _SetTdiTooLongAlarm:
 35187                           	opt callstack 14
 35188                           
 35189                           ; BSR set to: 1
 35190                           
 35191                           ; BSR set to: 2
 35192                           ;incstack = 0
 35193  00AE9E  0E01               	movlw	1
 35194  00AEA0  0102               	movlb	2	; () banked
 35195  00AEA2  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 35196                           
 35197                           ; BSR set to: 2
 35198  00AEA4  0012               	return		;funcret
 35199  00AEA6                     __end_of_SetTdiTooLongAlarm:
 35200                           	opt callstack 0
 35201                           
 35202 ;; *************** function _SetTdeTooLongAlarm *****************
 35203 ;; Defined at:
 35204 ;;		line 242 in file "alarm.c"
 35205 ;; Parameters:    Size  Location     Type
 35206 ;;		None
 35207 ;; Auto vars:     Size  Location     Type
 35208 ;;		None
 35209 ;; Return value:  Size  Location     Type
 35210 ;;                  1    wreg      void 
 35211 ;; Registers used:
 35212 ;;		wreg, status,2
 35213 ;; Tracked objects:
 35214 ;;		On entry : 3F/1
 35215 ;;		On exit  : 3F/2
 35216 ;;		Unchanged: 0/0
 35217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35222 ;;Total ram usage:        0 bytes
 35223 ;; Hardware stack levels used:    1
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_MonitorPressureTask
 35228 ;; This function uses a non-reentrant model
 35229 ;;
 35230                           
 35231                           	psect	text259
 35232  00AEA6                     __ptext259:
 35233                           	opt callstack 0
 35234  00AEA6                     _SetTdeTooLongAlarm:
 35235                           	opt callstack 14
 35236                           
 35237                           ; BSR set to: 1
 35238                           
 35239                           ; BSR set to: 2
 35240                           ;incstack = 0
 35241  00AEA6  0E01               	movlw	1
 35242  00AEA8  0102               	movlb	2	; () banked
 35243  00AEAA  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 35244                           
 35245                           ; BSR set to: 2
 35246  00AEAC  0012               	return		;funcret
 35247  00AEAE                     __end_of_SetTdeTooLongAlarm:
 35248                           	opt callstack 0
 35249                           
 35250 ;; *************** function _SetIPBelowSetAlarm *****************
 35251 ;; Defined at:
 35252 ;;		line 239 in file "alarm.c"
 35253 ;; Parameters:    Size  Location     Type
 35254 ;;		None
 35255 ;; Auto vars:     Size  Location     Type
 35256 ;;		None
 35257 ;; Return value:  Size  Location     Type
 35258 ;;                  1    wreg      void 
 35259 ;; Registers used:
 35260 ;;		wreg, status,2, status,0
 35261 ;; Tracked objects:
 35262 ;;		On entry : 3F/1
 35263 ;;		On exit  : 3F/0
 35264 ;;		Unchanged: 0/0
 35265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35270 ;;Total ram usage:        0 bytes
 35271 ;; Hardware stack levels used:    1
 35272 ;; This function calls:
 35273 ;;		Nothing
 35274 ;; This function is called by:
 35275 ;;		_MonitorPressureTask
 35276 ;; This function uses a non-reentrant model
 35277 ;;
 35278                           
 35279                           	psect	text260
 35280  00A77A                     __ptext260:
 35281                           	opt callstack 0
 35282  00A77A                     _SetIPBelowSetAlarm:
 35283                           	opt callstack 14
 35284                           
 35285                           ; BSR set to: 1
 35286                           
 35287                           ; BSR set to: 2
 35288                           ;incstack = 0
 35289  00A77A  0100               	movlb	0	; () banked
 35290  00A77C  4BE0               	infsnz	_ipBelowSetAlarm& (0+255),f,b
 35291  00A77E  2BE1               	incf	(_ipBelowSetAlarm+1)& (0+255),f,b
 35292                           
 35293                           ; BSR set to: 0
 35294  00A780  BFE1               	btfsc	(_ipBelowSetAlarm+1)& (0+255),7,b
 35295  00A782  0012               	return	
 35296  00A784  51E1               	movf	(_ipBelowSetAlarm+1)& (0+255),w,b
 35297  00A786  E104               	bnz	i2u1165_40
 35298  00A788  0E07               	movlw	7
 35299  00A78A  5DE0               	subwf	_ipBelowSetAlarm& (0+255),w,b
 35300  00A78C  A0D8               	btfss	status,0,c
 35301  00A78E  0012               	return	
 35302  00A790                     i2u1165_40:
 35303                           
 35304                           ; BSR set to: 0
 35305  00A790  0E00               	movlw	0
 35306  00A792  6FE1               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 35307  00A794  0E06               	movlw	6
 35308  00A796  6FE0               	movwf	_ipBelowSetAlarm& (0+255),b
 35309                           
 35310                           ; BSR set to: 0
 35311  00A798  0012               	return		;funcret
 35312  00A79A                     __end_of_SetIPBelowSetAlarm:
 35313                           	opt callstack 0
 35314                           
 35315 ;; *************** function _SetIPAboveSetAlarm *****************
 35316 ;; Defined at:
 35317 ;;		line 240 in file "alarm.c"
 35318 ;; Parameters:    Size  Location     Type
 35319 ;;		None
 35320 ;; Auto vars:     Size  Location     Type
 35321 ;;		None
 35322 ;; Return value:  Size  Location     Type
 35323 ;;                  1    wreg      void 
 35324 ;; Registers used:
 35325 ;;		wreg, status,2, status,0
 35326 ;; Tracked objects:
 35327 ;;		On entry : 3F/1
 35328 ;;		On exit  : 3F/2
 35329 ;;		Unchanged: 0/0
 35330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35335 ;;Total ram usage:        0 bytes
 35336 ;; Hardware stack levels used:    1
 35337 ;; This function calls:
 35338 ;;		Nothing
 35339 ;; This function is called by:
 35340 ;;		_MonitorPressureTask
 35341 ;; This function uses a non-reentrant model
 35342 ;;
 35343                           
 35344                           	psect	text261
 35345  00A79A                     __ptext261:
 35346                           	opt callstack 0
 35347  00A79A                     _SetIPAboveSetAlarm:
 35348                           	opt callstack 14
 35349                           
 35350                           ; BSR set to: 1
 35351                           
 35352                           ; BSR set to: 0
 35353                           ;incstack = 0
 35354  00A79A  0102               	movlb	2	; () banked
 35355  00A79C  4B80               	infsnz	_ipAboveSetAlarm& (0+255),f,b
 35356  00A79E  2B81               	incf	(_ipAboveSetAlarm+1)& (0+255),f,b
 35357                           
 35358                           ; BSR set to: 2
 35359  00A7A0  BF81               	btfsc	(_ipAboveSetAlarm+1)& (0+255),7,b
 35360  00A7A2  0012               	return	
 35361  00A7A4  5181               	movf	(_ipAboveSetAlarm+1)& (0+255),w,b
 35362  00A7A6  E104               	bnz	i2u1166_40
 35363  00A7A8  0E07               	movlw	7
 35364  00A7AA  5D80               	subwf	_ipAboveSetAlarm& (0+255),w,b
 35365  00A7AC  A0D8               	btfss	status,0,c
 35366  00A7AE  0012               	return	
 35367  00A7B0                     i2u1166_40:
 35368                           
 35369                           ; BSR set to: 2
 35370  00A7B0  0E00               	movlw	0
 35371  00A7B2  6F81               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 35372  00A7B4  0E06               	movlw	6
 35373  00A7B6  6F80               	movwf	_ipAboveSetAlarm& (0+255),b
 35374                           
 35375                           ; BSR set to: 2
 35376  00A7B8  0012               	return		;funcret
 35377  00A7BA                     __end_of_SetIPAboveSetAlarm:
 35378                           	opt callstack 0
 35379                           
 35380 ;; *************** function _SetGasFailureAlarm *****************
 35381 ;; Defined at:
 35382 ;;		line 230 in file "alarm.c"
 35383 ;; Parameters:    Size  Location     Type
 35384 ;;		None
 35385 ;; Auto vars:     Size  Location     Type
 35386 ;;		None
 35387 ;; Return value:  Size  Location     Type
 35388 ;;                  1    wreg      void 
 35389 ;; Registers used:
 35390 ;;		wreg, status,2
 35391 ;; Tracked objects:
 35392 ;;		On entry : 3F/0
 35393 ;;		On exit  : 3F/2
 35394 ;;		Unchanged: 0/0
 35395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35400 ;;Total ram usage:        0 bytes
 35401 ;; Hardware stack levels used:    1
 35402 ;; This function calls:
 35403 ;;		Nothing
 35404 ;; This function is called by:
 35405 ;;		_MonitorPressureTask
 35406 ;; This function uses a non-reentrant model
 35407 ;;
 35408                           
 35409                           	psect	text262
 35410  00AEAE                     __ptext262:
 35411                           	opt callstack 0
 35412  00AEAE                     _SetGasFailureAlarm:
 35413                           	opt callstack 14
 35414                           
 35415                           ; BSR set to: 0
 35416                           
 35417                           ; BSR set to: 2
 35418                           ;incstack = 0
 35419  00AEAE  0E01               	movlw	1
 35420  00AEB0  0102               	movlb	2	; () banked
 35421  00AEB2  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 35422                           
 35423                           ; BSR set to: 2
 35424  00AEB4  0012               	return		;funcret
 35425  00AEB6                     __end_of_SetGasFailureAlarm:
 35426                           	opt callstack 0
 35427                           
 35428 ;; *************** function _SetEPBelowSetAlarm *****************
 35429 ;; Defined at:
 35430 ;;		line 237 in file "alarm.c"
 35431 ;; Parameters:    Size  Location     Type
 35432 ;;		None
 35433 ;; Auto vars:     Size  Location     Type
 35434 ;;		None
 35435 ;; Return value:  Size  Location     Type
 35436 ;;                  1    wreg      void 
 35437 ;; Registers used:
 35438 ;;		wreg, status,2, status,0
 35439 ;; Tracked objects:
 35440 ;;		On entry : 3F/1
 35441 ;;		On exit  : 3F/0
 35442 ;;		Unchanged: 0/0
 35443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35448 ;;Total ram usage:        0 bytes
 35449 ;; Hardware stack levels used:    1
 35450 ;; This function calls:
 35451 ;;		Nothing
 35452 ;; This function is called by:
 35453 ;;		_MonitorPressureTask
 35454 ;; This function uses a non-reentrant model
 35455 ;;
 35456                           
 35457                           	psect	text263
 35458  00A7BA                     __ptext263:
 35459                           	opt callstack 0
 35460  00A7BA                     _SetEPBelowSetAlarm:
 35461                           	opt callstack 14
 35462                           
 35463                           ; BSR set to: 1
 35464                           
 35465                           ; BSR set to: 2
 35466                           ;incstack = 0
 35467  00A7BA  0100               	movlb	0	; () banked
 35468  00A7BC  4BE4               	infsnz	_epBelowSetAlarm& (0+255),f,b
 35469  00A7BE  2BE5               	incf	(_epBelowSetAlarm+1)& (0+255),f,b
 35470                           
 35471                           ; BSR set to: 0
 35472  00A7C0  BFE5               	btfsc	(_epBelowSetAlarm+1)& (0+255),7,b
 35473  00A7C2  0012               	return	
 35474  00A7C4  51E5               	movf	(_epBelowSetAlarm+1)& (0+255),w,b
 35475  00A7C6  E104               	bnz	i2u1163_40
 35476  00A7C8  0E07               	movlw	7
 35477  00A7CA  5DE4               	subwf	_epBelowSetAlarm& (0+255),w,b
 35478  00A7CC  A0D8               	btfss	status,0,c
 35479  00A7CE  0012               	return	
 35480  00A7D0                     i2u1163_40:
 35481                           
 35482                           ; BSR set to: 0
 35483  00A7D0  0E00               	movlw	0
 35484  00A7D2  6FE5               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 35485  00A7D4  0E06               	movlw	6
 35486  00A7D6  6FE4               	movwf	_epBelowSetAlarm& (0+255),b
 35487                           
 35488                           ; BSR set to: 0
 35489  00A7D8  0012               	return		;funcret
 35490  00A7DA                     __end_of_SetEPBelowSetAlarm:
 35491                           	opt callstack 0
 35492                           
 35493 ;; *************** function _SetEPAboveSetAlarm *****************
 35494 ;; Defined at:
 35495 ;;		line 238 in file "alarm.c"
 35496 ;; Parameters:    Size  Location     Type
 35497 ;;		None
 35498 ;; Auto vars:     Size  Location     Type
 35499 ;;		None
 35500 ;; Return value:  Size  Location     Type
 35501 ;;                  1    wreg      void 
 35502 ;; Registers used:
 35503 ;;		wreg, status,2, status,0
 35504 ;; Tracked objects:
 35505 ;;		On entry : 3F/1
 35506 ;;		On exit  : 3F/0
 35507 ;;		Unchanged: 0/0
 35508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35513 ;;Total ram usage:        0 bytes
 35514 ;; Hardware stack levels used:    1
 35515 ;; This function calls:
 35516 ;;		Nothing
 35517 ;; This function is called by:
 35518 ;;		_MonitorPressureTask
 35519 ;; This function uses a non-reentrant model
 35520 ;;
 35521                           
 35522                           	psect	text264
 35523  00A7DA                     __ptext264:
 35524                           	opt callstack 0
 35525  00A7DA                     _SetEPAboveSetAlarm:
 35526                           	opt callstack 14
 35527                           
 35528                           ; BSR set to: 1
 35529                           
 35530                           ; BSR set to: 0
 35531                           ;incstack = 0
 35532  00A7DA  0100               	movlb	0	; () banked
 35533  00A7DC  4BE2               	infsnz	_epAboveSetAlarm& (0+255),f,b
 35534  00A7DE  2BE3               	incf	(_epAboveSetAlarm+1)& (0+255),f,b
 35535                           
 35536                           ; BSR set to: 0
 35537  00A7E0  BFE3               	btfsc	(_epAboveSetAlarm+1)& (0+255),7,b
 35538  00A7E2  0012               	return	
 35539  00A7E4  51E3               	movf	(_epAboveSetAlarm+1)& (0+255),w,b
 35540  00A7E6  E104               	bnz	i2u1164_40
 35541  00A7E8  0E07               	movlw	7
 35542  00A7EA  5DE2               	subwf	_epAboveSetAlarm& (0+255),w,b
 35543  00A7EC  A0D8               	btfss	status,0,c
 35544  00A7EE  0012               	return	
 35545  00A7F0                     i2u1164_40:
 35546                           
 35547                           ; BSR set to: 0
 35548  00A7F0  0E00               	movlw	0
 35549  00A7F2  6FE3               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 35550  00A7F4  0E06               	movlw	6
 35551  00A7F6  6FE2               	movwf	_epAboveSetAlarm& (0+255),b
 35552                           
 35553                           ; BSR set to: 0
 35554  00A7F8  0012               	return		;funcret
 35555  00A7FA                     __end_of_SetEPAboveSetAlarm:
 35556                           	opt callstack 0
 35557                           
 35558 ;; *************** function _SetCircuitFailureAlarm *****************
 35559 ;; Defined at:
 35560 ;;		line 234 in file "alarm.c"
 35561 ;; Parameters:    Size  Location     Type
 35562 ;;		None
 35563 ;; Auto vars:     Size  Location     Type
 35564 ;;		None
 35565 ;; Return value:  Size  Location     Type
 35566 ;;                  1    wreg      void 
 35567 ;; Registers used:
 35568 ;;		wreg, status,2
 35569 ;; Tracked objects:
 35570 ;;		On entry : 3F/2
 35571 ;;		On exit  : 3F/2
 35572 ;;		Unchanged: 0/0
 35573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35578 ;;Total ram usage:        0 bytes
 35579 ;; Hardware stack levels used:    1
 35580 ;; This function calls:
 35581 ;;		Nothing
 35582 ;; This function is called by:
 35583 ;;		_MonitorPressureTask
 35584 ;; This function uses a non-reentrant model
 35585 ;;
 35586                           
 35587                           	psect	text265
 35588  00AF96                     __ptext265:
 35589                           	opt callstack 0
 35590  00AF96                     _SetCircuitFailureAlarm:
 35591                           	opt callstack 14
 35592                           
 35593                           ; BSR set to: 2
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;incstack = 0
 35597  00AF96  0E01               	movlw	1
 35598  00AF98  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 35599                           
 35600                           ; BSR set to: 2
 35601  00AF9A  0012               	return		;funcret
 35602  00AF9C                     __end_of_SetCircuitFailureAlarm:
 35603                           	opt callstack 0
 35604                           
 35605 ;; *************** function _GetPressure_mbar02 *****************
 35606 ;; Defined at:
 35607 ;;		line 758 in file "monitor.c"
 35608 ;; Parameters:    Size  Location     Type
 35609 ;;		None
 35610 ;; Auto vars:     Size  Location     Type
 35611 ;;		None
 35612 ;; Return value:  Size  Location     Type
 35613 ;;                  2   42[COMRAM] short 
 35614 ;; Registers used:
 35615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35616 ;; Tracked objects:
 35617 ;;		On entry : 3F/1
 35618 ;;		On exit  : 0/0
 35619 ;;		Unchanged: 0/0
 35620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35625 ;;Total ram usage:        4 bytes
 35626 ;; Hardware stack levels used:    1
 35627 ;; Hardware stack levels required when called:    3
 35628 ;; This function calls:
 35629 ;;		i2_GetPressure_pa
 35630 ;;		i2___awdiv
 35631 ;; This function is called by:
 35632 ;;		_MonitorPressureTask
 35633 ;; This function uses a non-reentrant model
 35634 ;;
 35635                           
 35636                           	psect	text266
 35637  00A02A                     __ptext266:
 35638                           	opt callstack 0
 35639  00A02A                     _GetPressure_mbar02:
 35640                           	opt callstack 11
 35641                           
 35642                           ; BSR set to: 1
 35643                           ;monitor.c: 760:     return GetPressure_pa()/20;
 35644                           
 35645                           ; BSR set to: 2
 35646                           ;incstack = 0
 35647  00A02A  EC7A  F02C         	call	i2_GetPressure_pa	;wreg free
 35648  00A02E  0060  F06C  F02D   	movff	?i2_GetPressure_pa,_GetPressure_mbar02$7138
 35649  00A034  0060  F070  F02E   	movff	?i2_GetPressure_pa+1,_GetPressure_mbar02$7138+1
 35650                           
 35651                           ;monitor.c: 760:     return GetPressure_pa()/20;
 35652  00A03A  0060  F0B4  F007   	movff	_GetPressure_mbar02$7138,i2___awdiv@dividend
 35653  00A040  0060  F0B8  F008   	movff	_GetPressure_mbar02$7138+1,i2___awdiv@dividend+1
 35654  00A046  0E00               	movlw	0
 35655  00A048  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 35656  00A04A  0E14               	movlw	20
 35657  00A04C  6E09               	movwf	i2___awdiv@divisor^0,c
 35658  00A04E  ECC1  F045         	call	i2___awdiv	;wreg free
 35659  00A052  0060  F01C  F02B   	movff	?i2___awdiv,?_GetPressure_mbar02
 35660  00A058  0060  F020  F02C   	movff	?i2___awdiv+1,?_GetPressure_mbar02+1
 35661  00A05E  0012               	return		;funcret
 35662  00A060                     __end_of_GetPressure_mbar02:
 35663                           	opt callstack 0
 35664                           
 35665 ;; *************** function _DisplayCalibrate *****************
 35666 ;; Defined at:
 35667 ;;		line 56 in file "display.c"
 35668 ;; Parameters:    Size  Location     Type
 35669 ;;  pr              2   51[BANK0 ] short 
 35670 ;;  off             2   53[BANK0 ] short 
 35671 ;;  prv             2   55[BANK0 ] short 
 35672 ;;  offv            2   57[BANK0 ] short 
 35673 ;; Auto vars:     Size  Location     Type
 35674 ;;		None
 35675 ;; Return value:  Size  Location     Type
 35676 ;;                  1    wreg      void 
 35677 ;; Registers used:
 35678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35679 ;; Tracked objects:
 35680 ;;		On entry : 0/2
 35681 ;;		On exit  : 3F/0
 35682 ;;		Unchanged: 0/0
 35683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35684 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35687 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35688 ;;Total ram usage:        8 bytes
 35689 ;; Hardware stack levels used:    1
 35690 ;; Hardware stack levels required when called:    9
 35691 ;; This function calls:
 35692 ;;		i2_sprintf
 35693 ;; This function is called by:
 35694 ;;		_MonitorPressureTask
 35695 ;; This function uses a non-reentrant model
 35696 ;;
 35697                           
 35698                           	psect	text267
 35699  00A0C8                     __ptext267:
 35700                           	opt callstack 0
 35701  00A0C8                     _DisplayCalibrate:
 35702                           	opt callstack 5
 35703                           
 35704                           ;display.c: 57:     calibrate=1;
 35705                           
 35706                           ;incstack = 0
 35707  00A0C8  0E01               	movlw	1
 35708  00A0CA  0100               	movlb	0	; () banked
 35709  00A0CC  6FFB               	movwf	_calibrate& (0+255),b
 35710                           
 35711                           ; BSR set to: 0
 35712                           ;display.c: 58:     sprintf(msg4, "Cal: %4d - %4d", off, offv);
 35713  00A0CE  0EA9               	movlw	low _msg4
 35714  00A0D0  6F77               	movwf	i2sprintf@s& (0+255),b
 35715  00A0D2  0E03               	movlw	high _msg4
 35716  00A0D4  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 35717  00A0D6  0E3E               	movlw	low STR_7
 35718  00A0D8  6F79               	movwf	i2sprintf@fmt& (0+255),b
 35719  00A0DA  0EFF               	movlw	high STR_7
 35720  00A0DC  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 35721  00A0DE  0060  F254  F07B   	movff	DisplayCalibrate@off,?i2_sprintf+4
 35722  00A0E4  0060  F258  F07C   	movff	DisplayCalibrate@off+1,?i2_sprintf+5
 35723  00A0EA  0060  F264  F07D   	movff	DisplayCalibrate@offv,?i2_sprintf+6
 35724  00A0F0  0060  F268  F07E   	movff	DisplayCalibrate@offv+1,?i2_sprintf+7
 35725  00A0F6  EC6A  F04C         	call	i2_sprintf	;wreg free
 35726                           
 35727                           ; BSR set to: 0
 35728  00A0FA  0012               	return		;funcret
 35729  00A0FC                     __end_of_DisplayCalibrate:
 35730                           	opt callstack 0
 35731                           
 35732 ;; *************** function _AdcReStartCycle *****************
 35733 ;; Defined at:
 35734 ;;		line 70 in file "monitor.c"
 35735 ;; Parameters:    Size  Location     Type
 35736 ;;		None
 35737 ;; Auto vars:     Size  Location     Type
 35738 ;;		None
 35739 ;; Return value:  Size  Location     Type
 35740 ;;                  1    wreg      void 
 35741 ;; Registers used:
 35742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35743 ;; Tracked objects:
 35744 ;;		On entry : 0/2
 35745 ;;		On exit  : 3F/3E
 35746 ;;		Unchanged: 0/0
 35747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35752 ;;Total ram usage:        0 bytes
 35753 ;; Hardware stack levels used:    1
 35754 ;; Hardware stack levels required when called:    1
 35755 ;; This function calls:
 35756 ;;		i2_ADCC_StartConversion
 35757 ;;		i2___wmul
 35758 ;; This function is called by:
 35759 ;;		_MonitorPressureTask
 35760 ;; This function uses a non-reentrant model
 35761 ;;
 35762                           
 35763                           	psect	text268
 35764  0093F6                     __ptext268:
 35765                           	opt callstack 0
 35766  0093F6                     _AdcReStartCycle:
 35767                           	opt callstack 13
 35768                           
 35769                           ;monitor.c: 71:     currentChannel = 0;
 35770                           
 35771                           ; BSR set to: 0
 35772                           ;incstack = 0
 35773  0093F6  0E00               	movlw	0
 35774  0093F8  0101               	movlb	1	; () banked
 35775  0093FA  6FEC               	movwf	(_currentChannel+1)& (0+255),b
 35776  0093FC  0E00               	movlw	0
 35777  0093FE  6FEB               	movwf	_currentChannel& (0+255),b
 35778                           
 35779                           ; BSR set to: 1
 35780                           ;monitor.c: 72:     ADCON0bits.ADON = 0;
 35781  009400  013E               	movlb	62	; () banked
 35782  009402  9FF8               	bcf	248,7,b	;volatile
 35783                           
 35784                           ; BSR set to: 62
 35785                           ;monitor.c: 73:     ADREF = adcChannels[currentChannel].ref;
 35786  009404  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 35787  00940A  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35788  009410  0E00               	movlw	0
 35789  009412  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35790  009414  0E05               	movlw	5
 35791  009416  6E03               	movwf	i2___wmul@multiplicand^0,c
 35792  009418  ECBA  F051         	call	i2___wmul	;wreg free
 35793  00941C  0EC0               	movlw	low (_adcChannels+4)
 35794  00941E  2401               	addwf	?i2___wmul^0,w,c
 35795  009420  6ED9               	movwf	fsr2l,c
 35796  009422  0E02               	movlw	high (_adcChannels+4)
 35797  009424  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35798  009426  6EDA               	movwf	fsr2h,c
 35799  009428  50DF               	movf	indf2,w,c
 35800  00942A  013E               	movlb	62	; () banked
 35801  00942C  6FFD               	movwf	253,b	;volatile
 35802                           
 35803                           ; BSR set to: 62
 35804                           ;monitor.c: 74:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 35805  00942E  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 35806  009434  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 35807  00943A  0E00               	movlw	0
 35808  00943C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 35809  00943E  0E05               	movlw	5
 35810  009440  6E03               	movwf	i2___wmul@multiplicand^0,c
 35811  009442  ECBA  F051         	call	i2___wmul	;wreg free
 35812  009446  0EBC               	movlw	low _adcChannels
 35813  009448  2401               	addwf	?i2___wmul^0,w,c
 35814  00944A  6ED9               	movwf	fsr2l,c
 35815  00944C  0E02               	movlw	high _adcChannels
 35816  00944E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 35817  009450  6EDA               	movwf	fsr2h,c
 35818  009452  50DF               	movf	indf2,w,c
 35819  009454  EC99  F055         	call	i2_ADCC_StartConversion
 35820                           
 35821                           ; BSR set to: 62
 35822  009458  0012               	return		;funcret
 35823  00945A                     __end_of_AdcReStartCycle:
 35824                           	opt callstack 0
 35825                           
 35826 ;; *************** function _I2C2_Isr *****************
 35827 ;; Defined at:
 35828 ;;		line 179 in file "mcc_generated_files/i2c2_slave.c"
 35829 ;; Parameters:    Size  Location     Type
 35830 ;;		None
 35831 ;; Auto vars:     Size  Location     Type
 35832 ;;		None
 35833 ;; Return value:  Size  Location     Type
 35834 ;;                  1    wreg      void 
 35835 ;; Registers used:
 35836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35837 ;; Tracked objects:
 35838 ;;		On entry : 3F/0
 35839 ;;		On exit  : 0/0
 35840 ;;		Unchanged: 0/0
 35841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35846 ;;Total ram usage:        0 bytes
 35847 ;; Hardware stack levels used:    1
 35848 ;; Hardware stack levels required when called:   14
 35849 ;; This function calls:
 35850 ;;		_I2C2_SlaveClearBuff
 35851 ;;		_I2C2_SlaveClearStopFlag
 35852 ;;		_I2C2_SlaveIsRxBufFull
 35853 ;;		_I2C2_SlaveRdCallBack
 35854 ;;		_I2C2_SlaveReleaseClock
 35855 ;;		_I2C2_SlaveSetCounter
 35856 ;;		_I2C2_SlaveStopCallBack
 35857 ;; This function is called by:
 35858 ;;		_I2C2_Open
 35859 ;;		_INTERRUPT_InterruptManager
 35860 ;; This function uses a non-reentrant model
 35861 ;;
 35862                           
 35863                           	psect	text269
 35864  00925C                     __ptext269:
 35865                           	opt callstack 0
 35866  00925C                     _I2C2_Isr:
 35867                           	opt callstack 2
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;mcc_generated_files/i2c2_slave.c: 181:     if (!I2C2_on) {
 35871                           
 35872                           ; BSR set to: 62
 35873                           ;incstack = 0
 35874  00925C  0102               	movlb	2	; () banked
 35875  00925E  51B4               	movf	_I2C2_on& (0+255),w,b
 35876  009260  A4D8               	btfss	status,2,c
 35877  009262  D005               	goto	i2l21808
 35878                           
 35879                           ; BSR set to: 2
 35880                           ;mcc_generated_files/i2c2_slave.c: 182:         I2C2_SlaveReleaseClock();
 35881  009264  ECE0  F057         	call	_I2C2_SlaveReleaseClock	;wreg free
 35882                           
 35883                           ;mcc_generated_files/i2c2_slave.c: 183:         I2C2_SlaveClearStopFlag();
 35884  009268  EC22  F058         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35885  00926C  0012               	return	
 35886  00926E                     i2l21808:
 35887                           
 35888                           ; BSR set to: 2
 35889                           ;mcc_generated_files/i2c2_slave.c: 187:     if(I2C2_SlaveIsRxBufFull())
 35890  00926E  EC8F  F056         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35891  009272  0900               	iorlw	0
 35892  009274  B4D8               	btfsc	status,2,c
 35893  009276  D005               	goto	i2l1220
 35894                           
 35895                           ; BSR set to: 61
 35896                           ;mcc_generated_files/i2c2_slave.c: 188:     {;mcc_generated_files/i2c2_slave.c: 189:    
      +                               I2C2_SlaveRdCallBack();
 35897  009278  EC0D  F054         	call	_I2C2_SlaveRdCallBack	;wreg free
 35898  00927C                     i2l21812:
 35899                           
 35900                           ;mcc_generated_files/i2c2_slave.c: 190:         I2C2_SlaveReleaseClock();
 35901  00927C  ECE0  F057         	call	_I2C2_SlaveReleaseClock	;wreg free
 35902  009280  0012               	return	
 35903  009282                     i2l1220:
 35904                           
 35905                           ; BSR set to: 61
 35906                           ;mcc_generated_files/i2c2_slave.c: 195:     if(PIE6bits.I2C2EIE == 1 && PIR6bits.I2C2EIF
      +                           == 1)
 35907  009282  0139               	movlb	57	; () banked
 35908  009284  B396               	btfsc	150,1,b	;volatile
 35909                           
 35910                           ; BSR set to: 57
 35911  009286  51A6               	movf	166,w,b	;volatile
 35912                           
 35913                           ; BSR set to: 57
 35914                           ;mcc_generated_files/i2c2_slave.c: 199:     if(PIE5bits.I2C2RXIE == 1 && PIR5bits.I2C2RX
      +                          IF == 1)
 35915                           
 35916                           ;mcc_generated_files/i2c2_slave.c: 196:     {;mcc_generated_files/i2c2_slave.c: 198:    
      +                           }
 35917  009288  BD95               	btfsc	149,6,b	;volatile
 35918                           
 35919                           ; BSR set to: 57
 35920  00928A  ADA5               	btfss	165,6,b	;volatile
 35921  00928C  D006               	goto	i2l21824
 35922                           
 35923                           ; BSR set to: 57
 35924                           ;mcc_generated_files/i2c2_slave.c: 200:     {;mcc_generated_files/i2c2_slave.c: 202:    
      +                               if(I2C2_SlaveIsRxBufFull())
 35925  00928E  EC8F  F056         	call	_I2C2_SlaveIsRxBufFull	;wreg free
 35926  009292  0900               	iorlw	0
 35927  009294  A4D8               	btfss	status,2,c
 35928                           
 35929                           ; BSR set to: 61
 35930                           ;mcc_generated_files/i2c2_slave.c: 203:         {;mcc_generated_files/i2c2_slave.c: 204:
      +                                       I2C2_SlaveRdCallBack();
 35931  009296  EC0D  F054         	call	_I2C2_SlaveRdCallBack	;wreg free
 35932  00929A                     i2l21824:
 35933                           
 35934                           ;mcc_generated_files/i2c2_slave.c: 207:     if(PIE5bits.I2C2TXIE == 1 && PIR5bits.I2C2TX
      +                          IF == 1)
 35935  00929A  0139               	movlb	57	; () banked
 35936  00929C  BF95               	btfsc	149,7,b	;volatile
 35937                           
 35938                           ; BSR set to: 57
 35939  00929E  51A5               	movf	165,w,b	;volatile
 35940                           
 35941                           ; BSR set to: 57
 35942                           ;mcc_generated_files/i2c2_slave.c: 211:     if(PIE6bits.I2C2IE == 1 && PIR6bits.I2C2IF =
      +                          = 1)
 35943                           
 35944                           ;mcc_generated_files/i2c2_slave.c: 208:     {;mcc_generated_files/i2c2_slave.c: 210:    
      +                           }
 35945  0092A0  B196               	btfsc	150,0,b	;volatile
 35946                           
 35947                           ; BSR set to: 57
 35948  0092A2  A1A6               	btfss	166,0,b	;volatile
 35949  0092A4  D7EB               	goto	i2l21812
 35950                           
 35951                           ; BSR set to: 57
 35952                           ;mcc_generated_files/i2c2_slave.c: 212:     {;mcc_generated_files/i2c2_slave.c: 214:    
      +                               if (I2C2PIR&0x4) {
 35953  0092A6  013D               	movlb	61	; () banked
 35954  0092A8  A563               	btfss	99,2,b	;volatile
 35955  0092AA  D7E8               	goto	i2l21812
 35956                           
 35957                           ; BSR set to: 61
 35958                           ;mcc_generated_files/i2c2_slave.c: 216:             I2C2_SlaveClearStopFlag();
 35959  0092AC  EC22  F058         	call	_I2C2_SlaveClearStopFlag	;wreg free
 35960                           
 35961                           ;mcc_generated_files/i2c2_slave.c: 217:             I2C2_SlaveClearBuff();
 35962  0092B0  EC24  F058         	call	_I2C2_SlaveClearBuff	;wreg free
 35963                           
 35964                           ;mcc_generated_files/i2c2_slave.c: 218:             I2C2_SlaveReleaseClock();
 35965  0092B4  ECE0  F057         	call	_I2C2_SlaveReleaseClock	;wreg free
 35966                           
 35967                           ; BSR set to: 61
 35968                           ;mcc_generated_files/i2c2_slave.c: 219:             I2C2_SlaveSetCounter(0xFF);
 35969  0092B8  0EFF               	movlw	255
 35970  0092BA  ECFC  F056         	call	_I2C2_SlaveSetCounter
 35971                           
 35972                           ;mcc_generated_files/i2c2_slave.c: 220:             I2C2_SlaveStopCallBack();
 35973  0092BE  ECFD  F053         	call	_I2C2_SlaveStopCallBack	;wreg free
 35974  0092C2  0012               	return		;funcret
 35975  0092C4                     __end_of_I2C2_Isr:
 35976                           	opt callstack 0
 35977                           
 35978 ;; *************** function _I2C2_SlaveStopCallBack *****************
 35979 ;; Defined at:
 35980 ;;		line 273 in file "mcc_generated_files/i2c2_slave.c"
 35981 ;; Parameters:    Size  Location     Type
 35982 ;;		None
 35983 ;; Auto vars:     Size  Location     Type
 35984 ;;		None
 35985 ;; Return value:  Size  Location     Type
 35986 ;;                  1    wreg      void 
 35987 ;; Registers used:
 35988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35989 ;; Tracked objects:
 35990 ;;		On entry : 0/3D
 35991 ;;		On exit  : 0/0
 35992 ;;		Unchanged: 0/0
 35993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35998 ;;Total ram usage:        0 bytes
 35999 ;; Hardware stack levels used:    1
 36000 ;; Hardware stack levels required when called:   13
 36001 ;; This function calls:
 36002 ;;		Absolute function
 36003 ;;		_StopHandler
 36004 ;; This function is called by:
 36005 ;;		_I2C2_Isr
 36006 ;; This function uses a non-reentrant model
 36007 ;;
 36008                           
 36009                           	psect	text270
 36010  00A7FA                     __ptext270:
 36011                           	opt callstack 0
 36012  00A7FA                     _I2C2_SlaveStopCallBack:
 36013                           	opt callstack 2
 36014                           
 36015                           ;mcc_generated_files/i2c2_slave.c: 275:     if (I2C2_SlaveStopInterruptHandler)
 36016                           
 36017                           ;incstack = 0
 36018  00A7FA  0102               	movlb	2	; () banked
 36019  00A7FC  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 36020  00A7FE  1193               	iorwf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 36021  00A800  B4D8               	btfsc	status,2,c
 36022  00A802  0012               	return	
 36023                           
 36024                           ; BSR set to: 2
 36025                           ;mcc_generated_files/i2c2_slave.c: 276:     {;mcc_generated_files/i2c2_slave.c: 277:    
      +                               I2C2_SlaveStopInterruptHandler();
 36026  00A804  D801               	call	i2u1975_48
 36027  00A806  0012               	return	
 36028  00A808                     i2u1975_48:
 36029  00A808  0005               	push	
 36030  00A80A  6EFA               	movwf	pclath,c
 36031  00A80C  5192               	movf	_I2C2_SlaveStopInterruptHandler& (0+255),w,b
 36032  00A80E  6EFD               	movwf	tosl,c
 36033  00A810  5193               	movf	(_I2C2_SlaveStopInterruptHandler+1)& (0+255),w,b
 36034  00A812  6EFE               	movwf	tosh,c
 36035  00A814  6AFF               	clrf	tosu,c
 36036  00A816  50FA               	movf	pclath,w,c
 36037  00A818  0012               	return		;indir
 36038  00A81A                     __end_of_I2C2_SlaveStopCallBack:
 36039                           	opt callstack 0
 36040                           
 36041 ;; *************** function _StopHandler *****************
 36042 ;; Defined at:
 36043 ;;		line 161 in file "controller.c"
 36044 ;; Parameters:    Size  Location     Type
 36045 ;;		None
 36046 ;; Auto vars:     Size  Location     Type
 36047 ;;  stat1           1    0        unsigned char 
 36048 ;;  stat0           1    0        unsigned char 
 36049 ;; Return value:  Size  Location     Type
 36050 ;;                  1    wreg      void 
 36051 ;; Registers used:
 36052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36053 ;; Tracked objects:
 36054 ;;		On entry : 3F/2
 36055 ;;		On exit  : 3F/0
 36056 ;;		Unchanged: 0/0
 36057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36062 ;;Total ram usage:        2 bytes
 36063 ;; Hardware stack levels used:    1
 36064 ;; Hardware stack levels required when called:   12
 36065 ;; This function calls:
 36066 ;;		_ReceiveHandler
 36067 ;;		_UpdateState
 36068 ;;		i2_printf
 36069 ;; This function is called by:
 36070 ;;		_ControllerInit
 36071 ;;		_I2C2_SlaveStopCallBack
 36072 ;; This function uses a non-reentrant model
 36073 ;;
 36074                           
 36075                           	psect	text271
 36076  0096DE                     __ptext271:
 36077                           	opt callstack 0
 36078  0096DE                     _StopHandler:
 36079                           	opt callstack 2
 36080                           
 36081                           ; BSR set to: 2
 36082                           
 36083                           ;incstack = 0
 36084  0096DE  013D               	movlb	61	; () banked
 36085  0096E0  5161               	movf	97,w,b	;volatile
 36086  0096E2  5162               	movf	98,w,b	;volatile
 36087                           
 36088                           ; BSR set to: 61
 36089                           ;controller.c: 166:     if (cntByte!=10 && cntByte>0) {
 36090  0096E4  0E0A               	movlw	10
 36091  0096E6  0100               	movlb	0	; () banked
 36092  0096E8  19CC               	xorwf	_cntByte& (0+255),w,b
 36093  0096EA  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 36094  0096EC  A4D8               	btfss	status,2,c
 36095                           
 36096                           ; BSR set to: 0
 36097  0096EE  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 36098  0096F0  D014               	goto	i2l19896
 36099  0096F2  51CD               	movf	(_cntByte+1)& (0+255),w,b
 36100  0096F4  E103               	bnz	i2u1939_40
 36101  0096F6  05CC               	decf	_cntByte& (0+255),w,b
 36102  0096F8  A0D8               	btfss	status,0,c
 36103  0096FA  D00F               	goto	i2l19896
 36104  0096FC                     i2u1939_40:
 36105                           
 36106                           ; BSR set to: 0
 36107                           ;controller.c: 167:         ReceiveHandler();
 36108  0096FC  EC83  F04D         	call	_ReceiveHandler	;wreg free
 36109                           
 36110                           ;controller.c: 168:         printf("I2C: miss %d\r\n", cntByte);
 36111  009700  0E11               	movlw	low STR_53
 36112  009702  0100               	movlb	0	; () banked
 36113  009704  6F77               	movwf	i2printf@fmt& (0+255),b
 36114  009706  0EFF               	movlw	high STR_53
 36115  009708  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36116  00970A  0060  F330  F079   	movff	_cntByte,?i2_printf+2
 36117  009710  0060  F334  F07A   	movff	_cntByte+1,?i2_printf+3
 36118  009716  ECBB  F052         	call	i2_printf	;wreg free
 36119  00971A                     i2l19896:
 36120                           
 36121                           ;controller.c: 177:     if (cntByte==10) {
 36122  00971A  0E0A               	movlw	10
 36123  00971C  0100               	movlb	0	; () banked
 36124  00971E  19CC               	xorwf	_cntByte& (0+255),w,b
 36125  009720  11CD               	iorwf	(_cntByte+1)& (0+255),w,b
 36126  009722  B4D8               	btfsc	status,2,c
 36127                           
 36128                           ; BSR set to: 0
 36129                           ;controller.c: 181:         UpdateState();
 36130  009724  EC1E  F021         	call	_UpdateState	;wreg free
 36131                           
 36132                           ;controller.c: 183:     cntByte = 0;
 36133  009728  0E00               	movlw	0
 36134  00972A  0100               	movlb	0	; () banked
 36135  00972C  6FCD               	movwf	(_cntByte+1)& (0+255),b
 36136  00972E  0E00               	movlw	0
 36137  009730  6FCC               	movwf	_cntByte& (0+255),b
 36138                           
 36139                           ; BSR set to: 0
 36140  009732  0012               	return		;funcret
 36141  009734                     __end_of_StopHandler:
 36142                           	opt callstack 0
 36143                           
 36144 ;; *************** function _UpdateState *****************
 36145 ;; Defined at:
 36146 ;;		line 65 in file "controller.c"
 36147 ;; Parameters:    Size  Location     Type
 36148 ;;		None
 36149 ;; Auto vars:     Size  Location     Type
 36150 ;;  initPhase       2   91[COMRAM] int 
 36151 ;; Return value:  Size  Location     Type
 36152 ;;                  1    wreg      void 
 36153 ;; Registers used:
 36154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36155 ;; Tracked objects:
 36156 ;;		On entry : 3F/0
 36157 ;;		On exit  : 3D/0
 36158 ;;		Unchanged: 0/0
 36159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36162 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36163 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36164 ;;Total ram usage:        8 bytes
 36165 ;; Hardware stack levels used:    1
 36166 ;; Hardware stack levels required when called:   11
 36167 ;; This function calls:
 36168 ;;		_ClearAllAlarm
 36169 ;;		_ControllerBuzzerCheck
 36170 ;;		_DisplayDisable
 36171 ;;		_DisplayEnable
 36172 ;;		_GetControllerBuzzerCheck
 36173 ;;		_SetControlFailAlarm
 36174 ;;		_SetMaxPressure
 36175 ;;		_SetTarget
 36176 ;;		_SetVolumeControl
 36177 ;;		i2_ClearControlFailAlarm
 36178 ;;		i2_EnableAlarmSV1
 36179 ;;		i2_LCDOff
 36180 ;;		i2_LCDOn
 36181 ;;		i2_MonitorDisable
 36182 ;;		i2_MonitorEnable
 36183 ;;		i2_SetCalibrateState
 36184 ;;		i2_SetSV1
 36185 ;;		i2_printf
 36186 ;; This function is called by:
 36187 ;;		_StopHandler
 36188 ;; This function uses a non-reentrant model
 36189 ;;
 36190                           
 36191                           	psect	text272
 36192  00423C                     __ptext272:
 36193                           	opt callstack 0
 36194  00423C                     _UpdateState:
 36195                           	opt callstack 2
 36196                           
 36197                           ; BSR set to: 0
 36198                           ;controller.c: 66:     static uint8_t old;;controller.c: 68:     old= msg.cntMsg.state;
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;incstack = 0
 36202  00423C  C200  F298         	movff	_msg,UpdateState@old
 36203                           
 36204                           ; BSR set to: 0
 36205                           ;controller.c: 69:     init = (msg.cntMsg.state & 0xE0);
 36206  004240  0060  F800  F0BD   	movff	_msg,??_UpdateState
 36207  004246  0EE0               	movlw	224
 36208  004248  17BD               	andwf	??_UpdateState& (0+255),f,b
 36209  00424A  B4D8               	btfsc	status,2,c
 36210  00424C  D002               	goto	i2u1872_40
 36211  00424E  0E01               	movlw	1
 36212  004250  D001               	goto	i2u1873_40
 36213  004252                     i2u1872_40:
 36214  004252  0E00               	movlw	0
 36215  004254                     i2u1873_40:
 36216  004254  0102               	movlb	2	; () banked
 36217  004256  6F9A               	movwf	_init& (0+255),b
 36218                           
 36219                           ; BSR set to: 2
 36220                           ;controller.c: 70:     if (init) {
 36221  004258  519A               	movf	_init& (0+255),w,b
 36222  00425A  B4D8               	btfsc	status,2,c
 36223  00425C  D078               	goto	i2l19124
 36224                           
 36225                           ; BSR set to: 2
 36226                           ;controller.c: 71:         int initPhase = (msg.cntMsg.state & 0xE0)>>5;
 36227  00425E  0060  F800  F0BD   	movff	_msg,??_UpdateState
 36228  004264  0E05               	movlw	5
 36229  004266  0100               	movlb	0	; () banked
 36230  004268  6FBE               	movwf	(??_UpdateState+1)& (0+255),b
 36231  00426A                     i2u1875_45:
 36232  00426A  90D8               	bcf	status,0,c
 36233  00426C  33BD               	rrcf	??_UpdateState& (0+255),f,b
 36234  00426E  2FBE               	decfsz	(??_UpdateState+1)& (0+255),f,b
 36235  004270  D7FC               	goto	i2u1875_45
 36236  004272  0E07               	movlw	7
 36237  004274  17BD               	andwf	??_UpdateState& (0+255),f,b
 36238  004276  51BD               	movf	??_UpdateState& (0+255),w,b
 36239  004278  6E5C               	movwf	UpdateState@initPhase^0,c
 36240  00427A  6A5D               	clrf	(UpdateState@initPhase+1)^0,c
 36241                           
 36242                           ; BSR set to: 0
 36243                           ;controller.c: 72:         printf("\r\nINIT: %d\r\n", initPhase);
 36244  00427C  0E6A               	movlw	low STR_49
 36245  00427E  6F77               	movwf	i2printf@fmt& (0+255),b
 36246  004280  0EFF               	movlw	high STR_49
 36247  004282  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36248  004284  0060  F170  F079   	movff	UpdateState@initPhase,?i2_printf+2
 36249  00428A  0060  F174  F07A   	movff	UpdateState@initPhase+1,?i2_printf+3
 36250  004290  ECBB  F052         	call	i2_printf	;wreg free
 36251                           
 36252                           ; BSR set to: 2
 36253                           ;controller.c: 73:         if (initPhase == 5 || initPhase==3) SetSV1(1);
 36254  004294  0E05               	movlw	5
 36255  004296  185C               	xorwf	UpdateState@initPhase^0,w,c
 36256  004298  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36257  00429A  B4D8               	btfsc	status,2,c
 36258  00429C  D005               	goto	i2u1877_40
 36259                           
 36260                           ; BSR set to: 2
 36261  00429E  0E03               	movlw	3
 36262  0042A0  185C               	xorwf	UpdateState@initPhase^0,w,c
 36263  0042A2  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36264  0042A4  A4D8               	btfss	status,2,c
 36265  0042A6  D003               	goto	i2l19084
 36266  0042A8                     i2u1877_40:
 36267                           
 36268                           ; BSR set to: 2
 36269  0042A8  0E01               	movlw	1
 36270  0042AA  ECA3  F051         	call	i2_SetSV1
 36271  0042AE                     i2l19084:
 36272                           
 36273                           ;controller.c: 74:         if (initPhase == 1 || initPhase==2 || initPhase==4 || initPha
      +                          se==6 || initPhase==7) SetSV1(0);
 36274  0042AE  045C               	decf	UpdateState@initPhase^0,w,c
 36275  0042B0  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36276  0042B2  B4D8               	btfsc	status,2,c
 36277  0042B4  D014               	goto	i2u1882_40
 36278  0042B6  0E02               	movlw	2
 36279  0042B8  185C               	xorwf	UpdateState@initPhase^0,w,c
 36280  0042BA  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36281  0042BC  B4D8               	btfsc	status,2,c
 36282  0042BE  D00F               	goto	i2u1882_40
 36283  0042C0  0E04               	movlw	4
 36284  0042C2  185C               	xorwf	UpdateState@initPhase^0,w,c
 36285  0042C4  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36286  0042C6  B4D8               	btfsc	status,2,c
 36287  0042C8  D00A               	goto	i2u1882_40
 36288  0042CA  0E06               	movlw	6
 36289  0042CC  185C               	xorwf	UpdateState@initPhase^0,w,c
 36290  0042CE  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36291  0042D0  B4D8               	btfsc	status,2,c
 36292  0042D2  D005               	goto	i2u1882_40
 36293  0042D4  0E07               	movlw	7
 36294  0042D6  185C               	xorwf	UpdateState@initPhase^0,w,c
 36295  0042D8  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36296  0042DA  A4D8               	btfss	status,2,c
 36297  0042DC  D003               	goto	i2l19096
 36298  0042DE                     i2u1882_40:
 36299  0042DE  0E00               	movlw	0
 36300  0042E0  ECA3  F051         	call	i2_SetSV1
 36301  0042E4                     i2l19096:
 36302                           
 36303                           ;controller.c: 75:         if (initPhase == 2) SetCalibrateState(1); else SetCalibrateSt
      +                          ate(0);
 36304  0042E4  0E02               	movlw	2
 36305  0042E6  185C               	xorwf	UpdateState@initPhase^0,w,c
 36306  0042E8  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36307  0042EA  A4D8               	btfss	status,2,c
 36308  0042EC  D004               	goto	i2l19100
 36309  0042EE  0E01               	movlw	1
 36310  0042F0  EC70  F034         	call	i2_SetCalibrateState
 36311  0042F4  D003               	goto	i2l19104
 36312  0042F6                     i2l19100:
 36313  0042F6  0E00               	movlw	0
 36314  0042F8  EC70  F034         	call	i2_SetCalibrateState
 36315  0042FC                     i2l19104:
 36316                           
 36317                           ; BSR set to: 2
 36318                           ;controller.c: 82:         if (initPhase == 2) {
 36319  0042FC  0E02               	movlw	2
 36320  0042FE  185C               	xorwf	UpdateState@initPhase^0,w,c
 36321  004300  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36322  004302  B4D8               	btfsc	status,2,c
 36323                           
 36324                           ; BSR set to: 2
 36325                           ;controller.c: 83:             GetControllerBuzzerCheck();
 36326  004304  EC47  F055         	call	_GetControllerBuzzerCheck	;wreg free
 36327                           
 36328                           ; BSR set to: 2
 36329                           ;controller.c: 85:          if (initPhase == 3) {
 36330  004308  0E03               	movlw	3
 36331  00430A  185C               	xorwf	UpdateState@initPhase^0,w,c
 36332  00430C  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36333  00430E  B4D8               	btfsc	status,2,c
 36334                           
 36335                           ; BSR set to: 2
 36336                           ;controller.c: 86:             ControllerBuzzerCheck();
 36337  004310  ECCE  F056         	call	_ControllerBuzzerCheck	;wreg free
 36338                           
 36339                           ; BSR set to: 2
 36340                           ;controller.c: 88:          if (initPhase == 4) {
 36341  004314  0E04               	movlw	4
 36342  004316  185C               	xorwf	UpdateState@initPhase^0,w,c
 36343  004318  105D               	iorwf	(UpdateState@initPhase+1)^0,w,c
 36344  00431A  A4D8               	btfss	status,2,c
 36345  00431C  D016               	goto	i2l19122
 36346                           
 36347                           ; BSR set to: 2
 36348                           ;controller.c: 89:             if (!GetControllerBuzzerCheck()) {
 36349  00431E  EC47  F055         	call	_GetControllerBuzzerCheck	;wreg free
 36350  004322  0900               	iorlw	0
 36351  004324  A4D8               	btfss	status,2,c
 36352  004326  D00A               	goto	i2l19120
 36353                           
 36354                           ; BSR set to: 2
 36355                           ;controller.c: 90:                 printf("\r\n Error in Controller buzzer\r\n");
 36356  004328  0E27               	movlw	low STR_50
 36357  00432A  0100               	movlb	0	; () banked
 36358  00432C  6F77               	movwf	i2printf@fmt& (0+255),b
 36359  00432E  0EFE               	movlw	high STR_50
 36360  004330  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36361  004332  ECBB  F052         	call	i2_printf	;wreg free
 36362                           
 36363                           ; BSR set to: 2
 36364                           ;controller.c: 91:                 SetControlFailAlarm();
 36365  004336  EC67  F057         	call	_SetControlFailAlarm	;wreg free
 36366                           
 36367                           ;controller.c: 92:             } else {
 36368  00433A  D007               	goto	i2l19122
 36369  00433C                     i2l19120:
 36370                           
 36371                           ; BSR set to: 2
 36372                           ;controller.c: 93:                 printf("\r\n Controller buzzer detected\r\n");
 36373  00433C  0E07               	movlw	low STR_51
 36374  00433E  0100               	movlb	0	; () banked
 36375  004340  6F77               	movwf	i2printf@fmt& (0+255),b
 36376  004342  0EFE               	movlw	high STR_51
 36377  004344  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36378  004346  ECBB  F052         	call	i2_printf	;wreg free
 36379  00434A                     i2l19122:
 36380                           
 36381                           ;controller.c: 97:         EnableAlarmSV1();
 36382  00434A  EC63  F057         	call	i2_EnableAlarmSV1	;wreg free
 36383  00434E                     i2l19124:
 36384                           
 36385                           ;controller.c: 99:     if (msg.cntMsg.state & 0x8) {
 36386  00434E  0102               	movlb	2	; () banked
 36387  004350  A700               	btfss	_msg& (0+255),3,b
 36388  004352  D00F               	goto	i2l19136
 36389                           
 36390                           ; BSR set to: 2
 36391                           ;controller.c: 100:         LCDOff();
 36392  004354  ECF2  F056         	call	i2_LCDOff	;wreg free
 36393                           
 36394                           ; BSR set to: 1
 36395                           ;controller.c: 101:         ClearAllAlarm();
 36396  004358  EC5C  F04D         	call	_ClearAllAlarm	;wreg free
 36397                           
 36398                           ; BSR set to: 2
 36399                           ;controller.c: 102:         MonitorDisable();
 36400  00435C  EC5F  F057         	call	i2_MonitorDisable	;wreg free
 36401                           
 36402                           ; BSR set to: 2
 36403                           ;controller.c: 103:         DisplayDisable();
 36404  004360  EC50  F055         	call	_DisplayDisable	;wreg free
 36405                           
 36406                           ; BSR set to: 0
 36407                           ;controller.c: 104:         printf("\r\n SLEEP MODE\r\n");
 36408  004364  0E01               	movlw	low STR_52
 36409  004366  6F77               	movwf	i2printf@fmt& (0+255),b
 36410  004368  0EFF               	movlw	high STR_52
 36411  00436A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36412  00436C  ECBB  F052         	call	i2_printf	;wreg free
 36413                           
 36414                           ;controller.c: 105:     } else {
 36415  004370  D002               	goto	i2l19138
 36416  004372                     i2l19136:
 36417                           
 36418                           ; BSR set to: 2
 36419                           ;controller.c: 106:         LCDOn();
 36420  004372  ECED  F056         	call	i2_LCDOn	;wreg free
 36421  004376                     i2l19138:
 36422                           
 36423                           ;controller.c: 109:     run = (msg.cntMsg.state & 0x10) == 0x10;
 36424  004376  0102               	movlb	2	; () banked
 36425  004378  A900               	btfss	_msg& (0+255),4,b
 36426  00437A  D002               	goto	i2u1889_40
 36427  00437C  0E01               	movlw	1
 36428  00437E  D001               	goto	i2u1890_40
 36429  004380                     i2u1889_40:
 36430  004380  0E00               	movlw	0
 36431  004382                     i2u1890_40:
 36432  004382  0100               	movlb	0	; () banked
 36433  004384  6FEC               	movwf	_run& (0+255),b
 36434                           
 36435                           ; BSR set to: 0
 36436                           ;controller.c: 112:     if (run) SetSV1(1);
 36437  004386  51EC               	movf	_run& (0+255),w,b
 36438  004388  B4D8               	btfsc	status,2,c
 36439  00438A  D003               	goto	i2l19144
 36440                           
 36441                           ; BSR set to: 0
 36442  00438C  0E01               	movlw	1
 36443  00438E  ECA3  F051         	call	i2_SetSV1
 36444  004392                     i2l19144:
 36445                           
 36446                           ;controller.c: 113:     if (run) MonitorEnable(); else MonitorDisable();
 36447  004392  0100               	movlb	0	; () banked
 36448  004394  51EC               	movf	_run& (0+255),w,b
 36449  004396  B4D8               	btfsc	status,2,c
 36450  004398  D003               	goto	i2l19148
 36451                           
 36452                           ; BSR set to: 0
 36453  00439A  EC5B  F057         	call	i2_MonitorEnable	;wreg free
 36454  00439E  D002               	goto	i2l19150
 36455  0043A0                     i2l19148:
 36456                           
 36457                           ; BSR set to: 0
 36458  0043A0  EC5F  F057         	call	i2_MonitorDisable	;wreg free
 36459  0043A4                     i2l19150:
 36460                           
 36461                           ; BSR set to: 2
 36462                           ;controller.c: 114:     if (run) DisplayEnable(); else DisplayDisable();
 36463  0043A4  0100               	movlb	0	; () banked
 36464  0043A6  51EC               	movf	_run& (0+255),w,b
 36465  0043A8  B4D8               	btfsc	status,2,c
 36466  0043AA  D003               	goto	i2l19154
 36467                           
 36468                           ; BSR set to: 0
 36469  0043AC  EC91  F055         	call	_DisplayEnable	;wreg free
 36470  0043B0  D002               	goto	i2l19156
 36471  0043B2                     i2l19154:
 36472                           
 36473                           ; BSR set to: 0
 36474  0043B2  EC50  F055         	call	_DisplayDisable	;wreg free
 36475  0043B6                     i2l19156:
 36476                           
 36477                           ; BSR set to: 0
 36478                           ;controller.c: 115:     volumeControl = (msg.cntMsg.state & 0x14) == 0x14;
 36479  0043B6  0102               	movlb	2	; () banked
 36480  0043B8  5100               	movf	_msg& (0+255),w,b
 36481  0043BA  0B14               	andlw	20
 36482  0043BC  0A14               	xorlw	20
 36483  0043BE  A4D8               	btfss	status,2,c
 36484  0043C0  D002               	goto	i2u1894_40
 36485  0043C2  0E01               	movlw	1
 36486  0043C4  D001               	goto	i2u1895_40
 36487  0043C6                     i2u1894_40:
 36488  0043C6  0E00               	movlw	0
 36489  0043C8                     i2u1895_40:
 36490  0043C8  6F99               	movwf	controller@volumeControl& (0+255),b
 36491                           
 36492                           ; BSR set to: 2
 36493                           ;controller.c: 116:     SetVolumeControl(volumeControl);
 36494  0043CA  5199               	movf	controller@volumeControl& (0+255),w,b
 36495  0043CC  ECF7  F056         	call	_SetVolumeControl
 36496                           
 36497                           ;controller.c: 118:     SetTarget(msg.cntMsg.pmax & 0x7F, msg.cntMsg.ip & 0x3F, msg.cntM
      +                          sg.ep & 0x3F, msg.cntMsg.bpm & 0x3F, (msg.cntMsg.vhigh&0x7F)*20, (msg.cntMsg.vlow&0x7F)*
      +                          20);
 36498  0043D0  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 36499  0043D6  0E7F               	movlw	127
 36500  0043D8  0100               	movlb	0	; () banked
 36501  0043DA  17BD               	andwf	??_UpdateState& (0+255),f,b
 36502  0043DC  51BD               	movf	??_UpdateState& (0+255),w,b
 36503  0043DE  6E1B               	movwf	SetTarget@pmax^0,c
 36504  0043E0  6A1C               	clrf	(SetTarget@pmax+1)^0,c
 36505  0043E2  0060  F804  F0BE   	movff	_msg+1,??_UpdateState+1
 36506  0043E8  0E3F               	movlw	63
 36507  0043EA  17BE               	andwf	(??_UpdateState+1)& (0+255),f,b
 36508  0043EC  51BE               	movf	(??_UpdateState+1)& (0+255),w,b
 36509  0043EE  6E1D               	movwf	SetTarget@ip^0,c
 36510  0043F0  6A1E               	clrf	(SetTarget@ip+1)^0,c
 36511  0043F2  0060  F808  F0BF   	movff	_msg+2,??_UpdateState+2
 36512  0043F8  0E3F               	movlw	63
 36513  0043FA  17BF               	andwf	(??_UpdateState+2)& (0+255),f,b
 36514  0043FC  51BF               	movf	(??_UpdateState+2)& (0+255),w,b
 36515  0043FE  6E1F               	movwf	SetTarget@ep^0,c
 36516  004400  6A20               	clrf	(SetTarget@ep+1)^0,c
 36517  004402  0060  F80C  F0C0   	movff	_msg+3,??_UpdateState+3
 36518  004408  0E3F               	movlw	63
 36519  00440A  17C0               	andwf	(??_UpdateState+3)& (0+255),f,b
 36520  00440C  51C0               	movf	(??_UpdateState+3)& (0+255),w,b
 36521  00440E  6E21               	movwf	SetTarget@br^0,c
 36522  004410  6A22               	clrf	(SetTarget@br+1)^0,c
 36523  004412  0060  F81C  F0C1   	movff	_msg+7,??_UpdateState+4
 36524  004418  0E7F               	movlw	127
 36525  00441A  17C1               	andwf	(??_UpdateState+4)& (0+255),f,b
 36526  00441C  51C1               	movf	(??_UpdateState+4)& (0+255),w,b
 36527  00441E  0D14               	mullw	20
 36528  004420  006F FFCC  F023    	movff	prodl,SetTarget@vmax
 36529  004426  006F FFD0  F024    	movff	prodh,SetTarget@vmax+1
 36530  00442C  0060  F818  F0C2   	movff	_msg+6,??_UpdateState+5
 36531  004432  0E7F               	movlw	127
 36532  004434  17C2               	andwf	(??_UpdateState+5)& (0+255),f,b
 36533  004436  51C2               	movf	(??_UpdateState+5)& (0+255),w,b
 36534  004438  0D14               	mullw	20
 36535  00443A  006F FFCC  F025    	movff	prodl,SetTarget@vmin
 36536  004440  006F FFD0  F026    	movff	prodh,SetTarget@vmin+1
 36537  004446  EC5A  F03E         	call	_SetTarget	;wreg free
 36538                           
 36539                           ;controller.c: 119:     SetMaxPressure(msg.cntMsg.pmax & 0x7F);
 36540  00444A  0060  F810  F0BD   	movff	_msg+4,??_UpdateState
 36541  004450  0E7F               	movlw	127
 36542  004452  0100               	movlb	0	; () banked
 36543  004454  17BD               	andwf	??_UpdateState& (0+255),f,b
 36544  004456  51BD               	movf	??_UpdateState& (0+255),w,b
 36545  004458  6E01               	movwf	SetMaxPressure@pr^0,c
 36546  00445A  6A02               	clrf	(SetMaxPressure@pr+1)^0,c
 36547  00445C  EC65  F056         	call	_SetMaxPressure	;wreg free
 36548                           
 36549                           ; BSR set to: 0
 36550                           ;controller.c: 122:     spr = msg.cntMsg.spr;
 36551  004460  C208  F232         	movff	_msg+8,_spr
 36552  004464  0102               	movlb	2	; () banked
 36553  004466  6B33               	clrf	(_spr+1)& (0+255),b
 36554                           
 36555                           ; BSR set to: 2
 36556                           ;controller.c: 124:     static int cnt=0;;controller.c: 125:     if (msg.cntMsg.alarm & 
      +                          0x80) {
 36557  004468  AF09               	btfss	(_msg+9)& (0+255),7,b
 36558  00446A  D00D               	goto	i2l19174
 36559                           
 36560                           ; BSR set to: 2
 36561                           ;controller.c: 128:         cnt++;
 36562  00446C  4B30               	infsnz	UpdateState@cnt& (0+255),f,b
 36563  00446E  2B31               	incf	(UpdateState@cnt+1)& (0+255),f,b
 36564                           
 36565                           ; BSR set to: 2
 36566                           ;controller.c: 129:         if (cnt>10) SetControlFailAlarm();
 36567  004470  BF31               	btfsc	(UpdateState@cnt+1)& (0+255),7,b
 36568  004472  0012               	return	
 36569  004474  5131               	movf	(UpdateState@cnt+1)& (0+255),w,b
 36570  004476  E104               	bnz	i2u1897_40
 36571  004478  0E0B               	movlw	11
 36572  00447A  5D30               	subwf	UpdateState@cnt& (0+255),w,b
 36573  00447C  A0D8               	btfss	status,0,c
 36574  00447E  0012               	return	
 36575  004480                     i2u1897_40:
 36576                           
 36577                           ; BSR set to: 2
 36578  004480  EC67  F057         	call	_SetControlFailAlarm	;wreg free
 36579  004484  0012               	return	
 36580  004486                     i2l19174:
 36581                           
 36582                           ; BSR set to: 2
 36583                           ;controller.c: 131:         ClearControlFailAlarm();
 36584  004486  EC7F  F057         	call	i2_ClearControlFailAlarm	;wreg free
 36585                           
 36586                           ; BSR set to: 0
 36587                           ;controller.c: 132:         cnt = 0;
 36588  00448A  0E00               	movlw	0
 36589  00448C  0102               	movlb	2	; () banked
 36590  00448E  6F31               	movwf	(UpdateState@cnt+1)& (0+255),b
 36591  004490  0E00               	movlw	0
 36592  004492  6F30               	movwf	UpdateState@cnt& (0+255),b
 36593  004494  0012               	return		;funcret
 36594  004496                     __end_of_UpdateState:
 36595                           	opt callstack 0
 36596                           
 36597 ;; *************** function i2_SetSV1 *****************
 36598 ;; Defined at:
 36599 ;;		line 871 in file "monitor.c"
 36600 ;; Parameters:    Size  Location     Type
 36601 ;;  value           1    wreg     _Bool 
 36602 ;; Auto vars:     Size  Location     Type
 36603 ;;  value           1   90[COMRAM] _Bool 
 36604 ;; Return value:  Size  Location     Type
 36605 ;;                  1    wreg      void 
 36606 ;; Registers used:
 36607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36608 ;; Tracked objects:
 36609 ;;		On entry : 3D/2
 36610 ;;		On exit  : 3D/0
 36611 ;;		Unchanged: 0/0
 36612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36617 ;;Total ram usage:        1 bytes
 36618 ;; Hardware stack levels used:    1
 36619 ;; Hardware stack levels required when called:    9
 36620 ;; This function calls:
 36621 ;;		i2_printf
 36622 ;; This function is called by:
 36623 ;;		_UpdateState
 36624 ;; This function uses a non-reentrant model
 36625 ;;
 36626                           
 36627                           	psect	text273
 36628  00A346                     __ptext273:
 36629                           	opt callstack 0
 36630  00A346                     i2_SetSV1:
 36631                           	opt callstack 3
 36632                           
 36633                           ;incstack = 0
 36634                           ;i2SetSV1@value stored from wreg
 36635  00A346  6E5B               	movwf	i2SetSV1@value^0,c
 36636                           
 36637                           ;monitor.c: 872:     static _Bool last= 0;;monitor.c: 873:     if (last!=value) printf("
      +                          \r\nSV1: %d\r\n", value);
 36638  00A348  505B               	movf	i2SetSV1@value^0,w,c
 36639  00A34A  0100               	movlb	0	; () banked
 36640  00A34C  19ED               	xorwf	SetSV1@last& (0+255),w,b
 36641  00A34E  B4D8               	btfsc	status,2,c
 36642  00A350  D00A               	goto	i2l18942
 36643                           
 36644                           ; BSR set to: 0
 36645  00A352  0E90               	movlw	low STR_48
 36646  00A354  6F77               	movwf	i2printf@fmt& (0+255),b
 36647  00A356  0EFF               	movlw	high STR_48
 36648  00A358  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36649  00A35A  0060  F16C  F079   	movff	i2SetSV1@value,?i2_printf+2
 36650  00A360  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 36651  00A362  ECBB  F052         	call	i2_printf	;wreg free
 36652  00A366                     i2l18942:
 36653                           
 36654                           ;monitor.c: 874:     last = value;
 36655  00A366  0060  F16C  F0ED   	movff	i2SetSV1@value,SetSV1@last
 36656                           
 36657                           ;monitor.c: 875:     normalSV1 = value;
 36658  00A36C  0060  F16C  F29F   	movff	i2SetSV1@value,_normalSV1
 36659  00A372  0012               	return		;funcret
 36660  00A374                     __end_ofi2_SetSV1:
 36661                           	opt callstack 0
 36662                           
 36663 ;; *************** function i2_SetCalibrateState *****************
 36664 ;; Defined at:
 36665 ;;		line 243 in file "monitor.c"
 36666 ;; Parameters:    Size  Location     Type
 36667 ;;  calib           1    wreg     _Bool 
 36668 ;; Auto vars:     Size  Location     Type
 36669 ;;  calib           1   90[COMRAM] _Bool 
 36670 ;; Return value:  Size  Location     Type
 36671 ;;                  1    wreg      void 
 36672 ;; Registers used:
 36673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36674 ;; Tracked objects:
 36675 ;;		On entry : 3D/2
 36676 ;;		On exit  : 3F/2
 36677 ;;		Unchanged: 0/0
 36678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36683 ;;Total ram usage:        1 bytes
 36684 ;; Hardware stack levels used:    1
 36685 ;; Hardware stack levels required when called:    9
 36686 ;; This function calls:
 36687 ;;		i2_ClearVars
 36688 ;;		i2_GetPressureV_pa
 36689 ;;		i2_GetPressure_pa
 36690 ;;		i2_TMR0_StartTimer
 36691 ;;		i2_TMR0_StopTimer
 36692 ;;		i2_UnDisplayCalibrate
 36693 ;;		i2___awdiv
 36694 ;;		i2_printf
 36695 ;; This function is called by:
 36696 ;;		_UpdateState
 36697 ;; This function uses a non-reentrant model
 36698 ;;
 36699                           
 36700                           	psect	text274
 36701  0068E0                     __ptext274:
 36702                           	opt callstack 0
 36703  0068E0                     i2_SetCalibrateState:
 36704                           	opt callstack 3
 36705                           
 36706                           ;incstack = 0
 36707                           ;i2SetCalibrateState@calib stored from wreg
 36708  0068E0  6E5B               	movwf	i2SetCalibrateState@calib^0,c
 36709                           
 36710                           ;monitor.c: 244:     TMR0_StopTimer();
 36711  0068E2  EC1E  F058         	call	i2_TMR0_StopTimer	;wreg free
 36712                           
 36713                           ;monitor.c: 245:     if (calib) {
 36714  0068E6  505B               	movf	i2SetCalibrateState@calib^0,w,c
 36715  0068E8  B4D8               	btfsc	status,2,c
 36716  0068EA  D006               	goto	i2l18918
 36717                           
 36718                           ;monitor.c: 247:         state = 1;
 36719  0068EC  0E00               	movlw	0
 36720  0068EE  0101               	movlb	1	; () banked
 36721  0068F0  6FE6               	movwf	(_state+1)& (0+255),b
 36722  0068F2  0E01               	movlw	1
 36723  0068F4  6FE5               	movwf	_state& (0+255),b
 36724                           
 36725                           ;monitor.c: 248:     } else {
 36726  0068F6  D082               	goto	i2l18928
 36727  0068F8                     i2l18918:
 36728                           
 36729                           ;monitor.c: 259:         if (state == 1) {
 36730  0068F8  0101               	movlb	1	; () banked
 36731  0068FA  05E5               	decf	_state& (0+255),w,b
 36732  0068FC  11E6               	iorwf	(_state+1)& (0+255),w,b
 36733  0068FE  A4D8               	btfss	status,2,c
 36734  006900  D07B               	goto	i2l18926
 36735                           
 36736                           ; BSR set to: 1
 36737                           ;monitor.c: 260:             printf("\r\nPreCalib: Pres:%d Off:%d //Volume pres:%d Off:%
      +                          d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36738  006902  0E05               	movlw	low STR_40
 36739  006904  0100               	movlb	0	; () banked
 36740  006906  6F77               	movwf	i2printf@fmt& (0+255),b
 36741  006908  0EFD               	movlw	high STR_40
 36742  00690A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36743  00690C  EC7A  F02C         	call	i2_GetPressure_pa	;wreg free
 36744  006910  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36745  006916  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36746  00691C  0060  F7E8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36747  006922  0060  F7EC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36748  006928  0E00               	movlw	0
 36749  00692A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36750  00692C  0E08               	movlw	8
 36751  00692E  6E09               	movwf	i2___awdiv@divisor^0,c
 36752  006930  ECC1  F045         	call	i2___awdiv	;wreg free
 36753  006934  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36754  00693A  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36755  006940  EC24  F038         	call	i2_GetPressureV_pa	;wreg free
 36756  006944  0060  F06C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36757  00694A  0060  F070  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36758  006950  0060  F7E0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36759  006956  0060  F7E4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36760  00695C  0E00               	movlw	0
 36761  00695E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36762  006960  0E08               	movlw	8
 36763  006962  6E09               	movwf	i2___awdiv@divisor^0,c
 36764  006964  ECC1  F045         	call	i2___awdiv	;wreg free
 36765  006968  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36766  00696E  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36767  006974  ECBB  F052         	call	i2_printf	;wreg free
 36768                           
 36769                           ; BSR set to: 2
 36770                           ;monitor.c: 261:             state = 0;
 36771  006978  0E00               	movlw	0
 36772  00697A  0101               	movlb	1	; () banked
 36773  00697C  6FE6               	movwf	(_state+1)& (0+255),b
 36774  00697E  0E00               	movlw	0
 36775  006980  6FE5               	movwf	_state& (0+255),b
 36776                           
 36777                           ; BSR set to: 1
 36778                           ;monitor.c: 262:             printf("\r\nCalibrated: Pres:%d Off:%d //Volume pres:%d Off
      +                          :%d\r\n", GetPressure_pa(), adcOffset/8, GetPressureV_pa(), adcVOffset/8);
 36779  006982  0E98               	movlw	low STR_41
 36780  006984  0100               	movlb	0	; () banked
 36781  006986  6F77               	movwf	i2printf@fmt& (0+255),b
 36782  006988  0EFC               	movlw	high STR_41
 36783  00698A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 36784  00698C  EC7A  F02C         	call	i2_GetPressure_pa	;wreg free
 36785  006990  0060  F06C  F079   	movff	?i2_GetPressure_pa,?i2_printf+2
 36786  006996  0060  F070  F07A   	movff	?i2_GetPressure_pa+1,?i2_printf+3
 36787  00699C  0060  F7E8  F007   	movff	_adcOffset,i2___awdiv@dividend
 36788  0069A2  0060  F7EC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 36789  0069A8  0E00               	movlw	0
 36790  0069AA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36791  0069AC  0E08               	movlw	8
 36792  0069AE  6E09               	movwf	i2___awdiv@divisor^0,c
 36793  0069B0  ECC1  F045         	call	i2___awdiv	;wreg free
 36794  0069B4  0060  F01C  F07B   	movff	?i2___awdiv,?i2_printf+4
 36795  0069BA  0060  F020  F07C   	movff	?i2___awdiv+1,?i2_printf+5
 36796  0069C0  EC24  F038         	call	i2_GetPressureV_pa	;wreg free
 36797  0069C4  0060  F06C  F07D   	movff	?i2_GetPressureV_pa,?i2_printf+6
 36798  0069CA  0060  F070  F07E   	movff	?i2_GetPressureV_pa+1,?i2_printf+7
 36799  0069D0  0060  F7E0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 36800  0069D6  0060  F7E4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 36801  0069DC  0E00               	movlw	0
 36802  0069DE  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 36803  0069E0  0E08               	movlw	8
 36804  0069E2  6E09               	movwf	i2___awdiv@divisor^0,c
 36805  0069E4  ECC1  F045         	call	i2___awdiv	;wreg free
 36806  0069E8  0060  F01C  F07F   	movff	?i2___awdiv,?i2_printf+8
 36807  0069EE  0060  F020  F080   	movff	?i2___awdiv+1,?i2_printf+9
 36808  0069F4  ECBB  F052         	call	i2_printf	;wreg free
 36809  0069F8                     i2l18926:
 36810                           
 36811                           ;monitor.c: 264:         UnDisplayCalibrate();
 36812  0069F8  EC5E  F056         	call	i2_UnDisplayCalibrate	;wreg free
 36813  0069FC                     i2l18928:
 36814                           
 36815                           ;monitor.c: 266:     ClearVars();
 36816  0069FC  EC6E  F023         	call	i2_ClearVars	;wreg free
 36817                           
 36818                           ; BSR set to: 2
 36819                           ;monitor.c: 267:     TMR0_StartTimer();
 36820  006A00  EC20  F058         	call	i2_TMR0_StartTimer	;wreg free
 36821                           
 36822                           ; BSR set to: 2
 36823  006A04  0012               	return		;funcret
 36824  006A06                     __end_ofi2_SetCalibrateState:
 36825                           	opt callstack 0
 36826                           
 36827 ;; *************** function i2_UnDisplayCalibrate *****************
 36828 ;; Defined at:
 36829 ;;		line 61 in file "display.c"
 36830 ;; Parameters:    Size  Location     Type
 36831 ;;		None
 36832 ;; Auto vars:     Size  Location     Type
 36833 ;;		None
 36834 ;; Return value:  Size  Location     Type
 36835 ;;                  1    wreg      void 
 36836 ;; Registers used:
 36837 ;;		wreg, status,2
 36838 ;; Tracked objects:
 36839 ;;		On entry : 3C/1
 36840 ;;		On exit  : 3F/3
 36841 ;;		Unchanged: 0/0
 36842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36847 ;;Total ram usage:        0 bytes
 36848 ;; Hardware stack levels used:    1
 36849 ;; This function calls:
 36850 ;;		Nothing
 36851 ;; This function is called by:
 36852 ;;		i2_SetCalibrateState
 36853 ;; This function uses a non-reentrant model
 36854 ;;
 36855                           
 36856                           	psect	text275
 36857  00ACBC                     __ptext275:
 36858                           	opt callstack 0
 36859  00ACBC                     i2_UnDisplayCalibrate:
 36860                           	opt callstack 11
 36861                           
 36862                           ;display.c: 62:     calibrate=0;
 36863                           
 36864                           ; BSR set to: 2
 36865                           ;incstack = 0
 36866  00ACBC  0E00               	movlw	0
 36867  00ACBE  0100               	movlb	0	; () banked
 36868  00ACC0  6FFB               	movwf	_calibrate& (0+255),b
 36869                           
 36870                           ;display.c: 63:     msg4[0]=0;
 36871  00ACC2  0E00               	movlw	0
 36872  00ACC4  0103               	movlb	3	; () banked
 36873  00ACC6  6FA9               	movwf	_msg4& (0+255),b
 36874                           
 36875                           ; BSR set to: 3
 36876  00ACC8  0012               	return		;funcret
 36877  00ACCA                     __end_ofi2_UnDisplayCalibrate:
 36878                           	opt callstack 0
 36879                           
 36880 ;; *************** function i2_TMR0_StopTimer *****************
 36881 ;; Defined at:
 36882 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 36883 ;; Parameters:    Size  Location     Type
 36884 ;;		None
 36885 ;; Auto vars:     Size  Location     Type
 36886 ;;		None
 36887 ;; Return value:  Size  Location     Type
 36888 ;;                  1    wreg      void 
 36889 ;; Registers used:
 36890 ;;		None
 36891 ;; Tracked objects:
 36892 ;;		On entry : 0/2
 36893 ;;		On exit  : 0/0
 36894 ;;		Unchanged: 0/0
 36895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36900 ;;Total ram usage:        0 bytes
 36901 ;; Hardware stack levels used:    1
 36902 ;; This function calls:
 36903 ;;		Nothing
 36904 ;; This function is called by:
 36905 ;;		i2_SetCalibrateState
 36906 ;; This function uses a non-reentrant model
 36907 ;;
 36908                           
 36909                           	psect	text276
 36910  00B03C                     __ptext276:
 36911                           	opt callstack 0
 36912  00B03C                     i2_TMR0_StopTimer:
 36913                           	opt callstack 11
 36914                           
 36915                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 36916                           
 36917                           ; BSR set to: 3
 36918                           ;incstack = 0
 36919  00B03C  9EB8               	bcf	184,7,c	;volatile
 36920  00B03E  0012               	return		;funcret
 36921  00B040                     __end_ofi2_TMR0_StopTimer:
 36922                           	opt callstack 0
 36923                           
 36924 ;; *************** function i2_TMR0_StartTimer *****************
 36925 ;; Defined at:
 36926 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 36927 ;; Parameters:    Size  Location     Type
 36928 ;;		None
 36929 ;; Auto vars:     Size  Location     Type
 36930 ;;		None
 36931 ;; Return value:  Size  Location     Type
 36932 ;;                  1    wreg      void 
 36933 ;; Registers used:
 36934 ;;		None
 36935 ;; Tracked objects:
 36936 ;;		On entry : 3F/2
 36937 ;;		On exit  : 3F/2
 36938 ;;		Unchanged: 3F/0
 36939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36944 ;;Total ram usage:        0 bytes
 36945 ;; Hardware stack levels used:    1
 36946 ;; This function calls:
 36947 ;;		Nothing
 36948 ;; This function is called by:
 36949 ;;		i2_SetCalibrateState
 36950 ;; This function uses a non-reentrant model
 36951 ;;
 36952                           
 36953                           	psect	text277
 36954  00B040                     __ptext277:
 36955                           	opt callstack 0
 36956  00B040                     i2_TMR0_StartTimer:
 36957                           	opt callstack 11
 36958                           
 36959                           ; BSR set to: 2
 36960                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 36961                           
 36962                           ;incstack = 0
 36963  00B040  8EB8               	bsf	184,7,c	;volatile
 36964                           
 36965                           ; BSR set to: 2
 36966  00B042  0012               	return		;funcret
 36967  00B044                     __end_ofi2_TMR0_StartTimer:
 36968                           	opt callstack 0
 36969                           
 36970 ;; *************** function i2_GetPressure_pa *****************
 36971 ;; Defined at:
 36972 ;;		line 773 in file "monitor.c"
 36973 ;; Parameters:    Size  Location     Type
 36974 ;;		None
 36975 ;; Auto vars:     Size  Location     Type
 36976 ;;  GetPressure_    4   36[COMRAM] long 
 36977 ;;  GetPressure_    4   30[COMRAM] long 
 36978 ;;  GetPressure_    2   40[COMRAM] short 
 36979 ;;  GetPressure_    2   34[COMRAM] unsigned short 
 36980 ;; Return value:  Size  Location     Type
 36981 ;;                  2   26[COMRAM] short 
 36982 ;; Registers used:
 36983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36984 ;; Tracked objects:
 36985 ;;		On entry : 3E/1
 36986 ;;		On exit  : 0/0
 36987 ;;		Unchanged: 0/0
 36988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36990 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36992 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36993 ;;Total ram usage:       16 bytes
 36994 ;; Hardware stack levels used:    1
 36995 ;; Hardware stack levels required when called:    2
 36996 ;; This function calls:
 36997 ;;		i2_AdcGetData
 36998 ;;		i2___aldiv
 36999 ;;		i2___awdiv
 37000 ;;		i2___lmul
 37001 ;; This function is called by:
 37002 ;;		_MonitorPressureTask
 37003 ;;		_GetPressure_mbar02
 37004 ;;		i2_SetCalibrateState
 37005 ;; This function uses a non-reentrant model
 37006 ;;
 37007                           
 37008                           	psect	text278
 37009  0058F4                     __ptext278:
 37010                           	opt callstack 0
 37011  0058F4                     i2_GetPressure_pa:
 37012                           	opt callstack 12
 37013                           
 37014                           ;monitor.c: 774:     adc_result_t adc = AdcGetData(0);
 37015                           
 37016                           ; BSR set to: 2
 37017                           ;incstack = 0
 37018  0058F4  0E00               	movlw	0
 37019  0058F6  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 37020  0058F8  0E00               	movlw	0
 37021  0058FA  6E07               	movwf	i2AdcGetData@id^0,c
 37022  0058FC  ECC8  F049         	call	i2_AdcGetData	;wreg free
 37023  005900  0060  F01C  F023   	movff	?i2_AdcGetData,i2GetPressure_pa@adc
 37024  005906  0060  F020  F024   	movff	?i2_AdcGetData+1,i2GetPressure_pa@adc+1
 37025                           
 37026                           ;monitor.c: 775:     if (state == 1) {
 37027  00590C  0101               	movlb	1	; () banked
 37028  00590E  05E5               	decf	_state& (0+255),w,b
 37029  005910  11E6               	iorwf	(_state+1)& (0+255),w,b
 37030  005912  A4D8               	btfss	status,2,c
 37031  005914  D007               	goto	i2l18562
 37032                           
 37033                           ; BSR set to: 1
 37034                           ;monitor.c: 776:         return adc;
 37035  005916  0060  F08C  F01B   	movff	i2GetPressure_pa@adc,?i2_GetPressure_pa
 37036  00591C  0060  F090  F01C   	movff	i2GetPressure_pa@adc+1,?i2_GetPressure_pa+1
 37037  005922  0012               	return	
 37038  005924                     i2l18562:
 37039                           
 37040                           ; BSR set to: 1
 37041                           ;monitor.c: 779:     int32_t mv = adc - adcOffset/8;
 37042  005924  0060  F7E8  F007   	movff	_adcOffset,i2___awdiv@dividend
 37043  00592A  0060  F7EC  F008   	movff	_adcOffset+1,i2___awdiv@dividend+1
 37044  005930  0E00               	movlw	0
 37045  005932  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 37046  005934  0E08               	movlw	8
 37047  005936  6E09               	movwf	i2___awdiv@divisor^0,c
 37048  005938  ECC1  F045         	call	i2___awdiv	;wreg free
 37049  00593C  0060  F08C  F01D   	movff	i2GetPressure_pa@adc,??i2_GetPressure_pa
 37050  005942  0060  F090  F01E   	movff	i2GetPressure_pa@adc+1,??i2_GetPressure_pa+1
 37051  005948  5007               	movf	?i2___awdiv^0,w,c
 37052  00594A  5E1D               	subwf	??i2_GetPressure_pa^0,f,c
 37053  00594C  5008               	movf	(?i2___awdiv+1)^0,w,c
 37054  00594E  5A1E               	subwfb	(??i2_GetPressure_pa+1)^0,f,c
 37055  005950  0060  F074  F025   	movff	??i2_GetPressure_pa,i2GetPressure_pa@mv
 37056  005956  0060  F078  F026   	movff	??i2_GetPressure_pa+1,i2GetPressure_pa@mv+1
 37057  00595C  6A27               	clrf	(i2GetPressure_pa@mv+2)^0,c
 37058  00595E  6A28               	clrf	(i2GetPressure_pa@mv+3)^0,c
 37059                           
 37060                           ;monitor.c: 780:     mv = ( mv * 5000 )/ 4096;
 37061  005960  0060  F094  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 37062  005966  0060  F098  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 37063  00596C  0060  F09C  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 37064  005972  0060  F0A0  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 37065  005978  0E88               	movlw	136
 37066  00597A  6E05               	movwf	i2___lmul@multiplicand^0,c
 37067  00597C  0E13               	movlw	19
 37068  00597E  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37069  005980  0E00               	movlw	0
 37070  005982  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37071  005984  0E00               	movlw	0
 37072  005986  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37073  005988  ECBE  F04A         	call	i2___lmul	;wreg free
 37074  00598C  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 37075  005992  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 37076  005998  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 37077  00599E  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 37078  0059A4  0E00               	movlw	0
 37079  0059A6  6E11               	movwf	i2___aldiv@divisor^0,c
 37080  0059A8  0E10               	movlw	16
 37081  0059AA  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 37082  0059AC  0E00               	movlw	0
 37083  0059AE  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 37084  0059B0  0E00               	movlw	0
 37085  0059B2  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 37086  0059B4  EC8A  F03D         	call	i2___aldiv	;wreg free
 37087  0059B8  0060  F034  F025   	movff	?i2___aldiv,i2GetPressure_pa@mv
 37088  0059BE  0060  F038  F026   	movff	?i2___aldiv+1,i2GetPressure_pa@mv+1
 37089  0059C4  0060  F03C  F027   	movff	?i2___aldiv+2,i2GetPressure_pa@mv+2
 37090  0059CA  0060  F040  F028   	movff	?i2___aldiv+3,i2GetPressure_pa@mv+3
 37091                           
 37092                           ;monitor.c: 782:     int32_t p32 = (mv*100)/45;
 37093  0059D0  0060  F094  F001   	movff	i2GetPressure_pa@mv,i2___lmul@multiplier
 37094  0059D6  0060  F098  F002   	movff	i2GetPressure_pa@mv+1,i2___lmul@multiplier+1
 37095  0059DC  0060  F09C  F003   	movff	i2GetPressure_pa@mv+2,i2___lmul@multiplier+2
 37096  0059E2  0060  F0A0  F004   	movff	i2GetPressure_pa@mv+3,i2___lmul@multiplier+3
 37097  0059E8  0E64               	movlw	100
 37098  0059EA  6E05               	movwf	i2___lmul@multiplicand^0,c
 37099  0059EC  0E00               	movlw	0
 37100  0059EE  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37101  0059F0  0E00               	movlw	0
 37102  0059F2  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37103  0059F4  0E00               	movlw	0
 37104  0059F6  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37105  0059F8  ECBE  F04A         	call	i2___lmul	;wreg free
 37106  0059FC  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 37107  005A02  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 37108  005A08  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 37109  005A0E  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 37110  005A14  0E2D               	movlw	45
 37111  005A16  6E11               	movwf	i2___aldiv@divisor^0,c
 37112  005A18  0E00               	movlw	0
 37113  005A1A  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 37114  005A1C  0E00               	movlw	0
 37115  005A1E  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 37116  005A20  0E00               	movlw	0
 37117  005A22  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 37118  005A24  EC8A  F03D         	call	i2___aldiv	;wreg free
 37119  005A28  0060  F034  F01F   	movff	?i2___aldiv,i2GetPressure_pa@p32
 37120  005A2E  0060  F038  F020   	movff	?i2___aldiv+1,i2GetPressure_pa@p32+1
 37121  005A34  0060  F03C  F021   	movff	?i2___aldiv+2,i2GetPressure_pa@p32+2
 37122  005A3A  0060  F040  F022   	movff	?i2___aldiv+3,i2GetPressure_pa@p32+3
 37123                           
 37124                           ;monitor.c: 783:     int16_t p = ((int16_t) p32);
 37125  005A40  0060  F07C  F029   	movff	i2GetPressure_pa@p32,i2GetPressure_pa@p
 37126  005A46  0060  F080  F02A   	movff	i2GetPressure_pa@p32+1,i2GetPressure_pa@p+1
 37127                           
 37128                           ;monitor.c: 784:     if (p<0) p=0;
 37129  005A4C  AE2A               	btfss	(i2GetPressure_pa@p+1)^0,7,c
 37130  005A4E  D004               	goto	i2l18570
 37131  005A50  0E00               	movlw	0
 37132  005A52  6E2A               	movwf	(i2GetPressure_pa@p+1)^0,c
 37133  005A54  0E00               	movlw	0
 37134  005A56  6E29               	movwf	i2GetPressure_pa@p^0,c
 37135  005A58                     i2l18570:
 37136                           
 37137                           ;monitor.c: 785:     return p;
 37138  005A58  0060  F0A4  F01B   	movff	i2GetPressure_pa@p,?i2_GetPressure_pa
 37139  005A5E  0060  F0A8  F01C   	movff	i2GetPressure_pa@p+1,?i2_GetPressure_pa+1
 37140  005A64  0012               	return		;funcret
 37141  005A66                     __end_ofi2_GetPressure_pa:
 37142                           	opt callstack 0
 37143                           
 37144 ;; *************** function i2_GetPressureV_pa *****************
 37145 ;; Defined at:
 37146 ;;		line 798 in file "monitor.c"
 37147 ;; Parameters:    Size  Location     Type
 37148 ;;		None
 37149 ;; Auto vars:     Size  Location     Type
 37150 ;;  GetPressureV    4   32[COMRAM] long 
 37151 ;;  GetPressureV    2   36[COMRAM] short 
 37152 ;;  GetPressureV    2   30[COMRAM] unsigned short 
 37153 ;; Return value:  Size  Location     Type
 37154 ;;                  2   26[COMRAM] short 
 37155 ;; Registers used:
 37156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37157 ;; Tracked objects:
 37158 ;;		On entry : 0/1
 37159 ;;		On exit  : 0/0
 37160 ;;		Unchanged: 0/0
 37161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37163 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37165 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37166 ;;Total ram usage:       12 bytes
 37167 ;; Hardware stack levels used:    1
 37168 ;; Hardware stack levels required when called:    2
 37169 ;; This function calls:
 37170 ;;		i2_AdcGetData
 37171 ;;		i2___aldiv
 37172 ;;		i2___awdiv
 37173 ;;		i2___lmul
 37174 ;; This function is called by:
 37175 ;;		_MonitorPressureTask
 37176 ;;		i2_SetCalibrateState
 37177 ;; This function uses a non-reentrant model
 37178 ;;
 37179                           
 37180                           	psect	text279
 37181  007048                     __ptext279:
 37182                           	opt callstack 0
 37183  007048                     i2_GetPressureV_pa:
 37184                           	opt callstack 12
 37185                           
 37186                           ;monitor.c: 800:     adc_result_t adcv = AdcGetData(2);
 37187                           
 37188                           ;incstack = 0
 37189  007048  0E00               	movlw	0
 37190  00704A  6E08               	movwf	(i2AdcGetData@id+1)^0,c
 37191  00704C  0E02               	movlw	2
 37192  00704E  6E07               	movwf	i2AdcGetData@id^0,c
 37193  007050  ECC8  F049         	call	i2_AdcGetData	;wreg free
 37194  007054  0060  F01C  F01F   	movff	?i2_AdcGetData,i2GetPressureV_pa@adcv
 37195  00705A  0060  F020  F020   	movff	?i2_AdcGetData+1,i2GetPressureV_pa@adcv+1
 37196                           
 37197                           ;monitor.c: 801:     if (state == 1) {
 37198  007060  0101               	movlb	1	; () banked
 37199  007062  05E5               	decf	_state& (0+255),w,b
 37200  007064  11E6               	iorwf	(_state+1)& (0+255),w,b
 37201  007066  A4D8               	btfss	status,2,c
 37202  007068  D007               	goto	i2l18580
 37203                           
 37204                           ; BSR set to: 1
 37205                           ;monitor.c: 802:         return adcv;
 37206  00706A  0060  F07C  F01B   	movff	i2GetPressureV_pa@adcv,?i2_GetPressureV_pa
 37207  007070  0060  F080  F01C   	movff	i2GetPressureV_pa@adcv+1,?i2_GetPressureV_pa+1
 37208  007076  0012               	return	
 37209  007078                     i2l18580:
 37210                           
 37211                           ; BSR set to: 1
 37212                           ;monitor.c: 805:     int32_t mv = adcv - adcVOffset/8;
 37213  007078  0060  F7E0  F007   	movff	_adcVOffset,i2___awdiv@dividend
 37214  00707E  0060  F7E4  F008   	movff	_adcVOffset+1,i2___awdiv@dividend+1
 37215  007084  0E00               	movlw	0
 37216  007086  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 37217  007088  0E08               	movlw	8
 37218  00708A  6E09               	movwf	i2___awdiv@divisor^0,c
 37219  00708C  ECC1  F045         	call	i2___awdiv	;wreg free
 37220  007090  0060  F07C  F01D   	movff	i2GetPressureV_pa@adcv,??i2_GetPressureV_pa
 37221  007096  0060  F080  F01E   	movff	i2GetPressureV_pa@adcv+1,??i2_GetPressureV_pa+1
 37222  00709C  5007               	movf	?i2___awdiv^0,w,c
 37223  00709E  5E1D               	subwf	??i2_GetPressureV_pa^0,f,c
 37224  0070A0  5008               	movf	(?i2___awdiv+1)^0,w,c
 37225  0070A2  5A1E               	subwfb	(??i2_GetPressureV_pa+1)^0,f,c
 37226  0070A4  0060  F074  F021   	movff	??i2_GetPressureV_pa,i2GetPressureV_pa@mv
 37227  0070AA  0060  F078  F022   	movff	??i2_GetPressureV_pa+1,i2GetPressureV_pa@mv+1
 37228  0070B0  6A23               	clrf	(i2GetPressureV_pa@mv+2)^0,c
 37229  0070B2  6A24               	clrf	(i2GetPressureV_pa@mv+3)^0,c
 37230                           
 37231                           ;monitor.c: 806:     mv = ( mv * 5000 )/ 4096;
 37232  0070B4  0060  F084  F001   	movff	i2GetPressureV_pa@mv,i2___lmul@multiplier
 37233  0070BA  0060  F088  F002   	movff	i2GetPressureV_pa@mv+1,i2___lmul@multiplier+1
 37234  0070C0  0060  F08C  F003   	movff	i2GetPressureV_pa@mv+2,i2___lmul@multiplier+2
 37235  0070C6  0060  F090  F004   	movff	i2GetPressureV_pa@mv+3,i2___lmul@multiplier+3
 37236  0070CC  0E88               	movlw	136
 37237  0070CE  6E05               	movwf	i2___lmul@multiplicand^0,c
 37238  0070D0  0E13               	movlw	19
 37239  0070D2  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
 37240  0070D4  0E00               	movlw	0
 37241  0070D6  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
 37242  0070D8  0E00               	movlw	0
 37243  0070DA  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
 37244  0070DC  ECBE  F04A         	call	i2___lmul	;wreg free
 37245  0070E0  0060  F004  F00D   	movff	?i2___lmul,i2___aldiv@dividend
 37246  0070E6  0060  F008  F00E   	movff	?i2___lmul+1,i2___aldiv@dividend+1
 37247  0070EC  0060  F00C  F00F   	movff	?i2___lmul+2,i2___aldiv@dividend+2
 37248  0070F2  0060  F010  F010   	movff	?i2___lmul+3,i2___aldiv@dividend+3
 37249  0070F8  0E00               	movlw	0
 37250  0070FA  6E11               	movwf	i2___aldiv@divisor^0,c
 37251  0070FC  0E10               	movlw	16
 37252  0070FE  6E12               	movwf	(i2___aldiv@divisor+1)^0,c
 37253  007100  0E00               	movlw	0
 37254  007102  6E13               	movwf	(i2___aldiv@divisor+2)^0,c
 37255  007104  0E00               	movlw	0
 37256  007106  6E14               	movwf	(i2___aldiv@divisor+3)^0,c
 37257  007108  EC8A  F03D         	call	i2___aldiv	;wreg free
 37258  00710C  0060  F034  F021   	movff	?i2___aldiv,i2GetPressureV_pa@mv
 37259  007112  0060  F038  F022   	movff	?i2___aldiv+1,i2GetPressureV_pa@mv+1
 37260  007118  0060  F03C  F023   	movff	?i2___aldiv+2,i2GetPressureV_pa@mv+2
 37261  00711E  0060  F040  F024   	movff	?i2___aldiv+3,i2GetPressureV_pa@mv+3
 37262                           
 37263                           ;monitor.c: 808:     int16_t p = mv;
 37264  007124  0060  F084  F025   	movff	i2GetPressureV_pa@mv,i2GetPressureV_pa@p
 37265  00712A  0060  F088  F026   	movff	i2GetPressureV_pa@mv+1,i2GetPressureV_pa@p+1
 37266                           
 37267                           ;monitor.c: 810:     if (p<0) p=0;
 37268  007130  AE26               	btfss	(i2GetPressureV_pa@p+1)^0,7,c
 37269  007132  D004               	goto	i2l18588
 37270  007134  0E00               	movlw	0
 37271  007136  6E26               	movwf	(i2GetPressureV_pa@p+1)^0,c
 37272  007138  0E00               	movlw	0
 37273  00713A  6E25               	movwf	i2GetPressureV_pa@p^0,c
 37274  00713C                     i2l18588:
 37275                           
 37276                           ;monitor.c: 811:     return p;
 37277  00713C  0060  F094  F01B   	movff	i2GetPressureV_pa@p,?i2_GetPressureV_pa
 37278  007142  0060  F098  F01C   	movff	i2GetPressureV_pa@p+1,?i2_GetPressureV_pa+1
 37279  007148  0012               	return		;funcret
 37280  00714A                     __end_ofi2_GetPressureV_pa:
 37281                           	opt callstack 0
 37282                           
 37283 ;; *************** function i2___lmul *****************
 37284 ;; Defined at:
 37285 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 37286 ;; Parameters:    Size  Location     Type
 37287 ;;  multiplier      4    0[COMRAM] unsigned long 
 37288 ;;  multiplicand    4    4[COMRAM] unsigned long 
 37289 ;; Auto vars:     Size  Location     Type
 37290 ;;  __lmul          4    8[COMRAM] unsigned long 
 37291 ;; Return value:  Size  Location     Type
 37292 ;;                  4    0[COMRAM] unsigned long 
 37293 ;; Registers used:
 37294 ;;		wreg, status,2, status,0
 37295 ;; Tracked objects:
 37296 ;;		On entry : 0/0
 37297 ;;		On exit  : 0/0
 37298 ;;		Unchanged: 0/0
 37299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37303 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37304 ;;Total ram usage:       12 bytes
 37305 ;; Hardware stack levels used:    1
 37306 ;; This function calls:
 37307 ;;		Nothing
 37308 ;; This function is called by:
 37309 ;;		i2_GetPressure_pa
 37310 ;;		i2_GetPressureV_pa
 37311 ;;		i2_See12V
 37312 ;; This function uses a non-reentrant model
 37313 ;;
 37314                           
 37315                           	psect	text280
 37316  00957C                     __ptext280:
 37317                           	opt callstack 0
 37318  00957C                     i2___lmul:
 37319                           	opt callstack 13
 37320                           
 37321                           ;incstack = 0
 37322  00957C  0E00               	movlw	0
 37323  00957E  6E09               	movwf	i2___lmul@product^0,c
 37324  009580  0E00               	movlw	0
 37325  009582  6E0A               	movwf	(i2___lmul@product+1)^0,c
 37326  009584  0E00               	movlw	0
 37327  009586  6E0B               	movwf	(i2___lmul@product+2)^0,c
 37328  009588  0E00               	movlw	0
 37329  00958A  6E0C               	movwf	(i2___lmul@product+3)^0,c
 37330  00958C                     i2l18206:
 37331  00958C  A001               	btfss	i2___lmul@multiplier^0,0,c
 37332  00958E  D008               	goto	i2l18210
 37333  009590  5005               	movf	i2___lmul@multiplicand^0,w,c
 37334  009592  2609               	addwf	i2___lmul@product^0,f,c
 37335  009594  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
 37336  009596  220A               	addwfc	(i2___lmul@product+1)^0,f,c
 37337  009598  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
 37338  00959A  220B               	addwfc	(i2___lmul@product+2)^0,f,c
 37339  00959C  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
 37340  00959E  220C               	addwfc	(i2___lmul@product+3)^0,f,c
 37341  0095A0                     i2l18210:
 37342  0095A0  90D8               	bcf	status,0,c
 37343  0095A2  3605               	rlcf	i2___lmul@multiplicand^0,f,c
 37344  0095A4  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
 37345  0095A6  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
 37346  0095A8  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
 37347  0095AA  90D8               	bcf	status,0,c
 37348  0095AC  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
 37349  0095AE  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
 37350  0095B0  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
 37351  0095B2  3201               	rrcf	i2___lmul@multiplier^0,f,c
 37352  0095B4  5001               	movf	i2___lmul@multiplier^0,w,c
 37353  0095B6  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
 37354  0095B8  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
 37355  0095BA  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
 37356  0095BC  A4D8               	btfss	status,2,c
 37357  0095BE  D7E6               	goto	i2l18206
 37358  0095C0  0060  F024  F001   	movff	i2___lmul@product,?i2___lmul
 37359  0095C6  0060  F028  F002   	movff	i2___lmul@product+1,?i2___lmul+1
 37360  0095CC  0060  F02C  F003   	movff	i2___lmul@product+2,?i2___lmul+2
 37361  0095D2  0060  F030  F004   	movff	i2___lmul@product+3,?i2___lmul+3
 37362  0095D8  0012               	return		;funcret
 37363  0095DA                     __end_ofi2___lmul:
 37364                           	opt callstack 0
 37365                           
 37366 ;; *************** function i2_AdcGetData *****************
 37367 ;; Defined at:
 37368 ;;		line 88 in file "monitor.c"
 37369 ;; Parameters:    Size  Location     Type
 37370 ;;  id              2    6[COMRAM] int 
 37371 ;; Auto vars:     Size  Location     Type
 37372 ;;  AdcGetData      2    8[COMRAM] unsigned short 
 37373 ;; Return value:  Size  Location     Type
 37374 ;;                  2    6[COMRAM] unsigned short 
 37375 ;; Registers used:
 37376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37377 ;; Tracked objects:
 37378 ;;		On entry : 0/1
 37379 ;;		On exit  : 0/0
 37380 ;;		Unchanged: 0/0
 37381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37386 ;;Total ram usage:        4 bytes
 37387 ;; Hardware stack levels used:    1
 37388 ;; Hardware stack levels required when called:    1
 37389 ;; This function calls:
 37390 ;;		i2___wmul
 37391 ;; This function is called by:
 37392 ;;		i2_GetPressure_pa
 37393 ;;		i2_GetPressureV_pa
 37394 ;; This function uses a non-reentrant model
 37395 ;;
 37396                           
 37397                           	psect	text281
 37398  009390                     __ptext281:
 37399                           	opt callstack 0
 37400  009390                     i2_AdcGetData:
 37401                           	opt callstack 12
 37402                           
 37403                           ;monitor.c: 89:     adc_result_t data;;monitor.c: 90:     data = adcChannels[id].data;
 37404                           
 37405                           ;incstack = 0
 37406  009390  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 37407  009396  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 37408  00939C  0E00               	movlw	0
 37409  00939E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37410  0093A0  0E05               	movlw	5
 37411  0093A2  6E03               	movwf	i2___wmul@multiplicand^0,c
 37412  0093A4  ECBA  F051         	call	i2___wmul	;wreg free
 37413  0093A8  0EBE               	movlw	low (_adcChannels+2)
 37414  0093AA  2401               	addwf	?i2___wmul^0,w,c
 37415  0093AC  6ED9               	movwf	fsr2l,c
 37416  0093AE  0E02               	movlw	high (_adcChannels+2)
 37417  0093B0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 37418  0093B2  6EDA               	movwf	fsr2h,c
 37419  0093B4  006F FF78  F009    	movff	postinc2,i2AdcGetData@data
 37420  0093BA  006F FF74  F00A    	movff	postdec2,i2AdcGetData@data+1
 37421                           
 37422                           ;monitor.c: 91:     adcChannels[id].dataValid=0;
 37423  0093C0  0060  F01C  F001   	movff	i2AdcGetData@id,i2___wmul@multiplier
 37424  0093C6  0060  F020  F002   	movff	i2AdcGetData@id+1,i2___wmul@multiplier+1
 37425  0093CC  0E00               	movlw	0
 37426  0093CE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 37427  0093D0  0E05               	movlw	5
 37428  0093D2  6E03               	movwf	i2___wmul@multiplicand^0,c
 37429  0093D4  ECBA  F051         	call	i2___wmul	;wreg free
 37430  0093D8  0EBD               	movlw	low (_adcChannels+1)
 37431  0093DA  2401               	addwf	?i2___wmul^0,w,c
 37432  0093DC  6ED9               	movwf	fsr2l,c
 37433  0093DE  0E02               	movlw	high (_adcChannels+1)
 37434  0093E0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 37435  0093E2  6EDA               	movwf	fsr2h,c
 37436  0093E4  0E00               	movlw	0
 37437  0093E6  6EDF               	movwf	indf2,c
 37438                           
 37439                           ;monitor.c: 92:     return data;
 37440  0093E8  0060  F024  F007   	movff	i2AdcGetData@data,?i2_AdcGetData
 37441  0093EE  0060  F028  F008   	movff	i2AdcGetData@data+1,?i2_AdcGetData+1
 37442  0093F4  0012               	return		;funcret
 37443  0093F6                     __end_ofi2_AdcGetData:
 37444                           	opt callstack 0
 37445                           
 37446 ;; *************** function i2_ClearVars *****************
 37447 ;; Defined at:
 37448 ;;		line 678 in file "monitor.c"
 37449 ;; Parameters:    Size  Location     Type
 37450 ;;		None
 37451 ;; Auto vars:     Size  Location     Type
 37452 ;;  ClearVars       2    2[COMRAM] int 
 37453 ;;  ClearVars       2    0[COMRAM] int 
 37454 ;; Return value:  Size  Location     Type
 37455 ;;                  1    wreg      void 
 37456 ;; Registers used:
 37457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37458 ;; Tracked objects:
 37459 ;;		On entry : 3C/2
 37460 ;;		On exit  : 3F/2
 37461 ;;		Unchanged: 0/0
 37462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37464 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37467 ;;Total ram usage:        4 bytes
 37468 ;; Hardware stack levels used:    1
 37469 ;; Hardware stack levels required when called:    1
 37470 ;; This function calls:
 37471 ;;		i2_ClearCircuitFailureAlarm
 37472 ;;		i2_ClearEPAboveSetAlarm
 37473 ;;		i2_ClearEPBelowSetAlarm
 37474 ;;		i2_ClearIPAboveSetAlarm
 37475 ;;		i2_ClearIPBelowSetAlarm
 37476 ;; This function is called by:
 37477 ;;		_MonitorPressureTask
 37478 ;;		i2_SetCalibrateState
 37479 ;; This function uses a non-reentrant model
 37480 ;;
 37481                           
 37482                           	psect	text282
 37483  0046DC                     __ptext282:
 37484                           	opt callstack 0
 37485  0046DC                     i2_ClearVars:
 37486                           	opt callstack 13
 37487                           
 37488                           ;monitor.c: 679:     count = 0;
 37489                           
 37490                           ;incstack = 0
 37491  0046DC  0E00               	movlw	0
 37492  0046DE  0102               	movlb	2	; () banked
 37493  0046E0  6F45               	movwf	(_count+1)& (0+255),b
 37494  0046E2  0E00               	movlw	0
 37495  0046E4  6F44               	movwf	_count& (0+255),b
 37496                           
 37497                           ;monitor.c: 680:     tt = 0;
 37498  0046E6  0E00               	movlw	0
 37499  0046E8  0100               	movlb	0	; () banked
 37500  0046EA  6FC8               	movwf	_tt& (0+255),b
 37501  0046EC  0E00               	movlw	0
 37502  0046EE  6FC9               	movwf	(_tt+1)& (0+255),b
 37503  0046F0  0E00               	movlw	0
 37504  0046F2  6FCA               	movwf	(_tt+2)& (0+255),b
 37505  0046F4  0E00               	movlw	0
 37506  0046F6  6FCB               	movwf	(_tt+3)& (0+255),b
 37507                           
 37508                           ;monitor.c: 681:     for (int i=0; i<25; i++) {
 37509  0046F8  0E00               	movlw	0
 37510  0046FA  6E02               	movwf	(i2ClearVars@i+1)^0,c
 37511  0046FC  0E00               	movlw	0
 37512  0046FE  6E01               	movwf	i2ClearVars@i^0,c
 37513  004700                     i2l18526:
 37514                           
 37515                           ;monitor.c: 682:         prFastBuffer[i] = 0;
 37516  004700  90D8               	bcf	status,0,c
 37517  004702  3401               	rlcf	i2ClearVars@i^0,w,c
 37518  004704  6ED9               	movwf	fsr2l,c
 37519  004706  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 37520  004708  6EDA               	movwf	fsr2h,c
 37521  00470A  0E00               	movlw	low _prFastBuffer
 37522  00470C  26D9               	addwf	fsr2l,f,c
 37523  00470E  0E04               	movlw	high _prFastBuffer
 37524  004710  22DA               	addwfc	fsr2h,f,c
 37525  004712  0E00               	movlw	0
 37526  004714  6EDE               	movwf	postinc2,c
 37527  004716  0E00               	movlw	0
 37528  004718  6EDD               	movwf	postdec2,c
 37529                           
 37530                           ;monitor.c: 683:         prSlowBuffer[i] = 0;
 37531  00471A  90D8               	bcf	status,0,c
 37532  00471C  3401               	rlcf	i2ClearVars@i^0,w,c
 37533  00471E  6ED9               	movwf	fsr2l,c
 37534  004720  3402               	rlcf	(i2ClearVars@i+1)^0,w,c
 37535  004722  6EDA               	movwf	fsr2h,c
 37536  004724  0E32               	movlw	low _prSlowBuffer
 37537  004726  26D9               	addwf	fsr2l,f,c
 37538  004728  0E04               	movlw	high _prSlowBuffer
 37539  00472A  22DA               	addwfc	fsr2h,f,c
 37540  00472C  0E00               	movlw	0
 37541  00472E  6EDE               	movwf	postinc2,c
 37542  004730  0E00               	movlw	0
 37543  004732  6EDD               	movwf	postdec2,c
 37544                           
 37545                           ;monitor.c: 684:     }
 37546  004734  4A01               	infsnz	i2ClearVars@i^0,f,c
 37547  004736  2A02               	incf	(i2ClearVars@i+1)^0,f,c
 37548  004738  BE02               	btfsc	(i2ClearVars@i+1)^0,7,c
 37549  00473A  D7E2               	goto	i2l18526
 37550  00473C  5002               	movf	(i2ClearVars@i+1)^0,w,c
 37551  00473E  E104               	bnz	i2u1819_40
 37552  004740  0E19               	movlw	25
 37553  004742  5C01               	subwf	i2ClearVars@i^0,w,c
 37554  004744  A0D8               	btfss	status,0,c
 37555  004746  D7DC               	goto	i2l18526
 37556  004748                     i2u1819_40:
 37557                           
 37558                           ;monitor.c: 685:     for (int i=0; i<10; i++) {
 37559  004748  0E00               	movlw	0
 37560  00474A  6E04               	movwf	(i2ClearVars@i_4909+1)^0,c
 37561  00474C  0E00               	movlw	0
 37562  00474E  6E03               	movwf	i2ClearVars@i_4909^0,c
 37563  004750                     i2l18538:
 37564                           
 37565                           ;monitor.c: 686:         tdiBuffer[i] = 0;
 37566  004750  90D8               	bcf	status,0,c
 37567  004752  3403               	rlcf	i2ClearVars@i_4909^0,w,c
 37568  004754  6ED9               	movwf	fsr2l,c
 37569  004756  3404               	rlcf	(i2ClearVars@i_4909+1)^0,w,c
 37570  004758  6EDA               	movwf	fsr2h,c
 37571  00475A  0E61               	movlw	low _tdiBuffer
 37572  00475C  26D9               	addwf	fsr2l,f,c
 37573  00475E  0E03               	movlw	high _tdiBuffer
 37574  004760  22DA               	addwfc	fsr2h,f,c
 37575  004762  0E00               	movlw	0
 37576  004764  6EDE               	movwf	postinc2,c
 37577  004766  0E00               	movlw	0
 37578  004768  6EDD               	movwf	postdec2,c
 37579                           
 37580                           ;monitor.c: 687:         tdeBuffer[i] = 0;
 37581  00476A  90D8               	bcf	status,0,c
 37582  00476C  3403               	rlcf	i2ClearVars@i_4909^0,w,c
 37583  00476E  6ED9               	movwf	fsr2l,c
 37584  004770  3404               	rlcf	(i2ClearVars@i_4909+1)^0,w,c
 37585  004772  6EDA               	movwf	fsr2h,c
 37586  004774  0E75               	movlw	low _tdeBuffer
 37587  004776  26D9               	addwf	fsr2l,f,c
 37588  004778  0E03               	movlw	high _tdeBuffer
 37589  00477A  22DA               	addwfc	fsr2h,f,c
 37590  00477C  0E00               	movlw	0
 37591  00477E  6EDE               	movwf	postinc2,c
 37592  004780  0E00               	movlw	0
 37593  004782  6EDD               	movwf	postdec2,c
 37594                           
 37595                           ;monitor.c: 688:     }
 37596  004784  4A03               	infsnz	i2ClearVars@i_4909^0,f,c
 37597  004786  2A04               	incf	(i2ClearVars@i_4909+1)^0,f,c
 37598  004788  BE04               	btfsc	(i2ClearVars@i_4909+1)^0,7,c
 37599  00478A  D7E2               	goto	i2l18538
 37600  00478C  5004               	movf	(i2ClearVars@i_4909+1)^0,w,c
 37601  00478E  E104               	bnz	i2u1820_40
 37602  004790  0E0A               	movlw	10
 37603  004792  5C03               	subwf	i2ClearVars@i_4909^0,w,c
 37604  004794  A0D8               	btfss	status,0,c
 37605  004796  D7DC               	goto	i2l18538
 37606  004798                     i2u1820_40:
 37607                           
 37608                           ;monitor.c: 689:     numtdi = 0;
 37609  004798  0E00               	movlw	0
 37610  00479A  0100               	movlb	0	; () banked
 37611  00479C  6FD3               	movwf	(_numtdi+1)& (0+255),b
 37612  00479E  0E00               	movlw	0
 37613  0047A0  6FD2               	movwf	_numtdi& (0+255),b
 37614                           
 37615                           ;monitor.c: 690:     numtde = 0;
 37616  0047A2  0E00               	movlw	0
 37617  0047A4  6FD1               	movwf	(_numtde+1)& (0+255),b
 37618  0047A6  0E00               	movlw	0
 37619  0047A8  6FD0               	movwf	_numtde& (0+255),b
 37620                           
 37621                           ;monitor.c: 691:     ti = 0;
 37622  0047AA  0E00               	movlw	0
 37623  0047AC  0102               	movlb	2	; () banked
 37624  0047AE  6F59               	movwf	(_ti+1)& (0+255),b
 37625  0047B0  0E00               	movlw	0
 37626  0047B2  6F58               	movwf	_ti& (0+255),b
 37627                           
 37628                           ;monitor.c: 692:     te = 0;
 37629  0047B4  0E00               	movlw	0
 37630  0047B6  6F57               	movwf	(_te+1)& (0+255),b
 37631  0047B8  0E00               	movlw	0
 37632  0047BA  6F56               	movwf	_te& (0+255),b
 37633                           
 37634                           ;monitor.c: 693:     tdi = 0;
 37635  0047BC  0E00               	movlw	0
 37636  0047BE  0101               	movlb	1	; () banked
 37637  0047C0  6FE0               	movwf	(_tdi+1)& (0+255),b
 37638  0047C2  0E00               	movlw	0
 37639  0047C4  6FDF               	movwf	_tdi& (0+255),b
 37640                           
 37641                           ;monitor.c: 694:     tde = 0;
 37642  0047C6  0E00               	movlw	0
 37643  0047C8  6FDE               	movwf	(_tde+1)& (0+255),b
 37644  0047CA  0E00               	movlw	0
 37645  0047CC  6FDD               	movwf	_tde& (0+255),b
 37646                           
 37647                           ;monitor.c: 695:     tt = 0;
 37648  0047CE  0E00               	movlw	0
 37649  0047D0  0100               	movlb	0	; () banked
 37650  0047D2  6FC8               	movwf	_tt& (0+255),b
 37651  0047D4  0E00               	movlw	0
 37652  0047D6  6FC9               	movwf	(_tt+1)& (0+255),b
 37653  0047D8  0E00               	movlw	0
 37654  0047DA  6FCA               	movwf	(_tt+2)& (0+255),b
 37655  0047DC  0E00               	movlw	0
 37656  0047DE  6FCB               	movwf	(_tt+3)& (0+255),b
 37657                           
 37658                           ;monitor.c: 696:     ttExt = 0;
 37659  0047E0  0E00               	movlw	0
 37660  0047E2  0102               	movlb	2	; () banked
 37661  0047E4  6F63               	movwf	(_ttExt+1)& (0+255),b
 37662  0047E6  0E00               	movlw	0
 37663  0047E8  6F62               	movwf	_ttExt& (0+255),b
 37664                           
 37665                           ;monitor.c: 697:     ttNoAlarm = 0;
 37666  0047EA  0E00               	movlw	0
 37667  0047EC  6F5D               	movwf	(_ttNoAlarm+1)& (0+255),b
 37668  0047EE  0E00               	movlw	0
 37669  0047F0  6F5C               	movwf	_ttNoAlarm& (0+255),b
 37670                           
 37671                           ;monitor.c: 698:     ttAlarm = 0;
 37672  0047F2  0E00               	movlw	0
 37673  0047F4  6F5B               	movwf	(_ttAlarm+1)& (0+255),b
 37674  0047F6  0E00               	movlw	0
 37675  0047F8  6F5A               	movwf	_ttAlarm& (0+255),b
 37676                           
 37677                           ;monitor.c: 699:     enableAlarms = 0;
 37678  0047FA  0E00               	movlw	0
 37679  0047FC  0100               	movlb	0	; () banked
 37680  0047FE  6FF0               	movwf	_enableAlarms& (0+255),b
 37681                           
 37682                           ;monitor.c: 700:     tt1 = 0;
 37683  004800  0E00               	movlw	0
 37684  004802  6FDD               	movwf	(_tt1+1)& (0+255),b
 37685  004804  0E00               	movlw	0
 37686  004806  6FDC               	movwf	_tt1& (0+255),b
 37687                           
 37688                           ;monitor.c: 701:     tt2 = 0;
 37689  004808  0E00               	movlw	0
 37690  00480A  6FDB               	movwf	(_tt2+1)& (0+255),b
 37691  00480C  0E00               	movlw	0
 37692  00480E  6FDA               	movwf	_tt2& (0+255),b
 37693                           
 37694                           ;monitor.c: 702:     tt3 = 0;
 37695  004810  0E00               	movlw	0
 37696  004812  0101               	movlb	1	; () banked
 37697  004814  6FE2               	movwf	(_tt3+1)& (0+255),b
 37698  004816  0E00               	movlw	0
 37699  004818  6FE1               	movwf	_tt3& (0+255),b
 37700                           
 37701                           ;monitor.c: 703:     tt4 = 0;
 37702  00481A  0E00               	movlw	0
 37703  00481C  0100               	movlb	0	; () banked
 37704  00481E  6FD9               	movwf	(_tt4+1)& (0+255),b
 37705  004820  0E00               	movlw	0
 37706  004822  6FD8               	movwf	_tt4& (0+255),b
 37707                           
 37708                           ;monitor.c: 704:     tt12 = 0;
 37709  004824  0E00               	movlw	0
 37710  004826  0102               	movlb	2	; () banked
 37711  004828  6F61               	movwf	(_tt12+1)& (0+255),b
 37712  00482A  0E00               	movlw	0
 37713  00482C  6F60               	movwf	_tt12& (0+255),b
 37714                           
 37715                           ;monitor.c: 705:     tt34 = 0;
 37716  00482E  0E00               	movlw	0
 37717  004830  6F5F               	movwf	(_tt34+1)& (0+255),b
 37718  004832  0E00               	movlw	0
 37719  004834  6F5E               	movwf	_tt34& (0+255),b
 37720                           
 37721                           ;monitor.c: 706:     bpm = 0;
 37722  004836  0E00               	movlw	0
 37723  004838  6F55               	movwf	(_bpm+1)& (0+255),b
 37724  00483A  0E00               	movlw	0
 37725  00483C  6F54               	movwf	_bpm& (0+255),b
 37726                           
 37727                           ;monitor.c: 707:     bp = 0;
 37728  00483E  0E00               	movlw	0
 37729  004840  6FBB               	movwf	(_bp+1)& (0+255),b
 37730  004842  0E00               	movlw	0
 37731  004844  6FBA               	movwf	_bp& (0+255),b
 37732                           
 37733                           ;monitor.c: 709:     pi = 0;
 37734  004846  0E00               	movlw	0
 37735  004848  0101               	movlb	1	; () banked
 37736  00484A  6FDC               	movwf	(_pi+1)& (0+255),b
 37737  00484C  0E00               	movlw	0
 37738  00484E  6FDB               	movwf	_pi& (0+255),b
 37739                           
 37740                           ;monitor.c: 710:     pe = 0;
 37741  004850  0E00               	movlw	0
 37742  004852  6FDA               	movwf	(_pe+1)& (0+255),b
 37743  004854  0E00               	movlw	0
 37744  004856  6FD9               	movwf	_pe& (0+255),b
 37745                           
 37746                           ;monitor.c: 711:     rpi = 0;
 37747  004858  0E00               	movlw	0
 37748  00485A  0102               	movlb	2	; () banked
 37749  00485C  6F49               	movwf	(_rpi+1)& (0+255),b
 37750  00485E  0E00               	movlw	0
 37751  004860  6F48               	movwf	_rpi& (0+255),b
 37752                           
 37753                           ;monitor.c: 712:     rpe = 0;
 37754  004862  0E00               	movlw	0
 37755  004864  6F47               	movwf	(_rpe+1)& (0+255),b
 37756  004866  0E00               	movlw	0
 37757  004868  6F46               	movwf	_rpe& (0+255),b
 37758                           
 37759                           ;monitor.c: 713:     lrpi = 0;
 37760  00486A  0E00               	movlw	0
 37761  00486C  0101               	movlb	1	; () banked
 37762  00486E  6FD4               	movwf	(_lrpi+1)& (0+255),b
 37763  004870  0E00               	movlw	0
 37764  004872  6FD3               	movwf	_lrpi& (0+255),b
 37765                           
 37766                           ;monitor.c: 714:     lrpe = 0;
 37767  004874  0E00               	movlw	0
 37768  004876  6FD2               	movwf	(_lrpe+1)& (0+255),b
 37769  004878  0E00               	movlw	0
 37770  00487A  6FD1               	movwf	_lrpe& (0+255),b
 37771                           
 37772                           ;monitor.c: 715:     maxPressure = 0;
 37773  00487C  0E00               	movlw	0
 37774  00487E  0102               	movlb	2	; () banked
 37775  004880  6F51               	movwf	(_maxPressure+1)& (0+255),b
 37776  004882  0E00               	movlw	0
 37777  004884  6F50               	movwf	_maxPressure& (0+255),b
 37778                           
 37779                           ;monitor.c: 716:     minPressure = 40*5;
 37780  004886  0E00               	movlw	0
 37781  004888  0100               	movlb	0	; () banked
 37782  00488A  6FD5               	movwf	(_minPressure+1)& (0+255),b
 37783  00488C  0EC8               	movlw	200
 37784  00488E  6FD4               	movwf	_minPressure& (0+255),b
 37785                           
 37786                           ;monitor.c: 717:     pHighAcc = 0;
 37787  004890  0E00               	movlw	0
 37788  004892  0102               	movlb	2	; () banked
 37789  004894  6F1E               	movwf	_pHighAcc& (0+255),b
 37790  004896  0E00               	movlw	0
 37791  004898  6F1F               	movwf	(_pHighAcc+1)& (0+255),b
 37792  00489A  0E00               	movlw	0
 37793  00489C  6F20               	movwf	(_pHighAcc+2)& (0+255),b
 37794  00489E  0E00               	movlw	0
 37795  0048A0  6F21               	movwf	(_pHighAcc+3)& (0+255),b
 37796                           
 37797                           ;monitor.c: 718:     pLowAcc = 0;
 37798  0048A2  0E00               	movlw	0
 37799  0048A4  6F1A               	movwf	_pLowAcc& (0+255),b
 37800  0048A6  0E00               	movlw	0
 37801  0048A8  6F1B               	movwf	(_pLowAcc+1)& (0+255),b
 37802  0048AA  0E00               	movlw	0
 37803  0048AC  6F1C               	movwf	(_pLowAcc+2)& (0+255),b
 37804  0048AE  0E00               	movlw	0
 37805  0048B0  6F1D               	movwf	(_pLowAcc+3)& (0+255),b
 37806                           
 37807                           ;monitor.c: 720:     alarmMaxPressure = 0;
 37808  0048B2  0E00               	movlw	0
 37809  0048B4  6F4F               	movwf	(_alarmMaxPressure+1)& (0+255),b
 37810  0048B6  0E00               	movlw	0
 37811  0048B8  6F4E               	movwf	_alarmMaxPressure& (0+255),b
 37812                           
 37813                           ;monitor.c: 721:     prSlow = 0;
 37814  0048BA  0E00               	movlw	0
 37815  0048BC  0100               	movlb	0	; () banked
 37816  0048BE  6FCF               	movwf	(_prSlow+1)& (0+255),b
 37817  0048C0  0E00               	movlw	0
 37818  0048C2  6FCE               	movwf	_prSlow& (0+255),b
 37819                           
 37820                           ;monitor.c: 722:     prSlowDev = 0;
 37821  0048C4  0E00               	movlw	0
 37822  0048C6  0102               	movlb	2	; () banked
 37823  0048C8  6F43               	movwf	(_prSlowDev+1)& (0+255),b
 37824  0048CA  0E00               	movlw	0
 37825  0048CC  6F42               	movwf	_prSlowDev& (0+255),b
 37826                           
 37827                           ;monitor.c: 723:     prSlowNumStable = 0;
 37828  0048CE  0E00               	movlw	0
 37829  0048D0  6F41               	movwf	(_prSlowNumStable+1)& (0+255),b
 37830  0048D2  0E00               	movlw	0
 37831  0048D4  6F40               	movwf	_prSlowNumStable& (0+255),b
 37832                           
 37833                           ;monitor.c: 724:     hiLimit = 40*5;
 37834  0048D6  0E00               	movlw	0
 37835  0048D8  0101               	movlb	1	; () banked
 37836  0048DA  6FD0               	movwf	(_hiLimit+1)& (0+255),b
 37837  0048DC  0EC8               	movlw	200
 37838  0048DE  6FCF               	movwf	_hiLimit& (0+255),b
 37839                           
 37840                           ;monitor.c: 725:     loLimit = 0;
 37841  0048E0  0E00               	movlw	0
 37842  0048E2  6FCE               	movwf	(_loLimit+1)& (0+255),b
 37843  0048E4  0E00               	movlw	0
 37844  0048E6  6FCD               	movwf	_loLimit& (0+255),b
 37845                           
 37846                           ;monitor.c: 726:     volumeAcc = 0;
 37847  0048E8  0E00               	movlw	0
 37848  0048EA  0102               	movlb	2	; () banked
 37849  0048EC  6F22               	movwf	_volumeAcc& (0+255),b
 37850  0048EE  0E00               	movlw	0
 37851  0048F0  6F23               	movwf	(_volumeAcc+1)& (0+255),b
 37852  0048F2  0E00               	movlw	0
 37853  0048F4  6F24               	movwf	(_volumeAcc+2)& (0+255),b
 37854  0048F6  0E00               	movlw	0
 37855  0048F8  6F25               	movwf	(_volumeAcc+3)& (0+255),b
 37856                           
 37857                           ;monitor.c: 727:     volume = 0;
 37858  0048FA  0E00               	movlw	0
 37859  0048FC  0101               	movlb	1	; () banked
 37860  0048FE  6FE4               	movwf	(_volume+1)& (0+255),b
 37861  004900  0E00               	movlw	0
 37862  004902  6FE3               	movwf	_volume& (0+255),b
 37863                           
 37864                           ;monitor.c: 729:     alarmSV1=1;
 37865  004904  0E01               	movlw	1
 37866  004906  0102               	movlb	2	; () banked
 37867  004908  6FA0               	movwf	_alarmSV1& (0+255),b
 37868                           
 37869                           ; BSR set to: 2
 37870                           ;monitor.c: 731:     ClearEPAboveSetAlarm();
 37871  00490A  EC0A  F055         	call	i2_ClearEPAboveSetAlarm	;wreg free
 37872                           
 37873                           ; BSR set to: 0
 37874                           ;monitor.c: 732:     ClearEPBelowSetAlarm();
 37875  00490E  ECFF  F054         	call	i2_ClearEPBelowSetAlarm	;wreg free
 37876                           
 37877                           ; BSR set to: 0
 37878                           ;monitor.c: 733:     ClearIPAboveSetAlarm();
 37879  004912  ECF4  F054         	call	i2_ClearIPAboveSetAlarm	;wreg free
 37880                           
 37881                           ; BSR set to: 2
 37882                           ;monitor.c: 734:     ClearIPBelowSetAlarm();
 37883  004916  ECE9  F054         	call	i2_ClearIPBelowSetAlarm	;wreg free
 37884                           
 37885                           ; BSR set to: 0
 37886                           ;monitor.c: 735:     ClearCircuitFailureAlarm();
 37887  00491A  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 37888                           
 37889                           ; BSR set to: 2
 37890  00491E  0012               	return		;funcret
 37891  004920                     __end_ofi2_ClearVars:
 37892                           	opt callstack 0
 37893                           
 37894 ;; *************** function i2_MonitorEnable *****************
 37895 ;; Defined at:
 37896 ;;		line 270 in file "monitor.c"
 37897 ;; Parameters:    Size  Location     Type
 37898 ;;		None
 37899 ;; Auto vars:     Size  Location     Type
 37900 ;;		None
 37901 ;; Return value:  Size  Location     Type
 37902 ;;                  1    wreg      void 
 37903 ;; Registers used:
 37904 ;;		wreg, status,2
 37905 ;; Tracked objects:
 37906 ;;		On entry : 3F/0
 37907 ;;		On exit  : 3F/2
 37908 ;;		Unchanged: 0/0
 37909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37914 ;;Total ram usage:        0 bytes
 37915 ;; Hardware stack levels used:    1
 37916 ;; This function calls:
 37917 ;;		Nothing
 37918 ;; This function is called by:
 37919 ;;		_UpdateState
 37920 ;; This function uses a non-reentrant model
 37921 ;;
 37922                           
 37923                           	psect	text283
 37924  00AEB6                     __ptext283:
 37925                           	opt callstack 0
 37926  00AEB6                     i2_MonitorEnable:
 37927                           	opt callstack 12
 37928                           
 37929                           ; BSR set to: 0
 37930                           
 37931                           ; BSR set to: 2
 37932                           ;incstack = 0
 37933  00AEB6  0E01               	movlw	1
 37934  00AEB8  0102               	movlb	2	; () banked
 37935  00AEBA  6FA2               	movwf	monitor@enable& (0+255),b
 37936                           
 37937                           ; BSR set to: 2
 37938  00AEBC  0012               	return		;funcret
 37939  00AEBE                     __end_ofi2_MonitorEnable:
 37940                           	opt callstack 0
 37941                           
 37942 ;; *************** function i2_MonitorDisable *****************
 37943 ;; Defined at:
 37944 ;;		line 271 in file "monitor.c"
 37945 ;; Parameters:    Size  Location     Type
 37946 ;;		None
 37947 ;; Auto vars:     Size  Location     Type
 37948 ;;		None
 37949 ;; Return value:  Size  Location     Type
 37950 ;;                  1    wreg      void 
 37951 ;; Registers used:
 37952 ;;		wreg, status,2
 37953 ;; Tracked objects:
 37954 ;;		On entry : 3D/2
 37955 ;;		On exit  : 3F/2
 37956 ;;		Unchanged: 0/0
 37957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37962 ;;Total ram usage:        0 bytes
 37963 ;; Hardware stack levels used:    1
 37964 ;; This function calls:
 37965 ;;		Nothing
 37966 ;; This function is called by:
 37967 ;;		_UpdateState
 37968 ;; This function uses a non-reentrant model
 37969 ;;
 37970                           
 37971                           	psect	text284
 37972  00AEBE                     __ptext284:
 37973                           	opt callstack 0
 37974  00AEBE                     i2_MonitorDisable:
 37975                           	opt callstack 12
 37976                           
 37977                           ; BSR set to: 2
 37978                           ;incstack = 0
 37979  00AEBE  0E00               	movlw	0
 37980  00AEC0  0102               	movlb	2	; () banked
 37981  00AEC2  6FA2               	movwf	monitor@enable& (0+255),b
 37982                           
 37983                           ; BSR set to: 2
 37984  00AEC4  0012               	return		;funcret
 37985  00AEC6                     __end_ofi2_MonitorDisable:
 37986                           	opt callstack 0
 37987                           
 37988 ;; *************** function i2_LCDOn *****************
 37989 ;; Defined at:
 37990 ;;		line 119 in file "lcd.c"
 37991 ;; Parameters:    Size  Location     Type
 37992 ;;		None
 37993 ;; Auto vars:     Size  Location     Type
 37994 ;;		None
 37995 ;; Return value:  Size  Location     Type
 37996 ;;                  1    wreg      void 
 37997 ;; Registers used:
 37998 ;;		wreg, status,2
 37999 ;; Tracked objects:
 38000 ;;		On entry : 3F/2
 38001 ;;		On exit  : 3F/1
 38002 ;;		Unchanged: 0/0
 38003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38008 ;;Total ram usage:        0 bytes
 38009 ;; Hardware stack levels used:    1
 38010 ;; This function calls:
 38011 ;;		Nothing
 38012 ;; This function is called by:
 38013 ;;		_UpdateState
 38014 ;; This function uses a non-reentrant model
 38015 ;;
 38016                           
 38017                           	psect	text285
 38018  00ADDA                     __ptext285:
 38019                           	opt callstack 0
 38020  00ADDA                     i2_LCDOn:
 38021                           	opt callstack 12
 38022                           
 38023                           ; BSR set to: 2
 38024                           ;lcd.c: 120:     LED = 1;
 38025                           
 38026                           ; BSR set to: 2
 38027                           ;incstack = 0
 38028  00ADDA  0E01               	movlw	1
 38029  00ADDC  0101               	movlb	1	; () banked
 38030  00ADDE  6FF4               	movwf	_LED& (0+255),b
 38031                           
 38032                           ; BSR set to: 1
 38033  00ADE0  8ABC               	bsf	188,5,c	;volatile
 38034                           
 38035                           ; BSR set to: 1
 38036  00ADE2  0012               	return		;funcret
 38037  00ADE4                     __end_ofi2_LCDOn:
 38038                           	opt callstack 0
 38039                           
 38040 ;; *************** function i2_LCDOff *****************
 38041 ;; Defined at:
 38042 ;;		line 112 in file "lcd.c"
 38043 ;; Parameters:    Size  Location     Type
 38044 ;;		None
 38045 ;; Auto vars:     Size  Location     Type
 38046 ;;		None
 38047 ;; Return value:  Size  Location     Type
 38048 ;;                  1    wreg      void 
 38049 ;; Registers used:
 38050 ;;		wreg, status,2
 38051 ;; Tracked objects:
 38052 ;;		On entry : 3F/2
 38053 ;;		On exit  : 3F/1
 38054 ;;		Unchanged: 0/0
 38055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38060 ;;Total ram usage:        0 bytes
 38061 ;; Hardware stack levels used:    1
 38062 ;; This function calls:
 38063 ;;		Nothing
 38064 ;; This function is called by:
 38065 ;;		_UpdateState
 38066 ;; This function uses a non-reentrant model
 38067 ;;
 38068                           
 38069                           	psect	text286
 38070  00ADE4                     __ptext286:
 38071                           	opt callstack 0
 38072  00ADE4                     i2_LCDOff:
 38073                           	opt callstack 12
 38074                           
 38075                           ; BSR set to: 2
 38076                           ;lcd.c: 113:     LED = 0;
 38077                           
 38078                           ; BSR set to: 1
 38079                           ;incstack = 0
 38080  00ADE4  0E00               	movlw	0
 38081  00ADE6  0101               	movlb	1	; () banked
 38082  00ADE8  6FF4               	movwf	_LED& (0+255),b
 38083                           
 38084                           ; BSR set to: 1
 38085  00ADEA  9ABC               	bcf	188,5,c	;volatile
 38086                           
 38087                           ; BSR set to: 1
 38088  00ADEC  0012               	return		;funcret
 38089  00ADEE                     __end_ofi2_LCDOff:
 38090                           	opt callstack 0
 38091                           
 38092 ;; *************** function i2_EnableAlarmSV1 *****************
 38093 ;; Defined at:
 38094 ;;		line 858 in file "monitor.c"
 38095 ;; Parameters:    Size  Location     Type
 38096 ;;		None
 38097 ;; Auto vars:     Size  Location     Type
 38098 ;;		None
 38099 ;; Return value:  Size  Location     Type
 38100 ;;                  1    wreg      void 
 38101 ;; Registers used:
 38102 ;;		wreg, status,2
 38103 ;; Tracked objects:
 38104 ;;		On entry : 3D/2
 38105 ;;		On exit  : 3F/0
 38106 ;;		Unchanged: 0/0
 38107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38112 ;;Total ram usage:        0 bytes
 38113 ;; Hardware stack levels used:    1
 38114 ;; This function calls:
 38115 ;;		Nothing
 38116 ;; This function is called by:
 38117 ;;		_UpdateState
 38118 ;; This function uses a non-reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text287
 38122  00AEC6                     __ptext287:
 38123                           	opt callstack 0
 38124  00AEC6                     i2_EnableAlarmSV1:
 38125                           	opt callstack 12
 38126                           
 38127                           ;monitor.c: 859:     disableAlarmSV1=0;
 38128                           
 38129                           ; BSR set to: 1
 38130                           ;incstack = 0
 38131  00AEC6  0E00               	movlw	0
 38132  00AEC8  0100               	movlb	0	; () banked
 38133  00AECA  6FEF               	movwf	_disableAlarmSV1& (0+255),b
 38134                           
 38135                           ; BSR set to: 0
 38136  00AECC  0012               	return		;funcret
 38137  00AECE                     __end_ofi2_EnableAlarmSV1:
 38138                           	opt callstack 0
 38139                           
 38140 ;; *************** function _SetVolumeControl *****************
 38141 ;; Defined at:
 38142 ;;		line 195 in file "monitor.c"
 38143 ;; Parameters:    Size  Location     Type
 38144 ;;  vc              1    wreg     _Bool 
 38145 ;; Auto vars:     Size  Location     Type
 38146 ;;  vc              1    0[COMRAM] _Bool 
 38147 ;; Return value:  Size  Location     Type
 38148 ;;                  1    wreg      void 
 38149 ;; Registers used:
 38150 ;;		wreg
 38151 ;; Tracked objects:
 38152 ;;		On entry : 3F/2
 38153 ;;		On exit  : 0/0
 38154 ;;		Unchanged: 0/0
 38155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38160 ;;Total ram usage:        1 bytes
 38161 ;; Hardware stack levels used:    1
 38162 ;; This function calls:
 38163 ;;		Nothing
 38164 ;; This function is called by:
 38165 ;;		_UpdateState
 38166 ;; This function uses a non-reentrant model
 38167 ;;
 38168                           
 38169                           	psect	text288
 38170  00ADEE                     __ptext288:
 38171                           	opt callstack 0
 38172  00ADEE                     _SetVolumeControl:
 38173                           	opt callstack 12
 38174                           
 38175                           ; BSR set to: 0
 38176                           ;incstack = 0
 38177                           ;SetVolumeControl@vc stored from wreg
 38178  00ADEE  6E01               	movwf	SetVolumeControl@vc^0,c
 38179  00ADF0  0060  F004  F2A1   	movff	SetVolumeControl@vc,_volumeControl
 38180  00ADF6  0012               	return		;funcret
 38181  00ADF8                     __end_of_SetVolumeControl:
 38182                           	opt callstack 0
 38183                           
 38184 ;; *************** function _SetTarget *****************
 38185 ;; Defined at:
 38186 ;;		line 197 in file "monitor.c"
 38187 ;; Parameters:    Size  Location     Type
 38188 ;;  pmax            2   26[COMRAM] short 
 38189 ;;  ip              2   28[COMRAM] short 
 38190 ;;  ep              2   30[COMRAM] short 
 38191 ;;  br              2   32[COMRAM] unsigned short 
 38192 ;;  vmax            2   34[COMRAM] short 
 38193 ;;  vmin            2   36[COMRAM] short 
 38194 ;; Auto vars:     Size  Location     Type
 38195 ;;		None
 38196 ;; Return value:  Size  Location     Type
 38197 ;;                  1    wreg      void 
 38198 ;; Registers used:
 38199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 38200 ;; Tracked objects:
 38201 ;;		On entry : 3F/0
 38202 ;;		On exit  : 0/0
 38203 ;;		Unchanged: 0/0
 38204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38205 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38208 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38209 ;;Total ram usage:       12 bytes
 38210 ;; Hardware stack levels used:    1
 38211 ;; Hardware stack levels required when called:    1
 38212 ;; This function calls:
 38213 ;;		i2___aldiv
 38214 ;;		i2___wmul
 38215 ;; This function is called by:
 38216 ;;		_UpdateState
 38217 ;; This function uses a non-reentrant model
 38218 ;;
 38219                           
 38220                           	psect	text289
 38221  007CB4                     __ptext289:
 38222                           	opt callstack 0
 38223  007CB4                     _SetTarget:
 38224                           	opt callstack 11
 38225                           
 38226                           ; BSR set to: 0
 38227                           ;monitor.c: 204:     targetHigh = ip*5;
 38228                           
 38229                           ;incstack = 0
 38230  007CB4  0060  F074  F001   	movff	SetTarget@ip,i2___wmul@multiplier
 38231  007CBA  0060  F078  F002   	movff	SetTarget@ip+1,i2___wmul@multiplier+1
 38232  007CC0  0E00               	movlw	0
 38233  007CC2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38234  007CC4  0E05               	movlw	5
 38235  007CC6  6E03               	movwf	i2___wmul@multiplicand^0,c
 38236  007CC8  ECBA  F051         	call	i2___wmul	;wreg free
 38237  007CCC  0060  F004  F1E9   	movff	?i2___wmul,_targetHigh
 38238  007CD2  0060  F008  F1EA   	movff	?i2___wmul+1,_targetHigh+1
 38239                           
 38240                           ;monitor.c: 205:     targetLow = ep*5;
 38241  007CD8  0060  F07C  F001   	movff	SetTarget@ep,i2___wmul@multiplier
 38242  007CDE  0060  F080  F002   	movff	SetTarget@ep+1,i2___wmul@multiplier+1
 38243  007CE4  0E00               	movlw	0
 38244  007CE6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38245  007CE8  0E05               	movlw	5
 38246  007CEA  6E03               	movwf	i2___wmul@multiplicand^0,c
 38247  007CEC  ECBA  F051         	call	i2___wmul	;wreg free
 38248  007CF0  0060  F004  F1E7   	movff	?i2___wmul,_targetLow
 38249  007CF6  0060  F008  F1E8   	movff	?i2___wmul+1,_targetLow+1
 38250                           
 38251                           ;monitor.c: 206:     if (br!=0) targetBp = 60000/br; else targetBp = 3000;
 38252  007CFC  5021               	movf	SetTarget@br^0,w,c
 38253  007CFE  1022               	iorwf	(SetTarget@br+1)^0,w,c
 38254  007D00  B4D8               	btfsc	status,2,c
 38255  007D02  D019               	goto	i2l18804
 38256  007D04  0E60               	movlw	96
 38257  007D06  6E0D               	movwf	i2___aldiv@dividend^0,c
 38258  007D08  0EEA               	movlw	234
 38259  007D0A  6E0E               	movwf	(i2___aldiv@dividend+1)^0,c
 38260  007D0C  0E00               	movlw	0
 38261  007D0E  6E0F               	movwf	(i2___aldiv@dividend+2)^0,c
 38262  007D10  0E00               	movlw	0
 38263  007D12  6E10               	movwf	(i2___aldiv@dividend+3)^0,c
 38264  007D14  0060  F084  F011   	movff	SetTarget@br,i2___aldiv@divisor
 38265  007D1A  0060  F088  F012   	movff	SetTarget@br+1,i2___aldiv@divisor+1
 38266  007D20  6A13               	clrf	(i2___aldiv@divisor+2)^0,c
 38267  007D22  6A14               	clrf	(i2___aldiv@divisor+3)^0,c
 38268  007D24  EC8A  F03D         	call	i2___aldiv	;wreg free
 38269  007D28  0060  F034  F268   	movff	?i2___aldiv,_targetBp
 38270  007D2E  0060  F038  F269   	movff	?i2___aldiv+1,_targetBp+1
 38271  007D34  D005               	goto	i2l18806
 38272  007D36                     i2l18804:
 38273  007D36  0E0B               	movlw	11
 38274  007D38  0102               	movlb	2	; () banked
 38275  007D3A  6F69               	movwf	(_targetBp+1)& (0+255),b
 38276  007D3C  0EB8               	movlw	184
 38277  007D3E  6F68               	movwf	_targetBp& (0+255),b
 38278  007D40                     i2l18806:
 38279                           
 38280                           ;monitor.c: 207:     targetPmax = pmax*5;
 38281  007D40  0060  F06C  F001   	movff	SetTarget@pmax,i2___wmul@multiplier
 38282  007D46  0060  F070  F002   	movff	SetTarget@pmax+1,i2___wmul@multiplier+1
 38283  007D4C  0E00               	movlw	0
 38284  007D4E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38285  007D50  0E05               	movlw	5
 38286  007D52  6E03               	movwf	i2___wmul@multiplicand^0,c
 38287  007D54  ECBA  F051         	call	i2___wmul	;wreg free
 38288  007D58  0060  F004  F26A   	movff	?i2___wmul,_targetPmax
 38289  007D5E  0060  F008  F26B   	movff	?i2___wmul+1,_targetPmax+1
 38290                           
 38291                           ;monitor.c: 208:     volumeMax = vmax;
 38292  007D64  0060  F08C  F266   	movff	SetTarget@vmax,_volumeMax
 38293  007D6A  0060  F090  F267   	movff	SetTarget@vmax+1,_volumeMax+1
 38294                           
 38295                           ;monitor.c: 209:     volumeMin = vmin;
 38296  007D70  0060  F094  F264   	movff	SetTarget@vmin,_volumeMin
 38297  007D76  0060  F098  F265   	movff	SetTarget@vmin+1,_volumeMin+1
 38298  007D7C  0012               	return		;funcret
 38299  007D7E                     __end_of_SetTarget:
 38300                           	opt callstack 0
 38301                           
 38302 ;; *************** function i2___aldiv *****************
 38303 ;; Defined at:
 38304 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 38305 ;; Parameters:    Size  Location     Type
 38306 ;;  dividend        4   12[COMRAM] long 
 38307 ;;  divisor         4   16[COMRAM] long 
 38308 ;; Auto vars:     Size  Location     Type
 38309 ;;  __aldiv         4   22[COMRAM] long 
 38310 ;;  __aldiv         1   21[COMRAM] unsigned char 
 38311 ;;  __aldiv         1   20[COMRAM] unsigned char 
 38312 ;; Return value:  Size  Location     Type
 38313 ;;                  4   12[COMRAM] long 
 38314 ;; Registers used:
 38315 ;;		wreg, status,2, status,0
 38316 ;; Tracked objects:
 38317 ;;		On entry : 0/2
 38318 ;;		On exit  : 0/0
 38319 ;;		Unchanged: 0/0
 38320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38321 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38322 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38324 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38325 ;;Total ram usage:       14 bytes
 38326 ;; Hardware stack levels used:    1
 38327 ;; This function calls:
 38328 ;;		Nothing
 38329 ;; This function is called by:
 38330 ;;		_SetTarget
 38331 ;;		_MonitorPressureTask
 38332 ;;		i2_GetPressure_pa
 38333 ;;		i2_GetPressureV_pa
 38334 ;;		i2_See5V
 38335 ;;		i2_See12V
 38336 ;; This function uses a non-reentrant model
 38337 ;;
 38338                           
 38339                           	psect	text290
 38340  007B14                     __ptext290:
 38341                           	opt callstack 0
 38342  007B14                     i2___aldiv:
 38343                           	opt callstack 14
 38344                           
 38345                           ;incstack = 0
 38346  007B14  0E00               	movlw	0
 38347  007B16  6E16               	movwf	i2___aldiv@sign^0,c
 38348  007B18  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 38349  007B1A  D00A               	goto	i2l18222
 38350  007B1C  1E14               	comf	(i2___aldiv@divisor+3)^0,f,c
 38351  007B1E  1E13               	comf	(i2___aldiv@divisor+2)^0,f,c
 38352  007B20  1E12               	comf	(i2___aldiv@divisor+1)^0,f,c
 38353  007B22  6C11               	negf	i2___aldiv@divisor^0,c
 38354  007B24  0E00               	movlw	0
 38355  007B26  2212               	addwfc	(i2___aldiv@divisor+1)^0,f,c
 38356  007B28  2213               	addwfc	(i2___aldiv@divisor+2)^0,f,c
 38357  007B2A  2214               	addwfc	(i2___aldiv@divisor+3)^0,f,c
 38358  007B2C  0E01               	movlw	1
 38359  007B2E  6E16               	movwf	i2___aldiv@sign^0,c
 38360  007B30                     i2l18222:
 38361  007B30  AE10               	btfss	(i2___aldiv@dividend+3)^0,7,c
 38362  007B32  D00A               	goto	i2l18228
 38363  007B34  1E10               	comf	(i2___aldiv@dividend+3)^0,f,c
 38364  007B36  1E0F               	comf	(i2___aldiv@dividend+2)^0,f,c
 38365  007B38  1E0E               	comf	(i2___aldiv@dividend+1)^0,f,c
 38366  007B3A  6C0D               	negf	i2___aldiv@dividend^0,c
 38367  007B3C  0E00               	movlw	0
 38368  007B3E  220E               	addwfc	(i2___aldiv@dividend+1)^0,f,c
 38369  007B40  220F               	addwfc	(i2___aldiv@dividend+2)^0,f,c
 38370  007B42  2210               	addwfc	(i2___aldiv@dividend+3)^0,f,c
 38371  007B44  0E01               	movlw	1
 38372  007B46  1A16               	xorwf	i2___aldiv@sign^0,f,c
 38373  007B48                     i2l18228:
 38374  007B48  0E00               	movlw	0
 38375  007B4A  6E17               	movwf	i2___aldiv@quotient^0,c
 38376  007B4C  0E00               	movlw	0
 38377  007B4E  6E18               	movwf	(i2___aldiv@quotient+1)^0,c
 38378  007B50  0E00               	movlw	0
 38379  007B52  6E19               	movwf	(i2___aldiv@quotient+2)^0,c
 38380  007B54  0E00               	movlw	0
 38381  007B56  6E1A               	movwf	(i2___aldiv@quotient+3)^0,c
 38382  007B58  5011               	movf	i2___aldiv@divisor^0,w,c
 38383  007B5A  1012               	iorwf	(i2___aldiv@divisor+1)^0,w,c
 38384  007B5C  1013               	iorwf	(i2___aldiv@divisor+2)^0,w,c
 38385  007B5E  1014               	iorwf	(i2___aldiv@divisor+3)^0,w,c
 38386  007B60  B4D8               	btfsc	status,2,c
 38387  007B62  D02A               	goto	i2l18250
 38388  007B64  0E01               	movlw	1
 38389  007B66  6E15               	movwf	i2___aldiv@counter^0,c
 38390  007B68  D006               	goto	i2l18236
 38391  007B6A                     i2l18234:
 38392  007B6A  90D8               	bcf	status,0,c
 38393  007B6C  3611               	rlcf	i2___aldiv@divisor^0,f,c
 38394  007B6E  3612               	rlcf	(i2___aldiv@divisor+1)^0,f,c
 38395  007B70  3613               	rlcf	(i2___aldiv@divisor+2)^0,f,c
 38396  007B72  3614               	rlcf	(i2___aldiv@divisor+3)^0,f,c
 38397  007B74  2A15               	incf	i2___aldiv@counter^0,f,c
 38398  007B76                     i2l18236:
 38399  007B76  AE14               	btfss	(i2___aldiv@divisor+3)^0,7,c
 38400  007B78  D7F8               	goto	i2l18234
 38401  007B7A                     i2u1787_40:
 38402  007B7A  90D8               	bcf	status,0,c
 38403  007B7C  3617               	rlcf	i2___aldiv@quotient^0,f,c
 38404  007B7E  3618               	rlcf	(i2___aldiv@quotient+1)^0,f,c
 38405  007B80  3619               	rlcf	(i2___aldiv@quotient+2)^0,f,c
 38406  007B82  361A               	rlcf	(i2___aldiv@quotient+3)^0,f,c
 38407  007B84  5011               	movf	i2___aldiv@divisor^0,w,c
 38408  007B86  5C0D               	subwf	i2___aldiv@dividend^0,w,c
 38409  007B88  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 38410  007B8A  580E               	subwfb	(i2___aldiv@dividend+1)^0,w,c
 38411  007B8C  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 38412  007B8E  580F               	subwfb	(i2___aldiv@dividend+2)^0,w,c
 38413  007B90  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 38414  007B92  5810               	subwfb	(i2___aldiv@dividend+3)^0,w,c
 38415  007B94  A0D8               	btfss	status,0,c
 38416  007B96  D009               	goto	i2l18246
 38417  007B98  5011               	movf	i2___aldiv@divisor^0,w,c
 38418  007B9A  5E0D               	subwf	i2___aldiv@dividend^0,f,c
 38419  007B9C  5012               	movf	(i2___aldiv@divisor+1)^0,w,c
 38420  007B9E  5A0E               	subwfb	(i2___aldiv@dividend+1)^0,f,c
 38421  007BA0  5013               	movf	(i2___aldiv@divisor+2)^0,w,c
 38422  007BA2  5A0F               	subwfb	(i2___aldiv@dividend+2)^0,f,c
 38423  007BA4  5014               	movf	(i2___aldiv@divisor+3)^0,w,c
 38424  007BA6  5A10               	subwfb	(i2___aldiv@dividend+3)^0,f,c
 38425  007BA8  8017               	bsf	i2___aldiv@quotient^0,0,c
 38426  007BAA                     i2l18246:
 38427  007BAA  90D8               	bcf	status,0,c
 38428  007BAC  3214               	rrcf	(i2___aldiv@divisor+3)^0,f,c
 38429  007BAE  3213               	rrcf	(i2___aldiv@divisor+2)^0,f,c
 38430  007BB0  3212               	rrcf	(i2___aldiv@divisor+1)^0,f,c
 38431  007BB2  3211               	rrcf	i2___aldiv@divisor^0,f,c
 38432  007BB4  2E15               	decfsz	i2___aldiv@counter^0,f,c
 38433  007BB6  D7E1               	goto	i2u1787_40
 38434  007BB8                     i2l18250:
 38435  007BB8  5016               	movf	i2___aldiv@sign^0,w,c
 38436  007BBA  B4D8               	btfsc	status,2,c
 38437  007BBC  D008               	goto	i2l18254
 38438  007BBE  1E1A               	comf	(i2___aldiv@quotient+3)^0,f,c
 38439  007BC0  1E19               	comf	(i2___aldiv@quotient+2)^0,f,c
 38440  007BC2  1E18               	comf	(i2___aldiv@quotient+1)^0,f,c
 38441  007BC4  6C17               	negf	i2___aldiv@quotient^0,c
 38442  007BC6  0E00               	movlw	0
 38443  007BC8  2218               	addwfc	(i2___aldiv@quotient+1)^0,f,c
 38444  007BCA  2219               	addwfc	(i2___aldiv@quotient+2)^0,f,c
 38445  007BCC  221A               	addwfc	(i2___aldiv@quotient+3)^0,f,c
 38446  007BCE                     i2l18254:
 38447  007BCE  0060  F05C  F00D   	movff	i2___aldiv@quotient,?i2___aldiv
 38448  007BD4  0060  F060  F00E   	movff	i2___aldiv@quotient+1,?i2___aldiv+1
 38449  007BDA  0060  F064  F00F   	movff	i2___aldiv@quotient+2,?i2___aldiv+2
 38450  007BE0  0060  F068  F010   	movff	i2___aldiv@quotient+3,?i2___aldiv+3
 38451  007BE6  0012               	return		;funcret
 38452  007BE8                     __end_ofi2___aldiv:
 38453                           	opt callstack 0
 38454                           
 38455 ;; *************** function _SetMaxPressure *****************
 38456 ;; Defined at:
 38457 ;;		line 144 in file "alarm.c"
 38458 ;; Parameters:    Size  Location     Type
 38459 ;;  pr              2    0[COMRAM] short 
 38460 ;; Auto vars:     Size  Location     Type
 38461 ;;		None
 38462 ;; Return value:  Size  Location     Type
 38463 ;;                  1    wreg      void 
 38464 ;; Registers used:
 38465 ;;		None
 38466 ;; Tracked objects:
 38467 ;;		On entry : 3F/0
 38468 ;;		On exit  : 3F/0
 38469 ;;		Unchanged: 3F/0
 38470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38475 ;;Total ram usage:        2 bytes
 38476 ;; Hardware stack levels used:    1
 38477 ;; This function calls:
 38478 ;;		Nothing
 38479 ;; This function is called by:
 38480 ;;		_UpdateState
 38481 ;; This function uses a non-reentrant model
 38482 ;;
 38483                           
 38484                           	psect	text291
 38485  00ACCA                     __ptext291:
 38486                           	opt callstack 0
 38487  00ACCA                     _SetMaxPressure:
 38488                           	opt callstack 12
 38489                           
 38490                           ; BSR set to: 0
 38491                           
 38492                           ;incstack = 0
 38493  00ACCA  0060  F004  F2D7   	movff	SetMaxPressure@pr,_alarmPmax
 38494  00ACD0  0060  F008  F2D8   	movff	SetMaxPressure@pr+1,_alarmPmax+1
 38495                           
 38496                           ; BSR set to: 0
 38497  00ACD6  0012               	return		;funcret
 38498  00ACD8                     __end_of_SetMaxPressure:
 38499                           	opt callstack 0
 38500                           
 38501 ;; *************** function _SetControlFailAlarm *****************
 38502 ;; Defined at:
 38503 ;;		line 229 in file "alarm.c"
 38504 ;; Parameters:    Size  Location     Type
 38505 ;;		None
 38506 ;; Auto vars:     Size  Location     Type
 38507 ;;		None
 38508 ;; Return value:  Size  Location     Type
 38509 ;;                  1    wreg      void 
 38510 ;; Registers used:
 38511 ;;		wreg, status,2
 38512 ;; Tracked objects:
 38513 ;;		On entry : 3F/2
 38514 ;;		On exit  : 3F/0
 38515 ;;		Unchanged: 0/0
 38516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38521 ;;Total ram usage:        0 bytes
 38522 ;; Hardware stack levels used:    1
 38523 ;; This function calls:
 38524 ;;		Nothing
 38525 ;; This function is called by:
 38526 ;;		_UpdateState
 38527 ;;		_ControllerTimerHandler
 38528 ;; This function uses a non-reentrant model
 38529 ;;
 38530                           
 38531                           	psect	text292
 38532  00AECE                     __ptext292:
 38533                           	opt callstack 0
 38534  00AECE                     _SetControlFailAlarm:
 38535                           	opt callstack 14
 38536                           
 38537                           ; BSR set to: 2
 38538                           
 38539                           ; BSR set to: 0
 38540                           ;incstack = 0
 38541  00AECE  0E01               	movlw	1
 38542  00AED0  0100               	movlb	0	; () banked
 38543  00AED2  6FF2               	movwf	_controlFailAlarm& (0+255),b
 38544                           
 38545                           ; BSR set to: 0
 38546  00AED4  0012               	return		;funcret
 38547  00AED6                     __end_of_SetControlFailAlarm:
 38548                           	opt callstack 0
 38549                           
 38550 ;; *************** function _GetControllerBuzzerCheck *****************
 38551 ;; Defined at:
 38552 ;;		line 415 in file "buzzer.c"
 38553 ;; Parameters:    Size  Location     Type
 38554 ;;		None
 38555 ;; Auto vars:     Size  Location     Type
 38556 ;;  tmp             1    0[COMRAM] _Bool 
 38557 ;; Return value:  Size  Location     Type
 38558 ;;                  1    wreg      _Bool 
 38559 ;; Registers used:
 38560 ;;		wreg, status,2
 38561 ;; Tracked objects:
 38562 ;;		On entry : 3F/2
 38563 ;;		On exit  : 3F/2
 38564 ;;		Unchanged: 0/0
 38565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38570 ;;Total ram usage:        1 bytes
 38571 ;; Hardware stack levels used:    1
 38572 ;; This function calls:
 38573 ;;		Nothing
 38574 ;; This function is called by:
 38575 ;;		_UpdateState
 38576 ;; This function uses a non-reentrant model
 38577 ;;
 38578                           
 38579                           	psect	text293
 38580  00AA8E                     __ptext293:
 38581                           	opt callstack 0
 38582  00AA8E                     _GetControllerBuzzerCheck:
 38583                           	opt callstack 12
 38584                           
 38585                           ; BSR set to: 2
 38586                           ;buzzer.c: 416:     _Bool tmp = controllerDetected;
 38587                           
 38588                           ; BSR set to: 0
 38589                           ;incstack = 0
 38590  00AA8E  0060  FAC4  F001   	movff	_controllerDetected,GetControllerBuzzerCheck@tmp
 38591                           
 38592                           ; BSR set to: 2
 38593                           ;buzzer.c: 417:     controllerDetected = 0;
 38594  00AA94  0E00               	movlw	0
 38595  00AA96  6FB1               	movwf	_controllerDetected& (0+255),b
 38596                           
 38597                           ;buzzer.c: 418:     checkController = 0;
 38598  00AA98  0E00               	movlw	0
 38599  00AA9A  6FB2               	movwf	_checkController& (0+255),b
 38600                           
 38601                           ;buzzer.c: 419:     return tmp;
 38602  00AA9C  5001               	movf	GetControllerBuzzerCheck@tmp^0,w,c
 38603                           
 38604                           ; BSR set to: 2
 38605  00AA9E  0012               	return		;funcret
 38606  00AAA0                     __end_of_GetControllerBuzzerCheck:
 38607                           	opt callstack 0
 38608                           
 38609 ;; *************** function _DisplayEnable *****************
 38610 ;; Defined at:
 38611 ;;		line 46 in file "display.c"
 38612 ;; Parameters:    Size  Location     Type
 38613 ;;		None
 38614 ;; Auto vars:     Size  Location     Type
 38615 ;;		None
 38616 ;; Return value:  Size  Location     Type
 38617 ;;                  1    wreg      void 
 38618 ;; Registers used:
 38619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38620 ;; Tracked objects:
 38621 ;;		On entry : 3F/0
 38622 ;;		On exit  : 3F/0
 38623 ;;		Unchanged: 0/0
 38624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38629 ;;Total ram usage:        0 bytes
 38630 ;; Hardware stack levels used:    1
 38631 ;; Hardware stack levels required when called:   10
 38632 ;; This function calls:
 38633 ;;		i2_ValueDisplay
 38634 ;; This function is called by:
 38635 ;;		_UpdateState
 38636 ;; This function uses a non-reentrant model
 38637 ;;
 38638                           
 38639                           	psect	text294
 38640  00AB22                     __ptext294:
 38641                           	opt callstack 0
 38642  00AB22                     _DisplayEnable:
 38643                           	opt callstack 2
 38644                           
 38645                           ; BSR set to: 0
 38646                           ;display.c: 47:     if (enable == 0) ValueDisplay();
 38647                           
 38648                           ; BSR set to: 2
 38649                           ;incstack = 0
 38650  00AB22  51FA               	movf	_enable& (0+255),w,b
 38651  00AB24  B4D8               	btfsc	status,2,c
 38652                           
 38653                           ; BSR set to: 0
 38654  00AB26  EC60  F00F         	call	i2_ValueDisplay	;wreg free
 38655                           
 38656                           ;display.c: 48:     enable = 1;
 38657  00AB2A  0E01               	movlw	1
 38658  00AB2C  0100               	movlb	0	; () banked
 38659  00AB2E  6FFA               	movwf	_enable& (0+255),b
 38660                           
 38661                           ; BSR set to: 0
 38662  00AB30  0012               	return		;funcret
 38663  00AB32                     __end_of_DisplayEnable:
 38664                           	opt callstack 0
 38665                           
 38666 ;; *************** function _DisplayDisable *****************
 38667 ;; Defined at:
 38668 ;;		line 51 in file "display.c"
 38669 ;; Parameters:    Size  Location     Type
 38670 ;;		None
 38671 ;; Auto vars:     Size  Location     Type
 38672 ;;		None
 38673 ;; Return value:  Size  Location     Type
 38674 ;;                  1    wreg      void 
 38675 ;; Registers used:
 38676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38677 ;; Tracked objects:
 38678 ;;		On entry : 3D/2
 38679 ;;		On exit  : 3F/0
 38680 ;;		Unchanged: 0/0
 38681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38686 ;;Total ram usage:        0 bytes
 38687 ;; Hardware stack levels used:    1
 38688 ;; Hardware stack levels required when called:   10
 38689 ;; This function calls:
 38690 ;;		i2_ValueDisplay
 38691 ;; This function is called by:
 38692 ;;		_UpdateState
 38693 ;; This function uses a non-reentrant model
 38694 ;;
 38695                           
 38696                           	psect	text295
 38697  00AAA0                     __ptext295:
 38698                           	opt callstack 0
 38699  00AAA0                     _DisplayDisable:
 38700                           	opt callstack 2
 38701                           
 38702                           ;display.c: 52:     if (enable == 1) ValueDisplay();
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;incstack = 0
 38706  00AAA0  0100               	movlb	0	; () banked
 38707  00AAA2  05FA               	decf	_enable& (0+255),w,b
 38708  00AAA4  B4D8               	btfsc	status,2,c
 38709                           
 38710                           ; BSR set to: 0
 38711  00AAA6  EC60  F00F         	call	i2_ValueDisplay	;wreg free
 38712                           
 38713                           ;display.c: 53:     enable = 0;
 38714  00AAAA  0E00               	movlw	0
 38715  00AAAC  0100               	movlb	0	; () banked
 38716  00AAAE  6FFA               	movwf	_enable& (0+255),b
 38717                           
 38718                           ; BSR set to: 0
 38719  00AAB0  0012               	return		;funcret
 38720  00AAB2                     __end_of_DisplayDisable:
 38721                           	opt callstack 0
 38722                           
 38723 ;; *************** function i2_ValueDisplay *****************
 38724 ;; Defined at:
 38725 ;;		line 66 in file "display.c"
 38726 ;; Parameters:    Size  Location     Type
 38727 ;;		None
 38728 ;; Auto vars:     Size  Location     Type
 38729 ;;  ValueDisplay    2   91[BANK0 ] short 
 38730 ;;  ValueDisplay    2   89[BANK0 ] short 
 38731 ;;  ValueDisplay    2   87[BANK0 ] short 
 38732 ;;  ValueDisplay    2   82[BANK0 ] short 
 38733 ;;  ValueDisplay    2   80[BANK0 ] short 
 38734 ;;  ValueDisplay    2   67[BANK0 ] short 
 38735 ;;  ValueDisplay    2   65[BANK0 ] short 
 38736 ;;  ValueDisplay    2   63[BANK0 ] short 
 38737 ;;  ValueDisplay    2   61[BANK0 ] short 
 38738 ;;  ValueDisplay    2   59[BANK0 ] short 
 38739 ;;  ValueDisplay    2    0        short 
 38740 ;;  ValueDisplay    2    0        short 
 38741 ;;  ValueDisplay    2    0        short 
 38742 ;;  ValueDisplay    1   86[BANK0 ] char 
 38743 ;;  ValueDisplay    1   85[BANK0 ] char 
 38744 ;;  ValueDisplay    1   84[BANK0 ] char 
 38745 ;;  ValueDisplay    1   75[BANK0 ] char 
 38746 ;;  ValueDisplay    1   74[BANK0 ] char 
 38747 ;;  ValueDisplay    1   73[BANK0 ] char 
 38748 ;;  ValueDisplay    1   72[BANK0 ] char 
 38749 ;;  ValueDisplay    1   71[BANK0 ] char 
 38750 ;;  ValueDisplay    1    0        char 
 38751 ;;  ValueDisplay    1    0        char 
 38752 ;; Return value:  Size  Location     Type
 38753 ;;                  1    wreg      void 
 38754 ;; Registers used:
 38755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38756 ;; Tracked objects:
 38757 ;;		On entry : 0/2
 38758 ;;		On exit  : 3C/0
 38759 ;;		Unchanged: 0/0
 38760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38762 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38764 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38765 ;;Total ram usage:       42 bytes
 38766 ;; Hardware stack levels used:    1
 38767 ;; Hardware stack levels required when called:    9
 38768 ;; This function calls:
 38769 ;;		i2_GetAlarmState
 38770 ;;		i2_GetBpm
 38771 ;;		i2_GetDisableAlarmSV1
 38772 ;;		i2_GetEp
 38773 ;;		i2_GetIp
 38774 ;;		i2_GetPmax
 38775 ;;		i2_GetSpr
 38776 ;;		i2_GetTargetEp
 38777 ;;		i2_GetTargetIp
 38778 ;;		i2_GetTde
 38779 ;;		i2_GetTdi
 38780 ;;		i2_GetTe
 38781 ;;		i2_GetTi
 38782 ;;		i2_GetVolume
 38783 ;;		i2___awdiv
 38784 ;;		i2___awmod
 38785 ;;		i2___wmul
 38786 ;;		i2_sprintf
 38787 ;; This function is called by:
 38788 ;;		_DisplayEnable
 38789 ;;		_DisplayDisable
 38790 ;;		i2_AlarmDisplay
 38791 ;;		i2_AlarmUpdateLCD
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text296
 38796  001EC0                     __ptext296:
 38797                           	opt callstack 0
 38798  001EC0                     i2_ValueDisplay:
 38799                           	opt callstack 3
 38800                           
 38801                           ;display.c: 67:     if (!enable) {
 38802                           
 38803                           ; BSR set to: 0
 38804                           ;incstack = 0
 38805  001EC0  0100               	movlb	0	; () banked
 38806  001EC2  51FA               	movf	_enable& (0+255),w,b
 38807  001EC4  A4D8               	btfss	status,2,c
 38808  001EC6  D01F               	goto	i2l18442
 38809                           
 38810                           ; BSR set to: 0
 38811                           ;display.c: 68:         if (msg1[0]==0) sprintf(msg1, "OxyVitaEmergency");
 38812  001EC8  0103               	movlb	3	; () banked
 38813  001ECA  51E5               	movf	_msg1& (0+255),w,b
 38814  001ECC  A4D8               	btfss	status,2,c
 38815  001ECE  D00B               	goto	i2l18436
 38816                           
 38817                           ; BSR set to: 3
 38818  001ED0  0EE5               	movlw	low _msg1
 38819  001ED2  0100               	movlb	0	; () banked
 38820  001ED4  6F77               	movwf	i2sprintf@s& (0+255),b
 38821  001ED6  0E03               	movlw	high _msg1
 38822  001ED8  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38823  001EDA  0ECE               	movlw	low STR_8
 38824  001EDC  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38825  001EDE  0EFE               	movlw	high STR_8
 38826  001EE0  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38827  001EE2  EC6A  F04C         	call	i2_sprintf	;wreg free
 38828  001EE6                     i2l18436:
 38829                           
 38830                           ;display.c: 69:         if (msg2[0]==0) sprintf(msg2, "Ventilator v1.0 ");
 38831  001EE6  0103               	movlb	3	; () banked
 38832  001EE8  51D1               	movf	_msg2& (0+255),w,b
 38833  001EEA  A4D8               	btfss	status,2,c
 38834  001EEC  0012               	return	
 38835                           
 38836                           ; BSR set to: 3
 38837  001EEE  0ED1               	movlw	low _msg2
 38838  001EF0  0100               	movlb	0	; () banked
 38839  001EF2  6F77               	movwf	i2sprintf@s& (0+255),b
 38840  001EF4  0E03               	movlw	high _msg2
 38841  001EF6  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 38842  001EF8  0EBD               	movlw	low STR_9
 38843  001EFA  6F79               	movwf	i2sprintf@fmt& (0+255),b
 38844  001EFC  0EFE               	movlw	high STR_9
 38845  001EFE  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 38846  001F00  EC6A  F04C         	call	i2_sprintf	;wreg free
 38847  001F04  0012               	return	
 38848  001F06                     i2l18442:
 38849                           
 38850                           ; BSR set to: 0
 38851                           ;display.c: 72:     static int cnt=0;;display.c: 74:     int16_t tdi = GetTdi();
 38852  001F06  EC7A  F056         	call	i2_GetTdi	;wreg free
 38853  001F0A  0060  F004  F0B0   	movff	?i2_GetTdi,i2ValueDisplay@tdi
 38854  001F10  0060  F008  F0B1   	movff	?i2_GetTdi+1,i2ValueDisplay@tdi+1
 38855                           
 38856                           ;display.c: 75:     int16_t tde = GetTde();
 38857  001F16  ECC8  F056         	call	i2_GetTde	;wreg free
 38858  001F1A  0060  F004  F0B2   	movff	?i2_GetTde,i2ValueDisplay@tde
 38859  001F20  0060  F008  F0B3   	movff	?i2_GetTde+1,i2ValueDisplay@tde+1
 38860                           
 38861                           ;display.c: 76:     int16_t ti = GetTi();
 38862  001F26  EC73  F056         	call	i2_GetTi	;wreg free
 38863  001F2A  0060  F004  F0BB   	movff	?i2_GetTi,i2ValueDisplay@ti
 38864  001F30  0060  F008  F0BC   	movff	?i2_GetTi+1,i2ValueDisplay@ti+1
 38865                           
 38866                           ;display.c: 77:     int16_t te = GetTe();
 38867  001F36  ECC2  F056         	call	i2_GetTe	;wreg free
 38868  001F3A  0060  F004  F0B9   	movff	?i2_GetTe,i2ValueDisplay@te
 38869  001F40  0060  F008  F0BA   	movff	?i2_GetTe+1,i2ValueDisplay@te+1
 38870                           
 38871                           ;display.c: 78:     int8_t eti = ti/1000;
 38872  001F46  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 38873  001F4C  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 38874  001F52  0E03               	movlw	3
 38875  001F54  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38876  001F56  0EE8               	movlw	232
 38877  001F58  6E09               	movwf	i2___awdiv@divisor^0,c
 38878  001F5A  ECC1  F045         	call	i2___awdiv	;wreg free
 38879  001F5E  5007               	movf	?i2___awdiv^0,w,c
 38880  001F60  0100               	movlb	0	; () banked
 38881  001F62  6FA7               	movwf	i2ValueDisplay@eti& (0+255),b
 38882                           
 38883                           ; BSR set to: 0
 38884  001F64  51A7               	movf	i2ValueDisplay@eti& (0+255),w,b
 38885  001F66  6E01               	movwf	i2___wmul@multiplier^0,c
 38886  001F68  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38887  001F6A  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38888  001F6C  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38889  001F6E  0EFC               	movlw	252
 38890  001F70  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38891  001F72  0E18               	movlw	24
 38892  001F74  6E03               	movwf	i2___wmul@multiplicand^0,c
 38893  001F76  ECBA  F051         	call	i2___wmul	;wreg free
 38894  001F7A  0100               	movlb	0	; () banked
 38895  001F7C  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 38896  001F7E  2401               	addwf	?i2___wmul^0,w,c
 38897  001F80  6E07               	movwf	i2___awdiv@dividend^0,c
 38898  001F82  51BC               	movf	(i2ValueDisplay@ti+1)& (0+255),w,b
 38899  001F84  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38900  001F86  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38901  001F88  0E00               	movlw	0
 38902  001F8A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38903  001F8C  0E0A               	movlw	10
 38904  001F8E  6E09               	movwf	i2___awdiv@divisor^0,c
 38905  001F90  ECC1  F045         	call	i2___awdiv	;wreg free
 38906                           
 38907                           ;display.c: 80:     int8_t ete = te/1000;
 38908  001F94  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 38909  001F9A  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 38910  001FA0  0E03               	movlw	3
 38911  001FA2  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38912  001FA4  0EE8               	movlw	232
 38913  001FA6  6E09               	movwf	i2___awdiv@divisor^0,c
 38914  001FA8  ECC1  F045         	call	i2___awdiv	;wreg free
 38915  001FAC  5007               	movf	?i2___awdiv^0,w,c
 38916  001FAE  0100               	movlb	0	; () banked
 38917  001FB0  6FA8               	movwf	i2ValueDisplay@ete& (0+255),b
 38918  001FB2  51A8               	movf	i2ValueDisplay@ete& (0+255),w,b
 38919  001FB4  6E01               	movwf	i2___wmul@multiplier^0,c
 38920  001FB6  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38921  001FB8  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38922  001FBA  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38923  001FBC  0EFC               	movlw	252
 38924  001FBE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38925  001FC0  0E18               	movlw	24
 38926  001FC2  6E03               	movwf	i2___wmul@multiplicand^0,c
 38927  001FC4  ECBA  F051         	call	i2___wmul	;wreg free
 38928  001FC8  0100               	movlb	0	; () banked
 38929  001FCA  51B9               	movf	i2ValueDisplay@te& (0+255),w,b
 38930  001FCC  2401               	addwf	?i2___wmul^0,w,c
 38931  001FCE  6E07               	movwf	i2___awdiv@dividend^0,c
 38932  001FD0  51BA               	movf	(i2ValueDisplay@te+1)& (0+255),w,b
 38933  001FD2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38934  001FD4  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38935  001FD6  0E00               	movlw	0
 38936  001FD8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38937  001FDA  0E0A               	movlw	10
 38938  001FDC  6E09               	movwf	i2___awdiv@divisor^0,c
 38939  001FDE  ECC1  F045         	call	i2___awdiv	;wreg free
 38940  001FE2  EC88  F056         	call	i2_GetBpm	;wreg free
 38941                           
 38942                           ;display.c: 83:     int16_t pi = GetIp();
 38943  001FE6  EC86  F029         	call	i2_GetIp	;wreg free
 38944  001FEA  0060  F03C  F09B   	movff	?i2_GetIp,i2ValueDisplay@pi
 38945  001FF0  0060  F040  F09C   	movff	?i2_GetIp+1,i2ValueDisplay@pi+1
 38946                           
 38947                           ;display.c: 84:     int16_t pe = GetEp();
 38948  001FF6  EC44  F02A         	call	i2_GetEp	;wreg free
 38949  001FFA  0060  F03C  F09D   	movff	?i2_GetEp,i2ValueDisplay@pe
 38950  002000  0060  F040  F09E   	movff	?i2_GetEp+1,i2ValueDisplay@pe+1
 38951                           
 38952                           ;display.c: 85:     int8_t etdi = tdi/1000;
 38953  002006  0060  F2C0  F007   	movff	i2ValueDisplay@tdi,i2___awdiv@dividend
 38954  00200C  0060  F2C4  F008   	movff	i2ValueDisplay@tdi+1,i2___awdiv@dividend+1
 38955  002012  0E03               	movlw	3
 38956  002014  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38957  002016  0EE8               	movlw	232
 38958  002018  6E09               	movwf	i2___awdiv@divisor^0,c
 38959  00201A  ECC1  F045         	call	i2___awdiv	;wreg free
 38960  00201E  5007               	movf	?i2___awdiv^0,w,c
 38961  002020  0100               	movlb	0	; () banked
 38962  002022  6FB4               	movwf	i2ValueDisplay@etdi& (0+255),b
 38963                           
 38964                           ; BSR set to: 0
 38965                           ;display.c: 86:     int8_t dtdi = (tdi-((int16_t) etdi)*1000)/10;
 38966  002024  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 38967  002026  6E01               	movwf	i2___wmul@multiplier^0,c
 38968  002028  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 38969  00202A  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 38970  00202C  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 38971  00202E  0EFC               	movlw	252
 38972  002030  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 38973  002032  0E18               	movlw	24
 38974  002034  6E03               	movwf	i2___wmul@multiplicand^0,c
 38975  002036  ECBA  F051         	call	i2___wmul	;wreg free
 38976  00203A  0100               	movlb	0	; () banked
 38977  00203C  51B0               	movf	i2ValueDisplay@tdi& (0+255),w,b
 38978  00203E  2401               	addwf	?i2___wmul^0,w,c
 38979  002040  6E07               	movwf	i2___awdiv@dividend^0,c
 38980  002042  51B1               	movf	(i2ValueDisplay@tdi+1)& (0+255),w,b
 38981  002044  2002               	addwfc	(?i2___wmul+1)^0,w,c
 38982  002046  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 38983  002048  0E00               	movlw	0
 38984  00204A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38985  00204C  0E0A               	movlw	10
 38986  00204E  6E09               	movwf	i2___awdiv@divisor^0,c
 38987  002050  ECC1  F045         	call	i2___awdiv	;wreg free
 38988  002054  5007               	movf	?i2___awdiv^0,w,c
 38989  002056  0100               	movlb	0	; () banked
 38990  002058  6FA9               	movwf	i2ValueDisplay@dtdi& (0+255),b
 38991                           
 38992                           ; BSR set to: 0
 38993                           ;display.c: 87:     int8_t etde = tde/1000;
 38994  00205A  0060  F2C8  F007   	movff	i2ValueDisplay@tde,i2___awdiv@dividend
 38995  002060  0060  F2CC  F008   	movff	i2ValueDisplay@tde+1,i2___awdiv@dividend+1
 38996  002066  0E03               	movlw	3
 38997  002068  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 38998  00206A  0EE8               	movlw	232
 38999  00206C  6E09               	movwf	i2___awdiv@divisor^0,c
 39000  00206E  ECC1  F045         	call	i2___awdiv	;wreg free
 39001  002072  5007               	movf	?i2___awdiv^0,w,c
 39002  002074  0100               	movlb	0	; () banked
 39003  002076  6FB5               	movwf	i2ValueDisplay@etde& (0+255),b
 39004                           
 39005                           ; BSR set to: 0
 39006                           ;display.c: 88:     int8_t dtde = (tde-((int16_t) etde)*1000)/10;
 39007  002078  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 39008  00207A  6E01               	movwf	i2___wmul@multiplier^0,c
 39009  00207C  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 39010  00207E  BE01               	btfsc	i2___wmul@multiplier^0,7,c
 39011  002080  0602               	decf	(i2___wmul@multiplier+1)^0,f,c
 39012  002082  0EFC               	movlw	252
 39013  002084  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 39014  002086  0E18               	movlw	24
 39015  002088  6E03               	movwf	i2___wmul@multiplicand^0,c
 39016  00208A  ECBA  F051         	call	i2___wmul	;wreg free
 39017  00208E  0100               	movlb	0	; () banked
 39018  002090  51B2               	movf	i2ValueDisplay@tde& (0+255),w,b
 39019  002092  2401               	addwf	?i2___wmul^0,w,c
 39020  002094  6E07               	movwf	i2___awdiv@dividend^0,c
 39021  002096  51B3               	movf	(i2ValueDisplay@tde+1)& (0+255),w,b
 39022  002098  2002               	addwfc	(?i2___wmul+1)^0,w,c
 39023  00209A  6E08               	movwf	(i2___awdiv@dividend+1)^0,c
 39024  00209C  0E00               	movlw	0
 39025  00209E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39026  0020A0  0E0A               	movlw	10
 39027  0020A2  6E09               	movwf	i2___awdiv@divisor^0,c
 39028  0020A4  ECC1  F045         	call	i2___awdiv	;wreg free
 39029  0020A8  5007               	movf	?i2___awdiv^0,w,c
 39030  0020AA  0100               	movlb	0	; () banked
 39031  0020AC  6FAA               	movwf	i2ValueDisplay@dtde& (0+255),b
 39032                           
 39033                           ; BSR set to: 0
 39034                           ;display.c: 89:     int16_t r;;display.c: 90:     if (ti!=0) r = (te)/(ti/10);
 39035  0020AE  51BB               	movf	i2ValueDisplay@ti& (0+255),w,b
 39036  0020B0  11BC               	iorwf	(i2ValueDisplay@ti+1)& (0+255),w,b
 39037  0020B2  B4D8               	btfsc	status,2,c
 39038  0020B4  D027               	goto	i2l18466
 39039                           
 39040                           ; BSR set to: 0
 39041  0020B6  0E00               	movlw	0
 39042  0020B8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39043  0020BA  0E0A               	movlw	10
 39044  0020BC  6E09               	movwf	i2___awdiv@divisor^0,c
 39045  0020BE  0060  F2EC  F007   	movff	i2ValueDisplay@ti,i2___awdiv@dividend
 39046  0020C4  0060  F2F0  F008   	movff	i2ValueDisplay@ti+1,i2___awdiv@dividend+1
 39047  0020CA  ECC1  F045         	call	i2___awdiv	;wreg free
 39048  0020CE  0060  F01C  F0A5   	movff	?i2___awdiv,i2_ValueDisplay$7139
 39049  0020D4  0060  F020  F0A6   	movff	?i2___awdiv+1,i2_ValueDisplay$7139+1
 39050  0020DA  0060  F2E4  F007   	movff	i2ValueDisplay@te,i2___awdiv@dividend
 39051  0020E0  0060  F2E8  F008   	movff	i2ValueDisplay@te+1,i2___awdiv@dividend+1
 39052  0020E6  0060  F294  F009   	movff	i2_ValueDisplay$7139,i2___awdiv@divisor
 39053  0020EC  0060  F298  F00A   	movff	i2_ValueDisplay$7139+1,i2___awdiv@divisor+1
 39054  0020F2  ECC1  F045         	call	i2___awdiv	;wreg free
 39055  0020F6  0060  F01C  F0B7   	movff	?i2___awdiv,i2ValueDisplay@r
 39056  0020FC  0060  F020  F0B8   	movff	?i2___awdiv+1,i2ValueDisplay@r+1
 39057  002102  D004               	goto	i2l18468
 39058  002104                     i2l18466:
 39059                           
 39060                           ; BSR set to: 0
 39061  002104  0E00               	movlw	0
 39062  002106  6FB8               	movwf	(i2ValueDisplay@r+1)& (0+255),b
 39063  002108  0E00               	movlw	0
 39064  00210A  6FB7               	movwf	i2ValueDisplay@r& (0+255),b
 39065  00210C                     i2l18468:
 39066                           
 39067                           ;display.c: 92:     int8_t er = r/10;
 39068  00210C  0060  F2DC  F007   	movff	i2ValueDisplay@r,i2___awdiv@dividend
 39069  002112  0060  F2E0  F008   	movff	i2ValueDisplay@r+1,i2___awdiv@dividend+1
 39070  002118  0E00               	movlw	0
 39071  00211A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39072  00211C  0E0A               	movlw	10
 39073  00211E  6E09               	movwf	i2___awdiv@divisor^0,c
 39074  002120  ECC1  F045         	call	i2___awdiv	;wreg free
 39075  002124  5007               	movf	?i2___awdiv^0,w,c
 39076  002126  0100               	movlb	0	; () banked
 39077  002128  6FB6               	movwf	i2ValueDisplay@er& (0+255),b
 39078                           
 39079                           ; BSR set to: 0
 39080                           ;display.c: 93:     int8_t dr = (r-((int16_t) er)*10);
 39081  00212A  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 39082  00212C  0DF6               	mullw	-10
 39083  00212E  50F3               	movf	243,w,c
 39084  002130  25B7               	addwf	i2ValueDisplay@r& (0+255),w,b
 39085  002132  6FAB               	movwf	i2ValueDisplay@dr& (0+255),b
 39086                           
 39087                           ; BSR set to: 0
 39088  002134  EC6F  F052         	call	i2_GetTargetIp	;wreg free
 39089  002138  EC82  F052         	call	i2_GetTargetEp	;wreg free
 39090                           
 39091                           ;display.c: 96:     int16_t vol = GetVolume();
 39092  00213C  EC6C  F056         	call	i2_GetVolume	;wreg free
 39093  002140  0060  F004  F09F   	movff	?i2_GetVolume,i2ValueDisplay@vol
 39094  002146  0060  F008  F0A0   	movff	?i2_GetVolume+1,i2ValueDisplay@vol+1
 39095                           
 39096                           ;display.c: 97:     int16_t pmax = GetPmax();
 39097  00214C  EC95  F052         	call	i2_GetPmax	;wreg free
 39098  002150  0060  F03C  F0A1   	movff	?i2_GetPmax,i2ValueDisplay@pmax
 39099  002156  0060  F040  F0A2   	movff	?i2_GetPmax+1,i2ValueDisplay@pmax+1
 39100                           
 39101                           ;display.c: 98:     int16_t spr = GetSpr();
 39102  00215C  EC81  F056         	call	i2_GetSpr	;wreg free
 39103  002160  0060  F004  F0A3   	movff	?i2_GetSpr,i2ValueDisplay@spr
 39104  002166  0060  F008  F0A4   	movff	?i2_GetSpr+1,i2ValueDisplay@spr+1
 39105                           
 39106                           ;display.c: 102:     sprintf(msg1, "%2d%% %d.%02d %d.%02d%c%s", spr, etde,dtde, etdi, dt
      +                          di, GetDisableAlarmSV1() ? 'd':' ', calibrate? "Ca" : GetAlarmState() );
 39107  00216C  0100               	movlb	0	; () banked
 39108  00216E  51FB               	movf	_calibrate& (0+255),w,b
 39109  002170  A4D8               	btfss	status,2,c
 39110  002172  D009               	goto	i2l18486
 39111                           
 39112                           ; BSR set to: 0
 39113  002174  EC93  F04C         	call	i2_GetAlarmState	;wreg free
 39114  002178  0060  F014  F0AC   	movff	?i2_GetAlarmState,i2_ValueDisplay$4007
 39115  00217E  0060  F018  F0AD   	movff	?i2_GetAlarmState+1,i2_ValueDisplay$4007+1
 39116  002184  D004               	goto	i2l18488
 39117  002186                     i2l18486:
 39118                           
 39119                           ; BSR set to: 0
 39120  002186  0EF9               	movlw	low STR_11
 39121  002188  6FAC               	movwf	i2_ValueDisplay$4007& (0+255),b
 39122  00218A  0EFF               	movlw	high STR_11
 39123  00218C  6FAD               	movwf	(i2_ValueDisplay$4007+1)& (0+255),b
 39124  00218E                     i2l18488:
 39125  00218E  ECCE  F057         	call	i2_GetDisableAlarmSV1	;wreg free
 39126  002192  0900               	iorlw	0
 39127  002194  A4D8               	btfss	status,2,c
 39128  002196  D004               	goto	i2l18492
 39129                           
 39130                           ; BSR set to: 0
 39131  002198  0E00               	movlw	0
 39132  00219A  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 39133  00219C  0E20               	movlw	32
 39134  00219E  D003               	goto	L16
 39135  0021A0                     i2l18492:
 39136                           
 39137                           ; BSR set to: 0
 39138  0021A0  0E00               	movlw	0
 39139  0021A2  6FAF               	movwf	(i2_ValueDisplay$4008+1)& (0+255),b
 39140  0021A4  0E64               	movlw	100
 39141  0021A6                     L16:
 39142  0021A6  6FAE               	movwf	i2_ValueDisplay$4008& (0+255),b
 39143                           
 39144                           ; BSR set to: 0
 39145  0021A8  0EE5               	movlw	low _msg1
 39146  0021AA  6F77               	movwf	i2sprintf@s& (0+255),b
 39147  0021AC  0E03               	movlw	high _msg1
 39148  0021AE  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 39149  0021B0  0E67               	movlw	low STR_10
 39150  0021B2  6F79               	movwf	i2sprintf@fmt& (0+255),b
 39151  0021B4  0EFE               	movlw	high STR_10
 39152  0021B6  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 39153  0021B8  0060  F28C  F07B   	movff	i2ValueDisplay@spr,?i2_sprintf+4
 39154  0021BE  0060  F290  F07C   	movff	i2ValueDisplay@spr+1,?i2_sprintf+5
 39155  0021C4  51B5               	movf	i2ValueDisplay@etde& (0+255),w,b
 39156  0021C6  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 39157  0021C8  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 39158  0021CA  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 39159  0021CC  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 39160  0021CE  51AA               	movf	i2ValueDisplay@dtde& (0+255),w,b
 39161  0021D0  6F7F               	movwf	(?i2_sprintf+8)& (0+255),b
 39162  0021D2  6B80               	clrf	(?i2_sprintf+9)& (0+255),b
 39163  0021D4  BF7F               	btfsc	(?i2_sprintf+8)& (0+255),7,b
 39164  0021D6  0780               	decf	(?i2_sprintf+9)& (0+255),f,b
 39165  0021D8  51B4               	movf	i2ValueDisplay@etdi& (0+255),w,b
 39166  0021DA  6F81               	movwf	(?i2_sprintf+10)& (0+255),b
 39167  0021DC  6B82               	clrf	(?i2_sprintf+11)& (0+255),b
 39168  0021DE  BF81               	btfsc	(?i2_sprintf+10)& (0+255),7,b
 39169  0021E0  0782               	decf	(?i2_sprintf+11)& (0+255),f,b
 39170  0021E2  51A9               	movf	i2ValueDisplay@dtdi& (0+255),w,b
 39171  0021E4  6F83               	movwf	(?i2_sprintf+12)& (0+255),b
 39172  0021E6  6B84               	clrf	(?i2_sprintf+13)& (0+255),b
 39173  0021E8  BF83               	btfsc	(?i2_sprintf+12)& (0+255),7,b
 39174  0021EA  0784               	decf	(?i2_sprintf+13)& (0+255),f,b
 39175  0021EC  0060  F2B8  F085   	movff	i2_ValueDisplay$4008,?i2_sprintf+14
 39176  0021F2  0060  F2BC  F086   	movff	i2_ValueDisplay$4008+1,?i2_sprintf+15
 39177  0021F8  0060  F2B0  F087   	movff	i2_ValueDisplay$4007,?i2_sprintf+16
 39178  0021FE  0060  F2B4  F088   	movff	i2_ValueDisplay$4007+1,?i2_sprintf+17
 39179  002204  EC6A  F04C         	call	i2_sprintf	;wreg free
 39180                           
 39181                           ; BSR set to: 0
 39182                           ;display.c: 104:     sprintf(msg3, "%1d%1d %2d %2d %2d %4d", er, dr, pe, pi, pmax, vol);
 39183  002208  0EBD               	movlw	low _msg3
 39184  00220A  6F77               	movwf	i2sprintf@s& (0+255),b
 39185  00220C  0E03               	movlw	high _msg3
 39186  00220E  6F78               	movwf	(i2sprintf@s+1)& (0+255),b
 39187  002210  0E81               	movlw	low STR_12
 39188  002212  6F79               	movwf	i2sprintf@fmt& (0+255),b
 39189  002214  0EFE               	movlw	high STR_12
 39190  002216  6F7A               	movwf	(i2sprintf@fmt+1)& (0+255),b
 39191  002218  51B6               	movf	i2ValueDisplay@er& (0+255),w,b
 39192  00221A  6F7B               	movwf	(?i2_sprintf+4)& (0+255),b
 39193  00221C  6B7C               	clrf	(?i2_sprintf+5)& (0+255),b
 39194  00221E  BF7B               	btfsc	(?i2_sprintf+4)& (0+255),7,b
 39195  002220  077C               	decf	(?i2_sprintf+5)& (0+255),f,b
 39196  002222  51AB               	movf	i2ValueDisplay@dr& (0+255),w,b
 39197  002224  6F7D               	movwf	(?i2_sprintf+6)& (0+255),b
 39198  002226  6B7E               	clrf	(?i2_sprintf+7)& (0+255),b
 39199  002228  BF7D               	btfsc	(?i2_sprintf+6)& (0+255),7,b
 39200  00222A  077E               	decf	(?i2_sprintf+7)& (0+255),f,b
 39201  00222C  0060  F274  F07F   	movff	i2ValueDisplay@pe,?i2_sprintf+8
 39202  002232  0060  F278  F080   	movff	i2ValueDisplay@pe+1,?i2_sprintf+9
 39203  002238  0060  F26C  F081   	movff	i2ValueDisplay@pi,?i2_sprintf+10
 39204  00223E  0060  F270  F082   	movff	i2ValueDisplay@pi+1,?i2_sprintf+11
 39205  002244  0060  F284  F083   	movff	i2ValueDisplay@pmax,?i2_sprintf+12
 39206  00224A  0060  F288  F084   	movff	i2ValueDisplay@pmax+1,?i2_sprintf+13
 39207  002250  0060  F27C  F085   	movff	i2ValueDisplay@vol,?i2_sprintf+14
 39208  002256  0060  F280  F086   	movff	i2ValueDisplay@vol+1,?i2_sprintf+15
 39209  00225C  EC6A  F04C         	call	i2_sprintf	;wreg free
 39210                           
 39211                           ; BSR set to: 0
 39212                           ;display.c: 106:     cnt++;
 39213  002260  0102               	movlb	2	; () banked
 39214  002262  4B88               	infsnz	ValueDisplay@cnt& (0+255),f,b
 39215  002264  2B89               	incf	(ValueDisplay@cnt+1)& (0+255),f,b
 39216                           
 39217                           ; BSR set to: 2
 39218                           ;display.c: 107:     cnt=cnt%10;
 39219  002266  0060  FA20  F001   	movff	ValueDisplay@cnt,i2___awmod@dividend
 39220  00226C  0060  FA24  F002   	movff	ValueDisplay@cnt+1,i2___awmod@dividend+1
 39221  002272  0E00               	movlw	0
 39222  002274  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 39223  002276  0E0A               	movlw	10
 39224  002278  6E03               	movwf	i2___awmod@divisor^0,c
 39225  00227A  EC3B  F047         	call	i2___awmod	;wreg free
 39226  00227E  0060  F004  F288   	movff	?i2___awmod,ValueDisplay@cnt
 39227  002284  0060  F008  F289   	movff	?i2___awmod+1,ValueDisplay@cnt+1
 39228  00228A  0012               	return		;funcret
 39229  00228C                     __end_ofi2_ValueDisplay:
 39230                           	opt callstack 0
 39231                           
 39232 ;; *************** function i2_sprintf *****************
 39233 ;; Defined at:
 39234 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 39235 ;; Parameters:    Size  Location     Type
 39236 ;;  s               2   23[BANK0 ] PTR unsigned char 
 39237 ;;		 -> msg3(20), msg2(20), msg1(20), msg4(20), 
 39238 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 39239 ;;		 -> STR_13(8), STR_12(23), STR_10(26), STR_9(17), 
 39240 ;;		 -> STR_8(17), STR_7(15), 
 39241 ;; Auto vars:     Size  Location     Type
 39242 ;;  sprintf         6   45[BANK0 ] struct _IO_FILE
 39243 ;;  sprintf         2   43[BANK0 ] PTR void [1]
 39244 ;;		 -> ?i2_sprintf(2), ?_printf(2), ?_sprintf(2), 
 39245 ;;  sprintf         2    0        int 
 39246 ;; Return value:  Size  Location     Type
 39247 ;;                  2   23[BANK0 ] int 
 39248 ;; Registers used:
 39249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39250 ;; Tracked objects:
 39251 ;;		On entry : 3F/0
 39252 ;;		On exit  : 3F/0
 39253 ;;		Unchanged: 0/0
 39254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39255 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39256 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39258 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39259 ;;Total ram usage:       28 bytes
 39260 ;; Hardware stack levels used:    1
 39261 ;; Hardware stack levels required when called:    8
 39262 ;; This function calls:
 39263 ;;		i2_vfprintf
 39264 ;; This function is called by:
 39265 ;;		_DisplayCalibrate
 39266 ;;		i2_ValueDisplay
 39267 ;;		i2_AlarmDisplay
 39268 ;; This function uses a non-reentrant model
 39269 ;;
 39270                           
 39271                           	psect	text297
 39272  0098D4                     __ptext297:
 39273                           	opt callstack 0
 39274  0098D4                     i2_sprintf:
 39275                           	opt callstack 3
 39276                           
 39277                           ; BSR set to: 0
 39278                           
 39279                           ;incstack = 0
 39280  0098D4  0E7B               	movlw	low (?i2_sprintf+4)
 39281  0098D6  6F8B               	movwf	i2sprintf@ap& (0+255),b
 39282  0098D8  6B8C               	clrf	(i2sprintf@ap+1)& (0+255),b
 39283  0098DA  0060  F1DC  F08D   	movff	i2sprintf@s,i2sprintf@f
 39284  0098E0  0060  F1E0  F08E   	movff	i2sprintf@s+1,i2sprintf@f+1
 39285                           
 39286                           ; BSR set to: 0
 39287  0098E6  0E00               	movlw	0
 39288  0098E8  6F90               	movwf	(i2sprintf@f+3)& (0+255),b
 39289  0098EA  0E00               	movlw	0
 39290  0098EC  6F8F               	movwf	(i2sprintf@f+2)& (0+255),b
 39291                           
 39292                           ; BSR set to: 0
 39293  0098EE  0E00               	movlw	0
 39294  0098F0  6F92               	movwf	(i2sprintf@f+5)& (0+255),b
 39295  0098F2  0E00               	movlw	0
 39296  0098F4  6F91               	movwf	(i2sprintf@f+4)& (0+255),b
 39297                           
 39298                           ; BSR set to: 0
 39299  0098F6  0E8D               	movlw	low i2sprintf@f
 39300  0098F8  6E4F               	movwf	i2vfprintf@fp^0,c
 39301  0098FA  6A50               	clrf	(i2vfprintf@fp+1)^0,c
 39302  0098FC  0060  F1E4  F051   	movff	i2sprintf@fmt,i2vfprintf@fmt
 39303  009902  0060  F1E8  F052   	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
 39304  009908  0E8B               	movlw	low i2sprintf@ap
 39305  00990A  6E53               	movwf	i2vfprintf@ap^0,c
 39306  00990C  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 39307  00990E  ECF9  F048         	call	i2_vfprintf	;wreg free
 39308                           
 39309                           ; BSR set to: 2
 39310  009912  0100               	movlb	0	; () banked
 39311  009914  518F               	movf	(i2sprintf@f+2)& (0+255),w,b
 39312  009916  2577               	addwf	i2sprintf@s& (0+255),w,b
 39313  009918  6ED9               	movwf	fsr2l,c
 39314  00991A  5190               	movf	(i2sprintf@f+3)& (0+255),w,b
 39315  00991C  2178               	addwfc	(i2sprintf@s+1)& (0+255),w,b
 39316  00991E  6EDA               	movwf	fsr2h,c
 39317  009920  0E00               	movlw	0
 39318  009922  6EDF               	movwf	indf2,c
 39319                           
 39320                           ; BSR set to: 0
 39321  009924  0012               	return		;funcret
 39322  009926                     __end_ofi2_sprintf:
 39323                           	opt callstack 0
 39324                           
 39325 ;; *************** function i2___awmod *****************
 39326 ;; Defined at:
 39327 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 39328 ;; Parameters:    Size  Location     Type
 39329 ;;  dividend        2    0[COMRAM] int 
 39330 ;;  divisor         2    2[COMRAM] int 
 39331 ;; Auto vars:     Size  Location     Type
 39332 ;;  __awmod         1    5[COMRAM] unsigned char 
 39333 ;;  __awmod         1    4[COMRAM] unsigned char 
 39334 ;; Return value:  Size  Location     Type
 39335 ;;                  2    0[COMRAM] int 
 39336 ;; Registers used:
 39337 ;;		wreg, status,2, status,0
 39338 ;; Tracked objects:
 39339 ;;		On entry : 3D/2
 39340 ;;		On exit  : 3D/0
 39341 ;;		Unchanged: 3D/0
 39342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39346 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39347 ;;Total ram usage:        6 bytes
 39348 ;; Hardware stack levels used:    1
 39349 ;; This function calls:
 39350 ;;		Nothing
 39351 ;; This function is called by:
 39352 ;;		_MonitorPressureTask
 39353 ;;		_ControllerTimerHandler
 39354 ;;		i2_ValueDisplay
 39355 ;;		i2_AlarmDisplay
 39356 ;; This function uses a non-reentrant model
 39357 ;;
 39358                           
 39359                           	psect	text298
 39360  008E76                     __ptext298:
 39361                           	opt callstack 0
 39362  008E76                     i2___awmod:
 39363                           	opt callstack 14
 39364                           
 39365                           ; BSR set to: 0
 39366                           ;incstack = 0
 39367  008E76  0E00               	movlw	0
 39368  008E78  6E06               	movwf	i2___awmod@sign^0,c
 39369  008E7A  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
 39370  008E7C  D006               	goto	i2l18266
 39371  008E7E  6C01               	negf	i2___awmod@dividend^0,c
 39372  008E80  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 39373  008E82  B0D8               	btfsc	status,0,c
 39374  008E84  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 39375  008E86  0E01               	movlw	1
 39376  008E88  6E06               	movwf	i2___awmod@sign^0,c
 39377  008E8A                     i2l18266:
 39378  008E8A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 39379  008E8C  D004               	goto	i2l18270
 39380  008E8E  6C03               	negf	i2___awmod@divisor^0,c
 39381  008E90  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 39382  008E92  B0D8               	btfsc	status,0,c
 39383  008E94  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 39384  008E96                     i2l18270:
 39385  008E96  5003               	movf	i2___awmod@divisor^0,w,c
 39386  008E98  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 39387  008E9A  B4D8               	btfsc	status,2,c
 39388  008E9C  D018               	goto	i2l18286
 39389  008E9E  0E01               	movlw	1
 39390  008EA0  6E05               	movwf	i2___awmod@counter^0,c
 39391  008EA2  D004               	goto	i2l18276
 39392  008EA4                     i2l18274:
 39393  008EA4  90D8               	bcf	status,0,c
 39394  008EA6  3603               	rlcf	i2___awmod@divisor^0,f,c
 39395  008EA8  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 39396  008EAA  2A05               	incf	i2___awmod@counter^0,f,c
 39397  008EAC                     i2l18276:
 39398  008EAC  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 39399  008EAE  D7FA               	goto	i2l18274
 39400  008EB0                     i2u1793_40:
 39401  008EB0  5003               	movf	i2___awmod@divisor^0,w,c
 39402  008EB2  5C01               	subwf	i2___awmod@dividend^0,w,c
 39403  008EB4  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 39404  008EB6  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 39405  008EB8  A0D8               	btfss	status,0,c
 39406  008EBA  D004               	goto	i2l18282
 39407  008EBC  5003               	movf	i2___awmod@divisor^0,w,c
 39408  008EBE  5E01               	subwf	i2___awmod@dividend^0,f,c
 39409  008EC0  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 39410  008EC2  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 39411  008EC4                     i2l18282:
 39412  008EC4  90D8               	bcf	status,0,c
 39413  008EC6  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 39414  008EC8  3203               	rrcf	i2___awmod@divisor^0,f,c
 39415  008ECA  2E05               	decfsz	i2___awmod@counter^0,f,c
 39416  008ECC  D7F1               	goto	i2u1793_40
 39417  008ECE                     i2l18286:
 39418  008ECE  5006               	movf	i2___awmod@sign^0,w,c
 39419  008ED0  B4D8               	btfsc	status,2,c
 39420  008ED2  D004               	goto	i2l18290
 39421  008ED4  6C01               	negf	i2___awmod@dividend^0,c
 39422  008ED6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 39423  008ED8  B0D8               	btfsc	status,0,c
 39424  008EDA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 39425  008EDC                     i2l18290:
 39426  008EDC  0060  F004  F001   	movff	i2___awmod@dividend,?i2___awmod
 39427  008EE2  0060  F008  F002   	movff	i2___awmod@dividend+1,?i2___awmod+1
 39428  008EE8  0012               	return		;funcret
 39429  008EEA                     __end_ofi2___awmod:
 39430                           	opt callstack 0
 39431                           
 39432 ;; *************** function i2_GetVolume *****************
 39433 ;; Defined at:
 39434 ;;		line 167 in file "monitor.c"
 39435 ;; Parameters:    Size  Location     Type
 39436 ;;		None
 39437 ;; Auto vars:     Size  Location     Type
 39438 ;;		None
 39439 ;; Return value:  Size  Location     Type
 39440 ;;                  2    0[COMRAM] short 
 39441 ;; Registers used:
 39442 ;;		None
 39443 ;; Tracked objects:
 39444 ;;		On entry : 0/0
 39445 ;;		On exit  : 0/0
 39446 ;;		Unchanged: 0/0
 39447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39452 ;;Total ram usage:        2 bytes
 39453 ;; Hardware stack levels used:    1
 39454 ;; This function calls:
 39455 ;;		Nothing
 39456 ;; This function is called by:
 39457 ;;		i2_ValueDisplay
 39458 ;; This function uses a non-reentrant model
 39459 ;;
 39460                           
 39461                           	psect	text299
 39462  00ACD8                     __ptext299:
 39463                           	opt callstack 0
 39464  00ACD8                     i2_GetVolume:
 39465                           	opt callstack 11
 39466                           
 39467                           ;incstack = 0
 39468  00ACD8  0060  F78C  F001   	movff	_volume,?i2_GetVolume
 39469  00ACDE  0060  F790  F002   	movff	_volume+1,?i2_GetVolume+1
 39470  00ACE4  0012               	return		;funcret
 39471  00ACE6                     __end_ofi2_GetVolume:
 39472                           	opt callstack 0
 39473                           
 39474 ;; *************** function i2_GetTi *****************
 39475 ;; Defined at:
 39476 ;;		line 161 in file "monitor.c"
 39477 ;; Parameters:    Size  Location     Type
 39478 ;;		None
 39479 ;; Auto vars:     Size  Location     Type
 39480 ;;		None
 39481 ;; Return value:  Size  Location     Type
 39482 ;;                  2    0[COMRAM] short 
 39483 ;; Registers used:
 39484 ;;		wreg, status,2, status,0
 39485 ;; Tracked objects:
 39486 ;;		On entry : 3F/1
 39487 ;;		On exit  : 3F/2
 39488 ;;		Unchanged: 0/0
 39489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39494 ;;Total ram usage:        2 bytes
 39495 ;; Hardware stack levels used:    1
 39496 ;; This function calls:
 39497 ;;		Nothing
 39498 ;; This function is called by:
 39499 ;;		i2_ValueDisplay
 39500 ;; This function uses a non-reentrant model
 39501 ;;
 39502                           
 39503                           	psect	text300
 39504  00ACE6                     __ptext300:
 39505                           	opt callstack 0
 39506  00ACE6                     i2_GetTi:
 39507                           	opt callstack 11
 39508                           
 39509                           ; BSR set to: 1
 39510                           
 39511                           ;incstack = 0
 39512  00ACE6  90D8               	bcf	status,0,c
 39513  00ACE8  0102               	movlb	2	; () banked
 39514  00ACEA  3558               	rlcf	_ti& (0+255),w,b
 39515  00ACEC  6E01               	movwf	?i2_GetTi^0,c
 39516  00ACEE  3559               	rlcf	(_ti+1)& (0+255),w,b
 39517  00ACF0  6E02               	movwf	(?i2_GetTi+1)^0,c
 39518                           
 39519                           ; BSR set to: 2
 39520  00ACF2  0012               	return		;funcret
 39521  00ACF4                     __end_ofi2_GetTi:
 39522                           	opt callstack 0
 39523                           
 39524 ;; *************** function i2_GetTe *****************
 39525 ;; Defined at:
 39526 ;;		line 162 in file "monitor.c"
 39527 ;; Parameters:    Size  Location     Type
 39528 ;;		None
 39529 ;; Auto vars:     Size  Location     Type
 39530 ;;		None
 39531 ;; Return value:  Size  Location     Type
 39532 ;;                  2    0[COMRAM] short 
 39533 ;; Registers used:
 39534 ;;		wreg, status,2, status,0
 39535 ;; Tracked objects:
 39536 ;;		On entry : 3F/2
 39537 ;;		On exit  : 3F/2
 39538 ;;		Unchanged: 0/0
 39539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39544 ;;Total ram usage:        2 bytes
 39545 ;; Hardware stack levels used:    1
 39546 ;; This function calls:
 39547 ;;		Nothing
 39548 ;; This function is called by:
 39549 ;;		i2_ValueDisplay
 39550 ;; This function uses a non-reentrant model
 39551 ;;
 39552                           
 39553                           	psect	text301
 39554  00AD84                     __ptext301:
 39555                           	opt callstack 0
 39556  00AD84                     i2_GetTe:
 39557                           	opt callstack 11
 39558                           
 39559                           ; BSR set to: 2
 39560                           
 39561                           ; BSR set to: 2
 39562                           ;incstack = 0
 39563  00AD84  90D8               	bcf	status,0,c
 39564  00AD86  3556               	rlcf	_te& (0+255),w,b
 39565  00AD88  6E01               	movwf	?i2_GetTe^0,c
 39566  00AD8A  3557               	rlcf	(_te+1)& (0+255),w,b
 39567  00AD8C  6E02               	movwf	(?i2_GetTe+1)^0,c
 39568                           
 39569                           ; BSR set to: 2
 39570  00AD8E  0012               	return		;funcret
 39571  00AD90                     __end_ofi2_GetTe:
 39572                           	opt callstack 0
 39573                           
 39574 ;; *************** function i2_GetTdi *****************
 39575 ;; Defined at:
 39576 ;;		line 160 in file "monitor.c"
 39577 ;; Parameters:    Size  Location     Type
 39578 ;;		None
 39579 ;; Auto vars:     Size  Location     Type
 39580 ;;		None
 39581 ;; Return value:  Size  Location     Type
 39582 ;;                  2    0[COMRAM] short 
 39583 ;; Registers used:
 39584 ;;		wreg, status,2, status,0
 39585 ;; Tracked objects:
 39586 ;;		On entry : 3F/0
 39587 ;;		On exit  : 3F/1
 39588 ;;		Unchanged: 0/0
 39589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39594 ;;Total ram usage:        2 bytes
 39595 ;; Hardware stack levels used:    1
 39596 ;; This function calls:
 39597 ;;		Nothing
 39598 ;; This function is called by:
 39599 ;;		i2_ValueDisplay
 39600 ;; This function uses a non-reentrant model
 39601 ;;
 39602                           
 39603                           	psect	text302
 39604  00ACF4                     __ptext302:
 39605                           	opt callstack 0
 39606  00ACF4                     i2_GetTdi:
 39607                           	opt callstack 11
 39608                           
 39609                           ; BSR set to: 0
 39610                           
 39611                           ; BSR set to: 2
 39612                           ;incstack = 0
 39613  00ACF4  90D8               	bcf	status,0,c
 39614  00ACF6  0101               	movlb	1	; () banked
 39615  00ACF8  35DF               	rlcf	_tdi& (0+255),w,b
 39616  00ACFA  6E01               	movwf	?i2_GetTdi^0,c
 39617  00ACFC  35E0               	rlcf	(_tdi+1)& (0+255),w,b
 39618  00ACFE  6E02               	movwf	(?i2_GetTdi+1)^0,c
 39619                           
 39620                           ; BSR set to: 1
 39621  00AD00  0012               	return		;funcret
 39622  00AD02                     __end_ofi2_GetTdi:
 39623                           	opt callstack 0
 39624                           
 39625 ;; *************** function i2_GetTde *****************
 39626 ;; Defined at:
 39627 ;;		line 159 in file "monitor.c"
 39628 ;; Parameters:    Size  Location     Type
 39629 ;;		None
 39630 ;; Auto vars:     Size  Location     Type
 39631 ;;		None
 39632 ;; Return value:  Size  Location     Type
 39633 ;;                  2    0[COMRAM] short 
 39634 ;; Registers used:
 39635 ;;		wreg, status,2, status,0
 39636 ;; Tracked objects:
 39637 ;;		On entry : 3F/1
 39638 ;;		On exit  : 3F/1
 39639 ;;		Unchanged: 0/0
 39640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39645 ;;Total ram usage:        2 bytes
 39646 ;; Hardware stack levels used:    1
 39647 ;; This function calls:
 39648 ;;		Nothing
 39649 ;; This function is called by:
 39650 ;;		i2_ValueDisplay
 39651 ;; This function uses a non-reentrant model
 39652 ;;
 39653                           
 39654                           	psect	text303
 39655  00AD90                     __ptext303:
 39656                           	opt callstack 0
 39657  00AD90                     i2_GetTde:
 39658                           	opt callstack 11
 39659                           
 39660                           ; BSR set to: 1
 39661                           
 39662                           ; BSR set to: 1
 39663                           ;incstack = 0
 39664  00AD90  90D8               	bcf	status,0,c
 39665  00AD92  35DD               	rlcf	_tde& (0+255),w,b
 39666  00AD94  6E01               	movwf	?i2_GetTde^0,c
 39667  00AD96  35DE               	rlcf	(_tde+1)& (0+255),w,b
 39668  00AD98  6E02               	movwf	(?i2_GetTde+1)^0,c
 39669                           
 39670                           ; BSR set to: 1
 39671  00AD9A  0012               	return		;funcret
 39672  00AD9C                     __end_ofi2_GetTde:
 39673                           	opt callstack 0
 39674                           
 39675 ;; *************** function i2_GetTargetIp *****************
 39676 ;; Defined at:
 39677 ;;		line 187 in file "monitor.c"
 39678 ;; Parameters:    Size  Location     Type
 39679 ;;		None
 39680 ;; Auto vars:     Size  Location     Type
 39681 ;;		None
 39682 ;; Return value:  Size  Location     Type
 39683 ;;                  2   14[COMRAM] short 
 39684 ;; Registers used:
 39685 ;;		wreg, status,2, status,0, cstack
 39686 ;; Tracked objects:
 39687 ;;		On entry : 3F/0
 39688 ;;		On exit  : 0/0
 39689 ;;		Unchanged: 0/0
 39690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39695 ;;Total ram usage:        2 bytes
 39696 ;; Hardware stack levels used:    1
 39697 ;; Hardware stack levels required when called:    1
 39698 ;; This function calls:
 39699 ;;		i2___awdiv
 39700 ;; This function is called by:
 39701 ;;		i2_ValueDisplay
 39702 ;; This function uses a non-reentrant model
 39703 ;;
 39704                           
 39705                           	psect	text304
 39706  00A4DE                     __ptext304:
 39707                           	opt callstack 0
 39708  00A4DE                     i2_GetTargetIp:
 39709                           	opt callstack 10
 39710                           
 39711                           ; BSR set to: 0
 39712                           ;monitor.c: 188:     return targetHigh/5;
 39713                           
 39714                           ; BSR set to: 1
 39715                           ;incstack = 0
 39716  00A4DE  0060  F7A4  F007   	movff	_targetHigh,i2___awdiv@dividend
 39717  00A4E4  0060  F7A8  F008   	movff	_targetHigh+1,i2___awdiv@dividend+1
 39718  00A4EA  0E00               	movlw	0
 39719  00A4EC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39720  00A4EE  0E05               	movlw	5
 39721  00A4F0  6E09               	movwf	i2___awdiv@divisor^0,c
 39722  00A4F2  ECC1  F045         	call	i2___awdiv	;wreg free
 39723  00A4F6  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetIp
 39724  00A4FC  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetIp+1
 39725  00A502  0012               	return		;funcret
 39726  00A504                     __end_ofi2_GetTargetIp:
 39727                           	opt callstack 0
 39728                           
 39729 ;; *************** function i2_GetTargetEp *****************
 39730 ;; Defined at:
 39731 ;;		line 191 in file "monitor.c"
 39732 ;; Parameters:    Size  Location     Type
 39733 ;;		None
 39734 ;; Auto vars:     Size  Location     Type
 39735 ;;		None
 39736 ;; Return value:  Size  Location     Type
 39737 ;;                  2   14[COMRAM] short 
 39738 ;; Registers used:
 39739 ;;		wreg, status,2, status,0, cstack
 39740 ;; Tracked objects:
 39741 ;;		On entry : 0/0
 39742 ;;		On exit  : 0/0
 39743 ;;		Unchanged: 0/0
 39744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39749 ;;Total ram usage:        2 bytes
 39750 ;; Hardware stack levels used:    1
 39751 ;; Hardware stack levels required when called:    1
 39752 ;; This function calls:
 39753 ;;		i2___awdiv
 39754 ;; This function is called by:
 39755 ;;		i2_ValueDisplay
 39756 ;; This function uses a non-reentrant model
 39757 ;;
 39758                           
 39759                           	psect	text305
 39760  00A504                     __ptext305:
 39761                           	opt callstack 0
 39762  00A504                     i2_GetTargetEp:
 39763                           	opt callstack 10
 39764                           
 39765                           ;monitor.c: 192:     return targetLow/5;
 39766                           
 39767                           ;incstack = 0
 39768  00A504  0060  F79C  F007   	movff	_targetLow,i2___awdiv@dividend
 39769  00A50A  0060  F7A0  F008   	movff	_targetLow+1,i2___awdiv@dividend+1
 39770  00A510  0E00               	movlw	0
 39771  00A512  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39772  00A514  0E05               	movlw	5
 39773  00A516  6E09               	movwf	i2___awdiv@divisor^0,c
 39774  00A518  ECC1  F045         	call	i2___awdiv	;wreg free
 39775  00A51C  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetTargetEp
 39776  00A522  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetTargetEp+1
 39777  00A528  0012               	return		;funcret
 39778  00A52A                     __end_ofi2_GetTargetEp:
 39779                           	opt callstack 0
 39780                           
 39781 ;; *************** function i2_GetSpr *****************
 39782 ;; Defined at:
 39783 ;;		line 60 in file "controller.c"
 39784 ;; Parameters:    Size  Location     Type
 39785 ;;		None
 39786 ;; Auto vars:     Size  Location     Type
 39787 ;;		None
 39788 ;; Return value:  Size  Location     Type
 39789 ;;                  2    0[COMRAM] short 
 39790 ;; Registers used:
 39791 ;;		None
 39792 ;; Tracked objects:
 39793 ;;		On entry : 0/0
 39794 ;;		On exit  : 0/0
 39795 ;;		Unchanged: 0/0
 39796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39801 ;;Total ram usage:        2 bytes
 39802 ;; Hardware stack levels used:    1
 39803 ;; This function calls:
 39804 ;;		Nothing
 39805 ;; This function is called by:
 39806 ;;		i2_ValueDisplay
 39807 ;; This function uses a non-reentrant model
 39808 ;;
 39809                           
 39810                           	psect	text306
 39811  00AD02                     __ptext306:
 39812                           	opt callstack 0
 39813  00AD02                     i2_GetSpr:
 39814                           	opt callstack 11
 39815                           
 39816                           ;incstack = 0
 39817  00AD02  0060  F8C8  F001   	movff	_spr,?i2_GetSpr
 39818  00AD08  0060  F8CC  F002   	movff	_spr+1,?i2_GetSpr+1
 39819  00AD0E  0012               	return		;funcret
 39820  00AD10                     __end_ofi2_GetSpr:
 39821                           	opt callstack 0
 39822                           
 39823 ;; *************** function i2_GetPmax *****************
 39824 ;; Defined at:
 39825 ;;		line 168 in file "monitor.c"
 39826 ;; Parameters:    Size  Location     Type
 39827 ;;		None
 39828 ;; Auto vars:     Size  Location     Type
 39829 ;;		None
 39830 ;; Return value:  Size  Location     Type
 39831 ;;                  2   14[COMRAM] short 
 39832 ;; Registers used:
 39833 ;;		wreg, status,2, status,0, cstack
 39834 ;; Tracked objects:
 39835 ;;		On entry : 0/0
 39836 ;;		On exit  : 0/0
 39837 ;;		Unchanged: 0/0
 39838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39843 ;;Total ram usage:        2 bytes
 39844 ;; Hardware stack levels used:    1
 39845 ;; Hardware stack levels required when called:    1
 39846 ;; This function calls:
 39847 ;;		i2___awdiv
 39848 ;; This function is called by:
 39849 ;;		i2_ValueDisplay
 39850 ;; This function uses a non-reentrant model
 39851 ;;
 39852                           
 39853                           	psect	text307
 39854  00A52A                     __ptext307:
 39855                           	opt callstack 0
 39856  00A52A                     i2_GetPmax:
 39857                           	opt callstack 10
 39858                           
 39859                           ;incstack = 0
 39860  00A52A  0060  F358  F007   	movff	_pmax,i2___awdiv@dividend
 39861  00A530  0060  F35C  F008   	movff	_pmax+1,i2___awdiv@dividend+1
 39862  00A536  0E00               	movlw	0
 39863  00A538  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39864  00A53A  0E05               	movlw	5
 39865  00A53C  6E09               	movwf	i2___awdiv@divisor^0,c
 39866  00A53E  ECC1  F045         	call	i2___awdiv	;wreg free
 39867  00A542  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetPmax
 39868  00A548  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetPmax+1
 39869  00A54E  0012               	return		;funcret
 39870  00A550                     __end_ofi2_GetPmax:
 39871                           	opt callstack 0
 39872                           
 39873 ;; *************** function i2_GetIp *****************
 39874 ;; Defined at:
 39875 ;;		line 166 in file "monitor.c"
 39876 ;; Parameters:    Size  Location     Type
 39877 ;;		None
 39878 ;; Auto vars:     Size  Location     Type
 39879 ;;		None
 39880 ;; Return value:  Size  Location     Type
 39881 ;;                  2   14[COMRAM] short 
 39882 ;; Registers used:
 39883 ;;		wreg, status,2, status,0, cstack
 39884 ;; Tracked objects:
 39885 ;;		On entry : 0/0
 39886 ;;		On exit  : 0/0
 39887 ;;		Unchanged: 0/0
 39888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39890 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39892 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39893 ;;Total ram usage:        9 bytes
 39894 ;; Hardware stack levels used:    1
 39895 ;; Hardware stack levels required when called:    1
 39896 ;; This function calls:
 39897 ;;		i2___awdiv
 39898 ;; This function is called by:
 39899 ;;		i2_ValueDisplay
 39900 ;; This function uses a non-reentrant model
 39901 ;;
 39902                           
 39903                           	psect	text308
 39904  00530C                     __ptext308:
 39905                           	opt callstack 0
 39906  00530C                     i2_GetIp:
 39907                           	opt callstack 10
 39908                           
 39909                           ;incstack = 0
 39910  00530C  0060  F75C  F007   	movff	_pHigh,i2___awdiv@dividend
 39911  005312  0060  F760  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39912  005318  0E00               	movlw	0
 39913  00531A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39914  00531C  0E05               	movlw	5
 39915  00531E  6E09               	movwf	i2___awdiv@divisor^0,c
 39916  005320  ECC1  F045         	call	i2___awdiv	;wreg free
 39917  005324  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39918  00532A  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39919  005330  0060  F74C  F007   	movff	_lrpi,i2___awdiv@dividend
 39920  005336  0060  F750  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39921  00533C  0E00               	movlw	0
 39922  00533E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39923  005340  0E05               	movlw	5
 39924  005342  6E09               	movwf	i2___awdiv@divisor^0,c
 39925  005344  ECC1  F045         	call	i2___awdiv	;wreg free
 39926  005348  5007               	movf	?i2___awdiv^0,w,c
 39927  00534A  5C11               	subwf	??i2_GetIp^0,w,c
 39928  00534C  5012               	movf	(??i2_GetIp+1)^0,w,c
 39929  00534E  0A80               	xorlw	128
 39930  005350  6E13               	movwf	(??i2_GetIp+2)^0,c
 39931  005352  5008               	movf	(?i2___awdiv+1)^0,w,c
 39932  005354  0A80               	xorlw	128
 39933  005356  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 39934  005358  A0D8               	btfss	status,0,c
 39935  00535A  D00D               	goto	i2l18170
 39936  00535C  0060  F75C  F007   	movff	_pHigh,i2___awdiv@dividend
 39937  005362  0060  F760  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39938  005368  0E00               	movlw	0
 39939  00536A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39940  00536C  0E05               	movlw	5
 39941  00536E  6E09               	movwf	i2___awdiv@divisor^0,c
 39942  005370  ECC1  F045         	call	i2___awdiv	;wreg free
 39943  005374  D00C               	goto	L17
 39944  005376                     i2l18170:
 39945  005376  0060  F74C  F007   	movff	_lrpi,i2___awdiv@dividend
 39946  00537C  0060  F750  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39947  005382  0E00               	movlw	0
 39948  005384  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39949  005386  0E05               	movlw	5
 39950  005388  6E09               	movwf	i2___awdiv@divisor^0,c
 39951  00538A  ECC1  F045         	call	i2___awdiv	;wreg free
 39952  00538E                     L17:
 39953  00538E  0060  F01C  F014   	movff	?i2___awdiv,i2_GetIp$4811
 39954  005394  0060  F020  F015   	movff	?i2___awdiv+1,i2_GetIp$4811+1
 39955  00539A  0060  F76C  F007   	movff	_pi,i2___awdiv@dividend
 39956  0053A0  0060  F770  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39957  0053A6  0E00               	movlw	0
 39958  0053A8  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39959  0053AA  0E05               	movlw	5
 39960  0053AC  6E09               	movwf	i2___awdiv@divisor^0,c
 39961  0053AE  ECC1  F045         	call	i2___awdiv	;wreg free
 39962  0053B2  5014               	movf	i2_GetIp$4811^0,w,c
 39963  0053B4  5C07               	subwf	?i2___awdiv^0,w,c
 39964  0053B6  5008               	movf	(?i2___awdiv+1)^0,w,c
 39965  0053B8  0A80               	xorlw	128
 39966  0053BA  6E11               	movwf	??i2_GetIp^0,c
 39967  0053BC  5015               	movf	(i2_GetIp$4811+1)^0,w,c
 39968  0053BE  0A80               	xorlw	128
 39969  0053C0  5811               	subwfb	??i2_GetIp^0,w,c
 39970  0053C2  A0D8               	btfss	status,0,c
 39971  0053C4  D013               	goto	i2l18174
 39972  0053C6  0060  F76C  F007   	movff	_pi,i2___awdiv@dividend
 39973  0053CC  0060  F770  F008   	movff	_pi+1,i2___awdiv@dividend+1
 39974  0053D2  0E00               	movlw	0
 39975  0053D4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39976  0053D6  0E05               	movlw	5
 39977  0053D8  6E09               	movwf	i2___awdiv@divisor^0,c
 39978  0053DA  ECC1  F045         	call	i2___awdiv	;wreg free
 39979  0053DE  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetIp
 39980  0053E4  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetIp+1
 39981  0053EA  0012               	return	
 39982  0053EC                     i2l18174:
 39983  0053EC  0060  F75C  F007   	movff	_pHigh,i2___awdiv@dividend
 39984  0053F2  0060  F760  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 39985  0053F8  0E00               	movlw	0
 39986  0053FA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39987  0053FC  0E05               	movlw	5
 39988  0053FE  6E09               	movwf	i2___awdiv@divisor^0,c
 39989  005400  ECC1  F045         	call	i2___awdiv	;wreg free
 39990  005404  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetIp
 39991  00540A  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetIp+1
 39992  005410  0060  F74C  F007   	movff	_lrpi,i2___awdiv@dividend
 39993  005416  0060  F750  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 39994  00541C  0E00               	movlw	0
 39995  00541E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 39996  005420  0E05               	movlw	5
 39997  005422  6E09               	movwf	i2___awdiv@divisor^0,c
 39998  005424  ECC1  F045         	call	i2___awdiv	;wreg free
 39999  005428  5007               	movf	?i2___awdiv^0,w,c
 40000  00542A  5C11               	subwf	??i2_GetIp^0,w,c
 40001  00542C  5012               	movf	(??i2_GetIp+1)^0,w,c
 40002  00542E  0A80               	xorlw	128
 40003  005430  6E13               	movwf	(??i2_GetIp+2)^0,c
 40004  005432  5008               	movf	(?i2___awdiv+1)^0,w,c
 40005  005434  0A80               	xorlw	128
 40006  005436  5813               	subwfb	(??i2_GetIp+2)^0,w,c
 40007  005438  A0D8               	btfss	status,0,c
 40008  00543A  D00D               	goto	i2l18178
 40009  00543C  0060  F75C  F007   	movff	_pHigh,i2___awdiv@dividend
 40010  005442  0060  F760  F008   	movff	_pHigh+1,i2___awdiv@dividend+1
 40011  005448  0E00               	movlw	0
 40012  00544A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40013  00544C  0E05               	movlw	5
 40014  00544E  6E09               	movwf	i2___awdiv@divisor^0,c
 40015  005450  ECC1  F045         	call	i2___awdiv	;wreg free
 40016  005454  D00C               	goto	L18
 40017  005456                     i2l18178:
 40018  005456  0060  F74C  F007   	movff	_lrpi,i2___awdiv@dividend
 40019  00545C  0060  F750  F008   	movff	_lrpi+1,i2___awdiv@dividend+1
 40020  005462  0E00               	movlw	0
 40021  005464  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40022  005466  0E05               	movlw	5
 40023  005468  6E09               	movwf	i2___awdiv@divisor^0,c
 40024  00546A  ECC1  F045         	call	i2___awdiv	;wreg free
 40025  00546E                     L18:
 40026  00546E  0060  F01C  F016   	movff	?i2___awdiv,i2_GetIp$4812
 40027  005474  0060  F020  F017   	movff	?i2___awdiv+1,i2_GetIp$4812+1
 40028  00547A  0060  F058  F00F   	movff	i2_GetIp$4812,?i2_GetIp
 40029  005480  0060  F05C  F010   	movff	i2_GetIp$4812+1,?i2_GetIp+1
 40030  005486  0012               	return		;funcret
 40031  005488                     __end_ofi2_GetIp:
 40032                           	opt callstack 0
 40033                           
 40034 ;; *************** function i2_GetEp *****************
 40035 ;; Defined at:
 40036 ;;		line 165 in file "monitor.c"
 40037 ;; Parameters:    Size  Location     Type
 40038 ;;		None
 40039 ;; Auto vars:     Size  Location     Type
 40040 ;;		None
 40041 ;; Return value:  Size  Location     Type
 40042 ;;                  2   14[COMRAM] short 
 40043 ;; Registers used:
 40044 ;;		wreg, status,2, status,0, cstack
 40045 ;; Tracked objects:
 40046 ;;		On entry : 0/0
 40047 ;;		On exit  : 0/0
 40048 ;;		Unchanged: 0/0
 40049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40051 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40052 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40053 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40054 ;;Total ram usage:        9 bytes
 40055 ;; Hardware stack levels used:    1
 40056 ;; Hardware stack levels required when called:    1
 40057 ;; This function calls:
 40058 ;;		i2___awdiv
 40059 ;; This function is called by:
 40060 ;;		i2_ValueDisplay
 40061 ;; This function uses a non-reentrant model
 40062 ;;
 40063                           
 40064                           	psect	text309
 40065  005488                     __ptext309:
 40066                           	opt callstack 0
 40067  005488                     i2_GetEp:
 40068                           	opt callstack 10
 40069                           
 40070                           ;incstack = 0
 40071  005488  0060  F754  F007   	movff	_pLow,i2___awdiv@dividend
 40072  00548E  0060  F758  F008   	movff	_pLow+1,i2___awdiv@dividend+1
 40073  005494  0E00               	movlw	0
 40074  005496  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40075  005498  0E05               	movlw	5
 40076  00549A  6E09               	movwf	i2___awdiv@divisor^0,c
 40077  00549C  ECC1  F045         	call	i2___awdiv	;wreg free
 40078  0054A0  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetEp
 40079  0054A6  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetEp+1
 40080  0054AC  0060  F744  F007   	movff	_lrpe,i2___awdiv@dividend
 40081  0054B2  0060  F748  F008   	movff	_lrpe+1,i2___awdiv@dividend+1
 40082  0054B8  0E00               	movlw	0
 40083  0054BA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40084  0054BC  0E05               	movlw	5
 40085  0054BE  6E09               	movwf	i2___awdiv@divisor^0,c
 40086  0054C0  ECC1  F045         	call	i2___awdiv	;wreg free
 40087  0054C4  5007               	movf	?i2___awdiv^0,w,c
 40088  0054C6  5C11               	subwf	??i2_GetEp^0,w,c
 40089  0054C8  5012               	movf	(??i2_GetEp+1)^0,w,c
 40090  0054CA  0A80               	xorlw	128
 40091  0054CC  6E13               	movwf	(??i2_GetEp+2)^0,c
 40092  0054CE  5008               	movf	(?i2___awdiv+1)^0,w,c
 40093  0054D0  0A80               	xorlw	128
 40094  0054D2  5813               	subwfb	(??i2_GetEp+2)^0,w,c
 40095  0054D4  A0D8               	btfss	status,0,c
 40096  0054D6  D00D               	goto	i2l18152
 40097  0054D8  0060  F754  F007   	movff	_pLow,i2___awdiv@dividend
 40098  0054DE  0060  F758  F008   	movff	_pLow+1,i2___awdiv@dividend+1
 40099  0054E4  0E00               	movlw	0
 40100  0054E6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40101  0054E8  0E05               	movlw	5
 40102  0054EA  6E09               	movwf	i2___awdiv@divisor^0,c
 40103  0054EC  ECC1  F045         	call	i2___awdiv	;wreg free
 40104  0054F0  D00C               	goto	L19
 40105  0054F2                     i2l18152:
 40106  0054F2  0060  F744  F007   	movff	_lrpe,i2___awdiv@dividend
 40107  0054F8  0060  F748  F008   	movff	_lrpe+1,i2___awdiv@dividend+1
 40108  0054FE  0E00               	movlw	0
 40109  005500  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40110  005502  0E05               	movlw	5
 40111  005504  6E09               	movwf	i2___awdiv@divisor^0,c
 40112  005506  ECC1  F045         	call	i2___awdiv	;wreg free
 40113  00550A                     L19:
 40114  00550A  0060  F01C  F014   	movff	?i2___awdiv,i2_GetEp$4808
 40115  005510  0060  F020  F015   	movff	?i2___awdiv+1,i2_GetEp$4808+1
 40116  005516  0060  F764  F007   	movff	_pe,i2___awdiv@dividend
 40117  00551C  0060  F768  F008   	movff	_pe+1,i2___awdiv@dividend+1
 40118  005522  0E00               	movlw	0
 40119  005524  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40120  005526  0E05               	movlw	5
 40121  005528  6E09               	movwf	i2___awdiv@divisor^0,c
 40122  00552A  ECC1  F045         	call	i2___awdiv	;wreg free
 40123  00552E  5014               	movf	i2_GetEp$4808^0,w,c
 40124  005530  5C07               	subwf	?i2___awdiv^0,w,c
 40125  005532  5008               	movf	(?i2___awdiv+1)^0,w,c
 40126  005534  0A80               	xorlw	128
 40127  005536  6E11               	movwf	??i2_GetEp^0,c
 40128  005538  5015               	movf	(i2_GetEp$4808+1)^0,w,c
 40129  00553A  0A80               	xorlw	128
 40130  00553C  5811               	subwfb	??i2_GetEp^0,w,c
 40131  00553E  A0D8               	btfss	status,0,c
 40132  005540  D013               	goto	i2l18156
 40133  005542  0060  F764  F007   	movff	_pe,i2___awdiv@dividend
 40134  005548  0060  F768  F008   	movff	_pe+1,i2___awdiv@dividend+1
 40135  00554E  0E00               	movlw	0
 40136  005550  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40137  005552  0E05               	movlw	5
 40138  005554  6E09               	movwf	i2___awdiv@divisor^0,c
 40139  005556  ECC1  F045         	call	i2___awdiv	;wreg free
 40140  00555A  0060  F01C  F00F   	movff	?i2___awdiv,?i2_GetEp
 40141  005560  0060  F020  F010   	movff	?i2___awdiv+1,?i2_GetEp+1
 40142  005566  0012               	return	
 40143  005568                     i2l18156:
 40144  005568  0060  F754  F007   	movff	_pLow,i2___awdiv@dividend
 40145  00556E  0060  F758  F008   	movff	_pLow+1,i2___awdiv@dividend+1
 40146  005574  0E00               	movlw	0
 40147  005576  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40148  005578  0E05               	movlw	5
 40149  00557A  6E09               	movwf	i2___awdiv@divisor^0,c
 40150  00557C  ECC1  F045         	call	i2___awdiv	;wreg free
 40151  005580  0060  F01C  F011   	movff	?i2___awdiv,??i2_GetEp
 40152  005586  0060  F020  F012   	movff	?i2___awdiv+1,??i2_GetEp+1
 40153  00558C  0060  F744  F007   	movff	_lrpe,i2___awdiv@dividend
 40154  005592  0060  F748  F008   	movff	_lrpe+1,i2___awdiv@dividend+1
 40155  005598  0E00               	movlw	0
 40156  00559A  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40157  00559C  0E05               	movlw	5
 40158  00559E  6E09               	movwf	i2___awdiv@divisor^0,c
 40159  0055A0  ECC1  F045         	call	i2___awdiv	;wreg free
 40160  0055A4  5007               	movf	?i2___awdiv^0,w,c
 40161  0055A6  5C11               	subwf	??i2_GetEp^0,w,c
 40162  0055A8  5012               	movf	(??i2_GetEp+1)^0,w,c
 40163  0055AA  0A80               	xorlw	128
 40164  0055AC  6E13               	movwf	(??i2_GetEp+2)^0,c
 40165  0055AE  5008               	movf	(?i2___awdiv+1)^0,w,c
 40166  0055B0  0A80               	xorlw	128
 40167  0055B2  5813               	subwfb	(??i2_GetEp+2)^0,w,c
 40168  0055B4  A0D8               	btfss	status,0,c
 40169  0055B6  D00D               	goto	i2l18160
 40170  0055B8  0060  F754  F007   	movff	_pLow,i2___awdiv@dividend
 40171  0055BE  0060  F758  F008   	movff	_pLow+1,i2___awdiv@dividend+1
 40172  0055C4  0E00               	movlw	0
 40173  0055C6  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40174  0055C8  0E05               	movlw	5
 40175  0055CA  6E09               	movwf	i2___awdiv@divisor^0,c
 40176  0055CC  ECC1  F045         	call	i2___awdiv	;wreg free
 40177  0055D0  D00C               	goto	L20
 40178  0055D2                     i2l18160:
 40179  0055D2  0060  F744  F007   	movff	_lrpe,i2___awdiv@dividend
 40180  0055D8  0060  F748  F008   	movff	_lrpe+1,i2___awdiv@dividend+1
 40181  0055DE  0E00               	movlw	0
 40182  0055E0  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 40183  0055E2  0E05               	movlw	5
 40184  0055E4  6E09               	movwf	i2___awdiv@divisor^0,c
 40185  0055E6  ECC1  F045         	call	i2___awdiv	;wreg free
 40186  0055EA                     L20:
 40187  0055EA  0060  F01C  F016   	movff	?i2___awdiv,i2_GetEp$4809
 40188  0055F0  0060  F020  F017   	movff	?i2___awdiv+1,i2_GetEp$4809+1
 40189  0055F6  0060  F058  F00F   	movff	i2_GetEp$4809,?i2_GetEp
 40190  0055FC  0060  F05C  F010   	movff	i2_GetEp$4809+1,?i2_GetEp+1
 40191  005602  0012               	return		;funcret
 40192  005604                     __end_ofi2_GetEp:
 40193                           	opt callstack 0
 40194                           
 40195 ;; *************** function i2___awdiv *****************
 40196 ;; Defined at:
 40197 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 40198 ;; Parameters:    Size  Location     Type
 40199 ;;  dividend        2    6[COMRAM] int 
 40200 ;;  divisor         2    8[COMRAM] int 
 40201 ;; Auto vars:     Size  Location     Type
 40202 ;;  __awdiv         2   12[COMRAM] int 
 40203 ;;  __awdiv         1   11[COMRAM] unsigned char 
 40204 ;;  __awdiv         1   10[COMRAM] unsigned char 
 40205 ;; Return value:  Size  Location     Type
 40206 ;;                  2    6[COMRAM] int 
 40207 ;; Registers used:
 40208 ;;		wreg, status,2, status,0
 40209 ;; Tracked objects:
 40210 ;;		On entry : 0/2
 40211 ;;		On exit  : 0/0
 40212 ;;		Unchanged: 0/0
 40213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40217 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40218 ;;Total ram usage:        8 bytes
 40219 ;; Hardware stack levels used:    1
 40220 ;; This function calls:
 40221 ;;		Nothing
 40222 ;; This function is called by:
 40223 ;;		_MonitorPressureTask
 40224 ;;		_GetPressure_mbar02
 40225 ;;		i2_ValueDisplay
 40226 ;;		i2_GetEp
 40227 ;;		i2_GetIp
 40228 ;;		i2_GetPmax
 40229 ;;		i2_GetTargetIp
 40230 ;;		i2_GetTargetEp
 40231 ;;		i2_MonitorDump
 40232 ;;		i2_SetCalibrateState
 40233 ;;		i2_GetPressure_pa
 40234 ;;		i2_GetPressureV_pa
 40235 ;; This function uses a non-reentrant model
 40236 ;;
 40237                           
 40238                           	psect	text310
 40239  008B82                     __ptext310:
 40240                           	opt callstack 0
 40241  008B82                     i2___awdiv:
 40242                           	opt callstack 11
 40243                           
 40244                           ;incstack = 0
 40245  008B82  0E00               	movlw	0
 40246  008B84  6E0C               	movwf	i2___awdiv@sign^0,c
 40247  008B86  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 40248  008B88  D006               	goto	i2l17908
 40249  008B8A  6C09               	negf	i2___awdiv@divisor^0,c
 40250  008B8C  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 40251  008B8E  B0D8               	btfsc	status,0,c
 40252  008B90  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 40253  008B92  0E01               	movlw	1
 40254  008B94  6E0C               	movwf	i2___awdiv@sign^0,c
 40255  008B96                     i2l17908:
 40256  008B96  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
 40257  008B98  D006               	goto	i2l17914
 40258  008B9A  6C07               	negf	i2___awdiv@dividend^0,c
 40259  008B9C  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 40260  008B9E  B0D8               	btfsc	status,0,c
 40261  008BA0  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 40262  008BA2  0E01               	movlw	1
 40263  008BA4  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 40264  008BA6                     i2l17914:
 40265  008BA6  0E00               	movlw	0
 40266  008BA8  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 40267  008BAA  0E00               	movlw	0
 40268  008BAC  6E0D               	movwf	i2___awdiv@quotient^0,c
 40269  008BAE  5009               	movf	i2___awdiv@divisor^0,w,c
 40270  008BB0  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 40271  008BB2  B4D8               	btfsc	status,2,c
 40272  008BB4  D01C               	goto	i2l17936
 40273  008BB6  0E01               	movlw	1
 40274  008BB8  6E0B               	movwf	i2___awdiv@counter^0,c
 40275  008BBA  D004               	goto	i2l17922
 40276  008BBC                     i2l17920:
 40277  008BBC  90D8               	bcf	status,0,c
 40278  008BBE  3609               	rlcf	i2___awdiv@divisor^0,f,c
 40279  008BC0  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 40280  008BC2  2A0B               	incf	i2___awdiv@counter^0,f,c
 40281  008BC4                     i2l17922:
 40282  008BC4  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 40283  008BC6  D7FA               	goto	i2l17920
 40284  008BC8                     i2u1750_40:
 40285  008BC8  90D8               	bcf	status,0,c
 40286  008BCA  360D               	rlcf	i2___awdiv@quotient^0,f,c
 40287  008BCC  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 40288  008BCE  5009               	movf	i2___awdiv@divisor^0,w,c
 40289  008BD0  5C07               	subwf	i2___awdiv@dividend^0,w,c
 40290  008BD2  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 40291  008BD4  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 40292  008BD6  A0D8               	btfss	status,0,c
 40293  008BD8  D005               	goto	i2l17932
 40294  008BDA  5009               	movf	i2___awdiv@divisor^0,w,c
 40295  008BDC  5E07               	subwf	i2___awdiv@dividend^0,f,c
 40296  008BDE  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 40297  008BE0  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 40298  008BE2  800D               	bsf	i2___awdiv@quotient^0,0,c
 40299  008BE4                     i2l17932:
 40300  008BE4  90D8               	bcf	status,0,c
 40301  008BE6  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 40302  008BE8  3209               	rrcf	i2___awdiv@divisor^0,f,c
 40303  008BEA  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 40304  008BEC  D7ED               	goto	i2u1750_40
 40305  008BEE                     i2l17936:
 40306  008BEE  500C               	movf	i2___awdiv@sign^0,w,c
 40307  008BF0  B4D8               	btfsc	status,2,c
 40308  008BF2  D004               	goto	i2l17940
 40309  008BF4  6C0D               	negf	i2___awdiv@quotient^0,c
 40310  008BF6  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 40311  008BF8  B0D8               	btfsc	status,0,c
 40312  008BFA  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 40313  008BFC                     i2l17940:
 40314  008BFC  0060  F034  F007   	movff	i2___awdiv@quotient,?i2___awdiv
 40315  008C02  0060  F038  F008   	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 40316  008C08  0012               	return		;funcret
 40317  008C0A                     __end_ofi2___awdiv:
 40318                           	opt callstack 0
 40319                           
 40320 ;; *************** function i2_GetDisableAlarmSV1 *****************
 40321 ;; Defined at:
 40322 ;;		line 862 in file "monitor.c"
 40323 ;; Parameters:    Size  Location     Type
 40324 ;;		None
 40325 ;; Auto vars:     Size  Location     Type
 40326 ;;		None
 40327 ;; Return value:  Size  Location     Type
 40328 ;;                  1    wreg      _Bool 
 40329 ;; Registers used:
 40330 ;;		wreg, status,2
 40331 ;; Tracked objects:
 40332 ;;		On entry : 0/0
 40333 ;;		On exit  : 3F/0
 40334 ;;		Unchanged: 0/0
 40335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40340 ;;Total ram usage:        0 bytes
 40341 ;; Hardware stack levels used:    1
 40342 ;; This function calls:
 40343 ;;		Nothing
 40344 ;; This function is called by:
 40345 ;;		i2_ValueDisplay
 40346 ;; This function uses a non-reentrant model
 40347 ;;
 40348                           
 40349                           	psect	text311
 40350  00AF9C                     __ptext311:
 40351                           	opt callstack 0
 40352  00AF9C                     i2_GetDisableAlarmSV1:
 40353                           	opt callstack 11
 40354                           
 40355                           ;incstack = 0
 40356  00AF9C  0100               	movlb	0	; () banked
 40357  00AF9E  51EF               	movf	_disableAlarmSV1& (0+255),w,b
 40358                           
 40359                           ; BSR set to: 0
 40360  00AFA0  0012               	return		;funcret
 40361  00AFA2                     __end_ofi2_GetDisableAlarmSV1:
 40362                           	opt callstack 0
 40363                           
 40364 ;; *************** function i2_GetBpm *****************
 40365 ;; Defined at:
 40366 ;;		line 164 in file "monitor.c"
 40367 ;; Parameters:    Size  Location     Type
 40368 ;;		None
 40369 ;; Auto vars:     Size  Location     Type
 40370 ;;		None
 40371 ;; Return value:  Size  Location     Type
 40372 ;;                  2    0[COMRAM] short 
 40373 ;; Registers used:
 40374 ;;		None
 40375 ;; Tracked objects:
 40376 ;;		On entry : 0/0
 40377 ;;		On exit  : 0/0
 40378 ;;		Unchanged: 0/0
 40379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40384 ;;Total ram usage:        2 bytes
 40385 ;; Hardware stack levels used:    1
 40386 ;; This function calls:
 40387 ;;		Nothing
 40388 ;; This function is called by:
 40389 ;;		i2_ValueDisplay
 40390 ;; This function uses a non-reentrant model
 40391 ;;
 40392                           
 40393                           	psect	text312
 40394  00AD10                     __ptext312:
 40395                           	opt callstack 0
 40396  00AD10                     i2_GetBpm:
 40397                           	opt callstack 11
 40398                           
 40399                           ; BSR set to: 0
 40400                           ;incstack = 0
 40401  00AD10  0060  F950  F001   	movff	_bpm,?i2_GetBpm
 40402  00AD16  0060  F954  F002   	movff	_bpm+1,?i2_GetBpm+1
 40403  00AD1C  0012               	return		;funcret
 40404  00AD1E                     __end_ofi2_GetBpm:
 40405                           	opt callstack 0
 40406                           
 40407 ;; *************** function i2_GetAlarmState *****************
 40408 ;; Defined at:
 40409 ;;		line 431 in file "alarm.c"
 40410 ;; Parameters:    Size  Location     Type
 40411 ;;		None
 40412 ;; Auto vars:     Size  Location     Type
 40413 ;;		None
 40414 ;; Return value:  Size  Location     Type
 40415 ;;                  2    4[COMRAM] PTR unsigned char 
 40416 ;; Registers used:
 40417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40418 ;; Tracked objects:
 40419 ;;		On entry : 3F/0
 40420 ;;		On exit  : 0/0
 40421 ;;		Unchanged: 0/0
 40422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40427 ;;Total ram usage:        2 bytes
 40428 ;; Hardware stack levels used:    1
 40429 ;; Hardware stack levels required when called:    1
 40430 ;; This function calls:
 40431 ;;		i2_AnyAlarm
 40432 ;; This function is called by:
 40433 ;;		i2_ValueDisplay
 40434 ;; This function uses a non-reentrant model
 40435 ;;
 40436                           
 40437                           	psect	text313
 40438  009926                     __ptext313:
 40439                           	opt callstack 0
 40440  009926                     i2_GetAlarmState:
 40441                           	opt callstack 10
 40442                           
 40443                           ; BSR set to: 0
 40444                           ;alarm.c: 432:     if (displayStatus==2) return "Hi";
 40445                           
 40446                           ;incstack = 0
 40447  009926  0E02               	movlw	2
 40448  009928  0102               	movlb	2	; () banked
 40449  00992A  1972               	xorwf	_displayStatus& (0+255),w,b
 40450  00992C  1173               	iorwf	(_displayStatus+1)& (0+255),w,b
 40451  00992E  A4D8               	btfss	status,2,c
 40452  009930  D005               	goto	i2l18104
 40453                           
 40454                           ; BSR set to: 2
 40455  009932  0EF0               	movlw	low STR_26
 40456  009934  6E05               	movwf	?i2_GetAlarmState^0,c
 40457  009936  0EFF               	movlw	high STR_26
 40458  009938  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 40459  00993A  0012               	return	
 40460  00993C                     i2l18104:
 40461                           
 40462                           ; BSR set to: 2
 40463                           ;alarm.c: 434:         if (AnyAlarm() && muteSec) return "Mu";
 40464  00993C  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 40465  009940  0900               	iorlw	0
 40466  009942  B4D8               	btfsc	status,2,c
 40467  009944  D00A               	goto	i2l18114
 40468  009946  0101               	movlb	1	; () banked
 40469  009948  51EF               	movf	_muteSec& (0+255),w,b
 40470  00994A  11F0               	iorwf	(_muteSec+1)& (0+255),w,b
 40471  00994C  B4D8               	btfsc	status,2,c
 40472  00994E  D005               	goto	i2l18114
 40473                           
 40474                           ; BSR set to: 1
 40475  009950  0EF6               	movlw	low STR_27
 40476  009952  6E05               	movwf	?i2_GetAlarmState^0,c
 40477  009954  0EFF               	movlw	high STR_27
 40478  009956  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 40479  009958  0012               	return	
 40480  00995A                     i2l18114:
 40481  00995A  EC8C  F04F         	call	i2_AnyAlarm	;wreg free
 40482  00995E  0900               	iorlw	0
 40483  009960  B4D8               	btfsc	status,2,c
 40484  009962  D005               	goto	i2l18120
 40485  009964  0EF3               	movlw	low STR_28
 40486  009966  6E05               	movwf	?i2_GetAlarmState^0,c
 40487  009968  0EFF               	movlw	high STR_28
 40488  00996A  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 40489  00996C  0012               	return	
 40490  00996E                     i2l18120:
 40491                           
 40492                           ;alarm.c: 437:     return "  ";
 40493  00996E  0EED               	movlw	low (STR_6+14)
 40494  009970  6E05               	movwf	?i2_GetAlarmState^0,c
 40495  009972  0EFE               	movlw	high (STR_6+14)
 40496  009974  6E06               	movwf	(?i2_GetAlarmState+1)^0,c
 40497  009976  0012               	return		;funcret
 40498  009978                     __end_ofi2_GetAlarmState:
 40499                           	opt callstack 0
 40500                           
 40501 ;; *************** function i2_AnyAlarm *****************
 40502 ;; Defined at:
 40503 ;;		line 370 in file "alarm.c"
 40504 ;; Parameters:    Size  Location     Type
 40505 ;;		None
 40506 ;; Auto vars:     Size  Location     Type
 40507 ;;  AnyAlarm        2    2[COMRAM] int 
 40508 ;; Return value:  Size  Location     Type
 40509 ;;                  1    wreg      _Bool 
 40510 ;; Registers used:
 40511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40512 ;; Tracked objects:
 40513 ;;		On entry : 0/1
 40514 ;;		On exit  : 0/0
 40515 ;;		Unchanged: 0/0
 40516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40521 ;;Total ram usage:        4 bytes
 40522 ;; Hardware stack levels used:    1
 40523 ;; This function calls:
 40524 ;;		Nothing
 40525 ;; This function is called by:
 40526 ;;		_AlarmHandler
 40527 ;;		i2_MuteAlarm
 40528 ;;		i2_GetAlarmState
 40529 ;;		i2_AlarmUpdateLCD
 40530 ;; This function uses a non-reentrant model
 40531 ;;
 40532                           
 40533                           	psect	text314
 40534  009F18                     __ptext314:
 40535                           	opt callstack 0
 40536  009F18                     i2_AnyAlarm:
 40537                           	opt callstack 14
 40538                           
 40539                           ;alarm.c: 371:     for (int i=0; i<sizeof(alarmData)/sizeof(a); i++) {
 40540                           
 40541                           ;incstack = 0
 40542  009F18  0E00               	movlw	0
 40543  009F1A  6E04               	movwf	(i2AnyAlarm@i+1)^0,c
 40544  009F1C  0E00               	movlw	0
 40545  009F1E  6E03               	movwf	i2AnyAlarm@i^0,c
 40546  009F20                     i2l17878:
 40547                           
 40548                           ;alarm.c: 372:         if (alarms[i]) return 1;
 40549  009F20  90D8               	bcf	status,0,c
 40550  009F22  3403               	rlcf	i2AnyAlarm@i^0,w,c
 40551  009F24  6ED9               	movwf	fsr2l,c
 40552  009F26  3404               	rlcf	(i2AnyAlarm@i+1)^0,w,c
 40553  009F28  6EDA               	movwf	fsr2h,c
 40554  009F2A  0E00               	movlw	low _alarms
 40555  009F2C  26D9               	addwf	fsr2l,f,c
 40556  009F2E  0E03               	movlw	high _alarms
 40557  009F30  22DA               	addwfc	fsr2h,f,c
 40558  009F32  50DE               	movf	postinc2,w,c
 40559  009F34  10DE               	iorwf	postinc2,w,c
 40560  009F36  B4D8               	btfsc	status,2,c
 40561  009F38  D002               	goto	i2l17884
 40562  009F3A  0E01               	movlw	1
 40563  009F3C  0012               	return	
 40564  009F3E                     i2l17884:
 40565                           
 40566                           ;alarm.c: 373:     }
 40567  009F3E  4A03               	infsnz	i2AnyAlarm@i^0,f,c
 40568  009F40  2A04               	incf	(i2AnyAlarm@i+1)^0,f,c
 40569  009F42  5004               	movf	(i2AnyAlarm@i+1)^0,w,c
 40570  009F44  E104               	bnz	i2u1745_40
 40571  009F46  0E13               	movlw	19
 40572  009F48  5C03               	subwf	i2AnyAlarm@i^0,w,c
 40573  009F4A  A0D8               	btfss	status,0,c
 40574  009F4C  D7E9               	goto	i2l17878
 40575  009F4E                     i2u1745_40:
 40576                           
 40577                           ;alarm.c: 374:     return 0;
 40578  009F4E  0E00               	movlw	0
 40579  009F50  0012               	return		;funcret
 40580  009F52                     __end_ofi2_AnyAlarm:
 40581                           	opt callstack 0
 40582                           
 40583 ;; *************** function _ControllerBuzzerCheck *****************
 40584 ;; Defined at:
 40585 ;;		line 422 in file "buzzer.c"
 40586 ;; Parameters:    Size  Location     Type
 40587 ;;		None
 40588 ;; Auto vars:     Size  Location     Type
 40589 ;;		None
 40590 ;; Return value:  Size  Location     Type
 40591 ;;                  1    wreg      void 
 40592 ;; Registers used:
 40593 ;;		wreg, status,2, cstack
 40594 ;; Tracked objects:
 40595 ;;		On entry : 3F/2
 40596 ;;		On exit  : 3F/2
 40597 ;;		Unchanged: 0/0
 40598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40603 ;;Total ram usage:        0 bytes
 40604 ;; Hardware stack levels used:    1
 40605 ;; Hardware stack levels required when called:    1
 40606 ;; This function calls:
 40607 ;;		i2_CMP1_Enable
 40608 ;; This function is called by:
 40609 ;;		_UpdateState
 40610 ;; This function uses a non-reentrant model
 40611 ;;
 40612                           
 40613                           	psect	text315
 40614  00AD9C                     __ptext315:
 40615                           	opt callstack 0
 40616  00AD9C                     _ControllerBuzzerCheck:
 40617                           	opt callstack 11
 40618                           
 40619                           ; BSR set to: 2
 40620                           ;buzzer.c: 423:     CMP1_Enable();
 40621                           
 40622                           ;incstack = 0
 40623  00AD9C  EC6B  F057         	call	i2_CMP1_Enable	;wreg free
 40624                           
 40625                           ; BSR set to: 57
 40626                           ;buzzer.c: 424:     checkController = 1;
 40627  00ADA0  0E01               	movlw	1
 40628  00ADA2  0102               	movlb	2	; () banked
 40629  00ADA4  6FB2               	movwf	_checkController& (0+255),b
 40630                           
 40631                           ; BSR set to: 2
 40632  00ADA6  0012               	return		;funcret
 40633  00ADA8                     __end_of_ControllerBuzzerCheck:
 40634                           	opt callstack 0
 40635                           
 40636 ;; *************** function i2_CMP1_Enable *****************
 40637 ;; Defined at:
 40638 ;;		line 104 in file "mcc_generated_files/cmp1.c"
 40639 ;; Parameters:    Size  Location     Type
 40640 ;;		None
 40641 ;; Auto vars:     Size  Location     Type
 40642 ;;		None
 40643 ;; Return value:  Size  Location     Type
 40644 ;;                  1    wreg      void 
 40645 ;; Registers used:
 40646 ;;		None
 40647 ;; Tracked objects:
 40648 ;;		On entry : 3D/0
 40649 ;;		On exit  : 3F/39
 40650 ;;		Unchanged: 0/0
 40651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40656 ;;Total ram usage:        0 bytes
 40657 ;; Hardware stack levels used:    1
 40658 ;; This function calls:
 40659 ;;		Nothing
 40660 ;; This function is called by:
 40661 ;;		_ControllerBuzzerCheck
 40662 ;;		i2_BuzzerOn
 40663 ;; This function uses a non-reentrant model
 40664 ;;
 40665                           
 40666                           	psect	text316
 40667  00AED6                     __ptext316:
 40668                           	opt callstack 0
 40669  00AED6                     i2_CMP1_Enable:
 40670                           	opt callstack 12
 40671                           
 40672                           ;mcc_generated_files/cmp1.c: 106:     PIR1bits.C1IF = 0;
 40673                           
 40674                           ; BSR set to: 2
 40675                           ;incstack = 0
 40676  00AED6  0139               	movlb	57	; () banked
 40677  00AED8  99A1               	bcf	161,4,b	;volatile
 40678                           
 40679                           ;mcc_generated_files/cmp1.c: 107:     PIE1bits.C1IE = 1;
 40680  00AEDA  8991               	bsf	145,4,b	;volatile
 40681                           
 40682                           ; BSR set to: 57
 40683  00AEDC  0012               	return		;funcret
 40684  00AEDE                     __end_ofi2_CMP1_Enable:
 40685                           	opt callstack 0
 40686                           
 40687 ;; *************** function _ClearAllAlarm *****************
 40688 ;; Defined at:
 40689 ;;		line 247 in file "alarm.c"
 40690 ;; Parameters:    Size  Location     Type
 40691 ;;		None
 40692 ;; Auto vars:     Size  Location     Type
 40693 ;;		None
 40694 ;; Return value:  Size  Location     Type
 40695 ;;                  1    wreg      void 
 40696 ;; Registers used:
 40697 ;;		wreg, status,2, status,0, cstack
 40698 ;; Tracked objects:
 40699 ;;		On entry : 3F/1
 40700 ;;		On exit  : 3F/2
 40701 ;;		Unchanged: 0/0
 40702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40707 ;;Total ram usage:        0 bytes
 40708 ;; Hardware stack levels used:    1
 40709 ;; Hardware stack levels required when called:    1
 40710 ;; This function calls:
 40711 ;;		_ClearHighPressureAlarmLow
 40712 ;;		_ClearTdeTooLongAlarm
 40713 ;;		_ClearTdiTooLongAlarm
 40714 ;;		_ClearVAboveMaxAlarm
 40715 ;;		_ClearVBelowMinAlarm
 40716 ;;		i2_ClearBaterryLowAlarmHigh
 40717 ;;		i2_ClearBaterryLowAlarmMed
 40718 ;;		i2_ClearBatteryFailAlarm
 40719 ;;		i2_ClearCircuitFailureAlarm
 40720 ;;		i2_ClearControlFailAlarm
 40721 ;;		i2_ClearEPAboveSetAlarm
 40722 ;;		i2_ClearEPBelowSetAlarm
 40723 ;;		i2_ClearGasFailureAlarm
 40724 ;;		i2_ClearHighPressureAlarmHigh
 40725 ;;		i2_ClearIPAboveSetAlarm
 40726 ;;		i2_ClearIPBelowSetAlarm
 40727 ;;		i2_ClearMonitorFailAlarm
 40728 ;;		i2_ClearNoPowerSupplyAlarm
 40729 ;;		i2_ClearVeryHighPressureAlarmHigh
 40730 ;; This function is called by:
 40731 ;;		_UpdateState
 40732 ;; This function uses a non-reentrant model
 40733 ;;
 40734                           
 40735                           	psect	text317
 40736  009AB8                     __ptext317:
 40737                           	opt callstack 0
 40738  009AB8                     _ClearAllAlarm:
 40739                           	opt callstack 11
 40740                           
 40741                           ; BSR set to: 1
 40742                           ;alarm.c: 248:     ClearBatteryFailAlarm();
 40743                           
 40744                           ; BSR set to: 57
 40745                           ;incstack = 0
 40746  009AB8  EC87  F057         	call	i2_ClearBatteryFailAlarm	;wreg free
 40747                           
 40748                           ;alarm.c: 249:     ClearMonitorFailAlarm();
 40749  009ABC  EC73  F057         	call	i2_ClearMonitorFailAlarm	;wreg free
 40750                           
 40751                           ;alarm.c: 250:     ClearControlFailAlarm();
 40752  009AC0  EC7F  F057         	call	i2_ClearControlFailAlarm	;wreg free
 40753                           
 40754                           ;alarm.c: 251:     ClearGasFailureAlarm();
 40755  009AC4  EC7B  F057         	call	i2_ClearGasFailureAlarm	;wreg free
 40756                           
 40757                           ;alarm.c: 252:     ClearHighPressureAlarmLow();
 40758  009AC8  ECDD  F057         	call	_ClearHighPressureAlarmLow	;wreg free
 40759                           
 40760                           ;alarm.c: 253:     ClearHighPressureAlarmHigh();
 40761  009ACC  EC77  F057         	call	i2_ClearHighPressureAlarmHigh	;wreg free
 40762                           
 40763                           ;alarm.c: 254:     ClearVeryHighPressureAlarmHigh();
 40764  009AD0  EC6F  F057         	call	i2_ClearVeryHighPressureAlarmHigh	;wreg free
 40765                           
 40766                           ;alarm.c: 255:     ClearCircuitFailureAlarm();
 40767  009AD4  EC83  F057         	call	i2_ClearCircuitFailureAlarm	;wreg free
 40768                           
 40769                           ;alarm.c: 256:     ClearBaterryLowAlarmMed();
 40770  009AD8  ECD4  F057         	call	i2_ClearBaterryLowAlarmMed	;wreg free
 40771                           
 40772                           ;alarm.c: 257:     ClearBaterryLowAlarmHigh();
 40773  009ADC  ECD7  F057         	call	i2_ClearBaterryLowAlarmHigh	;wreg free
 40774                           
 40775                           ; BSR set to: 2
 40776                           ;alarm.c: 258:     ClearEPBelowSetAlarm();
 40777  009AE0  ECFF  F054         	call	i2_ClearEPBelowSetAlarm	;wreg free
 40778                           
 40779                           ; BSR set to: 0
 40780                           ;alarm.c: 259:     ClearEPAboveSetAlarm();
 40781  009AE4  EC0A  F055         	call	i2_ClearEPAboveSetAlarm	;wreg free
 40782                           
 40783                           ; BSR set to: 0
 40784                           ;alarm.c: 260:     ClearIPBelowSetAlarm();
 40785  009AE8  ECE9  F054         	call	i2_ClearIPBelowSetAlarm	;wreg free
 40786                           
 40787                           ; BSR set to: 0
 40788                           ;alarm.c: 261:     ClearIPAboveSetAlarm();
 40789  009AEC  ECF4  F054         	call	i2_ClearIPAboveSetAlarm	;wreg free
 40790                           
 40791                           ;alarm.c: 262:     ClearTdiTooLongAlarm();
 40792  009AF0  EC8F  F057         	call	_ClearTdiTooLongAlarm	;wreg free
 40793                           
 40794                           ;alarm.c: 263:     ClearTdeTooLongAlarm();
 40795  009AF4  EC93  F057         	call	_ClearTdeTooLongAlarm	;wreg free
 40796                           
 40797                           ;alarm.c: 264:     ClearVAboveMaxAlarm();
 40798  009AF8  EC8B  F057         	call	_ClearVAboveMaxAlarm	;wreg free
 40799                           
 40800                           ;alarm.c: 265:     ClearVBelowMinAlarm();
 40801  009AFC  ECDA  F057         	call	_ClearVBelowMinAlarm	;wreg free
 40802                           
 40803                           ;alarm.c: 266:     ClearNoPowerSupplyAlarm();
 40804  009B00  ECD1  F057         	call	i2_ClearNoPowerSupplyAlarm	;wreg free
 40805                           
 40806                           ; BSR set to: 2
 40807  009B04  0012               	return		;funcret
 40808  009B06                     __end_of_ClearAllAlarm:
 40809                           	opt callstack 0
 40810                           
 40811 ;; *************** function i2_ClearVeryHighPressureAlarmHigh *****************
 40812 ;; Defined at:
 40813 ;;		line 278 in file "alarm.c"
 40814 ;; Parameters:    Size  Location     Type
 40815 ;;		None
 40816 ;; Auto vars:     Size  Location     Type
 40817 ;;		None
 40818 ;; Return value:  Size  Location     Type
 40819 ;;                  1    wreg      void 
 40820 ;; Registers used:
 40821 ;;		wreg, status,2
 40822 ;; Tracked objects:
 40823 ;;		On entry : 0/1
 40824 ;;		On exit  : 3F/2
 40825 ;;		Unchanged: 0/0
 40826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40831 ;;Total ram usage:        0 bytes
 40832 ;; Hardware stack levels used:    1
 40833 ;; This function calls:
 40834 ;;		Nothing
 40835 ;; This function is called by:
 40836 ;;		_ClearAllAlarm
 40837 ;;		i2_MuteAlarm
 40838 ;; This function uses a non-reentrant model
 40839 ;;
 40840                           
 40841                           	psect	text318
 40842  00AEDE                     __ptext318:
 40843                           	opt callstack 0
 40844  00AEDE                     i2_ClearVeryHighPressureAlarmHigh:
 40845                           	opt callstack 13
 40846                           
 40847                           ; BSR set to: 2
 40848                           ;incstack = 0
 40849  00AEDE  0E00               	movlw	0
 40850  00AEE0  0102               	movlb	2	; () banked
 40851  00AEE2  6FAC               	movwf	_veryHighPressureAlarmHigh& (0+255),b
 40852                           
 40853                           ; BSR set to: 2
 40854  00AEE4  0012               	return		;funcret
 40855  00AEE6                     __end_ofi2_ClearVeryHighPressureAlarmHigh:
 40856                           	opt callstack 0
 40857                           
 40858 ;; *************** function i2_ClearNoPowerSupplyAlarm *****************
 40859 ;; Defined at:
 40860 ;;		line 290 in file "alarm.c"
 40861 ;; Parameters:    Size  Location     Type
 40862 ;;		None
 40863 ;; Auto vars:     Size  Location     Type
 40864 ;;		None
 40865 ;; Return value:  Size  Location     Type
 40866 ;;                  1    wreg      void 
 40867 ;; Registers used:
 40868 ;;		wreg, status,2
 40869 ;; Tracked objects:
 40870 ;;		On entry : 3F/2
 40871 ;;		On exit  : 3F/2
 40872 ;;		Unchanged: 0/0
 40873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40878 ;;Total ram usage:        0 bytes
 40879 ;; Hardware stack levels used:    1
 40880 ;; This function calls:
 40881 ;;		Nothing
 40882 ;; This function is called by:
 40883 ;;		_ClearAllAlarm
 40884 ;; This function uses a non-reentrant model
 40885 ;;
 40886                           
 40887                           	psect	text319
 40888  00AFA2                     __ptext319:
 40889                           	opt callstack 0
 40890  00AFA2                     i2_ClearNoPowerSupplyAlarm:
 40891                           	opt callstack 11
 40892                           
 40893                           ; BSR set to: 2
 40894                           
 40895                           ; BSR set to: 2
 40896                           ;incstack = 0
 40897  00AFA2  0E00               	movlw	0
 40898  00AFA4  6FA4               	movwf	_noPowerSupplyAlarm& (0+255),b
 40899                           
 40900                           ; BSR set to: 2
 40901  00AFA6  0012               	return		;funcret
 40902  00AFA8                     __end_ofi2_ClearNoPowerSupplyAlarm:
 40903                           	opt callstack 0
 40904                           
 40905 ;; *************** function i2_ClearMonitorFailAlarm *****************
 40906 ;; Defined at:
 40907 ;;		line 270 in file "alarm.c"
 40908 ;; Parameters:    Size  Location     Type
 40909 ;;		None
 40910 ;; Auto vars:     Size  Location     Type
 40911 ;;		None
 40912 ;; Return value:  Size  Location     Type
 40913 ;;                  1    wreg      void 
 40914 ;; Registers used:
 40915 ;;		wreg, status,2
 40916 ;; Tracked objects:
 40917 ;;		On entry : 0/0
 40918 ;;		On exit  : 3F/2
 40919 ;;		Unchanged: 0/0
 40920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40925 ;;Total ram usage:        0 bytes
 40926 ;; Hardware stack levels used:    1
 40927 ;; This function calls:
 40928 ;;		Nothing
 40929 ;; This function is called by:
 40930 ;;		_ClearAllAlarm
 40931 ;;		i2_BuzzerTask
 40932 ;;		i2_MuteAlarm
 40933 ;; This function uses a non-reentrant model
 40934 ;;
 40935                           
 40936                           	psect	text320
 40937  00AEE6                     __ptext320:
 40938                           	opt callstack 0
 40939  00AEE6                     i2_ClearMonitorFailAlarm:
 40940                           	opt callstack 13
 40941                           
 40942                           ;alarm.c: 272:     monitorFailAlarm = 0;
 40943                           
 40944                           ; BSR set to: 2
 40945                           ;incstack = 0
 40946  00AEE6  0E00               	movlw	0
 40947  00AEE8  0102               	movlb	2	; () banked
 40948  00AEEA  6FB0               	movwf	_monitorFailAlarm& (0+255),b
 40949                           
 40950                           ; BSR set to: 2
 40951  00AEEC  0012               	return		;funcret
 40952  00AEEE                     __end_ofi2_ClearMonitorFailAlarm:
 40953                           	opt callstack 0
 40954                           
 40955 ;; *************** function i2_ClearIPBelowSetAlarm *****************
 40956 ;; Defined at:
 40957 ;;		line 284 in file "alarm.c"
 40958 ;; Parameters:    Size  Location     Type
 40959 ;;		None
 40960 ;; Auto vars:     Size  Location     Type
 40961 ;;		None
 40962 ;; Return value:  Size  Location     Type
 40963 ;;                  1    wreg      void 
 40964 ;; Registers used:
 40965 ;;		wreg, status,2, status,0
 40966 ;; Tracked objects:
 40967 ;;		On entry : 3C/0
 40968 ;;		On exit  : 3F/0
 40969 ;;		Unchanged: 0/0
 40970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40975 ;;Total ram usage:        0 bytes
 40976 ;; Hardware stack levels used:    1
 40977 ;; This function calls:
 40978 ;;		Nothing
 40979 ;; This function is called by:
 40980 ;;		_ClearAllAlarm
 40981 ;;		_MonitorPressureTask
 40982 ;;		i2_ClearVars
 40983 ;; This function uses a non-reentrant model
 40984 ;;
 40985                           
 40986                           	psect	text321
 40987  00A9D2                     __ptext321:
 40988                           	opt callstack 0
 40989  00A9D2                     i2_ClearIPBelowSetAlarm:
 40990                           	opt callstack 13
 40991                           
 40992                           ; BSR set to: 2
 40993                           ;incstack = 0
 40994  00A9D2  0100               	movlb	0	; () banked
 40995  00A9D4  07E0               	decf	_ipBelowSetAlarm& (0+255),f,b
 40996  00A9D6  A0D8               	btfss	status,0,c
 40997  00A9D8  07E1               	decf	(_ipBelowSetAlarm+1)& (0+255),f,b
 40998                           
 40999                           ; BSR set to: 0
 41000  00A9DA  AFE1               	btfss	(_ipBelowSetAlarm+1)& (0+255),7,b
 41001  00A9DC  0012               	return	
 41002                           
 41003                           ; BSR set to: 0
 41004  00A9DE  0E00               	movlw	0
 41005  00A9E0  6FE1               	movwf	(_ipBelowSetAlarm+1)& (0+255),b
 41006  00A9E2  0E00               	movlw	0
 41007  00A9E4  6FE0               	movwf	_ipBelowSetAlarm& (0+255),b
 41008                           
 41009                           ; BSR set to: 0
 41010  00A9E6  0012               	return		;funcret
 41011  00A9E8                     __end_ofi2_ClearIPBelowSetAlarm:
 41012                           	opt callstack 0
 41013                           
 41014 ;; *************** function i2_ClearIPAboveSetAlarm *****************
 41015 ;; Defined at:
 41016 ;;		line 285 in file "alarm.c"
 41017 ;; Parameters:    Size  Location     Type
 41018 ;;		None
 41019 ;; Auto vars:     Size  Location     Type
 41020 ;;		None
 41021 ;; Return value:  Size  Location     Type
 41022 ;;                  1    wreg      void 
 41023 ;; Registers used:
 41024 ;;		wreg, status,2, status,0
 41025 ;; Tracked objects:
 41026 ;;		On entry : 3C/0
 41027 ;;		On exit  : 3F/2
 41028 ;;		Unchanged: 0/0
 41029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41034 ;;Total ram usage:        0 bytes
 41035 ;; Hardware stack levels used:    1
 41036 ;; This function calls:
 41037 ;;		Nothing
 41038 ;; This function is called by:
 41039 ;;		_ClearAllAlarm
 41040 ;;		_MonitorPressureTask
 41041 ;;		i2_ClearVars
 41042 ;; This function uses a non-reentrant model
 41043 ;;
 41044                           
 41045                           	psect	text322
 41046  00A9E8                     __ptext322:
 41047                           	opt callstack 0
 41048  00A9E8                     i2_ClearIPAboveSetAlarm:
 41049                           	opt callstack 13
 41050                           
 41051                           ; BSR set to: 0
 41052                           ;incstack = 0
 41053  00A9E8  0102               	movlb	2	; () banked
 41054  00A9EA  0780               	decf	_ipAboveSetAlarm& (0+255),f,b
 41055  00A9EC  A0D8               	btfss	status,0,c
 41056  00A9EE  0781               	decf	(_ipAboveSetAlarm+1)& (0+255),f,b
 41057                           
 41058                           ; BSR set to: 2
 41059  00A9F0  AF81               	btfss	(_ipAboveSetAlarm+1)& (0+255),7,b
 41060  00A9F2  0012               	return	
 41061                           
 41062                           ; BSR set to: 2
 41063  00A9F4  0E00               	movlw	0
 41064  00A9F6  6F81               	movwf	(_ipAboveSetAlarm+1)& (0+255),b
 41065  00A9F8  0E00               	movlw	0
 41066  00A9FA  6F80               	movwf	_ipAboveSetAlarm& (0+255),b
 41067                           
 41068                           ; BSR set to: 2
 41069  00A9FC  0012               	return		;funcret
 41070  00A9FE                     __end_ofi2_ClearIPAboveSetAlarm:
 41071                           	opt callstack 0
 41072                           
 41073 ;; *************** function i2_ClearHighPressureAlarmHigh *****************
 41074 ;; Defined at:
 41075 ;;		line 277 in file "alarm.c"
 41076 ;; Parameters:    Size  Location     Type
 41077 ;;		None
 41078 ;; Auto vars:     Size  Location     Type
 41079 ;;		None
 41080 ;; Return value:  Size  Location     Type
 41081 ;;                  1    wreg      void 
 41082 ;; Registers used:
 41083 ;;		wreg, status,2
 41084 ;; Tracked objects:
 41085 ;;		On entry : 0/1
 41086 ;;		On exit  : 3F/2
 41087 ;;		Unchanged: 0/0
 41088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41093 ;;Total ram usage:        0 bytes
 41094 ;; Hardware stack levels used:    1
 41095 ;; This function calls:
 41096 ;;		Nothing
 41097 ;; This function is called by:
 41098 ;;		_ClearAllAlarm
 41099 ;;		i2_MuteAlarm
 41100 ;; This function uses a non-reentrant model
 41101 ;;
 41102                           
 41103                           	psect	text323
 41104  00AEEE                     __ptext323:
 41105                           	opt callstack 0
 41106  00AEEE                     i2_ClearHighPressureAlarmHigh:
 41107                           	opt callstack 13
 41108                           
 41109                           ; BSR set to: 2
 41110                           ;incstack = 0
 41111  00AEEE  0E00               	movlw	0
 41112  00AEF0  0102               	movlb	2	; () banked
 41113  00AEF2  6FAD               	movwf	_highPressureAlarmHigh& (0+255),b
 41114                           
 41115                           ; BSR set to: 2
 41116  00AEF4  0012               	return		;funcret
 41117  00AEF6                     __end_ofi2_ClearHighPressureAlarmHigh:
 41118                           	opt callstack 0
 41119                           
 41120 ;; *************** function i2_ClearGasFailureAlarm *****************
 41121 ;; Defined at:
 41122 ;;		line 275 in file "alarm.c"
 41123 ;; Parameters:    Size  Location     Type
 41124 ;;		None
 41125 ;; Auto vars:     Size  Location     Type
 41126 ;;		None
 41127 ;; Return value:  Size  Location     Type
 41128 ;;                  1    wreg      void 
 41129 ;; Registers used:
 41130 ;;		wreg, status,2
 41131 ;; Tracked objects:
 41132 ;;		On entry : 0/1
 41133 ;;		On exit  : 3F/2
 41134 ;;		Unchanged: 0/0
 41135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41140 ;;Total ram usage:        0 bytes
 41141 ;; Hardware stack levels used:    1
 41142 ;; This function calls:
 41143 ;;		Nothing
 41144 ;; This function is called by:
 41145 ;;		_ClearAllAlarm
 41146 ;;		_MonitorPressureTask
 41147 ;;		i2_MuteAlarm
 41148 ;; This function uses a non-reentrant model
 41149 ;;
 41150                           
 41151                           	psect	text324
 41152  00AEF6                     __ptext324:
 41153                           	opt callstack 0
 41154  00AEF6                     i2_ClearGasFailureAlarm:
 41155                           	opt callstack 13
 41156                           
 41157                           ; BSR set to: 2
 41158                           ;incstack = 0
 41159  00AEF6  0E00               	movlw	0
 41160  00AEF8  0102               	movlb	2	; () banked
 41161  00AEFA  6FAF               	movwf	_gasFailureAlarm& (0+255),b
 41162                           
 41163                           ; BSR set to: 2
 41164  00AEFC  0012               	return		;funcret
 41165  00AEFE                     __end_ofi2_ClearGasFailureAlarm:
 41166                           	opt callstack 0
 41167                           
 41168 ;; *************** function i2_ClearEPBelowSetAlarm *****************
 41169 ;; Defined at:
 41170 ;;		line 282 in file "alarm.c"
 41171 ;; Parameters:    Size  Location     Type
 41172 ;;		None
 41173 ;; Auto vars:     Size  Location     Type
 41174 ;;		None
 41175 ;; Return value:  Size  Location     Type
 41176 ;;                  1    wreg      void 
 41177 ;; Registers used:
 41178 ;;		wreg, status,2, status,0
 41179 ;; Tracked objects:
 41180 ;;		On entry : 3C/2
 41181 ;;		On exit  : 3F/0
 41182 ;;		Unchanged: 0/0
 41183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41188 ;;Total ram usage:        0 bytes
 41189 ;; Hardware stack levels used:    1
 41190 ;; This function calls:
 41191 ;;		Nothing
 41192 ;; This function is called by:
 41193 ;;		_ClearAllAlarm
 41194 ;;		_MonitorPressureTask
 41195 ;;		i2_ClearVars
 41196 ;; This function uses a non-reentrant model
 41197 ;;
 41198                           
 41199                           	psect	text325
 41200  00A9FE                     __ptext325:
 41201                           	opt callstack 0
 41202  00A9FE                     i2_ClearEPBelowSetAlarm:
 41203                           	opt callstack 13
 41204                           
 41205                           ; BSR set to: 2
 41206                           ;incstack = 0
 41207  00A9FE  0100               	movlb	0	; () banked
 41208  00AA00  07E4               	decf	_epBelowSetAlarm& (0+255),f,b
 41209  00AA02  A0D8               	btfss	status,0,c
 41210  00AA04  07E5               	decf	(_epBelowSetAlarm+1)& (0+255),f,b
 41211                           
 41212                           ; BSR set to: 0
 41213  00AA06  AFE5               	btfss	(_epBelowSetAlarm+1)& (0+255),7,b
 41214  00AA08  0012               	return	
 41215                           
 41216                           ; BSR set to: 0
 41217  00AA0A  0E00               	movlw	0
 41218  00AA0C  6FE5               	movwf	(_epBelowSetAlarm+1)& (0+255),b
 41219  00AA0E  0E00               	movlw	0
 41220  00AA10  6FE4               	movwf	_epBelowSetAlarm& (0+255),b
 41221                           
 41222                           ; BSR set to: 0
 41223  00AA12  0012               	return		;funcret
 41224  00AA14                     __end_ofi2_ClearEPBelowSetAlarm:
 41225                           	opt callstack 0
 41226                           
 41227 ;; *************** function i2_ClearEPAboveSetAlarm *****************
 41228 ;; Defined at:
 41229 ;;		line 283 in file "alarm.c"
 41230 ;; Parameters:    Size  Location     Type
 41231 ;;		None
 41232 ;; Auto vars:     Size  Location     Type
 41233 ;;		None
 41234 ;; Return value:  Size  Location     Type
 41235 ;;                  1    wreg      void 
 41236 ;; Registers used:
 41237 ;;		wreg, status,2, status,0
 41238 ;; Tracked objects:
 41239 ;;		On entry : 3C/0
 41240 ;;		On exit  : 3F/0
 41241 ;;		Unchanged: 0/0
 41242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41247 ;;Total ram usage:        0 bytes
 41248 ;; Hardware stack levels used:    1
 41249 ;; This function calls:
 41250 ;;		Nothing
 41251 ;; This function is called by:
 41252 ;;		_ClearAllAlarm
 41253 ;;		_MonitorPressureTask
 41254 ;;		i2_ClearVars
 41255 ;; This function uses a non-reentrant model
 41256 ;;
 41257                           
 41258                           	psect	text326
 41259  00AA14                     __ptext326:
 41260                           	opt callstack 0
 41261  00AA14                     i2_ClearEPAboveSetAlarm:
 41262                           	opt callstack 13
 41263                           
 41264                           ; BSR set to: 0
 41265                           ;incstack = 0
 41266  00AA14  0100               	movlb	0	; () banked
 41267  00AA16  07E2               	decf	_epAboveSetAlarm& (0+255),f,b
 41268  00AA18  A0D8               	btfss	status,0,c
 41269  00AA1A  07E3               	decf	(_epAboveSetAlarm+1)& (0+255),f,b
 41270                           
 41271                           ; BSR set to: 0
 41272  00AA1C  AFE3               	btfss	(_epAboveSetAlarm+1)& (0+255),7,b
 41273  00AA1E  0012               	return	
 41274                           
 41275                           ; BSR set to: 0
 41276  00AA20  0E00               	movlw	0
 41277  00AA22  6FE3               	movwf	(_epAboveSetAlarm+1)& (0+255),b
 41278  00AA24  0E00               	movlw	0
 41279  00AA26  6FE2               	movwf	_epAboveSetAlarm& (0+255),b
 41280                           
 41281                           ; BSR set to: 0
 41282  00AA28  0012               	return		;funcret
 41283  00AA2A                     __end_ofi2_ClearEPAboveSetAlarm:
 41284                           	opt callstack 0
 41285                           
 41286 ;; *************** function i2_ClearControlFailAlarm *****************
 41287 ;; Defined at:
 41288 ;;		line 274 in file "alarm.c"
 41289 ;; Parameters:    Size  Location     Type
 41290 ;;		None
 41291 ;; Auto vars:     Size  Location     Type
 41292 ;;		None
 41293 ;; Return value:  Size  Location     Type
 41294 ;;                  1    wreg      void 
 41295 ;; Registers used:
 41296 ;;		wreg, status,2
 41297 ;; Tracked objects:
 41298 ;;		On entry : 0/0
 41299 ;;		On exit  : 3F/0
 41300 ;;		Unchanged: 0/0
 41301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41306 ;;Total ram usage:        0 bytes
 41307 ;; Hardware stack levels used:    1
 41308 ;; This function calls:
 41309 ;;		Nothing
 41310 ;; This function is called by:
 41311 ;;		_ClearAllAlarm
 41312 ;;		_UpdateState
 41313 ;;		_ControllerTimerHandler
 41314 ;;		i2_MuteAlarm
 41315 ;; This function uses a non-reentrant model
 41316 ;;
 41317                           
 41318                           	psect	text327
 41319  00AEFE                     __ptext327:
 41320                           	opt callstack 0
 41321  00AEFE                     i2_ClearControlFailAlarm:
 41322                           	opt callstack 14
 41323                           
 41324                           ; BSR set to: 0
 41325                           ;incstack = 0
 41326  00AEFE  0E00               	movlw	0
 41327  00AF00  0100               	movlb	0	; () banked
 41328  00AF02  6FF2               	movwf	_controlFailAlarm& (0+255),b
 41329                           
 41330                           ; BSR set to: 0
 41331  00AF04  0012               	return		;funcret
 41332  00AF06                     __end_ofi2_ClearControlFailAlarm:
 41333                           	opt callstack 0
 41334                           
 41335 ;; *************** function i2_ClearCircuitFailureAlarm *****************
 41336 ;; Defined at:
 41337 ;;		line 279 in file "alarm.c"
 41338 ;; Parameters:    Size  Location     Type
 41339 ;;		None
 41340 ;; Auto vars:     Size  Location     Type
 41341 ;;		None
 41342 ;; Return value:  Size  Location     Type
 41343 ;;                  1    wreg      void 
 41344 ;; Registers used:
 41345 ;;		wreg, status,2
 41346 ;; Tracked objects:
 41347 ;;		On entry : 0/1
 41348 ;;		On exit  : 3F/2
 41349 ;;		Unchanged: 0/0
 41350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41355 ;;Total ram usage:        0 bytes
 41356 ;; Hardware stack levels used:    1
 41357 ;; This function calls:
 41358 ;;		Nothing
 41359 ;; This function is called by:
 41360 ;;		_ClearAllAlarm
 41361 ;;		_MonitorPressureTask
 41362 ;;		i2_MuteAlarm
 41363 ;;		i2_ClearVars
 41364 ;; This function uses a non-reentrant model
 41365 ;;
 41366                           
 41367                           	psect	text328
 41368  00AF06                     __ptext328:
 41369                           	opt callstack 0
 41370  00AF06                     i2_ClearCircuitFailureAlarm:
 41371                           	opt callstack 13
 41372                           
 41373                           ; BSR set to: 0
 41374                           ;incstack = 0
 41375  00AF06  0E00               	movlw	0
 41376  00AF08  0102               	movlb	2	; () banked
 41377  00AF0A  6FAB               	movwf	_circuitFailureAlarm& (0+255),b
 41378                           
 41379                           ; BSR set to: 2
 41380  00AF0C  0012               	return		;funcret
 41381  00AF0E                     __end_ofi2_ClearCircuitFailureAlarm:
 41382                           	opt callstack 0
 41383                           
 41384 ;; *************** function i2_ClearBatteryFailAlarm *****************
 41385 ;; Defined at:
 41386 ;;		line 269 in file "alarm.c"
 41387 ;; Parameters:    Size  Location     Type
 41388 ;;		None
 41389 ;; Auto vars:     Size  Location     Type
 41390 ;;		None
 41391 ;; Return value:  Size  Location     Type
 41392 ;;                  1    wreg      void 
 41393 ;; Registers used:
 41394 ;;		wreg, status,2
 41395 ;; Tracked objects:
 41396 ;;		On entry : 3F/1
 41397 ;;		On exit  : 3F/0
 41398 ;;		Unchanged: 0/0
 41399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41404 ;;Total ram usage:        0 bytes
 41405 ;; Hardware stack levels used:    1
 41406 ;; This function calls:
 41407 ;;		Nothing
 41408 ;; This function is called by:
 41409 ;;		_ClearAllAlarm
 41410 ;; This function uses a non-reentrant model
 41411 ;;
 41412                           
 41413                           	psect	text329
 41414  00AF0E                     __ptext329:
 41415                           	opt callstack 0
 41416  00AF0E                     i2_ClearBatteryFailAlarm:
 41417                           	opt callstack 11
 41418                           
 41419                           ; BSR set to: 1
 41420                           
 41421                           ; BSR set to: 2
 41422                           ;incstack = 0
 41423  00AF0E  0E00               	movlw	0
 41424  00AF10  0100               	movlb	0	; () banked
 41425  00AF12  6FF3               	movwf	_batteryFailAlarm& (0+255),b
 41426                           
 41427                           ; BSR set to: 0
 41428  00AF14  0012               	return		;funcret
 41429  00AF16                     __end_ofi2_ClearBatteryFailAlarm:
 41430                           	opt callstack 0
 41431                           
 41432 ;; *************** function i2_ClearBaterryLowAlarmMed *****************
 41433 ;; Defined at:
 41434 ;;		line 280 in file "alarm.c"
 41435 ;; Parameters:    Size  Location     Type
 41436 ;;		None
 41437 ;; Auto vars:     Size  Location     Type
 41438 ;;		None
 41439 ;; Return value:  Size  Location     Type
 41440 ;;                  1    wreg      void 
 41441 ;; Registers used:
 41442 ;;		wreg, status,2
 41443 ;; Tracked objects:
 41444 ;;		On entry : 3F/2
 41445 ;;		On exit  : 3F/2
 41446 ;;		Unchanged: 0/0
 41447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41452 ;;Total ram usage:        0 bytes
 41453 ;; Hardware stack levels used:    1
 41454 ;; This function calls:
 41455 ;;		Nothing
 41456 ;; This function is called by:
 41457 ;;		_ClearAllAlarm
 41458 ;; This function uses a non-reentrant model
 41459 ;;
 41460                           
 41461                           	psect	text330
 41462  00AFA8                     __ptext330:
 41463                           	opt callstack 0
 41464  00AFA8                     i2_ClearBaterryLowAlarmMed:
 41465                           	opt callstack 11
 41466                           
 41467                           ; BSR set to: 2
 41468                           
 41469                           ; BSR set to: 0
 41470                           ;incstack = 0
 41471  00AFA8  0E00               	movlw	0
 41472  00AFAA  6FAA               	movwf	_baterryLowAlarmMed& (0+255),b
 41473                           
 41474                           ; BSR set to: 2
 41475  00AFAC  0012               	return		;funcret
 41476  00AFAE                     __end_ofi2_ClearBaterryLowAlarmMed:
 41477                           	opt callstack 0
 41478                           
 41479 ;; *************** function i2_ClearBaterryLowAlarmHigh *****************
 41480 ;; Defined at:
 41481 ;;		line 281 in file "alarm.c"
 41482 ;; Parameters:    Size  Location     Type
 41483 ;;		None
 41484 ;; Auto vars:     Size  Location     Type
 41485 ;;		None
 41486 ;; Return value:  Size  Location     Type
 41487 ;;                  1    wreg      void 
 41488 ;; Registers used:
 41489 ;;		wreg, status,2
 41490 ;; Tracked objects:
 41491 ;;		On entry : 3F/2
 41492 ;;		On exit  : 3F/2
 41493 ;;		Unchanged: 0/0
 41494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41499 ;;Total ram usage:        0 bytes
 41500 ;; Hardware stack levels used:    1
 41501 ;; This function calls:
 41502 ;;		Nothing
 41503 ;; This function is called by:
 41504 ;;		_ClearAllAlarm
 41505 ;; This function uses a non-reentrant model
 41506 ;;
 41507                           
 41508                           	psect	text331
 41509  00AFAE                     __ptext331:
 41510                           	opt callstack 0
 41511  00AFAE                     i2_ClearBaterryLowAlarmHigh:
 41512                           	opt callstack 11
 41513                           
 41514                           ; BSR set to: 2
 41515                           
 41516                           ; BSR set to: 2
 41517                           ;incstack = 0
 41518  00AFAE  0E00               	movlw	0
 41519  00AFB0  6FA9               	movwf	_baterryLowAlarmHigh& (0+255),b
 41520                           
 41521                           ; BSR set to: 2
 41522  00AFB2  0012               	return		;funcret
 41523  00AFB4                     __end_ofi2_ClearBaterryLowAlarmHigh:
 41524                           	opt callstack 0
 41525                           
 41526 ;; *************** function _ClearVBelowMinAlarm *****************
 41527 ;; Defined at:
 41528 ;;		line 289 in file "alarm.c"
 41529 ;; Parameters:    Size  Location     Type
 41530 ;;		None
 41531 ;; Auto vars:     Size  Location     Type
 41532 ;;		None
 41533 ;; Return value:  Size  Location     Type
 41534 ;;                  1    wreg      void 
 41535 ;; Registers used:
 41536 ;;		wreg, status,2
 41537 ;; Tracked objects:
 41538 ;;		On entry : 3F/2
 41539 ;;		On exit  : 3F/2
 41540 ;;		Unchanged: 0/0
 41541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41546 ;;Total ram usage:        0 bytes
 41547 ;; Hardware stack levels used:    1
 41548 ;; This function calls:
 41549 ;;		Nothing
 41550 ;; This function is called by:
 41551 ;;		_ClearAllAlarm
 41552 ;;		_MonitorPressureTask
 41553 ;; This function uses a non-reentrant model
 41554 ;;
 41555                           
 41556                           	psect	text332
 41557  00AFB4                     __ptext332:
 41558                           	opt callstack 0
 41559  00AFB4                     _ClearVBelowMinAlarm:
 41560                           	opt callstack 14
 41561                           
 41562                           ; BSR set to: 2
 41563                           
 41564                           ; BSR set to: 2
 41565                           ;incstack = 0
 41566  00AFB4  0E00               	movlw	0
 41567  00AFB6  6FA6               	movwf	_vBelowMinAlarm& (0+255),b
 41568                           
 41569                           ; BSR set to: 2
 41570  00AFB8  0012               	return		;funcret
 41571  00AFBA                     __end_of_ClearVBelowMinAlarm:
 41572                           	opt callstack 0
 41573                           
 41574 ;; *************** function _ClearVAboveMaxAlarm *****************
 41575 ;; Defined at:
 41576 ;;		line 288 in file "alarm.c"
 41577 ;; Parameters:    Size  Location     Type
 41578 ;;		None
 41579 ;; Auto vars:     Size  Location     Type
 41580 ;;		None
 41581 ;; Return value:  Size  Location     Type
 41582 ;;                  1    wreg      void 
 41583 ;; Registers used:
 41584 ;;		wreg, status,2
 41585 ;; Tracked objects:
 41586 ;;		On entry : 3C/2
 41587 ;;		On exit  : 3F/2
 41588 ;;		Unchanged: 0/0
 41589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41594 ;;Total ram usage:        0 bytes
 41595 ;; Hardware stack levels used:    1
 41596 ;; This function calls:
 41597 ;;		Nothing
 41598 ;; This function is called by:
 41599 ;;		_ClearAllAlarm
 41600 ;;		_MonitorPressureTask
 41601 ;; This function uses a non-reentrant model
 41602 ;;
 41603                           
 41604                           	psect	text333
 41605  00AF16                     __ptext333:
 41606                           	opt callstack 0
 41607  00AF16                     _ClearVAboveMaxAlarm:
 41608                           	opt callstack 14
 41609                           
 41610                           ; BSR set to: 2
 41611                           ;incstack = 0
 41612  00AF16  0E00               	movlw	0
 41613  00AF18  0102               	movlb	2	; () banked
 41614  00AF1A  6FA5               	movwf	_vAboveMaxAlarm& (0+255),b
 41615                           
 41616                           ; BSR set to: 2
 41617  00AF1C  0012               	return		;funcret
 41618  00AF1E                     __end_of_ClearVAboveMaxAlarm:
 41619                           	opt callstack 0
 41620                           
 41621 ;; *************** function _ClearTdiTooLongAlarm *****************
 41622 ;; Defined at:
 41623 ;;		line 286 in file "alarm.c"
 41624 ;; Parameters:    Size  Location     Type
 41625 ;;		None
 41626 ;; Auto vars:     Size  Location     Type
 41627 ;;		None
 41628 ;; Return value:  Size  Location     Type
 41629 ;;                  1    wreg      void 
 41630 ;; Registers used:
 41631 ;;		wreg, status,2
 41632 ;; Tracked objects:
 41633 ;;		On entry : 3C/2
 41634 ;;		On exit  : 3F/2
 41635 ;;		Unchanged: 0/0
 41636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41641 ;;Total ram usage:        0 bytes
 41642 ;; Hardware stack levels used:    1
 41643 ;; This function calls:
 41644 ;;		Nothing
 41645 ;; This function is called by:
 41646 ;;		_ClearAllAlarm
 41647 ;;		_MonitorPressureTask
 41648 ;; This function uses a non-reentrant model
 41649 ;;
 41650                           
 41651                           	psect	text334
 41652  00AF1E                     __ptext334:
 41653                           	opt callstack 0
 41654  00AF1E                     _ClearTdiTooLongAlarm:
 41655                           	opt callstack 14
 41656                           
 41657                           ; BSR set to: 2
 41658                           ;incstack = 0
 41659  00AF1E  0E00               	movlw	0
 41660  00AF20  0102               	movlb	2	; () banked
 41661  00AF22  6FA8               	movwf	_tdiTooLongAlarm& (0+255),b
 41662                           
 41663                           ; BSR set to: 2
 41664  00AF24  0012               	return		;funcret
 41665  00AF26                     __end_of_ClearTdiTooLongAlarm:
 41666                           	opt callstack 0
 41667                           
 41668 ;; *************** function _ClearTdeTooLongAlarm *****************
 41669 ;; Defined at:
 41670 ;;		line 287 in file "alarm.c"
 41671 ;; Parameters:    Size  Location     Type
 41672 ;;		None
 41673 ;; Auto vars:     Size  Location     Type
 41674 ;;		None
 41675 ;; Return value:  Size  Location     Type
 41676 ;;                  1    wreg      void 
 41677 ;; Registers used:
 41678 ;;		wreg, status,2
 41679 ;; Tracked objects:
 41680 ;;		On entry : 3C/2
 41681 ;;		On exit  : 3F/2
 41682 ;;		Unchanged: 0/0
 41683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41688 ;;Total ram usage:        0 bytes
 41689 ;; Hardware stack levels used:    1
 41690 ;; This function calls:
 41691 ;;		Nothing
 41692 ;; This function is called by:
 41693 ;;		_ClearAllAlarm
 41694 ;;		_MonitorPressureTask
 41695 ;; This function uses a non-reentrant model
 41696 ;;
 41697                           
 41698                           	psect	text335
 41699  00AF26                     __ptext335:
 41700                           	opt callstack 0
 41701  00AF26                     _ClearTdeTooLongAlarm:
 41702                           	opt callstack 14
 41703                           
 41704                           ; BSR set to: 2
 41705                           ;incstack = 0
 41706  00AF26  0E00               	movlw	0
 41707  00AF28  0102               	movlb	2	; () banked
 41708  00AF2A  6FA7               	movwf	_tdeTooLongAlarm& (0+255),b
 41709                           
 41710                           ; BSR set to: 2
 41711  00AF2C  0012               	return		;funcret
 41712  00AF2E                     __end_of_ClearTdeTooLongAlarm:
 41713                           	opt callstack 0
 41714                           
 41715 ;; *************** function _ClearHighPressureAlarmLow *****************
 41716 ;; Defined at:
 41717 ;;		line 276 in file "alarm.c"
 41718 ;; Parameters:    Size  Location     Type
 41719 ;;		None
 41720 ;; Auto vars:     Size  Location     Type
 41721 ;;		None
 41722 ;; Return value:  Size  Location     Type
 41723 ;;                  1    wreg      void 
 41724 ;; Registers used:
 41725 ;;		wreg, status,2
 41726 ;; Tracked objects:
 41727 ;;		On entry : 3F/2
 41728 ;;		On exit  : 3F/2
 41729 ;;		Unchanged: 0/0
 41730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41735 ;;Total ram usage:        0 bytes
 41736 ;; Hardware stack levels used:    1
 41737 ;; This function calls:
 41738 ;;		Nothing
 41739 ;; This function is called by:
 41740 ;;		_ClearAllAlarm
 41741 ;; This function uses a non-reentrant model
 41742 ;;
 41743                           
 41744                           	psect	text336
 41745  00AFBA                     __ptext336:
 41746                           	opt callstack 0
 41747  00AFBA                     _ClearHighPressureAlarmLow:
 41748                           	opt callstack 11
 41749                           
 41750                           ; BSR set to: 2
 41751                           
 41752                           ; BSR set to: 2
 41753                           ;incstack = 0
 41754  00AFBA  0E00               	movlw	0
 41755  00AFBC  6FAE               	movwf	_highPressureAlarmLow& (0+255),b
 41756                           
 41757                           ; BSR set to: 2
 41758  00AFBE  0012               	return		;funcret
 41759  00AFC0                     __end_of_ClearHighPressureAlarmLow:
 41760                           	opt callstack 0
 41761                           
 41762 ;; *************** function _I2C2_SlaveSetCounter *****************
 41763 ;; Defined at:
 41764 ;;		line 418 in file "mcc_generated_files/i2c2_slave.c"
 41765 ;; Parameters:    Size  Location     Type
 41766 ;;  counter         1    wreg     unsigned char 
 41767 ;; Auto vars:     Size  Location     Type
 41768 ;;  counter         1    0[COMRAM] unsigned char 
 41769 ;; Return value:  Size  Location     Type
 41770 ;;                  1    wreg      void 
 41771 ;; Registers used:
 41772 ;;		wreg
 41773 ;; Tracked objects:
 41774 ;;		On entry : 3F/3D
 41775 ;;		On exit  : 0/0
 41776 ;;		Unchanged: 0/0
 41777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41782 ;;Total ram usage:        1 bytes
 41783 ;; Hardware stack levels used:    1
 41784 ;; This function calls:
 41785 ;;		Nothing
 41786 ;; This function is called by:
 41787 ;;		_I2C2_Isr
 41788 ;; This function uses a non-reentrant model
 41789 ;;
 41790                           
 41791                           	psect	text337
 41792  00ADF8                     __ptext337:
 41793                           	opt callstack 0
 41794  00ADF8                     _I2C2_SlaveSetCounter:
 41795                           	opt callstack 15
 41796                           
 41797                           ; BSR set to: 2
 41798                           ;incstack = 0
 41799                           ;I2C2_SlaveSetCounter@counter stored from wreg
 41800  00ADF8  6E01               	movwf	I2C2_SlaveSetCounter@counter^0,c
 41801                           
 41802                           ;mcc_generated_files/i2c2_slave.c: 418: static __attribute__((inline)) void I2C2_SlaveSe
      +                          tCounter(uint8_t counter);mcc_generated_files/i2c2_slave.c: 419: {;mcc_generated_files/i
      +                          2c2_slave.c: 420:     I2C2CNT = counter;
 41803  00ADFA  0060  F007  FD56   	movff	I2C2_SlaveSetCounter@counter,15702	;volatile
 41804  00AE00  0012               	return		;funcret
 41805  00AE02                     __end_of_I2C2_SlaveSetCounter:
 41806                           	opt callstack 0
 41807                           
 41808 ;; *************** function _I2C2_SlaveReleaseClock *****************
 41809 ;; Defined at:
 41810 ;;		line 423 in file "mcc_generated_files/i2c2_slave.c"
 41811 ;; Parameters:    Size  Location     Type
 41812 ;;		None
 41813 ;; Auto vars:     Size  Location     Type
 41814 ;;		None
 41815 ;; Return value:  Size  Location     Type
 41816 ;;                  1    wreg      void 
 41817 ;; Registers used:
 41818 ;;		None
 41819 ;; Tracked objects:
 41820 ;;		On entry : 0/2
 41821 ;;		On exit  : 3F/3D
 41822 ;;		Unchanged: 0/0
 41823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41828 ;;Total ram usage:        0 bytes
 41829 ;; Hardware stack levels used:    1
 41830 ;; This function calls:
 41831 ;;		Nothing
 41832 ;; This function is called by:
 41833 ;;		_I2C2_Isr
 41834 ;; This function uses a non-reentrant model
 41835 ;;
 41836                           
 41837                           	psect	text338
 41838  00AFC0                     __ptext338:
 41839                           	opt callstack 0
 41840  00AFC0                     _I2C2_SlaveReleaseClock:
 41841                           	opt callstack 15
 41842                           
 41843                           ;mcc_generated_files/i2c2_slave.c: 425:     I2C2CON0bits.CSTR = 0;
 41844                           
 41845                           ;incstack = 0
 41846  00AFC0  013D               	movlb	61	; () banked
 41847  00AFC2  995D               	bcf	93,4,b	;volatile
 41848                           
 41849                           ; BSR set to: 61
 41850  00AFC4  0012               	return		;funcret
 41851  00AFC6                     __end_of_I2C2_SlaveReleaseClock:
 41852                           	opt callstack 0
 41853                           
 41854 ;; *************** function _I2C2_SlaveRdCallBack *****************
 41855 ;; Defined at:
 41856 ;;		line 239 in file "mcc_generated_files/i2c2_slave.c"
 41857 ;; Parameters:    Size  Location     Type
 41858 ;;		None
 41859 ;; Auto vars:     Size  Location     Type
 41860 ;;		None
 41861 ;; Return value:  Size  Location     Type
 41862 ;;                  1    wreg      void 
 41863 ;; Registers used:
 41864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 41865 ;; Tracked objects:
 41866 ;;		On entry : 3F/3D
 41867 ;;		On exit  : 0/0
 41868 ;;		Unchanged: 0/0
 41869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41874 ;;Total ram usage:        0 bytes
 41875 ;; Hardware stack levels used:    1
 41876 ;; Hardware stack levels required when called:    3
 41877 ;; This function calls:
 41878 ;;		Absolute function
 41879 ;;		_I2C2_SlaveDefRdInterruptHandler
 41880 ;;		_ReceiveHandler
 41881 ;; This function is called by:
 41882 ;;		_I2C2_Isr
 41883 ;; This function uses a non-reentrant model
 41884 ;;
 41885                           
 41886                           	psect	text339
 41887  00A81A                     __ptext339:
 41888                           	opt callstack 0
 41889  00A81A                     _I2C2_SlaveRdCallBack:
 41890                           	opt callstack 12
 41891                           
 41892                           ; BSR set to: 61
 41893                           ;mcc_generated_files/i2c2_slave.c: 241:     if (I2C2_SlaveRdInterruptHandler)
 41894                           
 41895                           ; BSR set to: 61
 41896                           ;incstack = 0
 41897  00A81A  0102               	movlb	2	; () banked
 41898  00A81C  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41899  00A81E  1197               	iorwf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41900  00A820  B4D8               	btfsc	status,2,c
 41901  00A822  0012               	return	
 41902                           
 41903                           ; BSR set to: 2
 41904                           ;mcc_generated_files/i2c2_slave.c: 242:     {;mcc_generated_files/i2c2_slave.c: 243:    
      +                               I2C2_SlaveRdInterruptHandler();
 41905  00A824  D801               	call	i2u1973_48
 41906  00A826  0012               	return	
 41907  00A828                     i2u1973_48:
 41908  00A828  0005               	push	
 41909  00A82A  6EFA               	movwf	pclath,c
 41910  00A82C  5196               	movf	_I2C2_SlaveRdInterruptHandler& (0+255),w,b
 41911  00A82E  6EFD               	movwf	tosl,c
 41912  00A830  5197               	movf	(_I2C2_SlaveRdInterruptHandler+1)& (0+255),w,b
 41913  00A832  6EFE               	movwf	tosh,c
 41914  00A834  6AFF               	clrf	tosu,c
 41915  00A836  50FA               	movf	pclath,w,c
 41916  00A838  0012               	return		;indir
 41917  00A83A                     __end_of_I2C2_SlaveRdCallBack:
 41918                           	opt callstack 0
 41919                           
 41920 ;; *************** function _I2C2_SlaveDefRdInterruptHandler *****************
 41921 ;; Defined at:
 41922 ;;		line 247 in file "mcc_generated_files/i2c2_slave.c"
 41923 ;; Parameters:    Size  Location     Type
 41924 ;;		None
 41925 ;; Auto vars:     Size  Location     Type
 41926 ;;		None
 41927 ;; Return value:  Size  Location     Type
 41928 ;;                  1    wreg      void 
 41929 ;; Registers used:
 41930 ;;		wreg, status,2, cstack
 41931 ;; Tracked objects:
 41932 ;;		On entry : 3F/2
 41933 ;;		On exit  : 3F/2
 41934 ;;		Unchanged: 0/0
 41935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41940 ;;Total ram usage:        0 bytes
 41941 ;; Hardware stack levels used:    1
 41942 ;; Hardware stack levels required when called:    1
 41943 ;; This function calls:
 41944 ;;		_I2C2_SlaveGetRxData
 41945 ;; This function is called by:
 41946 ;;		_I2C2_Open
 41947 ;;		_I2C2_SlaveRdCallBack
 41948 ;; This function uses a non-reentrant model
 41949 ;;
 41950                           
 41951                           	psect	text340
 41952  00AE02                     __ptext340:
 41953                           	opt callstack 0
 41954  00AE02                     _I2C2_SlaveDefRdInterruptHandler:
 41955                           	opt callstack 13
 41956                           
 41957                           ; BSR set to: 2
 41958                           ;mcc_generated_files/i2c2_slave.c: 248:     i2c2RdData = I2C2_SlaveGetRxData();
 41959                           
 41960                           ;incstack = 0
 41961  00AE02  ECE6  F057         	call	_I2C2_SlaveGetRxData	;wreg free
 41962  00AE06  0102               	movlb	2	; () banked
 41963  00AE08  6FB6               	movwf	_i2c2RdData& (0+255),b	;volatile
 41964                           
 41965                           ; BSR set to: 2
 41966  00AE0A  0012               	return		;funcret
 41967  00AE0C                     __end_of_I2C2_SlaveDefRdInterruptHandler:
 41968                           	opt callstack 0
 41969                           
 41970 ;; *************** function _ReceiveHandler *****************
 41971 ;; Defined at:
 41972 ;;		line 136 in file "controller.c"
 41973 ;; Parameters:    Size  Location     Type
 41974 ;;		None
 41975 ;; Auto vars:     Size  Location     Type
 41976 ;;  data            1    3[COMRAM] unsigned char 
 41977 ;;  stat1           1    0        unsigned char 
 41978 ;;  stat0           1    0        unsigned char 
 41979 ;;  addr            1    0        unsigned char 
 41980 ;; Return value:  Size  Location     Type
 41981 ;;                  1    wreg      void 
 41982 ;; Registers used:
 41983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41984 ;; Tracked objects:
 41985 ;;		On entry : 3D/0
 41986 ;;		On exit  : 0/0
 41987 ;;		Unchanged: 0/0
 41988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41990 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41993 ;;Total ram usage:        4 bytes
 41994 ;; Hardware stack levels used:    1
 41995 ;; Hardware stack levels required when called:    2
 41996 ;; This function calls:
 41997 ;;		_I2C2_Read
 41998 ;; This function is called by:
 41999 ;;		_StopHandler
 42000 ;;		_ControllerInit
 42001 ;;		_I2C2_SlaveRdCallBack
 42002 ;; This function uses a non-reentrant model
 42003 ;;
 42004                           
 42005                           	psect	text341
 42006  009B06                     __ptext341:
 42007                           	opt callstack 0
 42008  009B06                     _ReceiveHandler:
 42009                           	opt callstack 11
 42010                           
 42011                           ; BSR set to: 2
 42012                           ;incstack = 0
 42013  009B06  013D               	movlb	61	; () banked
 42014  009B08  5161               	movf	97,w,b	;volatile
 42015  009B0A  5162               	movf	98,w,b	;volatile
 42016  009B0C  5157               	movf	87,w,b	;volatile
 42017                           
 42018                           ;controller.c: 147:     if (!I2C2STAT1bits.RXBF) return;
 42019  009B0E  A162               	btfss	98,0,b	;volatile
 42020  009B10  0012               	return	
 42021  009B12  D017               	goto	i2l19190
 42022  009B14                     i2l19182:
 42023                           
 42024                           ; BSR set to: 61
 42025                           ;controller.c: 152:         data = I2C2_Read();
 42026  009B14  ECE3  F057         	call	_I2C2_Read	;wreg free
 42027  009B18  6E04               	movwf	ReceiveHandler@data^0,c
 42028                           
 42029                           ; BSR set to: 61
 42030                           ;controller.c: 153:         if (cntByte<10) msg.controllerMsg[cntByte] = data;
 42031  009B1A  0100               	movlb	0	; () banked
 42032  009B1C  BFCD               	btfsc	(_cntByte+1)& (0+255),7,b
 42033  009B1E  D006               	goto	i2u1899_40
 42034  009B20  51CD               	movf	(_cntByte+1)& (0+255),w,b
 42035  009B22  E10D               	bnz	i2l19188
 42036  009B24  0E0A               	movlw	10
 42037  009B26  5DCC               	subwf	_cntByte& (0+255),w,b
 42038  009B28  B0D8               	btfsc	status,0,c
 42039  009B2A  D009               	goto	i2l19188
 42040  009B2C                     i2u1899_40:
 42041                           
 42042                           ; BSR set to: 0
 42043  009B2C  0E00               	movlw	low _msg
 42044  009B2E  25CC               	addwf	_cntByte& (0+255),w,b
 42045  009B30  6ED9               	movwf	fsr2l,c
 42046  009B32  0E02               	movlw	high _msg
 42047  009B34  21CD               	addwfc	(_cntByte+1)& (0+255),w,b
 42048  009B36  6EDA               	movwf	fsr2h,c
 42049  009B38  0060  F013  FFDF   	movff	ReceiveHandler@data,indf2
 42050  009B3E                     i2l19188:
 42051                           
 42052                           ; BSR set to: 0
 42053                           ;controller.c: 154:         cntByte++;
 42054  009B3E  4BCC               	infsnz	_cntByte& (0+255),f,b
 42055  009B40  2BCD               	incf	(_cntByte+1)& (0+255),f,b
 42056  009B42                     i2l19190:
 42057                           
 42058                           ;controller.c: 148:     while (I2C2STAT1bits.RXBF) {
 42059  009B42  013D               	movlb	61	; () banked
 42060  009B44  B162               	btfsc	98,0,b	;volatile
 42061  009B46  D7E6               	goto	i2l19182
 42062                           
 42063                           ; BSR set to: 61
 42064                           ;controller.c: 157:     commandReceived = 1;
 42065  009B48  0E01               	movlw	1
 42066  009B4A  0102               	movlb	2	; () banked
 42067  009B4C  6F9B               	movwf	_commandReceived& (0+255),b
 42068  009B4E  0012               	return		;funcret
 42069  009B50                     __end_of_ReceiveHandler:
 42070                           	opt callstack 0
 42071                           
 42072 ;; *************** function _I2C2_Read *****************
 42073 ;; Defined at:
 42074 ;;		line 149 in file "mcc_generated_files/i2c2_slave.c"
 42075 ;; Parameters:    Size  Location     Type
 42076 ;;		None
 42077 ;; Auto vars:     Size  Location     Type
 42078 ;;		None
 42079 ;; Return value:  Size  Location     Type
 42080 ;;                  1    wreg      unsigned char 
 42081 ;; Registers used:
 42082 ;;		wreg, status,2, cstack
 42083 ;; Tracked objects:
 42084 ;;		On entry : 0/3D
 42085 ;;		On exit  : 3F/3D
 42086 ;;		Unchanged: 0/0
 42087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42092 ;;Total ram usage:        0 bytes
 42093 ;; Hardware stack levels used:    1
 42094 ;; Hardware stack levels required when called:    1
 42095 ;; This function calls:
 42096 ;;		_I2C2_SlaveGetRxData
 42097 ;; This function is called by:
 42098 ;;		_ReceiveHandler
 42099 ;; This function uses a non-reentrant model
 42100 ;;
 42101                           
 42102                           	psect	text342
 42103  00AFC6                     __ptext342:
 42104                           	opt callstack 0
 42105  00AFC6                     _I2C2_Read:
 42106                           	opt callstack 11
 42107                           
 42108                           ;mcc_generated_files/i2c2_slave.c: 151:    return I2C2_SlaveGetRxData();
 42109                           
 42110                           ;incstack = 0
 42111  00AFC6  ECE6  F057         	call	_I2C2_SlaveGetRxData	;wreg free
 42112                           
 42113                           ; BSR set to: 61
 42114  00AFCA  0012               	return		;funcret
 42115  00AFCC                     __end_of_I2C2_Read:
 42116                           	opt callstack 0
 42117                           
 42118 ;; *************** function _I2C2_SlaveGetRxData *****************
 42119 ;; Defined at:
 42120 ;;		line 453 in file "mcc_generated_files/i2c2_slave.c"
 42121 ;; Parameters:    Size  Location     Type
 42122 ;;		None
 42123 ;; Auto vars:     Size  Location     Type
 42124 ;;		None
 42125 ;; Return value:  Size  Location     Type
 42126 ;;                  1    wreg      unsigned char 
 42127 ;; Registers used:
 42128 ;;		wreg, status,2
 42129 ;; Tracked objects:
 42130 ;;		On entry : 0/3D
 42131 ;;		On exit  : 3F/3D
 42132 ;;		Unchanged: 0/0
 42133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42138 ;;Total ram usage:        0 bytes
 42139 ;; Hardware stack levels used:    1
 42140 ;; This function calls:
 42141 ;;		Nothing
 42142 ;; This function is called by:
 42143 ;;		_I2C2_Read
 42144 ;;		_I2C2_SlaveDefRdInterruptHandler
 42145 ;; This function uses a non-reentrant model
 42146 ;;
 42147                           
 42148                           	psect	text343
 42149  00AFCC                     __ptext343:
 42150                           	opt callstack 0
 42151  00AFCC                     _I2C2_SlaveGetRxData:
 42152                           	opt callstack 11
 42153                           
 42154                           ;mcc_generated_files/i2c2_slave.c: 455:     return I2C2RXB;
 42155                           
 42156                           ; BSR set to: 61
 42157                           ;incstack = 0
 42158  00AFCC  013D               	movlb	61	; () banked
 42159  00AFCE  5154               	movf	84,w,b	;volatile
 42160                           
 42161                           ; BSR set to: 61
 42162  00AFD0  0012               	return		;funcret
 42163  00AFD2                     __end_of_I2C2_SlaveGetRxData:
 42164                           	opt callstack 0
 42165                           
 42166 ;; *************** function _I2C2_SlaveIsRxBufFull *****************
 42167 ;; Defined at:
 42168 ;;		line 443 in file "mcc_generated_files/i2c2_slave.c"
 42169 ;; Parameters:    Size  Location     Type
 42170 ;;		None
 42171 ;; Auto vars:     Size  Location     Type
 42172 ;;		None
 42173 ;; Return value:  Size  Location     Type
 42174 ;;                  1    wreg      _Bool 
 42175 ;; Registers used:
 42176 ;;		wreg
 42177 ;; Tracked objects:
 42178 ;;		On entry : 4/2
 42179 ;;		On exit  : 3F/3D
 42180 ;;		Unchanged: 0/0
 42181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42186 ;;Total ram usage:        0 bytes
 42187 ;; Hardware stack levels used:    1
 42188 ;; This function calls:
 42189 ;;		Nothing
 42190 ;; This function is called by:
 42191 ;;		_I2C2_Isr
 42192 ;; This function uses a non-reentrant model
 42193 ;;
 42194                           
 42195                           	psect	text344
 42196  00AD1E                     __ptext344:
 42197                           	opt callstack 0
 42198  00AD1E                     _I2C2_SlaveIsRxBufFull:
 42199                           	opt callstack 15
 42200                           
 42201                           ;mcc_generated_files/i2c2_slave.c: 445:     return I2C2STAT1bits.RXBF;
 42202                           
 42203                           ; BSR set to: 61
 42204                           ;incstack = 0
 42205  00AD1E  013D               	movlb	61	; () banked
 42206  00AD20  A162               	btfss	98,0,b	;volatile
 42207  00AD22  D002               	goto	i2u1217_40
 42208  00AD24  0E01               	movlw	1
 42209  00AD26  0012               	return	
 42210  00AD28                     i2u1217_40:
 42211  00AD28  0E00               	movlw	0
 42212                           
 42213                           ; BSR set to: 61
 42214  00AD2A  0012               	return		;funcret
 42215  00AD2C                     __end_of_I2C2_SlaveIsRxBufFull:
 42216                           	opt callstack 0
 42217                           
 42218 ;; *************** function _I2C2_SlaveClearStopFlag *****************
 42219 ;; Defined at:
 42220 ;;		line 398 in file "mcc_generated_files/i2c2_slave.c"
 42221 ;; Parameters:    Size  Location     Type
 42222 ;;		None
 42223 ;; Auto vars:     Size  Location     Type
 42224 ;;		None
 42225 ;; Return value:  Size  Location     Type
 42226 ;;                  1    wreg      void 
 42227 ;; Registers used:
 42228 ;;		None
 42229 ;; Tracked objects:
 42230 ;;		On entry : 3F/3D
 42231 ;;		On exit  : 3F/3D
 42232 ;;		Unchanged: 0/0
 42233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42238 ;;Total ram usage:        0 bytes
 42239 ;; Hardware stack levels used:    1
 42240 ;; This function calls:
 42241 ;;		Nothing
 42242 ;; This function is called by:
 42243 ;;		_I2C2_Isr
 42244 ;; This function uses a non-reentrant model
 42245 ;;
 42246                           
 42247                           	psect	text345
 42248  00B044                     __ptext345:
 42249                           	opt callstack 0
 42250  00B044                     _I2C2_SlaveClearStopFlag:
 42251                           	opt callstack 15
 42252                           
 42253                           ; BSR set to: 61
 42254                           ;mcc_generated_files/i2c2_slave.c: 400:     I2C2PIRbits.PCIF = 0;
 42255                           
 42256                           ; BSR set to: 61
 42257                           ;incstack = 0
 42258  00B044  9563               	bcf	99,2,b	;volatile
 42259                           
 42260                           ; BSR set to: 61
 42261  00B046  0012               	return		;funcret
 42262  00B048                     __end_of_I2C2_SlaveClearStopFlag:
 42263                           	opt callstack 0
 42264                           
 42265 ;; *************** function _I2C2_SlaveClearBuff *****************
 42266 ;; Defined at:
 42267 ;;		line 408 in file "mcc_generated_files/i2c2_slave.c"
 42268 ;; Parameters:    Size  Location     Type
 42269 ;;		None
 42270 ;; Auto vars:     Size  Location     Type
 42271 ;;		None
 42272 ;; Return value:  Size  Location     Type
 42273 ;;                  1    wreg      void 
 42274 ;; Registers used:
 42275 ;;		None
 42276 ;; Tracked objects:
 42277 ;;		On entry : 3F/3D
 42278 ;;		On exit  : 3F/3D
 42279 ;;		Unchanged: 0/0
 42280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42285 ;;Total ram usage:        0 bytes
 42286 ;; Hardware stack levels used:    1
 42287 ;; This function calls:
 42288 ;;		Nothing
 42289 ;; This function is called by:
 42290 ;;		_I2C2_Isr
 42291 ;; This function uses a non-reentrant model
 42292 ;;
 42293                           
 42294                           	psect	text346
 42295  00B048                     __ptext346:
 42296                           	opt callstack 0
 42297  00B048                     _I2C2_SlaveClearBuff:
 42298                           	opt callstack 15
 42299                           
 42300                           ; BSR set to: 61
 42301                           ;mcc_generated_files/i2c2_slave.c: 410:     I2C2STAT1bits.CLRBF = 1;
 42302                           
 42303                           ; BSR set to: 61
 42304                           ;incstack = 0
 42305  00B048  8562               	bsf	98,2,b	;volatile
 42306                           
 42307                           ; BSR set to: 61
 42308  00B04A  0012               	return		;funcret
 42309  00B04C                     __end_of_I2C2_SlaveClearBuff:
 42310                           	opt callstack 0
 42311                           
 42312 ;; *************** function _CMP1_ISR *****************
 42313 ;; Defined at:
 42314 ;;		line 110 in file "mcc_generated_files/cmp1.c"
 42315 ;; Parameters:    Size  Location     Type
 42316 ;;		None
 42317 ;; Auto vars:     Size  Location     Type
 42318 ;;		None
 42319 ;; Return value:  Size  Location     Type
 42320 ;;                  1    wreg      void 
 42321 ;; Registers used:
 42322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42323 ;; Tracked objects:
 42324 ;;		On entry : 3F/39
 42325 ;;		On exit  : 0/0
 42326 ;;		Unchanged: 0/0
 42327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42332 ;;Total ram usage:        0 bytes
 42333 ;; Hardware stack levels used:    1
 42334 ;; Hardware stack levels required when called:   10
 42335 ;; This function calls:
 42336 ;;		Absolute function
 42337 ;;		_BuzzerCMPHandler
 42338 ;; This function is called by:
 42339 ;;		_INTERRUPT_InterruptManager
 42340 ;; This function uses a non-reentrant model
 42341 ;;
 42342                           
 42343                           	psect	text347
 42344  00A6B6                     __ptext347:
 42345                           	opt callstack 0
 42346  00A6B6                     _CMP1_ISR:
 42347                           	opt callstack 6
 42348                           
 42349                           ; BSR set to: 57
 42350                           ;mcc_generated_files/cmp1.c: 113:     PIR1bits.C1IF = 0;
 42351                           
 42352                           ; BSR set to: 61
 42353                           ;incstack = 0
 42354  00A6B6  99A1               	bcf	161,4,b	;volatile
 42355                           
 42356                           ; BSR set to: 57
 42357                           ;mcc_generated_files/cmp1.c: 115:     if (CMP1_InterruptHandler) CMP1_InterruptHandler()
      +                          ;
 42358  00A6B8  0102               	movlb	2	; () banked
 42359  00A6BA  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 42360  00A6BC  118B               	iorwf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 42361  00A6BE  B4D8               	btfsc	status,2,c
 42362  00A6C0  0012               	return	
 42363                           
 42364                           ; BSR set to: 2
 42365  00A6C2  D801               	call	i2u2152_48
 42366  00A6C4  0012               	return	
 42367  00A6C6                     i2u2152_48:
 42368  00A6C6  0005               	push	
 42369  00A6C8  6EFA               	movwf	pclath,c
 42370  00A6CA  518A               	movf	_CMP1_InterruptHandler& (0+255),w,b
 42371  00A6CC  6EFD               	movwf	tosl,c
 42372  00A6CE  518B               	movf	(_CMP1_InterruptHandler+1)& (0+255),w,b
 42373  00A6D0  6EFE               	movwf	tosh,c
 42374  00A6D2  6AFF               	clrf	tosu,c
 42375  00A6D4  50FA               	movf	pclath,w,c
 42376  00A6D6  0012               	return		;indir
 42377  00A6D8                     __end_of_CMP1_ISR:
 42378                           	opt callstack 0
 42379                           
 42380 ;; *************** function _BuzzerCMPHandler *****************
 42381 ;; Defined at:
 42382 ;;		line 393 in file "buzzer.c"
 42383 ;; Parameters:    Size  Location     Type
 42384 ;;		None
 42385 ;; Auto vars:     Size  Location     Type
 42386 ;;		None
 42387 ;; Return value:  Size  Location     Type
 42388 ;;                  1    wreg      void 
 42389 ;; Registers used:
 42390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42391 ;; Tracked objects:
 42392 ;;		On entry : 3F/2
 42393 ;;		On exit  : 3F/39
 42394 ;;		Unchanged: 0/0
 42395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42400 ;;Total ram usage:        0 bytes
 42401 ;; Hardware stack levels used:    1
 42402 ;; Hardware stack levels required when called:    9
 42403 ;; This function calls:
 42404 ;;		i2_CMP1_Disable
 42405 ;;		i2_printf
 42406 ;; This function is called by:
 42407 ;;		_BuzzerInit
 42408 ;;		_CMP1_ISR
 42409 ;; This function uses a non-reentrant model
 42410 ;;
 42411                           
 42412                           	psect	text348
 42413  00A550                     __ptext348:
 42414                           	opt callstack 0
 42415  00A550                     _BuzzerCMPHandler:
 42416                           	opt callstack 6
 42417                           
 42418                           ; BSR set to: 2
 42419                           ;buzzer.c: 395:     if (checkController) {
 42420                           
 42421                           ;incstack = 0
 42422  00A550  51B2               	movf	_checkController& (0+255),w,b
 42423  00A552  B4D8               	btfsc	status,2,c
 42424  00A554  D00A               	goto	i2l20768
 42425                           
 42426                           ; BSR set to: 2
 42427                           ;buzzer.c: 396:         printf("BCMPH_Cnt\r\n");
 42428  00A556  0E9C               	movlw	low STR_19
 42429  00A558  0100               	movlb	0	; () banked
 42430  00A55A  6F77               	movwf	i2printf@fmt& (0+255),b
 42431  00A55C  0EFF               	movlw	high STR_19
 42432  00A55E  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 42433  00A560  ECBB  F052         	call	i2_printf	;wreg free
 42434                           
 42435                           ; BSR set to: 2
 42436                           ;buzzer.c: 397:         controllerDetected = 1;
 42437  00A564  0E01               	movlw	1
 42438  00A566  6FB1               	movwf	_controllerDetected& (0+255),b
 42439                           
 42440                           ;buzzer.c: 398:     } else {
 42441  00A568  D003               	goto	i2l20770
 42442  00A56A                     i2l20768:
 42443                           
 42444                           ; BSR set to: 2
 42445                           ;buzzer.c: 399:         detected = 1;
 42446  00A56A  0E01               	movlw	1
 42447  00A56C  0100               	movlb	0	; () banked
 42448  00A56E  6FF4               	movwf	_detected& (0+255),b
 42449  00A570                     i2l20770:
 42450                           
 42451                           ;buzzer.c: 401:     CMP1_Disable();
 42452  00A570  EC97  F057         	call	i2_CMP1_Disable	;wreg free
 42453                           
 42454                           ; BSR set to: 57
 42455  00A574  0012               	return		;funcret
 42456  00A576                     __end_of_BuzzerCMPHandler:
 42457                           	opt callstack 0
 42458                           
 42459 ;; *************** function i2_CMP1_Disable *****************
 42460 ;; Defined at:
 42461 ;;		line 98 in file "mcc_generated_files/cmp1.c"
 42462 ;; Parameters:    Size  Location     Type
 42463 ;;		None
 42464 ;; Auto vars:     Size  Location     Type
 42465 ;;		None
 42466 ;; Return value:  Size  Location     Type
 42467 ;;                  1    wreg      void 
 42468 ;; Registers used:
 42469 ;;		None
 42470 ;; Tracked objects:
 42471 ;;		On entry : 3D/0
 42472 ;;		On exit  : 3F/39
 42473 ;;		Unchanged: 0/0
 42474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42479 ;;Total ram usage:        0 bytes
 42480 ;; Hardware stack levels used:    1
 42481 ;; This function calls:
 42482 ;;		Nothing
 42483 ;; This function is called by:
 42484 ;;		_BuzzerCMPHandler
 42485 ;;		i2_BuzzerOff
 42486 ;; This function uses a non-reentrant model
 42487 ;;
 42488                           
 42489                           	psect	text349
 42490  00AF2E                     __ptext349:
 42491                           	opt callstack 0
 42492  00AF2E                     i2_CMP1_Disable:
 42493                           	opt callstack 13
 42494                           
 42495                           ;mcc_generated_files/cmp1.c: 100:     PIE1bits.C1IE = 0;
 42496                           
 42497                           ; BSR set to: 57
 42498                           ;incstack = 0
 42499  00AF2E  0139               	movlb	57	; () banked
 42500  00AF30  9991               	bcf	145,4,b	;volatile
 42501                           
 42502                           ;mcc_generated_files/cmp1.c: 101:     PIR1bits.C1IF = 0;
 42503  00AF32  99A1               	bcf	161,4,b	;volatile
 42504                           
 42505                           ; BSR set to: 57
 42506  00AF34  0012               	return		;funcret
 42507  00AF36                     __end_ofi2_CMP1_Disable:
 42508                           	opt callstack 0
 42509                           
 42510 ;; *************** function _ADCC_ISR *****************
 42511 ;; Defined at:
 42512 ;;		line 306 in file "mcc_generated_files/adcc.c"
 42513 ;; Parameters:    Size  Location     Type
 42514 ;;		None
 42515 ;; Auto vars:     Size  Location     Type
 42516 ;;		None
 42517 ;; Return value:  Size  Location     Type
 42518 ;;                  1    wreg      void 
 42519 ;; Registers used:
 42520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42521 ;; Tracked objects:
 42522 ;;		On entry : 3F/39
 42523 ;;		On exit  : 0/0
 42524 ;;		Unchanged: 0/0
 42525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42530 ;;Total ram usage:        0 bytes
 42531 ;; Hardware stack levels used:    1
 42532 ;; Hardware stack levels required when called:   10
 42533 ;; This function calls:
 42534 ;;		Absolute function
 42535 ;;		_ADCC_DefaultInterruptHandler
 42536 ;;		_AdcHandler
 42537 ;; This function is called by:
 42538 ;;		_INTERRUPT_InterruptManager
 42539 ;; This function uses a non-reentrant model
 42540 ;;
 42541                           
 42542                           	psect	text350
 42543  00A6D8                     __ptext350:
 42544                           	opt callstack 0
 42545  00A6D8                     _ADCC_ISR:
 42546                           	opt callstack 6
 42547                           
 42548                           ; BSR set to: 57
 42549                           ;mcc_generated_files/adcc.c: 309:     PIR1bits.ADIF = 0;
 42550                           
 42551                           ; BSR set to: 57
 42552                           ;incstack = 0
 42553  00A6D8  95A1               	bcf	161,2,b	;volatile
 42554                           
 42555                           ; BSR set to: 57
 42556                           ;mcc_generated_files/adcc.c: 311:     if (ADCC_ADI_InterruptHandler)
 42557  00A6DA  0102               	movlb	2	; () banked
 42558  00A6DC  51F3               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 42559  00A6DE  11F4               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 42560  00A6E0  B4D8               	btfsc	status,2,c
 42561  00A6E2  0012               	return	
 42562                           
 42563                           ; BSR set to: 2
 42564                           ;mcc_generated_files/adcc.c: 312:             ADCC_ADI_InterruptHandler();
 42565  00A6E4  D801               	call	i2u2140_48
 42566  00A6E6  0012               	return	
 42567  00A6E8                     i2u2140_48:
 42568  00A6E8  0005               	push	
 42569  00A6EA  6EFA               	movwf	pclath,c
 42570  00A6EC  51F3               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 42571  00A6EE  6EFD               	movwf	tosl,c
 42572  00A6F0  51F4               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 42573  00A6F2  6EFE               	movwf	tosh,c
 42574  00A6F4  6AFF               	clrf	tosu,c
 42575  00A6F6  50FA               	movf	pclath,w,c
 42576  00A6F8  0012               	return		;indir
 42577  00A6FA                     __end_of_ADCC_ISR:
 42578                           	opt callstack 0
 42579                           
 42580 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 42581 ;; Defined at:
 42582 ;;		line 319 in file "mcc_generated_files/adcc.c"
 42583 ;; Parameters:    Size  Location     Type
 42584 ;;		None
 42585 ;; Auto vars:     Size  Location     Type
 42586 ;;		None
 42587 ;; Return value:  Size  Location     Type
 42588 ;;                  1    wreg      void 
 42589 ;; Registers used:
 42590 ;;		None
 42591 ;; Tracked objects:
 42592 ;;		On entry : 3F/2
 42593 ;;		On exit  : 3F/2
 42594 ;;		Unchanged: 3F/0
 42595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42600 ;;Total ram usage:        0 bytes
 42601 ;; Hardware stack levels used:    1
 42602 ;; This function calls:
 42603 ;;		Nothing
 42604 ;; This function is called by:
 42605 ;;		_ADCC_Initialize
 42606 ;;		i2_ADCC_Initialize
 42607 ;;		_ADCC_ISR
 42608 ;; This function uses a non-reentrant model
 42609 ;;
 42610                           
 42611                           	psect	text351
 42612  00B05C                     __ptext351:
 42613                           	opt callstack 0
 42614  00B05C                     _ADCC_DefaultInterruptHandler:
 42615                           	opt callstack 15
 42616                           
 42617                           ; BSR set to: 2
 42618                           
 42619                           ;incstack = 0
 42620  00B05C  0012               	return		;funcret
 42621  00B05E                     __end_of_ADCC_DefaultInterruptHandler:
 42622                           	opt callstack 0
 42623                           
 42624 ;; *************** function _AdcHandler *****************
 42625 ;; Defined at:
 42626 ;;		line 95 in file "monitor.c"
 42627 ;; Parameters:    Size  Location     Type
 42628 ;;		None
 42629 ;; Auto vars:     Size  Location     Type
 42630 ;;		None
 42631 ;; Return value:  Size  Location     Type
 42632 ;;                  1    wreg      void 
 42633 ;; Registers used:
 42634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42635 ;; Tracked objects:
 42636 ;;		On entry : 3F/2
 42637 ;;		On exit  : 3/2
 42638 ;;		Unchanged: 0/0
 42639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42644 ;;Total ram usage:        0 bytes
 42645 ;; Hardware stack levels used:    1
 42646 ;; Hardware stack levels required when called:    9
 42647 ;; This function calls:
 42648 ;;		_ADCC_GetConversionResult
 42649 ;;		_AdcReady
 42650 ;;		i2_ADCC_Initialize
 42651 ;;		i2_ADCC_StartConversion
 42652 ;;		i2_AdcInit
 42653 ;;		i2___wmul
 42654 ;;		i2_printf
 42655 ;; This function is called by:
 42656 ;;		_AdcInit
 42657 ;;		i2_AdcInit
 42658 ;;		_ADCC_ISR
 42659 ;; This function uses a non-reentrant model
 42660 ;;
 42661                           
 42662                           	psect	text352
 42663  006678                     __ptext352:
 42664                           	opt callstack 0
 42665  006678                     _AdcHandler:
 42666                           	opt callstack 6
 42667                           
 42668                           ; BSR set to: 2
 42669                           ;monitor.c: 96:     static int cnt = 0;;monitor.c: 100:     if (!AdcReady()) {
 42670                           
 42671                           ; BSR set to: 2
 42672                           ;incstack = 0
 42673  006678  ECE9  F057         	call	_AdcReady	;wreg free
 42674  00667C  0900               	iorlw	0
 42675  00667E  A4D8               	btfss	status,2,c
 42676  006680  D010               	goto	i2l21070
 42677                           
 42678                           ; BSR set to: 62
 42679                           ;monitor.c: 101:         printf("EAI: %02X\r\n", ADSTAT);
 42680  006682  0E84               	movlw	low STR_31
 42681  006684  0100               	movlb	0	; () banked
 42682  006686  6F77               	movwf	i2printf@fmt& (0+255),b
 42683  006688  0EFF               	movlw	high STR_31
 42684  00668A  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 42685  00668C  006F FBF0  F079    	movff	16124,?i2_printf+2	;volatile
 42686  006692  6B7A               	clrf	(?i2_printf+3)& (0+255),b
 42687  006694  ECBB  F052         	call	i2_printf	;wreg free
 42688                           
 42689                           ; BSR set to: 2
 42690                           ;monitor.c: 102:         ADCC_Initialize();
 42691  006698  EC8D  F048         	call	i2_ADCC_Initialize	;wreg free
 42692                           
 42693                           ;monitor.c: 103:         AdcInit();
 42694  00669C  ECE7  F047         	call	i2_AdcInit	;wreg free
 42695  0066A0  0012               	return	
 42696  0066A2                     i2l21070:
 42697                           
 42698                           ; BSR set to: 62
 42699                           ;monitor.c: 107:     adcChannels[currentChannel].data = ADCC_GetConversionResult();
 42700  0066A2  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 42701  0066A8  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 42702  0066AE  0E00               	movlw	0
 42703  0066B0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 42704  0066B2  0E05               	movlw	5
 42705  0066B4  6E03               	movwf	i2___wmul@multiplicand^0,c
 42706  0066B6  ECBA  F051         	call	i2___wmul	;wreg free
 42707  0066BA  0EBE               	movlw	low (_adcChannels+2)
 42708  0066BC  2401               	addwf	?i2___wmul^0,w,c
 42709  0066BE  6ED9               	movwf	fsr2l,c
 42710  0066C0  0E02               	movlw	high (_adcChannels+2)
 42711  0066C2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 42712  0066C4  6EDA               	movwf	fsr2h,c
 42713  0066C6  EC15  F055         	call	_ADCC_GetConversionResult	;wreg free
 42714  0066CA  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 42715  0066D0  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 42716                           
 42717                           ;monitor.c: 108:     adcChannels[currentChannel].dataValid = 1;
 42718  0066D6  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 42719  0066DC  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 42720  0066E2  0E00               	movlw	0
 42721  0066E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 42722  0066E6  0E05               	movlw	5
 42723  0066E8  6E03               	movwf	i2___wmul@multiplicand^0,c
 42724  0066EA  ECBA  F051         	call	i2___wmul	;wreg free
 42725  0066EE  0EBD               	movlw	low (_adcChannels+1)
 42726  0066F0  2401               	addwf	?i2___wmul^0,w,c
 42727  0066F2  6ED9               	movwf	fsr2l,c
 42728  0066F4  0E02               	movlw	high (_adcChannels+1)
 42729  0066F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 42730  0066F8  6EDA               	movwf	fsr2h,c
 42731  0066FA  0E01               	movlw	1
 42732  0066FC  6EDF               	movwf	indf2,c
 42733                           
 42734                           ;monitor.c: 111:     if (currentChannel < (4 -1))
 42735  0066FE  0101               	movlb	1	; () banked
 42736  006700  BFEC               	btfsc	(_currentChannel+1)& (0+255),7,b
 42737  006702  D006               	goto	i2u2038_40
 42738  006704  51EC               	movf	(_currentChannel+1)& (0+255),w,b
 42739  006706  E133               	bnz	i2l21082
 42740  006708  0E03               	movlw	3
 42741  00670A  5DEB               	subwf	_currentChannel& (0+255),w,b
 42742  00670C  B0D8               	btfsc	status,0,c
 42743  00670E  D02F               	goto	i2l21082
 42744  006710                     i2u2038_40:
 42745                           
 42746                           ; BSR set to: 1
 42747                           ;monitor.c: 112:     {;monitor.c: 114:         currentChannel++;
 42748  006710  4BEB               	infsnz	_currentChannel& (0+255),f,b
 42749  006712  2BEC               	incf	(_currentChannel+1)& (0+255),f,b
 42750                           
 42751                           ; BSR set to: 1
 42752                           ;monitor.c: 115:         ADCON0bits.ADON = 0;
 42753  006714  013E               	movlb	62	; () banked
 42754  006716  9FF8               	bcf	248,7,b	;volatile
 42755                           
 42756                           ; BSR set to: 62
 42757                           ;monitor.c: 116:         ADREF = adcChannels[currentChannel].ref;
 42758  006718  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 42759  00671E  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 42760  006724  0E00               	movlw	0
 42761  006726  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 42762  006728  0E05               	movlw	5
 42763  00672A  6E03               	movwf	i2___wmul@multiplicand^0,c
 42764  00672C  ECBA  F051         	call	i2___wmul	;wreg free
 42765  006730  0EC0               	movlw	low (_adcChannels+4)
 42766  006732  2401               	addwf	?i2___wmul^0,w,c
 42767  006734  6ED9               	movwf	fsr2l,c
 42768  006736  0E02               	movlw	high (_adcChannels+4)
 42769  006738  2002               	addwfc	(?i2___wmul+1)^0,w,c
 42770  00673A  6EDA               	movwf	fsr2h,c
 42771  00673C  50DF               	movf	indf2,w,c
 42772  00673E  013E               	movlb	62	; () banked
 42773  006740  6FFD               	movwf	253,b	;volatile
 42774                           
 42775                           ; BSR set to: 62
 42776                           ;monitor.c: 117:         ADCC_StartConversion(adcChannels[currentChannel].ch);
 42777  006742  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 42778  006748  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 42779  00674E  0E00               	movlw	0
 42780  006750  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 42781  006752  0E05               	movlw	5
 42782  006754  6E03               	movwf	i2___wmul@multiplicand^0,c
 42783  006756  ECBA  F051         	call	i2___wmul	;wreg free
 42784  00675A  0EBC               	movlw	low _adcChannels
 42785  00675C  2401               	addwf	?i2___wmul^0,w,c
 42786  00675E  6ED9               	movwf	fsr2l,c
 42787  006760  0E02               	movlw	high _adcChannels
 42788  006762  2002               	addwfc	(?i2___wmul+1)^0,w,c
 42789  006764  6EDA               	movwf	fsr2h,c
 42790  006766  50DF               	movf	indf2,w,c
 42791  006768  EC99  F055         	call	i2_ADCC_StartConversion
 42792                           
 42793                           ;monitor.c: 118:     } else {
 42794  00676C  0012               	return	
 42795  00676E                     i2l21082:
 42796                           
 42797                           ; BSR set to: 1
 42798                           ;monitor.c: 120:         currentChannel = 0;
 42799  00676E  0E00               	movlw	0
 42800  006770  6FEC               	movwf	(_currentChannel+1)& (0+255),b
 42801  006772  0E00               	movlw	0
 42802  006774  6FEB               	movwf	_currentChannel& (0+255),b
 42803                           
 42804                           ; BSR set to: 1
 42805                           ;monitor.c: 122:         cnt++;
 42806  006776  0102               	movlb	2	; () banked
 42807  006778  4B6C               	infsnz	AdcHandler@cnt& (0+255),f,b
 42808  00677A  2B6D               	incf	(AdcHandler@cnt+1)& (0+255),f,b
 42809                           
 42810                           ; BSR set to: 2
 42811                           ;monitor.c: 123:         if (cnt>=1000) { cnt = 0; }
 42812  00677C  BF6D               	btfsc	(AdcHandler@cnt+1)& (0+255),7,b
 42813  00677E  D00A               	goto	i2l21090
 42814  006780  0EE8               	movlw	232
 42815  006782  5D6C               	subwf	AdcHandler@cnt& (0+255),w,b
 42816  006784  0E03               	movlw	3
 42817  006786  596D               	subwfb	(AdcHandler@cnt+1)& (0+255),w,b
 42818  006788  A0D8               	btfss	status,0,c
 42819  00678A  D004               	goto	i2l21090
 42820                           
 42821                           ; BSR set to: 2
 42822  00678C  0E00               	movlw	0
 42823  00678E  6F6D               	movwf	(AdcHandler@cnt+1)& (0+255),b
 42824  006790  0E00               	movlw	0
 42825  006792  6F6C               	movwf	AdcHandler@cnt& (0+255),b
 42826  006794                     i2l21090:
 42827                           
 42828                           ; BSR set to: 2
 42829                           ;monitor.c: 124:         if (cnt==0) printf("o\r\n");
 42830  006794  516C               	movf	AdcHandler@cnt& (0+255),w,b
 42831  006796  116D               	iorwf	(AdcHandler@cnt+1)& (0+255),w,b
 42832  006798  A4D8               	btfss	status,2,c
 42833  00679A  0012               	return	
 42834                           
 42835                           ; BSR set to: 2
 42836  00679C  0EE4               	movlw	low STR_32
 42837  00679E  0100               	movlb	0	; () banked
 42838  0067A0  6F77               	movwf	i2printf@fmt& (0+255),b
 42839  0067A2  0EFF               	movlw	high STR_32
 42840  0067A4  6F78               	movwf	(i2printf@fmt+1)& (0+255),b
 42841  0067A6  ECBB  F052         	call	i2_printf	;wreg free
 42842  0067AA  0012               	return		;funcret
 42843  0067AC                     __end_of_AdcHandler:
 42844                           	opt callstack 0
 42845                           
 42846 ;; *************** function i2_printf *****************
 42847 ;; Defined at:
 42848 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 42849 ;; Parameters:    Size  Location     Type
 42850 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 42851 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42852 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42853 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42854 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42855 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42856 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42857 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42858 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42859 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42860 ;;		 -> STR_15(5), STR_14(19), STR_4(45), STR_3(4), 
 42861 ;;		 -> STR_2(15), STR_1(13), 
 42862 ;; Auto vars:     Size  Location     Type
 42863 ;;  printf          2   88[COMRAM] PTR void [1]
 42864 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 42865 ;;  printf          2    0        int 
 42866 ;; Return value:  Size  Location     Type
 42867 ;;                  2   23[BANK0 ] int 
 42868 ;; Registers used:
 42869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42870 ;; Tracked objects:
 42871 ;;		On entry : 0/0
 42872 ;;		On exit  : 3F/2
 42873 ;;		Unchanged: 0/0
 42874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42875 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42878 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42879 ;;Total ram usage:       18 bytes
 42880 ;; Hardware stack levels used:    1
 42881 ;; Hardware stack levels required when called:    8
 42882 ;; This function calls:
 42883 ;;		i2_vfprintf
 42884 ;; This function is called by:
 42885 ;;		_ButtonTask
 42886 ;;		_BuzzerTestHandler
 42887 ;;		_BuzzerCMPHandler
 42888 ;;		_AlarmHandler
 42889 ;;		_AdcHandler
 42890 ;;		_MonitorPressureTask
 42891 ;;		_UpdateState
 42892 ;;		_StopHandler
 42893 ;;		_ControllerTimerHandler
 42894 ;;		i2_BuzzerTask
 42895 ;;		i2_MuteAlarm
 42896 ;;		i2_MonitorDump
 42897 ;;		i2_SetCalibrateState
 42898 ;;		i2_SetAlarmSV1
 42899 ;;		i2_SetSV1
 42900 ;; This function uses a non-reentrant model
 42901 ;;
 42902                           
 42903                           	psect	text353
 42904  00A576                     __ptext353:
 42905                           	opt callstack 0
 42906  00A576                     i2_printf:
 42907                           	opt callstack 6
 42908                           
 42909                           ;incstack = 0
 42910  00A576  0E79               	movlw	low (?i2_printf+2)
 42911  00A578  6E59               	movwf	i2printf@ap^0,c
 42912  00A57A  6A5A               	clrf	(i2printf@ap+1)^0,c
 42913  00A57C  0E00               	movlw	0
 42914  00A57E  6E4F               	movwf	i2vfprintf@fp^0,c
 42915  00A580  0E00               	movlw	0
 42916  00A582  6E50               	movwf	(i2vfprintf@fp+1)^0,c
 42917  00A584  0060  F1DC  F051   	movff	i2printf@fmt,i2vfprintf@fmt
 42918  00A58A  0060  F1E0  F052   	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 42919  00A590  0E59               	movlw	low i2printf@ap
 42920  00A592  6E53               	movwf	i2vfprintf@ap^0,c
 42921  00A594  6A54               	clrf	(i2vfprintf@ap+1)^0,c
 42922  00A596  ECF9  F048         	call	i2_vfprintf	;wreg free
 42923                           
 42924                           ; BSR set to: 2
 42925  00A59A  0012               	return		;funcret
 42926  00A59C                     __end_ofi2_printf:
 42927                           	opt callstack 0
 42928                           
 42929 ;; *************** function i2_vfprintf *****************
 42930 ;; Defined at:
 42931 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 42932 ;; Parameters:    Size  Location     Type
 42933 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
 42934 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 42935 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
 42936 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42937 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42938 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42939 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42940 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42941 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42942 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42943 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42944 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42945 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42946 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42947 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42948 ;;  ap              2   82[COMRAM] PTR PTR void 
 42949 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 42950 ;; Auto vars:     Size  Location     Type
 42951 ;;  vfprintf        2   84[COMRAM] PTR unsigned char 
 42952 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 42953 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 42954 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 42955 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 42956 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 42957 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 42958 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 42959 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 42960 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 42961 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 42962 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 42963 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 42964 ;; Return value:  Size  Location     Type
 42965 ;;                  2   78[COMRAM] int 
 42966 ;; Registers used:
 42967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42968 ;; Tracked objects:
 42969 ;;		On entry : 0/0
 42970 ;;		On exit  : 3F/2
 42971 ;;		Unchanged: 0/0
 42972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42973 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42977 ;;Total ram usage:        8 bytes
 42978 ;; Hardware stack levels used:    1
 42979 ;; Hardware stack levels required when called:    7
 42980 ;; This function calls:
 42981 ;;		i2_vfpfcnvrt
 42982 ;; This function is called by:
 42983 ;;		i2_sprintf
 42984 ;;		i2_printf
 42985 ;; This function uses a non-reentrant model
 42986 ;;
 42987                           
 42988                           	psect	text354
 42989  0091F2                     __ptext354:
 42990                           	opt callstack 0
 42991  0091F2                     i2_vfprintf:
 42992                           	opt callstack 6
 42993                           
 42994                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 42995                           
 42996                           ; BSR set to: 2
 42997                           ;incstack = 0
 42998  0091F2  0060  F144  F055   	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 42999  0091F8  0060  F148  F056   	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 43000                           
 43001                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 43002  0091FE  0E00               	movlw	0
 43003  009200  0102               	movlb	2	; () banked
 43004  009202  6F2B               	movwf	(_nout+1)& (0+255),b
 43005  009204  0E00               	movlw	0
 43006  009206  6F2A               	movwf	_nout& (0+255),b
 43007                           
 43008                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 43009  009208  D016               	goto	i2l17898
 43010  00920A                     i2l17896:
 43011                           
 43012                           ; BSR set to: 2
 43013                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 43014  00920A  0060  F13C  F045   	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 43015  009210  0060  F140  F046   	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 43016  009216  0E55               	movlw	low i2vfprintf@cfmt
 43017  009218  6E47               	movwf	i2vfpfcnvrt@fmt^0,c
 43018  00921A  6A48               	clrf	(i2vfpfcnvrt@fmt+1)^0,c
 43019  00921C  0060  F14C  F049   	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 43020  009222  0060  F150  F04A   	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 43021  009228  EC81  F009         	call	i2_vfpfcnvrt	;wreg free
 43022  00922C  5045               	movf	?i2_vfpfcnvrt^0,w,c
 43023  00922E  0102               	movlb	2	; () banked
 43024  009230  272A               	addwf	_nout& (0+255),f,b
 43025  009232  5046               	movf	(?i2_vfpfcnvrt+1)^0,w,c
 43026  009234  232B               	addwfc	(_nout+1)& (0+255),f,b
 43027  009236                     i2l17898:
 43028                           
 43029                           ; BSR set to: 2
 43030                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 43031  009236  0060  F157  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 43032  00923C  0060  F15B  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 43033  009242                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43034  009242  6AF8               	clrf	tblptru,c
 43035  009244                     	endif
 43036  009244                     	if	0	;tblptru may be non-zero
 43037  009244                     	endif
 43038  009244  0008               	tblrd		*
 43039  009246  50F5               	movf	tablat,w,c
 43040  009248  0900               	iorlw	0
 43041  00924A  A4D8               	btfss	status,2,c
 43042  00924C  D7DE               	goto	i2l17896
 43043                           
 43044                           ; BSR set to: 2
 43045                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 43046  00924E  0060  F8A8  F04F   	movff	_nout,?i2_vfprintf
 43047  009254  0060  F8AC  F050   	movff	_nout+1,?i2_vfprintf+1
 43048                           
 43049                           ; BSR set to: 2
 43050  00925A  0012               	return		;funcret
 43051  00925C                     __end_ofi2_vfprintf:
 43052                           	opt callstack 0
 43053                           
 43054 ;; *************** function i2_vfpfcnvrt *****************
 43055 ;; Defined at:
 43056 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43057 ;; Parameters:    Size  Location     Type
 43058 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
 43059 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43060 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
 43061 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 43062 ;;  ap              2   72[COMRAM] PTR PTR void 
 43063 ;;		 -> i2printf@ap(2), i2sprintf@ap(2), printf@ap(2), sprintf@ap(2), 
 43064 ;; Auto vars:     Size  Location     Type
 43065 ;;  vfpfcnvrt       8    8[BANK0 ] unsigned long long 
 43066 ;;  vfpfcnvrt       8    0[BANK0 ] long long 
 43067 ;;  vfpfcnvrt       4    0        long long 
 43068 ;;  vfpfcnvrt       3    0        PTR void 
 43069 ;;  vfpfcnvrt       3    0        unsigned char [3]
 43070 ;;  vfpfcnvrt       2   18[BANK0 ] int 
 43071 ;;  vfpfcnvrt       2   16[BANK0 ] PTR unsigned char 
 43072 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 43073 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 43074 ;;		 -> alarmData(399), STR_11(3), 
 43075 ;;  vfpfcnvrt       2    0        int 
 43076 ;;  vfpfcnvrt       1   22[BANK0 ] unsigned char 
 43077 ;; Return value:  Size  Location     Type
 43078 ;;                  2   68[COMRAM] int 
 43079 ;; Registers used:
 43080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43081 ;; Tracked objects:
 43082 ;;		On entry : 0/2
 43083 ;;		On exit  : 0/0
 43084 ;;		Unchanged: 0/0
 43085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43086 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43087 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43089 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43090 ;;Total ram usage:       33 bytes
 43091 ;; Hardware stack levels used:    1
 43092 ;; Hardware stack levels required when called:    6
 43093 ;; This function calls:
 43094 ;;		i2_atoi
 43095 ;;		i2_ctoa
 43096 ;;		i2_dtoa
 43097 ;;		i2_fputc
 43098 ;;		i2_isdigit
 43099 ;;		i2_stoa
 43100 ;;		i2_xtoa
 43101 ;; This function is called by:
 43102 ;;		i2_vfprintf
 43103 ;; This function uses a non-reentrant model
 43104 ;;
 43105                           
 43106                           	psect	text355
 43107  001302                     __ptext355:
 43108                           	opt callstack 0
 43109  001302                     i2_vfpfcnvrt:
 43110                           	opt callstack 6
 43111                           
 43112                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 43113                           
 43114                           ; BSR set to: 2
 43115                           ;incstack = 0
 43116  001302  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43117  001308  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43118  00130E  006F FF7B FFF6     	movff	postinc2,tblptrl
 43119  001314  006F FF77 FFF7     	movff	postdec2,tblptrh
 43120  00131A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43121  00131A  6AF8               	clrf	tblptru,c
 43122  00131C                     	endif
 43123  00131C                     	if	0	;tblptru may be non-zero
 43124  00131C                     	endif
 43125  00131C  0008               	tblrd		*
 43126  00131E  50F5               	movf	tablat,w,c
 43127  001320  0A25               	xorlw	37
 43128  001322  A4D8               	btfss	status,2,c
 43129  001324  D2C1               	goto	i2l17632
 43130                           
 43131                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 43132  001326  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43133  00132C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43134  001332  2ADE               	incf	postinc2,f,c
 43135  001334  0E00               	movlw	0
 43136  001336  22DD               	addwfc	postdec2,f,c
 43137                           
 43138                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 43139  001338  0E00               	movlw	0
 43140  00133A  0101               	movlb	1	; () banked
 43141  00133C  6FC8               	movwf	(_width+1)& (0+255),b
 43142  00133E  0E00               	movlw	0
 43143  001340  6FC7               	movwf	_width& (0+255),b
 43144  001342  C1C7  F1CB         	movff	_width,_flags
 43145  001346  C1C8  F1CC         	movff	_width+1,_flags+1
 43146                           
 43147                           ; BSR set to: 1
 43148                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 43149  00134A  69C9               	setf	_prec& (0+255),b
 43150  00134C  69CA               	setf	(_prec+1)& (0+255),b
 43151                           
 43152                           ; BSR set to: 1
 43153                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
 43154  00134E  0E00               	movlw	0
 43155  001350  0100               	movlb	0	; () banked
 43156  001352  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 43157  001354  0E00               	movlw	0
 43158  001356  D01B               	goto	L21
 43159  001358                     i2l17528:
 43160                           
 43161                           ; BSR set to: 0
 43162                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
 43163  001358  0101               	movlb	1	; () banked
 43164  00135A  81CB               	bsf	_flags& (0+255),0,b
 43165  00135C  D00B               	goto	i2l17546
 43166  00135E                     i2l17532:
 43167                           
 43168                           ; BSR set to: 0
 43169                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
 43170  00135E  0101               	movlb	1	; () banked
 43171  001360  83CB               	bsf	_flags& (0+255),1,b
 43172  001362  D008               	goto	i2l17546
 43173  001364                     i2l17536:
 43174                           
 43175                           ; BSR set to: 0
 43176                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
 43177  001364  0101               	movlb	1	; () banked
 43178  001366  85CB               	bsf	_flags& (0+255),2,b
 43179  001368  D005               	goto	i2l17546
 43180  00136A                     i2l17540:
 43181                           
 43182                           ; BSR set to: 0
 43183                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
 43184  00136A  0101               	movlb	1	; () banked
 43185  00136C  87CB               	bsf	_flags& (0+255),3,b
 43186  00136E  D002               	goto	i2l17546
 43187  001370                     i2l17544:
 43188                           
 43189                           ; BSR set to: 0
 43190                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
 43191  001370  0101               	movlb	1	; () banked
 43192  001372  89CB               	bsf	_flags& (0+255),4,b
 43193  001374                     i2l17546:
 43194                           
 43195                           ; BSR set to: 1
 43196                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 709:                
      +                               ++*fmt;
 43197  001374  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43198  00137A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43199  001380  2ADE               	incf	postinc2,f,c
 43200  001382  0E00               	movlw	0
 43201  001384  22DD               	addwfc	postdec2,f,c
 43202                           
 43203                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 710:                
      +                               break;
 43204  001386  D02B               	goto	i2l17554
 43205  001388                     i2l17548:
 43206                           
 43207                           ; BSR set to: 0
 43208                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
 43209  001388  0E00               	movlw	0
 43210  00138A  6F73               	movwf	(i2vfpfcnvrt@done+1)& (0+255),b
 43211  00138C  0E01               	movlw	1
 43212  00138E                     L21:
 43213  00138E  6F72               	movwf	i2vfpfcnvrt@done& (0+255),b
 43214                           
 43215                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
 43216  001390  D026               	goto	i2l17554
 43217  001392                     i2l17552:
 43218                           
 43219                           ; BSR set to: 0
 43220  001392  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43221  001398  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43222  00139E  006F FF7B FFF6     	movff	postinc2,tblptrl
 43223  0013A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 43224  0013AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43225  0013AA  6AF8               	clrf	tblptru,c
 43226  0013AC                     	endif
 43227  0013AC                     	if	0	;tblptru may be non-zero
 43228  0013AC                     	endif
 43229  0013AC  0008               	tblrd		*
 43230  0013AE  50F5               	movf	tablat,w,c
 43231  0013B0  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 43232  0013B2  6A4C               	clrf	(??i2_vfpfcnvrt+1)^0,c
 43233                           
 43234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43235                           ; Switch size 1, requested type "simple"
 43236                           ; Number of cases is 1, Range of values is 0 to 0
 43237                           ; switch strategies available:
 43238                           ; Name         Instructions Cycles
 43239                           ; simple_byte            4     3 (average)
 43240                           ;	Chosen strategy is simple_byte
 43241  0013B4  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 43242  0013B6  0A00               	xorlw	0	; case 0
 43243  0013B8  A4D8               	btfss	status,2,c
 43244  0013BA  D7E6               	goto	i2l17548
 43245                           
 43246                           ; BSR set to: 0
 43247                           ; Switch size 1, requested type "simple"
 43248                           ; Number of cases is 5, Range of values is 32 to 48
 43249                           ; switch strategies available:
 43250                           ; Name         Instructions Cycles
 43251                           ; simple_byte           16     9 (average)
 43252                           ;	Chosen strategy is simple_byte
 43253  0013BC  504B               	movf	??i2_vfpfcnvrt^0,w,c
 43254  0013BE  0A20               	xorlw	32	; case 32
 43255  0013C0  B4D8               	btfsc	status,2,c
 43256  0013C2  D7D3               	goto	i2l17540
 43257  0013C4  0A03               	xorlw	3	; case 35
 43258  0013C6  B4D8               	btfsc	status,2,c
 43259  0013C8  D7D3               	goto	i2l17544
 43260  0013CA  0A08               	xorlw	8	; case 43
 43261  0013CC  B4D8               	btfsc	status,2,c
 43262  0013CE  D7CA               	goto	i2l17536
 43263  0013D0  0A06               	xorlw	6	; case 45
 43264  0013D2  B4D8               	btfsc	status,2,c
 43265  0013D4  D7C1               	goto	i2l17528
 43266  0013D6  0A1D               	xorlw	29	; case 48
 43267  0013D8  B4D8               	btfsc	status,2,c
 43268  0013DA  D7C1               	goto	i2l17532
 43269  0013DC  D7D5               	goto	i2l17548
 43270  0013DE                     i2l17554:
 43271                           
 43272                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
 43273  0013DE  0100               	movlb	0	; () banked
 43274  0013E0  5172               	movf	i2vfpfcnvrt@done& (0+255),w,b
 43275  0013E2  1173               	iorwf	(i2vfpfcnvrt@done+1)& (0+255),w,b
 43276  0013E4  B4D8               	btfsc	status,2,c
 43277  0013E6  D7D5               	goto	i2l17552
 43278                           
 43279                           ; BSR set to: 0
 43280                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
 43281  0013E8  0101               	movlb	1	; () banked
 43282  0013EA  B1CB               	btfsc	_flags& (0+255),0,b
 43283                           
 43284                           ; BSR set to: 1
 43285                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
 43286  0013EC  93CB               	bcf	_flags& (0+255),1,b
 43287                           
 43288                           ; BSR set to: 1
 43289                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
 43290  0013EE  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43291  0013F4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43292  0013FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 43293  001400  006F FF77 FFF7     	movff	postdec2,tblptrh
 43294  001406                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43295  001406  6AF8               	clrf	tblptru,c
 43296  001408                     	endif
 43297  001408                     	if	0	;tblptru may be non-zero
 43298  001408                     	endif
 43299  001408  0008               	tblrd		*
 43300  00140A  50F5               	movf	tablat,w,c
 43301  00140C  0A2A               	xorlw	42
 43302  00140E  A4D8               	btfss	status,2,c
 43303  001410  D02D               	goto	i2l17566
 43304                           
 43305                           ; BSR set to: 1
 43306                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
 43307  001412  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43308  001418  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43309  00141E  2ADE               	incf	postinc2,f,c
 43310  001420  0E00               	movlw	0
 43311  001422  22DD               	addwfc	postdec2,f,c
 43312                           
 43313                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 43314  001424  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 43315  00142A  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 43316  001430  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 43317  001436  0E02               	movlw	2
 43318  001438  26DE               	addwf	postinc2,f,c
 43319  00143A  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 43320  001440  0E00               	movlw	0
 43321  001442  22DD               	addwfc	postdec2,f,c
 43322  001444  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 43323  00144A  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 43324  001450  006F FF78  F1C7    	movff	postinc2,_width
 43325  001456  006F FF74  F1C8    	movff	postdec2,_width+1
 43326                           
 43327                           ; BSR set to: 1
 43328                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
 43329  00145C  AFC8               	btfss	(_width+1)& (0+255),7,b
 43330  00145E  D04D               	goto	i2u1686_40
 43331                           
 43332                           ; BSR set to: 1
 43333                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
 43334  001460  81CB               	bsf	_flags& (0+255),0,b
 43335                           
 43336                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
 43337  001462  6DC7               	negf	_width& (0+255),b
 43338  001464  1FC8               	comf	(_width+1)& (0+255),f,b
 43339  001466  B0D8               	btfsc	status,0,c
 43340  001468  2BC8               	incf	(_width+1)& (0+255),f,b
 43341  00146A  D047               	goto	i2u1686_40
 43342  00146C                     i2l17566:
 43343                           
 43344                           ; BSR set to: 1
 43345                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
 43346  00146C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43347  001472  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43348  001478  006F FF78  F008    	movff	postinc2,i2atoi@s
 43349  00147E  006F FF74  F009    	movff	postdec2,i2atoi@s+1
 43350  001484  ECA3  F02E         	call	i2_atoi	;wreg free
 43351  001488  0060  F020  F1C7   	movff	?i2_atoi,_width
 43352  00148E  0060  F024  F1C8   	movff	?i2_atoi+1,_width+1
 43353                           
 43354                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 43355  001494  D009               	goto	i2l17570
 43356  001496                     i2l17568:
 43357                           
 43358                           ; BSR set to: 0
 43359                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
 43360  001496  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43361  00149C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43362  0014A2  2ADE               	incf	postinc2,f,c
 43363  0014A4  0E00               	movlw	0
 43364  0014A6  22DD               	addwfc	postdec2,f,c
 43365  0014A8                     i2l17570:
 43366  0014A8  0ED0               	movlw	208
 43367  0014AA  6E4B               	movwf	??i2_vfpfcnvrt^0,c
 43368  0014AC  0EFF               	movlw	255
 43369  0014AE  6E4C               	movwf	(??i2_vfpfcnvrt+1)^0,c
 43370  0014B0  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43371  0014B6  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43372  0014BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 43373  0014C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 43374  0014C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43375  0014C8  6AF8               	clrf	tblptru,c
 43376  0014CA                     	endif
 43377  0014CA                     	if	0	;tblptru may be non-zero
 43378  0014CA                     	endif
 43379  0014CA  0008               	tblrd		*
 43380  0014CC  50F5               	movf	tablat,w,c
 43381  0014CE  6E4D               	movwf	(??i2_vfpfcnvrt+2)^0,c
 43382  0014D0  6A4E               	clrf	(??i2_vfpfcnvrt+3)^0,c
 43383  0014D2  504B               	movf	??i2_vfpfcnvrt^0,w,c
 43384  0014D4  264D               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
 43385  0014D6  504C               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 43386  0014D8  224E               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
 43387  0014DA  504E               	movf	(??i2_vfpfcnvrt+3)^0,w,c
 43388  0014DC  E106               	bnz	i2u1684_40
 43389  0014DE  0E0A               	movlw	10
 43390  0014E0  5C4D               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
 43391  0014E2  B0D8               	btfsc	status,0,c
 43392  0014E4  D002               	goto	i2u1684_40
 43393  0014E6  0E01               	movlw	1
 43394  0014E8  D001               	goto	i2u1685_40
 43395  0014EA                     i2u1684_40:
 43396  0014EA  0E00               	movlw	0
 43397  0014EC                     i2u1685_40:
 43398  0014EC  0100               	movlb	0	; () banked
 43399  0014EE  6F74               	movwf	i2_vfpfcnvrt$5217& (0+255),b
 43400  0014F0  6B75               	clrf	(i2_vfpfcnvrt$5217+1)& (0+255),b
 43401                           
 43402                           ; BSR set to: 0
 43403  0014F2  5174               	movf	i2_vfpfcnvrt$5217& (0+255),w,b
 43404  0014F4  1175               	iorwf	(i2_vfpfcnvrt$5217+1)& (0+255),w,b
 43405  0014F6  A4D8               	btfss	status,2,c
 43406  0014F8  D7CE               	goto	i2l17568
 43407  0014FA                     i2u1686_40:
 43408                           
 43409                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 43410  0014FA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43411  001500  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43412  001506  006F FF7B FFF6     	movff	postinc2,tblptrl
 43413  00150C  006F FF77 FFF7     	movff	postdec2,tblptrh
 43414  001512                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43415  001512  6AF8               	clrf	tblptru,c
 43416  001514                     	endif
 43417  001514                     	if	0	;tblptru may be non-zero
 43418  001514                     	endif
 43419  001514  0008               	tblrd		*
 43420  001516  50F5               	movf	tablat,w,c
 43421  001518  0A63               	xorlw	99
 43422  00151A  A4D8               	btfss	status,2,c
 43423  00151C  D034               	goto	i2l17584
 43424                           
 43425                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 43426  00151E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43427  001524  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43428  00152A  2ADE               	incf	postinc2,f,c
 43429  00152C  0E00               	movlw	0
 43430  00152E  22DD               	addwfc	postdec2,f,c
 43431                           
 43432                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 43433  001530  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 43434  001536  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 43435  00153C  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 43436  001542  0E02               	movlw	2
 43437  001544  26DE               	addwf	postinc2,f,c
 43438  001546  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 43439  00154C  0E00               	movlw	0
 43440  00154E  22DD               	addwfc	postdec2,f,c
 43441  001550  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 43442  001556  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 43443  00155C  50DF               	movf	indf2,w,c
 43444  00155E  0100               	movlb	0	; () banked
 43445  001560  6F76               	movwf	i2vfpfcnvrt@c& (0+255),b
 43446                           
 43447                           ; BSR set to: 0
 43448                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 43449  001562  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 43450  001568  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 43451  00156E  0060  F1D8  F020   	movff	i2vfpfcnvrt@c,i2ctoa@c
 43452  001574  EC5E  F04A         	call	i2_ctoa	;wreg free
 43453  001578  0060  F078  F045   	movff	?i2_ctoa,?i2_vfpfcnvrt
 43454  00157E  0060  F07C  F046   	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
 43455  001584  0012               	return	
 43456  001586                     i2l17584:
 43457                           
 43458                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 43459  001586  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43460  00158C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43461  001592  006F FF7B FFF6     	movff	postinc2,tblptrl
 43462  001598  006F FF77 FFF7     	movff	postdec2,tblptrh
 43463  00159E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43464  00159E  6AF8               	clrf	tblptru,c
 43465  0015A0                     	endif
 43466  0015A0                     	if	0	;tblptru may be non-zero
 43467  0015A0                     	endif
 43468  0015A0  0008               	tblrd		*
 43469  0015A2  50F5               	movf	tablat,w,c
 43470  0015A4  0A64               	xorlw	100
 43471  0015A6  B4D8               	btfsc	status,2,c
 43472  0015A8  D012               	goto	i2u1689_40
 43473  0015AA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43474  0015B0  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43475  0015B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 43476  0015BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 43477  0015C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43478  0015C2  6AF8               	clrf	tblptru,c
 43479  0015C4                     	endif
 43480  0015C4                     	if	0	;tblptru may be non-zero
 43481  0015C4                     	endif
 43482  0015C4  0008               	tblrd		*
 43483  0015C6  50F5               	movf	tablat,w,c
 43484  0015C8  0A69               	xorlw	105
 43485  0015CA  A4D8               	btfss	status,2,c
 43486  0015CC  D056               	goto	i2l17594
 43487  0015CE                     i2u1689_40:
 43488                           
 43489                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
 43490  0015CE  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43491  0015D4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43492  0015DA  2ADE               	incf	postinc2,f,c
 43493  0015DC  0E00               	movlw	0
 43494  0015DE  22DD               	addwfc	postdec2,f,c
 43495                           
 43496                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 43497  0015E0  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 43498  0015E6  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 43499  0015EC  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 43500  0015F2  0E02               	movlw	2
 43501  0015F4  26DE               	addwf	postinc2,f,c
 43502  0015F6  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 43503  0015FC  0E00               	movlw	0
 43504  0015FE  22DD               	addwfc	postdec2,f,c
 43505  001600  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 43506  001606  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 43507  00160C  006F FF78  F060    	movff	postinc2,i2vfpfcnvrt@ll
 43508  001612  006F FF74  F061    	movff	postdec2,i2vfpfcnvrt@ll+1
 43509  001618  0100               	movlb	0	; () banked
 43510  00161A  0E00               	movlw	0
 43511  00161C  BF61               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 43512  00161E  0EFF               	movlw	-1
 43513  001620  6F62               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 43514  001622  6F63               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 43515  001624  6F64               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 43516  001626  6F65               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 43517  001628  6F66               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 43518  00162A  6F67               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 43519                           
 43520                           ; BSR set to: 0
 43521                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
 43522  00162C  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 43523  001632  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 43524  001638  0060  F180  F020   	movff	i2vfpfcnvrt@ll,i2dtoa@d
 43525  00163E  0060  F184  F021   	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 43526  001644  0060  F188  F022   	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 43527  00164A  0060  F18C  F023   	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 43528  001650  0060  F190  F024   	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 43529  001656  0060  F194  F025   	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 43530  00165C  0060  F198  F026   	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 43531  001662  0060  F19C  F027   	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 43532  001668  ECEE  F01B         	call	i2_dtoa	;wreg free
 43533  00166C  0060  F078  F045   	movff	?i2_dtoa,?i2_vfpfcnvrt
 43534  001672  0060  F07C  F046   	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 43535  001678  0012               	return	
 43536  00167A                     i2l17594:
 43537                           
 43538                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
 43539  00167A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43540  001680  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43541  001686  006F FF7B FFF6     	movff	postinc2,tblptrl
 43542  00168C  006F FF77 FFF7     	movff	postdec2,tblptrh
 43543  001692                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43544  001692  6AF8               	clrf	tblptru,c
 43545  001694                     	endif
 43546  001694                     	if	0	;tblptru may be non-zero
 43547  001694                     	endif
 43548  001694  0008               	tblrd		*
 43549  001696  50F5               	movf	tablat,w,c
 43550  001698  0A73               	xorlw	115
 43551  00169A  A4D8               	btfss	status,2,c
 43552  00169C  D03A               	goto	i2l17602
 43553                           
 43554                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
 43555  00169E  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43556  0016A4  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43557  0016AA  2ADE               	incf	postinc2,f,c
 43558  0016AC  0E00               	movlw	0
 43559  0016AE  22DD               	addwfc	postdec2,f,c
 43560                           
 43561                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 43562  0016B0  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 43563  0016B6  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 43564  0016BC  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 43565  0016C2  0E02               	movlw	2
 43566  0016C4  26DE               	addwf	postinc2,f,c
 43567  0016C6  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 43568  0016CC  0E00               	movlw	0
 43569  0016CE  22DD               	addwfc	postdec2,f,c
 43570  0016D0  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 43571  0016D6  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 43572  0016DC  006F FF78  F070    	movff	postinc2,i2vfpfcnvrt@cp
 43573  0016E2  006F FF74  F071    	movff	postdec2,i2vfpfcnvrt@cp+1
 43574                           
 43575                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
 43576  0016E8  0060  F114  F00C   	movff	i2vfpfcnvrt@fp,i2stoa@fp
 43577  0016EE  0060  F118  F00D   	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 43578  0016F4  0060  F1C0  F00E   	movff	i2vfpfcnvrt@cp,i2stoa@s
 43579  0016FA  0060  F1C4  F00F   	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 43580  001700  ECBE  F02B         	call	i2_stoa	;wreg free
 43581  001704  0060  F030  F045   	movff	?i2_stoa,?i2_vfpfcnvrt
 43582  00170A  0060  F034  F046   	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 43583  001710  0012               	return	
 43584  001712                     i2l17602:
 43585                           
 43586                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 43587  001712  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43588  001718  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43589  00171E  006F FF7B FFF6     	movff	postinc2,tblptrl
 43590  001724  006F FF77 FFF7     	movff	postdec2,tblptrh
 43591  00172A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43592  00172A  6AF8               	clrf	tblptru,c
 43593  00172C                     	endif
 43594  00172C                     	if	0	;tblptru may be non-zero
 43595  00172C                     	endif
 43596  00172C  0008               	tblrd		*
 43597  00172E  50F5               	movf	tablat,w,c
 43598  001730  0A78               	xorlw	120
 43599  001732  B4D8               	btfsc	status,2,c
 43600  001734  D012               	goto	i2u1692_40
 43601  001736  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43602  00173C  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43603  001742  006F FF7B FFF6     	movff	postinc2,tblptrl
 43604  001748  006F FF77 FFF7     	movff	postdec2,tblptrh
 43605  00174E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43606  00174E  6AF8               	clrf	tblptru,c
 43607  001750                     	endif
 43608  001750                     	if	0	;tblptru may be non-zero
 43609  001750                     	endif
 43610  001750  0008               	tblrd		*
 43611  001752  50F5               	movf	tablat,w,c
 43612  001754  0A58               	xorlw	88
 43613  001756  A4D8               	btfss	status,2,c
 43614  001758  D06D               	goto	i2l17616
 43615  00175A                     i2u1692_40:
 43616                           
 43617                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
 43618  00175A  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43619  001760  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43620  001766  006F FF7B FFF6     	movff	postinc2,tblptrl
 43621  00176C  006F FF77 FFF7     	movff	postdec2,tblptrh
 43622  001772                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43623  001772  6AF8               	clrf	tblptru,c
 43624  001774                     	endif
 43625  001774                     	if	0	;tblptru may be non-zero
 43626  001774                     	endif
 43627  001774  0008               	tblrd		*
 43628  001776  006F FFD4  F076    	movff	tablat,i2vfpfcnvrt@c
 43629                           
 43630                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
 43631  00177C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43632  001782  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43633  001788  2ADE               	incf	postinc2,f,c
 43634  00178A  0E00               	movlw	0
 43635  00178C  22DD               	addwfc	postdec2,f,c
 43636                           
 43637                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 43638  00178E  0060  F127  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 43639  001794  0060  F12B  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 43640  00179A  006F FF7C  F04B    	movff	indf2,??i2_vfpfcnvrt
 43641  0017A0  0E02               	movlw	2
 43642  0017A2  26DE               	addwf	postinc2,f,c
 43643  0017A4  006F FF7C  F04C    	movff	indf2,??i2_vfpfcnvrt+1
 43644  0017AA  0E00               	movlw	0
 43645  0017AC  22DD               	addwfc	postdec2,f,c
 43646  0017AE  0060  F12F  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 43647  0017B4  0060  F133  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 43648  0017BA  006F FF78  F04D    	movff	postinc2,??i2_vfpfcnvrt+2
 43649  0017C0  006F FF74  F04E    	movff	postdec2,??i2_vfpfcnvrt+3
 43650  0017C6  0060  F134  F068   	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@llu
 43651  0017CC  0060  F138  F069   	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@llu+1
 43652  0017D2  0100               	movlb	0	; () banked
 43653  0017D4  6B6A               	clrf	(i2vfpfcnvrt@llu+2)& (0+255),b
 43654  0017D6  6B6B               	clrf	(i2vfpfcnvrt@llu+3)& (0+255),b
 43655  0017D8  6B6C               	clrf	(i2vfpfcnvrt@llu+4)& (0+255),b
 43656  0017DA  6B6D               	clrf	(i2vfpfcnvrt@llu+5)& (0+255),b
 43657  0017DC  6B6E               	clrf	(i2vfpfcnvrt@llu+6)& (0+255),b
 43658  0017DE  6B6F               	clrf	(i2vfpfcnvrt@llu+7)& (0+255),b
 43659                           
 43660                           ; BSR set to: 0
 43661                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
 43662  0017E0  0060  F114  F01E   	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 43663  0017E6  0060  F118  F01F   	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 43664  0017EC  0060  F1A0  F020   	movff	i2vfpfcnvrt@llu,i2xtoa@d
 43665  0017F2  0060  F1A4  F021   	movff	i2vfpfcnvrt@llu+1,i2xtoa@d+1
 43666  0017F8  0060  F1A8  F022   	movff	i2vfpfcnvrt@llu+2,i2xtoa@d+2
 43667  0017FE  0060  F1AC  F023   	movff	i2vfpfcnvrt@llu+3,i2xtoa@d+3
 43668  001804  0060  F1B0  F024   	movff	i2vfpfcnvrt@llu+4,i2xtoa@d+4
 43669  00180A  0060  F1B4  F025   	movff	i2vfpfcnvrt@llu+5,i2xtoa@d+5
 43670  001810  0060  F1B8  F026   	movff	i2vfpfcnvrt@llu+6,i2xtoa@d+6
 43671  001816  0060  F1BC  F027   	movff	i2vfpfcnvrt@llu+7,i2xtoa@d+7
 43672  00181C  0060  F1D8  F028   	movff	i2vfpfcnvrt@c,i2xtoa@x
 43673  001822  EC9E  F01E         	call	i2_xtoa	;wreg free
 43674  001826  0060  F078  F045   	movff	?i2_xtoa,?i2_vfpfcnvrt
 43675  00182C  0060  F07C  F046   	movff	?i2_xtoa+1,?i2_vfpfcnvrt+1
 43676  001832  0012               	return	
 43677  001834                     i2l17616:
 43678                           
 43679                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 43680  001834  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43681  00183A  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43682  001840  006F FF7B FFF6     	movff	postinc2,tblptrl
 43683  001846  006F FF77 FFF7     	movff	postdec2,tblptrh
 43684  00184C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43685  00184C  6AF8               	clrf	tblptru,c
 43686  00184E                     	endif
 43687  00184E                     	if	0	;tblptru may be non-zero
 43688  00184E                     	endif
 43689  00184E  0008               	tblrd		*
 43690  001850  50F5               	movf	tablat,w,c
 43691  001852  0A25               	xorlw	37
 43692  001854  A4D8               	btfss	status,2,c
 43693  001856  D01A               	goto	i2l17626
 43694                           
 43695                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 43696  001858  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43697  00185E  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43698  001864  2ADE               	incf	postinc2,f,c
 43699  001866  0E00               	movlw	0
 43700  001868  22DD               	addwfc	postdec2,f,c
 43701                           
 43702                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 43703  00186A  0E00               	movlw	0
 43704  00186C  6E04               	movwf	(i2fputc@c+1)^0,c
 43705  00186E  0E25               	movlw	37
 43706  001870  6E03               	movwf	i2fputc@c^0,c
 43707  001872  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 43708  001878  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 43709  00187E  EC91  F041         	call	i2_fputc	;wreg free
 43710  001882                     i2l17622:
 43711                           
 43712                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 43713  001882  0E00               	movlw	0
 43714  001884  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 43715  001886  0E01               	movlw	1
 43716  001888  6E45               	movwf	?i2_vfpfcnvrt^0,c
 43717  00188A  0012               	return	
 43718  00188C                     i2l17626:
 43719                           
 43720                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 43721  00188C  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43722  001892  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43723  001898  2ADE               	incf	postinc2,f,c
 43724  00189A  0E00               	movlw	0
 43725  00189C  22DD               	addwfc	postdec2,f,c
 43726                           
 43727                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 43728  00189E  0E00               	movlw	0
 43729  0018A0  6E46               	movwf	(?i2_vfpfcnvrt+1)^0,c
 43730  0018A2  0E00               	movlw	0
 43731  0018A4  6E45               	movwf	?i2_vfpfcnvrt^0,c
 43732  0018A6  0012               	return	
 43733  0018A8                     i2l17632:
 43734                           
 43735                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 43736  0018A8  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43737  0018AE  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43738  0018B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 43739  0018BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 43740  0018C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43741  0018C0  6AF8               	clrf	tblptru,c
 43742  0018C2                     	endif
 43743  0018C2                     	if	0	;tblptru may be non-zero
 43744  0018C2                     	endif
 43745  0018C2  0008               	tblrd		*
 43746  0018C4  50F5               	movf	tablat,w,c
 43747  0018C6  6E03               	movwf	i2fputc@c^0,c
 43748  0018C8  6A04               	clrf	(i2fputc@c+1)^0,c
 43749  0018CA  0060  F114  F005   	movff	i2vfpfcnvrt@fp,i2fputc@fp
 43750  0018D0  0060  F118  F006   	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 43751  0018D6  EC91  F041         	call	i2_fputc	;wreg free
 43752                           
 43753                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 43754  0018DA  0060  F11F  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 43755  0018E0  0060  F123  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 43756  0018E6  2ADE               	incf	postinc2,f,c
 43757  0018E8  0E00               	movlw	0
 43758  0018EA  22DD               	addwfc	postdec2,f,c
 43759  0018EC  D7CA               	goto	i2l17622
 43760  0018EE                     __end_ofi2_vfpfcnvrt:
 43761                           	opt callstack 0
 43762                           
 43763 ;; *************** function i2_xtoa *****************
 43764 ;; Defined at:
 43765 ;;		line 623 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 43766 ;; Parameters:    Size  Location     Type
 43767 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 43768 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 43769 ;;  d               8   31[COMRAM] unsigned long long 
 43770 ;;  x               1   39[COMRAM] unsigned char 
 43771 ;; Auto vars:     Size  Location     Type
 43772 ;;  xtoa            8   56[COMRAM] unsigned long long 
 43773 ;;  xtoa            2   66[COMRAM] int 
 43774 ;;  xtoa            2   64[COMRAM] int 
 43775 ;;  xtoa            2   54[COMRAM] int 
 43776 ;;  xtoa            2   52[COMRAM] int 
 43777 ;; Return value:  Size  Location     Type
 43778 ;;                  2   29[COMRAM] int 
 43779 ;; Registers used:
 43780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43781 ;; Tracked objects:
 43782 ;;		On entry : 3F/0
 43783 ;;		On exit  : 0/0
 43784 ;;		Unchanged: 0/0
 43785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43786 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43787 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43788 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43789 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43790 ;;Total ram usage:       39 bytes
 43791 ;; Hardware stack levels used:    1
 43792 ;; Hardware stack levels required when called:    5
 43793 ;; This function calls:
 43794 ;;		i2_isalpha
 43795 ;;		i2_isupper
 43796 ;;		i2_pad
 43797 ;;		i2_toupper
 43798 ;; This function is called by:
 43799 ;;		i2_vfpfcnvrt
 43800 ;; This function uses a non-reentrant model
 43801 ;;
 43802                           
 43803                           	psect	text356
 43804  003D3C                     __ptext356:
 43805                           	opt callstack 0
 43806  003D3C                     i2_xtoa:
 43807                           	opt callstack 6
 43808                           
 43809                           ; BSR set to: 0
 43810                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
 43811                           
 43812                           ;incstack = 0
 43813  003D3C  0101               	movlb	1	; () banked
 43814  003D3E  AFCA               	btfss	(_prec+1)& (0+255),7,b
 43815                           
 43816                           ; BSR set to: 1
 43817                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
 43818  003D40  93CB               	bcf	_flags& (0+255),1,b
 43819                           
 43820                           ; BSR set to: 1
 43821                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
 43822  003D42  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 43823  003D44  D005               	goto	i2u1627_40
 43824  003D46  51CA               	movf	(_prec+1)& (0+255),w,b
 43825  003D48  E108               	bnz	i2l3538
 43826  003D4A  05C9               	decf	_prec& (0+255),w,b
 43827  003D4C  B0D8               	btfsc	status,0,c
 43828  003D4E  D005               	goto	i2l3538
 43829  003D50                     i2u1627_40:
 43830                           
 43831                           ; BSR set to: 1
 43832  003D50  0E00               	movlw	0
 43833  003D52  6E36               	movwf	(i2xtoa@p+1)^0,c
 43834  003D54  0E01               	movlw	1
 43835  003D56  6E35               	movwf	i2xtoa@p^0,c
 43836  003D58  D006               	goto	i2l3540
 43837  003D5A                     i2l3538:
 43838                           
 43839                           ; BSR set to: 1
 43840  003D5A  0060  F724  F035   	movff	_prec,i2xtoa@p
 43841  003D60  0060  F728  F036   	movff	_prec+1,i2xtoa@p+1
 43842  003D66                     i2l3540:
 43843                           
 43844                           ; BSR set to: 1
 43845                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 43846  003D66  0060  F71C  F037   	movff	_width,i2xtoa@w
 43847  003D6C  0060  F720  F038   	movff	_width+1,i2xtoa@w+1
 43848                           
 43849                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
 43850  003D72  A9CB               	btfss	_flags& (0+255),4,b
 43851  003D74  D004               	goto	i2l17272
 43852                           
 43853                           ; BSR set to: 1
 43854                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 43855  003D76  0EFE               	movlw	254
 43856  003D78  2637               	addwf	i2xtoa@w^0,f,c
 43857  003D7A  0EFF               	movlw	255
 43858  003D7C  2238               	addwfc	(i2xtoa@w+1)^0,f,c
 43859  003D7E                     i2l17272:
 43860                           
 43861                           ; BSR set to: 1
 43862                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 43863  003D7E  0060  F080  F039   	movff	i2xtoa@d,i2xtoa@n
 43864  003D84  0060  F084  F03A   	movff	i2xtoa@d+1,i2xtoa@n+1
 43865  003D8A  0060  F088  F03B   	movff	i2xtoa@d+2,i2xtoa@n+2
 43866  003D90  0060  F08C  F03C   	movff	i2xtoa@d+3,i2xtoa@n+3
 43867  003D96  0060  F090  F03D   	movff	i2xtoa@d+4,i2xtoa@n+4
 43868  003D9C  0060  F094  F03E   	movff	i2xtoa@d+5,i2xtoa@n+5
 43869  003DA2  0060  F098  F03F   	movff	i2xtoa@d+6,i2xtoa@n+6
 43870  003DA8  0060  F09C  F040   	movff	i2xtoa@d+7,i2xtoa@n+7
 43871                           
 43872                           ; BSR set to: 1
 43873                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
 43874  003DAE  0E00               	movlw	0
 43875  003DB0  6E42               	movwf	(i2xtoa@i+1)^0,c
 43876  003DB2  0E1F               	movlw	31
 43877  003DB4  6E41               	movwf	i2xtoa@i^0,c
 43878                           
 43879                           ; BSR set to: 1
 43880                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
 43881  003DB6  0E00               	movlw	0
 43882  003DB8  0103               	movlb	3	; () banked
 43883  003DBA  6FA8               	movwf	(_dbuf+31)& (0+255),b
 43884                           
 43885                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 43886  003DBC  D0A8               	goto	i2l17308
 43887  003DBE                     i2l17278:
 43888                           
 43889                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 43890  003DBE  0641               	decf	i2xtoa@i^0,f,c
 43891  003DC0  A0D8               	btfss	status,0,c
 43892  003DC2  0642               	decf	(i2xtoa@i+1)^0,f,c
 43893                           
 43894                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
 43895  003DC4  0E0F               	movlw	15
 43896  003DC6  1439               	andwf	i2xtoa@n^0,w,c
 43897  003DC8  6E43               	movwf	i2xtoa@c^0,c
 43898  003DCA  6A44               	clrf	(i2xtoa@c+1)^0,c
 43899                           
 43900                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
 43901  003DCC  BE44               	btfsc	(i2xtoa@c+1)^0,7,c
 43902  003DCE  D008               	goto	i2l17286
 43903  003DD0  5044               	movf	(i2xtoa@c+1)^0,w,c
 43904  003DD2  E104               	bnz	i2u1629_40
 43905  003DD4  0E0A               	movlw	10
 43906  003DD6  5C43               	subwf	i2xtoa@c^0,w,c
 43907  003DD8  A0D8               	btfss	status,0,c
 43908  003DDA  D002               	goto	i2l17286
 43909  003DDC                     i2u1629_40:
 43910  003DDC  0E57               	movlw	87
 43911  003DDE  D001               	goto	L22
 43912  003DE0                     i2l17286:
 43913  003DE0  0E30               	movlw	48
 43914  003DE2                     L22:
 43915  003DE2  2443               	addwf	i2xtoa@c^0,w,c
 43916  003DE4  6E43               	movwf	i2xtoa@c^0,c
 43917  003DE6  0E00               	movlw	0
 43918  003DE8  2044               	addwfc	(i2xtoa@c+1)^0,w,c
 43919  003DEA  6E44               	movwf	(i2xtoa@c+1)^0,c
 43920                           
 43921                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
 43922  003DEC  0EBF               	movlw	191
 43923  003DEE  6E29               	movwf	??i2_xtoa^0,c
 43924  003DF0  0EFF               	movlw	255
 43925  003DF2  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43926  003DF4  5028               	movf	i2xtoa@x^0,w,c
 43927  003DF6  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43928  003DF8  6A2C               	clrf	(??i2_xtoa+3)^0,c
 43929  003DFA  5029               	movf	??i2_xtoa^0,w,c
 43930  003DFC  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43931  003DFE  502A               	movf	(??i2_xtoa+1)^0,w,c
 43932  003E00  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43933  003E02  502C               	movf	(??i2_xtoa+3)^0,w,c
 43934  003E04  E106               	bnz	i2u1630_40
 43935  003E06  0E1A               	movlw	26
 43936  003E08  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43937  003E0A  B0D8               	btfsc	status,0,c
 43938  003E0C  D002               	goto	i2u1630_40
 43939  003E0E  0E01               	movlw	1
 43940  003E10  D001               	goto	i2u1631_40
 43941  003E12                     i2u1630_40:
 43942  003E12  0E00               	movlw	0
 43943  003E14                     i2u1631_40:
 43944  003E14  6E31               	movwf	i2_xtoa$5202^0,c
 43945  003E16  6A32               	clrf	(i2_xtoa$5202+1)^0,c
 43946  003E18  5031               	movf	i2_xtoa$5202^0,w,c
 43947  003E1A  1032               	iorwf	(i2_xtoa$5202+1)^0,w,c
 43948  003E1C  B4D8               	btfsc	status,2,c
 43949  003E1E  D02B               	goto	i2l17300
 43950  003E20  0E9F               	movlw	159
 43951  003E22  6E29               	movwf	??i2_xtoa^0,c
 43952  003E24  0EFF               	movlw	255
 43953  003E26  6E2A               	movwf	(??i2_xtoa+1)^0,c
 43954  003E28  0E20               	movlw	32
 43955  003E2A  1043               	iorwf	i2xtoa@c^0,w,c
 43956  003E2C  6E2B               	movwf	(??i2_xtoa+2)^0,c
 43957  003E2E  0E00               	movlw	0
 43958  003E30  1044               	iorwf	(i2xtoa@c+1)^0,w,c
 43959  003E32  6E2C               	movwf	(??i2_xtoa+3)^0,c
 43960  003E34  5029               	movf	??i2_xtoa^0,w,c
 43961  003E36  262B               	addwf	(??i2_xtoa+2)^0,f,c
 43962  003E38  502A               	movf	(??i2_xtoa+1)^0,w,c
 43963  003E3A  222C               	addwfc	(??i2_xtoa+3)^0,f,c
 43964  003E3C  502C               	movf	(??i2_xtoa+3)^0,w,c
 43965  003E3E  E106               	bnz	i2u1633_40
 43966  003E40  0E1A               	movlw	26
 43967  003E42  5C2B               	subwf	(??i2_xtoa+2)^0,w,c
 43968  003E44  B0D8               	btfsc	status,0,c
 43969  003E46  D002               	goto	i2u1633_40
 43970  003E48  0E01               	movlw	1
 43971  003E4A  D001               	goto	i2u1634_40
 43972  003E4C                     i2u1633_40:
 43973  003E4C  0E00               	movlw	0
 43974  003E4E                     i2u1634_40:
 43975  003E4E  6E33               	movwf	i2_xtoa$5203^0,c
 43976  003E50  6A34               	clrf	(i2_xtoa$5203+1)^0,c
 43977  003E52  5033               	movf	i2_xtoa$5203^0,w,c
 43978  003E54  1034               	iorwf	(i2_xtoa$5203+1)^0,w,c
 43979  003E56  B4D8               	btfsc	status,2,c
 43980  003E58  D00E               	goto	i2l17300
 43981                           
 43982                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
 43983  003E5A  0060  F10C  F007   	movff	i2xtoa@c,i2toupper@c
 43984  003E60  0060  F110  F008   	movff	i2xtoa@c+1,i2toupper@c+1
 43985  003E66  ECBC  F04C         	call	i2_toupper	;wreg free
 43986  003E6A  0060  F01C  F043   	movff	?i2_toupper,i2xtoa@c
 43987  003E70  0060  F020  F044   	movff	?i2_toupper+1,i2xtoa@c+1
 43988  003E76                     i2l17300:
 43989                           
 43990                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
 43991  003E76  0E89               	movlw	low _dbuf
 43992  003E78  2441               	addwf	i2xtoa@i^0,w,c
 43993  003E7A  6ED9               	movwf	fsr2l,c
 43994  003E7C  0E03               	movlw	high _dbuf
 43995  003E7E  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 43996  003E80  6EDA               	movwf	fsr2h,c
 43997  003E82  0060  F10F  FFDF   	movff	i2xtoa@c,indf2
 43998                           
 43999                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 44000  003E88  0635               	decf	i2xtoa@p^0,f,c
 44001  003E8A  A0D8               	btfss	status,0,c
 44002  003E8C  0636               	decf	(i2xtoa@p+1)^0,f,c
 44003                           
 44004                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 44005  003E8E  0637               	decf	i2xtoa@w^0,f,c
 44006  003E90  A0D8               	btfss	status,0,c
 44007  003E92  0638               	decf	(i2xtoa@w+1)^0,f,c
 44008                           
 44009                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
 44010  003E94  0060  F0E4  F029   	movff	i2xtoa@n,??i2_xtoa
 44011  003E9A  0060  F0E8  F02A   	movff	i2xtoa@n+1,??i2_xtoa+1
 44012  003EA0  0060  F0EC  F02B   	movff	i2xtoa@n+2,??i2_xtoa+2
 44013  003EA6  0060  F0F0  F02C   	movff	i2xtoa@n+3,??i2_xtoa+3
 44014  003EAC  0060  F0F4  F02D   	movff	i2xtoa@n+4,??i2_xtoa+4
 44015  003EB2  0060  F0F8  F02E   	movff	i2xtoa@n+5,??i2_xtoa+5
 44016  003EB8  0060  F0FC  F02F   	movff	i2xtoa@n+6,??i2_xtoa+6
 44017  003EBE  0060  F100  F030   	movff	i2xtoa@n+7,??i2_xtoa+7
 44018  003EC4  0E05               	movlw	5
 44019  003EC6  D009               	goto	i2u1636_40
 44020  003EC8                     i2u1636_45:
 44021  003EC8  90D8               	bcf	status,0,c
 44022  003ECA  3230               	rrcf	(??i2_xtoa+7)^0,f,c
 44023  003ECC  322F               	rrcf	(??i2_xtoa+6)^0,f,c
 44024  003ECE  322E               	rrcf	(??i2_xtoa+5)^0,f,c
 44025  003ED0  322D               	rrcf	(??i2_xtoa+4)^0,f,c
 44026  003ED2  322C               	rrcf	(??i2_xtoa+3)^0,f,c
 44027  003ED4  322B               	rrcf	(??i2_xtoa+2)^0,f,c
 44028  003ED6  322A               	rrcf	(??i2_xtoa+1)^0,f,c
 44029  003ED8  3229               	rrcf	??i2_xtoa^0,f,c
 44030  003EDA                     i2u1636_40:
 44031  003EDA  2EE8               	decfsz	wreg,f,c
 44032  003EDC  D7F5               	goto	i2u1636_45
 44033  003EDE  0060  F0A4  F039   	movff	??i2_xtoa,i2xtoa@n
 44034  003EE4  0060  F0A8  F03A   	movff	??i2_xtoa+1,i2xtoa@n+1
 44035  003EEA  0060  F0AC  F03B   	movff	??i2_xtoa+2,i2xtoa@n+2
 44036  003EF0  0060  F0B0  F03C   	movff	??i2_xtoa+3,i2xtoa@n+3
 44037  003EF6  0060  F0B4  F03D   	movff	??i2_xtoa+4,i2xtoa@n+4
 44038  003EFC  0060  F0B8  F03E   	movff	??i2_xtoa+5,i2xtoa@n+5
 44039  003F02  0060  F0BC  F03F   	movff	??i2_xtoa+6,i2xtoa@n+6
 44040  003F08  0060  F0C0  F040   	movff	??i2_xtoa+7,i2xtoa@n+7
 44041  003F0E                     i2l17308:
 44042                           
 44043                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44044  003F0E  BE42               	btfsc	(i2xtoa@i+1)^0,7,c
 44045  003F10  D021               	goto	i2u1641_40
 44046  003F12  5042               	movf	(i2xtoa@i+1)^0,w,c
 44047  003F14  E104               	bnz	i2u1637_40
 44048  003F16  0E02               	movlw	2
 44049  003F18  5C41               	subwf	i2xtoa@i^0,w,c
 44050  003F1A  A0D8               	btfss	status,0,c
 44051  003F1C  D01B               	goto	i2u1641_40
 44052  003F1E                     i2u1637_40:
 44053  003F1E  5039               	movf	i2xtoa@n^0,w,c
 44054  003F20  103A               	iorwf	(i2xtoa@n+1)^0,w,c
 44055  003F22  103B               	iorwf	(i2xtoa@n+2)^0,w,c
 44056  003F24  103C               	iorwf	(i2xtoa@n+3)^0,w,c
 44057  003F26  103D               	iorwf	(i2xtoa@n+4)^0,w,c
 44058  003F28  103E               	iorwf	(i2xtoa@n+5)^0,w,c
 44059  003F2A  103F               	iorwf	(i2xtoa@n+6)^0,w,c
 44060  003F2C  1040               	iorwf	(i2xtoa@n+7)^0,w,c
 44061  003F2E  A4D8               	btfss	status,2,c
 44062  003F30  D746               	goto	i2l17278
 44063  003F32  BE36               	btfsc	(i2xtoa@p+1)^0,7,c
 44064  003F34  D005               	goto	i2u1639_40
 44065  003F36  5036               	movf	(i2xtoa@p+1)^0,w,c
 44066  003F38  E102               	bnz	i2u1639_41
 44067  003F3A  0435               	decf	i2xtoa@p^0,w,c
 44068  003F3C  B0D8               	btfsc	status,0,c
 44069  003F3E                     i2u1639_41:
 44070  003F3E  D73F               	goto	i2l17278
 44071  003F40                     i2u1639_40:
 44072  003F40  BE38               	btfsc	(i2xtoa@w+1)^0,7,c
 44073  003F42  D008               	goto	i2u1641_40
 44074  003F44  5038               	movf	(i2xtoa@w+1)^0,w,c
 44075  003F46  E103               	bnz	i2u1640_40
 44076  003F48  0437               	decf	i2xtoa@w^0,w,c
 44077  003F4A  A0D8               	btfss	status,0,c
 44078  003F4C  D003               	goto	i2u1641_40
 44079  003F4E                     i2u1640_40:
 44080  003F4E  0101               	movlb	1	; () banked
 44081  003F50  B3CB               	btfsc	_flags& (0+255),1,b
 44082  003F52  D735               	goto	i2l17278
 44083  003F54                     i2u1641_40:
 44084                           
 44085                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 44086  003F54  0101               	movlb	1	; () banked
 44087  003F56  A9CB               	btfss	_flags& (0+255),4,b
 44088  003F58  D017               	goto	i2l17324
 44089                           
 44090                           ; BSR set to: 1
 44091                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 44092  003F5A  0641               	decf	i2xtoa@i^0,f,c
 44093  003F5C  A0D8               	btfss	status,0,c
 44094  003F5E  0642               	decf	(i2xtoa@i+1)^0,f,c
 44095                           
 44096                           ; BSR set to: 1
 44097                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
 44098  003F60  0E89               	movlw	low _dbuf
 44099  003F62  2441               	addwf	i2xtoa@i^0,w,c
 44100  003F64  6ED9               	movwf	fsr2l,c
 44101  003F66  0E03               	movlw	high _dbuf
 44102  003F68  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 44103  003F6A  6EDA               	movwf	fsr2h,c
 44104  003F6C  0060  F0A3  FFDF   	movff	i2xtoa@x,indf2
 44105                           
 44106                           ; BSR set to: 1
 44107                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 44108  003F72  0641               	decf	i2xtoa@i^0,f,c
 44109  003F74  A0D8               	btfss	status,0,c
 44110  003F76  0642               	decf	(i2xtoa@i+1)^0,f,c
 44111                           
 44112                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
 44113  003F78  0E89               	movlw	low _dbuf
 44114  003F7A  2441               	addwf	i2xtoa@i^0,w,c
 44115  003F7C  6ED9               	movwf	fsr2l,c
 44116  003F7E  0E03               	movlw	high _dbuf
 44117  003F80  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 44118  003F82  6EDA               	movwf	fsr2h,c
 44119  003F84  0E30               	movlw	48
 44120  003F86  6EDF               	movwf	indf2,c
 44121  003F88                     i2l17324:
 44122                           
 44123                           ; BSR set to: 1
 44124                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
 44125  003F88  0060  F078  F013   	movff	i2xtoa@fp,i2pad@fp
 44126  003F8E  0060  F07C  F014   	movff	i2xtoa@fp+1,i2pad@fp+1
 44127  003F94  0E89               	movlw	low _dbuf
 44128  003F96  2441               	addwf	i2xtoa@i^0,w,c
 44129  003F98  6E15               	movwf	i2pad@buf^0,c
 44130  003F9A  0E03               	movlw	high _dbuf
 44131  003F9C  2042               	addwfc	(i2xtoa@i+1)^0,w,c
 44132  003F9E  6E16               	movwf	(i2pad@buf+1)^0,c
 44133  003FA0  0060  F0DC  F017   	movff	i2xtoa@w,i2pad@p
 44134  003FA6  0060  F0E0  F018   	movff	i2xtoa@w+1,i2pad@p+1
 44135  003FAC  EC7B  F03F         	call	i2_pad	;wreg free
 44136  003FB0  0060  F04C  F01E   	movff	?i2_pad,?i2_xtoa
 44137  003FB6  0060  F050  F01F   	movff	?i2_pad+1,?i2_xtoa+1
 44138  003FBC  0012               	return		;funcret
 44139  003FBE                     __end_ofi2_xtoa:
 44140                           	opt callstack 0
 44141                           
 44142 ;; *************** function i2_toupper *****************
 44143 ;; Defined at:
 44144 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 44145 ;; Parameters:    Size  Location     Type
 44146 ;;  c               2    6[COMRAM] int 
 44147 ;; Auto vars:     Size  Location     Type
 44148 ;;		None
 44149 ;; Return value:  Size  Location     Type
 44150 ;;                  2    6[COMRAM] int 
 44151 ;; Registers used:
 44152 ;;		wreg, status,2, status,0
 44153 ;; Tracked objects:
 44154 ;;		On entry : 0/3
 44155 ;;		On exit  : 0/0
 44156 ;;		Unchanged: 0/0
 44157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44161 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44162 ;;Total ram usage:        8 bytes
 44163 ;; Hardware stack levels used:    1
 44164 ;; Hardware stack levels required when called:    1
 44165 ;; This function calls:
 44166 ;;		i2_islower
 44167 ;; This function is called by:
 44168 ;;		i2_xtoa
 44169 ;; This function uses a non-reentrant model
 44170 ;;
 44171                           
 44172                           	psect	text357
 44173  009978                     __ptext357:
 44174                           	opt callstack 0
 44175  009978                     i2_toupper:
 44176                           	opt callstack 9
 44177                           
 44178                           ;incstack = 0
 44179  009978  0E9F               	movlw	159
 44180  00997A  6E09               	movwf	??i2_toupper^0,c
 44181  00997C  0EFF               	movlw	255
 44182  00997E  6E0A               	movwf	(??i2_toupper+1)^0,c
 44183  009980  0060  F01C  F00B   	movff	i2toupper@c,??i2_toupper+2
 44184  009986  0060  F020  F00C   	movff	i2toupper@c+1,??i2_toupper+3
 44185  00998C  5009               	movf	??i2_toupper^0,w,c
 44186  00998E  260B               	addwf	(??i2_toupper+2)^0,f,c
 44187  009990  500A               	movf	(??i2_toupper+1)^0,w,c
 44188  009992  220C               	addwfc	(??i2_toupper+3)^0,f,c
 44189  009994  500C               	movf	(??i2_toupper+3)^0,w,c
 44190  009996  E106               	bnz	i2u1592_40
 44191  009998  0E1A               	movlw	26
 44192  00999A  5C0B               	subwf	(??i2_toupper+2)^0,w,c
 44193  00999C  B0D8               	btfsc	status,0,c
 44194  00999E  D002               	goto	i2u1592_40
 44195  0099A0  0E01               	movlw	1
 44196  0099A2  D001               	goto	i2u1593_40
 44197  0099A4                     i2u1592_40:
 44198  0099A4  0E00               	movlw	0
 44199  0099A6                     i2u1593_40:
 44200  0099A6  6E0D               	movwf	i2_toupper$5792^0,c
 44201  0099A8  6A0E               	clrf	(i2_toupper$5792+1)^0,c
 44202  0099AA  500D               	movf	i2_toupper$5792^0,w,c
 44203  0099AC  100E               	iorwf	(i2_toupper$5792+1)^0,w,c
 44204  0099AE  B4D8               	btfsc	status,2,c
 44205  0099B0  D005               	goto	i2l4392
 44206  0099B2  0E5F               	movlw	95
 44207  0099B4  1407               	andwf	i2toupper@c^0,w,c
 44208  0099B6  6E07               	movwf	?i2_toupper^0,c
 44209  0099B8  6A08               	clrf	(?i2_toupper+1)^0,c
 44210  0099BA  0012               	return	
 44211  0099BC                     i2l4392:
 44212  0099BC  0060  F01C  F007   	movff	i2toupper@c,?i2_toupper
 44213  0099C2  0060  F020  F008   	movff	i2toupper@c+1,?i2_toupper+1
 44214  0099C8  0012               	return		;funcret
 44215  0099CA                     __end_ofi2_toupper:
 44216                           	opt callstack 0
 44217                           
 44218 ;; *************** function i2_islower *****************
 44219 ;; Defined at:
 44220 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 44221 ;; Parameters:    Size  Location     Type
 44222 ;;  c               2    0[COMRAM] int 
 44223 ;; Auto vars:     Size  Location     Type
 44224 ;;		None
 44225 ;; Return value:  Size  Location     Type
 44226 ;;                  2    0[COMRAM] int 
 44227 ;; Registers used:
 44228 ;;		wreg, status,2, status,0
 44229 ;; Tracked objects:
 44230 ;;		On entry : 0/0
 44231 ;;		On exit  : 0/0
 44232 ;;		Unchanged: 0/0
 44233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44238 ;;Total ram usage:        6 bytes
 44239 ;; Hardware stack levels used:    1
 44240 ;; This function calls:
 44241 ;;		Nothing
 44242 ;; This function is called by:
 44243 ;;		i2_toupper
 44244 ;; This function uses a non-reentrant model
 44245 ;;
 44246                           
 44247                           	psect	text358
 44248  00A0FC                     __ptext358:
 44249                           	opt callstack 0
 44250  00A0FC                     i2_islower:
 44251                           	opt callstack 9
 44252                           
 44253                           ;incstack = 0
 44254  00A0FC  0E9F               	movlw	159
 44255  00A0FE  6E03               	movwf	??i2_islower^0,c
 44256  00A100  0EFF               	movlw	255
 44257  00A102  6E04               	movwf	(??i2_islower+1)^0,c
 44258  00A104  0060  F004  F005   	movff	i2islower@c,??i2_islower+2
 44259  00A10A  0060  F008  F006   	movff	i2islower@c+1,??i2_islower+3
 44260  00A110  5003               	movf	??i2_islower^0,w,c
 44261  00A112  2605               	addwf	(??i2_islower+2)^0,f,c
 44262  00A114  5004               	movf	(??i2_islower+1)^0,w,c
 44263  00A116  2206               	addwfc	(??i2_islower+3)^0,f,c
 44264  00A118  5006               	movf	(??i2_islower+3)^0,w,c
 44265  00A11A  E106               	bnz	i2u1560_40
 44266  00A11C  0E1A               	movlw	26
 44267  00A11E  5C05               	subwf	(??i2_islower+2)^0,w,c
 44268  00A120  B0D8               	btfsc	status,0,c
 44269  00A122  D002               	goto	i2u1560_40
 44270  00A124  0E01               	movlw	1
 44271  00A126  D001               	goto	i2u1561_40
 44272  00A128                     i2u1560_40:
 44273  00A128  0E00               	movlw	0
 44274  00A12A                     i2u1561_40:
 44275  00A12A  6E01               	movwf	?i2_islower^0,c
 44276  00A12C  6A02               	clrf	(?i2_islower+1)^0,c
 44277  00A12E  0012               	return		;funcret
 44278  00A130                     __end_ofi2_islower:
 44279                           	opt callstack 0
 44280                           
 44281 ;; *************** function i2_isupper *****************
 44282 ;; Defined at:
 44283 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 44284 ;; Parameters:    Size  Location     Type
 44285 ;;  c               2    0[COMRAM] int 
 44286 ;; Auto vars:     Size  Location     Type
 44287 ;;		None
 44288 ;; Return value:  Size  Location     Type
 44289 ;;                  2    0[COMRAM] int 
 44290 ;; Registers used:
 44291 ;;		wreg, status,2, status,0
 44292 ;; Tracked objects:
 44293 ;;		On entry : 0/0
 44294 ;;		On exit  : 0/0
 44295 ;;		Unchanged: 0/0
 44296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44301 ;;Total ram usage:        6 bytes
 44302 ;; Hardware stack levels used:    1
 44303 ;; This function calls:
 44304 ;;		Nothing
 44305 ;; This function is called by:
 44306 ;;		i2_xtoa
 44307 ;; This function uses a non-reentrant model
 44308 ;;
 44309                           
 44310                           	psect	text359
 44311  00A130                     __ptext359:
 44312                           	opt callstack 0
 44313  00A130                     i2_isupper:
 44314                           	opt callstack 10
 44315                           
 44316                           ;incstack = 0
 44317  00A130  0EBF               	movlw	191
 44318  00A132  6E03               	movwf	??i2_isupper^0,c
 44319  00A134  0EFF               	movlw	255
 44320  00A136  6E04               	movwf	(??i2_isupper+1)^0,c
 44321  00A138  0060  F004  F005   	movff	i2isupper@c,??i2_isupper+2
 44322  00A13E  0060  F008  F006   	movff	i2isupper@c+1,??i2_isupper+3
 44323  00A144  5003               	movf	??i2_isupper^0,w,c
 44324  00A146  2605               	addwf	(??i2_isupper+2)^0,f,c
 44325  00A148  5004               	movf	(??i2_isupper+1)^0,w,c
 44326  00A14A  2206               	addwfc	(??i2_isupper+3)^0,f,c
 44327  00A14C  5006               	movf	(??i2_isupper+3)^0,w,c
 44328  00A14E  E106               	bnz	i2u1590_40
 44329  00A150  0E1A               	movlw	26
 44330  00A152  5C05               	subwf	(??i2_isupper+2)^0,w,c
 44331  00A154  B0D8               	btfsc	status,0,c
 44332  00A156  D002               	goto	i2u1590_40
 44333  00A158  0E01               	movlw	1
 44334  00A15A  D001               	goto	i2u1591_40
 44335  00A15C                     i2u1590_40:
 44336  00A15C  0E00               	movlw	0
 44337  00A15E                     i2u1591_40:
 44338  00A15E  6E01               	movwf	?i2_isupper^0,c
 44339  00A160  6A02               	clrf	(?i2_isupper+1)^0,c
 44340  00A162  0012               	return		;funcret
 44341  00A164                     __end_ofi2_isupper:
 44342                           	opt callstack 0
 44343                           
 44344 ;; *************** function i2_isalpha *****************
 44345 ;; Defined at:
 44346 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 44347 ;; Parameters:    Size  Location     Type
 44348 ;;  c               2    0[COMRAM] int 
 44349 ;; Auto vars:     Size  Location     Type
 44350 ;;		None
 44351 ;; Return value:  Size  Location     Type
 44352 ;;                  2    0[COMRAM] int 
 44353 ;; Registers used:
 44354 ;;		wreg, status,2, status,0
 44355 ;; Tracked objects:
 44356 ;;		On entry : 0/0
 44357 ;;		On exit  : 0/0
 44358 ;;		Unchanged: 0/0
 44359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44364 ;;Total ram usage:        6 bytes
 44365 ;; Hardware stack levels used:    1
 44366 ;; This function calls:
 44367 ;;		Nothing
 44368 ;; This function is called by:
 44369 ;;		i2_xtoa
 44370 ;; This function uses a non-reentrant model
 44371 ;;
 44372                           
 44373                           	psect	text360
 44374  00A164                     __ptext360:
 44375                           	opt callstack 0
 44376  00A164                     i2_isalpha:
 44377                           	opt callstack 10
 44378                           
 44379                           ;incstack = 0
 44380  00A164  0E9F               	movlw	159
 44381  00A166  6E03               	movwf	??i2_isalpha^0,c
 44382  00A168  0EFF               	movlw	255
 44383  00A16A  6E04               	movwf	(??i2_isalpha+1)^0,c
 44384  00A16C  0E20               	movlw	32
 44385  00A16E  1001               	iorwf	i2isalpha@c^0,w,c
 44386  00A170  6E05               	movwf	(??i2_isalpha+2)^0,c
 44387  00A172  0E00               	movlw	0
 44388  00A174  1002               	iorwf	(i2isalpha@c+1)^0,w,c
 44389  00A176  6E06               	movwf	(??i2_isalpha+3)^0,c
 44390  00A178  5003               	movf	??i2_isalpha^0,w,c
 44391  00A17A  2605               	addwf	(??i2_isalpha+2)^0,f,c
 44392  00A17C  5004               	movf	(??i2_isalpha+1)^0,w,c
 44393  00A17E  2206               	addwfc	(??i2_isalpha+3)^0,f,c
 44394  00A180  5006               	movf	(??i2_isalpha+3)^0,w,c
 44395  00A182  E106               	bnz	i2u1584_40
 44396  00A184  0E1A               	movlw	26
 44397  00A186  5C05               	subwf	(??i2_isalpha+2)^0,w,c
 44398  00A188  B0D8               	btfsc	status,0,c
 44399  00A18A  D002               	goto	i2u1584_40
 44400  00A18C  0E01               	movlw	1
 44401  00A18E  D001               	goto	i2u1585_40
 44402  00A190                     i2u1584_40:
 44403  00A190  0E00               	movlw	0
 44404  00A192                     i2u1585_40:
 44405  00A192  6E01               	movwf	?i2_isalpha^0,c
 44406  00A194  6A02               	clrf	(?i2_isalpha+1)^0,c
 44407  00A196  0012               	return		;funcret
 44408  00A198                     __end_ofi2_isalpha:
 44409                           	opt callstack 0
 44410                           
 44411 ;; *************** function i2_stoa *****************
 44412 ;; Defined at:
 44413 ;;		line 546 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44414 ;; Parameters:    Size  Location     Type
 44415 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 44416 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44417 ;;  s               2   13[COMRAM] PTR unsigned char 
 44418 ;;		 -> ?_printf(2), ?_sprintf(2), adcVOffset(2), adcOffset(2), 
 44419 ;;		 -> STR_29(3), STR_28(3), STR_27(3), STR_26(3), 
 44420 ;;		 -> alarmData(399), STR_11(3), 
 44421 ;; Auto vars:     Size  Location     Type
 44422 ;;  stoa            7   16[COMRAM] unsigned char [7]
 44423 ;;  stoa            2   31[COMRAM] int 
 44424 ;;  stoa            2   29[COMRAM] int 
 44425 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 44426 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 44427 ;;		 -> adcVOffset(2), adcOffset(2), STR_29(3), STR_28(3), 
 44428 ;;		 -> STR_27(3), STR_26(3), alarmData(399), STR_11(3), 
 44429 ;;  stoa            2   25[COMRAM] int 
 44430 ;;  stoa            2   23[COMRAM] int 
 44431 ;; Return value:  Size  Location     Type
 44432 ;;                  2   11[COMRAM] int 
 44433 ;; Registers used:
 44434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44435 ;; Tracked objects:
 44436 ;;		On entry : 3E/1
 44437 ;;		On exit  : 0/0
 44438 ;;		Unchanged: 0/0
 44439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44441 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44443 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44444 ;;Total ram usage:       22 bytes
 44445 ;; Hardware stack levels used:    1
 44446 ;; Hardware stack levels required when called:    3
 44447 ;; This function calls:
 44448 ;;		i2_fputc
 44449 ;;		i2_strlen
 44450 ;; This function is called by:
 44451 ;;		i2_vfpfcnvrt
 44452 ;; This function uses a non-reentrant model
 44453 ;;
 44454                           
 44455                           	psect	text361
 44456  00577C                     __ptext361:
 44457                           	opt callstack 0
 44458  00577C                     i2_stoa:
 44459                           	opt callstack 8
 44460                           
 44461                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
 44462                           
 44463                           ;incstack = 0
 44464  00577C  EE20  F2D0         	lfsr	2,stoa@F1144
 44465  005780  EE10  F011         	lfsr	1,i2stoa@nuls
 44466  005784  0E06               	movlw	6
 44467  005786                     i2u1616_41:
 44468  005786  006F FF6F FFE3     	movff	plusw2,plusw1
 44469  00578C  06E8               	decf	wreg,f,c
 44470  00578E  E2FB               	bc	i2u1616_41
 44471                           
 44472                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 44473  005790  0060  F038  F01C   	movff	i2stoa@s,i2stoa@cp
 44474  005796  0060  F03C  F01D   	movff	i2stoa@s+1,i2stoa@cp+1
 44475                           
 44476                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 44477  00579C  501C               	movf	i2stoa@cp^0,w,c
 44478  00579E  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 44479  0057A0  A4D8               	btfss	status,2,c
 44480  0057A2  D003               	goto	i2l17228
 44481                           
 44482                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
 44483  0057A4  0E11               	movlw	low i2stoa@nuls
 44484  0057A6  6E1C               	movwf	i2stoa@cp^0,c
 44485  0057A8  6A1D               	clrf	(i2stoa@cp+1)^0,c
 44486  0057AA                     i2l17228:
 44487                           
 44488                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
 44489  0057AA  0060  F070  F001   	movff	i2stoa@cp,i2strlen@s
 44490  0057B0  0060  F074  F002   	movff	i2stoa@cp+1,i2strlen@s+1
 44491  0057B6  EC0D  F04D         	call	i2_strlen	;wreg free
 44492  0057BA  0060  F004  F020   	movff	?i2_strlen,i2stoa@l
 44493  0057C0  0060  F008  F021   	movff	?i2_strlen+1,i2stoa@l+1
 44494                           
 44495                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 44496  0057C6  0060  F724  F01E   	movff	_prec,i2stoa@p
 44497  0057CC  0060  F728  F01F   	movff	_prec+1,i2stoa@p+1
 44498                           
 44499                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 44500  0057D2  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 44501  0057D4  D010               	goto	i2l3519
 44502  0057D6  5020               	movf	i2stoa@l^0,w,c
 44503  0057D8  5C1E               	subwf	i2stoa@p^0,w,c
 44504  0057DA  501F               	movf	(i2stoa@p+1)^0,w,c
 44505  0057DC  0A80               	xorlw	128
 44506  0057DE  6E10               	movwf	??i2_stoa^0,c
 44507  0057E0  5021               	movf	(i2stoa@l+1)^0,w,c
 44508  0057E2  0A80               	xorlw	128
 44509  0057E4  5810               	subwfb	??i2_stoa^0,w,c
 44510  0057E6  B0D8               	btfsc	status,0,c
 44511  0057E8  D006               	goto	i2l3519
 44512  0057EA  0060  F078  F020   	movff	i2stoa@p,i2stoa@l
 44513  0057F0  0060  F07C  F021   	movff	i2stoa@p+1,i2stoa@l+1
 44514  0057F6                     i2l3519:
 44515                           
 44516                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 44517  0057F6  0060  F080  F01E   	movff	i2stoa@l,i2stoa@p
 44518  0057FC  0060  F084  F01F   	movff	i2stoa@l+1,i2stoa@p+1
 44519                           
 44520                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 44521  005802  0060  F71C  F01A   	movff	_width,i2stoa@w
 44522  005808  0060  F720  F01B   	movff	_width+1,i2stoa@w+1
 44523                           
 44524                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
 44525  00580E  0101               	movlb	1	; () banked
 44526  005810  A1CB               	btfss	_flags& (0+255),0,b
 44527  005812  D00F               	goto	i2l17242
 44528  005814  D018               	goto	i2u1621_40
 44529  005816                     i2l17238:
 44530                           
 44531                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
 44532  005816  0E00               	movlw	0
 44533  005818  6E04               	movwf	(i2fputc@c+1)^0,c
 44534  00581A  0E20               	movlw	32
 44535  00581C  6E03               	movwf	i2fputc@c^0,c
 44536  00581E  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 44537  005824  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 44538  00582A  EC91  F041         	call	i2_fputc	;wreg free
 44539                           
 44540                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
 44541  00582E  4A20               	infsnz	i2stoa@l^0,f,c
 44542  005830  2A21               	incf	(i2stoa@l+1)^0,f,c
 44543  005832                     i2l17242:
 44544                           
 44545                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
 44546  005832  501A               	movf	i2stoa@w^0,w,c
 44547  005834  5C20               	subwf	i2stoa@l^0,w,c
 44548  005836  5021               	movf	(i2stoa@l+1)^0,w,c
 44549  005838  0A80               	xorlw	128
 44550  00583A  6E10               	movwf	??i2_stoa^0,c
 44551  00583C  501B               	movf	(i2stoa@w+1)^0,w,c
 44552  00583E  0A80               	xorlw	128
 44553  005840  5810               	subwfb	??i2_stoa^0,w,c
 44554  005842  A0D8               	btfss	status,0,c
 44555  005844  D7E8               	goto	i2l17238
 44556  005846                     i2u1621_40:
 44557                           
 44558                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 44559  005846  0E00               	movlw	0
 44560  005848  6E19               	movwf	(i2stoa@i+1)^0,c
 44561  00584A  0E00               	movlw	0
 44562  00584C  6E18               	movwf	i2stoa@i^0,c
 44563                           
 44564                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 44565  00584E  D025               	goto	i2l17252
 44566  005850                     i2l17246:
 44567                           
 44568                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
 44569  005850  0060  F073  FFF6   	movff	i2stoa@cp,tblptrl
 44570  005856  0060  F077  FFF7   	movff	i2stoa@cp+1,tblptrh
 44571  00585C  0E00               	movlw	low (__mediumconst shr (0+16))
 44572  00585E  6EF8               	movwf	tblptru,c
 44573  005860  0E0F               	movlw	(high __ramtop+-1)
 44574  005862  64F7               	cpfsgt	tblptrh,c
 44575  005864  D003               	bra	i2u1622_47
 44576  005866  0008               	tblrd		*
 44577  005868  50F5               	movf	tablat,w,c
 44578  00586A  D007               	bra	i2u1622_40
 44579  00586C                     i2u1622_47:
 44580  00586C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 44581  005872  006F FFDF FFE2     	movff	tblptrh,fsr1h
 44582  005878  50E7               	movf	indf1,w,c
 44583  00587A                     i2u1622_40:
 44584  00587A  6E10               	movwf	??i2_stoa^0,c
 44585  00587C  5010               	movf	??i2_stoa^0,w,c
 44586  00587E  6E03               	movwf	i2fputc@c^0,c
 44587  005880  6A04               	clrf	(i2fputc@c+1)^0,c
 44588  005882  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 44589  005888  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 44590  00588E  EC91  F041         	call	i2_fputc	;wreg free
 44591                           
 44592                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 44593  005892  4A1C               	infsnz	i2stoa@cp^0,f,c
 44594  005894  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 44595                           
 44596                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 44597  005896  4A18               	infsnz	i2stoa@i^0,f,c
 44598  005898  2A19               	incf	(i2stoa@i+1)^0,f,c
 44599  00589A                     i2l17252:
 44600                           
 44601                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
 44602  00589A  501E               	movf	i2stoa@p^0,w,c
 44603  00589C  5C18               	subwf	i2stoa@i^0,w,c
 44604  00589E  5019               	movf	(i2stoa@i+1)^0,w,c
 44605  0058A0  0A80               	xorlw	128
 44606  0058A2  6E10               	movwf	??i2_stoa^0,c
 44607  0058A4  501F               	movf	(i2stoa@p+1)^0,w,c
 44608  0058A6  0A80               	xorlw	128
 44609  0058A8  5810               	subwfb	??i2_stoa^0,w,c
 44610  0058AA  A0D8               	btfss	status,0,c
 44611  0058AC  D7D1               	goto	i2l17246
 44612                           
 44613                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
 44614  0058AE  0101               	movlb	1	; () banked
 44615  0058B0  B1CB               	btfsc	_flags& (0+255),0,b
 44616  0058B2  D00F               	goto	i2l17260
 44617  0058B4  D018               	goto	i2u1625_40
 44618  0058B6                     i2l17256:
 44619                           
 44620                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
 44621  0058B6  0E00               	movlw	0
 44622  0058B8  6E04               	movwf	(i2fputc@c+1)^0,c
 44623  0058BA  0E20               	movlw	32
 44624  0058BC  6E03               	movwf	i2fputc@c^0,c
 44625  0058BE  0060  F030  F005   	movff	i2stoa@fp,i2fputc@fp
 44626  0058C4  0060  F034  F006   	movff	i2stoa@fp+1,i2fputc@fp+1
 44627  0058CA  EC91  F041         	call	i2_fputc	;wreg free
 44628                           
 44629                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
 44630  0058CE  4A20               	infsnz	i2stoa@l^0,f,c
 44631  0058D0  2A21               	incf	(i2stoa@l+1)^0,f,c
 44632  0058D2                     i2l17260:
 44633                           
 44634                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
 44635  0058D2  501A               	movf	i2stoa@w^0,w,c
 44636  0058D4  5C20               	subwf	i2stoa@l^0,w,c
 44637  0058D6  5021               	movf	(i2stoa@l+1)^0,w,c
 44638  0058D8  0A80               	xorlw	128
 44639  0058DA  6E10               	movwf	??i2_stoa^0,c
 44640  0058DC  501B               	movf	(i2stoa@w+1)^0,w,c
 44641  0058DE  0A80               	xorlw	128
 44642  0058E0  5810               	subwfb	??i2_stoa^0,w,c
 44643  0058E2  A0D8               	btfss	status,0,c
 44644  0058E4  D7E8               	goto	i2l17256
 44645  0058E6                     i2u1625_40:
 44646                           
 44647                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 44648                           
 44649                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
 44650  0058E6  0060  F080  F00C   	movff	i2stoa@l,?i2_stoa
 44651  0058EC  0060  F084  F00D   	movff	i2stoa@l+1,?i2_stoa+1
 44652  0058F2  0012               	return		;funcret
 44653  0058F4                     __end_ofi2_stoa:
 44654                           	opt callstack 0
 44655                           
 44656 ;; *************** function i2_dtoa *****************
 44657 ;; Defined at:
 44658 ;;		line 274 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 44659 ;; Parameters:    Size  Location     Type
 44660 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 44661 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 44662 ;;  d               8   31[COMRAM] long long 
 44663 ;; Auto vars:     Size  Location     Type
 44664 ;;  dtoa            8   55[COMRAM] long long 
 44665 ;;  dtoa            2   63[COMRAM] int 
 44666 ;;  dtoa            2   53[COMRAM] int 
 44667 ;;  dtoa            2   51[COMRAM] int 
 44668 ;;  dtoa            2   49[COMRAM] int 
 44669 ;; Return value:  Size  Location     Type
 44670 ;;                  2   29[COMRAM] int 
 44671 ;; Registers used:
 44672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44673 ;; Tracked objects:
 44674 ;;		On entry : 3F/0
 44675 ;;		On exit  : 0/0
 44676 ;;		Unchanged: 0/0
 44677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44678 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44679 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44680 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44681 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44682 ;;Total ram usage:       36 bytes
 44683 ;; Hardware stack levels used:    1
 44684 ;; Hardware stack levels required when called:    5
 44685 ;; This function calls:
 44686 ;;		i2___aodiv
 44687 ;;		i2___aomod
 44688 ;;		i2_abs
 44689 ;;		i2_pad
 44690 ;; This function is called by:
 44691 ;;		i2_vfpfcnvrt
 44692 ;; This function uses a non-reentrant model
 44693 ;;
 44694                           
 44695                           	psect	text362
 44696  0037DC                     __ptext362:
 44697                           	opt callstack 0
 44698  0037DC                     i2_dtoa:
 44699                           	opt callstack 6
 44700                           
 44701                           ; BSR set to: 0
 44702                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 44703                           
 44704                           ;incstack = 0
 44705  0037DC  0060  F080  F038   	movff	i2dtoa@d,i2dtoa@n
 44706  0037E2  0060  F084  F039   	movff	i2dtoa@d+1,i2dtoa@n+1
 44707  0037E8  0060  F088  F03A   	movff	i2dtoa@d+2,i2dtoa@n+2
 44708  0037EE  0060  F08C  F03B   	movff	i2dtoa@d+3,i2dtoa@n+3
 44709  0037F4  0060  F090  F03C   	movff	i2dtoa@d+4,i2dtoa@n+4
 44710  0037FA  0060  F094  F03D   	movff	i2dtoa@d+5,i2dtoa@n+5
 44711  003800  0060  F098  F03E   	movff	i2dtoa@d+6,i2dtoa@n+6
 44712  003806  0060  F09C  F03F   	movff	i2dtoa@d+7,i2dtoa@n+7
 44713                           
 44714                           ; BSR set to: 0
 44715                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 44716  00380C  AE3F               	btfss	(i2dtoa@n+7)^0,7,c
 44717  00380E  D002               	goto	i2u1601_40
 44718  003810  0E01               	movlw	1
 44719  003812  D001               	goto	i2u1602_40
 44720  003814                     i2u1601_40:
 44721  003814  0E00               	movlw	0
 44722  003816                     i2u1602_40:
 44723  003816  6E36               	movwf	i2dtoa@s^0,c
 44724  003818  6A37               	clrf	(i2dtoa@s+1)^0,c
 44725                           
 44726                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 44727  00381A  5036               	movf	i2dtoa@s^0,w,c
 44728  00381C  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44729  00381E  B4D8               	btfsc	status,2,c
 44730  003820  D010               	goto	i2l17164
 44731                           
 44732                           ; BSR set to: 0
 44733                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 44734  003822  1E3F               	comf	(i2dtoa@n+7)^0,f,c
 44735  003824  1E3E               	comf	(i2dtoa@n+6)^0,f,c
 44736  003826  1E3D               	comf	(i2dtoa@n+5)^0,f,c
 44737  003828  1E3C               	comf	(i2dtoa@n+4)^0,f,c
 44738  00382A  1E3B               	comf	(i2dtoa@n+3)^0,f,c
 44739  00382C  1E3A               	comf	(i2dtoa@n+2)^0,f,c
 44740  00382E  1E39               	comf	(i2dtoa@n+1)^0,f,c
 44741  003830  6C38               	negf	i2dtoa@n^0,c
 44742  003832  0E00               	movlw	0
 44743  003834  2239               	addwfc	(i2dtoa@n+1)^0,f,c
 44744  003836  223A               	addwfc	(i2dtoa@n+2)^0,f,c
 44745  003838  223B               	addwfc	(i2dtoa@n+3)^0,f,c
 44746  00383A  223C               	addwfc	(i2dtoa@n+4)^0,f,c
 44747  00383C  223D               	addwfc	(i2dtoa@n+5)^0,f,c
 44748  00383E  223E               	addwfc	(i2dtoa@n+6)^0,f,c
 44749  003840  223F               	addwfc	(i2dtoa@n+7)^0,f,c
 44750  003842                     i2l17164:
 44751                           
 44752                           ; BSR set to: 0
 44753                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 44754  003842  0101               	movlb	1	; () banked
 44755  003844  AFCA               	btfss	(_prec+1)& (0+255),7,b
 44756                           
 44757                           ; BSR set to: 1
 44758                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 44759  003846  93CB               	bcf	_flags& (0+255),1,b
 44760                           
 44761                           ; BSR set to: 1
 44762                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 44763  003848  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 44764  00384A  D005               	goto	i2u1605_40
 44765  00384C  51CA               	movf	(_prec+1)& (0+255),w,b
 44766  00384E  E108               	bnz	i2l3490
 44767  003850  05C9               	decf	_prec& (0+255),w,b
 44768  003852  B0D8               	btfsc	status,0,c
 44769  003854  D005               	goto	i2l3490
 44770  003856                     i2u1605_40:
 44771                           
 44772                           ; BSR set to: 1
 44773  003856  0E00               	movlw	0
 44774  003858  6E33               	movwf	(i2dtoa@p+1)^0,c
 44775  00385A  0E01               	movlw	1
 44776  00385C  6E32               	movwf	i2dtoa@p^0,c
 44777  00385E  D006               	goto	i2l3492
 44778  003860                     i2l3490:
 44779                           
 44780                           ; BSR set to: 1
 44781  003860  0060  F724  F032   	movff	_prec,i2dtoa@p
 44782  003866  0060  F728  F033   	movff	_prec+1,i2dtoa@p+1
 44783  00386C                     i2l3492:
 44784                           
 44785                           ; BSR set to: 1
 44786                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 44787  00386C  0060  F71C  F034   	movff	_width,i2dtoa@w
 44788  003872  0060  F720  F035   	movff	_width+1,i2dtoa@w+1
 44789                           
 44790                           ; BSR set to: 1
 44791                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 44792  003878  5036               	movf	i2dtoa@s^0,w,c
 44793  00387A  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44794  00387C  A4D8               	btfss	status,2,c
 44795  00387E  D002               	goto	i2u1607_40
 44796                           
 44797                           ; BSR set to: 1
 44798  003880  A5CB               	btfss	_flags& (0+255),2,b
 44799  003882  D003               	goto	i2l17178
 44800  003884                     i2u1607_40:
 44801                           
 44802                           ; BSR set to: 1
 44803                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 44804  003884  0634               	decf	i2dtoa@w^0,f,c
 44805  003886  A0D8               	btfss	status,0,c
 44806  003888  0635               	decf	(i2dtoa@w+1)^0,f,c
 44807  00388A                     i2l17178:
 44808                           
 44809                           ; BSR set to: 1
 44810                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 44811  00388A  0E00               	movlw	0
 44812  00388C  6E41               	movwf	(i2dtoa@i+1)^0,c
 44813  00388E  0E1F               	movlw	31
 44814  003890  6E40               	movwf	i2dtoa@i^0,c
 44815                           
 44816                           ; BSR set to: 1
 44817                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 44818  003892  0E00               	movlw	0
 44819  003894  0103               	movlb	3	; () banked
 44820  003896  6FA8               	movwf	(_dbuf+31)& (0+255),b
 44821                           
 44822                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44823  003898  D09E               	goto	i2l17192
 44824  00389A                     i2l17182:
 44825                           
 44826                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 44827  00389A  0640               	decf	i2dtoa@i^0,f,c
 44828  00389C  A0D8               	btfss	status,0,c
 44829  00389E  0641               	decf	(i2dtoa@i+1)^0,f,c
 44830                           
 44831                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 44832  0038A0  0E89               	movlw	low _dbuf
 44833  0038A2  2440               	addwf	i2dtoa@i^0,w,c
 44834  0038A4  6ED9               	movwf	fsr2l,c
 44835  0038A6  0E03               	movlw	high _dbuf
 44836  0038A8  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 44837  0038AA  6EDA               	movwf	fsr2h,c
 44838  0038AC  0060  F0E0  F001   	movff	i2dtoa@n,i2___aomod@dividend
 44839  0038B2  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aomod@dividend+1
 44840  0038B8  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aomod@dividend+2
 44841  0038BE  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aomod@dividend+3
 44842  0038C4  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aomod@dividend+4
 44843  0038CA  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aomod@dividend+5
 44844  0038D0  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aomod@dividend+6
 44845  0038D6  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aomod@dividend+7
 44846  0038DC  0E0A               	movlw	10
 44847  0038DE  6E09               	movwf	i2___aomod@divisor^0,c
 44848  0038E0  0E00               	movlw	0
 44849  0038E2  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 44850  0038E4  0E00               	movlw	0
 44851  0038E6  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 44852  0038E8  0E00               	movlw	0
 44853  0038EA  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 44854  0038EC  0E00               	movlw	0
 44855  0038EE  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 44856  0038F0  0E00               	movlw	0
 44857  0038F2  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 44858  0038F4  0E00               	movlw	0
 44859  0038F6  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 44860  0038F8  0E00               	movlw	0
 44861  0038FA  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 44862  0038FC  ECD6  F033         	call	i2___aomod	;wreg free
 44863  003900  0060  F004  F028   	movff	?i2___aomod,??i2_dtoa
 44864  003906  0060  F008  F029   	movff	?i2___aomod+1,??i2_dtoa+1
 44865  00390C  0060  F00C  F02A   	movff	?i2___aomod+2,??i2_dtoa+2
 44866  003912  0060  F010  F02B   	movff	?i2___aomod+3,??i2_dtoa+3
 44867  003918  0060  F014  F02C   	movff	?i2___aomod+4,??i2_dtoa+4
 44868  00391E  0060  F018  F02D   	movff	?i2___aomod+5,??i2_dtoa+5
 44869  003924  0060  F01C  F02E   	movff	?i2___aomod+6,??i2_dtoa+6
 44870  00392A  0060  F020  F02F   	movff	?i2___aomod+7,??i2_dtoa+7
 44871  003930  0060  F0A0  F013   	movff	??i2_dtoa,i2abs@a
 44872  003936  0060  F0A8  F014   	movff	??i2_dtoa+2,i2abs@a+1
 44873  00393C  EC30  F04F         	call	i2_abs	;wreg free
 44874  003940  5013               	movf	?i2_abs^0,w,c
 44875  003942  0F30               	addlw	48
 44876  003944  6EDF               	movwf	indf2,c
 44877                           
 44878                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 44879  003946  0632               	decf	i2dtoa@p^0,f,c
 44880  003948  A0D8               	btfss	status,0,c
 44881  00394A  0633               	decf	(i2dtoa@p+1)^0,f,c
 44882                           
 44883                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 44884  00394C  0634               	decf	i2dtoa@w^0,f,c
 44885  00394E  A0D8               	btfss	status,0,c
 44886  003950  0635               	decf	(i2dtoa@w+1)^0,f,c
 44887                           
 44888                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 44889  003952  0060  F0E0  F001   	movff	i2dtoa@n,i2___aodiv@dividend
 44890  003958  0060  F0E4  F002   	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 44891  00395E  0060  F0E8  F003   	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 44892  003964  0060  F0EC  F004   	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 44893  00396A  0060  F0F0  F005   	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 44894  003970  0060  F0F4  F006   	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 44895  003976  0060  F0F8  F007   	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 44896  00397C  0060  F0FC  F008   	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 44897  003982  0E0A               	movlw	10
 44898  003984  6E09               	movwf	i2___aodiv@divisor^0,c
 44899  003986  0E00               	movlw	0
 44900  003988  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 44901  00398A  0E00               	movlw	0
 44902  00398C  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 44903  00398E  0E00               	movlw	0
 44904  003990  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 44905  003992  0E00               	movlw	0
 44906  003994  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 44907  003996  0E00               	movlw	0
 44908  003998  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 44909  00399A  0E00               	movlw	0
 44910  00399C  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 44911  00399E  0E00               	movlw	0
 44912  0039A0  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 44913  0039A2  ECB4  F030         	call	i2___aodiv	;wreg free
 44914  0039A6  0060  F004  F038   	movff	?i2___aodiv,i2dtoa@n
 44915  0039AC  0060  F008  F039   	movff	?i2___aodiv+1,i2dtoa@n+1
 44916  0039B2  0060  F00C  F03A   	movff	?i2___aodiv+2,i2dtoa@n+2
 44917  0039B8  0060  F010  F03B   	movff	?i2___aodiv+3,i2dtoa@n+3
 44918  0039BE  0060  F014  F03C   	movff	?i2___aodiv+4,i2dtoa@n+4
 44919  0039C4  0060  F018  F03D   	movff	?i2___aodiv+5,i2dtoa@n+5
 44920  0039CA  0060  F01C  F03E   	movff	?i2___aodiv+6,i2dtoa@n+6
 44921  0039D0  0060  F020  F03F   	movff	?i2___aodiv+7,i2dtoa@n+7
 44922  0039D6                     i2l17192:
 44923                           
 44924                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 44925  0039D6  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
 44926  0039D8  D020               	goto	i2u1612_40
 44927  0039DA  5041               	movf	(i2dtoa@i+1)^0,w,c
 44928  0039DC  E103               	bnz	i2u1608_40
 44929  0039DE  0440               	decf	i2dtoa@i^0,w,c
 44930  0039E0  A0D8               	btfss	status,0,c
 44931  0039E2  D01B               	goto	i2u1612_40
 44932  0039E4                     i2u1608_40:
 44933  0039E4  5038               	movf	i2dtoa@n^0,w,c
 44934  0039E6  1039               	iorwf	(i2dtoa@n+1)^0,w,c
 44935  0039E8  103A               	iorwf	(i2dtoa@n+2)^0,w,c
 44936  0039EA  103B               	iorwf	(i2dtoa@n+3)^0,w,c
 44937  0039EC  103C               	iorwf	(i2dtoa@n+4)^0,w,c
 44938  0039EE  103D               	iorwf	(i2dtoa@n+5)^0,w,c
 44939  0039F0  103E               	iorwf	(i2dtoa@n+6)^0,w,c
 44940  0039F2  103F               	iorwf	(i2dtoa@n+7)^0,w,c
 44941  0039F4  A4D8               	btfss	status,2,c
 44942  0039F6  D751               	goto	i2l17182
 44943  0039F8  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 44944  0039FA  D005               	goto	i2u1610_40
 44945  0039FC  5033               	movf	(i2dtoa@p+1)^0,w,c
 44946  0039FE  E102               	bnz	i2u1610_41
 44947  003A00  0432               	decf	i2dtoa@p^0,w,c
 44948  003A02  B0D8               	btfsc	status,0,c
 44949  003A04                     i2u1610_41:
 44950  003A04  D74A               	goto	i2l17182
 44951  003A06                     i2u1610_40:
 44952  003A06  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 44953  003A08  D008               	goto	i2u1612_40
 44954  003A0A  5035               	movf	(i2dtoa@w+1)^0,w,c
 44955  003A0C  E103               	bnz	i2u1611_40
 44956  003A0E  0434               	decf	i2dtoa@w^0,w,c
 44957  003A10  A0D8               	btfss	status,0,c
 44958  003A12  D003               	goto	i2u1612_40
 44959  003A14                     i2u1611_40:
 44960  003A14  0101               	movlb	1	; () banked
 44961  003A16  B3CB               	btfsc	_flags& (0+255),1,b
 44962  003A18  D740               	goto	i2l17182
 44963  003A1A                     i2u1612_40:
 44964                           
 44965                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 44966  003A1A  5036               	movf	i2dtoa@s^0,w,c
 44967  003A1C  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44968  003A1E  A4D8               	btfss	status,2,c
 44969  003A20  D003               	goto	i2u1614_40
 44970  003A22  0101               	movlb	1	; () banked
 44971  003A24  A5CB               	btfss	_flags& (0+255),2,b
 44972  003A26  D018               	goto	i2l17216
 44973  003A28                     i2u1614_40:
 44974                           
 44975                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 44976  003A28  0640               	decf	i2dtoa@i^0,f,c
 44977  003A2A  A0D8               	btfss	status,0,c
 44978  003A2C  0641               	decf	(i2dtoa@i+1)^0,f,c
 44979                           
 44980                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 44981  003A2E  5036               	movf	i2dtoa@s^0,w,c
 44982  003A30  1037               	iorwf	(i2dtoa@s+1)^0,w,c
 44983  003A32  A4D8               	btfss	status,2,c
 44984  003A34  D004               	goto	i2l17212
 44985  003A36  0E00               	movlw	0
 44986  003A38  6E31               	movwf	(i2_dtoa$5181+1)^0,c
 44987  003A3A  0E2B               	movlw	43
 44988  003A3C  D003               	goto	L23
 44989  003A3E                     i2l17212:
 44990  003A3E  0E00               	movlw	0
 44991  003A40  6E31               	movwf	(i2_dtoa$5181+1)^0,c
 44992  003A42  0E2D               	movlw	45
 44993  003A44                     L23:
 44994  003A44  6E30               	movwf	i2_dtoa$5181^0,c
 44995  003A46  0E89               	movlw	low _dbuf
 44996  003A48  2440               	addwf	i2dtoa@i^0,w,c
 44997  003A4A  6ED9               	movwf	fsr2l,c
 44998  003A4C  0E03               	movlw	high _dbuf
 44999  003A4E  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 45000  003A50  6EDA               	movwf	fsr2h,c
 45001  003A52  0060  F0C3  FFDF   	movff	i2_dtoa$5181,indf2
 45002  003A58                     i2l17216:
 45003                           
 45004                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 45005  003A58  0060  F078  F013   	movff	i2dtoa@fp,i2pad@fp
 45006  003A5E  0060  F07C  F014   	movff	i2dtoa@fp+1,i2pad@fp+1
 45007  003A64  0E89               	movlw	low _dbuf
 45008  003A66  2440               	addwf	i2dtoa@i^0,w,c
 45009  003A68  6E15               	movwf	i2pad@buf^0,c
 45010  003A6A  0E03               	movlw	high _dbuf
 45011  003A6C  2041               	addwfc	(i2dtoa@i+1)^0,w,c
 45012  003A6E  6E16               	movwf	(i2pad@buf+1)^0,c
 45013  003A70  0060  F0D0  F017   	movff	i2dtoa@w,i2pad@p
 45014  003A76  0060  F0D4  F018   	movff	i2dtoa@w+1,i2pad@p+1
 45015  003A7C  EC7B  F03F         	call	i2_pad	;wreg free
 45016  003A80  0060  F04C  F01E   	movff	?i2_pad,?i2_dtoa
 45017  003A86  0060  F050  F01F   	movff	?i2_pad+1,?i2_dtoa+1
 45018  003A8C  0012               	return		;funcret
 45019  003A8E                     __end_ofi2_dtoa:
 45020                           	opt callstack 0
 45021                           
 45022 ;; *************** function i2_abs *****************
 45023 ;; Defined at:
 45024 ;;		line 1 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 45025 ;; Parameters:    Size  Location     Type
 45026 ;;  a               2   18[COMRAM] int 
 45027 ;; Auto vars:     Size  Location     Type
 45028 ;;		None
 45029 ;; Return value:  Size  Location     Type
 45030 ;;                  2   18[COMRAM] int 
 45031 ;; Registers used:
 45032 ;;		wreg, status,2, status,0
 45033 ;; Tracked objects:
 45034 ;;		On entry : 0/3
 45035 ;;		On exit  : 0/0
 45036 ;;		Unchanged: 0/0
 45037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45042 ;;Total ram usage:        4 bytes
 45043 ;; Hardware stack levels used:    1
 45044 ;; This function calls:
 45045 ;;		Nothing
 45046 ;; This function is called by:
 45047 ;;		i2_dtoa
 45048 ;; This function uses a non-reentrant model
 45049 ;;
 45050                           
 45051                           	psect	text363
 45052  009E60                     __ptext363:
 45053                           	opt callstack 0
 45054  009E60                     i2_abs:
 45055                           	opt callstack 10
 45056                           
 45057                           ;incstack = 0
 45058  009E60  BE14               	btfsc	(i2abs@a+1)^0,7,c
 45059  009E62  D005               	goto	i2u1583_40
 45060  009E64  5014               	movf	(i2abs@a+1)^0,w,c
 45061  009E66  E114               	bnz	i2l4282
 45062  009E68  0413               	decf	i2abs@a^0,w,c
 45063  009E6A  B0D8               	btfsc	status,0,c
 45064  009E6C  D011               	goto	i2l4282
 45065  009E6E                     i2u1583_40:
 45066  009E6E  0060  F04C  F015   	movff	i2abs@a,??i2_abs
 45067  009E74  0060  F050  F016   	movff	i2abs@a+1,??i2_abs+1
 45068  009E7A  1E15               	comf	??i2_abs^0,f,c
 45069  009E7C  1E16               	comf	(??i2_abs+1)^0,f,c
 45070  009E7E  4A15               	infsnz	??i2_abs^0,f,c
 45071  009E80  2A16               	incf	(??i2_abs+1)^0,f,c
 45072  009E82  0060  F054  F013   	movff	??i2_abs,?i2_abs
 45073  009E88  0060  F058  F014   	movff	??i2_abs+1,?i2_abs+1
 45074  009E8E  0012               	return	
 45075  009E90                     i2l4282:
 45076  009E90  0060  F04C  F013   	movff	i2abs@a,?i2_abs
 45077  009E96  0060  F050  F014   	movff	i2abs@a+1,?i2_abs+1
 45078  009E9C  0012               	return		;funcret
 45079  009E9E                     __end_ofi2_abs:
 45080                           	opt callstack 0
 45081                           
 45082 ;; *************** function i2___aomod *****************
 45083 ;; Defined at:
 45084 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 45085 ;; Parameters:    Size  Location     Type
 45086 ;;  dividend        8    0[COMRAM] long long 
 45087 ;;  divisor         8    8[COMRAM] long long 
 45088 ;; Auto vars:     Size  Location     Type
 45089 ;;  __aomod         1   17[COMRAM] unsigned char 
 45090 ;;  __aomod         1   16[COMRAM] unsigned char 
 45091 ;; Return value:  Size  Location     Type
 45092 ;;                  8    0[COMRAM] long long 
 45093 ;; Registers used:
 45094 ;;		wreg, status,2, status,0
 45095 ;; Tracked objects:
 45096 ;;		On entry : 0/3
 45097 ;;		On exit  : 0/0
 45098 ;;		Unchanged: 0/0
 45099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45100 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45103 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45104 ;;Total ram usage:       18 bytes
 45105 ;; Hardware stack levels used:    1
 45106 ;; This function calls:
 45107 ;;		Nothing
 45108 ;; This function is called by:
 45109 ;;		i2_dtoa
 45110 ;; This function uses a non-reentrant model
 45111 ;;
 45112                           
 45113                           	psect	text364
 45114  0067AC                     __ptext364:
 45115                           	opt callstack 0
 45116  0067AC                     i2___aomod:
 45117                           	opt callstack 10
 45118                           
 45119                           ;incstack = 0
 45120  0067AC  0E00               	movlw	0
 45121  0067AE  6E12               	movwf	i2___aomod@sign^0,c
 45122  0067B0  AE08               	btfss	(i2___aomod@dividend+7)^0,7,c
 45123  0067B2  D012               	goto	i2l17056
 45124  0067B4  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 45125  0067B6  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 45126  0067B8  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 45127  0067BA  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 45128  0067BC  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 45129  0067BE  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 45130  0067C0  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 45131  0067C2  6C01               	negf	i2___aomod@dividend^0,c
 45132  0067C4  0E00               	movlw	0
 45133  0067C6  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 45134  0067C8  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 45135  0067CA  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 45136  0067CC  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 45137  0067CE  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 45138  0067D0  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 45139  0067D2  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 45140  0067D4  0E01               	movlw	1
 45141  0067D6  6E12               	movwf	i2___aomod@sign^0,c
 45142  0067D8                     i2l17056:
 45143  0067D8  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 45144  0067DA  D010               	goto	i2l17060
 45145  0067DC  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 45146  0067DE  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 45147  0067E0  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 45148  0067E2  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 45149  0067E4  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 45150  0067E6  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 45151  0067E8  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 45152  0067EA  6C09               	negf	i2___aomod@divisor^0,c
 45153  0067EC  0E00               	movlw	0
 45154  0067EE  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 45155  0067F0  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 45156  0067F2  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 45157  0067F4  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 45158  0067F6  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 45159  0067F8  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 45160  0067FA  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 45161  0067FC                     i2l17060:
 45162  0067FC  5009               	movf	i2___aomod@divisor^0,w,c
 45163  0067FE  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 45164  006800  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 45165  006802  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 45166  006804  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 45167  006806  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 45168  006808  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 45169  00680A  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 45170  00680C  B4D8               	btfsc	status,2,c
 45171  00680E  D03C               	goto	i2l17076
 45172  006810  0E01               	movlw	1
 45173  006812  6E11               	movwf	i2___aomod@counter^0,c
 45174  006814  D00A               	goto	i2l17066
 45175  006816                     i2l17064:
 45176  006816  90D8               	bcf	status,0,c
 45177  006818  3609               	rlcf	i2___aomod@divisor^0,f,c
 45178  00681A  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 45179  00681C  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 45180  00681E  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 45181  006820  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 45182  006822  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 45183  006824  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 45184  006826  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 45185  006828  2A11               	incf	i2___aomod@counter^0,f,c
 45186  00682A                     i2l17066:
 45187  00682A  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 45188  00682C  D7F4               	goto	i2l17064
 45189  00682E                     i2u1580_40:
 45190  00682E  5009               	movf	i2___aomod@divisor^0,w,c
 45191  006830  5C01               	subwf	i2___aomod@dividend^0,w,c
 45192  006832  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 45193  006834  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 45194  006836  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 45195  006838  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 45196  00683A  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 45197  00683C  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 45198  00683E  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 45199  006840  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 45200  006842  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 45201  006844  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 45202  006846  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 45203  006848  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 45204  00684A  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 45205  00684C  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 45206  00684E  A0D8               	btfss	status,0,c
 45207  006850  D010               	goto	i2l17072
 45208  006852  5009               	movf	i2___aomod@divisor^0,w,c
 45209  006854  5E01               	subwf	i2___aomod@dividend^0,f,c
 45210  006856  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 45211  006858  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 45212  00685A  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 45213  00685C  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 45214  00685E  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 45215  006860  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 45216  006862  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 45217  006864  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 45218  006866  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 45219  006868  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 45220  00686A  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 45221  00686C  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 45222  00686E  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 45223  006870  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 45224  006872                     i2l17072:
 45225  006872  90D8               	bcf	status,0,c
 45226  006874  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 45227  006876  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 45228  006878  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 45229  00687A  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 45230  00687C  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 45231  00687E  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 45232  006880  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 45233  006882  3209               	rrcf	i2___aomod@divisor^0,f,c
 45234  006884  2E11               	decfsz	i2___aomod@counter^0,f,c
 45235  006886  D7D3               	goto	i2u1580_40
 45236  006888                     i2l17076:
 45237  006888  5012               	movf	i2___aomod@sign^0,w,c
 45238  00688A  B4D8               	btfsc	status,2,c
 45239  00688C  D010               	goto	i2l17080
 45240  00688E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 45241  006890  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 45242  006892  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 45243  006894  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 45244  006896  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 45245  006898  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 45246  00689A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 45247  00689C  6C01               	negf	i2___aomod@dividend^0,c
 45248  00689E  0E00               	movlw	0
 45249  0068A0  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 45250  0068A2  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 45251  0068A4  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 45252  0068A6  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 45253  0068A8  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 45254  0068AA  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 45255  0068AC  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 45256  0068AE                     i2l17080:
 45257  0068AE  0060  F004  F001   	movff	i2___aomod@dividend,?i2___aomod
 45258  0068B4  0060  F008  F002   	movff	i2___aomod@dividend+1,?i2___aomod+1
 45259  0068BA  0060  F00C  F003   	movff	i2___aomod@dividend+2,?i2___aomod+2
 45260  0068C0  0060  F010  F004   	movff	i2___aomod@dividend+3,?i2___aomod+3
 45261  0068C6  0060  F014  F005   	movff	i2___aomod@dividend+4,?i2___aomod+4
 45262  0068CC  0060  F018  F006   	movff	i2___aomod@dividend+5,?i2___aomod+5
 45263  0068D2  0060  F01C  F007   	movff	i2___aomod@dividend+6,?i2___aomod+6
 45264  0068D8  0060  F020  F008   	movff	i2___aomod@dividend+7,?i2___aomod+7
 45265  0068DE  0012               	return		;funcret
 45266  0068E0                     __end_ofi2___aomod:
 45267                           	opt callstack 0
 45268                           
 45269 ;; *************** function i2___aodiv *****************
 45270 ;; Defined at:
 45271 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 45272 ;; Parameters:    Size  Location     Type
 45273 ;;  dividend        8    0[COMRAM] long long 
 45274 ;;  divisor         8    8[COMRAM] long long 
 45275 ;; Auto vars:     Size  Location     Type
 45276 ;;  __aodiv         8   18[COMRAM] long long 
 45277 ;;  __aodiv         1   17[COMRAM] unsigned char 
 45278 ;;  __aodiv         1   16[COMRAM] unsigned char 
 45279 ;; Return value:  Size  Location     Type
 45280 ;;                  8    0[COMRAM] long long 
 45281 ;; Registers used:
 45282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45283 ;; Tracked objects:
 45284 ;;		On entry : 0/3
 45285 ;;		On exit  : 0/0
 45286 ;;		Unchanged: 0/0
 45287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45288 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45289 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45291 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45292 ;;Total ram usage:       26 bytes
 45293 ;; Hardware stack levels used:    1
 45294 ;; This function calls:
 45295 ;;		Nothing
 45296 ;; This function is called by:
 45297 ;;		i2_dtoa
 45298 ;; This function uses a non-reentrant model
 45299 ;;
 45300                           
 45301                           	psect	text365
 45302  006168                     __ptext365:
 45303                           	opt callstack 0
 45304  006168                     i2___aodiv:
 45305                           	opt callstack 10
 45306                           
 45307                           ;incstack = 0
 45308  006168  0E00               	movlw	0
 45309  00616A  6E12               	movwf	i2___aodiv@sign^0,c
 45310  00616C  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 45311  00616E  D012               	goto	i2l17012
 45312  006170  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 45313  006172  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 45314  006174  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 45315  006176  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 45316  006178  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 45317  00617A  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 45318  00617C  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 45319  00617E  6C09               	negf	i2___aodiv@divisor^0,c
 45320  006180  0E00               	movlw	0
 45321  006182  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 45322  006184  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 45323  006186  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 45324  006188  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 45325  00618A  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 45326  00618C  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 45327  00618E  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 45328  006190  0E01               	movlw	1
 45329  006192  6E12               	movwf	i2___aodiv@sign^0,c
 45330  006194                     i2l17012:
 45331  006194  AE08               	btfss	(i2___aodiv@dividend+7)^0,7,c
 45332  006196  D012               	goto	i2l17018
 45333  006198  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 45334  00619A  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 45335  00619C  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 45336  00619E  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 45337  0061A0  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 45338  0061A2  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 45339  0061A4  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 45340  0061A6  6C01               	negf	i2___aodiv@dividend^0,c
 45341  0061A8  0E00               	movlw	0
 45342  0061AA  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 45343  0061AC  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 45344  0061AE  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 45345  0061B0  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 45346  0061B2  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 45347  0061B4  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 45348  0061B6  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 45349  0061B8  0E01               	movlw	1
 45350  0061BA  1A12               	xorwf	i2___aodiv@sign^0,f,c
 45351  0061BC                     i2l17018:
 45352  0061BC  EE20  F013         	lfsr	2,i2___aodiv@quotient
 45353  0061C0  0E07               	movlw	7
 45354  0061C2                     i2u1572_41:
 45355  0061C2  6ADE               	clrf	postinc2,c
 45356  0061C4  06E8               	decf	wreg,f,c
 45357  0061C6  E2FD               	bc	i2u1572_41
 45358  0061C8  5009               	movf	i2___aodiv@divisor^0,w,c
 45359  0061CA  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 45360  0061CC  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 45361  0061CE  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 45362  0061D0  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 45363  0061D2  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 45364  0061D4  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 45365  0061D6  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 45366  0061D8  B4D8               	btfsc	status,2,c
 45367  0061DA  D046               	goto	i2l17040
 45368  0061DC  0E01               	movlw	1
 45369  0061DE  6E11               	movwf	i2___aodiv@counter^0,c
 45370  0061E0  D00A               	goto	i2l17026
 45371  0061E2                     i2l17024:
 45372  0061E2  90D8               	bcf	status,0,c
 45373  0061E4  3609               	rlcf	i2___aodiv@divisor^0,f,c
 45374  0061E6  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 45375  0061E8  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 45376  0061EA  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 45377  0061EC  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 45378  0061EE  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 45379  0061F0  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 45380  0061F2  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 45381  0061F4  2A11               	incf	i2___aodiv@counter^0,f,c
 45382  0061F6                     i2l17026:
 45383  0061F6  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 45384  0061F8  D7F4               	goto	i2l17024
 45385  0061FA                     i2u1574_40:
 45386  0061FA  90D8               	bcf	status,0,c
 45387  0061FC  3613               	rlcf	i2___aodiv@quotient^0,f,c
 45388  0061FE  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 45389  006200  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 45390  006202  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 45391  006204  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 45392  006206  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 45393  006208  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 45394  00620A  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 45395  00620C  5009               	movf	i2___aodiv@divisor^0,w,c
 45396  00620E  5C01               	subwf	i2___aodiv@dividend^0,w,c
 45397  006210  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 45398  006212  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 45399  006214  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 45400  006216  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 45401  006218  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 45402  00621A  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 45403  00621C  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 45404  00621E  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 45405  006220  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 45406  006222  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 45407  006224  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 45408  006226  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 45409  006228  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 45410  00622A  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 45411  00622C  A0D8               	btfss	status,0,c
 45412  00622E  D011               	goto	i2l17036
 45413  006230  5009               	movf	i2___aodiv@divisor^0,w,c
 45414  006232  5E01               	subwf	i2___aodiv@dividend^0,f,c
 45415  006234  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 45416  006236  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 45417  006238  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 45418  00623A  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 45419  00623C  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 45420  00623E  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 45421  006240  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 45422  006242  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 45423  006244  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 45424  006246  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 45425  006248  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 45426  00624A  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 45427  00624C  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 45428  00624E  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 45429  006250  8013               	bsf	i2___aodiv@quotient^0,0,c
 45430  006252                     i2l17036:
 45431  006252  90D8               	bcf	status,0,c
 45432  006254  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 45433  006256  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 45434  006258  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 45435  00625A  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 45436  00625C  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 45437  00625E  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 45438  006260  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 45439  006262  3209               	rrcf	i2___aodiv@divisor^0,f,c
 45440  006264  2E11               	decfsz	i2___aodiv@counter^0,f,c
 45441  006266  D7C9               	goto	i2u1574_40
 45442  006268                     i2l17040:
 45443  006268  5012               	movf	i2___aodiv@sign^0,w,c
 45444  00626A  B4D8               	btfsc	status,2,c
 45445  00626C  D010               	goto	i2l17044
 45446  00626E  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 45447  006270  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 45448  006272  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 45449  006274  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 45450  006276  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 45451  006278  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 45452  00627A  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 45453  00627C  6C13               	negf	i2___aodiv@quotient^0,c
 45454  00627E  0E00               	movlw	0
 45455  006280  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 45456  006282  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 45457  006284  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 45458  006286  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 45459  006288  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 45460  00628A  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 45461  00628C  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 45462  00628E                     i2l17044:
 45463  00628E  0060  F04C  F001   	movff	i2___aodiv@quotient,?i2___aodiv
 45464  006294  0060  F050  F002   	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 45465  00629A  0060  F054  F003   	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 45466  0062A0  0060  F058  F004   	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 45467  0062A6  0060  F05C  F005   	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 45468  0062AC  0060  F060  F006   	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 45469  0062B2  0060  F064  F007   	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 45470  0062B8  0060  F068  F008   	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 45471  0062BE  0012               	return		;funcret
 45472  0062C0                     __end_ofi2___aodiv:
 45473                           	opt callstack 0
 45474                           
 45475 ;; *************** function i2_ctoa *****************
 45476 ;; Defined at:
 45477 ;;		line 259 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 45478 ;; Parameters:    Size  Location     Type
 45479 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 45480 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45481 ;;  c               1   31[COMRAM] unsigned char 
 45482 ;; Auto vars:     Size  Location     Type
 45483 ;;  ctoa            2   32[COMRAM] int 
 45484 ;;  ctoa            2    0        int 
 45485 ;; Return value:  Size  Location     Type
 45486 ;;                  2   29[COMRAM] int 
 45487 ;; Registers used:
 45488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45489 ;; Tracked objects:
 45490 ;;		On entry : 3F/0
 45491 ;;		On exit  : 0/0
 45492 ;;		Unchanged: 0/0
 45493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45494 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45498 ;;Total ram usage:        5 bytes
 45499 ;; Hardware stack levels used:    1
 45500 ;; Hardware stack levels required when called:    5
 45501 ;; This function calls:
 45502 ;;		i2_pad
 45503 ;; This function is called by:
 45504 ;;		i2_vfpfcnvrt
 45505 ;; This function uses a non-reentrant model
 45506 ;;
 45507                           
 45508                           	psect	text366
 45509  0094BC                     __ptext366:
 45510                           	opt callstack 0
 45511  0094BC                     i2_ctoa:
 45512                           	opt callstack 6
 45513                           
 45514                           ; BSR set to: 0
 45515                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 45516                           
 45517                           ;incstack = 0
 45518  0094BC  0101               	movlb	1	; () banked
 45519  0094BE  51C7               	movf	_width& (0+255),w,b
 45520  0094C0  11C8               	iorwf	(_width+1)& (0+255),w,b
 45521  0094C2  A4D8               	btfss	status,2,c
 45522  0094C4  D007               	goto	i2l17148
 45523                           
 45524                           ; BSR set to: 1
 45525  0094C6  0060  F71C  F021   	movff	_width,i2ctoa@w
 45526  0094CC  0060  F720  F022   	movff	_width+1,i2ctoa@w+1
 45527  0094D2  D006               	goto	i2l17150
 45528  0094D4                     i2l17148:
 45529                           
 45530                           ; BSR set to: 1
 45531  0094D4  0EFF               	movlw	255
 45532  0094D6  25C7               	addwf	_width& (0+255),w,b
 45533  0094D8  6E21               	movwf	i2ctoa@w^0,c
 45534  0094DA  0EFF               	movlw	255
 45535  0094DC  21C8               	addwfc	(_width+1)& (0+255),w,b
 45536  0094DE  6E22               	movwf	(i2ctoa@w+1)^0,c
 45537  0094E0                     i2l17150:
 45538                           
 45539                           ; BSR set to: 1
 45540                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 45541  0094E0  0060  F080  F389   	movff	i2ctoa@c,_dbuf
 45542                           
 45543                           ; BSR set to: 1
 45544                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 45545  0094E6  0E00               	movlw	0
 45546  0094E8  0103               	movlb	3	; () banked
 45547  0094EA  6F8A               	movwf	(_dbuf+1)& (0+255),b
 45548                           
 45549                           ; BSR set to: 3
 45550                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 45551  0094EC  0060  F078  F013   	movff	i2ctoa@fp,i2pad@fp
 45552  0094F2  0060  F07C  F014   	movff	i2ctoa@fp+1,i2pad@fp+1
 45553  0094F8  0E89               	movlw	low _dbuf
 45554  0094FA  6E15               	movwf	i2pad@buf^0,c
 45555  0094FC  0E03               	movlw	high _dbuf
 45556  0094FE  6E16               	movwf	(i2pad@buf+1)^0,c
 45557  009500  0060  F084  F017   	movff	i2ctoa@w,i2pad@p
 45558  009506  0060  F088  F018   	movff	i2ctoa@w+1,i2pad@p+1
 45559  00950C  EC7B  F03F         	call	i2_pad	;wreg free
 45560  009510  0060  F04C  F01E   	movff	?i2_pad,?i2_ctoa
 45561  009516  0060  F050  F01F   	movff	?i2_pad+1,?i2_ctoa+1
 45562  00951C  0012               	return		;funcret
 45563  00951E                     __end_ofi2_ctoa:
 45564                           	opt callstack 0
 45565                           
 45566 ;; *************** function i2_pad *****************
 45567 ;; Defined at:
 45568 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 45569 ;; Parameters:    Size  Location     Type
 45570 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 45571 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45572 ;;  buf             2   20[COMRAM] PTR unsigned char 
 45573 ;;		 -> dbuf(32), 
 45574 ;;  p               2   22[COMRAM] int 
 45575 ;; Auto vars:     Size  Location     Type
 45576 ;;  pad             2   27[COMRAM] int 
 45577 ;;  pad             2   25[COMRAM] int 
 45578 ;; Return value:  Size  Location     Type
 45579 ;;                  2   18[COMRAM] int 
 45580 ;; Registers used:
 45581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45582 ;; Tracked objects:
 45583 ;;		On entry : 0/1
 45584 ;;		On exit  : 0/0
 45585 ;;		Unchanged: 0/0
 45586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45590 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45591 ;;Total ram usage:       11 bytes
 45592 ;; Hardware stack levels used:    1
 45593 ;; Hardware stack levels required when called:    4
 45594 ;; This function calls:
 45595 ;;		i2_fputc
 45596 ;;		i2_fputs
 45597 ;;		i2_strlen
 45598 ;; This function is called by:
 45599 ;;		i2_ctoa
 45600 ;;		i2_dtoa
 45601 ;;		i2_xtoa
 45602 ;; This function uses a non-reentrant model
 45603 ;;
 45604                           
 45605                           	psect	text367
 45606  007EF6                     __ptext367:
 45607                           	opt callstack 0
 45608  007EF6                     i2_pad:
 45609                           	opt callstack 6
 45610                           
 45611                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 45612                           
 45613                           ;incstack = 0
 45614  007EF6  0101               	movlb	1	; () banked
 45615  007EF8  A1CB               	btfss	_flags& (0+255),0,b
 45616  007EFA  D00E               	goto	i2l16980
 45617                           
 45618                           ; BSR set to: 1
 45619                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 45620  007EFC  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 45621  007F02  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 45622  007F08  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 45623  007F0E  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 45624  007F14  EC4F  F04F         	call	i2_fputs	;wreg free
 45625  007F18                     i2l16980:
 45626                           
 45627                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 45628  007F18  BE18               	btfsc	(i2pad@p+1)^0,7,c
 45629  007F1A  D007               	goto	i2l16984
 45630  007F1C  0060  F05C  F01C   	movff	i2pad@p,i2pad@w
 45631  007F22  0060  F060  F01D   	movff	i2pad@p+1,i2pad@w+1
 45632  007F28  D004               	goto	i2l3472
 45633  007F2A                     i2l16984:
 45634  007F2A  0E00               	movlw	0
 45635  007F2C  6E1D               	movwf	(i2pad@w+1)^0,c
 45636  007F2E  0E00               	movlw	0
 45637  007F30  6E1C               	movwf	i2pad@w^0,c
 45638  007F32                     i2l3472:
 45639                           
 45640                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 45641  007F32  0E00               	movlw	0
 45642  007F34  6E1B               	movwf	(i2pad@i+1)^0,c
 45643  007F36  0E00               	movlw	0
 45644  007F38  6E1A               	movwf	i2pad@i^0,c
 45645                           
 45646                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 45647  007F3A  D00E               	goto	i2l16990
 45648  007F3C                     i2l16986:
 45649                           
 45650                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 45651  007F3C  0E00               	movlw	0
 45652  007F3E  6E04               	movwf	(i2fputc@c+1)^0,c
 45653  007F40  0E20               	movlw	32
 45654  007F42  6E03               	movwf	i2fputc@c^0,c
 45655  007F44  0060  F04C  F005   	movff	i2pad@fp,i2fputc@fp
 45656  007F4A  0060  F050  F006   	movff	i2pad@fp+1,i2fputc@fp+1
 45657  007F50  EC91  F041         	call	i2_fputc	;wreg free
 45658                           
 45659                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 45660  007F54  4A1A               	infsnz	i2pad@i^0,f,c
 45661  007F56  2A1B               	incf	(i2pad@i+1)^0,f,c
 45662  007F58                     i2l16990:
 45663                           
 45664                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 45665  007F58  501C               	movf	i2pad@w^0,w,c
 45666  007F5A  5C1A               	subwf	i2pad@i^0,w,c
 45667  007F5C  501B               	movf	(i2pad@i+1)^0,w,c
 45668  007F5E  0A80               	xorlw	128
 45669  007F60  6E19               	movwf	??i2_pad^0,c
 45670  007F62  501D               	movf	(i2pad@w+1)^0,w,c
 45671  007F64  0A80               	xorlw	128
 45672  007F66  5819               	subwfb	??i2_pad^0,w,c
 45673  007F68  A0D8               	btfss	status,0,c
 45674  007F6A  D7E8               	goto	i2l16986
 45675                           
 45676                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 45677  007F6C  0101               	movlb	1	; () banked
 45678  007F6E  B1CB               	btfsc	_flags& (0+255),0,b
 45679  007F70  D00E               	goto	i2l16994
 45680                           
 45681                           ; BSR set to: 1
 45682                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 45683  007F72  0060  F054  F00C   	movff	i2pad@buf,i2fputs@s
 45684  007F78  0060  F058  F00D   	movff	i2pad@buf+1,i2fputs@s+1
 45685  007F7E  0060  F04C  F00E   	movff	i2pad@fp,i2fputs@fp
 45686  007F84  0060  F050  F00F   	movff	i2pad@fp+1,i2fputs@fp+1
 45687  007F8A  EC4F  F04F         	call	i2_fputs	;wreg free
 45688  007F8E                     i2l16994:
 45689                           
 45690                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 45691  007F8E  0060  F054  F001   	movff	i2pad@buf,i2strlen@s
 45692  007F94  0060  F058  F002   	movff	i2pad@buf+1,i2strlen@s+1
 45693  007F9A  EC0D  F04D         	call	i2_strlen	;wreg free
 45694  007F9E  501C               	movf	i2pad@w^0,w,c
 45695  007FA0  2401               	addwf	?i2_strlen^0,w,c
 45696  007FA2  6E13               	movwf	?i2_pad^0,c
 45697  007FA4  501D               	movf	(i2pad@w+1)^0,w,c
 45698  007FA6  2002               	addwfc	(?i2_strlen+1)^0,w,c
 45699  007FA8  6E14               	movwf	(?i2_pad+1)^0,c
 45700  007FAA  0012               	return		;funcret
 45701  007FAC                     __end_ofi2_pad:
 45702                           	opt callstack 0
 45703                           
 45704 ;; *************** function i2_strlen *****************
 45705 ;; Defined at:
 45706 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 45707 ;; Parameters:    Size  Location     Type
 45708 ;;  s               2    0[COMRAM] PTR const unsigned char 
 45709 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 45710 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 45711 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 45712 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 45713 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 45714 ;;		 -> STR_5(17), 
 45715 ;; Auto vars:     Size  Location     Type
 45716 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 45717 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 45718 ;;		 -> dbuf(32), adcVOffset(2), adcOffset(2), STR_29(3), 
 45719 ;;		 -> STR_28(3), STR_27(3), STR_26(3), alarmData(399), 
 45720 ;;		 -> msg3(20), STR_11(3), msg2(20), msg1(20), 
 45721 ;;		 -> msg4(20), LCDTest@msg2(17), LCDTest@msg1(17), STR_6(17), 
 45722 ;;		 -> STR_5(17), 
 45723 ;; Return value:  Size  Location     Type
 45724 ;;                  2    0[COMRAM] unsigned int 
 45725 ;; Registers used:
 45726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 45727 ;; Tracked objects:
 45728 ;;		On entry : 0/1
 45729 ;;		On exit  : 0/0
 45730 ;;		Unchanged: 0/0
 45731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45735 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45736 ;;Total ram usage:        4 bytes
 45737 ;; Hardware stack levels used:    1
 45738 ;; This function calls:
 45739 ;;		Nothing
 45740 ;; This function is called by:
 45741 ;;		i2_pad
 45742 ;;		i2_stoa
 45743 ;; This function uses a non-reentrant model
 45744 ;;
 45745                           
 45746                           	psect	text368
 45747  009A1A                     __ptext368:
 45748                           	opt callstack 0
 45749  009A1A                     i2_strlen:
 45750                           	opt callstack 9
 45751                           
 45752                           ;incstack = 0
 45753  009A1A  0060  F004  F003   	movff	i2strlen@s,i2strlen@a
 45754  009A20  0060  F008  F004   	movff	i2strlen@s+1,i2strlen@a+1
 45755  009A26  D002               	goto	i2l16950
 45756  009A28                     i2l16948:
 45757  009A28  4A01               	infsnz	i2strlen@s^0,f,c
 45758  009A2A  2A02               	incf	(i2strlen@s+1)^0,f,c
 45759  009A2C                     i2l16950:
 45760  009A2C  0060  F007  FFF6   	movff	i2strlen@s,tblptrl
 45761  009A32  0060  F00B  FFF7   	movff	i2strlen@s+1,tblptrh
 45762  009A38  0E00               	movlw	low (__mediumconst shr (0+16))
 45763  009A3A  6EF8               	movwf	tblptru,c
 45764  009A3C  0E0F               	movlw	(high __ramtop+-1)
 45765  009A3E  64F7               	cpfsgt	tblptrh,c
 45766  009A40  D003               	bra	i2u1558_47
 45767  009A42  0008               	tblrd		*
 45768  009A44  50F5               	movf	tablat,w,c
 45769  009A46  D007               	bra	i2u1558_40
 45770  009A48                     i2u1558_47:
 45771  009A48  006F FFDB FFE1     	movff	tblptrl,fsr1l
 45772  009A4E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 45773  009A54  50E7               	movf	indf1,w,c
 45774  009A56                     i2u1558_40:
 45775  009A56  0900               	iorlw	0
 45776  009A58  A4D8               	btfss	status,2,c
 45777  009A5A  D7E6               	goto	i2l16948
 45778  009A5C  5003               	movf	i2strlen@a^0,w,c
 45779  009A5E  5C01               	subwf	i2strlen@s^0,w,c
 45780  009A60  6E01               	movwf	?i2_strlen^0,c
 45781  009A62  5004               	movf	(i2strlen@a+1)^0,w,c
 45782  009A64  5802               	subwfb	(i2strlen@s+1)^0,w,c
 45783  009A66  6E02               	movwf	(?i2_strlen+1)^0,c
 45784  009A68  0012               	return		;funcret
 45785  009A6A                     __end_ofi2_strlen:
 45786                           	opt callstack 0
 45787                           
 45788 ;; *************** function i2_fputs *****************
 45789 ;; Defined at:
 45790 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 45791 ;; Parameters:    Size  Location     Type
 45792 ;;  s               2   11[COMRAM] PTR const unsigned char 
 45793 ;;		 -> dbuf(32), 
 45794 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 45795 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45796 ;; Auto vars:     Size  Location     Type
 45797 ;;  fputs           2   16[COMRAM] int 
 45798 ;;  fputs           1   15[COMRAM] unsigned char 
 45799 ;; Return value:  Size  Location     Type
 45800 ;;                  2   11[COMRAM] int 
 45801 ;; Registers used:
 45802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45803 ;; Tracked objects:
 45804 ;;		On entry : 3F/1
 45805 ;;		On exit  : 0/0
 45806 ;;		Unchanged: 0/0
 45807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45809 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45812 ;;Total ram usage:        7 bytes
 45813 ;; Hardware stack levels used:    1
 45814 ;; Hardware stack levels required when called:    3
 45815 ;; This function calls:
 45816 ;;		i2_fputc
 45817 ;; This function is called by:
 45818 ;;		i2_pad
 45819 ;; This function uses a non-reentrant model
 45820 ;;
 45821                           
 45822                           	psect	text369
 45823  009E9E                     __ptext369:
 45824                           	opt callstack 0
 45825  009E9E                     i2_fputs:
 45826                           	opt callstack 6
 45827                           
 45828                           ; BSR set to: 1
 45829                           
 45830                           ;incstack = 0
 45831  009E9E  0E00               	movlw	0
 45832  009EA0  6E12               	movwf	(i2fputs@i+1)^0,c
 45833  009EA2  0E00               	movlw	0
 45834  009EA4  6E11               	movwf	i2fputs@i^0,c
 45835  009EA6  D00E               	goto	i2l16944
 45836  009EA8                     i2l16940:
 45837  009EA8  0060  F040  F003   	movff	i2fputs@c,i2fputc@c
 45838  009EAE  6A04               	clrf	(i2fputc@c+1)^0,c
 45839  009EB0  0060  F038  F005   	movff	i2fputs@fp,i2fputc@fp
 45840  009EB6  0060  F03C  F006   	movff	i2fputs@fp+1,i2fputc@fp+1
 45841  009EBC  EC91  F041         	call	i2_fputc	;wreg free
 45842  009EC0  4A11               	infsnz	i2fputs@i^0,f,c
 45843  009EC2  2A12               	incf	(i2fputs@i+1)^0,f,c
 45844  009EC4                     i2l16944:
 45845  009EC4  5011               	movf	i2fputs@i^0,w,c
 45846  009EC6  240C               	addwf	i2fputs@s^0,w,c
 45847  009EC8  6ED9               	movwf	fsr2l,c
 45848  009ECA  5012               	movf	(i2fputs@i+1)^0,w,c
 45849  009ECC  200D               	addwfc	(i2fputs@s+1)^0,w,c
 45850  009ECE  6EDA               	movwf	fsr2h,c
 45851  009ED0  50DF               	movf	indf2,w,c
 45852  009ED2  6E10               	movwf	i2fputs@c^0,c
 45853  009ED4  5010               	movf	i2fputs@c^0,w,c
 45854  009ED6  B4D8               	btfsc	status,2,c
 45855  009ED8  0012               	return	
 45856  009EDA  D7E6               	goto	i2l16940
 45857  009EDC                     __end_ofi2_fputs:
 45858                           	opt callstack 0
 45859                           
 45860 ;; *************** function i2_fputc *****************
 45861 ;; Defined at:
 45862 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 45863 ;; Parameters:    Size  Location     Type
 45864 ;;  c               2    2[COMRAM] int 
 45865 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 45866 ;;		 -> i2sprintf@f(6), sprintf@f(6), NULL(0), 
 45867 ;; Auto vars:     Size  Location     Type
 45868 ;;		None
 45869 ;; Return value:  Size  Location     Type
 45870 ;;                  2    2[COMRAM] int 
 45871 ;; Registers used:
 45872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45873 ;; Tracked objects:
 45874 ;;		On entry : 0/1
 45875 ;;		On exit  : 0/0
 45876 ;;		Unchanged: 0/0
 45877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45880 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45882 ;;Total ram usage:        9 bytes
 45883 ;; Hardware stack levels used:    1
 45884 ;; Hardware stack levels required when called:    2
 45885 ;; This function calls:
 45886 ;;		i2_putch
 45887 ;; This function is called by:
 45888 ;;		i2_pad
 45889 ;;		i2_stoa
 45890 ;;		i2_vfpfcnvrt
 45891 ;;		i2_fputs
 45892 ;; This function uses a non-reentrant model
 45893 ;;
 45894                           
 45895                           	psect	text370
 45896  008322                     __ptext370:
 45897                           	opt callstack 0
 45898  008322                     i2_fputc:
 45899                           	opt callstack 6
 45900                           
 45901                           ;incstack = 0
 45902  008322  5005               	movf	i2fputc@fp^0,w,c
 45903  008324  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45904  008326  B4D8               	btfsc	status,2,c
 45905  008328  D004               	goto	i2u1554_40
 45906  00832A  5005               	movf	i2fputc@fp^0,w,c
 45907  00832C  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 45908  00832E  A4D8               	btfss	status,2,c
 45909  008330  D004               	goto	i2l16928
 45910  008332                     i2u1554_40:
 45911  008332  5003               	movf	i2fputc@c^0,w,c
 45912  008334  EC06  F057         	call	i2_putch
 45913  008338  0012               	return	
 45914  00833A                     i2l16928:
 45915  00833A  EE20 F004          	lfsr	2,4
 45916  00833E  5005               	movf	i2fputc@fp^0,w,c
 45917  008340  26D9               	addwf	fsr2l,f,c
 45918  008342  5006               	movf	(i2fputc@fp+1)^0,w,c
 45919  008344  22DA               	addwfc	fsr2h,f,c
 45920  008346  50DE               	movf	postinc2,w,c
 45921  008348  10DE               	iorwf	postinc2,w,c
 45922  00834A  B4D8               	btfsc	status,2,c
 45923  00834C  D016               	goto	i2u1556_40
 45924  00834E  EE20 F004          	lfsr	2,4
 45925  008352  5005               	movf	i2fputc@fp^0,w,c
 45926  008354  26D9               	addwf	fsr2l,f,c
 45927  008356  5006               	movf	(i2fputc@fp+1)^0,w,c
 45928  008358  22DA               	addwfc	fsr2h,f,c
 45929  00835A  EE10 F002          	lfsr	1,2
 45930  00835E  5005               	movf	i2fputc@fp^0,w,c
 45931  008360  26E1               	addwf	fsr1l,f,c
 45932  008362  5006               	movf	(i2fputc@fp+1)^0,w,c
 45933  008364  22E2               	addwfc	fsr1h,f,c
 45934  008366  50DE               	movf	postinc2,w,c
 45935  008368  5CE6               	subwf	postinc1,w,c
 45936  00836A  50E6               	movf	postinc1,w,c
 45937  00836C  0A80               	xorlw	128
 45938  00836E  6E0B               	movwf	(??i2_fputc+4)^0,c
 45939  008370  50DE               	movf	postinc2,w,c
 45940  008372  0A80               	xorlw	128
 45941  008374  580B               	subwfb	(??i2_fputc+4)^0,w,c
 45942  008376  B0D8               	btfsc	status,0,c
 45943  008378  0012               	return	
 45944  00837A                     i2u1556_40:
 45945  00837A  EE20 F002          	lfsr	2,2
 45946  00837E  5005               	movf	i2fputc@fp^0,w,c
 45947  008380  26D9               	addwf	fsr2l,f,c
 45948  008382  5006               	movf	(i2fputc@fp+1)^0,w,c
 45949  008384  22DA               	addwfc	fsr2h,f,c
 45950  008386  006F FF78  F007    	movff	postinc2,??i2_fputc
 45951  00838C  006F FF74  F008    	movff	postdec2,??i2_fputc+1
 45952  008392  0060  F017  FFD9   	movff	i2fputc@fp,fsr2l
 45953  008398  0060  F01B  FFDA   	movff	i2fputc@fp+1,fsr2h
 45954  00839E  006F FF78  F009    	movff	postinc2,??i2_fputc+2
 45955  0083A4  006F FF74  F00A    	movff	postdec2,??i2_fputc+3
 45956  0083AA  5007               	movf	??i2_fputc^0,w,c
 45957  0083AC  2409               	addwf	(??i2_fputc+2)^0,w,c
 45958  0083AE  6ED9               	movwf	fsr2l,c
 45959  0083B0  5008               	movf	(??i2_fputc+1)^0,w,c
 45960  0083B2  200A               	addwfc	(??i2_fputc+3)^0,w,c
 45961  0083B4  6EDA               	movwf	fsr2h,c
 45962  0083B6  0060  F00F  FFDF   	movff	i2fputc@c,indf2
 45963  0083BC  EE20 F002          	lfsr	2,2
 45964  0083C0  5005               	movf	i2fputc@fp^0,w,c
 45965  0083C2  26D9               	addwf	fsr2l,f,c
 45966  0083C4  5006               	movf	(i2fputc@fp+1)^0,w,c
 45967  0083C6  22DA               	addwfc	fsr2h,f,c
 45968  0083C8  2ADE               	incf	postinc2,f,c
 45969  0083CA  0E00               	movlw	0
 45970  0083CC  22DD               	addwfc	postdec2,f,c
 45971  0083CE  0012               	return		;funcret
 45972  0083D0                     __end_ofi2_fputc:
 45973                           	opt callstack 0
 45974                           
 45975 ;; *************** function i2_putch *****************
 45976 ;; Defined at:
 45977 ;;		line 229 in file "mcc_generated_files/uart1.c"
 45978 ;; Parameters:    Size  Location     Type
 45979 ;;  txData          1    wreg     unsigned char 
 45980 ;; Auto vars:     Size  Location     Type
 45981 ;;  txData          1    1[COMRAM] unsigned char 
 45982 ;; Return value:  Size  Location     Type
 45983 ;;                  1    wreg      void 
 45984 ;; Registers used:
 45985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45986 ;; Tracked objects:
 45987 ;;		On entry : 0/1
 45988 ;;		On exit  : 3F/39
 45989 ;;		Unchanged: 0/0
 45990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45995 ;;Total ram usage:        1 bytes
 45996 ;; Hardware stack levels used:    1
 45997 ;; Hardware stack levels required when called:    1
 45998 ;; This function calls:
 45999 ;;		i2_UART1_Write
 46000 ;; This function is called by:
 46001 ;;		i2_fputc
 46002 ;; This function uses a non-reentrant model
 46003 ;;
 46004                           
 46005                           	psect	text371
 46006  00AE0C                     __ptext371:
 46007                           	opt callstack 0
 46008  00AE0C                     i2_putch:
 46009                           	opt callstack 6
 46010                           
 46011                           ;incstack = 0
 46012                           ;i2putch@txData stored from wreg
 46013  00AE0C  6E02               	movwf	i2putch@txData^0,c
 46014                           
 46015                           ;mcc_generated_files/uart1.c: 229: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          230: {;mcc_generated_files/uart1.c: 231:     UART1_Write(txData);
 46016  00AE0E  5002               	movf	i2putch@txData^0,w,c
 46017  00AE10  EC9A  F04B         	call	i2_UART1_Write
 46018                           
 46019                           ; BSR set to: 57
 46020  00AE14  0012               	return		;funcret
 46021  00AE16                     __end_ofi2_putch:
 46022                           	opt callstack 0
 46023                           
 46024 ;; *************** function i2_UART1_Write *****************
 46025 ;; Defined at:
 46026 ;;		line 201 in file "mcc_generated_files/uart1.c"
 46027 ;; Parameters:    Size  Location     Type
 46028 ;;  txData          1    wreg     unsigned char 
 46029 ;; Auto vars:     Size  Location     Type
 46030 ;;  txData          1    0[COMRAM] unsigned char 
 46031 ;; Return value:  Size  Location     Type
 46032 ;;                  1    wreg      void 
 46033 ;; Registers used:
 46034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46035 ;; Tracked objects:
 46036 ;;		On entry : 0/1
 46037 ;;		On exit  : 3F/39
 46038 ;;		Unchanged: 0/0
 46039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46044 ;;Total ram usage:        1 bytes
 46045 ;; Hardware stack levels used:    1
 46046 ;; This function calls:
 46047 ;;		Nothing
 46048 ;; This function is called by:
 46049 ;;		i2_putch
 46050 ;; This function uses a non-reentrant model
 46051 ;;
 46052                           
 46053                           	psect	text372
 46054  009734                     __ptext372:
 46055                           	opt callstack 0
 46056  009734                     i2_UART1_Write:
 46057                           	opt callstack 6
 46058                           
 46059                           ; BSR set to: 57
 46060                           ;incstack = 0
 46061                           ;i2UART1_Write@txData stored from wreg
 46062  009734  6E01               	movwf	i2UART1_Write@txData^0,c
 46063  009736                     
 46064                           ;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 46065                           
 46066                           ;mcc_generated_files/uart1.c: 201: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 202: {;mcc_generated_files/uart1.c: 203:     while(0 == uart1TxBufferRemaining)
 46067  009736  0102               	movlb	2	; () banked
 46068  009738  51EB               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 46069  00973A  11EC               	iorwf	(_uart1TxBufferRemaining+1)& (0+255),w,b	;volatile
 46070  00973C  B4D8               	btfsc	status,2,c
 46071  00973E  D7FB               	goto	i2l16884
 46072                           
 46073                           ; BSR set to: 2
 46074                           ;mcc_generated_files/uart1.c: 207:     if(0 == PIE3bits.U1TXIE)
 46075  009740  0139               	movlb	57	; () banked
 46076  009742  B993               	btfsc	147,4,b	;volatile
 46077  009744  D004               	goto	i2l655
 46078                           
 46079                           ; BSR set to: 57
 46080                           ;mcc_generated_files/uart1.c: 208:     {;mcc_generated_files/uart1.c: 209:         U1TXB
      +                           = txData;
 46081  009746  0060  F007  FDEA   	movff	i2UART1_Write@txData,15850	;volatile
 46082                           
 46083                           ;mcc_generated_files/uart1.c: 210:     }
 46084  00974C  D01B               	goto	i2l16900
 46085  00974E                     i2l655:
 46086                           
 46087                           ; BSR set to: 57
 46088                           ;mcc_generated_files/uart1.c: 212:     {;mcc_generated_files/uart1.c: 213:         PIE3b
      +                          its.U1TXIE = 0;
 46089  00974E  9993               	bcf	147,4,b	;volatile
 46090                           
 46091                           ; BSR set to: 57
 46092                           ;mcc_generated_files/uart1.c: 214:         uart1TxBuffer[uart1TxHead++] = txData;
 46093  009750  0E64               	movlw	low _uart1TxBuffer
 46094  009752  0101               	movlb	1	; () banked
 46095  009754  25F1               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 46096  009756  6ED9               	movwf	fsr2l,c
 46097  009758  0E04               	movlw	high _uart1TxBuffer
 46098  00975A  21F2               	addwfc	(_uart1TxHead+1)& (0+255),w,b	;volatile
 46099  00975C  6EDA               	movwf	fsr2h,c
 46100  00975E  0060  F007  FFDF   	movff	i2UART1_Write@txData,indf2
 46101                           
 46102                           ; BSR set to: 1
 46103  009764  4BF1               	infsnz	_uart1TxHead& (0+255),f,b	;volatile
 46104  009766  2BF2               	incf	(_uart1TxHead+1)& (0+255),f,b	;volatile
 46105                           
 46106                           ; BSR set to: 1
 46107                           ;mcc_generated_files/uart1.c: 215:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 46108  009768  0EB0               	movlw	176
 46109  00976A  5DF1               	subwf	_uart1TxHead& (0+255),w,b	;volatile
 46110  00976C  0E04               	movlw	4
 46111  00976E  59F2               	subwfb	(_uart1TxHead+1)& (0+255),w,b	;volatile
 46112  009770  A0D8               	btfss	status,0,c
 46113  009772  D004               	goto	i2l16898
 46114                           
 46115                           ; BSR set to: 1
 46116                           ;mcc_generated_files/uart1.c: 216:         {;mcc_generated_files/uart1.c: 217:          
      +                             uart1TxHead = 0;
 46117  009774  0E00               	movlw	0
 46118  009776  6FF2               	movwf	(_uart1TxHead+1)& (0+255),b	;volatile
 46119  009778  0E00               	movlw	0
 46120  00977A  6FF1               	movwf	_uart1TxHead& (0+255),b	;volatile
 46121  00977C                     i2l16898:
 46122                           
 46123                           ; BSR set to: 1
 46124                           ;mcc_generated_files/uart1.c: 219:         uart1TxBufferRemaining--;
 46125  00977C  0102               	movlb	2	; () banked
 46126  00977E  07EB               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 46127  009780  A0D8               	btfss	status,0,c
 46128  009782  07EC               	decf	(_uart1TxBufferRemaining+1)& (0+255),f,b	;volatile
 46129  009784                     i2l16900:
 46130                           
 46131                           ;mcc_generated_files/uart1.c: 221:     PIE3bits.U1TXIE = 1;
 46132  009784  0139               	movlb	57	; () banked
 46133  009786  8993               	bsf	147,4,b	;volatile
 46134                           
 46135                           ; BSR set to: 57
 46136  009788  0012               	return		;funcret
 46137  00978A                     __end_ofi2_UART1_Write:
 46138                           	opt callstack 0
 46139                           
 46140 ;; *************** function i2_atoi *****************
 46141 ;; Defined at:
 46142 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 46143 ;; Parameters:    Size  Location     Type
 46144 ;;  s               2    7[COMRAM] PTR const unsigned char 
 46145 ;;		 -> STR_55(4), STR_54(4), STR_53(15), STR_52(16), 
 46146 ;;		 -> STR_51(32), STR_50(32), STR_49(13), STR_48(12), 
 46147 ;;		 -> STR_47(14), STR_46(4), STR_45(4), STR_44(2), 
 46148 ;;		 -> STR_43(10), STR_42(4), STR_41(55), STR_40(53), 
 46149 ;;		 -> STR_39(43), STR_38(54), STR_37(40), STR_36(36), 
 46150 ;;		 -> STR_35(41), STR_34(32), STR_33(65), STR_32(4), 
 46151 ;;		 -> STR_31(12), STR_30(4), STR_25(5), STR_24(3), 
 46152 ;;		 -> STR_23(7), STR_22(18), STR_21(15), STR_20(15), 
 46153 ;;		 -> STR_19(12), STR_18(5), STR_17(5), STR_16(5), 
 46154 ;;		 -> STR_15(5), STR_14(19), STR_13(8), STR_12(23), 
 46155 ;;		 -> STR_10(26), STR_9(17), STR_8(17), STR_7(15), 
 46156 ;;		 -> STR_4(45), STR_3(4), STR_2(15), STR_1(13), 
 46157 ;; Auto vars:     Size  Location     Type
 46158 ;;  atoi            2   20[COMRAM] int 
 46159 ;;  atoi            2   13[COMRAM] int 
 46160 ;; Return value:  Size  Location     Type
 46161 ;;                  2    7[COMRAM] int 
 46162 ;; Registers used:
 46163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46164 ;; Tracked objects:
 46165 ;;		On entry : 3F/1
 46166 ;;		On exit  : 0/0
 46167 ;;		Unchanged: 0/0
 46168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46170 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46172 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46173 ;;Total ram usage:       15 bytes
 46174 ;; Hardware stack levels used:    1
 46175 ;; Hardware stack levels required when called:    1
 46176 ;; This function calls:
 46177 ;;		i2___wmul
 46178 ;;		i2_isdigit
 46179 ;;		i2_isspace
 46180 ;; This function is called by:
 46181 ;;		i2_vfpfcnvrt
 46182 ;; This function uses a non-reentrant model
 46183 ;;
 46184                           
 46185                           	psect	text373
 46186  005D46                     __ptext373:
 46187                           	opt callstack 0
 46188  005D46                     i2_atoi:
 46189                           	opt callstack 10
 46190                           
 46191                           ; BSR set to: 1
 46192                           
 46193                           ; BSR set to: 57
 46194                           ;incstack = 0
 46195  005D46  0E00               	movlw	0
 46196  005D48  6E16               	movwf	(i2atoi@n+1)^0,c
 46197  005D4A  0E00               	movlw	0
 46198  005D4C  6E15               	movwf	i2atoi@n^0,c
 46199  005D4E  0E00               	movlw	0
 46200  005D50  6E0F               	movwf	(i2atoi@neg+1)^0,c
 46201  005D52  0E00               	movlw	0
 46202  005D54  6E0E               	movwf	i2atoi@neg^0,c
 46203  005D56  D002               	goto	i2l17332
 46204  005D58                     i2l17330:
 46205                           
 46206                           ; BSR set to: 1
 46207  005D58  4A08               	infsnz	i2atoi@s^0,f,c
 46208  005D5A  2A09               	incf	(i2atoi@s+1)^0,f,c
 46209  005D5C                     i2l17332:
 46210                           
 46211                           ; BSR set to: 1
 46212  005D5C  0E01               	movlw	1
 46213  005D5E  6E14               	movwf	i2_atoi$5678^0,c
 46214                           
 46215                           ; BSR set to: 1
 46216  005D60  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 46217  005D66  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 46218  005D6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46219  005D6C  6AF8               	clrf	tblptru,c
 46220  005D6E                     	endif
 46221  005D6E                     	if	0	;tblptru may be non-zero
 46222  005D6E                     	endif
 46223  005D6E  0008               	tblrd		*
 46224  005D70  50F5               	movf	tablat,w,c
 46225  005D72  0A20               	xorlw	32
 46226  005D74  B4D8               	btfsc	status,2,c
 46227  005D76  D01B               	goto	i2l17340
 46228                           
 46229                           ; BSR set to: 1
 46230  005D78  0EF7               	movlw	247
 46231  005D7A  6E0A               	movwf	??i2_atoi^0,c
 46232  005D7C  0EFF               	movlw	255
 46233  005D7E  6E0B               	movwf	(??i2_atoi+1)^0,c
 46234  005D80  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 46235  005D86  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 46236  005D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46237  005D8C  6AF8               	clrf	tblptru,c
 46238  005D8E                     	endif
 46239  005D8E                     	if	0	;tblptru may be non-zero
 46240  005D8E                     	endif
 46241  005D8E  0008               	tblrd		*
 46242  005D90  50F5               	movf	tablat,w,c
 46243  005D92  6E0C               	movwf	(??i2_atoi+2)^0,c
 46244  005D94  6A0D               	clrf	(??i2_atoi+3)^0,c
 46245  005D96  500A               	movf	??i2_atoi^0,w,c
 46246  005D98  260C               	addwf	(??i2_atoi+2)^0,f,c
 46247  005D9A  500B               	movf	(??i2_atoi+1)^0,w,c
 46248  005D9C  220D               	addwfc	(??i2_atoi+3)^0,f,c
 46249  005D9E  500D               	movf	(??i2_atoi+3)^0,w,c
 46250  005DA0  E104               	bnz	i2u1644_40
 46251  005DA2  0E05               	movlw	5
 46252  005DA4  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 46253  005DA6  A0D8               	btfss	status,0,c
 46254  005DA8  D002               	goto	i2l17340
 46255  005DAA                     i2u1644_40:
 46256                           
 46257                           ; BSR set to: 1
 46258  005DAA  0E00               	movlw	0
 46259  005DAC  6E14               	movwf	i2_atoi$5678^0,c
 46260  005DAE                     i2l17340:
 46261                           
 46262                           ; BSR set to: 1
 46263  005DAE  0060  F050  F010   	movff	i2_atoi$5678,i2_atoi$5677
 46264  005DB4  6A11               	clrf	(i2_atoi$5677+1)^0,c
 46265                           
 46266                           ; BSR set to: 1
 46267  005DB6  5010               	movf	i2_atoi$5677^0,w,c
 46268  005DB8  1011               	iorwf	(i2_atoi$5677+1)^0,w,c
 46269  005DBA  B4D8               	btfsc	status,2,c
 46270  005DBC  D008               	goto	i2l17350
 46271  005DBE  D7CC               	goto	i2l17330
 46272  005DC0                     i2l17346:
 46273                           
 46274                           ; BSR set to: 1
 46275  005DC0  0E00               	movlw	0
 46276  005DC2  6E0F               	movwf	(i2atoi@neg+1)^0,c
 46277  005DC4  0E01               	movlw	1
 46278  005DC6  6E0E               	movwf	i2atoi@neg^0,c
 46279  005DC8                     i2l17348:
 46280  005DC8  4A08               	infsnz	i2atoi@s^0,f,c
 46281  005DCA  2A09               	incf	(i2atoi@s+1)^0,f,c
 46282  005DCC  D036               	goto	i2l17356
 46283  005DCE                     i2l17350:
 46284                           
 46285                           ; BSR set to: 1
 46286  005DCE  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 46287  005DD4  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 46288  005DDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46289  005DDA  6AF8               	clrf	tblptru,c
 46290  005DDC                     	endif
 46291  005DDC                     	if	0	;tblptru may be non-zero
 46292  005DDC                     	endif
 46293  005DDC  0008               	tblrd		*
 46294  005DDE  50F5               	movf	tablat,w,c
 46295  005DE0  6E0A               	movwf	??i2_atoi^0,c
 46296  005DE2  6A0B               	clrf	(??i2_atoi+1)^0,c
 46297                           
 46298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46299                           ; Switch size 1, requested type "simple"
 46300                           ; Number of cases is 1, Range of values is 0 to 0
 46301                           ; switch strategies available:
 46302                           ; Name         Instructions Cycles
 46303                           ; simple_byte            4     3 (average)
 46304                           ;	Chosen strategy is simple_byte
 46305  005DE4  500B               	movf	(??i2_atoi+1)^0,w,c
 46306  005DE6  0A00               	xorlw	0	; case 0
 46307  005DE8  A4D8               	btfss	status,2,c
 46308  005DEA  D027               	goto	i2l17356
 46309                           
 46310                           ; BSR set to: 1
 46311                           ; Switch size 1, requested type "simple"
 46312                           ; Number of cases is 2, Range of values is 43 to 45
 46313                           ; switch strategies available:
 46314                           ; Name         Instructions Cycles
 46315                           ; simple_byte            7     4 (average)
 46316                           ;	Chosen strategy is simple_byte
 46317  005DEC  500A               	movf	??i2_atoi^0,w,c
 46318  005DEE  0A2B               	xorlw	43	; case 43
 46319  005DF0  B4D8               	btfsc	status,2,c
 46320  005DF2  D7EA               	goto	i2l17348
 46321  005DF4  0A06               	xorlw	6	; case 45
 46322  005DF6  B4D8               	btfsc	status,2,c
 46323  005DF8  D7E3               	goto	i2l17346
 46324  005DFA  D01F               	goto	i2l17356
 46325  005DFC                     i2l17352:
 46326  005DFC  0060  F054  F001   	movff	i2atoi@n,i2___wmul@multiplier
 46327  005E02  0060  F058  F002   	movff	i2atoi@n+1,i2___wmul@multiplier+1
 46328  005E08  0E00               	movlw	0
 46329  005E0A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 46330  005E0C  0E0A               	movlw	10
 46331  005E0E  6E03               	movwf	i2___wmul@multiplicand^0,c
 46332  005E10  ECBA  F051         	call	i2___wmul	;wreg free
 46333  005E14  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 46334  005E1A  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 46335  005E20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46336  005E20  6AF8               	clrf	tblptru,c
 46337  005E22                     	endif
 46338  005E22                     	if	0	;tblptru may be non-zero
 46339  005E22                     	endif
 46340  005E22  0008               	tblrd		*
 46341  005E24  50F5               	movf	tablat,w,c
 46342  005E26  5E01               	subwf	?i2___wmul^0,f,c
 46343  005E28  0E00               	movlw	0
 46344  005E2A  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 46345  005E2C  0E30               	movlw	48
 46346  005E2E  2401               	addwf	?i2___wmul^0,w,c
 46347  005E30  6E15               	movwf	i2atoi@n^0,c
 46348  005E32  0E00               	movlw	0
 46349  005E34  2002               	addwfc	(?i2___wmul+1)^0,w,c
 46350  005E36  6E16               	movwf	(i2atoi@n+1)^0,c
 46351  005E38  D7C7               	goto	i2l17348
 46352  005E3A                     i2l17356:
 46353  005E3A  0ED0               	movlw	208
 46354  005E3C  6E0A               	movwf	??i2_atoi^0,c
 46355  005E3E  0EFF               	movlw	255
 46356  005E40  6E0B               	movwf	(??i2_atoi+1)^0,c
 46357  005E42  0060  F023  FFF6   	movff	i2atoi@s,tblptrl
 46358  005E48  0060  F027  FFF7   	movff	i2atoi@s+1,tblptrh
 46359  005E4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46360  005E4E  6AF8               	clrf	tblptru,c
 46361  005E50                     	endif
 46362  005E50                     	if	0	;tblptru may be non-zero
 46363  005E50                     	endif
 46364  005E50  0008               	tblrd		*
 46365  005E52  50F5               	movf	tablat,w,c
 46366  005E54  6E0C               	movwf	(??i2_atoi+2)^0,c
 46367  005E56  6A0D               	clrf	(??i2_atoi+3)^0,c
 46368  005E58  500A               	movf	??i2_atoi^0,w,c
 46369  005E5A  260C               	addwf	(??i2_atoi+2)^0,f,c
 46370  005E5C  500B               	movf	(??i2_atoi+1)^0,w,c
 46371  005E5E  220D               	addwfc	(??i2_atoi+3)^0,f,c
 46372  005E60  500D               	movf	(??i2_atoi+3)^0,w,c
 46373  005E62  E106               	bnz	i2u1646_40
 46374  005E64  0E0A               	movlw	10
 46375  005E66  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 46376  005E68  B0D8               	btfsc	status,0,c
 46377  005E6A  D002               	goto	i2u1646_40
 46378  005E6C  0E01               	movlw	1
 46379  005E6E  D001               	goto	i2u1647_40
 46380  005E70                     i2u1646_40:
 46381  005E70  0E00               	movlw	0
 46382  005E72                     i2u1647_40:
 46383  005E72  6E12               	movwf	i2_atoi$5679^0,c
 46384  005E74  6A13               	clrf	(i2_atoi$5679+1)^0,c
 46385  005E76  5012               	movf	i2_atoi$5679^0,w,c
 46386  005E78  1013               	iorwf	(i2_atoi$5679+1)^0,w,c
 46387  005E7A  A4D8               	btfss	status,2,c
 46388  005E7C  D7BF               	goto	i2l17352
 46389  005E7E  500E               	movf	i2atoi@neg^0,w,c
 46390  005E80  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 46391  005E82  A4D8               	btfss	status,2,c
 46392  005E84  D011               	goto	i2l4313
 46393  005E86  0060  F054  F00A   	movff	i2atoi@n,??i2_atoi
 46394  005E8C  0060  F058  F00B   	movff	i2atoi@n+1,??i2_atoi+1
 46395  005E92  1E0A               	comf	??i2_atoi^0,f,c
 46396  005E94  1E0B               	comf	(??i2_atoi+1)^0,f,c
 46397  005E96  4A0A               	infsnz	??i2_atoi^0,f,c
 46398  005E98  2A0B               	incf	(??i2_atoi+1)^0,f,c
 46399  005E9A  0060  F028  F008   	movff	??i2_atoi,?i2_atoi
 46400  005EA0  0060  F02C  F009   	movff	??i2_atoi+1,?i2_atoi+1
 46401  005EA6  0012               	return	
 46402  005EA8                     i2l4313:
 46403  005EA8  0060  F054  F008   	movff	i2atoi@n,?i2_atoi
 46404  005EAE  0060  F058  F009   	movff	i2atoi@n+1,?i2_atoi+1
 46405  005EB4  0012               	return		;funcret
 46406  005EB6                     __end_ofi2_atoi:
 46407                           	opt callstack 0
 46408                           
 46409 ;; *************** function i2_isspace *****************
 46410 ;; Defined at:
 46411 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 46412 ;; Parameters:    Size  Location     Type
 46413 ;;  c               2    0[COMRAM] int 
 46414 ;; Auto vars:     Size  Location     Type
 46415 ;;		None
 46416 ;; Return value:  Size  Location     Type
 46417 ;;                  2    0[COMRAM] int 
 46418 ;; Registers used:
 46419 ;;		wreg, status,2, status,0
 46420 ;; Tracked objects:
 46421 ;;		On entry : 0/0
 46422 ;;		On exit  : 0/0
 46423 ;;		Unchanged: 0/0
 46424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46428 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46429 ;;Total ram usage:        7 bytes
 46430 ;; Hardware stack levels used:    1
 46431 ;; This function calls:
 46432 ;;		Nothing
 46433 ;; This function is called by:
 46434 ;;		i2_atoi
 46435 ;; This function uses a non-reentrant model
 46436 ;;
 46437                           
 46438                           	psect	text374
 46439  009C26                     __ptext374:
 46440                           	opt callstack 0
 46441  009C26                     i2_isspace:
 46442                           	opt callstack 10
 46443                           
 46444                           ;incstack = 0
 46445  009C26  0E01               	movlw	1
 46446  009C28  6E07               	movwf	i2_isspace$5704^0,c
 46447  009C2A  0E20               	movlw	32
 46448  009C2C  1801               	xorwf	i2isspace@c^0,w,c
 46449  009C2E  1002               	iorwf	(i2isspace@c+1)^0,w,c
 46450  009C30  B4D8               	btfsc	status,2,c
 46451  009C32  D016               	goto	i2l17104
 46452  009C34  0EF7               	movlw	247
 46453  009C36  6E03               	movwf	??i2_isspace^0,c
 46454  009C38  0EFF               	movlw	255
 46455  009C3A  6E04               	movwf	(??i2_isspace+1)^0,c
 46456  009C3C  0060  F004  F005   	movff	i2isspace@c,??i2_isspace+2
 46457  009C42  0060  F008  F006   	movff	i2isspace@c+1,??i2_isspace+3
 46458  009C48  5003               	movf	??i2_isspace^0,w,c
 46459  009C4A  2605               	addwf	(??i2_isspace+2)^0,f,c
 46460  009C4C  5004               	movf	(??i2_isspace+1)^0,w,c
 46461  009C4E  2206               	addwfc	(??i2_isspace+3)^0,f,c
 46462  009C50  5006               	movf	(??i2_isspace+3)^0,w,c
 46463  009C52  E104               	bnz	i2u1589_40
 46464  009C54  0E05               	movlw	5
 46465  009C56  5C05               	subwf	(??i2_isspace+2)^0,w,c
 46466  009C58  A0D8               	btfss	status,0,c
 46467  009C5A  D002               	goto	i2l17104
 46468  009C5C                     i2u1589_40:
 46469  009C5C  0E00               	movlw	0
 46470  009C5E  6E07               	movwf	i2_isspace$5704^0,c
 46471  009C60                     i2l17104:
 46472  009C60  0060  F01C  F001   	movff	i2_isspace$5704,?i2_isspace
 46473  009C66  6A02               	clrf	(?i2_isspace+1)^0,c
 46474  009C68  0012               	return		;funcret
 46475  009C6A                     __end_ofi2_isspace:
 46476                           	opt callstack 0
 46477                           
 46478 ;; *************** function i2_isdigit *****************
 46479 ;; Defined at:
 46480 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 46481 ;; Parameters:    Size  Location     Type
 46482 ;;  c               2    0[COMRAM] int 
 46483 ;; Auto vars:     Size  Location     Type
 46484 ;;		None
 46485 ;; Return value:  Size  Location     Type
 46486 ;;                  2    0[COMRAM] int 
 46487 ;; Registers used:
 46488 ;;		wreg, status,2, status,0
 46489 ;; Tracked objects:
 46490 ;;		On entry : 0/0
 46491 ;;		On exit  : 0/0
 46492 ;;		Unchanged: 0/0
 46493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46496 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46498 ;;Total ram usage:        6 bytes
 46499 ;; Hardware stack levels used:    1
 46500 ;; This function calls:
 46501 ;;		Nothing
 46502 ;; This function is called by:
 46503 ;;		i2_vfpfcnvrt
 46504 ;;		i2_atoi
 46505 ;; This function uses a non-reentrant model
 46506 ;;
 46507                           
 46508                           	psect	text375
 46509  00A198                     __ptext375:
 46510                           	opt callstack 0
 46511  00A198                     i2_isdigit:
 46512                           	opt callstack 11
 46513                           
 46514                           ;incstack = 0
 46515  00A198  0ED0               	movlw	208
 46516  00A19A  6E03               	movwf	??i2_isdigit^0,c
 46517  00A19C  0EFF               	movlw	255
 46518  00A19E  6E04               	movwf	(??i2_isdigit+1)^0,c
 46519  00A1A0  0060  F004  F005   	movff	i2isdigit@c,??i2_isdigit+2
 46520  00A1A6  0060  F008  F006   	movff	i2isdigit@c+1,??i2_isdigit+3
 46521  00A1AC  5003               	movf	??i2_isdigit^0,w,c
 46522  00A1AE  2605               	addwf	(??i2_isdigit+2)^0,f,c
 46523  00A1B0  5004               	movf	(??i2_isdigit+1)^0,w,c
 46524  00A1B2  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 46525  00A1B4  5006               	movf	(??i2_isdigit+3)^0,w,c
 46526  00A1B6  E106               	bnz	i2u1586_40
 46527  00A1B8  0E0A               	movlw	10
 46528  00A1BA  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 46529  00A1BC  B0D8               	btfsc	status,0,c
 46530  00A1BE  D002               	goto	i2u1586_40
 46531  00A1C0  0E01               	movlw	1
 46532  00A1C2  D001               	goto	i2u1587_40
 46533  00A1C4                     i2u1586_40:
 46534  00A1C4  0E00               	movlw	0
 46535  00A1C6                     i2u1587_40:
 46536  00A1C6  6E01               	movwf	?i2_isdigit^0,c
 46537  00A1C8  6A02               	clrf	(?i2_isdigit+1)^0,c
 46538  00A1CA  0012               	return		;funcret
 46539  00A1CC                     __end_ofi2_isdigit:
 46540                           	opt callstack 0
 46541                           
 46542 ;; *************** function i2_AdcInit *****************
 46543 ;; Defined at:
 46544 ;;		line 57 in file "monitor.c"
 46545 ;; Parameters:    Size  Location     Type
 46546 ;;		None
 46547 ;; Auto vars:     Size  Location     Type
 46548 ;;		None
 46549 ;; Return value:  Size  Location     Type
 46550 ;;                  1    wreg      void 
 46551 ;; Registers used:
 46552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46553 ;; Tracked objects:
 46554 ;;		On entry : 7/1
 46555 ;;		On exit  : 3F/3E
 46556 ;;		Unchanged: 0/0
 46557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46562 ;;Total ram usage:        0 bytes
 46563 ;; Hardware stack levels used:    1
 46564 ;; Hardware stack levels required when called:    1
 46565 ;; This function calls:
 46566 ;;		i2_ADCC_SetADIInterruptHandler
 46567 ;;		i2_ADCC_StartConversion
 46568 ;;		i2___wmul
 46569 ;; This function is called by:
 46570 ;;		_AdcHandler
 46571 ;; This function uses a non-reentrant model
 46572 ;;
 46573                           
 46574                           	psect	text376
 46575  008FCE                     __ptext376:
 46576                           	opt callstack 0
 46577  008FCE                     i2_AdcInit:
 46578                           	opt callstack 13
 46579                           
 46580                           ;monitor.c: 58:     currentChannel = 0;
 46581                           
 46582                           ;incstack = 0
 46583  008FCE  0E00               	movlw	0
 46584  008FD0  0101               	movlb	1	; () banked
 46585  008FD2  6FEC               	movwf	(_currentChannel+1)& (0+255),b
 46586  008FD4  0E00               	movlw	0
 46587  008FD6  6FEB               	movwf	_currentChannel& (0+255),b
 46588                           
 46589                           ; BSR set to: 1
 46590                           ;monitor.c: 59:     ADCC_SetADIInterruptHandler(AdcHandler);
 46591  008FD8  0E78               	movlw	low _AdcHandler
 46592  008FDA  6E01               	movwf	i2ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 46593  008FDC  0E66               	movlw	high _AdcHandler
 46594  008FDE  6E02               	movwf	(i2ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 46595  008FE0  EC96  F056         	call	i2_ADCC_SetADIInterruptHandler	;wreg free
 46596                           
 46597                           ;monitor.c: 61:     ADCON0bits.ADON = 0;
 46598  008FE4  013E               	movlb	62	; () banked
 46599  008FE6  9FF8               	bcf	248,7,b	;volatile
 46600                           
 46601                           ; BSR set to: 62
 46602                           ;monitor.c: 62:     ADREF = adcChannels[currentChannel].ref;
 46603  008FE8  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 46604  008FEE  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 46605  008FF4  0E00               	movlw	0
 46606  008FF6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 46607  008FF8  0E05               	movlw	5
 46608  008FFA  6E03               	movwf	i2___wmul@multiplicand^0,c
 46609  008FFC  ECBA  F051         	call	i2___wmul	;wreg free
 46610  009000  0EC0               	movlw	low (_adcChannels+4)
 46611  009002  2401               	addwf	?i2___wmul^0,w,c
 46612  009004  6ED9               	movwf	fsr2l,c
 46613  009006  0E02               	movlw	high (_adcChannels+4)
 46614  009008  2002               	addwfc	(?i2___wmul+1)^0,w,c
 46615  00900A  6EDA               	movwf	fsr2h,c
 46616  00900C  50DF               	movf	indf2,w,c
 46617  00900E  013E               	movlb	62	; () banked
 46618  009010  6FFD               	movwf	253,b	;volatile
 46619                           
 46620                           ; BSR set to: 62
 46621                           ;monitor.c: 63:     ADCC_StartConversion(adcChannels[currentChannel].ch);
 46622  009012  0060  F7AC  F001   	movff	_currentChannel,i2___wmul@multiplier
 46623  009018  0060  F7B0  F002   	movff	_currentChannel+1,i2___wmul@multiplier+1
 46624  00901E  0E00               	movlw	0
 46625  009020  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 46626  009022  0E05               	movlw	5
 46627  009024  6E03               	movwf	i2___wmul@multiplicand^0,c
 46628  009026  ECBA  F051         	call	i2___wmul	;wreg free
 46629  00902A  0EBC               	movlw	low _adcChannels
 46630  00902C  2401               	addwf	?i2___wmul^0,w,c
 46631  00902E  6ED9               	movwf	fsr2l,c
 46632  009030  0E02               	movlw	high _adcChannels
 46633  009032  2002               	addwfc	(?i2___wmul+1)^0,w,c
 46634  009034  6EDA               	movwf	fsr2h,c
 46635  009036  50DF               	movf	indf2,w,c
 46636  009038  EC99  F055         	call	i2_ADCC_StartConversion
 46637                           
 46638                           ; BSR set to: 62
 46639  00903C  0012               	return		;funcret
 46640  00903E                     __end_ofi2_AdcInit:
 46641                           	opt callstack 0
 46642                           
 46643 ;; *************** function i2___wmul *****************
 46644 ;; Defined at:
 46645 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 46646 ;; Parameters:    Size  Location     Type
 46647 ;;  multiplier      2    0[COMRAM] unsigned int 
 46648 ;;  multiplicand    2    2[COMRAM] unsigned int 
 46649 ;; Auto vars:     Size  Location     Type
 46650 ;;  __wmul          2    4[COMRAM] unsigned int 
 46651 ;; Return value:  Size  Location     Type
 46652 ;;                  2    0[COMRAM] unsigned int 
 46653 ;; Registers used:
 46654 ;;		wreg, status,2, status,0, prodl, prodh
 46655 ;; Tracked objects:
 46656 ;;		On entry : 0/1
 46657 ;;		On exit  : 0/0
 46658 ;;		Unchanged: 0/0
 46659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46664 ;;Total ram usage:        6 bytes
 46665 ;; Hardware stack levels used:    1
 46666 ;; This function calls:
 46667 ;;		Nothing
 46668 ;; This function is called by:
 46669 ;;		_SetTarget
 46670 ;;		_MonitorPressureTask
 46671 ;;		i2_ValueDisplay
 46672 ;;		i2_HigherAlarm
 46673 ;;		i2_MuteAlarm
 46674 ;;		i2_AlarmUpdateLCD
 46675 ;;		i2_atoi
 46676 ;;		_AdcHandler
 46677 ;;		i2_AdcInit
 46678 ;;		i2_AdcSeeData
 46679 ;;		i2_AdcGetData
 46680 ;;		_AdcReStartCycle
 46681 ;;		i2_AdcDataReady
 46682 ;; This function uses a non-reentrant model
 46683 ;;
 46684                           
 46685                           	psect	text377
 46686  00A374                     __ptext377:
 46687                           	opt callstack 0
 46688  00A374                     i2___wmul:
 46689                           	opt callstack 10
 46690                           
 46691                           ; BSR set to: 62
 46692                           ;incstack = 0
 46693  00A374  5001               	movf	i2___wmul@multiplier^0,w,c
 46694  00A376  0203               	mulwf	i2___wmul@multiplicand^0,c
 46695  00A378  006F FFCC  F005    	movff	prodl,i2___wmul@product
 46696  00A37E  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
 46697  00A384  5001               	movf	i2___wmul@multiplier^0,w,c
 46698  00A386  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 46699  00A388  50F3               	movf	243,w,c
 46700  00A38A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 46701  00A38C  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 46702  00A38E  0203               	mulwf	i2___wmul@multiplicand^0,c
 46703  00A390  50F3               	movf	243,w,c
 46704  00A392  2606               	addwf	(i2___wmul@product+1)^0,f,c
 46705  00A394  0060  F014  F001   	movff	i2___wmul@product,?i2___wmul
 46706  00A39A  0060  F018  F002   	movff	i2___wmul@product+1,?i2___wmul+1
 46707  00A3A0  0012               	return		;funcret
 46708  00A3A2                     __end_ofi2___wmul:
 46709                           	opt callstack 0
 46710                           
 46711 ;; *************** function i2_ADCC_StartConversion *****************
 46712 ;; Defined at:
 46713 ;;		line 120 in file "mcc_generated_files/adcc.c"
 46714 ;; Parameters:    Size  Location     Type
 46715 ;;  channel         1    wreg     enum E16053
 46716 ;; Auto vars:     Size  Location     Type
 46717 ;;  channel         1    0[COMRAM] enum E16053
 46718 ;; Return value:  Size  Location     Type
 46719 ;;                  1    wreg      void 
 46720 ;; Registers used:
 46721 ;;		wreg
 46722 ;; Tracked objects:
 46723 ;;		On entry : 0/3E
 46724 ;;		On exit  : 3F/3E
 46725 ;;		Unchanged: 0/0
 46726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46731 ;;Total ram usage:        1 bytes
 46732 ;; Hardware stack levels used:    1
 46733 ;; This function calls:
 46734 ;;		Nothing
 46735 ;; This function is called by:
 46736 ;;		_AdcReStartCycle
 46737 ;;		_AdcHandler
 46738 ;;		i2_AdcInit
 46739 ;; This function uses a non-reentrant model
 46740 ;;
 46741                           
 46742                           	psect	text378
 46743  00AB32                     __ptext378:
 46744                           	opt callstack 0
 46745  00AB32                     i2_ADCC_StartConversion:
 46746                           	opt callstack 13
 46747                           
 46748                           ;incstack = 0
 46749                           ;i2ADCC_StartConversion@channel stored from wreg
 46750  00AB32  6E01               	movwf	i2ADCC_StartConversion@channel^0,c
 46751                           
 46752                           ;mcc_generated_files/adcc.c: 120: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 121: {;mcc_generated_files/adcc.c: 123:     ADPCH = channel;
 46753  00AB34  0060  F007  FEF1   	movff	i2ADCC_StartConversion@channel,16113	;volatile
 46754                           
 46755                           ;mcc_generated_files/adcc.c: 126:     ADCON0bits.ADON = 1;
 46756  00AB3A  013E               	movlb	62	; () banked
 46757  00AB3C  8FF8               	bsf	248,7,b	;volatile
 46758                           
 46759                           ; BSR set to: 62
 46760                           ;mcc_generated_files/adcc.c: 129:     ADCON0bits.ADGO = 1;
 46761  00AB3E  81F8               	bsf	248,0,b	;volatile
 46762                           
 46763                           ; BSR set to: 62
 46764  00AB40  0012               	return		;funcret
 46765  00AB42                     __end_ofi2_ADCC_StartConversion:
 46766                           	opt callstack 0
 46767                           
 46768 ;; *************** function i2_ADCC_Initialize *****************
 46769 ;; Defined at:
 46770 ;;		line 63 in file "mcc_generated_files/adcc.c"
 46771 ;; Parameters:    Size  Location     Type
 46772 ;;		None
 46773 ;; Auto vars:     Size  Location     Type
 46774 ;;		None
 46775 ;; Return value:  Size  Location     Type
 46776 ;;                  1    wreg      void 
 46777 ;; Registers used:
 46778 ;;		wreg, status,2, status,0, cstack
 46779 ;; Tracked objects:
 46780 ;;		On entry : 3F/2
 46781 ;;		On exit  : 7/1
 46782 ;;		Unchanged: 0/0
 46783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46788 ;;Total ram usage:        0 bytes
 46789 ;; Hardware stack levels used:    1
 46790 ;; Hardware stack levels required when called:    1
 46791 ;; This function calls:
 46792 ;;		i2_ADCC_SetADIInterruptHandler
 46793 ;; This function is called by:
 46794 ;;		_AdcHandler
 46795 ;; This function uses a non-reentrant model
 46796 ;;
 46797                           
 46798                           	psect	text379
 46799  00911A                     __ptext379:
 46800                           	opt callstack 0
 46801  00911A                     i2_ADCC_Initialize:
 46802                           	opt callstack 13
 46803                           
 46804                           ; BSR set to: 2
 46805                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 46806                           
 46807                           ; BSR set to: 62
 46808                           ;incstack = 0
 46809  00911A  0E00               	movlw	0
 46810  00911C  013E               	movlb	62	; () banked
 46811  00911E  6FDE               	movwf	222,b	;volatile
 46812                           
 46813                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 46814  009120  0E00               	movlw	0
 46815  009122  6FDF               	movwf	223,b	;volatile
 46816                           
 46817                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 46818  009124  0E00               	movlw	0
 46819  009126  6FE0               	movwf	224,b	;volatile
 46820                           
 46821                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 46822  009128  0E00               	movlw	0
 46823  00912A  6FE1               	movwf	225,b	;volatile
 46824                           
 46825                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 46826  00912C  0E00               	movlw	0
 46827  00912E  6FE4               	movwf	228,b	;volatile
 46828                           
 46829                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 46830  009130  0E00               	movlw	0
 46831  009132  6FE5               	movwf	229,b	;volatile
 46832                           
 46833                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 46834  009134  0E00               	movlw	0
 46835  009136  6FEA               	movwf	234,b	;volatile
 46836                           
 46837                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
 46838  009138  0E00               	movlw	0
 46839  00913A  6FEC               	movwf	236,b	;volatile
 46840                           
 46841                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 46842  00913C  0E00               	movlw	0
 46843  00913E  6FF1               	movwf	241,b	;volatile
 46844                           
 46845                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x01;
 46846  009140  0E01               	movlw	1
 46847  009142  6FF3               	movwf	243,b	;volatile
 46848                           
 46849                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 46850  009144  0E00               	movlw	0
 46851  009146  6FF4               	movwf	244,b	;volatile
 46852                           
 46853                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 46854  009148  0E00               	movlw	0
 46855  00914A  6FF5               	movwf	245,b	;volatile
 46856                           
 46857                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 46858  00914C  0E00               	movlw	0
 46859  00914E  6FF6               	movwf	246,b	;volatile
 46860                           
 46861                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 46862  009150  0E00               	movlw	0
 46863  009152  6FF7               	movwf	247,b	;volatile
 46864                           
 46865                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 46866  009154  0E00               	movlw	0
 46867  009156  6FF9               	movwf	249,b	;volatile
 46868                           
 46869                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
 46870  009158  0E00               	movlw	0
 46871  00915A  6FFA               	movwf	250,b	;volatile
 46872                           
 46873                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
 46874  00915C  0E00               	movlw	0
 46875  00915E  6FFB               	movwf	251,b	;volatile
 46876                           
 46877                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 46878  009160  0E00               	movlw	0
 46879  009162  6FFC               	movwf	252,b	;volatile
 46880                           
 46881                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x03;
 46882  009164  0E03               	movlw	3
 46883  009166  6FFD               	movwf	253,b	;volatile
 46884                           
 46885                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 46886  009168  0E00               	movlw	0
 46887  00916A  6FFE               	movwf	254,b	;volatile
 46888                           
 46889                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x3B;
 46890  00916C  0E3B               	movlw	59
 46891  00916E  6FFF               	movwf	255,b	;volatile
 46892                           
 46893                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 46894  009170  0E84               	movlw	132
 46895  009172  6FF8               	movwf	248,b	;volatile
 46896                           
 46897                           ; BSR set to: 62
 46898                           ;mcc_generated_files/adcc.c: 112:     PIR1bits.ADIF = 0;
 46899  009174  0139               	movlb	57	; () banked
 46900  009176  95A1               	bcf	161,2,b	;volatile
 46901                           
 46902                           ; BSR set to: 57
 46903                           ;mcc_generated_files/adcc.c: 114:     PIE1bits.ADIE = 1;
 46904  009178  8591               	bsf	145,2,b	;volatile
 46905                           
 46906                           ; BSR set to: 57
 46907                           ;mcc_generated_files/adcc.c: 116:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46908  00917A  0E5C               	movlw	low _ADCC_DefaultInterruptHandler
 46909  00917C  6E01               	movwf	i2ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 46910  00917E  0EB0               	movlw	high _ADCC_DefaultInterruptHandler
 46911  009180  6E02               	movwf	(i2ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 46912  009182  EC96  F056         	call	i2_ADCC_SetADIInterruptHandler	;wreg free
 46913  009186  0012               	return		;funcret
 46914  009188                     __end_ofi2_ADCC_Initialize:
 46915                           	opt callstack 0
 46916                           
 46917 ;; *************** function i2_ADCC_SetADIInterruptHandler *****************
 46918 ;; Defined at:
 46919 ;;		line 315 in file "mcc_generated_files/adcc.c"
 46920 ;; Parameters:    Size  Location     Type
 46921 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 46922 ;;		 -> AdcHandler(1), ADCC_DefaultInterruptHandler(1), 
 46923 ;; Auto vars:     Size  Location     Type
 46924 ;;		None
 46925 ;; Return value:  Size  Location     Type
 46926 ;;                  1    wreg      void 
 46927 ;; Registers used:
 46928 ;;		wreg, status,2, status,0
 46929 ;; Tracked objects:
 46930 ;;		On entry : 7/1
 46931 ;;		On exit  : 7/1
 46932 ;;		Unchanged: 7/0
 46933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46938 ;;Total ram usage:        2 bytes
 46939 ;; Hardware stack levels used:    1
 46940 ;; This function calls:
 46941 ;;		Nothing
 46942 ;; This function is called by:
 46943 ;;		i2_ADCC_Initialize
 46944 ;;		i2_AdcInit
 46945 ;; This function uses a non-reentrant model
 46946 ;;
 46947                           
 46948                           	psect	text380
 46949  00AD2C                     __ptext380:
 46950                           	opt callstack 0
 46951  00AD2C                     i2_ADCC_SetADIInterruptHandler:
 46952                           	opt callstack 13
 46953                           
 46954                           ;mcc_generated_files/adcc.c: 316:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46955                           
 46956                           ;incstack = 0
 46957  00AD2C  0060  F004  F2F3   	movff	i2ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 46958  00AD32  0060  F008  F2F4   	movff	i2ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 46959  00AD38  0012               	return		;funcret
 46960  00AD3A                     __end_ofi2_ADCC_SetADIInterruptHandler:
 46961                           	opt callstack 0
 46962                           
 46963 ;; *************** function _AdcReady *****************
 46964 ;; Defined at:
 46965 ;;		line 66 in file "monitor.c"
 46966 ;; Parameters:    Size  Location     Type
 46967 ;;		None
 46968 ;; Auto vars:     Size  Location     Type
 46969 ;;		None
 46970 ;; Return value:  Size  Location     Type
 46971 ;;                  1    wreg      _Bool 
 46972 ;; Registers used:
 46973 ;;		wreg, cstack
 46974 ;; Tracked objects:
 46975 ;;		On entry : 0/2
 46976 ;;		On exit  : 3F/3E
 46977 ;;		Unchanged: 0/0
 46978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46983 ;;Total ram usage:        0 bytes
 46984 ;; Hardware stack levels used:    1
 46985 ;; Hardware stack levels required when called:    1
 46986 ;; This function calls:
 46987 ;;		_ADCC_IsConversionDone
 46988 ;; This function is called by:
 46989 ;;		_AdcHandler
 46990 ;;		_MonitorPressureTask
 46991 ;; This function uses a non-reentrant model
 46992 ;;
 46993                           
 46994                           	psect	text381
 46995  00AFD2                     __ptext381:
 46996                           	opt callstack 0
 46997  00AFD2                     _AdcReady:
 46998                           	opt callstack 13
 46999                           
 47000                           ;monitor.c: 67:     return ADCC_IsConversionDone();
 47001                           
 47002                           ;incstack = 0
 47003  00AFD2  EC9D  F056         	call	_ADCC_IsConversionDone	;wreg free
 47004                           
 47005                           ; BSR set to: 62
 47006  00AFD6  0012               	return		;funcret
 47007  00AFD8                     __end_of_AdcReady:
 47008                           	opt callstack 0
 47009                           
 47010 ;; *************** function _ADCC_IsConversionDone *****************
 47011 ;; Defined at:
 47012 ;;		line 132 in file "mcc_generated_files/adcc.c"
 47013 ;; Parameters:    Size  Location     Type
 47014 ;;		None
 47015 ;; Auto vars:     Size  Location     Type
 47016 ;;		None
 47017 ;; Return value:  Size  Location     Type
 47018 ;;                  1    wreg      _Bool 
 47019 ;; Registers used:
 47020 ;;		wreg
 47021 ;; Tracked objects:
 47022 ;;		On entry : 0/2
 47023 ;;		On exit  : 3F/3E
 47024 ;;		Unchanged: 0/0
 47025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47030 ;;Total ram usage:        0 bytes
 47031 ;; Hardware stack levels used:    1
 47032 ;; This function calls:
 47033 ;;		Nothing
 47034 ;; This function is called by:
 47035 ;;		_AdcReady
 47036 ;; This function uses a non-reentrant model
 47037 ;;
 47038                           
 47039                           	psect	text382
 47040  00AD3A                     __ptext382:
 47041                           	opt callstack 0
 47042  00AD3A                     _ADCC_IsConversionDone:
 47043                           	opt callstack 13
 47044                           
 47045                           ;mcc_generated_files/adcc.c: 135:     return ((unsigned char)(!ADCON0bits.ADGO));
 47046                           
 47047                           ; BSR set to: 62
 47048                           ;incstack = 0
 47049  00AD3A  013E               	movlb	62	; () banked
 47050  00AD3C  B1F8               	btfsc	248,0,b	;volatile
 47051  00AD3E  D002               	goto	i2u1091_40
 47052  00AD40  0E01               	movlw	1
 47053  00AD42  0012               	return	
 47054  00AD44                     i2u1091_40:
 47055  00AD44  0E00               	movlw	0
 47056                           
 47057                           ; BSR set to: 62
 47058  00AD46  0012               	return		;funcret
 47059  00AD48                     __end_of_ADCC_IsConversionDone:
 47060                           	opt callstack 0
 47061                           
 47062 ;; *************** function _ADCC_GetConversionResult *****************
 47063 ;; Defined at:
 47064 ;;		line 138 in file "mcc_generated_files/adcc.c"
 47065 ;; Parameters:    Size  Location     Type
 47066 ;;		None
 47067 ;; Auto vars:     Size  Location     Type
 47068 ;;		None
 47069 ;; Return value:  Size  Location     Type
 47070 ;;                  2    0[COMRAM] unsigned short 
 47071 ;; Registers used:
 47072 ;;		wreg, status,2, status,0
 47073 ;; Tracked objects:
 47074 ;;		On entry : 0/3E
 47075 ;;		On exit  : 3F/3E
 47076 ;;		Unchanged: 0/0
 47077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47082 ;;Total ram usage:        4 bytes
 47083 ;; Hardware stack levels used:    1
 47084 ;; This function calls:
 47085 ;;		Nothing
 47086 ;; This function is called by:
 47087 ;;		_AdcHandler
 47088 ;; This function uses a non-reentrant model
 47089 ;;
 47090                           
 47091                           	psect	text383
 47092  00AA2A                     __ptext383:
 47093                           	opt callstack 0
 47094  00AA2A                     _ADCC_GetConversionResult:
 47095                           	opt callstack 14
 47096                           
 47097                           ;mcc_generated_files/adcc.c: 141:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 47098                           
 47099                           ; BSR set to: 62
 47100                           ;incstack = 0
 47101  00AA2A  013E               	movlb	62	; () banked
 47102  00AA2C  51F0               	movf	240,w,b	;volatile
 47103  00AA2E  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 47104  00AA30  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 47105  00AA32  51EF               	movf	239,w,b	;volatile
 47106  00AA34  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 47107  00AA36  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 47108  00AA38  0E00               	movlw	0
 47109  00AA3A  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 47110  00AA3C  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 47111                           
 47112                           ; BSR set to: 62
 47113  00AA3E  0012               	return		;funcret
 47114  00AA40                     __end_of_ADCC_GetConversionResult:
 47115                           	opt callstack 0
 47116                           
 47117                           ;
 47118                           ; Interrupt Vector Table @ 0x8
 47119                           ;
 47120                           
 47121                           	psect	ivt0x8
 47122  000008                     __pivt0x8:
 47123                           	opt callstack 0
 47124  000008                     ivt0x8_base:
 47125                           	opt callstack 0
 47126                           
 47127                           ; high-priority vector
 47128  000008  EFA5  F039         	goto	_INTERRUPT_InterruptManager
 47129  000018                     	org	16
 47130                           
 47131                           ; low-priority vector
 47132  000018  00FF               	reset	
 47133                           
 47134                           	psect	text384
 47135  000000                     __ptext384:
 47136                           	opt callstack 0
 47137                           
 47138                           	psect	rparam
 47139  0000                     tosu	equ	0x3FFF
 47140                           tosh	equ	0x3FFE
 47141                           tosl	equ	0x3FFD
 47142                           stkptr	equ	0x3FFC
 47143                           pclatu	equ	0x3FFB
 47144                           pclath	equ	0x3FFA
 47145                           pcl	equ	0x3FF9
 47146                           tblptru	equ	0x3FF8
 47147                           tblptrh	equ	0x3FF7
 47148                           tblptrl	equ	0x3FF6
 47149                           tablat	equ	0x3FF5
 47150                           prodh	equ	0x3FF4
 47151                           prodl	equ	0x3FF3
 47152                           indf0	equ	0x3FEF
 47153                           postinc0	equ	0x3FEE
 47154                           postdec0	equ	0x3FED
 47155                           preinc0	equ	0x3FEC
 47156                           plusw0	equ	0x3FEB
 47157                           fsr0h	equ	0x3FEA
 47158                           fsr0l	equ	0x3FE9
 47159                           wreg	equ	0x3FE8
 47160                           indf1	equ	0x3FE7
 47161                           postinc1	equ	0x3FE6
 47162                           postdec1	equ	0x3FE5
 47163                           preinc1	equ	0x3FE4
 47164                           plusw1	equ	0x3FE3
 47165                           fsr1h	equ	0x3FE2
 47166                           fsr1l	equ	0x3FE1
 47167                           bsr	equ	0x3FE0
 47168                           indf2	equ	0x3FDF
 47169                           postinc2	equ	0x3FDE
 47170                           postdec2	equ	0x3FDD
 47171                           preinc2	equ	0x3FDC
 47172                           plusw2	equ	0x3FDB
 47173                           fsr2h	equ	0x3FDA
 47174                           fsr2l	equ	0x3FD9
 47175                           status	equ	0x3FD8


Data Sizes:
    Strings     935
    Constant    0
    Data        432
    BSS         1842
    Persistent  28
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    104     160
    BANK1           256    199     252
    BANK2           256     11     256
    BANK3           256      1     250
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    i2_AlarmUpdateLCD$7141	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    AlarmCheckTask$6540	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmUpdateLCD$6535	PTR unsigned char [17] size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), dbuf(BANK3[32]), 
		 -> adcVOffset(BANK1[2]), adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), alarmData(BIGRAM[399]), msg3(BANK3[20]), 
		 -> STR_11(CODE[3]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_4(CODE[45]), STR_3(CODE[4]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[8]), STR_12(CODE[23]), STR_10(CODE[26]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S5717_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 65
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[15]), STR_52(CODE[16]), 
		 -> STR_51(CODE[32]), STR_50(CODE[32]), STR_49(CODE[13]), STR_48(CODE[12]), 
		 -> STR_47(CODE[14]), STR_46(CODE[4]), STR_45(CODE[4]), STR_44(CODE[2]), 
		 -> STR_43(CODE[10]), STR_42(CODE[4]), STR_41(CODE[55]), STR_40(CODE[53]), 
		 -> STR_39(CODE[43]), STR_38(CODE[54]), STR_37(CODE[40]), STR_36(CODE[36]), 
		 -> STR_35(CODE[41]), STR_34(CODE[32]), STR_33(CODE[65]), STR_32(CODE[4]), 
		 -> STR_31(CODE[12]), STR_30(CODE[4]), STR_25(CODE[5]), STR_24(CODE[3]), 
		 -> STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[12]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_14(CODE[19]), STR_13(CODE[8]), STR_12(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[15]), 
		 -> STR_4(CODE[45]), STR_3(CODE[4]), STR_2(CODE[15]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), adcVOffset(BANK1[2]), adcOffset(BANK1[2]), 
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK1[7]), adcVOffset(BANK1[2]), 
		 -> adcOffset(BANK1[2]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), alarmData(BIGRAM[399]), STR_11(CODE[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    alarmData.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    S4382alarm$func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    a.func	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NoPowerSupplyAlarm(), VBelowMinAlarm(), VAboveMaxAlarm(), TdeTooLongAlarm(), 
		 -> TdiTooLongAlarm(), IPAboveSetAlarm(), IPBelowSetAlarm(), EPAboveSetAlarm(), 
		 -> EPBelowSetAlarm(), BaterryLowAlarmHigh(), BaterryLowAlarmMed(), CircuitFailureAlarm(), 
		 -> VeryHighPressureAlarmHigh(), HighPressureAlarmHigh(), HighPressureAlarmLow(), GasFailureAlarm(), 
		 -> ControlFailAlarm(), MonitorFailAlarm(), BatteryFailAlarm(), 

    AlarmDisplay@alarm	PTR unsigned char  size(2) Largest target is 399
		 -> alarmData(BIGRAM[399]), 

    ValueDisplay$4007	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_11(CODE[3]), 

    sp__GetAlarmState	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    LCDMessage2@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg2(BANK3[20]), msg4(BANK3[20]), 

    LCDMessage12@str2	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), LCDTest@msg2(BANK1[17]), 

    LCDMessage12@str1	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), LCDTest@msg1(BANK1[17]), 

    LCDMessage1@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg1(BANK3[20]), 

    LCDMessage@str	PTR unsigned char  size(2) Largest target is 20
		 -> msg3(BANK3[20]), msg2(BANK3[20]), msg1(BANK3[20]), msg4(BANK3[20]), 
		 -> LCDTest@msg2(BANK1[17]), LCDTest@msg1(BANK1[17]), STR_6(CODE[17]), STR_5(CODE[17]), 

    CMP1_SetIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerCMPHandler(), Absolute function(), 

    I2C2_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), 

    I2C2_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), 

    I2C2_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), 

    I2C2_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetStopIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), 

    I2C2_SlaveStopInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> StopHandler(), Absolute function(), 

    I2C2_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), 

    I2C2_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), 

    I2C2_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), I2C2_SlaveDefRdInterruptHandler(), Absolute function(), 

    I2C2_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ControllerTimerHandler(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ButtonTask(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MonitorPressureTask(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AlarmHandler(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BuzzerTestHandler(), BuzzerHandler(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    I2C2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Isr(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> AdcHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ControllerTimerHandler->i2_printf
    _TMR5_ISR->_AlarmHandler
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    _BuzzerHandler->i2_BuzzerTask
    i2_BuzzerTask->i2_printf
    _ButtonTask->i2_HistAlarm
    i2_MuteAlarm->i2_SetAlarmSV1
    i2_SetAlarmSV1->i2_printf
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_HigherAlarm->i2___wmul
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->i2_printf
    i2_MonitorDump->i2_printf
    i2_See5V->i2___aldiv
    i2_See12V->i2___aldiv
    i2_AdcSeeData->i2___wmul
    i2_AdcDataReady->i2___wmul
    _GetPressure_mbar02->i2_GetPressure_pa
    _AdcReStartCycle->i2___wmul
    _I2C2_SlaveStopCallBack->_StopHandler
    _StopHandler->_UpdateState
    _UpdateState->i2_SetCalibrateState
    _UpdateState->i2_SetSV1
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    i2_GetPressure_pa->i2___aldiv
    i2_GetPressureV_pa->i2___aldiv
    i2_AdcGetData->i2___wmul
    _SetTarget->i2___aldiv
    i2___aldiv->i2___lmul
    i2_sprintf->i2_vfprintf
    i2_GetTargetIp->i2___awdiv
    i2_GetTargetEp->i2___awdiv
    i2_GetPmax->i2___awdiv
    i2_GetIp->i2___awdiv
    i2_GetEp->i2___awdiv
    i2___awdiv->i2___wmul
    i2_GetAlarmState->i2_AnyAlarm
    _I2C2_SlaveRdCallBack->_ReceiveHandler
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_toupper->i2_islower
    i2_stoa->i2_fputc
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART1_Write
    i2_atoi->i2_isspace
    i2_AdcInit->i2___wmul
    i2_ADCC_Initialize->i2_ADCC_SetADIInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _ControllerTimerHandler->i2_printf
    _AlarmHandler->i2_printf
    _BuzzerTestHandler->i2_printf
    i2_BuzzerTask->i2_printf
    _TMR1_ISR->_ButtonTask
    i2_MuteAlarm->i2_printf
    i2_SetAlarmSV1->i2_printf
    i2_HistAlarm->i2_AlarmUpdateLCD
    i2_AlarmUpdateLCD->i2_AlarmDisplay
    i2_AlarmDisplay->i2_ValueDisplay
    _TMR0_ISR->_MonitorPressureTask
    _MonitorPressureTask->_DisplayCalibrate
    i2_MonitorDump->i2_printf
    _DisplayCalibrate->i2_sprintf
    _StopHandler->_UpdateState
    i2_SetSV1->i2_printf
    i2_SetCalibrateState->i2_printf
    _DisplayEnable->i2_ValueDisplay
    _DisplayDisable->i2_ValueDisplay
    i2_ValueDisplay->i2_sprintf
    _BuzzerCMPHandler->i2_printf
    _AdcHandler->i2_printf
    i2_vfprintf->i2_vfpfcnvrt

Critical Paths under _main in BANK1

    _getch->_UART1_Read
    _TestAlarm->_printf
    _putchar->_fputc
    _SetSV1->_printf
    _SetCalibrateState->_printf
    _GetPressure_pa->___aldiv
    _GetPressureV_pa->___aldiv
    _SeePressure_pa->___aldiv
    _SeePressureV_pa->___aldiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler
    _MuteAlarm->_SetAlarmSV1
    _AdcInit->___wmul
    _MonitorDump->_printf
    _See5V->___aldiv
    _See12V->___aldiv
    _AdcSeeData->___wmul
    _InitDisplay->_LCDInit
    _LCDInit->_LCDTest
    _LCDTest->_LCDMessage12
    _HistAlarm->_AlarmUpdateLCD
    _DisplayTask->_LCDMessage12
    _LCDMessage2->_LCDMessage
    _LCDMessage12->_LCDMessage
    _LCDMessage1->_LCDMessage
    _LCDMessage->_strlen
    _ControllerInit->_I2C2_SlaveSetReadIntHandler
    _ControllerInit->_I2C2_SlaveSetStopIntHandler
    _ControllerInit->_TMR6_SetInterruptHandler
    _I2C2_Open->_I2C2_SlaveSetAddrIntHandler
    _I2C2_Open->_I2C2_SlaveSetBusColIntHandler
    _I2C2_Open->_I2C2_SlaveSetIsrHandler
    _I2C2_Open->_I2C2_SlaveSetReadIntHandler
    _I2C2_Open->_I2C2_SlaveSetWrColIntHandler
    _I2C2_Open->_I2C2_SlaveSetWriteIntHandler
    _BuzzerTest->_TMR4_SetInterruptHandler
    _BuzzerCheck->_printf
    _ButtonInit->_TMR1_SetInterruptHandler
    _AlarmInit->_TMR5_SetInterruptHandler
    _BuzzerInit->_CMP1_SetIntHandler
    _BuzzerInit->_TMR4_SetInterruptHandler
    _AlarmCheckTask->_AlarmUpdateLCD
    _SetAlarmSV1->_printf
    _MonitorFailAlarm->_printf
    _Get5V->___aldiv
    _HighPressureAlarmLow->_GetMaxPressure
    _GetMaxPressure->___awdiv
    _BuzzerSet->_BuzzerTask
    _BuzzerTask->_printf
    _printf->_vfprintf
    _BatteryFailAlarm->_Get12V
    _Get12V->___aldiv
    ___aldiv->___lmul
    _AdcGetData->___wmul
    _AdcDataReady->___wmul
    _AlarmUpdateLCD->_AlarmDisplay
    _HigherAlarm->___wmul
    _AlarmDisplay->_ValueDisplay
    _ValueDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _atoi->_isspace
    _GetTargetIp->___awdiv
    _GetTargetEp->___awdiv
    _GetPmax->___awdiv
    _GetIp->___awdiv
    _GetEp->___awdiv
    ___awdiv->___wmul
    _GetAlarmState->_AnyAlarm

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_AlarmCheckTask

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1357155
                                            198 BANK1      1     1      0
                                              0 BANK3      1     1      0
                     _AlarmCheckTask
                          _AlarmInit
                         _ButtonInit
                        _BuzzerCheck
                         _BuzzerTest
                     _ControllerInit
                    _DisableAlarmSV1
                        _DisplayTask
                            _DumpI2C
                     _EnableAlarmSV1
                          _HistAlarm
                        _InitDisplay
                             _LCDOff
                              _LCDOn
                     _MonitorDisable
                        _MonitorDump
                      _MonitorEnable
                        _MonitorInit
                          _MuteAlarm
                  _SYSTEM_Initialize
                             _See12V
                              _See5V
                    _SeePressureV_pa
                     _SeePressure_pa
                        _SetAlarmSV1
                  _SetCalibrateState
                             _SetSV1
                          _TestAlarm
                  _UART1_is_rx_ready
                            ___llmod
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      37
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      37
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              4 BANK1      9     1      8
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestAlarm                                            8     6      2   43918
                                            131 BANK1      8     6      2
                             _printf
                            _putchar
 ---------------------------------------------------------------------------------
 (2) _putchar                                              2     0      2    2085
                                             15 BANK1      2     0      2
                              _fputc
 ---------------------------------------------------------------------------------
 (1) _SetSV1                                               1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SetCalibrateState                                    1     1      0  102367
                                            131 BANK1      1     1      0
                          _ClearVars
                    _GetPressureV_pa
                     _GetPressure_pa
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                 _UnDisplayCalibrate
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UnDisplayCalibrate                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetPressure_pa                                      16    14      2   24387
                                             30 BANK1     16    14      2
                         _AdcGetData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _GetPressureV_pa                                     12    10      2   24353
                                             30 BANK1     12    10      2
                         _AdcGetData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _SeePressure_pa                                      16    14      2   24325
                                             30 BANK1     16    14      2
                         _AdcSeeData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _SeePressureV_pa                                     12    10      2   24257
                                             30 BANK1     12    10      2
                         _AdcSeeData
                            ___aldiv
                            ___awdiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2051
                    _ADCC_Initialize
                    _CMP1_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     391
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              6 BANK1      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
                       _CMP1_Disable
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MuteAlarm                                            5     5      0   94185
                                            132 BANK1      5     5      0
                           _AnyAlarm
                        _BuzzerClear
           _ClearCircuitFailureAlarm
              _ClearControlFailAlarm
               _ClearGasFailureAlarm
         _ClearHighPressureAlarmHigh
              _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
                        _HigherAlarm
                        _SetAlarmSV1
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ClearVeryHighPressureAlarmHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearHighPressureAlarmHigh                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearGasFailureAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearControlFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorInit                                          0     0      0    6693
                            _AdcInit
                          _ClearVars
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearVars                                            4     4      0     260
                                              4 BANK1      4     4      0
           _ClearCircuitFailureAlarm
               _ClearEPAboveSetAlarm
               _ClearEPBelowSetAlarm
               _ClearIPAboveSetAlarm
               _ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (3) _ClearIPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearIPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPBelowSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearEPAboveSetAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearCircuitFailureAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AdcInit                                              0     0      0    6222
        _ADCC_SetADIInterruptHandler
               _ADCC_StartConversion
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ADCC_StartConversion                                 1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MonitorEnable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MonitorDump                                          0     0      0   74944
                             _See12V
                              _See5V
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _See5V                                               14    12      2    9946
                                             30 BANK1     14    12      2
                         _AdcSeeData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _See12V                                              14    12      2   11662
                                             30 BANK1     14    12      2
                         _AdcSeeData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _AdcSeeData                                           4     2      2    6405
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _MonitorDisable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDisplay                                          0     0      0    4588
                            _LCDInit
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              2     2      0    4588
                                             60 BANK1      2     2      0
                         _LCDMessage
                            _LCDTest
                          _LCDWrite4
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWrite4                                            1     1      0     124
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDTest                                             40    40      0    2740
                                             20 BANK1     40    40      0
                       _LCDMessage12
 ---------------------------------------------------------------------------------
 (1) _HistAlarm                                            4     4      0  300984
                                              0 BANK2      4     4      0
                     _AlarmUpdateLCD
                    _TMR5_StartTimer
                     _TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableAlarmSV1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DumpI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTask                                          0     0      0    6106
                        _LCDMessage1
                       _LCDMessage12
                        _LCDMessage2
 ---------------------------------------------------------------------------------
 (2) _LCDMessage2                                          2     0      2    1935
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (4) _LCDMessage12                                         4     0      4    2326
                                             16 BANK1      4     0      4
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCDMessage1                                          2     0      2    1845
                                             16 BANK1      2     0      2
                         _LCDMessage
                        _LCDWriteCmd
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCmd                                          1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _LCDMessage                                           8     6      2    1476
                                              8 BANK1      8     6      2
                       _LCDWriteChar
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _LCDWriteChar                                         1     1      0     248
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisableAlarmSV1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControllerInit                                       0     0      0    1421
                          _I2C2_Open
        _I2C2_SlaveSetReadIntHandler
        _I2C2_SlaveSetStopIntHandler
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR6_StartTimer                                      0     0      0       0
                         _TMR6_Start
 ---------------------------------------------------------------------------------
 (3) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetStopIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_Open                                            0     0      0     878
                _I2C2_SlaveEnableIrq
                     _I2C2_SlaveOpen
        _I2C2_SlaveSetAddrIntHandler
      _I2C2_SlaveSetBusColIntHandler
            _I2C2_SlaveSetIsrHandler
        _I2C2_SlaveSetReadIntHandler
             _I2C2_SlaveSetSlaveAddr
             _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWriteIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetWrColIntHandler                         2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveMask                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetSlaveAddr                               1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C2_SlaveSetReadIntHandler                          2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetIsrHandler                              2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetBusColIntHandler                        2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveSetAddrIntHandler                          2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BuzzerTest                                           3     3      0     484
                                              6 BANK1      3     3      0
                          _BuzzerOff
                           _BuzzerOn
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (1) _BuzzerCheck                                          2     2      0   40772
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
                _SetMonitorFailAlarm
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ButtonInit                                           0     0      0     211
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmInit                                            2     2      0     853
                                              6 BANK1      2     2      0
                         _BuzzerInit
           _TMR5_SetInterruptHandler
                    _TMR5_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     211
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BuzzerInit                                           0     0      0     512
                          _BuzzerOff
                 _CMP1_SetIntHandler
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _CMP1_SetIntHandler                                   2     0      2     121
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _AlarmCheckTask                                      11    11      0  483349
                                              0 BANK2     11    11      0
                         _AlarmClear
                           _AlarmSet
                     _AlarmUpdateLCD
                           _AnyAlarm
                _BaterryLowAlarmHigh *
                 _BaterryLowAlarmMed *
                   _BatteryFailAlarm *
                        _BuzzerClear
                          _BuzzerSet
                _CircuitFailureAlarm *
                      _ClearAlarmLED
                   _ControlFailAlarm *
                    _EPAboveSetAlarm *
                    _EPBelowSetAlarm *
                    _GasFailureAlarm *
              _HighPressureAlarmHigh *
               _HighPressureAlarmLow *
                        _HigherAlarm
                    _IPAboveSetAlarm *
                    _IPBelowSetAlarm *
                   _MonitorFailAlarm *
                 _NoPowerSupplyAlarm *
                        _SetAlarmLED
                        _SetAlarmSV1
                    _TdeTooLongAlarm *
                    _TdiTooLongAlarm *
                     _VAboveMaxAlarm *
                     _VBelowMinAlarm *
          _VeryHighPressureAlarmHigh *
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _VeryHighPressureAlarmHigh                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VBelowMinAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VAboveMaxAlarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdiTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TdeTooLongAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetAlarmSV1                                          1     1      0   40865
                                            131 BANK1      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SetAlarmLED                                          1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NoPowerSupplyAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MonitorFailAlarm                                     3     3      0   57128
                                            131 BANK1      3     3      0
                       _AdcDataReady
                              _Get5V
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Get5V                                               14    12      2    9977
                                             30 BANK1     14    12      2
                         _AdcGetData
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _IPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmLow                                 3     3      0   12694
                                             22 BANK1      3     3      0
                     _GetMaxPressure
           _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (3) _SetVeryHighPressureAlarmHigh                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetHighPressureAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetMaxPressure                                       4     2      2   12629
                                             18 BANK1      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _HighPressureAlarmHigh                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GasFailureAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPBelowSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPAboveSetAlarm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ControlFailAlarm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearAlarmLED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CircuitFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerSet                                            1     1      0   41225
                                            133 BANK1      1     1      0
                          _BuzzerOff
                         _BuzzerTask
 ---------------------------------------------------------------------------------
 (3) _BuzzerTask                                           2     2      0   41194
                                            131 BANK1      2     2      0
                          _BuzzerOff
                           _BuzzerOn
              _ClearMonitorFailAlarm
                _SetMonitorFailAlarm
                 _TMR4_Period8BitSet
           _TMR4_SetInterruptHandler
                         _TMR4_Start
                          _TMR4_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   40741
                                            113 BANK1     18     4     14
                    _GetPressureV_pa (ARG)
                     _GetPressure_pa (ARG)
                             _See12V (ARG)
                              _See5V (ARG)
                    _SeePressureV_pa (ARG)
                     _SeePressure_pa (ARG)
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     391
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Period8BitSet                                   1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetMonitorFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearMonitorFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerOn                                             1     1      0      31
                                              4 BANK1      1     1      0
                        _CMP1_Enable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BuzzerClear                                          0     0      0       0
                          _BuzzerOff
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BuzzerOff                                            0     0      0       0
                       _CMP1_Disable
 ---------------------------------------------------------------------------------
 (3) _CMP1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BatteryFailAlarm                                     2     2      0   18035
                                             44 BANK1      2     2      0
                       _AdcDataReady
           _ClearBaterryLowAlarmHigh
            _ClearBaterryLowAlarmMed
              _ClearBatteryFailAlarm
            _ClearNoPowerSupplyAlarm
                             _Get12V
             _SetBaterryLowAlarmHigh
              _SetBaterryLowAlarmMed
                _SetBatteryFailAlarm
              _SetNoPowerSupplyAlarm
 ---------------------------------------------------------------------------------
 (3) _SetNoPowerSupplyAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBatteryFailAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmMed                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetBaterryLowAlarmHigh                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Get12V                                              14    12      2   11693
                                             30 BANK1     14    12      2
                         _AdcGetData
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1716
                                              4 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    3405
                                             16 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _AdcGetData                                           4     2      2    6436
                                             10 BANK1      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ClearNoPowerSupplyAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBatteryFailAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmMed                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClearBaterryLowAlarmHigh                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _AdcDataReady                                         2     0      2    6246
                                             10 BANK1      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmMed                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BaterryLowAlarmHigh                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlarmUpdateLCD                                       6     6      0  300532
                                            192 BANK1      6     6      0
                       _AlarmDisplay
                           _AnyAlarm
                        _HigherAlarm
                       _ValueDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _HigherAlarm                                         11     9      2    6274
                                             10 BANK1     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _AlarmDisplay                                         9     5      4  164547
                                            183 BANK1      9     5      4
                       _ValueDisplay
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _ValueDisplay                                        42    42      0  123431
                                            141 BANK1     42    42      0
                      _GetAlarmState
                             _GetBpm
                 _GetDisableAlarmSV1
                              _GetEp
                              _GetIp
                            _GetPmax
                             _GetSpr
                        _GetTargetEp
                        _GetTargetIp
                             _GetTde
                             _GetTdi
                              _GetTe
                              _GetTi
                          _GetVolume
                            ___awdiv
                            ___awmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    10     18   38882
                                            113 BANK1     28    10     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37491
                                            105 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   36523
                                             72 BANK1     33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7931
                                             33 BANK1     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 BANK1      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3222
                                             15 BANK1     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8167
                                             33 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    6180
                                             33 BANK1      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5901
                                             22 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     490
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2374
                                             15 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1874
                                              6 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 BANK1      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7083
                                             11 BANK1     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    5980
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1673
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) _GetVolume                                            2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTi                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTe                                                2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTdi                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTde                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetTargetIp                                          2     0      2   12595
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetTargetEp                                          2     0      2   12595
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetSpr                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetPmax                                              2     0      2   12595
                                             18 BANK1      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetIp                                                9     7      2   12669
                                             18 BANK1      9     7      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GetEp                                                9     7      2   12669
                                             18 BANK1      9     7      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4   12595
                                             10 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetDisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetBpm                                               2     0      2       0
                                              4 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetAlarmState                                        2     0      2      99
                                              8 BANK1      2     0      2
                           _AnyAlarm
 ---------------------------------------------------------------------------------
 (2) _AnyAlarm                                             4     4      0      99
                                              4 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _AlarmSet                                             1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _AlarmClear                                           1     1      0      31
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          4     4      0  698367
                                              0 BANK1      4     4      0
                   Absolute function *
                           _ADCC_ISR
                           _CMP1_ISR
                           _I2C2_Isr *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR4_ISR
                           _TMR5_ISR
                           _TMR6_ISR
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR6_ISR                                            0     0      0   22299
                   Absolute function *
             _ControllerTimerHandler *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ControllerTimerHandler                              0     0      0   22299
                _SetControlFailAlarm
            i2_ClearControlFailAlarm
                          i2___awmod
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                            0     0      0   21494
                   Absolute function *
                       _AlarmHandler *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _AlarmHandler                                        2     2      0   21265
                                             90 COMRAM     2     2      0
                         i2_AnyAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) _TMR4_ISR                                            0     0      0   42433
                   Absolute function *
                      _BuzzerHandler *
                  _BuzzerTestHandler *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _BuzzerTestHandler                                   0     0      0   21166
                        i2_BuzzerOff
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) _BuzzerHandler                                       0     0      0   21267
                       i2_BuzzerTask
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerTask                                        2     2      0   21267
                                             90 COMRAM     2     2      0
                        i2_BuzzerOff
                         i2_BuzzerOn
            i2_ClearMonitorFailAlarm
              i2_SetMonitorFailAlarm
               i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
                       i2_TMR4_Start
                        i2_TMR4_Stop
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_SetInterruptHandler                          2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Period8BitSet                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_SetMonitorFailAlarm                               0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerOn                                          1     1      0      31
                                              0 COMRAM     1     1      0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0  207964
                   Absolute function *
                         _ButtonTask *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ButtonTask                                          1     1      0  207735
                                            103 BANK0      1     1      0
                  i2_DisableAlarmSV1
                        i2_HistAlarm
                        i2_MuteAlarm
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_MuteAlarm                                         5     5      0   46951
                                             91 COMRAM     2     2      0
                                             37 BANK0      3     3      0
                         i2_AnyAlarm
                      i2_BuzzerClear
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
            i2_ClearMonitorFailAlarm
   i2_ClearVeryHighPressureAlarmHigh
                      i2_HigherAlarm
                      i2_SetAlarmSV1
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_SetAlarmSV1                                       1     1      0   21290
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_BuzzerClear                                       0     0      0       0
                        i2_BuzzerOff
                        i2_TMR4_Stop
 ---------------------------------------------------------------------------------
 (18) i2_TMR4_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_BuzzerOff                                         0     0      0       0
                     i2_CMP1_Disable
 ---------------------------------------------------------------------------------
 (17) i2_HistAlarm                                         4     4      0  139618
                                             91 COMRAM     4     4      0
                   i2_AlarmUpdateLCD
                  i2_TMR5_StartTimer
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_TMR5_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_AlarmUpdateLCD                                    6     6      0  139166
                                             97 BANK0      6     6      0
                     i2_AlarmDisplay
                         i2_AnyAlarm
                      i2_HigherAlarm
                     i2_ValueDisplay
                           i2___wmul
 ---------------------------------------------------------------------------------
 (18) i2_HigherAlarm                                      11     9      2    2232
                                              6 COMRAM    11     9      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (19) i2_AlarmDisplay                                      9     5      4   78413
                                             86 COMRAM     5     5      0
                                             93 BANK0      4     0      4
                     i2_ValueDisplay
                          i2___awmod
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) i2_DisableAlarmSV1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0  131995
                   Absolute function *
                _MonitorPressureTask *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MonitorPressureTask                                51    51      0  131995
                                             90 COMRAM     5     5      0
                                             59 BANK0     42    42      0
                    _AdcReStartCycle
                           _AdcReady
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
                   _DisplayCalibrate
                 _GetPressure_mbar02
             _SetCircuitFailureAlarm
                 _SetEPAboveSetAlarm
                 _SetEPBelowSetAlarm
                 _SetGasFailureAlarm
                 _SetIPAboveSetAlarm
                 _SetIPBelowSetAlarm
                 _SetTdeTooLongAlarm
                 _SetTdiTooLongAlarm
                  _SetVAboveMaxAlarm
                  _SetVBelowMinAlarm
                            ___lldiv
                            ___lwdiv
                              _isqrt
                     i2_AdcDataReady
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                      i2_MonitorDump
                           i2_See12V
                            i2_See5V
                          i2___aldiv
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_MonitorDump                                       0     0      0   33635
                           i2_See12V
                            i2_See5V
                          i2___awdiv
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_See5V                                            14    12      2    3424
                                             26 COMRAM    14    12      2
                       i2_AdcSeeData
                          i2___aldiv
 ---------------------------------------------------------------------------------
 (17) i2_See12V                                           14    12      2    3840
                                             26 COMRAM    14    12      2
                       i2_AdcSeeData
                          i2___aldiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2_AdcSeeData                                        4     2      2    2073
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_AdcDataReady                                      2     0      2    2004
                                              6 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) _isqrt                                              10     8      2     326
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (17) ___lwdiv                                             7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (17) _SetVBelowMinAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetVAboveMaxAlarm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdiTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetTdeTooLongAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetIPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetGasFailureAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPBelowSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetEPAboveSetAlarm                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _SetCircuitFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GetPressure_mbar02                                  4     2      2   14414
                                             42 COMRAM     4     2      2
                   i2_GetPressure_pa
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) _DisplayCalibrate                                    8     0      8   21078
                                             51 BANK0      8     0      8
                          i2___awdiv (ARG)
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (17) _AdcReStartCycle                                     0     0      0    1960
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) _I2C2_Isr                                            0     0      0  225782
                _I2C2_SlaveClearBuff
            _I2C2_SlaveClearStopFlag
              _I2C2_SlaveIsRxBufFull
               _I2C2_SlaveRdCallBack
             _I2C2_SlaveReleaseClock
               _I2C2_SlaveSetCounter
             _I2C2_SlaveStopCallBack
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveStopCallBack                              0     0      0  225717
                   Absolute function *
                        _StopHandler *
 ---------------------------------------------------------------------------------
 (17) _StopHandler                                         2     2      0  225717
                                             93 COMRAM     2     2      0
                     _ReceiveHandler
                        _UpdateState
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) _UpdateState                                         8     8      0  204502
                                             91 COMRAM     2     2      0
                                             93 BANK0      6     6      0
                      _ClearAllAlarm
              _ControllerBuzzerCheck
                     _DisplayDisable
                      _DisplayEnable
           _GetControllerBuzzerCheck
                _SetControlFailAlarm
                     _SetMaxPressure
                          _SetTarget
                   _SetVolumeControl
            i2_ClearControlFailAlarm
                   i2_EnableAlarmSV1
                           i2_LCDOff
                            i2_LCDOn
                   i2_MonitorDisable
                    i2_MonitorEnable
                i2_SetCalibrateState
                           i2_SetSV1
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetSV1                                            1     1      0   21290
                                             90 COMRAM     1     1      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (19) i2_SetCalibrateState                                 1     1      0   44978
                                             90 COMRAM     1     1      0
                        i2_ClearVars
                  i2_GetPressureV_pa
                   i2_GetPressure_pa
                  i2_TMR0_StartTimer
                   i2_TMR0_StopTimer
               i2_UnDisplayCalibrate
                          i2___awdiv
                           i2_printf
 ---------------------------------------------------------------------------------
 (20) i2_UnDisplayCalibrate                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_GetPressure_pa                                   16    14      2    9175
                                             26 COMRAM    16    14      2
                       i2_AdcGetData
                          i2___aldiv
                          i2___awdiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (17) i2_GetPressureV_pa                                  12    10      2    9141
                                             26 COMRAM    12    10      2
                       i2_AdcGetData
                          i2___aldiv
                          i2___awdiv
                           i2___lmul
 ---------------------------------------------------------------------------------
 (18) i2___lmul                                           12     4      8     416
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (18) i2_AdcGetData                                        4     2      2    2104
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2_ClearVars                                         4     4      0     260
                                              0 COMRAM     4     4      0
         i2_ClearCircuitFailureAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
 ---------------------------------------------------------------------------------
 (19) i2_MonitorEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_MonitorDisable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOn                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_LCDOff                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_EnableAlarmSV1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _SetVolumeControl                                    1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _SetTarget                                          12     0     12    3910
                                             26 COMRAM    12     0     12
                          i2___aldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___aldiv                                          14     6      8    1215
                                             12 COMRAM    14     6      8
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 (19) _SetMaxPressure                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _SetControlFailAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _GetControllerBuzzerCheck                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) _DisplayEnable                                       0     0      0   56283
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) _DisplayDisable                                      0     0      0   56283
                     i2_ValueDisplay
 ---------------------------------------------------------------------------------
 (19) i2_ValueDisplay                                     42    42      0   56283
                                             51 BANK0     42    42      0
                    i2_GetAlarmState
                           i2_GetBpm
               i2_GetDisableAlarmSV1
                            i2_GetEp
                            i2_GetIp
                          i2_GetPmax
                           i2_GetSpr
                      i2_GetTargetEp
                      i2_GetTargetIp
                           i2_GetTde
                           i2_GetTdi
                            i2_GetTe
                            i2_GetTi
                        i2_GetVolume
                          i2___awdiv
                          i2___awmod
                           i2___wmul
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (20) i2_sprintf                                          28    10     18   20656
                                             23 BANK0     28    10     18
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (20) i2_GetVolume                                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTi                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTe                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTdi                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTde                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetIp                                       2     0      2    5205
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetTargetEp                                       2     0      2    5205
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetSpr                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetPmax                                           2     0      2    5205
                                             14 COMRAM     2     0      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetIp                                             9     7      2    5279
                                             14 COMRAM     9     7      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2_GetEp                                             9     7      2    5279
                                             14 COMRAM     9     7      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (20) i2___awdiv                                           8     4      4    5205
                                              6 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2_GetDisableAlarmSV1                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_GetBpm                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2_GetAlarmState                                     2     0      2      99
                                              4 COMRAM     2     0      2
                         i2_AnyAlarm
 ---------------------------------------------------------------------------------
 (17) i2_AnyAlarm                                          4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (19) _ControllerBuzzerCheck                               0     0      0       0
                      i2_CMP1_Enable
 ---------------------------------------------------------------------------------
 (19) i2_CMP1_Enable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ClearAllAlarm                                       0     0      0       0
          _ClearHighPressureAlarmLow
               _ClearTdeTooLongAlarm
               _ClearTdiTooLongAlarm
                _ClearVAboveMaxAlarm
                _ClearVBelowMinAlarm
         i2_ClearBaterryLowAlarmHigh
          i2_ClearBaterryLowAlarmMed
            i2_ClearBatteryFailAlarm
         i2_ClearCircuitFailureAlarm
            i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
       i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
            i2_ClearMonitorFailAlarm
          i2_ClearNoPowerSupplyAlarm
   i2_ClearVeryHighPressureAlarmHigh
 ---------------------------------------------------------------------------------
 (18) i2_ClearVeryHighPressureAlarmHigh                    0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearNoPowerSupplyAlarm                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearMonitorFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearIPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearHighPressureAlarmHigh                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearGasFailureAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPBelowSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearEPAboveSetAlarm                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_ClearControlFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ClearCircuitFailureAlarm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBatteryFailAlarm                             0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmMed                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_ClearBaterryLowAlarmHigh                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVBelowMinAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearVAboveMaxAlarm                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdiTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ClearTdeTooLongAlarm                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _ClearHighPressureAlarmLow                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveSetCounter                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveReleaseClock                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveRdCallBack                                0     0      0      43
                   Absolute function *
    _I2C2_SlaveDefRdInterruptHandler *
                     _ReceiveHandler *
 ---------------------------------------------------------------------------------
 (18) _ReceiveHandler                                      4     4      0      43
                                              0 COMRAM     4     4      0
                          _I2C2_Read
 ---------------------------------------------------------------------------------
 (19) _I2C2_Read                                           0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (17) _I2C2_SlaveDefRdInterruptHandler                     0     0      0       0
                _I2C2_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (20) _I2C2_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearStopFlag                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_SlaveClearBuff                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _CMP1_ISR                                            0     0      0   21166
                   Absolute function *
                   _BuzzerCMPHandler *
 ---------------------------------------------------------------------------------
 (16) _BuzzerCMPHandler                                    0     0      0   21166
                     i2_CMP1_Disable
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_CMP1_Disable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_ISR                                            0     0      0   25234
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                         _AdcHandler *
 ---------------------------------------------------------------------------------
 (16) _AdcHandler                                          0     0      0   25234
           _ADCC_GetConversionResult
                           _AdcReady
                  i2_ADCC_Initialize
             i2_ADCC_StartConversion
                          i2_AdcInit
                           i2___wmul
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_printf                                           18     4     14   21166
                                             86 COMRAM     4     4      0
                                             23 BANK0     14     0     14
                  i2_GetPressureV_pa (ARG)
                   i2_GetPressure_pa (ARG)
                           i2_See12V (ARG)
                            i2_See5V (ARG)
                          i2___awdiv (ARG)
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (18) i2_vfprintf                                          8     2      6   19906
                                             78 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) i2_vfpfcnvrt                                        45    39      6   19403
                                             68 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (20) i2_xtoa                                             39    28     11    4313
                                             29 COMRAM    39    28     11
                          i2_isalpha
                          i2_isupper
                              i2_pad
                          i2_toupper
 ---------------------------------------------------------------------------------
 (21) i2_toupper                                           8     6      2     262
                                              6 COMRAM     8     6      2
                          i2_islower
 ---------------------------------------------------------------------------------
 (22) i2_islower                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isupper                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_isalpha                                           6     4      2      66
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (20) i2_stoa                                             22    18      4    1842
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (20) i2_dtoa                                             36    26     10    4829
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (21) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (20) i2_ctoa                                              7     4      3    3117
                                             29 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_pad                                              11     5      6    2948
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (22) i2_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (22) i2_fputs                                             7     3      4    1180
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (23) i2_fputc                                             9     5      4     900
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (24) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                      i2_UART1_Write
 ---------------------------------------------------------------------------------
 (25) i2_UART1_Write                                       1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_atoi                                             15    13      2    2681
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (21) i2_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (20) i2_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2_AdcInit                                           0     0      0    2034
      i2_ADCC_SetADIInterruptHandler
             i2_ADCC_StartConversion
                           i2___wmul
 ---------------------------------------------------------------------------------
 (21) i2___wmul                                            6     2      4    1938
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_StartConversion                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_ADCC_Initialize                                   0     0      0      74
      i2_ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (18) i2_ADCC_SetADIInterruptHandler                       2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _AdcReady                                            0     0      0       0
              _ADCC_IsConversionDone
 ---------------------------------------------------------------------------------
 (18) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AlarmCheckTask
     _AlarmClear
     _AlarmSet
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _AnyAlarm
     _BaterryLowAlarmHigh *
     _BaterryLowAlarmMed *
     _BatteryFailAlarm *
       _AdcDataReady
         ___wmul
       _ClearBaterryLowAlarmHigh
       _ClearBaterryLowAlarmMed
       _ClearBatteryFailAlarm
       _ClearNoPowerSupplyAlarm
       _Get12V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _SetBaterryLowAlarmHigh
       _SetBaterryLowAlarmMed
       _SetBatteryFailAlarm
       _SetNoPowerSupplyAlarm
     _BuzzerClear *
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _BuzzerSet *
       _BuzzerOff
         _CMP1_Disable
       _BuzzerTask
         _BuzzerOff
           _CMP1_Disable
         _BuzzerOn
           _CMP1_Enable
         _ClearMonitorFailAlarm
         _SetMonitorFailAlarm
         _TMR4_Period8BitSet
         _TMR4_SetInterruptHandler
         _TMR4_Start
         _TMR4_Stop
         _printf
           _GetPressureV_pa (ARG)
             _AdcGetData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           _GetPressure_pa (ARG)
             _AdcGetData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           _See12V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _See5V (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
           _SeePressureV_pa (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           _SeePressure_pa (ARG)
             _AdcSeeData
               ___wmul
             ___aldiv
               ___lmul (ARG)
             ___awdiv
               ___wmul (ARG)
             ___lmul
           ___awdiv (ARG)
             ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
     _CircuitFailureAlarm *
     _ClearAlarmLED *
     _ControlFailAlarm *
     _EPAboveSetAlarm *
     _EPBelowSetAlarm *
     _GasFailureAlarm *
     _HighPressureAlarmHigh *
     _HighPressureAlarmLow *
       _GetMaxPressure
         ___awdiv
           ___wmul (ARG)
       _SetHighPressureAlarmHigh
       _SetVeryHighPressureAlarmHigh
     _HigherAlarm *
       ___wmul
     _IPAboveSetAlarm *
     _IPBelowSetAlarm *
     _MonitorFailAlarm *
       _AdcDataReady
         ___wmul
       _Get5V
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _NoPowerSupplyAlarm *
     _SetAlarmLED *
     _SetAlarmSV1 *
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     _TdeTooLongAlarm *
     _TdiTooLongAlarm *
     _VAboveMaxAlarm *
     _VBelowMinAlarm *
     _VeryHighPressureAlarmHigh *
     ___wmul *
   _AlarmInit
     _BuzzerInit
       _BuzzerOff
         _CMP1_Disable
       _CMP1_SetIntHandler
       _TMR4_SetInterruptHandler
     _TMR5_SetInterruptHandler
     _TMR5_StartTimer
   _ButtonInit
     _TMR1_SetInterruptHandler
     _TMR1_StartTimer
   _BuzzerCheck
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _SetMonitorFailAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _BuzzerTest
     _BuzzerOff
       _CMP1_Disable
     _BuzzerOn
       _CMP1_Enable
     _TMR4_Period8BitSet
     _TMR4_SetInterruptHandler
     _TMR4_Start
   _ControllerInit
     _I2C2_Open
       _I2C2_SlaveEnableIrq
       _I2C2_SlaveOpen
       _I2C2_SlaveSetAddrIntHandler
       _I2C2_SlaveSetBusColIntHandler
       _I2C2_SlaveSetIsrHandler
       _I2C2_SlaveSetReadIntHandler
       _I2C2_SlaveSetSlaveAddr
       _I2C2_SlaveSetSlaveMask
       _I2C2_SlaveSetWrColIntHandler
       _I2C2_SlaveSetWriteIntHandler
     _I2C2_SlaveSetReadIntHandler
     _I2C2_SlaveSetStopIntHandler
     _TMR6_SetInterruptHandler
     _TMR6_StartTimer
       _TMR6_Start
   _DisableAlarmSV1
   _DisplayTask
     _LCDMessage1
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage12
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
     _LCDMessage2
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDWriteCmd
   _DumpI2C
   _EnableAlarmSV1
   _HistAlarm
     _AlarmUpdateLCD
       _AlarmDisplay
         _ValueDisplay
           _GetAlarmState
             _AnyAlarm
           _GetBpm
           _GetDisableAlarmSV1
           _GetEp
             ___awdiv
               ___wmul (ARG)
           _GetIp
             ___awdiv
               ___wmul (ARG)
           _GetPmax
             ___awdiv
               ___wmul (ARG)
           _GetSpr
           _GetTargetEp
             ___awdiv
               ___wmul (ARG)
           _GetTargetIp
             ___awdiv
               ___wmul (ARG)
           _GetTde
           _GetTdi
           _GetTe
           _GetTi
           _GetVolume
           ___awdiv
             ___wmul (ARG)
           ___awmod
           ___wmul
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
         ___awmod
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _AnyAlarm
       _HigherAlarm
         ___wmul
       _ValueDisplay
         _GetAlarmState
           _AnyAlarm
         _GetBpm
         _GetDisableAlarmSV1
         _GetEp
           ___awdiv
             ___wmul (ARG)
         _GetIp
           ___awdiv
             ___wmul (ARG)
         _GetPmax
           ___awdiv
             ___wmul (ARG)
         _GetSpr
         _GetTargetEp
           ___awdiv
             ___wmul (ARG)
         _GetTargetIp
           ___awdiv
             ___wmul (ARG)
         _GetTde
         _GetTdi
         _GetTe
         _GetTi
         _GetVolume
         ___awdiv
           ___wmul (ARG)
         ___awmod
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       ___wmul
     _TMR5_StartTimer
     _TMR5_StopTimer
   _InitDisplay
     _LCDInit
       _LCDMessage
         _LCDWriteChar
         _strlen
       _LCDTest
         _LCDMessage12
           _LCDMessage
             _LCDWriteChar
             _strlen
           _LCDWriteCmd
       _LCDWrite4
       _LCDWriteCmd
   _LCDOff
   _LCDOn
   _MonitorDisable
   _MonitorDump
     _See12V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _MonitorEnable
   _MonitorInit
     _AdcInit
       _ADCC_SetADIInterruptHandler
       _ADCC_StartConversion
       ___wmul
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
   _MuteAlarm
     _AnyAlarm
     _BuzzerClear
       _BuzzerOff
         _CMP1_Disable
       _TMR4_Stop
     _ClearCircuitFailureAlarm
     _ClearControlFailAlarm
     _ClearGasFailureAlarm
     _ClearHighPressureAlarmHigh
     _ClearMonitorFailAlarm
     _ClearVeryHighPressureAlarmHigh
     _HigherAlarm
       ___wmul
     _SetAlarmSV1
       _printf
         _GetPressureV_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _GetPressure_pa (ARG)
           _AdcGetData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _See12V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___lmul
         _See5V (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
         _SeePressureV_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         _SeePressure_pa (ARG)
           _AdcSeeData
             ___wmul
           ___aldiv
             ___lmul (ARG)
           ___awdiv
             ___wmul (ARG)
           ___lmul
         ___awdiv (ARG)
           ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
     ___wmul
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CMP1_Initialize
       _CMP1_Disable
       _CMP1_Enable
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _See12V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _See5V
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
   _SeePressureV_pa
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___lmul
   _SeePressure_pa
     _AdcSeeData
       ___wmul
     ___aldiv
       ___lmul (ARG)
     ___awdiv
       ___wmul (ARG)
     ___lmul
   _SetAlarmSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetCalibrateState
     _ClearVars
       _ClearCircuitFailureAlarm
       _ClearEPAboveSetAlarm
       _ClearEPBelowSetAlarm
       _ClearIPAboveSetAlarm
       _ClearIPBelowSetAlarm
     _GetPressureV_pa
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _GetPressure_pa
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _TMR0_StartTimer
     _TMR0_StopTimer
     _UnDisplayCalibrate
     ___awdiv
       ___wmul (ARG)
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _SetSV1
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
   _TestAlarm
     _printf
       _GetPressureV_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _GetPressure_pa (ARG)
         _AdcGetData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _See12V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _See5V (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
       _SeePressureV_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       _SeePressure_pa (ARG)
         _AdcSeeData
           ___wmul
         ___aldiv
           ___lmul (ARG)
         ___awdiv
           ___wmul (ARG)
         ___lmul
       ___awdiv (ARG)
         ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _UART1_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
             _toupper
               _islower
     _putchar
       _fputc
         _putch
           _UART1_Write
   _UART1_is_rx_ready
   ___llmod
   _getch
     _UART1_Read
   _printf
     _GetPressureV_pa (ARG)
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _GetPressure_pa (ARG)
       _AdcGetData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _See12V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _See5V (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
     _SeePressureV_pa (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     _SeePressure_pa (ARG)
       _AdcSeeData
         ___wmul
       ___aldiv
         ___lmul (ARG)
       ___awdiv
         ___wmul (ARG)
       ___lmul
     ___awdiv (ARG)
       ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
         _fputc
           _putch
             _UART1_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _UART1_Write
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _UART1_Write
             _fputs
               _fputc
                 _putch
                   _UART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _AdcHandler *
       _ADCC_GetConversionResult
       _AdcReady
         _ADCC_IsConversionDone
       i2_ADCC_Initialize
         i2_ADCC_SetADIInterruptHandler
       i2_ADCC_StartConversion
       i2_AdcInit
         i2_ADCC_SetADIInterruptHandler
         i2_ADCC_StartConversion
         i2___wmul
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _CMP1_ISR *
     Absolute function(Fake) *
     _BuzzerCMPHandler *
       i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
   _I2C2_Isr *
     _I2C2_SlaveClearBuff
     _I2C2_SlaveClearStopFlag
     _I2C2_SlaveIsRxBufFull
     _I2C2_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C2_SlaveDefRdInterruptHandler *
         _I2C2_SlaveGetRxData
       _ReceiveHandler *
         _I2C2_Read
           _I2C2_SlaveGetRxData
     _I2C2_SlaveReleaseClock
     _I2C2_SlaveSetCounter
     _I2C2_SlaveStopCallBack
       Absolute function(Fake) *
       _StopHandler *
         _ReceiveHandler
           _I2C2_Read
             _I2C2_SlaveGetRxData
         _UpdateState
           _ClearAllAlarm
             _ClearHighPressureAlarmLow
             _ClearTdeTooLongAlarm
             _ClearTdiTooLongAlarm
             _ClearVAboveMaxAlarm
             _ClearVBelowMinAlarm
             i2_ClearBaterryLowAlarmHigh
             i2_ClearBaterryLowAlarmMed
             i2_ClearBatteryFailAlarm
             i2_ClearCircuitFailureAlarm
             i2_ClearControlFailAlarm
             i2_ClearEPAboveSetAlarm
             i2_ClearEPBelowSetAlarm
             i2_ClearGasFailureAlarm
             i2_ClearHighPressureAlarmHigh
             i2_ClearIPAboveSetAlarm
             i2_ClearIPBelowSetAlarm
             i2_ClearMonitorFailAlarm
             i2_ClearNoPowerSupplyAlarm
             i2_ClearVeryHighPressureAlarmHigh
           _ControllerBuzzerCheck
             i2_CMP1_Enable
           _DisplayDisable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _DisplayEnable
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
           _GetControllerBuzzerCheck
           _SetControlFailAlarm
           _SetMaxPressure
           _SetTarget
             i2___aldiv
               i2___lmul (ARG)
             i2___wmul
           _SetVolumeControl
           i2_ClearControlFailAlarm
           i2_EnableAlarmSV1
           i2_LCDOff
           i2_LCDOn
           i2_MonitorDisable
           i2_MonitorEnable
           i2_SetCalibrateState
             i2_ClearVars
               i2_ClearCircuitFailureAlarm
               i2_ClearEPAboveSetAlarm
               i2_ClearEPBelowSetAlarm
               i2_ClearIPAboveSetAlarm
               i2_ClearIPBelowSetAlarm
             i2_GetPressureV_pa
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_GetPressure_pa
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_TMR0_StartTimer
             i2_TMR0_StopTimer
             i2_UnDisplayCalibrate
             i2___awdiv
               i2___wmul (ARG)
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2_See12V (ARG)
                 i2_AdcSeeData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___lmul
               i2_See5V (ARG)
                 i2_AdcSeeData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_SetSV1
             i2_printf
               i2_GetPressureV_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2_GetPressure_pa (ARG)
                 i2_AdcGetData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___awdiv
                   i2___wmul (ARG)
                 i2___lmul
               i2_See12V (ARG)
                 i2_AdcSeeData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
                 i2___lmul
               i2_See5V (ARG)
                 i2_AdcSeeData
                   i2___wmul
                 i2___aldiv
                   i2___lmul (ARG)
               i2___awdiv (ARG)
                 i2___wmul (ARG)
               i2_vfprintf (ARG)
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_See12V (ARG)
               i2_AdcSeeData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___lmul
             i2_See5V (ARG)
               i2_AdcSeeData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_See12V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___lmul
           i2_See5V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
   _TMR0_ISR *
     Absolute function(Fake) *
     _MonitorPressureTask *
       _AdcReStartCycle
         i2_ADCC_StartConversion
         i2___wmul
       _AdcReady
         _ADCC_IsConversionDone
       _ClearTdeTooLongAlarm
       _ClearTdiTooLongAlarm
       _ClearVAboveMaxAlarm
       _ClearVBelowMinAlarm
       _DisplayCalibrate
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_sprintf (ARG)
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       _GetPressure_mbar02
         i2_GetPressure_pa
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2___awdiv
           i2___wmul (ARG)
       _SetCircuitFailureAlarm
       _SetEPAboveSetAlarm
       _SetEPBelowSetAlarm
       _SetGasFailureAlarm
       _SetIPAboveSetAlarm
       _SetIPBelowSetAlarm
       _SetTdeTooLongAlarm
       _SetTdiTooLongAlarm
       _SetVAboveMaxAlarm
       _SetVBelowMinAlarm
       ___lldiv
       ___lwdiv
       _isqrt
       i2_AdcDataReady
         i2___wmul
       i2_ClearCircuitFailureAlarm
       i2_ClearEPAboveSetAlarm
       i2_ClearEPBelowSetAlarm
       i2_ClearGasFailureAlarm
       i2_ClearIPAboveSetAlarm
       i2_ClearIPBelowSetAlarm
       i2_ClearVars
         i2_ClearCircuitFailureAlarm
         i2_ClearEPAboveSetAlarm
         i2_ClearEPBelowSetAlarm
         i2_ClearIPAboveSetAlarm
         i2_ClearIPBelowSetAlarm
       i2_GetPressureV_pa
         i2_AdcGetData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___awdiv
           i2___wmul (ARG)
         i2___lmul
       i2_GetPressure_pa
         i2_AdcGetData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___awdiv
           i2___wmul (ARG)
         i2___lmul
       i2_MonitorDump
         i2_See12V
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv
           i2___wmul (ARG)
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_See12V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___lmul
           i2_See5V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_See12V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
         i2___lmul
       i2_See5V
         i2_AdcSeeData
           i2___wmul
         i2___aldiv
           i2___lmul (ARG)
       i2___aldiv
         i2___lmul (ARG)
       i2___awdiv
         i2___wmul (ARG)
       i2___awmod
       i2___wmul
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _ButtonTask *
       i2_DisableAlarmSV1
       i2_HistAlarm
         i2_AlarmUpdateLCD
           i2_AlarmDisplay
             i2_ValueDisplay
               i2_GetAlarmState
                 i2_AnyAlarm
               i2_GetBpm
               i2_GetDisableAlarmSV1
               i2_GetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetPmax
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetSpr
               i2_GetTargetEp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTargetIp
                 i2___awdiv
                   i2___wmul (ARG)
               i2_GetTde
               i2_GetTdi
               i2_GetTe
               i2_GetTi
               i2_GetVolume
               i2___awdiv
                 i2___wmul (ARG)
               i2___awmod
               i2___wmul
               i2_sprintf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_ctoa
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_isdigit
                     i2_stoa
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_strlen
                     i2_xtoa
                       i2_isalpha
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_UART1_Write
                         i2_strlen
                       i2_toupper
                         i2_islower
             i2___awmod
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2_AnyAlarm
           i2_HigherAlarm
             i2___wmul
           i2_ValueDisplay
             i2_GetAlarmState
               i2_AnyAlarm
             i2_GetBpm
             i2_GetDisableAlarmSV1
             i2_GetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetPmax
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetSpr
             i2_GetTargetEp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTargetIp
               i2___awdiv
                 i2___wmul (ARG)
             i2_GetTde
             i2_GetTdi
             i2_GetTe
             i2_GetTi
             i2_GetVolume
             i2___awdiv
               i2___wmul (ARG)
             i2___awmod
             i2___wmul
             i2_sprintf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_ctoa
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_isdigit
                   i2_stoa
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_strlen
                   i2_xtoa
                     i2_isalpha
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_UART1_Write
                       i2_strlen
                     i2_toupper
                       i2_islower
           i2___wmul
         i2_TMR5_StartTimer
         i2_TMR5_StopTimer
       i2_MuteAlarm
         i2_AnyAlarm
         i2_BuzzerClear
           i2_BuzzerOff
             i2_CMP1_Disable
           i2_TMR4_Stop
         i2_ClearCircuitFailureAlarm
         i2_ClearControlFailAlarm
         i2_ClearGasFailureAlarm
         i2_ClearHighPressureAlarmHigh
         i2_ClearMonitorFailAlarm
         i2_ClearVeryHighPressureAlarmHigh
         i2_HigherAlarm
           i2___wmul
         i2_SetAlarmSV1
           i2_printf
             i2_GetPressureV_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_GetPressure_pa (ARG)
               i2_AdcGetData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___awdiv
                 i2___wmul (ARG)
               i2___lmul
             i2_See12V (ARG)
               i2_AdcSeeData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
               i2___lmul
             i2_See5V (ARG)
               i2_AdcSeeData
                 i2___wmul
               i2___aldiv
                 i2___lmul (ARG)
             i2___awdiv (ARG)
               i2___wmul (ARG)
             i2_vfprintf (ARG)
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_ctoa
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_isdigit
                 i2_stoa
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_strlen
                 i2_xtoa
                   i2_isalpha
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_UART1_Write
                     i2_strlen
                   i2_toupper
                     i2_islower
         i2___wmul
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_See12V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___lmul
           i2_See5V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR4_ISR *
     Absolute function(Fake) *
     _BuzzerHandler *
       i2_BuzzerTask
         i2_BuzzerOff
           i2_CMP1_Disable
         i2_BuzzerOn
           i2_CMP1_Enable
         i2_ClearMonitorFailAlarm
         i2_SetMonitorFailAlarm
         i2_TMR4_Period8BitSet
         i2_TMR4_SetInterruptHandler
         i2_TMR4_Start
         i2_TMR4_Stop
         i2_printf
           i2_GetPressureV_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_GetPressure_pa (ARG)
             i2_AdcGetData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___awdiv
               i2___wmul (ARG)
             i2___lmul
           i2_See12V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
             i2___lmul
           i2_See5V (ARG)
             i2_AdcSeeData
               i2___wmul
             i2___aldiv
               i2___lmul (ARG)
           i2___awdiv (ARG)
             i2___wmul (ARG)
           i2_vfprintf (ARG)
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_ctoa
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_isdigit
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_strlen
               i2_xtoa
                 i2_isalpha
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_UART1_Write
                   i2_strlen
                 i2_toupper
                   i2_islower
     _BuzzerTestHandler *
       i2_BuzzerOff
         i2_CMP1_Disable
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR4_DefaultInterruptHandler *
   _TMR5_ISR *
     Absolute function(Fake) *
     _AlarmHandler *
       i2_AnyAlarm
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
   _TMR6_ISR *
     Absolute function(Fake) *
     _ControllerTimerHandler *
       _SetControlFailAlarm
       i2_ClearControlFailAlarm
       i2___awmod
       i2_printf
         i2_GetPressureV_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_GetPressure_pa (ARG)
           i2_AdcGetData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___awdiv
             i2___wmul (ARG)
           i2___lmul
         i2_See12V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
           i2___lmul
         i2_See5V (ARG)
           i2_AdcSeeData
             i2___wmul
           i2___aldiv
             i2___lmul (ARG)
         i2___awdiv (ARG)
           i2___wmul (ARG)
         i2_vfprintf (ARG)
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
             i2_fputc
               i2_putch
                 i2_UART1_Write
             i2_isdigit
             i2_stoa
               i2_fputc
                 i2_putch
                   i2_UART1_Write
               i2_strlen
             i2_xtoa
               i2_isalpha
               i2_isupper
               i2_pad
                 i2_fputc
                   i2_putch
                     i2_UART1_Write
                 i2_fputs
                   i2_fputc
                     i2_putch
                       i2_UART1_Write
                 i2_strlen
               i2_toupper
                 i2_islower
     _TMR6_DefaultInterruptHandler *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     63F      37       39.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      64      13       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      1      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      B     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C7      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     459      32        0.0%
DATA                 0      0     A98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 19 09:59:03 2020

                             i2_EnableAlarmSV1 AEC6                           ??_TMR4_Period8BitSet 0104  
                  __end_of_ClearVAboveMaxAlarm AF1E                                 i2_ValueDisplay 1EC0  
                                  ?_LCDMessage 0108                         ??_I2C2_SlaveSetCounter 0001  
                                            _a 034C                    ?i2_ClearCircuitFailureAlarm 0001  
                     _ClearCircuitFailureAlarm AE3E               __end_of_TMR5_SetInterruptHandler AC4C  
                    __size_of_SetVolumeControl 000A                     __end_of_BaterryLowAlarmMed B014  
                                 ?_LCDMessage1 0110                                   ?_LCDMessage2 0110  
                                  __CFG_CP$OFF 000000                              ??_CMP1_Initialize 0104  
                                 ___awdiv@sign 010F                        ?i2_ClearEPBelowSetAlarm 0001  
                                           _bp 02BA                              ??_TMR6_StartTimer 0104  
                       __end_of_FVR_Initialize AE1E                                             _pe 01D9  
                                           _pi 01DB                                             _on 00F5  
                                           _te 0256                                             _ti 0258  
                                           _tt 00C8                ?_ClearVeryHighPressureAlarmHigh 0001  
             ??_ClearVeryHighPressureAlarmHigh 0104                            ___wmul@multiplicand 0106  
                            ??_TMR5_WriteTimer 0003                                ?_ControllerInit 0001  
                  __end_of_BaterryLowAlarmHigh B010                          ??_CircuitFailureAlarm 0104  
                        __end_ofi2_UART1_Write 978A                                  ?_LCDMessage12 0110  
                          _SetControlFailAlarm AECE                                     HistAlarm@i 02F7  
                     ??_I2C2_SlaveReleaseClock 0001                                    __CFG_LVP$ON 000000  
                        i2_AlarmUpdateLCD$7140 00C3                          i2_AlarmUpdateLCD$7141 00C5  
               __end_ofi2_ClearIPAboveSetAlarm A9FE                                            l655 964C  
                                          _LED 01F4                                            _PR4 003F9F  
                                          i2l6 8508                             i2___aodiv@quotient 0013  
                         _ClearEPAboveSetAlarm A9A6                     ??_SetHighPressureAlarmHigh 0104  
                              _timer1ReloadVal 02DD                                            _abs 9DA6  
                              _TdeTooLongAlarm B004                          __end_of_GetAlarmState 98D4  
                                          _bpm 0254                                            _pad 8110  
                                          _tt1 00DC                                            _tt2 00DA  
                                          _tt3 01E1                                            _tt4 00D8  
                                          _tde 01DD                                            _msg 0200  
                                          _tdi 01DF                                            _rpe 0246  
                                          _rpi 0248                                            _spr 0232  
                                          _run 00EC                        __size_of_PMD_Initialize 0024  
                                 ___awmod@sign 0109                       __size_of_AdcReStartCycle 0064  
                              _TMR2_Initialize A83A                                            prod 003FF3  
                                          tosl 003FFD                                            wreg 003FE8  
                          __end_ofi2_vfpfcnvrt 18EE                            GetPressureV_pa@adcv 0122  
                     ?_ClearNoPowerSupplyAlarm 0001                        __end_of_SeePressureV_pa 76DA  
                      __end_ofi2_GetAlarmState 9978                   ?_ADCC_SetADIInterruptHandler 0104  
                           _UART1_Transmit_ISR 9B98                                  __CFG_BBEN$OFF 000000  
                      ??_ClearControlFailAlarm 0104                           __end_of_CMP1_Disable AE8E  
                                   _GetEp$4808 0117                                     _GetEp$4809 0119  
                              ?_VBelowMinAlarm 0001                                   ?_LCDWriteCmd 0001  
                              __end_of_LCDInit 751A                                __end_of_LCDTest 89E4  
                                 __CFG_ZCD$OFF 000000                            __end_of_GetTargetEp A4B8  
                          __end_of_GetTargetIp A492                       ?_I2C2_SlaveSetIsrHandler 0104  
                     __size_of_GasFailureAlarm 0004                                           ?_abs 0116  
                                         l2114 2A8C                                           l2140 2B68  
                                   _GetIp$4811 0117                                     _GetIp$4812 0119  
                                         l1621 8560                                           l1720 9A8C  
                                         l1714 9A82                                           l1651 8840  
                                         l4027 9092                                           l1708 9A78  
                                         l1645 8836                                           l1741 87A0  
                                         l1726 9A96                                           l2630 4ABA  
                                         l2383 7A3A                                           l2375 7A0E  
                                         l1663 8854                                           l1728 9A98  
                                         l4313 5D38                                           l1681 8888  
                                         l1665 8856                                           l1657 884A  
                                         l1761 87C0                                           l1753 87B4  
                                         l2387 AADE                                           l1675 887E  
                                         l1771 87E8                                           l1747 87AA  
                                         l3540 3FE6                                           l1693 889C  
                         _ADCC_StartConversion AAB2                                           l3519 5680  
                                         l1695 889E                                           l1687 8892  
                                         l1791 8808                                           l1783 87FC  
                                         l1759 87BE                                           l3472 814A  
                                         l1777 87F2                               __end_of_I2C2_Isr 92C4  
                                         l4282 9DD6                                           l3490 3B10  
                                         l3538 3FDA                                           l3492 3B1C  
                                         l1789 8806                                           ?_pad 0116  
                                         l4392 9874                                           STR_1 FF77  
                                         STR_2 FF4D                                           STR_3 FFEC  
                                         STR_4 FD3A                                           STR_5 FEF0  
                                         STR_6 FEDF                                           STR_7 FF3E  
                                         STR_8 FECE                                           STR_9 FEBD  
                                   _AlarmClear A75A                                           _LATA 003FBA  
                                         _LATB 003FBB                                __end_ofi2_LCDOn ADE4  
                                         _LATC 003FBC                                           _LATD 003FBD  
                                         _LATE 003FBE                                           _T2PR 003FAB  
                                         _T4PR 003F9F                                           _T6PR 003F93  
                                         _PMD0 0039C0                                           _PMD1 0039C1  
                                         _PMD2 0039C2                                           _PMD3 0039C3  
                                         _PMD4 0039C4                                           _PMD5 0039C5  
                                         _PMD6 0039C6                                           _PMD7 0039C7  
                   __end_of_SetTdeTooLongAlarm AEAE                                           _WPUA 003A41  
                                         _WPUB 003A51                                           _WPUC 003A61  
                                         _WPUD 003A71                                           _WPUE 003A81  
                      i2_ClearBatteryFailAlarm AF0E                               __end_of_ADCC_ISR A6FA  
                                __CFG_FCMEN$ON 000000                                 ?i2_MonitorDump 0001  
                          ?_UART1_Transmit_ISR 0001                           ?_SetControlFailAlarm 0001  
                              __end_ofi2_GetEp 5604                                __end_ofi2_GetIp 5488  
                ?_I2C2_SlaveSetWrColIntHandler 0104                                __end_ofi2_GetTe AD90  
                              __end_ofi2_GetTi ACF4                                 _MonitorDisable AE4E  
                                         abs@a 0116                                           _dbuf 0389  
                                         _tt12 0260                                           _pLow 01D5  
                              __end_ofi2_See5V 7968                                           _tt34 025E  
                                         _atoi 5BD6                                           _ctoa 945A  
                            ??_TdiTooLongAlarm 0104                                           _main 2D9C  
                                         _dtoa 3A8E                                __end_of_AdcInit 8E02  
                                         _msg1 03E5                                           _msg2 03D1  
                                         _msg3 03BD                                           _msg4 03A9  
                                         _hist 01ED                                           _init 029A  
                                         _lrpe 01D1                                           _pmax 00D6  
                                         _lrpi 01D3                                           _pmin 0252  
                                         _prec 01C9                                _TMR0_StartTimer AFE4  
                                         _nout 022A                                           pad@i 011D  
                                         pad@p 011A                                           fsr1h 003FE2  
                        __end_of_MonitorEnable AE4E                                           fsr2h 003FDA  
                                         indf1 003FE7                                           indf2 003FDF  
                                         fsr1l 003FE1                                           pad@w 011F  
                                         fsr2l 003FD9                                           _stoa 5604  
                                         _xtoa 3FBE                                    LCDMessage@i 010E  
                                ??_InitDisplay 013E                                    i2_atoi$5677 0010  
                                  i2_atoi$5678 0014                                    i2_atoi$5679 0012  
                                         prodh 003FF4                                           prodl 003FF3  
                                         start 001A                                _timer5ReloadVal 02E3  
                     ??_I2C2_SlaveSetSlaveAddr 0104                        __end_ofi2_MonitorEnable AEBE  
                           __size_of_LCDWrite4 004E                                __end_ofi2_fputc 83D0  
                     ??_I2C2_SlaveSetSlaveMask 0104                                __end_ofi2_fputs 9EDC  
                                   _i2c2RdData 02B6                         __end_ofi2_ValueDisplay 228C  
                ??_UART1_SetTxInterruptHandler 0106                               __end_of_CMP1_ISR A6D8  
               ??_SetVeryHighPressureAlarmHigh 0104                                __end_ofi2_putch AE16  
                              __end_of_GetPmax A4DE                     ??_TMR1_SetInterruptHandler 0106  
                 __end_ofi2_GetDisableAlarmSV1 AFA2                                  __CFG_CSWEN$ON 000000  
                         _ClearGasFailureAlarm AE2E                                    i2_dtoa$5181 0030  
                   ??_TMR4_SetInterruptHandler 0106                                __end_of_DumpI2C B04E  
               ?_I2C2_SlaveSetBusColIntHandler 0104                                   ___param_bank 000000  
                            _SetVBelowMinAlarm AF90                      CMP1_SetIntHandler@handler 0104  
                                   _i2c2WrData 02B7           __size_of_I2C2_SlaveSetAddrIntHandler 000E  
                 __end_of_ClearIPBelowSetAlarm A990                 __end_ofi2_ClearEPBelowSetAlarm AA14  
                   __size_of_UART1_is_rx_ready 000E                                    ?_UART1_Read 0001  
                          __end_of_HigherAlarm 8110                               ??_AlarmCheckTask 02F5  
                                        ??_abs 0118                                          ??_pad 011C  
                       ??i2_UnDisplayCalibrate 0001                             ?_SetVBelowMinAlarm 0001  
                                ?_LCDWriteChar 0001                                     i2_vfprintf 91F2  
                      __end_of_TMR0_Initialize A5C0                                    LCDTest@msg1 0116  
                                  LCDTest@msg2 0127                 ??_TMR0_DefaultInterruptHandler 0001  
                              ?_FVR_Initialize 0001                 __size_of_OSCILLATOR_Initialize 0018  
                               ??_LCDMessage12 0114                         ??_HighPressureAlarmLow 0116  
                         ??_UART1_Transmit_ISR 0001                       __size_of_IPAboveSetAlarm 0018  
                __end_of_OSCILLATOR_Initialize A962                                          l21010 6348  
                                        l21100 5A94                                          l21024 63E8  
                                        l22002 4EB6                                          l21108 5BC8  
                                        l22022 4F52                                          l22014 4EDC  
                                        l22110 6B7A                                          l21126 723C  
                                        l21118 7178                                          l22024 4F58  
                          __end_of_DisplayTask 8478                                          l21136 44BC  
                                        l22050 5000                                          l22114 6B92  
                                        l20530 9B86                                          l22044 4FE8  
                                        l22060 8A00                                          l21148 450C  
                                        l22070 8A28                                          l22062 8A08  
                                        l22134 6BEA                                          l22126 6BD6  
                                        l22118 6BAC                                          l22310 905C  
                                        l20800 7582                                          l22048 4FF6  
                                        l22064 8A10                                          l22216 4B06  
                                        l22232 82F8                                          l22400 2DDC  
                                        l20810 75B8                                          l22066 8A18  
                                        l22058 89F8                                          l22154 6C2C  
                                        l22234 8304                                          l22068 8A20  
                                        l22076 8A2E                                          l22228 82CC  
                                        l22316 9084                                          l22308 9050  
                                        l22412 2E1C                                          l20822 75E8  
                                        l22078 8A64                                          l22190 4A4E  
                                        l22182 49E2                                          l22166 4950  
                                        l22262 6002                                          l22510 302C  
                                        l22502 2FFC                                          l22430 2EAE  
                                        l22422 2E8E                                          l20816 75CA  
                                        l22096 6B40                                          l22408 2E00  
                                        l20826 75F6                                          l22194 4A84  
                                        l22186 4A18                                          l22178 49AC  
                                        l22514 303C                                          l22506 3014  
                                        l22442 2EDE                                          l22434 2EBE  
                                        l22426 2E9E                                          l20588 A0BA  
                                        l20852 79FE                                          l20924 A914  
                                        l22294 6B1A                                          l22286 6A20  
                                        l22550 3100                                          l22518 304C  
                                        l22470 2F3C                                          l22446 2EEE  
                                        l22438 2ECE                                          l20880 8CD4  
                                        l20936 A8FA                                          l20960 A976  
                                        l22296 6B1E                                          l18010 1B5C  
                                        l22546 30F0                                          l22538 30D4  
                                        l22490 2FB4                                          l22482 2F84  
                                        l22474 2F54                                          l22466 2F2C  
                                        l17124 9798                                          l18020 1C4E  
                                        l20796 756E                                          l20892 8D0C  
                                        l20948 A8E0                                          l17134 9DEE  
                                        l17126 979E                                          l20886 8CF0  
                                        l20878 8CC6                                          l21846 A086  
                                        l22494 2FCC                                          l22486 2F9C  
                                        l22478 2F6C                                          l21960 8402  
                                        l17138 9E0A                                          l18042 1E06  
                                        l19010 24C4                                          l21866 8D20  
                                        l21946 8944                                          l22498 2FE4  
                                        l18052 1E5E                                          l18028 1CE6  
                                        l21956 83FA                                          l17502 6646  
                                        l19030 2546                                          l21974 8434  
                                        l21966 8418                                          l17440 6064  
                                        l18048 1E54                                          l19008 24BC  
                                        l19200 9542                                          l18312 8838  
                                        l17514 9C1C                                          l17434 603C  
                                        l18058 1E7A                                          l19034 255A  
                                        l18330 8894                                          l18314 8842  
                                        l21986 8462                                          l18412 8B66  
                                        l17380 8142                                          l19028 253C  
                                        l19212 7A5C                                          l18316 884C  
                                        l17390 81A4                                          l17382 8154  
                                        l17446 608A                                          l17462 6110  
                                        l18326 8880                                          l18360 9F04  
                                        l18416 8B74                                          l18408 8B5C  
                                        l16920 9682                                          l16904 9634  
                                        l17376 8130                                          l17448 609E  
                                        l19224 7A96                                          l19240 7AE4  
                                        l18328 888A                                          l18354 9EE6  
                                        l17386 8170                                          l17650 9470  
                                        l17466 6136                                          l17458 60FA  
                                        l17482 6594                                          l17714 3CEC  
                                        l17730 5634                                          l17802 40F6  
                                        l17810 418E                                          l19226 7AA2  
                                        l19218 7A74                                          l18610 87AC  
                                        l19402 895E                                          l18700 515E  
                                        l17652 947C                                          l17740 569E  
                                        l18372 8F74                                          l19244 7AFA  
                                        l19236 7AD6                                          l19500 2A94  
                                        l18612 87B6                                          l18390 8B1E  
                                        l18710 51FA                                          l16918 967A  
                                        l17494 660A                                          l17486 65AE  
                                        l17478 6570                                          l17718 3D06  
                                        l18374 8FA8                                          l19502 2A9A  
                                        l18622 87EA                                          l18384 8B0E  
                                        l17832 5BE8                                          l17488 65C2  
                                        l17680 3B3A                                          l17744 56BA  
                                        l19432 867C                                          l18640 856A  
                                        l18624 87F4                                          l18608 87A2  
                                        l19408 8966                                          l18714 5270  
                                        l17850 5C58                                          l17842 5C3E  
                                        l17834 5BEC                                          l17498 6620  
                                        l17666 3AF4                                          l17762 575A  
                                        l17754 5724                                          l17826 4206  
                                        l19610 2C1A                                          l19602 2C0C  
                                        l19530 2B44                                          l19514 2AAA  
                                        l19506 2AA2                                          l18626 87FE  
                                        l18396 8B34                                          l18820 8E16  
                                        l17852 5C5E                                          l16972 7EEA  
                                        l17684 3B4A                                          l17748 56D8  
                                        l17780 403E                                          l19436 8692  
                                        l19196 952E                                          l19700 2CA6  
                                        l19524 2B3C                                          l19516 2B2E  
                                        l18644 85AA                                          l18398 8B3C  
                                        l18718 52DA                                          l18830 8E38  
                                        l17854 5C8C                                          l16966 7E56  
                                        l17694 3C86                                          l17758 573E  
                                        l17774 3FFE                                          l19438 869A  
                                        l19630 2C38                                          l19462 2A36  
                                        l18638 8558                                          l18752 989A  
                                        l18840 8E5A                                          l18824 8E22  
                                        l17848 5C50                                          l19720 2CC4  
                                        l19624 2C30                                          l19616 2C22  
                                        l19544 2B5A                                          l19480 2A76  
                                        l19472 2A60                                          l19464 2A3A  
                                        l19384 9A7A                                          l18762 98B6  
                                        l17858 5CCA                                          l17970 1950  
                                        l17962 1948                                          l17954 1940  
                                        l19730 2D68                                          l19714 2CBC  
                                        l19538 2B52                                          l19458 2A1E  
                                        l19466 2A48                                          l19386 9A84  
                                        l18692 507E                                          l18844 8E68  
                                        l18836 8E50                                          l18828 8E30  
                                        l17788 4060                                          l17972 1952  
                                        l17980 19BC                                          l19708 2CB4  
                                        l19652 2C5C                                          l19644 2C4E  
                                        l19572 2B80                                          l19564 2B78  
                                        l19476 2A6C                                          l19388 9A8E  
                                        l17974 1966                                          l17966 194C  
                                        l17958 1944                                          l19638 2C46  
                                        l19582 2BEE                                          l19574 2BE0  
                                        l19558 2B70                                          l19486 2A7E  
                                        l19478 2A70                                          l19734 2D6E  
                                        l18768 98CA                                          l18696 50F4  
                                        l17992 1A46                                          l19728 2CCC  
                                        l19680 2C88                                          l19672 2C7A  
                                        l17994 1A70                                          l17978 1970  
                                        l19850 806A                                          l19666 2C72  
                                        l19658 2C64                                __end_of___aldiv 7B14  
                                        l17996 1A82                                          l19860 80F2  
                                        l19596 2C04                                          l19588 2BF6  
                                        l19694 2C9E                                          l19686 2C90  
                                        l18966 9D48                                          l18984 22D2  
                                        l19856 8096                                          l18978 22B2  
                            __end_of_I2C2_Read AFCC                                __end_of___aodiv 6168  
                                        _ADCAP 003EF5                                          _ADACT 003EFE  
                                        ?_atoi 010B                                          ?_ctoa 0121  
                                        ?_main 0001                                          ?_dtoa 0121  
                                        _ADCLK 003EFF                                __end_of___aomod 6678  
                            __end_of_I2C2_Open 932A                                          _ADPCH 003EF1  
                                        _ADREF 003EFD                                __end_of___awdiv 8B82  
                                        STR_10 FE67                                          STR_11 FFF9  
                                        STR_20 FF2F                                          STR_12 FE81  
                                        STR_13 FFB2                                          STR_21 FF20  
                                        STR_30 FFE8                                          STR_22 FEAB  
                                        STR_14 FE98                                          STR_15 FFC6  
                                        STR_23 FFBA                                          STR_31 FF84  
                                        STR_24 FEBA                                          STR_32 FFE4  
                                        STR_16 FFCB                                          STR_40 FD05  
                                        STR_17 FFC6                                          STR_25 FFC1  
                                        STR_41 FC98                                          STR_33 FC57  
                                __CFG_WDTE$OFF 000000                                          STR_18 FFCB  
                                        STR_26 FFF0                                          STR_42 FFD8  
                                        STR_34 FE47                                          STR_50 FE27  
                                        STR_27 FFF6                                          STR_43 FFA8  
                                        STR_19 FF9C                                          STR_51 FE07  
                                        STR_35 FD92                                          STR_44 FFFC  
                                        STR_28 FFF3                                          STR_52 FF01  
                                        STR_36 FDE3                                __end_of___awmod 8E76  
                                        STR_29 FEED                                          STR_45 FFE0  
                                        STR_53 FF11                                          STR_37 FDBB  
                                        STR_46 FFDC                                          STR_54 FFD4  
                                        STR_38 FCCF                                          STR_55 FFD0  
                                        STR_47 FF5C                                          STR_39 FD67  
                                        STR_48 FF90                                          _ADRPT 003EEC  
                                        STR_49 FF6A                                _TMR1_StartTimer AFF0  
                                        ?_stoa 010F                                     SetSV1@last 00ED  
                              __end_of___lldiv 8AFA                                 i2_AdcDataReady A41E  
                        ?_ClearEPAboveSetAlarm 0001                                          u20100 75AE  
                                        u20110 75DC                                          _T1CLK 003FB5  
                              ___awdiv@divisor 010C                                          u20070 754E  
                                        u20150 79BC                                          u20230 8CE4  
                                        ?_xtoa 0121                                          u20160 79D2  
                                        u20240 8D02                                          u22000 6C20  
                                        _T1CON 003FB2                                __end_of___llmod 90AC  
                                        u20090 7594                                          u20170 7A1A  
                                        u20250 A910                                          _U1P1H 003DED  
                                        u20180 7A1C                                          u20260 A8F6  
                                        u22020 4948                                          _U1P2H 003DEF  
                                        u20270 A8DC                                          _U1P1L 003DEC  
                                        _U1P3H 003DF1                                          u20280 A972  
                                        _T2CON 003FAC                                          _U1P2L 003DEE  
                                        u20450 4504                                          _U1P3L 003DF0  
                                        u20460 4554                                          u22140 4B12  
                                        u22150 4B14                                          u23007 9AA6  
                                        u22160 8292                                          u22240 9060  
                                        u23017 9AB0                                          u22170 8294  
                                        u21530 AB4C                                          u23107 8864  
                                        u23027 89BE                                          u23117 886E  
                                        u23037 87C4                                          u22190 8314  
                                        u23127 88A2                                          u23047 87CE  
                                        _T5CLK 003F9D                                          u21800 4EC2  
                                        _T4CON 003FA0                                          u23137 88AC  
                                        u23057 87D8                                          u17010 3B34  
                                        u21810 4EC4                                          u23147 88B6  
                                        u23067 880C                                          u17020 3C96  
                                        u21660 8D64                                          _T2HLT 003FAD  
                                        u17101 560E                                          u23157 88D0  
                                        u23077 8816                                          u23167 88F6  
                                        u23087 8820                                          u17040 3CB8  
                                        u21920 6B6A                                          _T5CON 003F9A  
                                        u17041 3CB6                                          u23177 8916  
                                        u23097 885A                                          u17050 3CC6  
                                        u17210 3FD0                                          u21850 4F48  
                                        u21930 6B74                                          u18100 8B40  
                                        u17060 3CCA                                          u17300 415A  
                                        u21860 4F6A                                          u15630 7E4E  
                                        u17150 56CE                                          u17310 41A0  
                                        u17230 405C                                          u21838 4F12  
                                        u21839 4F26                                          u17400 5D00  
                                        u17080 3CD6                                          u17160 5702  
                                        u16600 985E                                          u17240 4092  
                                        u21880 4FC8                                          u21960 6BD6  
                                        _T6CON 003F94                                          u17305 4148  
                                        u18050 9F14                                          u17410 5D02  
                                        u15650 7E96                                          u17330 41C2  
                                        u17250 4094                                          u21970 6BE2  
                                        u17331 41C0                                          u16620 A022  
                                        u16540 9DB4                                          u17340 41D0  
                                        _T4HLT 003FA1                                          u16630 A024  
                                        u17190 576E                                          u16550 9FB6  
                                        u17350 41D4                                          u17270 40CC  
                                        u21990 6C14                                 __CFG_DEBUG$OFF 000000  
                                        u17167 56F4                                          u16560 9FB8  
                                        u17280 40CE                                          u17600 1AD2  
                                        u22937 7442                                          u16570 9FEC  
                                        u19210 899E                                          u22947 745C  
                             __end_ofi2_LCDOff ADEE                                          u17380 5C3A  
                                        u16740 65C6                                          u16580 9FEE  
                                        u19060 7AA6                                          u18340 85A0  
                                        u19220 89E2                                          _LCDOn ADA8  
                                        u16661 606A                                          u22957 7474  
                                        u15950 97C8                                          u16590 985C  
                                        u17630 1BA4                                          u22967 748C  
                                        u18520 8E3C                                          u16680 60A2  
                                        u22977 74B6                                __end_of___lwdiv 96DE  
                   __size_ofi2_TMR5_StartTimer 0004                                          u18347 8592  
                                        u22987 7506                                          u16780 9C18  
                                        u15980 9F80                                          u17660 1D2E  
                                        u17580 1AC4                                          _T6HLT 003F95  
                                        u15957 97BA                                          u22997 9A9C  
                                        u16950 3AC6                                          u15990 9F82  
                                        u17590 1AC6                                          u19350 8088  
                                        u19270 2A30                                          u16960 3AC8  
                                        u19370 8102                                          u19285 6D7A  
                                        u16990 3B06                                          u19295 77F6  
                                        _T2TMR 003FAA                                          _U1UIR 003DF8  
                                        _T2RST 003FAF                                          _U1RXB 003DE8  
                  __size_of_SetEPAboveSetAlarm 0020                                          u19775 6C74  
                                        u19785 771C                                          _U1TXB 003DEA  
                                        _T4TMR 003F9E                                          _PCON0 003FF0  
                                        _T4RST 003FA3                                          i2l270 73AC  
                                        i2l280 73EE                                          i2l272 73CA  
                                        i2l264 7370                                          i2l282 73FA  
                                        i2l274 73D2                                          i2l266 7388  
                   __size_ofi2_ADCC_Initialize 006E                                          i2l284 7406  
                                        i2l276 73DA                                          i2l268 73A0  
                                        _T6TMR 003F92                                          i2l285 741C  
                                        i2l286 7412                                          i2l278 73E2  
                                        _T6RST 003F97                                          i2l655 974E  
                                        i2l667 9BDA                                          i2l860 A642  
                                        i2l748 A61E                                ___awdiv@counter 010E  
                                        _OSCEN 0039DD                             __size_ofi2_AdcInit 0070  
                                 vfpfcnvrt@fmt 014A                                          _TMR0H 003FB7  
                                 vfpfcnvrt@llu 015A                                          _TMR1H 003FB1  
                                        _TMR0L 003FB6                                          _TMR1L 003FB0  
                                        _TMR5H 003F99                                          _TMR5L 003F98  
                          ??_SetVBelowMinAlarm 0001                                          _TRISA 003FC2  
                                        _TRISB 003FC3                                          _TRISC 003FC4  
                                        _TRISD 003FC5                                          _TRISE 003FC6  
                             ??_I2C2_SlaveOpen 0104                                          i2_abs 9E60  
                                        _Get5V 77B4                                          i2_pad 7EF6  
            __size_of_TMR0_SetInterruptHandler 000E                                          _GetEp 5190  
                                        _GetIp 5014                        ?i2_ClearIPBelowSetAlarm 0001  
                                        _GetTe AA68                                          _GetTi AA54  
                     _GetControllerBuzzerCheck AA8E                                _TMR4_Initialize A28E  
                              _PWM6_Initialize A932                                          _See5V 76DA  
                          ___lmul@multiplicand 0108                      ?_TMR0_SetInterruptHandler 0104  
                            ?_BatteryFailAlarm 0001                        ??_ADCC_IsConversionDone 0001  
                                  ?i2_AnyAlarm 0001              __size_of_TMR6_SetInterruptHandler 000E  
                    ?_TMR6_SetInterruptHandler 0104                               __end_of_TMR0_ISR A6B6  
                             __end_of_TMR1_ISR A230                 __size_of_ClearMonitorFailAlarm 0008  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                             __end_of_TMR4_ISR A694                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR A1FE                               __end_ofi2_GetBpm AD1E  
                             __end_of_TMR6_ISR A672                   ??_ClearHighPressureAlarmHigh 0104  
                __end_of_ClearMonitorFailAlarm AE7E                               __end_ofi2_GetTde AD9C  
                             __end_ofi2_GetTdi AD02                               __end_ofi2_See12V 6F44  
         __size_of_I2C2_SlaveSetReadIntHandler 000E                                          _pHigh 01D7  
                                   i2isalpha@c 0001                                _gasFailureAlarm 02AF  
                             __end_ofi2_GetSpr AD10                    TMR4_Period8BitSet@periodVal 0104  
                                   i2isdigit@c 0001                             __size_ofi2_GetPmax 0026  
                              ??i2_BuzzerClear 0001                                          _flags 01CB  
                                        _getch AF36                             ??_BatteryFailAlarm 012C  
                                  ?_AdcGetData 010A                         ?_SetNoPowerSupplyAlarm 0001  
                                        _count 0244                               __end_of_AdcReady AFD8  
                           __size_of_TMR4_Stop 0004                          ?_ADCC_StartConversion 0001  
                                        _fputc 7E3E                                __end_of_isalpha 9FF4  
                                        _fputs 9DE4                                __end_of_isdigit A02A  
                                ??_BuzzerCheck 0183                                    ?_TMR4_Start 0001  
                                  ?_AdcHandler 0001                               __end_ofi2_SetSV1 A374  
                               _vAboveMaxAlarm 02A5                                  ??_BuzzerClear 0104  
                                        _isqrt 8478                           _ClearIPAboveSetAlarm A990  
                                        _ttExt 0262                             __CFG_MCLRE$EXTMCLR 000000  
                                        atoi@n 0118                                          pad@fp 0116  
                                        atoi@s 010B                                          _width 01C7  
                                        ctoa@c 0123                                          _state 01E5  
                                        _putch AD6C                                    ?_TMR6_Start 0001  
                                        ctoa@w 0124                         __end_of_MonitorDisable AE56  
                                        dtoa@d 0123                            __size_of_LCDMessage 00A2  
                                        dtoa@i 0143                                          dtoa@n 013B  
                                        dtoa@p 0135                                          dtoa@s 0139  
                                        dtoa@w 0137                                 i2HigherAlarm@i 0010  
                              __end_of_islower 9F88                                __end_of_isspace 9C26  
                         __size_of_CMP1_Enable 0008                        __end_of_TMR1_Initialize 9830  
                              __end_of_isupper 9FBE                                          pclath 003FFA  
                                        tablat 003FF5                                    ?_AdcSeeData 010A  
                           MonitorFailAlarm@v5 0184                          ??_SetControlFailAlarm 0001  
                             __end_ofi2___lmul 95DA                               __end_ofi2___wmul A3A2  
                                        plusw1 003FE3                                          plusw2 003FDB  
          _I2C2_SlaveDefBusColInterruptHandler 000000                              i2GetPressure_pa@p 0029  
                                        stoa@i 011B                                          stoa@l 0123  
                                        stoa@p 0121                                          stoa@s 0111  
                                        stoa@w 011D                         ??_ClearTdiTooLongAlarm 0001  
                              __end_of_putchar A8CA                                     i2islower@c 0001  
                              ??i2_SetAlarmSV1 005B                                          status 003FD8  
          __end_of_UART1_SetRxInterruptHandler AB7A                    _UART1_SetRxInterruptHandler AB6C  
                                   i2isspace@c 0001                                __end_of_sprintf 9632  
                                        xtoa@c 0146                                          xtoa@d 0123  
                                        xtoa@i 0144                                          xtoa@n 013C  
                                        xtoa@p 0138                                          xtoa@w 013A  
                                        xtoa@x 012B                                  ??_SetAlarmLED 0104  
                   __size_of_SetVAboveMaxAlarm 0008                               __end_of_AlarmSet A75A  
                              __end_of_toupper 9882                                  ??_SetAlarmSV1 0183  
                                  ?i2_BuzzerOn 0001                       __end_ofi2_MonitorDisable AEC6  
                               i2AdcGetData@id 0007       __end_of_UART1_DefaultFramingErrorHandler B052  
    __size_of_UART1_DefaultFramingErrorHandler 0002             ??_UART1_DefaultFramingErrorHandler 0001  
            ?_UART1_DefaultFramingErrorHandler 0001               _UART1_DefaultFramingErrorHandler B050  
                              _TMR1_WriteTimer A62C                             __size_ofi2___aldiv 00D4  
                     ?_I2C2_SlaveClearStopFlag 0001                             __size_ofi2___aodiv 0158  
                             __end_of_AnyAlarm 9F18                             __size_ofi2___aomod 0134  
                           __size_ofi2___awdiv 0088                             __size_ofi2___awmod 0074  
                                   i2isupper@c 0001                      __end_of_SetVBelowMinAlarm AF96  
                             __end_ofi2_printf A59C                 ??_TMR6_DefaultInterruptHandler 0001  
                        __size_of_AlarmHandler 006A                          ?_ClearGasFailureAlarm 0001  
                            ?i2_AlarmUpdateLCD 0001                                _TMR5_Initialize 99CA  
                     __size_of_DisableAlarmSV1 0008                                ?i2_ValueDisplay 0001  
                          i2_ValueDisplay$4007 00AC                            i2_ValueDisplay$4008 00AE  
                               _MuteAlarm$4543 0186                               __end_ofi2_strlen 9A6A  
                                 _toupper$5792 0110                            i2_ValueDisplay$7139 00A5  
                  __size_of_SetGasFailureAlarm 0008                          __size_of_AlarmDisplay 009A  
                            ??_I2C2_Initialize 0104                                __initialization 7BE8  
                     __size_of_EPBelowSetAlarm 001A                                   __end_of_atoi 5D46  
                                 __end_of_ctoa 94BC                                   __end_of_main 311C  
                                 __end_of_dtoa 3D3C                             ??i2_AlarmUpdateLCD 005C  
                                 __end_of_stoa 577C                                     i2printf@ap 0059  
                                 __end_of_xtoa 423C                                 ??_LCDWriteChar 0104  
                          __end_of_InitDisplay AD54                                     _ButtonInit A3A2  
                           __size_of_AlarmInit 007C                                 __CFG_SAFEN$OFF 000000  
                  __end_of_ClearVBelowMinAlarm AFBA                    ??_UART1_DefaultErrorHandler 0001  
                                   _ButtonTask 6F44                         __size_ofi2_CMP1_Enable 0008  
                      __end_of_TdeTooLongAlarm B008                        __size_of_GetPressure_pa 0170  
                        _ControllerBuzzerCheck AD9C                             __size_ofi2_isalpha 0034  
                      __end_of_TMR2_Initialize A858                             __size_ofi2_isdigit 0034  
                       __size_of_BuzzerHandler 0006                                 _GetMaxPressure 9D68  
                  ?_INTERRUPT_InterruptManager 0001                         __end_ofi2_AdcDataReady A446  
                                   i2stoa@nuls 0011                             __size_of_ClearVars 0246  
               __size_of_I2C2_SlaveIsRxBufFull 000E                                    i2_vfpfcnvrt 1302  
             __size_of_ClearBaterryLowAlarmMed 0006                               __end_of_BuzzerOn A876  
                     ?i2_ClearMonitorFailAlarm 0001                               ??_SetMaxPressure 0003  
                __end_of_I2C2_SlaveIsRxBufFull AD2C                                   ?_UART1_Write 0001  
                           __size_ofi2_islower 0034                             __size_ofi2_isspace 0044  
                                i2vfpfcnvrt@ap 0049                              ??_EPAboveSetAlarm 0104  
                                i2vfpfcnvrt@cp 0070                                  i2vfpfcnvrt@fp 0045  
                                i2vfpfcnvrt@ll 0060                                    i2_xtoa$5202 0031  
                                  i2_xtoa$5203 0033                __end_of_ClearNoPowerSupplyAlarm AF60  
                           __size_ofi2_isupper 0034                               ??_VAboveMaxAlarm 0104  
                                       ??_atoi 010D                                         ??_ctoa 0124  
                                       ??_main 01C6                                         ??_dtoa 012B  
                               __CFG_PR1WAY$ON 000000                       _TMR5_SetInterruptHandler AC3E  
                                 ?i2_TMR4_Stop 0001                                         ??_stoa 0113  
              __size_of_I2C2_SlaveReleaseClock 0006                  i2ADCC_StartConversion@channel 0001  
                                       ??_xtoa 012C                 __end_ofi2_ClearIPBelowSetAlarm A9E8  
                                __activetblptr 000003                                         ?_LCDOn 0001  
                                   _BuzzerInit A230                                     i2sprintf@f 008D  
                                   i2sprintf@s 0077                                     _BuzzerTask 29F4  
                   __end_of_GetPressure_mbar02 A060                                     _BuzzerTest 89E4  
         __size_of_UART1_SetTxInterruptHandler 000E                                    _GetTargetEp A492  
                                    ??_LCDInit 013C                                    _GetTargetIp A46C  
                           __size_ofi2_sprintf 0052                                      ??_LCDTest 0114  
                         _ClearEPBelowSetAlarm AA40                                         ?i2_abs 0013  
                                       ?_Get5V 011E                __end_of_I2C2_SlaveSetIsrHandler AC14  
                           __size_ofi2_toupper 0052                                         ?i2_pad 0013  
                                       ?_GetEp 0112                        ??_HighPressureAlarmHigh 0104  
                                       ?_GetIp 0112                                         ?_GetTe 0104  
                                       ?_GetTi 0104                                  SetTarget@pmax 001B  
           __size_of_VeryHighPressureAlarmHigh 0004                              __end_of_LCDWrite4 9AB8  
                           __size_of_GetVolume 000E                                         ?_See5V 011E  
                                SetTarget@vmax 0023                                  SetTarget@vmin 0025  
                              _TMR6_Initialize A260                               _UART1_Initialize 7D7E  
                                    ??i2_LCDOn 0001                                 _EnableAlarmSV1 AE56  
                                   i2toupper@c 0007                               ?_SeePressureV_pa 011E  
                             ??_AlarmUpdateLCD 01C0                               ?i2_GetAlarmState 0005  
                                    ??i2_GetEp 0011                                      ??i2_GetIp 0011  
                                    ??i2_GetTe 0003                                      ??i2_GetTi 0003  
                      __end_of_TMR0_StartTimer AFE8                                         _ADACCU 003EEA  
                    ??i2_ClearBatteryFailAlarm 0001                   __size_ofi2_SetCalibrateState 0126  
                                       _ADACQH 003EF4                                         _ADACQL 003EF3  
                                       ?_getch 0001                                      ??i2_See5V 001D  
                                       _ADCON0 003EF8                                         _ADCON1 003EF9  
                                       _ADCON2 003EFA                                         _ADCON3 003EFB  
                        ?_ClearIPAboveSetAlarm 0001                                      ??_AdcInit 010A  
                                       _CM1NCH 003EBE                   ?_I2C2_SlaveSetStopIntHandler 0104  
                                       _CM1PCH 003EBF                              _BuzzerTestHandler A2EA  
                    __size_ofi2_TMR0_StopTimer 0004                                         ?_fputc 0106  
                  __size_of_SetIPAboveSetAlarm 0020                               ___llmod@dividend 0104  
                                       _ADLTHH 003EDF                                         _ADLTHL 003EDE  
                                       ?_fputs 010F                                         _ADRESH 003EF0  
                                       _ADRESL 003EEF                                         _ADPREH 003EF7  
                                       _ADPREL 003EF6                                         _ADSTAT 003EFC  
                                       ?_isqrt 0001                                         _ADUTHH 003EE1  
                             ___awdiv@dividend 010A                                         _ADUTHL 003EE0  
                               i2___aldiv@sign 0016                                ??i2_MonitorDump 005B  
                                       _ANSELA 003A40                                         ?_putch 0001  
                                       _ANSELB 003A50                                         _ANSELC 003A60  
                                       _ANSELD 003A70                                         _ANSELE 003A80  
                                       _T0CON0 003FB8                                         _T0CON1 003FB9  
                                       _RB1I2C 003A5A                                    ?_AlarmClear 0001  
                                       _T1GATE 003FB4                                         _RB2I2C 003A5B  
                                       _T1GCON 003FB3                                         _RD0I2C 003A7A  
                              ?_MonitorDisable 0001                                         _U1CON0 003DF2  
                                       _U1CON1 003DF3                                         _U1CON2 003DF4  
                                       _RC3I2C 003A6A                                         _RD1I2C 003A7B  
                                       _RC4I2C 003A6B                            __size_of_UART1_Read 0048  
                                       _U1BRGH 003DF6                                         _U1FIFO 003DF7  
                      ?_SetCircuitFailureAlarm 0001                                         _U1BRGL 003DF5  
                           __size_of_HistAlarm 010A                                         _T5GATE 003F9C  
                             i2_GetPressure_pa 58F4                                         _T5GCON 003F9B  
                                  SetSV1@value 0183                            i2UART1_Write@txData 0001  
                                       _RC1PPS 003A11                                   _AlarmHandler 9188  
                                       _RB4PPS 003A0C                                         _RD0PPS 003A18  
                                       _RB5PPS 003A0D                                         _LCDOff ADB2  
                      TMR1_WriteTimer@timerVal 0001                              ??_AdcReStartCycle 0007  
                                ??_MonitorDump 0183                                  ??_MonitorInit 010A  
                                       _ODCONA 003A42                                         _ODCONB 003A52  
                                       _ODCONC 003A62                                         _ODCOND 003A72  
                                       _ODCONE 003A82                                         i2l1220 9282  
                                       i2l2114 26E0                                         i2l2140 27BE  
                                       i2l3110 058A                                 __CFG_WDTCCS$SC 000000  
                                       i2l3130 0912                                         i2l3114 065A  
                                       i2l3131 0948                                         i2l3115 0676  
                                       i2l3072 0042                                         i2l3137 0AD4  
                                       i2l3170 0F28                                         i2l2630 4CA8  
                                       i2l3192 1178                                         i2l4313 5EA8  
                                       i2l3177 0FBA                                         i2l3540 3D66  
                                       i2l3519 57F6                                         i2l3472 7F32  
                                       i2l4282 9E90                                         i2l3490 3860  
                                       i2l3538 3D5A                                         i2l3634 8AE0  
                                       i2l4098 96D0                                         i2l3492 386C  
                                       i2l4392 99BC                                         _INLVLA 003A44  
                                       _INLVLB 003A54                                         _INLVLC 003A64  
                                       _INLVLD 003A74                                         _INLVLE 003A84  
                                i2putch@txData 0002                                         _FVRCON 003EC1  
                           ?_BuzzerTestHandler 0001                                      ??i2_fputc 0007  
                                 _AlarmDisplay 8660                                      ??i2_fputs 0010  
                                       _OSCFRQ 0039DF                   __end_ofi2_TMR4_Period8BitSet ADDA  
                                vfpfcnvrt@done 0164                               _MonitorFailAlarm 7968  
                                    ??i2_putch 0002                                      ??_GetPmax 0114  
                             i2___lmul@product 0009                        ??_SetBaterryLowAlarmMed 0104  
                   __end_of_NoPowerSupplyAlarm AFFC                      __size_of_DisplayCalibrate 0034  
                        _UART1_SetErrorHandler AB96                                      ??_DumpI2C 0104  
                               i2___aodiv@sign 0012                                         _Get12V 6D38  
                                   TestAlarm@i 0189                                _prSlowNumStable 0240  
                                       i2abs@a 0013                  __size_of_ClearTdeTooLongAlarm 0008  
                                       i2_atoi 5D46                                         i2_ctoa 94BC  
                                       i2_dtoa 37DC                     ??_ADCC_GetConversionResult 0003  
         __end_of_I2C2_SlaveSetWriteIntHandler ABEA          __size_of_I2C2_SlaveSetWriteIntHandler 000E  
                 _I2C2_SlaveSetWriteIntHandler ABDC                                         _GetBpm ACA0  
                                  _HigherAlarm 805E                _I2C2_SlaveWrColInterruptHandler 028C  
                                       i2pad@i 001A                                         i2pad@p 0017  
                                       _GetTde AD78                                         i2pad@w 001C  
                            ??_GasFailureAlarm 0104                                         _GetTdi AC84  
                                       _See12V 6C32                                         i2_stoa 577C  
                          __end_of_BuzzerCheck 8954                                _disableAlarmSV1 00EF  
                                       _GetSpr AC92                            __end_of_BuzzerClear AAF2  
                                       i2_xtoa 3D3C                                 i2AdcSeeData@id 0007  
                   __end_of_UnDisplayCalibrate AB5E                              __end_ofi2_AdcInit 903E  
                      __size_ofi2_AlarmDisplay 0098                      __size_of_ControlFailAlarm 0010  
                             ?i2_MonitorEnable 0001                                   ?i2_ClearVars 0001  
              __size_of_I2C2_SlaveSetSlaveAddr 000C                             __size_of_BuzzerOff 0010  
                          ??_BuzzerTestHandler 005B                                         _SetSV1 A060  
                           __size_of_BuzzerSet 001A                                 __CFG_XINST$OFF 000000  
              __size_of_I2C2_SlaveSetSlaveMask 0010                 ??_I2C2_SlaveSetWrColIntHandler 0106  
         __end_of_TMR1_DefaultInterruptHandler B05A          __size_of_TMR1_DefaultInterruptHandler 0002  
                 _TMR1_DefaultInterruptHandler B058                              i2_DisableAlarmSV1 AF8A  
                                 _CCPTMRS1bits 003F5F                                   vfprintf@cfmt 016F  
                                  _DisplayTask 83D0           __size_of_ADCC_SetADIInterruptHandler 000E  
              ??i2_ADCC_SetADIInterruptHandler 0003                            __size_ofi2_AnyAlarm 003A  
                               i2___aomod@sign 0012                                         ___lmul 951E  
                      __end_of_TMR1_StartTimer AFF4                                      ??___aldiv 0118  
                       __end_of_GetMaxPressure 9DA6                                      ??___aodiv 0114  
                            __end_ofi2_GetPmax A550                                  i2vfprintf@fmt 0051  
                                    ??___aomod 0114                                         ___wmul A2BC  
                             _SetVolumeControl ADEE                                      ??___awdiv 010E  
                          __end_of_SetAlarmLED AC68                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 0108                            __end_of_SetAlarmSV1 A0C8  
                                       _alarms 0300                                      ??___lldiv 0009  
                            __end_of_TMR4_Stop B02C                             ?i2_DisableAlarmSV1 0001  
                                    ??___llmod 010C                                         _ledCnt 00E6  
                                       _enable 00FA                             __size_of_SetTarget 00CA  
                                    ??___lwdiv 0005                            __size_of_AdcGetData 0066  
                                  ?i2_vfprintf 004F                                   ?i2_GetVolume 0001  
                          __size_of_AdcHandler 0134                            __size_of_TMR4_Start 0004  
                                       _prFast 023E                               ?_TMR0_Initialize 0001  
                      __end_of_PWM6_Initialize A94A                        __end_of_TMR4_Initialize A2BC  
                          _MonitorPressureTask 001E                            __size_of_TMR6_Start 0004  
                                       clear_0 7C5A                                         clear_1 7C6C  
                              ?i2_AdcDataReady 0007                                         clear_2 7C78  
                                       clear_3 7C84                                         clear_4 7C90  
                                       clear_5 7C9C                               ___awdiv@quotient 0110  
                                       _prSlow 00CE                                ___awmod@divisor 0106  
                                    ?_I2C2_Isr 0001                                         _numLow 024A  
                       ??_ClearEPAboveSetAlarm 0104                             __size_of_MuteAlarm 01FA  
                              ___awmod@counter 0108                                   LCDWrite4@chr 0104  
                                       _printf A3CC                                         _numtde 00D0  
                                       pad@buf 0118                                         _numtdi 00D2  
                          _SetBatteryFailAlarm AE8E                       __size_of_IPBelowSetAlarm 001A  
                          __size_of_AdcSeeData 003E                           __size_of_LCDMessage1 0020  
                         __size_of_LCDMessage2 0026                                         ctoa@fp 0121  
                                       main@ch 03F9                             __size_of_TestAlarm 00AE  
                                       dtoa@fp 0121                    __size_of_GetDisableAlarmSV1 0006  
                                    ?_ADCC_ISR 0001                                         _strlen 978A  
                                       _volume 01E3                                 i2___awdiv@sign 000C  
                          _AlarmUpdateLCD$6534 01C2                            _AlarmUpdateLCD$6535 01C4  
         __end_ofi2_ClearHighPressureAlarmHigh AEF6          __size_ofi2_ClearHighPressureAlarmHigh 0008  
                 i2_ClearHighPressureAlarmHigh AEEE                                _TMR5_StartTimer AFF4  
                       __end_of_EnableAlarmSV1 AE5E                                   __pdataBIGRAM 0914  
                  __end_of_SetMonitorFailAlarm AE76                          ?_ClearEPBelowSetAlarm 0001  
                              _ADCC_Initialize 90AC                          __size_of_CMP1_Disable 0008  
                          ??i2_DisableAlarmSV1 0001                   ??i2_ClearBaterryLowAlarmHigh 0001  
         __end_of_TMR4_DefaultInterruptHandler B058          __size_of_TMR4_DefaultInterruptHandler 0002  
                 _TMR4_DefaultInterruptHandler B056                                         fputc@c 0106  
                               _PMD_Initialize A5C0                    __size_of_SetEPBelowSetAlarm 0020  
                                 ?i2_HistAlarm 0001                                  LCDMessage@str 0108  
                            __end_ofi2___aldiv 7BE8            __end_of_I2C2_SlaveSetStopIntHandler ABDC  
                  _I2C2_SlaveSetStopIntHandler ABCE                                         fputs@c 0113  
                                       fputs@i 0114                              __end_ofi2___aodiv 62C0  
                                       fputs@s 010F                                      ??_isalpha 0106  
                                    ??_isdigit 0106                              __end_ofi2___aomod 68E0  
                          __size_ofi2_BuzzerOn 001C                              __end_ofi2___awdiv 8C0A  
                            __end_ofi2___awmod 8EEA                             i2GetPressureV_pa@p 0025  
         I2C2_SlaveSetBusColIntHandler@handler 0104                                         isqrt@x 0001  
                                    ??_islower 0106                                   __mediumconst FC56  
                                    ??_isspace 0106                      __end_of_BuzzerTestHandler A318  
                         _highPressureAlarmLow 02AE               _I2C2_SlaveBusColInterruptHandler 028E  
                                       tblptrh 003FF7                                      ??_isupper 0106  
                                       tblptrl 003FF6                                         tblptru 003FF8  
                            ??_IPAboveSetAlarm 0104                         ??_ADCC_StartConversion 0104  
                           i2GetPressure_pa@mv 0025                                         stoa@cp 011F  
                                       stoa@fp 010F                       __end_ofi2_EnableAlarmSV1 AECE  
                         i2_GetDisableAlarmSV1 AF9C                                      ?_CMP1_ISR 0001  
                           i2___aomod@dividend 0001                        ??_ClearBatteryFailAlarm 0104  
                             __end_of_vfprintf 8FCE                                 i2___awmod@sign 0006  
               __end_of_SetCircuitFailureAlarm AF9C                                      ??_putchar 0111  
   i2TMR4_SetInterruptHandler@InterruptHandler 0001  i2ADCC_SetADIInterruptHandler@InterruptHandler 0001  
     TMR6_SetInterruptHandler@InterruptHandler 0104       TMR1_SetInterruptHandler@InterruptHandler 0104  
     TMR0_SetInterruptHandler@InterruptHandler 0104       TMR5_SetInterruptHandler@InterruptHandler 0104  
  UART1_SetTxInterruptHandler@InterruptHandler 0104    UART1_SetRxInterruptHandler@InterruptHandler 0104  
     TMR4_SetInterruptHandler@InterruptHandler 0104    ADCC_SetADIInterruptHandler@InterruptHandler 0104  
         __end_of_UART1_SetOverrunErrorHandler AB88          __size_of_UART1_SetOverrunErrorHandler 000E  
                 _UART1_SetOverrunErrorHandler AB7A                      _UART1_DefaultErrorHandler AF78  
                                    ??_sprintf 0183                              ?_BuzzerCMPHandler 0001  
                                i2_CMP1_Enable AED6                        __end_of_TMR1_WriteTimer A650  
                                       xtoa@fp 0121                                      ??_toupper 010C  
                         _ClearIPBelowSetAlarm A97A                 I2C2_SlaveSetIsrHandler@handler 0104  
                            __end_of_AlarmInit 8D8E                __end_of_I2C2_SlaveClearStopFlag B048  
                __size_of_INTERRUPT_Initialize 0004                                  _BuzzerHandler AF7E  
                                 ?i2_BuzzerOff 0001                   __size_of_UART1_RxDataHandler 0024  
                               _vBelowMinAlarm 02A6                           ?_MonitorPressureTask 0001  
                ??_I2C2_SlaveSetStopIntHandler 0106                               ?_TMR1_Initialize 0001  
                    MonitorPressureTask@i_4900 00B9                      MonitorPressureTask@i_4883 00BF  
                    MonitorPressureTask@i_4897 00B7                        __end_of_TMR5_Initialize 9A1A  
                            __end_ofi2_isalpha A198                              __end_ofi2_isdigit A1CC  
                           ??_BuzzerCMPHandler 005B                           __size_of_LCDWriteCmd 0096  
                            _SYSTEM_Initialize 9C6A                                     _adcVOffset 01F8  
                            __end_of_ClearVars 46DC                           ?_SetBatteryFailAlarm 0001  
                                   __accesstop 0060                        __end_of__initialization 7CAE  
                            __end_ofi2_islower A130                  __size_of_I2C2_SlaveRdCallBack 0020  
                         __end_of_LCDMessage12 9D68                              __end_ofi2_isspace 9C6A  
                       _I2C2_SlaveReleaseClock AFC0                     ??_ClearCircuitFailureAlarm 0104  
                            __end_ofi2_isupper A164            I2C2_SlaveSetWrColIntHandler@handler 0104  
                           _CMP1_SetIntHandler AC4C                                _CMP1_Initialize A6FA  
                                ??_UpdateState 00BD                             ?_SYSTEM_Initialize 0001  
                              _TMR6_StartTimer AF3C                      __size_ofi2_TMR5_StopTimer 0004  
                                ___rparam_used 000001                         ??_ClearGasFailureAlarm 0104  
                    __end_ofi2_DisableAlarmSV1 AF90                                    _InitDisplay AD48  
                                __end_of_LCDOn ADB2                                _TMR5_WriteTimer A608  
                      __size_of_SeePressure_pa 015A                     __size_of_SetVBelowMinAlarm 0006  
                            __end_ofi2_sprintf 9926                      MonitorPressureTask@measPe 029D  
                    MonitorPressureTask@measPi 029E                                      ?i2_LCDOff 0001  
                  __end_of_I2C2_SlaveClearBuff B04C                              __end_ofi2_toupper 99CA  
                  BatteryFailAlarm@timeBelow10 027C                 __size_ofi2_SetMonitorFailAlarm 0006  
                                __end_ofi2_abs 9E9E                            __end_of_MonitorDump 347C  
                          __end_of_MonitorInit 8F5C                                  __end_of_Get5V 788E  
                     ??_ControllerTimerHandler 005B                                  __end_ofi2_pad 7FAC  
                            __end_of_GetVolume AC84                  __end_ofi2_SetMonitorFailAlarm AF8A  
                                 ?i2_MuteAlarm 0001                                  __end_of_GetEp 530C  
                                __end_of_GetIp 5190                                  __end_of_GetTe AA7C  
                                __end_of_GetTi AA68                    BatteryFailAlarm@timeBattery 027E  
                                __end_of_See5V 77B4                                 __pcstackCOMRAM 0001  
                             ??_ControllerInit 0106                __end_ofi2_ClearMonitorFailAlarm AEEE  
                          ?_CMP1_SetIntHandler 0104                                   ??_LCDMessage 010A  
          __size_ofi2_ClearBaterryLowAlarmHigh 0006                                   __pidataBANK0 AFD8  
                                 __pidataBANK2 A876                            ??_SYSTEM_Initialize 0108  
                  __end_of_I2C2_SlaveEnableIrq A9D2                                ?_GetMaxPressure 0112  
                       ?_ControllerBuzzerCheck 0001                                      ?_TMR0_ISR 0001  
                                 _CMP1_Disable AE86                    __end_of_I2C2_SlaveGetRxData AFD2  
                                    ?_TMR1_ISR 0001                            _baterryLowAlarmHigh 02A9  
                ?_TMR1_DefaultInterruptHandler 0001                                    ?_ButtonInit 0001  
                                    ?_TMR4_ISR 0001                                      ?_TMR5_ISR 0001  
                                    ?i2_GetBpm 0001                                  __end_of_getch AF3C  
                                    ?_TMR6_ISR 0001                                    ?_ButtonTask 0001  
                                    ?i2_GetTde 0001                                      ?i2_GetTdi 0001  
                                    ?i2_See12V 001B                                      ?i2_GetSpr 0001  
                           ReceiveHandler@data 0004                                  __end_of_fputc 7EF6  
                                __end_of_fputs 9E22                               ?_TdeTooLongAlarm 0001  
                                __end_of_isqrt 851E                            _AlarmCheckTask$4558 02FB  
                          _AlarmCheckTask$6540 02F9                            _AlarmCheckTask$6536 02F7  
                                    ?_AdcReady 0001                              __end_of_HistAlarm 6C32  
                                __end_of_putch AD78                                      ?i2_SetSV1 0001  
                                  i2printf@fmt 0077                               ?_TMR2_Initialize 0001  
                      __end_of_TMR6_Initialize A28E                              ??_DisableAlarmSV1 0104  
                          __size_of_AlarmClear 0020                                     ??_I2C2_Isr 0060  
                   ?_ClearHighPressureAlarmLow 0001                         __end_of_PMD_Initialize A5E4  
                     __size_of_GetPressureV_pa 0100                        __size_ofi2_CMP1_Disable 0008  
                            ??_EPBelowSetAlarm 0104                                     ??_ADCC_ISR 005B  
                                    ?i2___lmul 0001                                      ?i2___wmul 0001  
                                  ?_BuzzerInit 0001                                        ??_LCDOn 0104  
                                  ?_BuzzerTask 0001                                    SetTarget@br 0021  
                                  SetTarget@ep 001F                             SetVolumeControl@vc 0001  
                                  SetTarget@ip 001D                                    ?_BuzzerTest 0001  
                                ??_StopHandler 005E                                ?_EnableAlarmSV1 0001  
                             ??_VBelowMinAlarm 0104                          __end_ofi2_GetTargetEp A52A  
                        __end_ofi2_GetTargetIp A504                         _I2C2_SlaveSetSlaveAddr AD54  
                                      ??i2_abs 0015                               _alarmMaxPressure 024E  
                                _volumeControl 02A1                                        ??_Get5V 0120  
                                      ??i2_pad 0019                                      ?_AlarmSet 0001  
                                      ??_GetEp 0114                         _I2C2_SlaveSetSlaveMask AAC2  
                                      ??_GetIp 0114                                        ??_GetTe 0106  
                                      ??_GetTi 0106                                _TdiTooLongAlarm B008  
                                      ??_See5V 0120             __end_of_ClearHighPressureAlarmHigh AE2E  
                ?i2_ClearHighPressureAlarmHigh 0001                     _ClearHighPressureAlarmHigh AE26  
                    _UART1_FramingErrorHandler 02E9                                      ?_AnyAlarm 0001  
            __size_of_ClearBaterryLowAlarmHigh 0006                  ?_TMR4_DefaultInterruptHandler 0001  
                            __end_of_BuzzerOff AB02                              __end_of_BuzzerSet A932  
                       ??_ClearIPAboveSetAlarm 0104                      ?_ClearBaterryLowAlarmHigh 0001  
                        ?i2_GetDisableAlarmSV1 0001                                 i2vfpfcnvrt@fmt 0047  
                                    ?i2_printf 0077                             _BaterryLowAlarmMed B010  
                               i2vfpfcnvrt@llu 0068                    ADCC_StartConversion@channel 0104  
                         ??_CMP1_SetIntHandler 0106                                     ??_CMP1_ISR 005B  
                               ?i2_CMP1_Enable 0001                                      ?i2_strlen 0001  
                     ??_I2C2_SlaveStopCallBack 0060                                        ??_getch 0105  
                             ?_TMR0_StartTimer 0001                                  ?i2_AdcGetData 0007  
                                      ??_fputc 010A                      __end_of_SYSTEM_Initialize 9CAC  
                                      ??_fputs 0113                          ?_ClearIPBelowSetAlarm 0001  
                                      ??_isqrt 0003                                 ?_BuzzerHandler 0001  
                                ?i2_TMR4_Start 0001                                __CFG_IVT1WAY$ON 000000  
                  __size_of_SetIPBelowSetAlarm 0020       __end_ofi2_ClearVeryHighPressureAlarmHigh AEE6  
    __size_ofi2_ClearVeryHighPressureAlarmHigh 0008         __end_of_ClearVeryHighPressureAlarmHigh AE26  
      __size_of_ClearVeryHighPressureAlarmHigh 0008             ??i2_ClearVeryHighPressureAlarmHigh 0001  
            ?i2_ClearVeryHighPressureAlarmHigh 0001               i2_ClearVeryHighPressureAlarmHigh AEDE  
               _ClearVeryHighPressureAlarmHigh AE1E                                        ??_putch 0105  
                        _I2C2_InterruptHandler 00EA                                    _BuzzerCheck 88BE  
                        ??_MonitorPressureTask 005B                 __size_of_ClearControlFailAlarm 0008  
                                  _BuzzerClear AAE2                           __end_of_LCDWriteChar 88BE  
                            __end_of_SetTarget 7D7E                  __end_of_ClearControlFailAlarm AE3E  
                                   __pbssBANK0 00C8                                     __pbssBANK1 01C7  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                   __pbssBANK4 0400                                        ?_LCDOff 0001  
                 ControllerTimerHandler@errors 022E                  ?_UART1_SetOverrunErrorHandler 0104  
                 ?_I2C2_SlaveSetAddrIntHandler 0104                             __end_of_LCDMessage 85C0  
                                  i2sprintf@ap 008B                          ??_SetBatteryFailAlarm 0104  
                       ?_UART1_SetErrorHandler 0104                                     _alarmCheck 02A3  
                                ?i2_AdcSeeData 0007                            __size_ofi2_vfprintf 006A  
                   __end_of_SetTdiTooLongAlarm AEA6                            ?_BaterryLowAlarmMed 0001  
                              __CFG_MVECEN$OFF 000000                              __end_of_MuteAlarm 4B1A  
                                   _alarmState 00F6                                        ?_Get12V 011E  
                            __end_of_TestAlarm 8322                                      ?_BuzzerOn 0001  
                      __size_of_ReceiveHandler 004A                                        ?i2_atoi 0008  
                                      ?i2_ctoa 001E                                        ?i2_dtoa 001E  
                        _TMR4_InterruptHandler 02ED                                    _SetAlarmLED AC5A  
                                      ?_GetBpm 0104                             i2SetAlarmSV1@value 005B  
                                  _SetAlarmSV1 A094               __size_of_ClearNoPowerSupplyAlarm 0006  
                                      ?_GetTde 0104                                        ?_GetTdi 0104  
                                      ?_See12V 011E                                        ?i2_stoa 000C  
                        __end_ofi2_HigherAlarm 8274                                        ?_GetSpr 0104  
                       __size_of_ClearAllAlarm 004E                                        ?i2_xtoa 001E  
                                      IVTBASEH 003FD6                                     _batterySV1 00FE  
                                      IVTBASEL 003FD5                                        IVTBASEU 003FD7  
                                ?_ValueDisplay 0001                                     ??i2_LCDOff 0001  
                           i2AlarmDisplay@type 00BD                          __end_of_DisplayEnable AB32  
                       __size_of_ClearAlarmLED 000A                                        ?_SetSV1 0001  
                           GetMaxPressure@temp 0114                               ??_FVR_Initialize 0104  
                             SetMaxPressure@pr 0001               __size_of_I2C2_SlaveSetIsrHandler 000E  
                  __end_of_CircuitFailureAlarm B018               __end_of_TMR0_SetInterruptHandler ABB2  
                      __size_of_TMR0_StopTimer 0004                                        ?___lmul 0104  
                           _SetTdeTooLongAlarm AEA6                    __size_of_TMR4_Period8BitSet 000C  
                                 ??_UART1_Read 0104                                        _I2C2CNT 003D56  
                                      ?___wmul 0104                                        _I2C2PIR 003D63  
                             ?_TMR1_StartTimer 0001                                     ??_TMR0_ISR 0060  
                                      _I2C2RXB 003D54                                        _I2C2TXB 003D55  
                                   ??_TMR1_ISR 0060                        __end_of_TMR5_StartTimer AFF8  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler ABCE  
                          __end_of_UpdateState 4496                                 _GetPressure_pa 5A66  
           __size_ofi2_ClearBaterryLowAlarmMed 0006                                 i2_toupper$5792 000D  
                                   ??_TMR4_ISR 005D                        __end_of_ADCC_Initialize 911A  
                                   ??_TMR5_ISR 005D                                     ??i2_GetBpm 0003  
                                   ??_TMR6_ISR 005B                                     ??i2_GetTde 0003  
                                   ??i2_GetTdi 0003                                     ??i2_See12V 001D  
                                      _I2C2_on 02B4                                     ??i2_GetSpr 0003  
                   ??_GetControllerBuzzerCheck 0001                     ?i2_ClearBaterryLowAlarmMed 0001  
                      _ClearBaterryLowAlarmMed AF66                                        _CM1CON0 003EBC  
                                      _CM1CON1 003EBD                   ?_I2C2_SlaveSetReadIntHandler 0104  
                                   ??_AdcReady 0001                                     ??i2_SetSV1 005B  
                               ___lmul@product 010C                  __size_of_I2C2_SlaveSetCounter 000A  
      __end_of_I2C2_SlaveDefRdInterruptHandler AE0C       __size_of_I2C2_SlaveDefRdInterruptHandler 000A  
            ??_I2C2_SlaveDefRdInterruptHandler 0001               ?_I2C2_SlaveDefRdInterruptHandler 0001  
              _I2C2_SlaveDefRdInterruptHandler AE02                               ?_PWM6_Initialize 0001  
                             ?_TMR4_Initialize 0001                _I2C2_SlaveDefWrInterruptHandler 000000  
           I2C2_SlaveSetAddrIntHandler@handler 0104          __end_ofi2_ADCC_SetADIInterruptHandler AD3A  
       __size_ofi2_ADCC_SetADIInterruptHandler 000E                           ??_BaterryLowAlarmMed 0104  
                                      _ADSTPTH 003EE5                  i2_ADCC_SetADIInterruptHandler AD2C  
                                      _ADSTPTL 003EE4                                        ?_printf 0171  
                              ?_PMD_Initialize 0001                         ??_ClearEPBelowSetAlarm 0104  
                            _UART1_Receive_ISR 85C0              __end_of_ClearHighPressureAlarmLow AFC0  
                                      ?_strlen 0104                                     ??i2___lmul 0009  
                          ?_SetTdeTooLongAlarm 0001                           i2_TMR4_Period8BitSet ADD0  
                            i2_GetPressureV_pa 7048                                        Get5V@mv 0128  
                                   ??i2___wmul 0005                   __size_of_ClearVAboveMaxAlarm 0008  
                                      _U1ERRIE 003DFA                                        _U1ERRIR 003DF9  
                 ??i2_TMR4_SetInterruptHandler 0003                                      _I2C2STAT0 003D61  
                                    _I2C2STAT1 003D62                                        _LCDInit 7436  
                                      i2l20012 27C6                                        i2l20120 28CA  
                                      i2l20112 28BC                            __CFG_PWRTS$PWRT_OFF 000000  
                                      i2l20106 28B4                                        i2l20050 285C  
                                      i2l20042 284E                                        i2l20026 27D6  
                                      i2l20018 27CE                                        i2l20140 28E8  
                                      i2l20036 2846                                        i2l20028 2838  
                                      i2l20302 72B0                                        i2l20222 4B48  
                                      i2l20134 28E0                                        i2l20126 28D2  
                                      i2l20070 287A                       ?i2_ClearControlFailAlarm 0001  
                                      i2l20064 2872                                        i2l20056 2864  
                                      i2l13122 84F6                                        i2l13114 8496  
                                      i2l21210 01BE                                        i2l20322 7302  
                                      i2l20314 72EE                                        i2l20306 72C4  
                                      i2l20250 4C74                                        i2l20242 4C0C  
                                      i2l20234 4BA4                                        i2l20162 290C  
                                      i2l20154 28FE                                        i2l21042 91C0  
                                      i2l13116 84A2                                        i2l21300 03B4  
                                      i2l20148 28F6                                        i2l20092 289E  
                                      i2l20084 2890                                        i2l21036 91A6  
                                      i2l21070 66A2                                        i2l13118 84B0  
                                      i2l21222 0242                                        i2l20342 7344  
                                      i2l20246 4C40                                        i2l20238 4BD8  
                                      i2l20182 2924                                        i2l20174 291C  
                                      i2l20078 2888                                        i2l21038 91B0  
                                      i2l21400 075A                                        i2l21216 0224  
                                      i2l20272 4CEE                                        i2l20184 29C2  
                                      i2l20168 2914                                        i2l21048 91DC  
                                      i2l21090 6794                                        i2l21082 676E  
                                      i2l21410 07BE                                        i2l21314 0460  
                                      i2l21306 03D4                                        i2l21226 025A  
                                      i2l20098 28A6                                        i2l21500 0B4A  
                                      i2l21404 077A                                        i2l21340 0504  
                                      i2l21332 04D4                                        i2l21324 0490  
                                      i2l20284 725E                                        i2l20188 29C8  
                                      i2l13156 A604                                        i2l21334 04DA  
                                      i2l21318 0470                                        i2l21326 04B4  
                                      i2l21174 0044                                        i2l20710 6FF8  
                                      i2l21504 0B82                                        i2l21416 0804  
                                      i2l21336 04E4                                        i2l21280 031C  
                                      i2l21514 0C16                                        i2l21506 0B88  
                                      i2l21426 0884                                        i2l21354 0596  
                                      i2l21346 052E                                        i2l21274 02E0  
                                      i2l21194 00C0                                        i2l21178 005C  
                                      i2l20298 7298                                        i2l21620 1082  
                                      i2l21604 0FC8                                        i2l21524 0C5C  
                                      i2l21460 0A68                                        i2l21452 0A02  
                                      i2l21444 099A                                        i2l21508 0B90  
                                      i2l21428 088E                                        i2l21372 06B8  
                                      i2l21348 0558                                        i2l21268 02C6  
                                      i2l21188 00A6                                        i2l20724 7036  
                         __size_of_UART1_Write 0056                                        i2l21630 10E6  
                                      i2l20726 703C                                        i2l21624 10B4  
                                      i2l21560 0E1A                                        i2l21536 0CC8  
                                      i2l21480 0AE0                                        i2l21392 0716  
                                      i2l21384 06F2                                        i2l21296 03A4  
                                      i2l20760 A312                                        i2l21704 8C3E  
                                      i2l20770 A570                                        i2l21650 1186  
                                      i2l21554 0DD8                                        i2l21482 0AF2  
                                      i2l21378 06D6                                        i2l21714 8C8A  
                                      i2l21706 8C44                                        i2l17012 6194  
                                      i2l21812 927C                                        i2l21644 1160  
                                      i2l21636 1124                                        i2l21628 10DE  
                                      i2l21580 0EF6                                        i2l21548 0D70  
                                      i2l21556 0DE2                                        i2l21484 0AFC  
                                      i2l21396 0734                                        i2l20684 6F96  
                                      i2l21708 8C4C                                        i2l21670 1280  
                                      i2l21662 125C                                        i2l21638 112C  
                                      i2l21654 11D0                                        i2l21590 0F62  
                                      i2l20694 6FB4                                        i2l20678 6F84  
                                      i2l20758 A306                                        i2l17104 9C60  
                                      i2l17024 61E2                                        i2l17040 6268  
                                      i2l20768 A56A                                        i2l21824 929A  
                                      i2l21808 926E                                        i2l13760 8A92  
                                      i2l21680 12BC                                        i2l21592 0F6E  
                                      i2l21584 0F1C                                        i2l21576 0EC4  
                                      i2l17026 61F6                                        i2l17018 61BC  
                                      i2l13762 8A9E                                        i2l21690 12F4  
                                      i2l21682 12C0                                        i2l21674 1298  
                                      i2l21658 1216                                        i2l21498 0B46  
                                      i2l17044 628E                                        i2l17036 6252  
                                      i2l17060 67FC                                        i2l17212 3A3E  
                                      i2l17300 3E76                                        i2l13772 8AD2  
                                      i2l21676 129C                                        i2l21668 127C  
                                      i2l17150 94E0                                        i2l13782 969E  
                                      i2l21686 12DE                                        i2l21598 0FA2  
                                      i2l17080 68AE                                        i2l17072 6872  
                                      i2l17064 6816                                        i2l17056 67D8  
                                      i2l17216 3A58                                        i2l18120 996E  
                                      i2l18104 993C                                        i2l13784 96A6  
                                      i2l21688 12E4                                        i2l17330 5D58  
                                      i2l17066 682A                                        i2l17242 5832  
                                      i2l18114 995A                                        i2l18210 95A0  
                                      i2l13794 96C6                                        i2l17340 5DAE  
                                      i2l17332 5D5C                                        i2l17148 94D4  
                                      i2l17076 6888                                        i2l17164 3842  
                                      i2l17260 58D2                                        i2l17252 589A  
                                      i2l17228 57AA                                        i2l17324 3F88  
                                      i2l17308 3F0E                                        i2l19100 42F6  
                                      i2l15740 9BD2                                        i2l17350 5DCE  
                                      i2l17182 389A                                        i2l17246 5850  
                                      i2l17238 5816                                        i2l18222 7B30  
                                      i2l18206 958C                                        _LCDTest 8954  
                           ?_UART1_Receive_ISR 0001                                        i2l17352 5DFC  
                                      i2l17192 39D6                                        i2l17256 58B6  
                                      i2l17272 3D7E                                        i2l18160 55D2  
                                      i2l18152 54F2                                        i2l19120 433C  
                                      i2l19104 42FC                                        i2l15760 865A  
                                      i2l17346 5DC0                                        i2l17178 388A  
                                      i2l17602 1712                                        i2l18170 5376  
                                      i2l18234 7B6A                                        i2l18250 7BB8  
                                      i2l19122 434A                                        i2l17356 5E3A  
                                      i2l17348 5DC8                                        i2l16900 9784  
                                      i2l17540 136A                                        i2l17532 135E  
                                      i2l18156 5568                                        i2l18236 7B76  
                                      i2l18228 7B48                                        i2l19124 434E  
                                      i2l17286 3DE0                                        i2l17278 3DBE  
                                      i2l17622 1882                                        i2l18174 53EC  
                                      i2l18270 8E96                                        i2l18254 7BCE  
                                      i2l18246 7BAA                                        i2l19150 43A4  
                                      i2l17616 1834                                        i2l17552 1392  
                                      i2l17544 1370                                        i2l17536 1364  
                                      i2l17528 1358                                        i2l17632 18A8  
                                      i2l19144 4392                                        i2l19136 4372  
                                      i2l17626 188C                                        i2l17570 14A8  
                                      i2l17546 1374                                        i2l17554 13DE  
                                      i2l18178 5456                                        i2l18290 8EDC  
                                      i2l18282 8EC4                                        i2l18274 8EA4  
                                      i2l18266 8E8A                                        i2l18442 1F06  
                                      i2l19154 43B2                                        i2l19138 4376  
                                      i2l16940 9EA8                                        i2l17548 1388  
                                      i2l18276 8EAC                                        i2l18436 1EE6  
                                      i2l19156 43B6                                        i2l19148 43A0  
                                      i2l19084 42AE                                        i2l19324 A338  
                                      i2l16950 9A2C                                        i2l17566 146C  
                                      i2l19182 9B14                                        i2l19190 9B42  
                                      i2l18286 8ECE                                        i2l18526 4700  
                                      i2l19174 4486                                        i2l16928 833A  
                                      i2l16944 9EC4                                        i2l17584 1586  
                                      i2l17568 1496                                        i2l17920 8BBC  
                                      i2l19096 42E4                                        i2l17594 167A  
                                      i2l17922 8BC4                                        i2l17914 8BA6  
                                      i2l18466 2104                                        i2l18538 4750  
                                      i2l18570 5A58                                        i2l18562 5924  
                                      i2l19290 652A                                        i2l16884 9736  
                                      i2l16948 9A28                                        i2l16980 7F18  
                                      i2l19188 9B3E                                        i2l17940 8BFC  
                                      i2l17932 8BE4                                        i2l17908 8B96  
                                      i2l18492 21A0                                        i2l18468 210C  
                                      i2l18804 7D36                                        i2l18580 7078  
                                      i2l19276 6488                                        i2l16990 7F58  
                                      i2l18486 2186                                        i2l18806 7D40  
                                      i2l18902 8256                                        i2l16984 7F2A  
                                      i2l17936 8BEE                                        i2l18488 218E  
                                      i2l16898 977C                                        i2l16994 7F8E  
                                      i2l16986 7F3C                                        i2l17884 9F3E  
                                      i2l18588 713C                                        i2l17878 9F20  
                                      i2l18926 69F8                                        i2l18918 68F8  
                                      i2l18942 A366                                        i2l18870 8734  
                                      i2l17896 920A                                        i2l18928 69FC  
                                      i2l18864 8716                                        i2l19912 2674  
                                      i2l19920 269E                                        i2l17898 9236  
                                      i2l19930 26C0                                        i2l18868 872C  
                                      i2l18892 81CE                                        i2l19940 26D2  
                                      i2l19932 26C4                                        i2l19916 268C  
                                      i2l19934 26CA                                        i2l19926 26B4  
                                      i2l19918 2690                                        i2l19960 26F6  
                                      i2l18898 81FA                                        i2l19970 2784  
                                      i2l19954 26E8                                        i2l19956 26EE  
                                      i2l19896 971A                                        i2l19992 27A8  
                                      i2l19984 279A                                        i2l19968 26FE  
                                      i2l19978 2792                                        i2l19998 27B0  
                                      _U1RXPPS 003AE5                        ??_SetNoPowerSupplyAlarm 0104  
                                   ??_AlarmSet 0104                             ?i2_GetPressureV_pa 001B  
              ??_I2C2_SlaveSetBusColIntHandler 0106                           __size_ofi2_TMR4_Stop 0004  
                                 ??i2_AnyAlarm 0001             I2C2_SlaveSetReadIntHandler@handler 0104  
                                   ??_AnyAlarm 0104                     __size_of_BuzzerTestHandler 002E  
                                      i2_LCDOn ADDA                                      _I2C2_Read AFC6  
                                      _OSCCON1 0039D9                                        _OSCCON3 0039DB  
                                    _I2C2_Open 92C4                             __size_of_vfpfcnvrt 05D2  
          __end_of_I2C2_SlaveSetAddrIntHandler AC30                    _I2C2_SlaveSetAddrIntHandler AC22  
                                   ??i2_printf 0057                                        _OSCTUNE 0039DE  
                                      _PWM6DCH 003F69                                        _PWM6DCL 003F68  
                                      _PWM6CON 003F6A                              ??_IPBelowSetAlarm 0104  
                               ??i2_AdcGetData 0009                       ??_SetBaterryLowAlarmHigh 0104  
                 __size_of_BaterryLowAlarmHigh 0004                                        _SLRCONA 003A43  
                                      _SLRCONB 003A53                                        _SLRCONC 003A63  
                                      _SLRCOND 003A73                                        _SLRCONE 003A83  
                                   ??i2_strlen 0003                                        i2_GetEp 5488  
                                      i2_GetIp 530C                                        i2_GetTe AD84  
                                 ??_AdcGetData 010C                                        i2_GetTi ACE6  
               __size_of_ADCC_IsConversionDone 000E                                 ??i2_TMR4_Start 0001  
                                      i2_See5V 788E                               i2BuzzerOn@period 0001  
                      __end_of_CMP1_Initialize A71A                               i2_TMR0_StopTimer B03C  
                                      See5V@mv 0128                                        _AdcInit 8D8E  
                __end_of_ADCC_IsConversionDone AD48                                   ??_AdcHandler 005B  
                                 ??_TMR4_Start 0104                        __end_of_TMR6_StartTimer AF42  
                                 _enableAlarms 00F0                                   ??_TMR6_Start 0104  
                          __end_of_StopHandler 9734                            ??_UART1_Receive_ISR 0001  
                                  TestAlarm@id 0183                               ?_TMR1_WriteTimer 0001  
                      __end_of_TMR5_WriteTimer A62C                                _I2C2_Initialize AA7C  
           I2C2_SlaveSetStopIntHandler@handler 0104                                 ??i2_AdcSeeData 0009  
                          ??i2_GetPressureV_pa 001D                            __size_of_ButtonInit 002A  
                                 ??_AdcSeeData 010C                            __size_of_ButtonTask 0104  
                           __end_of_UART1_Read 9B98                                __size_of_LCDOff 000A  
                                      i2_fputc 8322                                        i2_fputs 9E9E  
                                  _MonitorDump 311C                                    _MonitorInit 8EEA  
                             ?_TMR5_Initialize 0001                               ??i2_ValueDisplay 0057  
                                      i2atoi@n 0015                                        i2pad@fp 0013  
                                      i2atoi@s 0008                                        i2ctoa@c 0020  
                                      i2_putch AE0C                                        _GetPmax A4B8  
                                      i2ctoa@w 0021                               _DisplayCalibrate A0C8  
                                      i2dtoa@d 0020                                        i2dtoa@i 0040  
                                      i2dtoa@n 0038                                        i2dtoa@p 0032  
                                      i2dtoa@s 0036                                        i2dtoa@w 0034  
                                   _controlSV1 00FD                           ??_SetTdeTooLongAlarm 0001  
                ??_I2C2_SlaveSetAddrIntHandler 0106                                        _DumpI2C B04C  
                      _GetPressure_mbar02$7138 002D                       ??i2_ClearEPAboveSetAlarm 0001  
                                 ??i2_BuzzerOn 0001                                     ??_BuzzerOn 0104  
            __size_of_SetHighPressureAlarmHigh 0006                                 ??_ValueDisplay 018D  
                       __size_ofi2_UART1_Write 0056                                __size_of_Get12V 0106  
                            i2___aldiv@divisor 0011                                 i2_AlarmDisplay 86FA  
                    ?_SetHighPressureAlarmHigh 0001                     __size_ofi2_DisableAlarmSV1 0006  
                       SetCalibrateState@calib 0183                                __size_ofi2_atoi 0170  
                              __size_ofi2_ctoa 0062                                __size_ofi2_dtoa 02B2  
                            ?i2_MonitorDisable 0001                                        i2stoa@i 0018  
                                      i2stoa@l 0020                                        i2stoa@p 001E  
                                      i2stoa@s 000E                                        i2stoa@w 001A  
                            i2___aldiv@counter 0015                               _ControlFailAlarm AAD2  
                              __size_of_GetBpm 000E                      __size_of_BatteryFailAlarm 00E2  
                          __size_of_BuzzerInit 0030                                _EPAboveSetAlarm A8E4  
                              __size_of_GetTde 000C                                __size_of_GetTdi 000E  
                                   _histButton 00F8                                __size_of_See12V 0106  
                              __size_ofi2_stoa 0178                                _epAboveSetAlarm 00E2  
                          __size_of_BuzzerTask 03A8                                __size_of_GetSpr 000E  
                                    Get12V@v12 0126                                __size_ofi2_xtoa 0282  
                          __size_of_BuzzerTest 008C                                        i2xtoa@c 0043  
                                      i2xtoa@d 0020                                        i2xtoa@i 0041  
                                      i2xtoa@n 0039                                        i2xtoa@p 0035  
                                      i2xtoa@w 0037                                        i2xtoa@x 0028  
                                      __Hparam 0000                                      Get12V@adc 0124  
          __end_of_I2C2_SlaveSetReadIntHandler AC06                    _I2C2_SlaveSetReadIntHandler ABF8  
                       __size_of_GetAlarmState 0052                                        __Lparam 0000  
                     __end_of_UART1_Initialize 7E3E                         __end_of_GetPressure_pa 5BD6  
                              __size_of_SetSV1 0034                     ??_TMR5_SetInterruptHandler 0106  
                           ??i2_MonitorDisable 0001                     __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
              __size_of_ControllerTimerHandler 0086            __size_ofi2_TMR4_SetInterruptHandler 000E  
                      __size_of_DisplayDisable 0012                            i2_SetCalibrateState 68E0  
                                      ___aldiv 7A40                                        ___aodiv 6010  
                         __size_ofi2_ClearVars 0244                                        ___aomod 6544  
                     ??i2_ADCC_StartConversion 0001                             __end_ofi2_AnyAlarm 9F52  
                                      ___awdiv 8AFA                                __size_of___lmul 005E  
                                      ___awmod 8E02                                        ___lldiv 8A70  
                              __size_of___wmul 002E                                        ___llmod 903E  
                             i2AdcDataReady@id 0007                                        ___lwdiv 9688  
                    __end_of_UART1_Receive_ISR 8660                                      ?_vfprintf 0169  
                                ?_AdcDataReady 010A                                 i2vfprintf@cfmt 0055  
                 _I2C2_SlaveRdInterruptHandler 0296                   _I2C2_SlaveWrInterruptHandler 0294  
                     __end_ofi2_GetPressure_pa 5A66                      __end_ofi2_GetPressureV_pa 714A  
                           __end_of_AdcGetData 9390                        __end_of_TdiTooLongAlarm B00C  
                   __end_of_SetEPAboveSetAlarm A7FA                                   ?i2_vfpfcnvrt 0045  
            __end_ofi2_ClearBaterryLowAlarmMed AFAE                                        _hiLimit 01CF  
                                      __pcinit 7BE8                                        _pLowAcc 021A  
                           __end_of_AdcHandler 67AC                             __end_of_TMR4_Start B028  
                              i2AlarmDisplay@t 0057                               ?_TMR6_Initialize 0001  
                      MonitorPressureTask@adcv 00AF                                        __ramtop 1000  
                      MonitorPressureTask@cnt2 0234                        MonitorPressureTask@ecnt 0236  
                  __size_of_UART1_Transmit_ISR 0048                             __end_of_TMR6_Start AFF0  
                      MonitorPressureTask@down 029C                  __size_ofi2_UnDisplayCalibrate 000E  
                     __end_of_MonitorFailAlarm 7A40                                        _cntByte 00CC  
                        ?i2_TMR4_Period8BitSet 0001                  ??_I2C2_SlaveSetReadIntHandler 0106  
             __size_of_I2C2_SlaveClearStopFlag 0004                                        __ptext0 2D9C  
                                      __ptext1 AF36                                        __ptext2 9B50  
                                      __ptext3 903E                                        __ptext4 AB42  
                                      __ptext5 8274                                        __ptext6 A8B0  
                                      __ptext7 A060                        MonitorPressureTask@tmp2 00B3  
                                      __ptext8 6A06                                        __ptext9 AB50  
                      MonitorPressureTask@next 00B5             __end_ofi2_ClearBaterryLowAlarmHigh AFB4  
                   i2_ClearBaterryLowAlarmHigh AFAE                        MonitorPressureTask@temp 00BB  
                              __size_of_printf 002A                           __size_ofi2_GetVolume 000E  
                                      _ledType 00F7                                  MuteAlarm@high 0187  
               ??_TMR1_DefaultInterruptHandler 0001                                        _loLimit 01CD  
                      __size_of_TMR5_StopTimer 0004                             __end_of_AdcSeeData 9D2A  
                              __CFG_WRTAPP$OFF 000000                  __size_of_HighPressureAlarmLow 0082  
                              __size_of_strlen 0054                                _AdcReStartCycle 93F6  
                                    _T1CONbits 003FB2                                   ?_GetTargetEp 0112  
                                 ?_GetTargetIp 0112                                        _histSec 00DE  
                                _ClearAllAlarm 9AB8                          _OSCILLATOR_Initialize A94A  
                                 __size_of_abs 003E                                   __size_of_pad 00B2  
                       __size_of_MonitorEnable 0008                                        _isalpha 9FBE  
                                      _isdigit 9FF4                           MonitorPressureTask@i 00BD  
                    __size_ofi2_AlarmUpdateLCD 0142                         ??i2_GetDisableAlarmSV1 0001  
                                _ClearAlarmLED ADC6                               ___awmod@dividend 0104  
                             ??_MonitorDisable 0104              __size_of_TMR1_SetInterruptHandler 000E  
                                  _I2C2ERRbits 003D60                       ??i2_ClearGasFailureAlarm 0001  
                             ___aldiv@dividend 0110                                      _T4CONbits 003FA0  
                                      _ttAlarm 025A                                ??i2_CMP1_Enable 0001  
                                      _islower 9F52                             __end_ofi2_BuzzerOn A8B0  
                     ??_PIN_MANAGER_Initialize 0104              __size_of_TMR4_SetInterruptHandler 000E  
                                      _isspace 9BE0                      ?_TMR1_SetInterruptHandler 0104  
                                      _numHigh 024C                                __CFG_WRTSAF$OFF 000000  
                            _ValueDisplay$4007 01A6                              _ValueDisplay$4008 01A8  
                                   ?_I2C2_Read 0001                              _ValueDisplay$6533 019F  
                                    _T5CONbits 003F9A                                     ?_I2C2_Open 0001  
                    ?_TMR4_SetInterruptHandler 0104                                        _isupper 9F88  
                  __end_of_SetControlFailAlarm AED6                                    _I2C2PIEbits 003D64  
                                ??_CMP1_Enable 0104                                ??_BuzzerHandler 005D  
                                      _muteSec 01EF                                      _T6CONbits 003F94  
                       ??_ClearIPBelowSetAlarm 0104                           __size_ofi2_HistAlarm 0100  
               __size_of_HighPressureAlarmHigh 0004                              ??_GetPressureV_pa 0120  
                              _GasFailureAlarm B01C                           ?i2_SetCalibrateState 0001  
                                  _I2C2PIRbits 003D63                                        atoi@neg 0111  
                __end_of_HighPressureAlarmHigh B01C                          __size_of_LCDMessage12 003E  
                                      _putchar A8B0                                        main@cnt 0226  
                   __size_of_SYSTEM_Initialize 0042                       __end_of_SetVolumeControl ADF8  
                                      _sprintf 95DA                            DisplayCalibrate@off 0095  
              __size_of_I2C2_SlaveStopCallBack 0020                            DisplayCalibrate@prv 0097  
                               LCDMessage1@str 0110                                 LCDMessage2@str 0110  
                                      _toupper 9830                                GetPressure_pa@p 012C  
                                 ??_AlarmClear 0104                                      _LCDWrite4 9A6A  
                         end_of_initialization 7CAE               __size_ofi2_ClearMonitorFailAlarm 0008  
                        __end_ofi2_BuzzerClear AB12                 ??i2_ClearHighPressureAlarmHigh 0001  
                             i2HigherAlarm@max 000E                          _ClearMonitorFailAlarm AE76  
               ??_TMR4_DefaultInterruptHandler 0001                         __end_ofi2_AlarmDisplay 8792  
                           _GetPressure_mbar02 A02A                                      AnyAlarm@i 0106  
                                      fputc@fp 0108                                  ValueDisplay@r 01B1  
          __end_of_UART1_SetTxInterruptHandler AB6C                    _UART1_SetTxInterruptHandler AB5E  
                                      fputs@fp 0111                            i2___wmul@multiplier 0001  
                         __size_ofi2_BuzzerOff 0010                                      i2u2000_40 701A  
                                    i2u2002_40 702C                     __end_of_SetGasFailureAlarm AEB6  
                                    i2u2110_40 0DD2                                      i2u1217_40 AD28  
                                    i2u2114_40 0E78                                      i2u2106_40 0D08  
                                    i2u1091_40 AD44                                      i2u1163_40 A7D0  
                                    i2u2123_40 10D0                                      i2u2115_40 0F12  
                                    i2u1164_40 A7F0                               i2_TMR5_StopTimer B034  
                                    i2u2140_48 A6E8                                      i2u1165_40 A790  
                                    i2u2125_40 1116                                      i2u2117_40 0F58  
                                    i2u1404_48 85EE                                      i2u1404_49 8600  
                                    i2u2038_40 6710                                      i2u1166_40 A7B0  
                                    i2u1182_40 96AA                                      i2u2127_40 1170  
                                    i2u2119_40 0FB2                                      i2u2142_48 A6A4  
                                    i2u2150_48 A21E                                      i2u1406_48 861C  
                                    i2u2230_48 737A                                      i2u1406_49 862E  
                                 ?_HigherAlarm 010A                                      i2u1601_40 3814  
                                    i2u2152_48 A6C6                                      i2u2073_40 06EA  
                                    i2u2049_40 003E                                      i2u2137_40 8C38  
                                    i2u2144_48 A660                                      i2u1408_48 8646  
                                   _targetHigh 01E9                                      i2u1610_40 3A06  
                                    i2u1602_40 3816                                      i2u2090_40 0A10  
                                    i2u2074_40 070A                                      i2u2066_40 0524  
                                    i2u2233_48 7392                                      i2u1610_41 3A04  
               __size_of_SetBaterryLowAlarmMed 0006                            i2GetPressureV_pa@mv 0021  
                               _SeePressure_pa 5EB6                                      i2u1611_40 3A14  
                                    i2u1179_40 8AA2                                      i2u2091_40 0ABE  
                                    i2u2146_48 A1EC                                      i2u1612_40 3A1A  
                                    i2u1605_40 3856                                      i2u1621_40 5846  
                                    i2u2085_40 08D8                                      i2u2148_48 A682  
                                    i2u2237_40 73B2                                    _UpdateState 423C  
                                    i2u1614_40 3A28                                      i2u1622_40 587A  
                                    i2u1630_40 3E12                                      i2u1622_47 586C  
                                    i2u1607_40 3884                                      i2u1631_40 3E14  
                                    i2u2238_48 73B6                                      i2u1608_40 39E4  
                                    i2u1560_40 A128                                      i2u1640_40 3F4E  
                                    i2u1616_41 5786                                      i2u1625_40 58E6  
                                    i2u1561_40 A12A                                      i2u1641_40 3F54  
                                    i2u1633_40 3E4C                                      i2u2089_40 09AA  
                                    i2u1554_40 8332                                      i2u1634_40 3E4E  
                                    i2u1627_40 3D50                                      i2u1644_40 5DAA  
                                    i2u1556_40 837A                                      i2u1580_40 682E  
                                    i2u1636_40 3EDA                                      i2u1820_40 4798  
                                   _targetPmax 026A                                      i2u1572_41 61C2  
                        __end_ofi2_SetAlarmSV1 A346                                      i2u1636_45 3EC8  
                                    i2u1637_40 3F1E                                      i2u1629_40 3DDC  
                __end_of_SetBaterryLowAlarmMed AF54                                      i2u1646_40 5E70  
                                    i2u1558_40 9A56                                      i2u1574_40 61FA  
                                    i2u1590_40 A15C                                      i2u1750_40 8BC8  
                                    i2u1558_47 9A48                                      i2u1647_40 5E72  
                                    i2u1583_40 9E6E                                      i2u1591_40 A15E  
                                    i2u1639_40 3F40                                      i2u1639_41 3F3E  
                                    i2u1584_40 A190                                      i2u1592_40 99A4  
                                    i2u1585_40 A192                                      i2u1593_40 99A6  
                                    i2u1745_40 9F4E                                      i2u1913_45 78D0  
                                    i2u1586_40 A1C4                  __size_of_ClearTdiTooLongAlarm 0008  
                                    i2u1914_45 6E80                                      i2u1587_40 A1C6  
                                    i2u1819_40 4748                                      i2u1692_40 175A  
                                    i2u1684_40 14EA                                      i2u1860_40 8266  
                                      isqrt@op 0005                                      i2u1589_40 9C5C  
                                    i2u1685_40 14EC                                      i2u1686_40 14FA  
               ??_UART1_SetOverrunErrorHandler 0106                                      i2u1943_40 2686  
                                   _monitorSV1 00FC                                      i2u1872_40 4252  
                                    i2u1689_40 15CE                                      i2u1793_40 8EB0  
                                    i2u1873_40 4254                                      i2u1961_40 7288  
                                    i2u1945_40 4B40                                      i2u1890_40 4382  
                                    i2u1882_40 42DE                                      i2u1858_40 81EC  
                                    i2u1962_40 7292                                ___lldiv@divisor 0005  
                                    i2u1787_40 7B7A                                      i2u1939_40 96FC  
                                    i2u1875_45 426A                                      i2u1877_40 42A8  
                                    i2u1965_40 72EE                                      i2u1957_40 4CF8  
                                    i2u1981_40 6F58                                      i2u1973_48 A828  
                                    i2u1894_40 43C6                                      i2u1966_40 72FA  
                                    i2u1958_40 4CFA                                      i2u1982_40 6F5A  
                                    i2u1895_40 43C8                                      i2u1983_40 6F6C  
                                    i2u1975_48 A808                                      i2u1968_40 732C  
                                    i2u1992_40 6FD4                                      i2u1984_40 6F6E  
                                    i2u1897_40 4480                                      i2u1889_40 4380  
                                    i2u1969_40 7338                          _highPressureAlarmHigh 02AD  
                                    i2u1994_40 6FE6                                      i2u1899_40 9B2C  
                                    i2u1996_40 6FF6                                      i2u1998_40 7008  
                              ___lldiv@counter 000D                                      See12V@v12 0126  
                                    See12V@adc 0124                                SetAlarmLED@type 0104  
                          ?_GetPressure_mbar02 002B                               ??i2_AdcDataReady 0009  
                              ?_GetPressure_pa 011E                      ??_ClearBaterryLowAlarmMed 0104  
                                 ?_DisplayTask 0001                              __end_of_vfpfcnvrt 1EC0  
                          i2GetPressure_pa@p32 001F                            i2GetPressure_pa@adc 0023  
                             ___aldiv@quotient 011A                               AlarmUpdateLCD@id 01C0  
                                      postdec1 003FE5                                        postdec2 003FDD  
                     ??i2_ClearIPAboveSetAlarm 0001                                        postinc0 003FEE  
                                      postinc1 003FE6                                        postinc2 003FDE  
                                    i2See5V@mv 0025                                      i2_AdcInit 8FCE  
                               ??_AdcDataReady 010C                                     _muteButton 00F9  
                          i2___lmul@multiplier 0001                           __size_ofi2_MuteAlarm 01E6  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
                                 ??i2_vfprintf 0055                                     ??_vfprintf 016F  
                              _IPAboveSetAlarm A962                             _NoPowerSupplyAlarm AFF8  
                              _ipAboveSetAlarm 0280                              UART1_Write@txData 0104  
                          _UART1_RxDataHandler A5E4                __end_ofi2_ClearControlFailAlarm AF06  
                        __CFG_WDTCPS$WDTCPS_31 000000                                        strlen@a 0106  
                                      strlen@s 0104                              i2ValueDisplay@ete 00A8  
                            i2ValueDisplay@eti 00A7                          _CMP1_InterruptHandler 028A  
                            i2ValueDisplay@tde 00B2                              i2ValueDisplay@tdi 00B0  
                            i2ValueDisplay@spr 00A3                              i2ValueDisplay@vol 009F  
                               i2_CMP1_Disable AF2E                                    _adcChannels 02BC  
                     _TMR0_SetInterruptHandler ABA4                                      i2_GetPmax A52A  
                 __end_of_ClearTdeTooLongAlarm AF2E                             __end_of_AlarmClear A77A  
                           _UnDisplayCalibrate AB50                                      _PORTDbits 003FCD  
                              SetAlarmSV1@last 00EE                                   AlarmClear@id 0104  
                                 _LCDMessage12 9D2A                                      _TMR4_Stop B028  
                               ?_ClearAllAlarm 0001                       _TMR6_SetInterruptHandler ABC0  
                                i2_UART1_Write 9734                              i2ClearVars@i_4909 0003  
                        _TMR5_InterruptHandler 02E1                                  ?i2_BuzzerTask 0001  
                               ?_ClearAlarmLED 0001                          _I2C2_SlaveIsRxBufFull AD1E  
                            __size_of_I2C2_Isr 0068                              i2___aodiv@divisor 0009  
                             i2AdcGetData@data 0009                                    _StopHandler 96DE  
                          ?_NoPowerSupplyAlarm 0001                   __size_of_ClearVBelowMinAlarm 0006  
                      __end_of_I2C2_Initialize AA8E                            i2_AlarmDisplay$4015 0058  
                          i2_AlarmDisplay$4016 005A                              i2___aodiv@counter 0011  
                  GetControllerBuzzerCheck@tmp 0001                          __size_of_LCDWriteChar 0096  
                                _GetAlarmState 9882                              __size_of_ADCC_ISR 0022  
          __end_of_ADCC_SetADIInterruptHandler ABC0                 ?i2_ADCC_SetADIInterruptHandler 0001  
                  _ADCC_SetADIInterruptHandler ABB2                     __end_of_SetIPAboveSetAlarm A7BA  
                         ??_GetPressure_mbar02 002D                         _ControllerTimerHandler 8C0A  
                      __size_of_AlarmCheckTask 0184                          ??i2_SetCalibrateState 005B  
                          ?_UnDisplayCalibrate 0001                                      i2___aldiv 7B14  
              __size_of_SetBaterryLowAlarmHigh 0006                                      i2___aodiv 6168  
                            ?i2_EnableAlarmSV1 0001                                      i2___aomod 67AC  
                                    i2___awdiv 8B82                               ?_CMP1_Initialize 0001  
                                    i2___awmod 8E76                        ?_I2C2_SlaveReleaseClock 0001  
                             __CFG_FEXTOSC$OFF 000000                               ?_TMR6_StartTimer 0001  
                                   ?_LCDWrite4 0001                 __size_of_ClearBatteryFailAlarm 0006  
        __end_of_I2C2_SlaveSetBusColIntHandler AC22         __size_of_I2C2_SlaveSetBusColIntHandler 000E  
                _I2C2_SlaveSetBusColIntHandler AC14                           ?_UART1_RxDataHandler 0001  
                      __end_of_EPAboveSetAlarm A8FE                  __end_of_ClearBatteryFailAlarm AF66  
                             ?_TMR5_WriteTimer 0001                              __size_of_CMP1_ISR 0022  
                           ??i2_EnableAlarmSV1 0001                        TMR5_WriteTimer@timerVal 0001  
                        __end_ofi2_MonitorDump 37DC                         __end_of_SeePressure_pa 6010  
           __size_ofi2_ClearNoPowerSupplyAlarm 0006                                ?i2_AlarmDisplay 00BD  
                ??_ADCC_SetADIInterruptHandler 0106                               _monitorFailAlarm 02B0  
                      __size_of_I2C2_SlaveOpen 000A                            __end_of_CMP1_Enable AE86  
                           __end_ofi2_vfprintf 925C                                 __end_of_LCDOff ADBC  
                     __size_of_SeePressureV_pa 00DE                                 _ReceiveHandler 9B06  
                   ?i2_ClearNoPowerSupplyAlarm 0001                        _ClearNoPowerSupplyAlarm AF5A  
                     __size_ofi2_GetAlarmState 0052                     MonitorPressureTask@nt_4874 0238  
                                    _AlarmInit 8D12                       ??i2_ClearEPBelowSetAlarm 0001  
              __size_ofi2_ClearEPAboveSetAlarm 0016                               ??_GetMaxPressure 0114  
                           i2___awdiv@dividend 0007                                   ?_InitDisplay 0001  
                                _MonitorEnable AE46                                _DisableAlarmSV1 AE5E  
                         ??_NoPowerSupplyAlarm 0104                                      i2_isalpha A164  
                                    i2_isdigit A198                                 __end_of_Get12V 6E3E  
                      ??_ControllerBuzzerCheck 0001                                      _ClearVars 4496  
                              _EPBelowSetAlarm A8FE                                 __end_ofi2_atoi 5EB6  
                              _epBelowSetAlarm 00E4                                 __end_ofi2_ctoa 951E  
                      _I2C2_SlaveSetIsrHandler AC06                                 __end_ofi2_dtoa 3A8E  
                                    i2_islower A0FC                                      i2_isspace 9C26  
                               __end_of_GetBpm ACAE                                 __end_of_GetTde AD84  
                               __end_of_GetTdi AC92                                 __end_of_See12V 6D38  
                               __end_ofi2_stoa 58F4                        controller@volumeControl 0299  
                               __end_of_GetSpr ACA0                                 __end_ofi2_xtoa 3FBE  
                          SeePressureV_pa@adcv 0122                                      i2_isupper A130  
                        AlarmCheckTask@current 0270                           ??_UnDisplayCalibrate 0104  
                               BuzzerOn@period 0104                                 _TMR0_StopTimer AFDC  
                                    _i2c2State 02B8                      __size_of_BuzzerCMPHandler 0026  
                                    i2atoi@neg 000E                                 __end_of_SetSV1 A094  
                       _I2C2_SlaveStopCallBack A7FA                              __size_ofi2_LCDOff 000A  
                                   ?i2_AdcInit 0001                           __end_ofi2_AdcGetData 93F6  
             __end_of_ClearBaterryLowAlarmHigh AF72                                   ??_ButtonInit 0106  
                      __end_of_AdcReStartCycle 945A                                      i2_sprintf 98D4  
                 __end_of_INTERRUPT_Initialize AFE4                                   ??_ButtonTask 00C7  
                                ??_LCDMessage1 0112                                  ??_LCDMessage2 0112  
                       __end_ofi2_CMP1_Disable AF36                           __end_ofi2_TMR4_Start B030  
              __size_ofi2_ADCC_StartConversion 0010                 ??_ADCC_DefaultInterruptHandler 0001  
                                    i2_toupper 9978                               ??_EnableAlarmSV1 0104  
                 ??i2_ClearCircuitFailureAlarm 0001                     __size_of_UART1_Receive_ISR 00A0  
                   __end_of_GetDisableAlarmSV1 AF78                                 __end_of___lmul 957C  
                                    _GetVolume AC76                                  __pidataBIGRAM 4D00  
                                  vfpfcnvrt@ap 014C                                    vfpfcnvrt@cp 0162  
                                  vfpfcnvrt@fp 0148                                    vfpfcnvrt@ll 0152  
                                 _LCDWriteChar 8828                                 __end_of___wmul A2EA  
                       ??i2_TMR4_Period8BitSet 0001                     __size_ofi2_GetPressureV_pa 0102  
                                ButtonTask@cnt 0284                   __end_of_I2C2_SlaveRdCallBack A83A  
                         __end_ofi2_AdcSeeData 9E60                               ?_TdiTooLongAlarm 0001  
                     __size_ofi2_MonitorEnable 0008                        ?_I2C2_SlaveSetSlaveAddr 0001  
                   __end_of_SetEPBelowSetAlarm A7DA                              __size_of_TMR0_ISR 0022  
                            __size_of_TMR1_ISR 0032                              __size_of_TMR4_ISR 0022  
                            __size_of_TMR5_ISR 0032                              __size_ofi2_GetBpm 000E  
                      ?_I2C2_SlaveSetSlaveMask 0001                                      i2fputc@fp 0005  
                            __size_of_TMR6_ISR 0022                                     ?i2_GetPmax 000F  
                            __size_ofi2_GetTde 000C                              __size_ofi2_GetTdi 000E  
                  ??_ClearHighPressureAlarmLow 0001                                 ?i2_UART1_Write 0001  
                            __size_ofi2_See12V 0106             __end_ofi2_TMR4_SetInterruptHandler ACBC  
                   i2_TMR4_SetInterruptHandler ACAE                              __size_ofi2_GetSpr 000E  
                       ?_OSCILLATOR_Initialize 0001                        __end_of_GasFailureAlarm B020  
                                    i2fputs@fp 000E                                     ?_TMR4_Stop 0001  
                               ??i2_BuzzerTask 005B              __size_of_ADCC_GetConversionResult 0016  
                                 ??_BuzzerInit 0106                              __size_of_AdcReady 0006  
                                 ??_BuzzerTask 0183                      ?_ADCC_GetConversionResult 0001  
                                 ??_BuzzerTest 0106                              __size_ofi2_SetSV1 002E  
                             i2___wmul@product 0005                  __size_of_ClearEPAboveSetAlarm 0016  
                               __end_of_printf A3F6                       ?i2_ClearBatteryFailAlarm 0001  
                                    _HistAlarm 6B28                                  _i2c2SlaveAddr 02B5  
                               ?_GetAlarmState 0108                           __end_of_ValueDisplay 264A  
                               __end_of_strlen 97DE                            start_initialization 7BE8  
                            __size_ofi2___lmul 005E                                    ??_I2C2_Read 0001  
                           i2___awdiv@quotient 000D                                    ??_I2C2_Open 0106  
                  ?_ClearHighPressureAlarmHigh 0001                              __size_ofi2___wmul 002E  
                               BuzzerSet@state 0185                __size_ofi2_ClearGasFailureAlarm 0008  
         __end_of_TMR5_DefaultInterruptHandler B056          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler B054                       __size_of_TMR0_Initialize 0024  
              __size_of_PIN_MANAGER_Initialize 00B2           __end_of_I2C2_SlaveSetWrColIntHandler ABF8  
        __size_of_I2C2_SlaveSetWrColIntHandler 000E                   _I2C2_SlaveSetWrColIntHandler ABEA  
               __end_of_I2C2_SlaveReleaseClock AFC6                                    __end_of_abs 9DE4  
                                  __end_of_pad 81C2                        ??_UART1_SetErrorHandler 0106  
                                ??_LCDWriteCmd 0104                              __size_of_AlarmSet 0020  
                               AdcDataReady@id 010A                                     ?i2___aldiv 000D  
                                   ?i2___aodiv 0001                         ?_ClearMonitorFailAlarm 0001  
                                   ?i2___aomod 0001                                     ?i2___awdiv 0007  
                                   ?i2___awmod 0001                        __size_of_SetMaxPressure 000E  
                            __size_of_AnyAlarm 003C                          ??_UART1_RxDataHandler 0001  
                                 i2vfpfcnvrt@c 0076                   __size_of_SetMonitorFailAlarm 0008  
                                 ?_BuzzerCheck 0001                  __size_of_ADCC_StartConversion 0010  
                   ?_VeryHighPressureAlarmHigh 0001                                    putch@txData 0105  
                                 ?_BuzzerClear 0001                                     ivt0x8_base 0008  
                      __size_of_VAboveMaxAlarm 0004                              __size_ofi2_printf 0026  
                                    _BuzzerOff AAF2                         __end_of_ReceiveHandler 9B50  
                                    _BuzzerSet A918                                       ??_LCDOff 0104  
                            __size_ofi2_strlen 0050                                      i2strlen@a 0003  
                                    i2strlen@s 0001                             __end_of_ButtonInit A3CC  
                           _controllerDetected 02B1                                  _uart1RxBuffer 0212  
                               BuzzerTest@note 0108                             __end_of_ButtonTask 7048  
                              ?_SeePressure_pa 011E                                  _uart1TxBuffer 0464  
                                     ??_Get12V 0120                                ___llmod@divisor 0108  
                               ?_MonitorEnable 0001                            _ClearVAboveMaxAlarm AF16  
                                   ?_AlarmInit 0001                                       ??i2_atoi 000A  
                                     ??i2_ctoa 0021                                       ??i2_dtoa 0028  
                                 ?_SetAlarmLED 0001                                ___llmod@counter 010C  
                                    _SetTarget 7CB4            __size_ofi2_ClearCircuitFailureAlarm 0008  
            __end_ofi2_ClearNoPowerSupplyAlarm AFA8                                   ?_SetAlarmSV1 0001  
                                     ??_GetBpm 0106                        __size_of_AlarmUpdateLCD 0142  
                                     ??_GetTde 0106                                       ??_GetTdi 0106  
                                     ??_See12V 0120                                       ??i2_stoa 0010  
                                     ??_GetSpr 0106                                       ??i2_xtoa 0029  
                          _circuitFailureAlarm 02AB                               _BatteryFailAlarm 751A  
                                   ?i2_isalpha 0001                         __end_of_TMR0_StopTimer AFE0  
                                   ?i2_isdigit 0001                                 _currentChannel 01EB  
                      __end_of_IPAboveSetAlarm A97A                                     ?_ClearVars 0001  
                                     ??_SetSV1 0183                                     ?i2_islower 0001  
                           __end_of_BuzzerInit A260                                     ?i2_isspace 0001  
                             __CFG_LPBOREN$OFF 000000                             __end_of_BuzzerTask 2D9C  
                            __size_of_BuzzerOn 001E                                      _MuteAlarm 4920  
                           __end_of_BuzzerTest 8A70                  __size_of_ClearGasFailureAlarm 0008  
                                   ?i2_isupper 0001                       __size_of_TMR1_Initialize 0052  
                                  vfprintf@fmt 016B                                      _TestAlarm 8274  
                               _DisplayDisable AAA0                                   i2vfprintf@ap 0053  
                              i2vfpfcnvrt@done 0072                                   i2vfprintf@fp 004F  
                       _SetBaterryLowAlarmHigh AF54                            _BaterryLowAlarmHigh B00C  
                             ??_PMD_Initialize 0104                                       ??___lmul 010C  
                                     ??___wmul 0108                       __end_ofi2_TMR0_StopTimer B040  
                     ??i2_ClearIPBelowSetAlarm 0001                                     ?i2_sprintf 0077  
                               HigherAlarm@max 0111                          i2_SetMonitorFailAlarm AF84  
              __size_ofi2_ClearIPAboveSetAlarm 0016                                ?i2_CMP1_Disable 0001  
                                   ?i2_toupper 0007                             _SetTdiTooLongAlarm AE9E  
               __end_of_I2C2_SlaveSetSlaveAddr AD60                                    __pdataBANK0 00FC  
                                  __pdataBANK2 02BC                                     ?_GetVolume 0104  
               __end_of_I2C2_SlaveSetSlaveMask AAD2                    ??i2_ClearBaterryLowAlarmMed 0001  
                             ValueDisplay@dtde 01A4                               ValueDisplay@dtdi 01A3  
                             ValueDisplay@etde 01AF                               ValueDisplay@etdi 01AE  
                              _IPBelowSetAlarm A8CA                        _I2C2_SlaveClearStopFlag B044  
                              _ipBelowSetAlarm 00E0                                ??_ClearAllAlarm 0001  
                             ValueDisplay@pmax 019B                   __size_of_I2C2_SlaveClearBuff 0004  
                                 _prFastBuffer 0400              __size_of_ClearCircuitFailureAlarm 0008  
                       BuzzerTask@noDetections 0282                                ??_ClearAlarmLED 0104  
                                     ??_printf 017F                      ?_ClearCircuitFailureAlarm 0001  
                     __end_of_DisplayCalibrate A0FC                                 _TMR5_StopTimer AFE8  
                            i2___aomod@divisor 0009                         ?_I2C2_SlaveIsRxBufFull 0001  
                                     ??_strlen 0106                           ?_ClearVAboveMaxAlarm 0001  
                       i2_ClearEPAboveSetAlarm AA14                              i2___aomod@counter 0011  
                         __size_ofi2_vfpfcnvrt 05EC                   __size_of_I2C2_SlaveEnableIrq 0016  
                          ?_SetTdiTooLongAlarm 0001                                       ?_LCDInit 0001  
                                   ?_HistAlarm 0001                   __size_of_I2C2_SlaveGetRxData 0006  
                                  __pbssBIGRAM 0464                            __end_of_LCDMessage1 A73A  
                          __end_of_LCDMessage2 A46C                               i2_AlarmUpdateLCD 6402  
                                     ?_LCDTest 0001                                      _adcOffset 01FA  
                     __end_of_ControlFailAlarm AAE2                                   i2sprintf@fmt 0079  
                  __end_of_MonitorPressureTask 1302                               ?_I2C2_Initialize 0001  
                     __size_of_TdeTooLongAlarm 0004                                       ?i2_LCDOn 0001  
                           _UART1_ErrorHandler 02E5               __end_of_SetHighPressureAlarmHigh AF48  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 02F5                                  __pcstackBANK3 03F9  
                  __end_of_SetBatteryFailAlarm AE96                     __end_of_SetIPBelowSetAlarm A79A  
                             ___aodiv@dividend 0104                           __size_of_GetTargetEp 0026  
                            SeePressureV_pa@mv 0126                           __size_of_GetTargetIp 0026  
               __size_of_SetNoPowerSupplyAlarm 0006                       __size_of_TMR2_Initialize 001E  
           _I2C2_SlaveDefWrColInterruptHandler 000000                                       LCDTest@i 0138  
                                     LCDTest@j 013A                           ?_BaterryLowAlarmHigh 0001  
                __end_of_SetNoPowerSupplyAlarm AF4E                                    _CMP1_Enable AE7E  
                           _baterryLowAlarmMed 02AA                                       ?i2_GetEp 000F  
                                     ?i2_GetIp 000F                                       ?i2_GetTe 0001  
                                     ?i2_GetTi 0001                    __size_of_CMP1_SetIntHandler 000E  
                     _UART1_RxInterruptHandler 02F1                        i2_ClearMonitorFailAlarm AEE6  
                                     ?i2_See5V 001B                                       ?_AdcInit 0001  
                       i2_ADCC_StartConversion AB32                  ?_TMR5_DefaultInterruptHandler 0001  
                __size_of_ClearIPAboveSetAlarm 0016                                    ??_LCDWrite4 0104  
                      __end_of_DisableAlarmSV1 AE66                      ??_ClearNoPowerSupplyAlarm 0104  
                 __end_of_I2C2_SlaveSetCounter AE02                           __end_of_AdcDataReady A41E  
                            SeePressure_pa@p32 0122                                     ?_BuzzerOff 0001  
                                   ?_BuzzerSet 0001                              SeePressure_pa@adc 0126  
                              ?_ReceiveHandler 0001                               ?_EPAboveSetAlarm 0001  
            __end_of_VeryHighPressureAlarmHigh B024                        __end_of_EPBelowSetAlarm A918  
                                monitor@enable 02A2                                   ?_MonitorDump 0001  
                                 ?_MonitorInit 0001                                       ?i2_fputc 0003  
                                     ?i2_fputs 000C                      _ClearHighPressureAlarmLow AFBA  
                                     ?i2_putch 0001                                       ?_GetPmax 0112  
                          i2AlarmDisplay@alarm 00BF                                      _calibrate 00FB  
             __size_ofi2_ClearControlFailAlarm 0008                      ??_I2C2_SlaveSetIsrHandler 0106  
                                     ?_DumpI2C 0001                          _ClearControlFailAlarm AE36  
                          __end_of_LCDWriteCmd 8828                                 AdcGetData@data 010C  
                         _ClearTdeTooLongAlarm AF26                   ?_UART1_SetRxInterruptHandler 0104  
                                   ?_SetTarget 001B                          _TMR0_InterruptHandler 02DF  
                         ??_SetTdiTooLongAlarm 0001                                      _alarmData 0914  
                                    _atoi$5677 0113                                      _atoi$5678 0117  
                                    _atoi$5679 0115                          _TMR6_InterruptHandler 02D9  
                                    __pnvBANK2 02D9                       __size_of_TMR0_StartTimer 0004  
                                    _alarmPmax 02D7                __size_ofi2_ClearEPBelowSetAlarm 0016  
                                    _alarmStep 01F3                         __end_of_DisplayDisable AAB2  
                              ?_TMR0_StopTimer 0001                     __end_of_TMR4_Period8BitSet AD6C  
                       i2_ClearGasFailureAlarm AEF6                         __size_ofi2_GetTargetEp 0026  
                             ___lwdiv@dividend 0001                         _PIN_MANAGER_Initialize 7FAC  
                       __size_ofi2_GetTargetIp 0026                                     ?_MuteAlarm 0001  
                                    _dtoa$5181 0133                           __size_of_HigherAlarm 00B2  
                                   ?_TestAlarm 0183                              ?_UART1_Initialize 0001  
         __end_of_UART1_SetFramingErrorHandler AB96          __size_of_UART1_SetFramingErrorHandler 000E  
                 _UART1_SetFramingErrorHandler AB88                              ??_SeePressureV_pa 0120  
             __end_of_TMR1_SetInterruptHandler AC3E                                  __pmediumconst FC56  
                            ??i2_GetAlarmState 0007                                       ?___aldiv 0110  
                                     ?___aodiv 0104                                    ??i2_AdcInit 0007  
                                     ?___aomod 0104               __end_of_TMR4_SetInterruptHandler AC76  
                          UART1_Read@readValue 0104                                       ?___awdiv 010A  
                                    __ptext100 AFF4                                      __ptext101 AC3E  
                                    __ptext110 A962                                      __ptext102 A230  
                             ___aodiv@quotient 0116                                      __ptext111 A8CA  
                                    __ptext103 AC4C                                      __ptext200 ACA0  
                                    __ptext120 AAD2                                      __ptext112 A8E4  
                                    __ptext104 4E90                                      __ptext201 9882  
                                    __ptext121 7968                                      __ptext113 A8FE  
                                    __ptext105 AFF8                                      __ptext210 AF78  
                                    __ptext202 9EDC                                      __ptext130 ADC6  
                                    __ptext122 751A                                      __ptext114 B00C  
                                    __ptext106 AFFC                                      __ptext211 A5E4  
                                    __ptext203 A73A                                      __ptext131 A918  
                                    __ptext123 B020                                      __ptext115 B010  
                                    __ptext107 B000                                      __ptext300 ACE6  
                                    __ptext220 A2EA                                      __ptext212 A650  
                                    __ptext204 A75A                                      __ptext140 AE7E  
                                    __ptext132 29F4                                      __ptext124 A094  
                                    __ptext116 B014                                      __ptext108 B004  
                                    __ptext301 AD84                                      __ptext221 AF7E  
                                    __ptext213 8C0A                                      __ptext205 734A  
                                    __ptext141 AAE2                                      __ptext133 A3CC  
                                    __ptext125 AC5A                                      __ptext117 B018  
                                    __ptext109 B008                                      __ptext310 8B82  
                                    __ptext302 ACF4                                      __ptext230 A62C  
                                    __ptext222 B056                                      __ptext214 B052  
                                    __ptext206 9B98                                      __ptext150 951E  
                                    __ptext142 B028                                      __ptext134 B024  
                                    __ptext126 77B4                                      __ptext118 8C90  
                                    __ptext311 AF9C                                      __ptext303 AD90  
                                    __ptext231 6F44                                      __ptext223 264A  
                                    __ptext215 A1CC                                      __ptext207 85C0  
                                    __ptext151 7A40                                      __ptext143 AAF2  
                                    __ptext135 AC68                                      __ptext127 AE66  
                                    __ptext119 B01C                                      __ptext320 AEE6  
                                    __ptext312 AD10                                      __ptext304 A4DE  
                                    __ptext240 B038                                      __ptext232 B058  
                                    __ptext224 B02C                                      __ptext216 A608  
                                    __ptext208 B04E                                      __ptext160 8660  
                                    __ptext152 932A                                      __ptext144 AE86  
                                    __ptext136 AD60                                      __ptext128 AF42  
                                    __ptext321 A9D2                                      __ptext313 9926  
                                    __ptext305 A504                                      __ptext241 6402  
                                    __ptext233 4B1A                                      __ptext225 ACAE  
                                    __ptext217 9188                                      __ptext209 B050  
                                    __ptext161 228C                                      __ptext153 AF5A  
                                    __ptext145 AF48                                      __ptext137 AE6E  
                                    __ptext129 9D68                                      __ptext330 AFA8  
                                    __ptext322 A9E8                                      __ptext314 9F18  
                                    __ptext306 AD02                                      __ptext250 6E3E  
                                    __ptext242 81C2                                      __ptext234 A318  
                                    __ptext226 ADD0                                      __ptext218 B054  
                                    __ptext170 5604                                      __ptext162 95DA  
                                    __ptext154 AF60                                      __ptext146 AE8E  
                                    __ptext138 AE76                                      __ptext331 AFAE  
                                    __ptext323 AEEE                                      __ptext315 AD9C  
                                    __ptext307 A52A                                      __ptext251 9E22  
                                    __ptext243 86FA                                      __ptext235 AB02  
                                    __ptext227 AF84                                      __ptext219 A672  
                                    __ptext171 3A8E                                      __ptext163 8F5C  
                                    __ptext155 AF66                                      __ptext147 AF4E  
                                    __ptext139 A858                                      __ptext340 AE02  
                                    __ptext332 AFB4                                      __ptext324 AEF6  
                                    __ptext316 AED6                                      __ptext308 530C  
                                    __ptext260 A77A                                      __ptext252 A41E  
                                    __ptext244 AF8A                                      __ptext236 B030  
                                    __ptext228 A894                                      __ptext180 AD6C  
                                    __ptext172 9DA6                                      __ptext164 18EE  
                                    __ptext156 AF6C                                      __ptext148 AF54  
                                    __ptext341 9B06                                      __ptext333 AF16  
                                    __ptext325 A9FE                                      __ptext317 9AB8  
                                    __ptext309 5488                                      __ptext261 A79A  
                                    __ptext253 8478                                      __ptext245 A694  
                                    __ptext237 AB12                                      __ptext229 A1FE  
                                    __ptext181 9632                                      __ptext173 6544  
                                    __ptext165 3FBE                                      __ptext157 A3F6  
                                    __ptext149 6D38                                      __ptext350 A6D8  
                                    __ptext342 AFC6                                      __ptext334 AF1E  
                                    __ptext326 AA14                                      __ptext318 AEDE  
                                    __ptext270 A7FA                                      __ptext262 AEAE  
                                    __ptext254 9688                                      __ptext246 001E  
                                    __ptext238 724A                                      __ptext190 AC84  
                                    __ptext182 5BD6                                      __ptext174 6010  
                                    __ptext166 9830                                      __ptext158 62C0  
                                    __ptext351 B05C                                      __ptext343 AFCC  
                                    __ptext335 AF26                                      __ptext327 AEFE  
                                    __ptext319 AFA2                                      __ptext271 96DE  
                                    __ptext263 A7BA                                      __ptext255 8A70  
                                    __ptext247 B05A                                      __ptext239 B034  
                                    __ptext191 AD78                                      __ptext183 9BE0  
                                    __ptext175 945A                                      __ptext167 9F52  
                                    __ptext159 805E                                      __ptext360 A164  
                                    __ptext352 6678                                      __ptext344 AD1E  
                                    __ptext336 AFBA                                      __ptext328 AF06  
                                    __ptext280 957C                                      __ptext272 423C  
                                    __ptext264 A7DA                                      __ptext256 AF90  
                                    __ptext248 347C                                      __ptext192 A46C  
                                    __ptext184 9FF4                                      __ptext176 8110  
                                    __ptext168 9F88                                      __ptext361 577C  
                                    __ptext353 A576                                      __ptext345 B044  
                                    __ptext337 ADF8                                      __ptext329 AF0E  
                                    __ptext281 9390                                      __ptext273 A346  
                                    __ptext265 AF96                                      __ptext257 AE96  
                                    __ptext249 788E                                      __ptext193 A492  
                                    __ptext185 A2BC                                      __ptext177 978A  
                                    __ptext169 9FBE                                      __ptext370 8322  
                                    __ptext362 37DC                                      __ptext354 91F2  
                                    __ptext346 B048                                      __ptext338 AFC0  
                                    __ptext290 7B14                                      __ptext282 46DC  
                                    __ptext274 68E0                                      __ptext266 A02A  
                                    __ptext258 AE9E                                      __ptext194 AC92  
                                    __ptext186 8E02                                      __ptext178 9DE4  
                                    __ptext371 AE0C                                      __ptext363 9E60  
                                    __ptext355 1302                                      __ptext347 A6B6  
                                    __ptext339 A81A                                      __ptext291 ACCA  
                                    __ptext283 AEB6                                      __ptext275 ACBC  
                                    __ptext267 A0C8                                      __ptext259 AEA6  
                                    __ptext195 A4B8                                      __ptext187 AC76  
                                    __ptext179 7E3E                                       ?___awmod 0104  
                                    __ptext380 AD2C                                      __ptext372 9734  
                                    __ptext364 67AC                                      __ptext356 3D3C  
                                    __ptext348 A550                                      __ptext292 AECE  
                                    __ptext284 AEBE                                      __ptext276 B03C  
                                    __ptext268 93F6                                      __ptext196 5014  
                                    __ptext188 AA54                                      __ptext381 AFD2  
                                    __ptext373 5D46                                      __ptext365 6168  
                                    __ptext357 9978                                      __ptext349 AF2E  
                                    __ptext293 AA8E                                      __ptext285 ADDA  
                                    __ptext277 B040                                      __ptext269 925C  
                                    __ptext197 5190                                      __ptext189 AA68  
                                    __ptext382 AD3A                                      __ptext374 9C26  
                                    __ptext366 94BC                                      __ptext358 A0FC  
                                    __ptext294 AB22                                      __ptext286 ADE4  
                                    __ptext278 58F4                                      __ptext198 8AFA  
                                    __ptext383 AA2A                                      __ptext375 A198  
                                    __ptext367 7EF6                                      __ptext359 A130  
                                    __ptext295 AAA0                                      __ptext287 AEC6  
                                    __ptext279 7048                                      __ptext199 AF72  
                                    __ptext384 0000                                      __ptext376 8FCE  
                                    __ptext368 9A1A                                      __ptext296 1EC0  
                                    __ptext288 ADEE                                      __ptext377 A374  
                                    __ptext369 9E9E                                      __ptext297 98D4  
                                    __ptext289 7CB4                                      __ptext378 AB32  
                                    __ptext298 8E76                                      __ptext379 911A  
                                    __ptext299 ACD8                                       ?___lldiv 0001  
                ?_I2C2_SlaveSetWriteIntHandler 0104                                       ?___llmod 0104  
                             ?_AdcReStartCycle 0001                                       _I2C2ADB0 003D57  
                                     _I2C2ADR0 003D59                                       _I2C2ADR1 003D5A  
                                     ?___lwdiv 0001                             ??_UART1_Initialize 0106  
                                     _I2C2CON0 003D5D                                       _I2C2CON1 003D5E  
                                     _I2C2CON2 003D5F                           __size_of_DisplayTask 00A8  
                              ??i2_UART1_Write 0001                         __end_of_TMR5_StopTimer AFEC  
              __end_ofi2_ClearBatteryFailAlarm AF16                                _GetPressureV_pa 714A  
                             _uart1RxLastError 02B9                                  ??_UART1_Write 0104  
                            ?i2_GetPressure_pa 001B                                       _I2C2_Isr 925C  
                 ??_INTERRUPT_InterruptManager 0100                                    ??i2_GetPmax 0011  
                  __size_of_BaterryLowAlarmMed 0004                          ??_ClearVAboveMaxAlarm 0001  
                              ??_GetAlarmState 010A                                  ??i2_TMR4_Stop 0001  
                            __size_of_vfprintf 0072                                    ??_TMR4_Stop 0104  
                  ?i2_ClearBaterryLowAlarmHigh 0001                       _ClearBaterryLowAlarmHigh AF6C  
                                     _ADCC_ISR A6D8                              ?_MonitorFailAlarm 0001  
                             ?_GasFailureAlarm 0001                       ??_SetCircuitFailureAlarm 0001  
                 __size_of_CircuitFailureAlarm 0004                      __size_ofi2_MonitorDisable 0008  
                           ??i2_GetPressure_pa 001D                         __CFG_BBSIZE$BBSIZE_512 000000  
                               __size_of_LCDOn 000A                       __end_ofi2_TMR5_StopTimer B038  
                              _tdeTooLongAlarm 02A7                       __size_of_TMR1_StartTimer 0004  
                __size_of_ClearEPBelowSetAlarm 0014       __end_of_UART1_DefaultOverrunErrorHandler B050  
    __size_of_UART1_DefaultOverrunErrorHandler 0002             ??_UART1_DefaultOverrunErrorHandler 0001  
            ?_UART1_DefaultOverrunErrorHandler 0001               _UART1_DefaultOverrunErrorHandler B04E  
                                     ?_isalpha 0104                                       ?_isdigit 0104  
                      __size_of_ControllerInit 0040                                 __size_ofi2_abs 003E  
                               __size_of_Get5V 00DA                             ??_MonitorFailAlarm 0183  
                               __size_ofi2_pad 00B6                                 __size_of_GetEp 017C  
                               _AlarmCheckTask 4E90                                 __size_of_GetIp 017C  
                               __size_of_GetTe 0014                                 __size_of_GetTi 0014  
                                     ?_islower 0104                                       ?_isspace 0104  
                       __size_ofi2_HigherAlarm 00B2                                 __size_of_See5V 00DA  
                                     Get12V@mv 0128                          ??_BaterryLowAlarmHigh 0104  
                                     ?_isupper 0104                              ??i2_MonitorEnable 0001  
                                    _prFastDev 023C                       __size_of_PWM6_Initialize 0018  
                     __size_of_TMR4_Initialize 002E                         __size_of_DisplayEnable 0010  
                                 i2ClearVars@i 0001                                       _CMP1_ISR A6B6  
                             ___lwdiv@quotient 0005                                    ??i2___aldiv 0015  
                       i2_ClearIPAboveSetAlarm A9E8                              _SetCalibrateState 6A06  
                                  ??i2___aodiv 0011                                       ?_putchar 010F  
                                  ??i2___aomod 0011                                 __size_of_getch 0006  
                                    _tdeBuffer 0375                                    ??i2___awdiv 000B  
                                  ??i2___awmod 0005                                       ?_sprintf 0171  
                           _SetEPAboveSetAlarm A7DA                         MonitorPressureTask@v12 009B  
            __size_of_GetControllerBuzzerCheck 0012                                       Get5V@v12 0126  
                               __size_of_fputc 00B8                                       _T2CLKCON 003FAE  
                               __size_of_fputs 003E                      ?_GetControllerBuzzerCheck 0001  
                       MonitorPressureTask@cnt 023A                                       ?_toupper 010A  
                                     Get5V@adc 0124                                 __size_of_isqrt 00A6  
                                  _U1ERRIRbits 003DF9                      i2_ClearBaterryLowAlarmMed AFA8  
                       MonitorPressureTask@tmp 00B1                              ?_SetVolumeControl 0001  
                                     _T4CLKCON 003FA2                                      _tdiBuffer 0361  
                                ?_AlarmHandler 0001                                 __size_of_putch 000C  
                         _INTERRUPT_Initialize AFE0                                       _T6CLKCON 003F96  
                           ?_SetCalibrateState 0001                                  ?_AlarmDisplay 01B7  
                                   _I2C2SDAPPS 003AE4                   __end_ofi2_UnDisplayCalibrate ACCA  
                              ??_MonitorEnable 0104              _I2C2_SlaveDefAddrInterruptHandler 000000  
                                   _I2C2SCLPPS 003AE3                          _ADCC_IsConversionDone AD3A  
                      __size_of_VBelowMinAlarm 0004                                 _I2C2_SlaveOpen ADBC  
                              ___aldiv@divisor 0114                              ??_TMR0_Initialize 0106  
                           ??_SetVolumeControl 0001                                ___aldiv@counter 0118  
                             ??_GetPressure_pa 0120                           _I2C2_SlaveRdCallBack A81A  
                 __end_of_HighPressureAlarmLow 8D12                                 ___wmul@product 0108  
                        ?_ClearTdeTooLongAlarm 0001                             DisplayCalibrate@pr 0093  
                                     _LATAbits 003FBA          UART1_SetErrorHandler@interruptHandler 0104  
                                    _prSlowDev 0242                                       _LATCbits 003FBC  
                                     _LATDbits 003FBD                    __size_of_SetTdeTooLongAlarm 0008  
                                  ??_AlarmInit 0106                            ?_SetEPAboveSetAlarm 0001  
                                 ?_UpdateState 0001                           __end_ofi2_BuzzerTask 29F4  
                                     _PIE1bits 003991                          __size_ofi2_AdcGetData 0066  
                                     _PIE3bits 003993                                       _PIE4bits 003994  
                                     _PIE5bits 003995                                    ??i2_isalpha 0003  
                                     _PIE6bits 003996                                    ??i2_isdigit 0003  
                                    _ttNoAlarm 025C                                       _PIE7bits 003997  
                                     _PIE8bits 003998                            __CFG_BORV$VBOR_2P45 000000  
                                     _PIE9bits 003999                               _controlFailAlarm 00F2  
                        __size_ofi2_TMR4_Start 0004                                  ??i2_ClearVars 0001  
                              ?_DisplayDisable 0001                            _ClearVBelowMinAlarm AFB4  
                                  ??_ClearVars 0104                              i2_TMR0_StartTimer B040  
                          ??_SetCalibrateState 0183                                       i2_LCDOff ADE4  
                                    _targetLow 01E7                       __size_of_TMR1_WriteTimer 0024  
                             ?_IPAboveSetAlarm 0001                  ??_UART1_SetRxInterruptHandler 0106  
                      __end_of_IPBelowSetAlarm A8E4                                    ??i2_islower 0003  
                                  ??i2_isspace 0003            __size_of_INTERRUPT_InterruptManager 00EC  
                             i2_vfpfcnvrt$5217 0074                     ??_TMR0_SetInterruptHandler 0106  
                                     _PIR1bits 0039A1                                    ??i2_isupper 0003  
                                     _PIR3bits 0039A3                                       _PIR4bits 0039A4  
                                     _PIR5bits 0039A5                                      _normalSV1 029F  
                                     _PIR6bits 0039A6                                       _PIR7bits 0039A7  
                                     See12V@mv 0128                                       _PIR8bits 0039A8  
                                     _PIR9bits 0039A9                          __size_ofi2_AdcSeeData 003E  
                   ??_TMR6_SetInterruptHandler 0106                           __size_of_InitDisplay 000C  
                             AlarmCheckTask@id 02FE                         ?i2_SetMonitorFailAlarm 0001  
                     __size_of_TMR5_Initialize 0050                               _BuzzerCMPHandler A550  
                                    _testAlarm 0326                      ??_I2C2_SlaveClearStopFlag 0001  
                           ?i2_TMR0_StartTimer 0001             __end_ofi2_ClearCircuitFailureAlarm AF0E  
                   i2_ClearCircuitFailureAlarm AF06            __size_of_ClearHighPressureAlarmHigh 0008  
                                  ??i2_sprintf 0057                                  _I2C2STAT1bits 003D62  
                                     _TMR0_ISR A694                               i2ValueDisplay@dr 00AB  
                             i2ValueDisplay@er 00B6                                       _TMR1_ISR A1FE  
                             i2ValueDisplay@pe 009D                               i2ValueDisplay@pi 009B  
                             i2ValueDisplay@te 00B9                               i2ValueDisplay@ti 00BB  
                                     _TMR4_ISR A672                     __end_of_UART1_Transmit_ISR 9BE0  
                                     _TMR5_ISR A1CC                                       i2_GetBpm AD10  
                                     _TMR6_ISR A650                                    ??i2_toupper 0009  
                                     i2_GetTde AD90                                       i2_GetTdi ACF4  
                                     i2_See12V 6E3E                                       See5V@v12 0126  
                                     i2_GetSpr AD02                                  ??i2_GetVolume 0003  
              __size_ofi2_ClearIPBelowSetAlarm 0016                  ?_UART1_SetFramingErrorHandler 0104  
                                  _LCDMessage1 A71A                                       See5V@adc 0124  
                                  ??_GetVolume 0106                                    _LCDMessage2 A446  
                              ?_TMR5_StopTimer 0001                                       _AdcReady AFD2  
                        __size_of_ValueDisplay 03BE                               LCDMessage12@str1 0110  
                             LCDMessage12@str2 0112                                       i2_SetSV1 A346  
                                    _vfpfcnvrt 18EE                             _SetGasFailureAlarm AEAE  
                                    _xtoa$5202 0134                                      _xtoa$5203 0136  
                            ??_TMR1_Initialize 0106                                     _ADCON0bits 003EF8  
                          ??i2_TMR0_StartTimer 0001                              ___wmul@multiplier 0104  
                      ?_ControllerTimerHandler 0001                                       i2___lmul 957C  
                         ??_SetEPAboveSetAlarm 0001                         __end_of_AlarmCheckTask 5014  
                 __end_of_ClearTdiTooLongAlarm AF26                                       i2___wmul A374  
                       i2_ClearEPBelowSetAlarm A9FE                        __size_of_FVR_Initialize 0008  
                                ??i2_HistAlarm 005C                                    ??_HistAlarm 02F5  
                            GetPressureV_pa@mv 0124                                   ?_StopHandler 0001  
                              _commandReceived 029B                           ?_ClearVBelowMinAlarm 0001  
                    ??i2_ClearMonitorFailAlarm 0001                                       _AlarmSet A73A  
                                i2_GetTargetEp A504                                  i2_GetTargetIp A4DE  
                             __size_of_LCDInit 00E4                      __end_of_SetCalibrateState 6B28  
                            i2___awdiv@divisor 0009                               __size_of_LCDTest 0090  
                          ?_SetGasFailureAlarm 0001              __size_of_TMR5_SetInterruptHandler 000E  
                                     _AnyAlarm 9EDC                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0104                            __end_of_UART1_Write 9688  
                                 _prSlowBuffer 0432                                      _volumeAcc 0222  
                                     i2_printf A576                                       i2pad@buf 0015  
                                    _volumeMax 0266                                      _volumeMin 0264  
                            GetPressure_pa@p32 0122                                   _isspace$5704 010A  
                             ??i2_AlarmDisplay 0057                                       i2ctoa@fp 001E  
                             __size_ofi2_LCDOn 000A                  __size_ofi2_GetDisableAlarmSV1 0006  
                     __size_of_TMR6_Initialize 002E                              GetPressure_pa@adc 0126  
                        __end_ofi2_CMP1_Enable AEDE                                       i2dtoa@fp 001E  
                          __end_ofi2_TMR4_Stop B034                                       i2_strlen 9A1A  
                               _SetMaxPressure ACCA                               i2AdcSeeData@data 0009  
                                   vfpfcnvrt@c 0168                                    _LCDWriteCmd 8792  
                               ??_AlarmHandler 005B                                    _INTCON0bits 003FD2  
                               _VAboveMaxAlarm B000                          __end_of_BuzzerHandler AF84  
                       __end_of_I2C2_SlaveOpen ADC6                              ___lmul@multiplier 0104  
                                 i2_AdcGetData 9390                                      copy_data0 7BFC  
                                    copy_data1 7C22                                       i2fputc@c 0003  
                                    copy_data2 7C44                               __size_ofi2_GetEp 017C  
                             __size_ofi2_GetIp 017C                          ?_INTERRUPT_Initialize 0001  
                             __size_ofi2_GetTe 000C                               __size_ofi2_GetTi 000E  
                               ??_AlarmDisplay 01BB                                       i2fputs@c 0010  
                __size_of_ClearIPBelowSetAlarm 0016                                  ??i2_BuzzerOff 0001  
                                     i2fputs@i 0011                               __size_ofi2_See5V 00DA  
                                     i2fputs@s 000C                                   i2_TMR4_Start B02C  
                          BatteryFailAlarm@bat 012C                               __size_of_AdcInit 0074  
                                  ??_BuzzerOff 0104                               ?_DisableAlarmSV1 0001  
                                  ??_BuzzerSet 0185                             i2___awmod@dividend 0001  
                     _SetHighPressureAlarmHigh AF42                          _HighPressureAlarmHigh B018  
                           i2___aldiv@dividend 000D                       i2SetCalibrateState@calib 005B  
                             ?_EPBelowSetAlarm 0001                              ??_TdeTooLongAlarm 0104  
                       ?_ClearControlFailAlarm 0001                         _uart1TxBufferRemaining 02EB  
                        ?_I2C2_SlaveRdCallBack 0001                                  i2SetSV1@value 005B  
                                 i2_AdcSeeData 9E22                              ??_TMR2_Initialize 0104  
                 __size_of_SetControlFailAlarm 0008                           __size_of_BuzzerCheck 0096  
                         __size_of_BuzzerClear 0010                                       i2stoa@cp 001C  
                                     i2stoa@fp 000C                               __size_ofi2_fputc 00AE  
                             __size_ofi2_fputs 003E                      __end_ofi2_TMR0_StartTimer B044  
               ??_TMR5_DefaultInterruptHandler 0001                 _I2C2_SlaveAddrInterruptHandler 0290  
                  ??i2_ClearNoPowerSupplyAlarm 0001                                 _AlarmUpdateLCD 62C0  
                                     _BuzzerOn A858                               __size_ofi2_putch 000A  
                             __size_of_GetPmax 0026                                    ??_SetTarget 0027  
                           _SetIPAboveSetAlarm A79A                                       i2xtoa@fp 001E  
                             __size_of_DumpI2C 0002                                   _uart1RxCount 01F5  
                      ?_I2C2_SlaveStopCallBack 0001                                    _maxPressure 0250  
                            _AlarmDisplay$4015 01BC                              _AlarmDisplay$4016 01BE  
                                 _ValueDisplay 228C                 _I2C2_SlaveStopInterruptHandler 0292  
                                     __Hrparam 0000                                  i2_HigherAlarm 81C2  
             __end_of_ADCC_GetConversionResult AA40                           ??_SetGasFailureAlarm 0001  
                      __end_of_GetPressureV_pa 724A                                  ??i2_MuteAlarm 005C  
                                  ??_MuteAlarm 0184                           __size_of_SetAlarmLED 000E  
                                   vfprintf@ap 016D                                       __Lrparam 0000  
                                   vfprintf@fp 0169                                    ??_TestAlarm 0185  
                         __size_of_SetAlarmSV1 0034                                  _DisplayEnable AB22  
               __size_of_ControllerBuzzerCheck 000C                          _SetBaterryLowAlarmMed AF4E  
                           __CFG_BOREN$SBORDIS 000000                               LCDMessage@length 010C  
                __end_of_ControllerBuzzerCheck ADA8                      __size_ofi2_EnableAlarmSV1 0008  
                         UpdateState@initPhase 005C                        HighPressureAlarmLow@max 0117  
                                ?_CMP1_Disable 0001                            ?_SetIPAboveSetAlarm 0001  
                              ValueDisplay@cnt 0288                                ValueDisplay@ete 01A2  
                              ValueDisplay@eti 01A1                                ValueDisplay@tde 01AC  
                              ValueDisplay@tdi 01AA                                ValueDisplay@spr 019D  
                              ValueDisplay@vol 0199                        __size_ofi2_ValueDisplay 03CC  
                    HighPressureAlarmLow@count 0276                        ??_OSCILLATOR_Initialize 0104  
                          _SetMonitorFailAlarm AE6E                              ??_TMR0_StartTimer 0104  
                             __size_of___aldiv 00D4                               __size_of___aodiv 0158  
                             __size_of___aomod 0134                               __size_of___awdiv 0088  
                             __size_of___awmod 0074                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 008A                            __end_ofi2_ClearVars 4920  
                              LCDWriteCmd@data 0104                             _noPowerSupplyAlarm 02A4  
                             __size_of___llmod 006E                                     ?_vfpfcnvrt 0148  
                              ClearVars@i_4909 0106                 __end_of_ControllerTimerHandler 8C90  
                             __size_of___lwdiv 0056                           _I2C2_SlaveSetCounter ADF8  
                              LCDWriteChar@chr 0104                         __size_ofi2_BuzzerClear 0010  
                             SeePressureV_pa@p 0124                      ControllerTimerHandler@cnt 022C  
                              ___aodiv@divisor 010C                       _TMR1_SetInterruptHandler AC30  
                  __end_ofi2_SetCalibrateState 6A06                                    _minPressure 00D4  
                              ___aodiv@counter 0114                             i2___aldiv@quotient 0017  
                  ?i2_TMR4_SetInterruptHandler 0001                       _TMR4_SetInterruptHandler AC68  
                           i2AlarmUpdateLCD@id 00C1                                   i2HistAlarm@i 005E  
                                     _pHighAcc 021E                 ??_I2C2_SlaveSetWriteIntHandler 0106  
                              ?_AlarmCheckTask 0001                               SeePressure_pa@mv 0128  
                        ??_ClearVBelowMinAlarm 0001                          _TMR1_InterruptHandler 02DB  
         __size_of_UART1_SetRxInterruptHandler 000E                __size_of_SetCircuitFailureAlarm 0006  
                               ?i2_GetTargetEp 000F                                     sprintf@fmt 0173  
                               ?i2_GetTargetIp 000F                       __end_of_BatteryFailAlarm 75FC  
                      ??_ClearMonitorFailAlarm 0104                                       _alarmSV1 02A0  
                          __end_ofi2_GetVolume ACE6                       __size_of_TMR5_StartTimer 0004  
                                   _T0CON0bits 003FB8                       __size_of_ADCC_Initialize 006E  
                        i2GetPressureV_pa@adcv 001F                          __size_of_AdcDataReady 0028  
                       __end_of_SetMaxPressure ACD8                         __size_ofi2_SetAlarmSV1 002E  
                             __size_of_isalpha 0036                               __size_of_isdigit 0036  
               I2C2_SlaveSetSlaveMask@maskAddr 0104                         __end_of_VAboveMaxAlarm B004  
                                     __pivt0x8 0008                                ___lwdiv@divisor 0003  
                  __size_of_GetPressure_mbar02 0036                       _MonitorPressureTask$4901 00AB  
                     _MonitorPressureTask$4902 00AD                       _MonitorPressureTask$4891 00A5  
                     _MonitorPressureTask$4888 00A3                       _MonitorPressureTask$4898 00A7  
                     _MonitorPressureTask$4899 00A9                                   _I2C2CON0bits 003D5D  
                             __size_of_islower 0036                               __size_of_isspace 0046  
                              ___lwdiv@counter 0007                                       _detected 00F4  
                             ??_SeePressure_pa 0120                                       __ptext10 AFDC  
                                     __ptext11 5A66                                       __ptext20 AB88  
                                     __ptext12 714A                                       __ptext21 AB96  
                                     __ptext13 5EB6                                       __ptext30 7FAC  
                                     __ptext22 A260                                       __ptext14 75FC  
                                     __ptext31 A94A                                       __ptext23 99CA  
                                     __ptext15 9C6A                                       __ptext40 AE2E  
                                     __ptext32 AFE0                                       __ptext24 A28E  
                                     __ptext16 7D7E                                       __ptext41 AE36  
                                     __ptext33 AA7C                                       __ptext25 A83A  
                                     __ptext17 AB5E                                       __ptext50 AE3E  
                                     __ptext42 8EEA                                       __ptext34 AE16  
                                     __ptext26 97DE                                       __ptext18 AB6C  
                                     __ptext51 8D8E                                       __ptext43 AFE4  
                                     __ptext35 A6FA                                       __ptext27 A59C  
                                     __ptext19 AB7A                                       __ptext60 ADA8  
                                     __ptext52 AAB2                                       __ptext44 ABA4  
                                     __ptext36 90AC                                       __ptext28 A932  
                                     __ptext61 ADB2                                       __ptext53 ABB2  
                                     __ptext45 4496                                       __ptext37 4920  
                                     __ptext29 A5C0                                       __ptext70 83D0  
                                     __ptext62 AD48                                       __ptext54 AE46  
                                     __ptext46 A97A                                       __ptext38 AE1E  
                                     __ptext71 A446                                       __ptext63 7436  
                                     __ptext55 311C                                       __ptext47 A990  
                                     __ptext39 AE26                                       __ptext80 AFEC  
                                     __ptext72 9D2A                                       __ptext64 9A6A  
                                     __ptext56 76DA                                       __ptext48 AA40  
                                     __ptext81 ABC0                                       __ptext73 A71A  
                                     __ptext65 8954                                       __ptext57 6C32  
                                     __ptext49 A9A6                             _GetDisableAlarmSV1 AF72  
                                     __ptext90 AC14                                       __ptext82 ABCE  
                                     __ptext74 8792                                       __ptext66 6B28  
                                     __ptext58 9CEC                                       __ptext91 AC22  
                                     __ptext83 92C4                                       __ptext75 851E  
                                     __ptext67 AFE8                                       __ptext59 AE4E  
                                     __ptext92 ADBC                                       __ptext84 ABDC  
                                     __ptext76 8828                                       __ptext68 AE56  
                                     __ptext93 A9BC                                       __ptext85 ABEA  
                                     __ptext77 AE5E                                       __ptext69 B04C  
                                     __ptext94 89E4                                       __ptext86 AAC2  
                                     __ptext78 9CAC                                       __ptext95 88BE  
                                     __ptext87 AD54                                       __ptext79 AF3C  
                                     __ptext96 A3A2                                       __ptext88 ABF8  
                                     __ptext97 AFF0                                       __ptext89 AC06  
                                     __ptext98 AC30                                       __ptext99 8D12  
                             __size_of_isupper 0036                           ??_SetIPAboveSetAlarm 0001  
                              i2MuteAlarm@high 0086                         i2_ClearIPBelowSetAlarm A9D2  
                                 i2_GetEp$4808 0014                                   i2_GetEp$4809 0016  
                         ?_SetMonitorFailAlarm 0001                                ?_I2C2_SlaveOpen 0001  
                           _SetEPBelowSetAlarm A7BA                            __end_ofi2_HistAlarm 734A  
                       ?_ADCC_IsConversionDone 0001                 __size_of_UART1_SetErrorHandler 000E  
         __end_of_SetVeryHighPressureAlarmHigh AE6E          __size_of_SetVeryHighPressureAlarmHigh 0008  
                 _SetVeryHighPressureAlarmHigh AE66                               __size_of_putchar 001A  
                            ??_TMR1_StartTimer 0104                  __end_of_UART1_SetErrorHandler ABA4  
                  ??_VeryHighPressureAlarmHigh 0104                                   i2_GetIp$4811 0014  
                                 i2_GetIp$4812 0016                               __size_of_sprintf 0058  
                             __size_of_toupper 0052                   MonitorPressureTask@halfLimit 009F  
                       __end_of_AlarmUpdateLCD 6402                         ??_ClearTdeTooLongAlarm 0001  
                      i2_ClearControlFailAlarm AEFE                            _I2C2_SlaveClearBuff B048  
                                  i2AnyAlarm@i 0003                              ??_TMR4_Initialize 0106  
                            ??_PWM6_Initialize 0104                                  __size_of_atoi 0170  
             __size_ofi2_ClearBatteryFailAlarm 0008                                  __size_of_ctoa 0062  
                          ?_GetDisableAlarmSV1 0001                                  __size_of_main 0380  
               __end_of_I2C2_SlaveStopCallBack A81A                                  __size_of_dtoa 02AE  
                 __end_of_ClearEPAboveSetAlarm A9BC                          MonitorPressureTask@v1 00A1  
                        MonitorPressureTask@v2 00C1                          MonitorPressureTask@v5 009D  
                      __size_of_MonitorDisable 0008                          _ClearBatteryFailAlarm AF60  
                        MonitorPressureTask@pr 00C3                       ?_ClearBaterryLowAlarmMed 0001  
                                __size_of_stoa 0178                                  __size_of_xtoa 027E  
                         __size_of_MonitorDump 0360                           __size_of_MonitorInit 0072  
                                  _buzzerState 02B3                            _I2C2_SlaveEnableIrq A9BC  
                          ?_SetEPBelowSetAlarm 0001                        ?_SetBaterryLowAlarmHigh 0001  
         __end_of_TMR0_DefaultInterruptHandler B05C          __size_of_TMR0_DefaultInterruptHandler 0002  
                 _TMR0_DefaultInterruptHandler B05A               __end_of_ClearCircuitFailureAlarm AE46  
                          _I2C2_SlaveGetRxData AFCC                                 ?i2_HigherAlarm 0007  
                         __CFG_WDTCWS$WDTCWS_7 000000                       __end_ofi2_AlarmUpdateLCD 6544  
                     __size_of_CMP1_Initialize 0020                               ??i2_CMP1_Disable 0001  
                  __size_of_NoPowerSupplyAlarm 0004                            __end_ofi2_BuzzerOff AB22  
                                AdcHandler@cnt 026C                       __size_of_TMR6_StartTimer 0006  
                               ?_DisplayEnable 0001                                       _targetBp 0268  
                     __size_of_TMR5_WriteTimer 0024                               ?_IPBelowSetAlarm 0001  
                                  i2See12V@v12 0023                                    i2See12V@adc 0021  
                    _UART1_OverrunErrorHandler 02E7                      _ADCC_ADI_InterruptHandler 02F3  
                                    stoa@F1144 02D0   UART1_SetOverrunErrorHandler@interruptHandler 0104  
                    _veryHighPressureAlarmHigh 02AC                                 ??_CMP1_Disable 0104  
                              _checkController 02B2                          _MonitorFailAlarm$4446 0183  
                  __size_of_UnDisplayCalibrate 000E                                i2ValueDisplay@r 00B7  
           __size_of_ClearHighPressureAlarmLow 0006             __size_of_UART1_DefaultErrorHandler 0006  
                               UpdateState@cnt 0230                   __end_of_ADCC_StartConversion AAC2  
                               UpdateState@old 0298                                     _LCDMessage 851E  
                   ?_UART1_DefaultErrorHandler 0001                        ??_I2C2_SlaveIsRxBufFull 0001  
                                   AlarmInit@i 0106                              ?i2_TMR0_StopTimer 0001  
                      ?i2_ClearEPAboveSetAlarm 0001                                       _vfprintf 8F5C  
                                   AlarmSet@id 0104             __end_of_INTERRUPT_InterruptManager 7436  
                  I2C2_SlaveSetCounter@counter 0001                     _INTERRUPT_InterruptManager 734A  
                        ?_I2C2_SlaveSetCounter 0001                               GetPressureV_pa@p 0128  
                                 _AdcDataReady A3F6                                      printf@fmt 0171  
                         ?_I2C2_SlaveClearBuff 0001                              ??_TMR1_WriteTimer 0003  
                            _UART1_is_rx_ready AB42                           DisplayCalibrate@offv 0099  
                          __end_ofi2_MuteAlarm 4D00                                    _UART1_Write 9632  
                           ??i2_TMR0_StopTimer 0001                           ??_GetDisableAlarmSV1 0104  
                         i2_UnDisplayCalibrate ACBC                               GetPressure_pa@mv 0128  
                    i2_ClearNoPowerSupplyAlarm AFA2                              ??_TMR5_Initialize 0106  
                             ___aomod@dividend 0104                  __size_ofi2_TMR4_Period8BitSet 000A  
                       __size_ofi2_MonitorDump 0360                                    i2_TMR4_Stop B030  
                             i2_MonitorDisable AEBE                              ?_DisplayCalibrate 0093  
                           ?_UART1_is_rx_ready 0001                  HighPressureAlarmLow@countVery 0274  
                         ?_I2C2_SlaveEnableIrq 0001                           _HighPressureAlarmLow 8C90  
                         ??_SetEPBelowSetAlarm 0001                              i2___awmod@divisor 0003  
                      __size_ofi2_AdcDataReady 0028                 ??_UART1_SetFramingErrorHandler 0106  
                         ?_I2C2_SlaveGetRxData 0001                                 _ControllerInit 9CAC  
                            i2___awmod@counter 0005                                 _vfpfcnvrt$5217 0166  
              I2C2_SlaveSetSlaveAddr@slaveAddr 0104                    __end_of_UART1_RxDataHandler A608  
                                  _uart1RxHead 01F7                        ?i2_ADCC_StartConversion 0001  
                 __end_of_ClearGasFailureAlarm AE36                          i2___lmul@multiplicand 0005  
                                  _uart1TxHead 01F1                     __size_of_SetCalibrateState 0122  
                           ??_DisplayCalibrate 0057                                    _uart1RxTail 01F6  
                              ?_SetMaxPressure 0001                              ?_ControlFailAlarm 0001  
                             ??_ReceiveHandler 0001                                    _uart1TxTail 00E8  
                            i2_TMR5_StartTimer B038                              i2_ADCC_Initialize 911A  
                              ?_VAboveMaxAlarm 0001                                     ClearVars@i 0104  
                                 HigherAlarm@i 0113                       __size_of_TdiTooLongAlarm 0004  
                                 ?_CMP1_Enable 0001                                       isalpha@c 0104  
                               ValueDisplay@dr 01A5                                 ValueDisplay@er 01B0  
                                     isdigit@c 0104                                 ValueDisplay@pe 0197  
                               ValueDisplay@pi 0195                                 ValueDisplay@te 01B3  
                       ??_INTERRUPT_Initialize 0104                                 ValueDisplay@ti 01B5  
                        ??_SetMonitorFailAlarm 0104                            ??_UART1_is_rx_ready 0104  
                           ??_ControlFailAlarm 0104                             ?i2_TMR5_StartTimer 0001  
                           ?i2_ADCC_Initialize 0001                         ?_HighPressureAlarmHigh 0001  
         __end_of_TMR6_DefaultInterruptHandler B054          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler B052                          __size_ofi2_BuzzerTask 03AA  
                       ??_I2C2_SlaveRdCallBack 0005           __end_of_ADCC_DefaultInterruptHandler B05E  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler B05C  
                              SeePressure_pa@p 012C                                       intlevel2 0000  
                                    sprintf@ap 0185                                 _VBelowMinAlarm AFFC  
                             ??_TMR0_StopTimer 0104                                   AdcGetData@id 010A  
                              _SeePressureV_pa 75FC                       BatteryFailAlarm@timeFail 027A  
                              ?_AlarmUpdateLCD 0001                                  i2_BuzzerClear AB02  
                              i2_GetAlarmState 9926                  ?_SetVeryHighPressureAlarmHigh 0001  
                        MonitorFailAlarm@cnt5v 0278                                       islower@c 0104  
               __end_of_SetBaterryLowAlarmHigh AF5A                        ?i2_ClearGasFailureAlarm 0001  
                                     isspace@c 0104                               ___lldiv@dividend 0001  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 0106  
                   __size_ofi2_TMR0_StartTimer 0004                                       isqrt@one 0009  
                                     isqrt@res 0007                            ??i2_TMR5_StartTimer 0001  
                       _SetCircuitFailureAlarm AF96                            _CircuitFailureAlarm B014  
                            __CFG_CLKOUTEN$OFF 000000                            ??i2_ADCC_Initialize 0003  
                           _SetIPBelowSetAlarm A77A                                       isupper@c 0104  
                         _ClearTdiTooLongAlarm AF1E                               _batteryFailAlarm 00F3  
                       ?_SetBaterryLowAlarmMed 0001                                  i2_SetAlarmSV1 A318  
                            _SetVAboveMaxAlarm AE96                                    i2_ClearVars 46DC  
         __size_of_I2C2_SlaveSetStopIntHandler 000E                               ?_GetPressureV_pa 011E  
                          _uart1RxStatusBuffer 020A                  ?_TMR0_DefaultInterruptHandler 0001  
                         __size_of_UpdateState 025A                     ??_ClearBaterryLowAlarmHigh 0104  
                                   i2See12V@mv 0025                                 AdcSeeData@data 010C  
                 __end_of_ClearIPAboveSetAlarm A9A6                 __end_ofi2_ClearEPAboveSetAlarm AA2A  
                           ?_SetVAboveMaxAlarm 0001                                       printf@ap 0181  
                    __end_of_UART1_is_rx_ready AB50                                     _UART1_Read 9B50  
          I2C2_SlaveSetWriteIntHandler@handler 0104                            ?_SetIPBelowSetAlarm 0001  
 UART1_SetFramingErrorHandler@interruptHandler 0104                      _VeryHighPressureAlarmHigh B020  
                              AlarmHandler@cnt 026E                                     i2See5V@v12 0023  
                         __end_of_AlarmHandler 91F2                             AlarmCheckTask@type 02FC  
                     _ADCC_GetConversionResult AA2A                                i2_MonitorEnable AEB6  
                        ??_I2C2_SlaveClearBuff 0001                                     i2See5V@adc 0021  
            __end_of_UART1_DefaultErrorHandler AF7E                                ___aomod@divisor 010C  
                                  i2_GetVolume ACD8                                  ??i2_vfpfcnvrt 004B  
                         __end_of_AlarmDisplay 86FA                                    ??_vfpfcnvrt 014E  
                                     stoa@nuls 0114                                ___aomod@counter 0114  
             __end_of_GetControllerBuzzerCheck AAA0                          ?i2_UnDisplayCalibrate 0001  
                      __size_of_GetMaxPressure 003E                                       putchar@c 010F  
                       __end_of_ControllerInit 9CEC                                ??i2_GetTargetEp 0011  
                            AlarmDisplay@alarm 01B9                                ??i2_GetTargetIp 0011  
                        ??_I2C2_SlaveEnableIrq 0104                          ?_HighPressureAlarmLow 0001  
                         ?_CircuitFailureAlarm 0001                          __end_of_ClearAllAlarm 9B06  
                          ??_SetVAboveMaxAlarm 0001                                 _FVR_Initialize AE16  
                        ??_I2C2_SlaveGetRxData 0001                             _TMR4_Period8BitSet AD60  
               __end_ofi2_ADCC_StartConversion AB42                  i2TMR4_Period8BitSet@periodVal 0001  
                                ??_GetTargetEp 0114                                  ??_GetTargetIp 0114  
                                     sprintf@f 0187                                       sprintf@s 0171  
                    __end_ofi2_TMR5_StartTimer B03C                      __end_ofi2_ADCC_Initialize 9188  
                        __end_of_ClearAlarmLED ADD0                                   i2_BuzzerTask 264A  
                             ___lldiv@quotient 0009                                    i2_HistAlarm 724A  
                      ?i2_ClearIPAboveSetAlarm 0001                              ?i2_TMR5_StopTimer 0001  
                              _TMR0_Initialize A59C                     __end_of_CMP1_SetIntHandler AC5A  
                           i2ValueDisplay@dtde 00AA                             i2ValueDisplay@dtdi 00A9  
                           i2ValueDisplay@etde 00B5                             i2ValueDisplay@etdi 00B4  
                              _tdiTooLongAlarm 02A8                             i2ValueDisplay@pmax 00A1  
                                     toupper@c 010A                      __size_of_UART1_Initialize 00C0  
                                   i2_AnyAlarm 9F18                                   ___aldiv@sign 0119  
                      __size_of_EnableAlarmSV1 0008                               i2_MuteAlarm$4543 0085  
                         __size_of_StopHandler 0056                             ??i2_TMR5_StopTimer 0001  
                     __end_of_BuzzerCMPHandler A576                            ?_TMR4_Period8BitSet 0001  
                       __end_of_VBelowMinAlarm B000                      ??i2_ClearControlFailAlarm 0001  
                     _UART1_TxInterruptHandler 02EF                                     _AdcGetData 932A  
                         ??_SetIPBelowSetAlarm 0001                                     _AdcHandler 6678  
                                   _TMR4_Start B024                __end_of_ClearBaterryLowAlarmMed AF6C  
                             SetAlarmSV1@value 0183                                     _TMR6_Start AFEC  
                        _SetNoPowerSupplyAlarm AF48                                  _displayStatus 0272  
                               i2_isspace$5704 0007                                 ?i2_BuzzerClear 0001  
                                 ___aodiv@sign 0115                      __size_ofi2_GetPressure_pa 0172  
               __end_ofi2_ClearGasFailureAlarm AEFE                              ??_TMR5_StartTimer 0104  
                                  i2_BuzzerOff AB12                               AlarmDisplay@type 01B7  
                             ??_DisplayDisable 0057                 __end_of_PIN_MANAGER_Initialize 805E  
                            ??_ADCC_Initialize 0106                   __size_of_MonitorPressureTask 12E4  
                                   _AdcSeeData 9CEC                  ?_TMR6_DefaultInterruptHandler 0001  
                       ?_ClearBatteryFailAlarm 0001                       __size_of_I2C2_Initialize 0012  
                           i2___aodiv@dividend 0001                                   AdcSeeData@id 010A  
                           __size_of_I2C2_Read 0006                             __size_of_I2C2_Open 0066  
                    __size_of_MonitorFailAlarm 00D8                   __size_of_SetBatteryFailAlarm 0008  
                ?_ADCC_DefaultInterruptHandler 0001                                ??i2_HigherAlarm 0009  
                                i2_MonitorDump 347C                                AlarmDisplay@cnt 0286  
                    __end_of_SetVAboveMaxAlarm AE9E                   __end_of_ClearEPBelowSetAlarm AA54  
                                ??_HigherAlarm 010C                                ??_DisplayEnable 0057  
                                   i2_BuzzerOn A894                   ?_UART1_SetTxInterruptHandler 0104  
                                  _veryHighSV1 00FF                        ??i2_SetMonitorFailAlarm 0001  
                        ?_ClearTdiTooLongAlarm 0001             MonitorFailAlarm@monitorFailAlarm5V 00F1  
                  __size_of_SetTdiTooLongAlarm 0008                                 ?i2_SetAlarmSV1 0001  
                                 ___aomod@sign 0115                                _TMR1_Initialize 97DE  
                                AlarmDisplay@t 01BB                               ??_TMR5_StopTimer 0104  
                                ??_DisplayTask 0114                       __size_of_EPAboveSetAlarm 001A  
                                  i2_MuteAlarm 4B1A  
